

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 20 09:44:36 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    32                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    35                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	text0,global,reloc=2,class=CODE,delta=1
    37                           	psect	text1,global,reloc=2,class=CODE,delta=1
    38                           	psect	text2,global,reloc=2,class=CODE,delta=1
    39                           	psect	text3,global,reloc=2,class=CODE,delta=1
    40                           	psect	text4,global,reloc=2,class=CODE,delta=1
    41                           	psect	text5,global,reloc=2,class=CODE,delta=1
    42                           	psect	text6,global,reloc=2,class=CODE,delta=1
    43                           	psect	text7,global,reloc=2,class=CODE,delta=1
    44                           	psect	text8,global,reloc=2,class=CODE,delta=1
    45                           	psect	text9,global,reloc=2,class=CODE,delta=1
    46                           	psect	text10,global,reloc=2,class=CODE,delta=1
    47                           	psect	text11,global,reloc=2,class=CODE,delta=1
    48                           	psect	text12,global,reloc=2,class=CODE,delta=1
    49                           	psect	text13,global,reloc=2,class=CODE,delta=1
    50                           	psect	text14,global,reloc=2,class=CODE,delta=1
    51                           	psect	text15,global,reloc=2,class=CODE,delta=1
    52                           	psect	text16,global,reloc=2,class=CODE,delta=1
    53                           	psect	text17,global,reloc=2,class=CODE,delta=1
    54                           	psect	text18,global,reloc=2,class=CODE,delta=1
    55                           	psect	text19,global,reloc=2,class=CODE,delta=1
    56                           	psect	text20,global,reloc=2,class=CODE,delta=1
    57                           	psect	text21,global,reloc=2,class=CODE,delta=1
    58                           	psect	text22,global,reloc=2,class=CODE,delta=1
    59                           	psect	text23,global,reloc=2,class=CODE,delta=1
    60                           	psect	text24,global,reloc=2,class=CODE,delta=1
    61                           	psect	text25,global,reloc=2,class=CODE,delta=1
    62                           	psect	text26,global,reloc=2,class=CODE,delta=1
    63                           	psect	text27,global,reloc=2,class=CODE,delta=1
    64                           	psect	text28,global,reloc=2,class=CODE,delta=1
    65                           	psect	text29,global,reloc=2,class=CODE,delta=1
    66                           	psect	text30,global,reloc=2,class=CODE,delta=1
    67                           	psect	text31,global,reloc=2,class=CODE,delta=1
    68                           	psect	text32,global,reloc=2,class=CODE,delta=1
    69                           	psect	text33,global,reloc=2,class=CODE,delta=1
    70                           	psect	text34,global,reloc=2,class=CODE,delta=1
    71                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text36,global,reloc=2,class=CODE,delta=1
    73                           	psect	text37,global,reloc=2,class=CODE,delta=1
    74                           	psect	text38,global,reloc=2,class=CODE,delta=1
    75                           	psect	text39,global,reloc=2,class=CODE,delta=1
    76                           	psect	text40,global,reloc=2,class=CODE,delta=1
    77                           	psect	text41,global,reloc=2,class=CODE,delta=1
    78                           	psect	text42,global,reloc=2,class=CODE,delta=1
    79                           	psect	text43,global,reloc=2,class=CODE,delta=1
    80                           	psect	text44,global,reloc=2,class=CODE,delta=1
    81                           	psect	text45,global,reloc=2,class=CODE,delta=1
    82                           	psect	text46,global,reloc=2,class=CODE,delta=1
    83                           	psect	text47,global,reloc=2,class=CODE,delta=1
    84                           	psect	text48,global,reloc=2,class=CODE,delta=1
    85                           	psect	text49,global,reloc=2,class=CODE,delta=1
    86                           	psect	text50,global,reloc=2,class=CODE,delta=1
    87                           	psect	text51,global,reloc=2,class=CODE,delta=1
    88                           	psect	text52,global,reloc=2,class=CODE,delta=1
    89                           	psect	text53,global,reloc=2,class=CODE,delta=1
    90                           	psect	text54,global,reloc=2,class=CODE,delta=1
    91                           	psect	text55,global,reloc=2,class=CODE,delta=1
    92                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text58,global,reloc=2,class=CODE,delta=1
    95                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text60,global,reloc=2,class=CODE,delta=1
    97                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text70,global,reloc=2,class=CODE,delta=1
   107                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text74,global,reloc=2,class=CODE,delta=1
   111                           	psect	text75,global,reloc=2,class=CODE,delta=1
   112                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text78,global,reloc=2,class=CODE,delta=1
   115                           	psect	text79,global,reloc=2,class=CODE,delta=1
   116                           	psect	text80,global,reloc=2,class=CODE,delta=1
   117                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text83,global,reloc=2,class=CODE,delta=1
   120                           	psect	text84,global,reloc=2,class=CODE,delta=1
   121                           	psect	text85,global,reloc=2,class=CODE,delta=1
   122                           	psect	text86,global,reloc=2,class=CODE,delta=1
   123                           	psect	text87,global,reloc=2,class=CODE,delta=1
   124                           	psect	text88,global,reloc=2,class=CODE,delta=1
   125                           	psect	text89,global,reloc=2,class=CODE,delta=1
   126                           	psect	text90,global,reloc=2,class=CODE,delta=1
   127                           	psect	text91,global,reloc=2,class=CODE,delta=1
   128                           	psect	text92,global,reloc=2,class=CODE,delta=1
   129                           	psect	text93,global,reloc=2,class=CODE,delta=1
   130                           	psect	text94,global,reloc=2,class=CODE,delta=1
   131                           	psect	text95,global,reloc=2,class=CODE,delta=1
   132                           	psect	text96,global,reloc=2,class=CODE,delta=1
   133                           	psect	text97,global,reloc=2,class=CODE,delta=1
   134                           	psect	text98,global,reloc=2,class=CODE,delta=1
   135                           	psect	text99,global,reloc=2,class=CODE,delta=1
   136                           	psect	text100,global,reloc=2,class=CODE,delta=1
   137                           	psect	text101,global,reloc=2,class=CODE,delta=1
   138                           	psect	text102,global,reloc=2,class=CODE,delta=1
   139                           	psect	text103,global,reloc=2,class=CODE,delta=1
   140                           	psect	text104,global,reloc=2,class=CODE,delta=1
   141                           	psect	text105,global,reloc=2,class=CODE,delta=1
   142                           	psect	text106,global,reloc=2,class=CODE,delta=1
   143                           	psect	text107,global,reloc=2,class=CODE,delta=1
   144                           	psect	text108,global,reloc=2,class=CODE,delta=1
   145                           	psect	text109,global,reloc=2,class=CODE,delta=1
   146                           	psect	text110,global,reloc=2,class=CODE,delta=1
   147                           	psect	text111,global,reloc=2,class=CODE,delta=1
   148                           	psect	text112,global,reloc=2,class=CODE,delta=1
   149                           	psect	text113,global,reloc=2,class=CODE,delta=1
   150                           	psect	text114,global,reloc=2,class=CODE,delta=1
   151                           	psect	text115,global,reloc=2,class=CODE,delta=1
   152                           	psect	text116,global,reloc=2,class=CODE,delta=1
   153                           	psect	text117,global,reloc=2,class=CODE,delta=1
   154                           	psect	text118,global,reloc=2,class=CODE,delta=1
   155                           	psect	text119,global,reloc=2,class=CODE,delta=1
   156                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   157                           	psect	text121,global,reloc=2,class=CODE,delta=1
   158                           	psect	text122,global,reloc=2,class=CODE,delta=1
   159                           	psect	text123,global,reloc=2,class=CODE,delta=1
   160                           	psect	text124,global,reloc=2,class=CODE,delta=1
   161                           	psect	text125,global,reloc=2,class=CODE,delta=1
   162                           	psect	text126,global,reloc=2,class=CODE,delta=1
   163                           	psect	text127,global,reloc=2,class=CODE,delta=1
   164                           	psect	text128,global,reloc=2,class=CODE,delta=1
   165                           	psect	text129,global,reloc=2,class=CODE,delta=1
   166                           	psect	text130,global,reloc=2,class=CODE,delta=1
   167                           	psect	text131,global,reloc=2,class=CODE,delta=1
   168                           	psect	text132,global,reloc=2,class=CODE,delta=1
   169                           	psect	text133,global,reloc=2,class=CODE,delta=1
   170                           	psect	text134,global,reloc=2,class=CODE,delta=1
   171                           	psect	text135,global,reloc=2,class=CODE,delta=1
   172                           	psect	text136,global,reloc=2,class=CODE,delta=1
   173                           	psect	text137,global,reloc=2,class=CODE,delta=1
   174                           	psect	text138,global,reloc=2,class=CODE,delta=1
   175                           	psect	text139,global,reloc=2,class=CODE,delta=1
   176                           	psect	text140,global,reloc=2,class=CODE,delta=1
   177                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text142,global,reloc=2,class=CODE,delta=1
   179                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text144,global,reloc=2,class=CODE,delta=1
   181                           	psect	text145,global,reloc=2,class=CODE,delta=1
   182                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text147,global,reloc=2,class=CODE,delta=1
   184                           	psect	text148,global,reloc=2,class=CODE,delta=1
   185                           	psect	text149,global,reloc=2,class=CODE,delta=1
   186                           	psect	text150,global,reloc=2,class=CODE,delta=1
   187                           	psect	text151,global,reloc=2,class=CODE,delta=1
   188                           	psect	text152,global,reloc=2,class=CODE,delta=1
   189                           	psect	text153,global,reloc=2,class=CODE,delta=1
   190                           	psect	text154,global,reloc=2,class=CODE,delta=1
   191                           	psect	text155,global,reloc=2,class=CODE,delta=1
   192                           	psect	text156,global,reloc=2,class=CODE,delta=1
   193                           	psect	text157,global,reloc=2,class=CODE,delta=1
   194                           	psect	text158,global,reloc=2,class=CODE,delta=1
   195                           	psect	text159,global,reloc=2,class=CODE,delta=1
   196                           	psect	text160,global,reloc=2,class=CODE,delta=1
   197                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   198                           	psect	text162,global,reloc=2,class=CODE,delta=1
   199                           	psect	text163,global,reloc=2,class=CODE,delta=1
   200                           	psect	text164,global,reloc=2,class=CODE,delta=1
   201                           	psect	text165,global,reloc=2,class=CODE,delta=1
   202                           	psect	text166,global,reloc=2,class=CODE,delta=1
   203                           	psect	text167,global,reloc=2,class=CODE,delta=1
   204                           	psect	text168,global,reloc=2,class=CODE,delta=1
   205                           	psect	text169,global,reloc=2,class=CODE,delta=1
   206                           	psect	text170,global,reloc=2,class=CODE,delta=1
   207                           	psect	text171,global,reloc=2,class=CODE,delta=1
   208                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   209                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   217                           	psect	text179,global,reloc=2,class=CODE,delta=1
   218                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   219                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   220                           	dabs	1,0x400,48,_BDT
   221                           	dabs	1,0x438,8,_CtrlTrfData
   222                           	dabs	1,0x430,8,_SetupPkt
   223  0000                     
   224                           ; Version 1.45
   225                           ; Generated 16/11/2017 GMT
   226                           ; 
   227                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   228                           ; All rights reserved.
   229                           ; 
   230                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   231                           ; 
   232                           ; Redistribution and use in source and binary forms, with or without modification, are
   233                           ; permitted provided that the following conditions are met:
   234                           ; 
   235                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   236                           ;        conditions and the following disclaimer.
   237                           ; 
   238                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   239                           ;        of conditions and the following disclaimer in the documentation and/or other
   240                           ;        materials provided with the distribution.
   241                           ; 
   242                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   243                           ;        software without specific prior written permission.
   244                           ; 
   245                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   246                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   247                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   248                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   249                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   250                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   251                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   252                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   253                           ; 
   254                           ; 
   255                           ; Code-generator required, PIC18F46J50 Definitions
   256                           ; 
   257                           ; SFR Addresses
   258  0000                     
   259                           	psect	idataBANK1
   260  006450                     __pidataBANK1:
   261                           	opt stack 0
   262                           
   263                           ;initializer for _isMemoryEmpty
   264  006450  01                 	db	1
   265                           
   266                           ;initializer for InitGprsNetwork@GprsInitSts
   267  006451  01                 	db	1
   268                           
   269                           	psect	idataBANK2
   270  0063D4                     __pidataBANK2:
   271                           	opt stack 0
   272                           
   273                           ;initializer for Terminal@EchoOption
   274  0063D4  01                 	db	1
   275                           
   276                           ;initializer for _MainSystemTimebaseFlag
   277  0063D5  01                 	db	1
   278                           
   279                           ;initializer for _ConnTimeout
   280  0063D6  00                 	db	0
   281  0063D7  01                 	db	1
   282  0063D8  0000               	dw	0
   283  0063DA  0000               	dw	0
   284  0063DC  0000               	dw	0
   285  0063DE  0000               	dw	0
   286  0063E0  00                 	db	0
   287                           
   288                           	psect	idataBANK3
   289  005ADC                     __pidataBANK3:
   290                           	opt stack 0
   291                           
   292                           ;initializer for ModemEvtParser@F9111
   293  005ADC  2B                 	db	43
   294  005ADD  43                 	db	67
   295  005ADE  4D                 	db	77
   296  005ADF  54                 	db	84
   297  005AE0  49                 	db	73
   298                           
   299                           ;initializer for ModemEvtParser@F9109
   300  005AE1  2B                 	db	43
   301  005AE2  43                 	db	67
   302  005AE3  4C                 	db	76
   303  005AE4  49                 	db	73
   304  005AE5  50                 	db	80
   305                           
   306                           ;initializer for ModemEvtParser@F9107
   307  005AE6  52                 	db	82
   308  005AE7  49                 	db	73
   309  005AE8  4E                 	db	78
   310  005AE9  47                 	db	71
   311                           
   312                           ;initializer for MyApp_Task@F9007
   313  005AEA  63                 	db	99
   314  005AEB  61                 	db	97
   315  005AEC  74                 	db	116
   316                           
   317                           ;initializer for triggerRelay@F8986
   318  005AED  50                 	db	80
   319  005AEE  00                 	db	0
   320                           
   321                           ;initializer for Term_MainSm@TermDelay
   322  005AEF  01                 	db	1
   323  005AF0  01                 	db	1
   324  005AF1  0000               	dw	0
   325  005AF3  0000               	dw	0
   326  005AF5  0000               	dw	0
   327  005AF7  0000               	dw	0
   328  005AF9  00                 	db	0
   329                           
   330                           ;initializer for _ConnWait
   331  005AFA  00                 	db	0
   332  005AFB  01                 	db	1
   333  005AFC  0000               	dw	0
   334  005AFE  0000               	dw	0
   335  005B00  0000               	dw	0
   336  005B02  0000               	dw	0
   337  005B04  00                 	db	0
   338                           
   339                           ;initializer for SendSmsSm@SwTimer
   340  005B05  01                 	db	1
   341  005B06  01                 	db	1
   342  005B07  0000               	dw	0
   343  005B09  0000               	dw	0
   344  005B0B  0000               	dw	0
   345  005B0D  0000               	dw	0
   346  005B0F  00                 	db	0
   347                           
   348                           ;initializer for CheckModem@Timeout
   349  005B10  00                 	db	0
   350  005B11  01                 	db	1
   351  005B12  0000               	dw	0
   352  005B14  0000               	dw	0
   353  005B16  0000               	dw	0
   354  005B18  0000               	dw	0
   355  005B1A  00                 	db	0
   356                           
   357                           ;initializer for MyApp_Task@blinkTicks
   358  005B1B  FFFF               	dw	65535
   359                           
   360                           	psect	idataBANK4
   361  006274                     __pidataBANK4:
   362                           	opt stack 0
   363                           
   364                           ;initializer for ModemEvtParser@F9113
   365  006274  43                 	db	67
   366  006275  61                 	db	97
   367  006276  6C                 	db	108
   368  006277  6C                 	db	108
   369  006278  20                 	db	32
   370  006279  52                 	db	82
   371  00627A  65                 	db	101
   372  00627B  61                 	db	97
   373  00627C  64                 	db	100
   374  00627D  79                 	db	121
   375                           
   376                           ;initializer for MyApp_Task@phone
   377  00627E  2B                 	db	43
   378  00627F  33                 	db	51
   379  006280  39                 	db	57
   380  006281  30                 	db	48
   381  006282  31                 	db	49
   382  006283  32                 	db	50
   383  006284  33                 	db	51
   384  006285  34                 	db	52
   385  006286  35                 	db	53
   386  006287  36                 	db	54
   387  006288  37                 	db	55
   388  006289  38                 	db	56
   389  00628A  39                 	db	57
   390  00628B  00                 	db	0
   391                           
   392                           	psect	idataBANK5
   393  005694                     __pidataBANK5:
   394                           	opt stack 0
   395                           
   396                           ;initializer for _TaskTable
   397  005694  2E                 	db	low _Mdm_DrvMainFn
   398  005695  64                 	db	high _Mdm_DrvMainFn
   399  005696  00                 	db	0
   400  005697  0000               	dw	0
   401  005699  000A               	dw	10
   402  00569B  00                 	db	0
   403  00569C  9E                 	db	low _I2cSlv_MainTask
   404  00569D  54                 	db	high _I2cSlv_MainTask
   405  00569E  00                 	db	0
   406  00569F  0000               	dw	0
   407  0056A1  0001               	dw	1
   408  0056A3  00                 	db	0
   409  0056A4  E4                 	db	low _Mdm_MainTask
   410  0056A5  56                 	db	high _Mdm_MainTask
   411  0056A6  00                 	db	0
   412  0056A7  0000               	dw	0
   413  0056A9  0001               	dw	1
   414  0056AB  00                 	db	0
   415  0056AC  FC                 	db	low _MdmHttp_MainTask
   416  0056AD  58                 	db	high _MdmHttp_MainTask
   417  0056AE  00                 	db	0
   418  0056AF  0000               	dw	0
   419  0056B1  0001               	dw	1
   420  0056B3  00                 	db	0
   421  0056B4  30                 	db	low _UsbDevice_MainTask
   422  0056B5  60                 	db	high _UsbDevice_MainTask
   423  0056B6  00                 	db	0
   424  0056B7  0000               	dw	0
   425  0056B9  0001               	dw	1
   426  0056BB  00                 	db	0
   427  0056BC  C0                 	db	low _Wdg_MainTask
   428  0056BD  60                 	db	high _Wdg_MainTask
   429  0056BE  00                 	db	0
   430  0056BF  0000               	dw	0
   431  0056C1  0064               	dw	100
   432  0056C3  00                 	db	0
   433  0056C4  EA                 	db	low _Led_MainTask
   434  0056C5  39                 	db	high _Led_MainTask
   435  0056C6  00                 	db	0
   436  0056C7  0000               	dw	0
   437  0056C9  0032               	dw	50
   438  0056CB  00                 	db	0
   439  0056CC  22                 	db	low _Rtcm_MainTask
   440  0056CD  4C                 	db	high _Rtcm_MainTask
   441  0056CE  00                 	db	0
   442  0056CF  0000               	dw	0
   443  0056D1  0064               	dw	100
   444  0056D3  00                 	db	0
   445  0056D4  5A                 	db	low _Term_MainTask
   446  0056D5  62                 	db	high _Term_MainTask
   447  0056D6  00                 	db	0
   448  0056D7  0000               	dw	0
   449  0056D9  0001               	dw	1
   450  0056DB  00                 	db	0
   451  0056DC  2C                 	db	low _MyApp_Task
   452  0056DD  2F                 	db	high _MyApp_Task
   453  0056DE  00                 	db	0
   454  0056DF  0000               	dw	0
   455  0056E1  0064               	dw	100
   456  0056E3  00                 	db	0
   457                           
   458                           	psect	mediumconst
   459  00FC34                     __pmediumconst:
   460                           	opt stack 0
   461  00FC34  00                 	db	0
   462  00FC35                     _USB_SD_Ptr:
   463                           	opt stack 0
   464  00FC35  68                 	db	low _sd000
   465  00FC36  FE                 	db	high _sd000
   466  00FC37  21                 	db	low _sd001
   467  00FC38  FE                 	db	high _sd001
   468  00FC39  FB                 	db	low _sd002
   469  00FC3A  FD                 	db	high _sd002
   470  00FC3B                     __end_of_USB_SD_Ptr:
   471                           	opt stack 0
   472  00FC3B                     _USB_CD_Ptr:
   473                           	opt stack 0
   474  00FC3B  B8                 	db	low _configDescriptor1
   475  00FC3C  FD                 	db	high _configDescriptor1
   476  00FC3D                     __end_of_USB_CD_Ptr:
   477                           	opt stack 0
   478  00FC3D                     _TaskNumber:
   479                           	opt stack 0
   480  00FC3D  000A               	dw	10
   481  00FC3F                     __end_of_TaskNumber:
   482                           	opt stack 0
   483  00FC3F                     _MsgFormat:
   484                           	opt stack 0
   485  00FC3F  48                 	db	72
   486  00FC40  6F                 	db	111
   487  00FC41  73                 	db	115
   488  00FC42  74                 	db	116
   489  00FC43  20                 	db	32
   490  00FC44  6D                 	db	109
   491  00FC45  65                 	db	101
   492  00FC46  73                 	db	115
   493  00FC47  73                 	db	115
   494  00FC48  61                 	db	97
   495  00FC49  67                 	db	103
   496  00FC4A  65                 	db	101
   497  00FC4B  20                 	db	32
   498  00FC4C  66                 	db	102
   499  00FC4D  6F                 	db	111
   500  00FC4E  72                 	db	114
   501  00FC4F  6D                 	db	109
   502  00FC50  61                 	db	97
   503  00FC51  74                 	db	116
   504  00FC52  3A                 	db	58
   505  00FC53  20                 	db	32
   506  00FC54  0D                 	db	13
   507  00FC55  0A                 	db	10
   508  00FC56  5B                 	db	91
   509  00FC57  6F                 	db	111
   510  00FC58  70                 	db	112
   511  00FC59  5F                 	db	95
   512  00FC5A  74                 	db	116
   513  00FC5B  79                 	db	121
   514  00FC5C  70                 	db	112
   515  00FC5D  65                 	db	101
   516  00FC5E  5D                 	db	93
   517  00FC5F  3A                 	db	58
   518  00FC60  5B                 	db	91
   519  00FC61  6F                 	db	111
   520  00FC62  70                 	db	112
   521  00FC63  5D                 	db	93
   522  00FC64  3A                 	db	58
   523  00FC65  5B                 	db	91
   524  00FC66  6C                 	db	108
   525  00FC67  65                 	db	101
   526  00FC68  6E                 	db	110
   527  00FC69  5D                 	db	93
   528  00FC6A  3A                 	db	58
   529  00FC6B  5B                 	db	91
   530  00FC6C  61                 	db	97
   531  00FC6D  64                 	db	100
   532  00FC6E  64                 	db	100
   533  00FC6F  72                 	db	114
   534  00FC70  5D                 	db	93
   535  00FC71  3A                 	db	58
   536  00FC72  5B                 	db	91
   537  00FC73  70                 	db	112
   538  00FC74  61                 	db	97
   539  00FC75  79                 	db	121
   540  00FC76  6C                 	db	108
   541  00FC77  6F                 	db	111
   542  00FC78  61                 	db	97
   543  00FC79  64                 	db	100
   544  00FC7A  5D                 	db	93
   545  00FC7B  0D                 	db	13
   546  00FC7C  0A                 	db	10
   547  00FC7D  0D                 	db	13
   548  00FC7E  0A                 	db	10
   549  00FC7F  5B                 	db	91
   550  00FC80  6F                 	db	111
   551  00FC81  70                 	db	112
   552  00FC82  5F                 	db	95
   553  00FC83  74                 	db	116
   554  00FC84  79                 	db	121
   555  00FC85  70                 	db	112
   556  00FC86  65                 	db	101
   557  00FC87  5D                 	db	93
   558  00FC88  20                 	db	32
   559  00FC89  3D                 	db	61
   560  00FC8A  20                 	db	32
   561  00FC8B  53                 	db	83
   562  00FC8C  4F                 	db	79
   563  00FC8D  2C                 	db	44
   564  00FC8E  53                 	db	83
   565  00FC8F  42                 	db	66
   566  00FC90  0D                 	db	13
   567  00FC91  0A                 	db	10
   568  00FC92  5B                 	db	91
   569  00FC93  6F                 	db	111
   570  00FC94  70                 	db	112
   571  00FC95  5D                 	db	93
   572  00FC96  20                 	db	32
   573  00FC97  3D                 	db	61
   574  00FC98  20                 	db	32
   575  00FC99  52                 	db	82
   576  00FC9A  3A                 	db	58
   577  00FC9B  20                 	db	32
   578  00FC9C  72                 	db	114
   579  00FC9D  65                 	db	101
   580  00FC9E  61                 	db	97
   581  00FC9F  64                 	db	100
   582  00FCA0  2C                 	db	44
   583  00FCA1  57                 	db	87
   584  00FCA2  3A                 	db	58
   585  00FCA3  20                 	db	32
   586  00FCA4  77                 	db	119
   587  00FCA5  72                 	db	114
   588  00FCA6  69                 	db	105
   589  00FCA7  74                 	db	116
   590  00FCA8  65                 	db	101
   591  00FCA9  0D                 	db	13
   592  00FCAA  0A                 	db	10
   593  00FCAB  5B                 	db	91
   594  00FCAC  6C                 	db	108
   595  00FCAD  65                 	db	101
   596  00FCAE  6E                 	db	110
   597  00FCAF  5D                 	db	93
   598  00FCB0  20                 	db	32
   599  00FCB1  3D                 	db	61
   600  00FCB2  20                 	db	32
   601  00FCB3  32                 	db	50
   602  00FCB4  20                 	db	32
   603  00FCB5  62                 	db	98
   604  00FCB6  79                 	db	121
   605  00FCB7  74                 	db	116
   606  00FCB8  65                 	db	101
   607  00FCB9  20                 	db	32
   608  00FCBA  41                 	db	65
   609  00FCBB  53                 	db	83
   610  00FCBC  43                 	db	67
   611  00FCBD  49                 	db	73
   612  00FCBE  49                 	db	73
   613  00FCBF  0D                 	db	13
   614  00FCC0  0A                 	db	10
   615  00FCC1  5B                 	db	91
   616  00FCC2  61                 	db	97
   617  00FCC3  64                 	db	100
   618  00FCC4  64                 	db	100
   619  00FCC5  72                 	db	114
   620  00FCC6  5D                 	db	93
   621  00FCC7  20                 	db	32
   622  00FCC8  3D                 	db	61
   623  00FCC9  20                 	db	32
   624  00FCCA  32                 	db	50
   625  00FCCB  20                 	db	32
   626  00FCCC  62                 	db	98
   627  00FCCD  79                 	db	121
   628  00FCCE  74                 	db	116
   629  00FCCF  65                 	db	101
   630  00FCD0  20                 	db	32
   631  00FCD1  41                 	db	65
   632  00FCD2  53                 	db	83
   633  00FCD3  43                 	db	67
   634  00FCD4  49                 	db	73
   635  00FCD5  49                 	db	73
   636  00FCD6  0D                 	db	13
   637  00FCD7  0A                 	db	10
   638  00FCD8  5B                 	db	91
   639  00FCD9  70                 	db	112
   640  00FCDA  61                 	db	97
   641  00FCDB  79                 	db	121
   642  00FCDC  6C                 	db	108
   643  00FCDD  6F                 	db	111
   644  00FCDE  61                 	db	97
   645  00FCDF  64                 	db	100
   646  00FCE0  5D                 	db	93
   647  00FCE1  20                 	db	32
   648  00FCE2  3D                 	db	61
   649  00FCE3  20                 	db	32
   650  00FCE4  6D                 	db	109
   651  00FCE5  61                 	db	97
   652  00FCE6  78                 	db	120
   653  00FCE7  20                 	db	32
   654  00FCE8  32                 	db	50
   655  00FCE9  30                 	db	48
   656  00FCEA  20                 	db	32
   657  00FCEB  62                 	db	98
   658  00FCEC  79                 	db	121
   659  00FCED  74                 	db	116
   660  00FCEE  65                 	db	101
   661  00FCEF  20                 	db	32
   662  00FCF0  41                 	db	65
   663  00FCF1  53                 	db	83
   664  00FCF2  43                 	db	67
   665  00FCF3  49                 	db	73
   666  00FCF4  49                 	db	73
   667  00FCF5  0D                 	db	13
   668  00FCF6  0A                 	db	10
   669  00FCF7  0D                 	db	13
   670  00FCF8  0A                 	db	10
   671  00FCF9  54                 	db	84
   672  00FCFA  65                 	db	101
   673  00FCFB  72                 	db	114
   674  00FCFC  6D                 	db	109
   675  00FCFD  69                 	db	105
   676  00FCFE  6E                 	db	110
   677  00FCFF  61                 	db	97
   678  00FD00  6C                 	db	108
   679  00FD01  20                 	db	32
   680  00FD02  4D                 	db	77
   681  00FD03  6F                 	db	111
   682  00FD04  64                 	db	100
   683  00FD05  65                 	db	101
   684  00FD06  3A                 	db	58
   685  00FD07  20                 	db	32
   686  00FD08  43                 	db	67
   687  00FD09  4F                 	db	79
   688  00FD0A  4D                 	db	77
   689  00FD0B  4D                 	db	77
   690  00FD0C  41                 	db	65
   691  00FD0D  4E                 	db	78
   692  00FD0E  44                 	db	68
   693  00FD0F  20                 	db	32
   694  00FD10  4D                 	db	77
   695  00FD11  4F                 	db	79
   696  00FD12  44                 	db	68
   697  00FD13  45                 	db	69
   698  00FD14  0D                 	db	13
   699  00FD15  0A                 	db	10
   700  00FD16  4D                 	db	77
   701  00FD17  6F                 	db	111
   702  00FD18  64                 	db	100
   703  00FD19  65                 	db	101
   704  00FD1A  6D                 	db	109
   705  00FD1B  20                 	db	32
   706  00FD1C  54                 	db	84
   707  00FD1D  79                 	db	121
   708  00FD1E  70                 	db	112
   709  00FD1F  65                 	db	101
   710  00FD20  3A                 	db	58
   711  00FD21  20                 	db	32
   712  00FD22  47                 	db	71
   713  00FD23  53                 	db	83
   714  00FD24  4D                 	db	77
   715  00FD25  2F                 	db	47
   716  00FD26  47                 	db	71
   717  00FD27  50                 	db	80
   718  00FD28  52                 	db	82
   719  00FD29  53                 	db	83
   720  00FD2A  0D                 	db	13
   721  00FD2B  0A                 	db	10
   722  00FD2C  0D                 	db	13
   723  00FD2D  0A                 	db	10
   724  00FD2E  00                 	db	0
   725  00FD2F                     __end_of_MsgFormat:
   726                           	opt stack 0
   727  00FD2F                     _Welcome:
   728                           	opt stack 0
   729  00FD2F  2A                 	db	42
   730  00FD30  2A                 	db	42
   731  00FD31  2A                 	db	42
   732  00FD32  2A                 	db	42
   733  00FD33  2A                 	db	42
   734  00FD34  2A                 	db	42
   735  00FD35  2A                 	db	42
   736  00FD36  2A                 	db	42
   737  00FD37  2A                 	db	42
   738  00FD38  2A                 	db	42
   739  00FD39  2A                 	db	42
   740  00FD3A  2A                 	db	42
   741  00FD3B  2A                 	db	42
   742  00FD3C  2A                 	db	42
   743  00FD3D  2A                 	db	42
   744  00FD3E  2A                 	db	42
   745  00FD3F  2A                 	db	42
   746  00FD40  2A                 	db	42
   747  00FD41  2A                 	db	42
   748  00FD42  2A                 	db	42
   749  00FD43  2A                 	db	42
   750  00FD44  2A                 	db	42
   751  00FD45  2A                 	db	42
   752  00FD46  2A                 	db	42
   753  00FD47  2A                 	db	42
   754  00FD48  2A                 	db	42
   755  00FD49  2A                 	db	42
   756  00FD4A  2A                 	db	42
   757  00FD4B  2A                 	db	42
   758  00FD4C  2A                 	db	42
   759  00FD4D  2A                 	db	42
   760  00FD4E  2A                 	db	42
   761  00FD4F  2A                 	db	42
   762  00FD50  2A                 	db	42
   763  00FD51  2A                 	db	42
   764  00FD52  2A                 	db	42
   765  00FD53  2A                 	db	42
   766  00FD54  2A                 	db	42
   767  00FD55  2A                 	db	42
   768  00FD56  2A                 	db	42
   769  00FD57  2A                 	db	42
   770  00FD58  2A                 	db	42
   771  00FD59  2A                 	db	42
   772  00FD5A  2A                 	db	42
   773  00FD5B  2A                 	db	42
   774  00FD5C  2A                 	db	42
   775  00FD5D  2A                 	db	42
   776  00FD5E  2A                 	db	42
   777  00FD5F  2A                 	db	42
   778  00FD60  0D                 	db	13
   779  00FD61  0A                 	db	10
   780  00FD62  20                 	db	32
   781  00FD63  20                 	db	32
   782  00FD64  20                 	db	32
   783  00FD65  20                 	db	32
   784  00FD66  20                 	db	32
   785  00FD67  20                 	db	32
   786  00FD68  20                 	db	32
   787  00FD69  20                 	db	32
   788  00FD6A  20                 	db	32
   789  00FD6B  20                 	db	32
   790  00FD6C  20                 	db	32
   791  00FD6D  20                 	db	32
   792  00FD6E  20                 	db	32
   793  00FD6F  20                 	db	32
   794  00FD70  20                 	db	32
   795  00FD71  20                 	db	32
   796  00FD72  20                 	db	32
   797  00FD73  20                 	db	32
   798  00FD74  4D                 	db	77
   799  00FD75  45                 	db	69
   800  00FD76  52                 	db	82
   801  00FD77  43                 	db	67
   802  00FD78  55                 	db	85
   803  00FD79  52                 	db	82
   804  00FD7A  59                 	db	89
   805  00FD7B  20                 	db	32
   806  00FD7C  53                 	db	83
   807  00FD7D  59                 	db	89
   808  00FD7E  53                 	db	83
   809  00FD7F  54                 	db	84
   810  00FD80  45                 	db	69
   811  00FD81  4D                 	db	77
   812  00FD82  0D                 	db	13
   813  00FD83  0A                 	db	10
   814  00FD84  2A                 	db	42
   815  00FD85  2A                 	db	42
   816  00FD86  2A                 	db	42
   817  00FD87  2A                 	db	42
   818  00FD88  2A                 	db	42
   819  00FD89  2A                 	db	42
   820  00FD8A  2A                 	db	42
   821  00FD8B  2A                 	db	42
   822  00FD8C  2A                 	db	42
   823  00FD8D  2A                 	db	42
   824  00FD8E  2A                 	db	42
   825  00FD8F  2A                 	db	42
   826  00FD90  2A                 	db	42
   827  00FD91  2A                 	db	42
   828  00FD92  2A                 	db	42
   829  00FD93  2A                 	db	42
   830  00FD94  2A                 	db	42
   831  00FD95  2A                 	db	42
   832  00FD96  2A                 	db	42
   833  00FD97  2A                 	db	42
   834  00FD98  2A                 	db	42
   835  00FD99  2A                 	db	42
   836  00FD9A  2A                 	db	42
   837  00FD9B  2A                 	db	42
   838  00FD9C  2A                 	db	42
   839  00FD9D  2A                 	db	42
   840  00FD9E  2A                 	db	42
   841  00FD9F  2A                 	db	42
   842  00FDA0  2A                 	db	42
   843  00FDA1  2A                 	db	42
   844  00FDA2  2A                 	db	42
   845  00FDA3  2A                 	db	42
   846  00FDA4  2A                 	db	42
   847  00FDA5  2A                 	db	42
   848  00FDA6  2A                 	db	42
   849  00FDA7  2A                 	db	42
   850  00FDA8  2A                 	db	42
   851  00FDA9  2A                 	db	42
   852  00FDAA  2A                 	db	42
   853  00FDAB  2A                 	db	42
   854  00FDAC  2A                 	db	42
   855  00FDAD  2A                 	db	42
   856  00FDAE  2A                 	db	42
   857  00FDAF  2A                 	db	42
   858  00FDB0  2A                 	db	42
   859  00FDB1  2A                 	db	42
   860  00FDB2  2A                 	db	42
   861  00FDB3  2A                 	db	42
   862  00FDB4  2A                 	db	42
   863  00FDB5  0D                 	db	13
   864  00FDB6  0A                 	db	10
   865  00FDB7  00                 	db	0
   866  00FDB8                     __end_of_Welcome:
   867                           	opt stack 0
   868  00FDB8                     _configDescriptor1:
   869                           	opt stack 0
   870  00FDB8  09                 	db	9
   871  00FDB9  02                 	db	2
   872  00FDBA  43                 	db	67
   873  00FDBB  00                 	db	0
   874  00FDBC  02                 	db	2
   875  00FDBD  01                 	db	1
   876  00FDBE  00                 	db	0
   877  00FDBF  C0                 	db	192
   878  00FDC0  32                 	db	50
   879  00FDC1  09                 	db	9
   880  00FDC2  04                 	db	4
   881  00FDC3  00                 	db	0
   882  00FDC4  00                 	db	0
   883  00FDC5  01                 	db	1
   884  00FDC6  02                 	db	2
   885  00FDC7  02                 	db	2
   886  00FDC8  01                 	db	1
   887  00FDC9  00                 	db	0
   888  00FDCA  05                 	db	5
   889  00FDCB  24                 	db	36
   890  00FDCC  00                 	db	0
   891  00FDCD  10                 	db	16
   892  00FDCE  01                 	db	1
   893  00FDCF  04                 	db	4
   894  00FDD0  24                 	db	36
   895  00FDD1  02                 	db	2
   896  00FDD2  02                 	db	2
   897  00FDD3  05                 	db	5
   898  00FDD4  24                 	db	36
   899  00FDD5  06                 	db	6
   900  00FDD6  00                 	db	0
   901  00FDD7  01                 	db	1
   902  00FDD8  05                 	db	5
   903  00FDD9  24                 	db	36
   904  00FDDA  01                 	db	1
   905  00FDDB  00                 	db	0
   906  00FDDC  01                 	db	1
   907  00FDDD  07                 	db	7
   908  00FDDE  05                 	db	5
   909  00FDDF  81                 	db	129
   910  00FDE0  03                 	db	3
   911  00FDE1  08                 	db	8
   912  00FDE2  00                 	db	0
   913  00FDE3  02                 	db	2
   914  00FDE4  09                 	db	9
   915  00FDE5  04                 	db	4
   916  00FDE6  01                 	db	1
   917  00FDE7  00                 	db	0
   918  00FDE8  02                 	db	2
   919  00FDE9  0A                 	db	10
   920  00FDEA  00                 	db	0
   921  00FDEB  00                 	db	0
   922  00FDEC  00                 	db	0
   923  00FDED  07                 	db	7
   924  00FDEE  05                 	db	5
   925  00FDEF  02                 	db	2
   926  00FDF0  02                 	db	2
   927  00FDF1  40                 	db	64
   928  00FDF2  00                 	db	0
   929  00FDF3  00                 	db	0
   930  00FDF4  07                 	db	7
   931  00FDF5  05                 	db	5
   932  00FDF6  82                 	db	130
   933  00FDF7  02                 	db	2
   934  00FDF8  40                 	db	64
   935  00FDF9  00                 	db	0
   936  00FDFA  00                 	db	0
   937  00FDFB                     __end_of_configDescriptor1:
   938                           	opt stack 0
   939  00FDFB                     _sd002:
   940                           	opt stack 0
   941  00FDFB  26                 	db	38
   942  00FDFC  03                 	db	3
   943  00FDFD  0054               	dw	84
   944  00FDFF  0065               	dw	101
   945  00FE01  0072               	dw	114
   946  00FE03  006D               	dw	109
   947  00FE05  0069               	dw	105
   948  00FE07  006E               	dw	110
   949  00FE09  0061               	dw	97
   950  00FE0B  006C               	dw	108
   951  00FE0D  0020               	dw	32
   952  00FE0F  0049               	dw	73
   953  00FE11  006E               	dw	110
   954  00FE13  0074               	dw	116
   955  00FE15  0065               	dw	101
   956  00FE17  0072               	dw	114
   957  00FE19  0066               	dw	102
   958  00FE1B  0061               	dw	97
   959  00FE1D  0063               	dw	99
   960  00FE1F  0065               	dw	101
   961  00FE21                     __end_of_sd002:
   962                           	opt stack 0
   963  00FE21                     _sd001:
   964                           	opt stack 0
   965  00FE21  1E                 	db	30
   966  00FE22  03                 	db	3
   967  00FE23  004D               	dw	77
   968  00FE25  0065               	dw	101
   969  00FE27  0072               	dw	114
   970  00FE29  0063               	dw	99
   971  00FE2B  0075               	dw	117
   972  00FE2D  0072               	dw	114
   973  00FE2F  0079               	dw	121
   974  00FE31  0020               	dw	32
   975  00FE33  0053               	dw	83
   976  00FE35  0079               	dw	121
   977  00FE37  0073               	dw	115
   978  00FE39  0074               	dw	116
   979  00FE3B  0065               	dw	101
   980  00FE3D  006D               	dw	109
   981  00FE3F                     __end_of_sd001:
   982                           	opt stack 0
   983  00FE3F                     _MsgReady:
   984                           	opt stack 0
   985  00FE3F  0D                 	db	13
   986  00FE40  0A                 	db	10
   987  00FE41  53                 	db	83
   988  00FE42  79                 	db	121
   989  00FE43  73                 	db	115
   990  00FE44  74                 	db	116
   991  00FE45  65                 	db	101
   992  00FE46  6D                 	db	109
   993  00FE47  20                 	db	32
   994  00FE48  52                 	db	82
   995  00FE49  65                 	db	101
   996  00FE4A  61                 	db	97
   997  00FE4B  64                 	db	100
   998  00FE4C  79                 	db	121
   999  00FE4D  2E                 	db	46
  1000  00FE4E  2E                 	db	46
  1001  00FE4F  2E                 	db	46
  1002  00FE50  20                 	db	32
  1003  00FE51  0D                 	db	13
  1004  00FE52  0A                 	db	10
  1005  00FE53  0D                 	db	13
  1006  00FE54  0A                 	db	10
  1007  00FE55  00                 	db	0
  1008  00FE56                     __end_of_MsgReady:
  1009                           	opt stack 0
  1010  00FE56                     _device_dsc:
  1011                           	opt stack 0
  1012  00FE56  12                 	db	18
  1013  00FE57  01                 	db	1
  1014  00FE58  0200               	dw	512
  1015  00FE5A  02                 	db	2
  1016  00FE5B  00                 	db	0
  1017  00FE5C  00                 	db	0
  1018  00FE5D  08                 	db	8
  1019  00FE5E  04D8               	dw	1240
  1020  00FE60  000A               	dw	10
  1021  00FE62  0100               	dw	256
  1022  00FE64  01                 	db	1
  1023  00FE65  02                 	db	2
  1024  00FE66  00                 	db	0
  1025  00FE67  01                 	db	1
  1026  00FE68                     __end_of_device_dsc:
  1027                           	opt stack 0
  1028  00FE68                     _sd000:
  1029                           	opt stack 0
  1030  00FE68  04                 	db	4
  1031  00FE69  03                 	db	3
  1032  00FE6A  0409               	dw	1033
  1033  00FE6C                     __end_of_sd000:
  1034                           	opt stack 0
  1035  0000                     _RPINR1	set	3815
  1036  0000                     _UEP0bits	set	3878
  1037  0000                     _UIEbits	set	3894
  1038  0000                     _UADDR	set	3896
  1039  0000                     _UIE	set	3894
  1040  0000                     _UEIE	set	3895
  1041  0000                     _UCFG	set	3897
  1042  0000                     _RTCCAL	set	3902
  1043  0000                     _PADCFG1bits	set	3900
  1044  0000                     _RTCCFGbits	set	3903
  1045  0000                     _DSCONLbits	set	3916
  1046  0000                     _DSGPR1	set	3919
  1047  0000                     _DSGPR0	set	3918
  1048  0000                     _DSCONHbits	set	3917
  1049  0000                     _ANCON1bits	set	3913
  1050  0000                     _UEP1	set	3879
  1051  0000                     _UEP0	set	3878
  1052  0000                     _T1CONbits	set	4045
  1053  0000                     _PORTDbits	set	3971
  1054  0000                     _USTAT	set	3940
  1055  0000                     _PIR2bits	set	4001
  1056  0000                     _UCON	set	3941
  1057  0000                     _UIRbits	set	3938
  1058  0000                     _UCONbits	set	3941
  1059  0000                     _UIR	set	3938
  1060  0000                     _UEIR	set	3939
  1061  0000                     _PIE2bits	set	4000
  1062  0000                     _BAUDCON2	set	3964
  1063  0000                     _RCSTA2	set	3996
  1064  0000                     _BAUDCON1	set	3966
  1065  0000                     _RCSTA1	set	4012
  1066  0000                     _TRISCbits	set	3988
  1067  0000                     _TXSTA2	set	4008
  1068  0000                     _TXSTA1	set	4013
  1069  0000                     _RCREG2	set	4010
  1070  0000                     _RCREG1	set	4015
  1071  0000                     _TXREG2	set	4009
  1072  0000                     _TXREG1	set	4014
  1073  0000                     _SPBRG2	set	4011
  1074  0000                     _SPBRGH2	set	3965
  1075  0000                     _SPBRG1	set	4016
  1076  0000                     _SPBRGH1	set	3967
  1077  0000                     _PR4	set	3959
  1078  0000                     _PR2	set	4043
  1079  0000                     _PIE1bits	set	3997
  1080  0000                     _IPR1bits	set	3999
  1081  0000                     _T4CONbits	set	3958
  1082  0000                     _T2CONbits	set	4042
  1083  0000                     _ALRMVALL	set	3982
  1084  0000                     _ALRMVALH	set	3983
  1085  0000                     _RTCVALH	set	3993
  1086  0000                     _RTCVALL	set	3992
  1087  0000                     _ALRMRPTbits	set	3984
  1088  0000                     _ALRMCFGbits	set	3985
  1089  0000                     _PIE3bits	set	4003
  1090  0000                     _IPR3bits	set	4005
  1091  0000                     _OSCCONbits	set	4051
  1092  0000                     _PORTEbits	set	3972
  1093  0000                     _TRISEbits	set	3990
  1094  0000                     _WDTCONbits	set	4032
  1095  0000                     _INTCON2bits	set	4081
  1096  0000                     _TRISBbits	set	3987
  1097  0000                     _OSCTUNEbits	set	3995
  1098  0000                     _SSP2CON1	set	3954
  1099  0000                     _TRISDbits	set	3989
  1100  0000                     _SSP2BUF	set	3957
  1101  0000                     _SSP2CON2bits	set	3953
  1102  0000                     _SSP2STAT	set	3955
  1103  0000                     _SSP2CON2	set	3953
  1104  0000                     _SSP2ADD	set	3956
  1105  0000                     _PIR1bits	set	3998
  1106  0000                     _PIR3bits	set	4004
  1107  0000                     _INTCON3bits	set	4080
  1108  0000                     _INTCONbits	set	4082
  1109  0000                     _RCONbits	set	4048
  1110  00FE6C                     STR_21:
  1111  00FE6C  20                 	db	32
  1112  00FE6D  4C                 	db	76	;'L'
  1113  00FE6E  61                 	db	97	;'a'
  1114  00FE6F  7A                 	db	122	;'z'
  1115  00FE70  79                 	db	121	;'y'
  1116  00FE71  20                 	db	32
  1117  00FE72  64                 	db	100	;'d'
  1118  00FE73  65                 	db	101	;'e'
  1119  00FE74  76                 	db	118	;'v'
  1120  00FE75  69                 	db	105	;'i'
  1121  00FE76  63                 	db	99	;'c'
  1122  00FE77  65                 	db	101	;'e'
  1123  00FE78  2E                 	db	46
  1124  00FE79  2E                 	db	46
  1125  00FE7A  2E                 	db	46
  1126  00FE7B  79                 	db	121	;'y'
  1127  00FE7C  6F                 	db	111	;'o'
  1128  00FE7D  75                 	db	117	;'u'
  1129  00FE7E  27                 	db	39
  1130  00FE7F  76                 	db	118	;'v'
  1131  00FE80  65                 	db	101	;'e'
  1132  00FE81  20                 	db	32
  1133  00FE82  62                 	db	98	;'b'
  1134  00FE83  65                 	db	101	;'e'
  1135  00FE84  65                 	db	101	;'e'
  1136  00FE85  6E                 	db	110	;'n'
  1137  00FE86  20                 	db	32
  1138  00FE87  74                 	db	116	;'t'
  1139  00FE88  69                 	db	105	;'i'
  1140  00FE89  6D                 	db	109	;'m'
  1141  00FE8A  65                 	db	101	;'e'
  1142  00FE8B  64                 	db	100	;'d'
  1143  00FE8C  2D                 	db	45
  1144  00FE8D  6F                 	db	111	;'o'
  1145  00FE8E  75                 	db	117	;'u'
  1146  00FE8F  74                 	db	116	;'t'
  1147  00FE90  21                 	db	33
  1148  00FE91  21                 	db	33
  1149  00FE92  21                 	db	33
  1150  00FE93  0D                 	db	13
  1151  00FE94  0A                 	db	10
  1152  00FE95  00                 	db	0
  1153  00FE96                     STR_8:
  1154  00FE96  41                 	db	65	;'A'
  1155  00FE97  54                 	db	84	;'T'
  1156  00FE98  2B                 	db	43
  1157  00FE99  53                 	db	83	;'S'
  1158  00FE9A  41                 	db	65	;'A'
  1159  00FE9B  50                 	db	80	;'P'
  1160  00FE9C  42                 	db	66	;'B'
  1161  00FE9D  52                 	db	82	;'R'
  1162  00FE9E  3D                 	db	61	;'='
  1163  00FE9F  33                 	db	51	;'3'
  1164  00FEA0  2C                 	db	44
  1165  00FEA1  31                 	db	49	;'1'
  1166  00FEA2  2C                 	db	44
  1167  00FEA3  22                 	db	34
  1168  00FEA4  43                 	db	67	;'C'
  1169  00FEA5  6F                 	db	111	;'o'
  1170  00FEA6  6E                 	db	110	;'n'
  1171  00FEA7  74                 	db	116	;'t'
  1172  00FEA8  79                 	db	121	;'y'
  1173  00FEA9  70                 	db	112	;'p'
  1174  00FEAA  65                 	db	101	;'e'
  1175  00FEAB  22                 	db	34
  1176  00FEAC  2C                 	db	44
  1177  00FEAD  22                 	db	34
  1178  00FEAE  47                 	db	71	;'G'
  1179  00FEAF  50                 	db	80	;'P'
  1180  00FEB0  52                 	db	82	;'R'
  1181  00FEB1  53                 	db	83	;'S'
  1182  00FEB2  22                 	db	34
  1183  00FEB3  0D                 	db	13
  1184  00FEB4  00                 	db	0
  1185  00FEB5                     STR_14:
  1186  00FEB5  41                 	db	65	;'A'
  1187  00FEB6  54                 	db	84	;'T'
  1188  00FEB7  2B                 	db	43
  1189  00FEB8  48                 	db	72	;'H'
  1190  00FEB9  54                 	db	84	;'T'
  1191  00FEBA  54                 	db	84	;'T'
  1192  00FEBB  50                 	db	80	;'P'
  1193  00FEBC  50                 	db	80	;'P'
  1194  00FEBD  41                 	db	65	;'A'
  1195  00FEBE  52                 	db	82	;'R'
  1196  00FEBF  41                 	db	65	;'A'
  1197  00FEC0  3D                 	db	61	;'='
  1198  00FEC1  22                 	db	34
  1199  00FEC2  43                 	db	67	;'C'
  1200  00FEC3  49                 	db	73	;'I'
  1201  00FEC4  44                 	db	68	;'D'
  1202  00FEC5  22                 	db	34
  1203  00FEC6  2C                 	db	44
  1204  00FEC7  31                 	db	49	;'1'
  1205  00FEC8  0D                 	db	13
  1206  00FEC9  00                 	db	0
  1207  00FECA                     STR_9:
  1208  00FECA  41                 	db	65	;'A'
  1209  00FECB  54                 	db	84	;'T'
  1210  00FECC  2B                 	db	43
  1211  00FECD  53                 	db	83	;'S'
  1212  00FECE  41                 	db	65	;'A'
  1213  00FECF  50                 	db	80	;'P'
  1214  00FED0  42                 	db	66	;'B'
  1215  00FED1  52                 	db	82	;'R'
  1216  00FED2  3D                 	db	61	;'='
  1217  00FED3  33                 	db	51	;'3'
  1218  00FED4  2C                 	db	44
  1219  00FED5  31                 	db	49	;'1'
  1220  00FED6  2C                 	db	44
  1221  00FED7  22                 	db	34
  1222  00FED8  41                 	db	65	;'A'
  1223  00FED9  50                 	db	80	;'P'
  1224  00FEDA  4E                 	db	78	;'N'
  1225  00FEDB  22                 	db	34
  1226  00FEDC  2C                 	db	44
  1227  00FEDD  22                 	db	34
  1228  00FEDE  00                 	db	0
  1229  00FEDF                     STR_23:
  1230  00FEDF  46                 	db	70	;'F'
  1231  00FEE0  72                 	db	114	;'r'
  1232  00FEE1  61                 	db	97	;'a'
  1233  00FEE2  6D                 	db	109	;'m'
  1234  00FEE3  65                 	db	101	;'e'
  1235  00FEE4  77                 	db	119	;'w'
  1236  00FEE5  6F                 	db	111	;'o'
  1237  00FEE6  72                 	db	114	;'r'
  1238  00FEE7  6B                 	db	107	;'k'
  1239  00FEE8  20                 	db	32
  1240  00FEE9  56                 	db	86	;'V'
  1241  00FEEA  65                 	db	101	;'e'
  1242  00FEEB  72                 	db	114	;'r'
  1243  00FEEC  73                 	db	115	;'s'
  1244  00FEED  69                 	db	105	;'i'
  1245  00FEEE  6F                 	db	111	;'o'
  1246  00FEEF  6E                 	db	110	;'n'
  1247  00FEF0  3A                 	db	58	;':'
  1248  00FEF1  20                 	db	32
  1249  00FEF2  00                 	db	0
  1250  00FEF3                     STR_15:
  1251  00FEF3  41                 	db	65	;'A'
  1252  00FEF4  54                 	db	84	;'T'
  1253  00FEF5  2B                 	db	43
  1254  00FEF6  48                 	db	72	;'H'
  1255  00FEF7  54                 	db	84	;'T'
  1256  00FEF8  54                 	db	84	;'T'
  1257  00FEF9  50                 	db	80	;'P'
  1258  00FEFA  50                 	db	80	;'P'
  1259  00FEFB  41                 	db	65	;'A'
  1260  00FEFC  52                 	db	82	;'R'
  1261  00FEFD  41                 	db	65	;'A'
  1262  00FEFE  3D                 	db	61	;'='
  1263  00FEFF  22                 	db	34
  1264  00FF00  55                 	db	85	;'U'
  1265  00FF01  52                 	db	82	;'R'
  1266  00FF02  4C                 	db	76	;'L'
  1267  00FF03  22                 	db	34
  1268  00FF04  2C                 	db	44
  1269  00FF05  22                 	db	34
  1270  00FF06  00                 	db	0
  1271  00FF07                     STR_29:
  1272  00FF07  41                 	db	65	;'A'
  1273  00FF08  54                 	db	84	;'T'
  1274  00FF09  2B                 	db	43
  1275  00FF0A  43                 	db	67	;'C'
  1276  00FF0B  4D                 	db	77	;'M'
  1277  00FF0C  47                 	db	71	;'G'
  1278  00FF0D  44                 	db	68	;'D'
  1279  00FF0E  41                 	db	65	;'A'
  1280  00FF0F  3D                 	db	61	;'='
  1281  00FF10  44                 	db	68	;'D'
  1282  00FF11  45                 	db	69	;'E'
  1283  00FF12  4C                 	db	76	;'L'
  1284  00FF13  20                 	db	32
  1285  00FF14  41                 	db	65	;'A'
  1286  00FF15  4C                 	db	76	;'L'
  1287  00FF16  4C                 	db	76	;'L'
  1288  00FF17  0D                 	db	13
  1289  00FF18  0A                 	db	10
  1290  00FF19  00                 	db	0
  1291  00FF1A                     STR_27:
  1292  00FF1A  42                 	db	66	;'B'
  1293  00FF1B  75                 	db	117	;'u'
  1294  00FF1C  69                 	db	105	;'i'
  1295  00FF1D  6C                 	db	108	;'l'
  1296  00FF1E  64                 	db	100	;'d'
  1297  00FF1F  20                 	db	32
  1298  00FF20  44                 	db	68	;'D'
  1299  00FF21  61                 	db	97	;'a'
  1300  00FF22  74                 	db	116	;'t'
  1301  00FF23  65                 	db	101	;'e'
  1302  00FF24  3A                 	db	58	;':'
  1303  00FF25  20                 	db	32
  1304  00FF26  25                 	db	37
  1305  00FF27  73                 	db	115	;'s'
  1306  00FF28  0D                 	db	13
  1307  00FF29  0A                 	db	10
  1308  00FF2A  00                 	db	0
  1309  00FF2B                     STR_16:
  1310  00FF2B  41                 	db	65	;'A'
  1311  00FF2C  54                 	db	84	;'T'
  1312  00FF2D  2B                 	db	43
  1313  00FF2E  48                 	db	72	;'H'
  1314  00FF2F  54                 	db	84	;'T'
  1315  00FF30  54                 	db	84	;'T'
  1316  00FF31  50                 	db	80	;'P'
  1317  00FF32  41                 	db	65	;'A'
  1318  00FF33  43                 	db	67	;'C'
  1319  00FF34  54                 	db	84	;'T'
  1320  00FF35  49                 	db	73	;'I'
  1321  00FF36  4F                 	db	79	;'O'
  1322  00FF37  4E                 	db	78	;'N'
  1323  00FF38  3D                 	db	61	;'='
  1324  00FF39  30                 	db	48	;'0'
  1325  00FF3A  0D                 	db	13
  1326  00FF3B  00                 	db	0
  1327  00FF3C  41                 	db	65	;'A'
  1328  00FF3D  54                 	db	84	;'T'
  1329  00FF3E  2B                 	db	43
  1330  00FF3F  48                 	db	72	;'H'
  1331  00FF40  54                 	db	84	;'T'
  1332  00FF41  54                 	db	84	;'T'
  1333  00FF42  50                 	db	80	;'P'
  1334  00FF43  53                 	db	83	;'S'
  1335  00FF44  53                 	db	83	;'S'
  1336  00FF45  4C                 	db	76	;'L'
  1337  00FF46  3D                 	db	61	;'='
  1338  00FF47  30                 	db	48	;'0'
  1339  00FF48  0D                 	db	13
  1340  00FF49  00                 	db	0
  1341  00FF4A                     STR_10:
  1342  00FF4A  41                 	db	65	;'A'
  1343  00FF4B  54                 	db	84	;'T'
  1344  00FF4C  2B                 	db	43
  1345  00FF4D  53                 	db	83	;'S'
  1346  00FF4E  41                 	db	65	;'A'
  1347  00FF4F  50                 	db	80	;'P'
  1348  00FF50  42                 	db	66	;'B'
  1349  00FF51  52                 	db	82	;'R'
  1350  00FF52  3D                 	db	61	;'='
  1351  00FF53  31                 	db	49	;'1'
  1352  00FF54  2C                 	db	44
  1353  00FF55  31                 	db	49	;'1'
  1354  00FF56  0D                 	db	13
  1355  00FF57  00                 	db	0
  1356  00FF58                     STR_11:
  1357  00FF58  41                 	db	65	;'A'
  1358  00FF59  54                 	db	84	;'T'
  1359  00FF5A  2B                 	db	43
  1360  00FF5B  53                 	db	83	;'S'
  1361  00FF5C  41                 	db	65	;'A'
  1362  00FF5D  50                 	db	80	;'P'
  1363  00FF5E  42                 	db	66	;'B'
  1364  00FF5F  52                 	db	82	;'R'
  1365  00FF60  3D                 	db	61	;'='
  1366  00FF61  32                 	db	50	;'2'
  1367  00FF62  2C                 	db	44
  1368  00FF63  31                 	db	49	;'1'
  1369  00FF64  0D                 	db	13
  1370  00FF65  00                 	db	0
  1371  00FF66                     STR_13:
  1372  00FF66  41                 	db	65	;'A'
  1373  00FF67  54                 	db	84	;'T'
  1374  00FF68  2B                 	db	43
  1375  00FF69  48                 	db	72	;'H'
  1376  00FF6A  54                 	db	84	;'T'
  1377  00FF6B  54                 	db	84	;'T'
  1378  00FF6C  50                 	db	80	;'P'
  1379  00FF6D  53                 	db	83	;'S'
  1380  00FF6E  53                 	db	83	;'S'
  1381  00FF6F  4C                 	db	76	;'L'
  1382  00FF70  3D                 	db	61	;'='
  1383  00FF71  31                 	db	49	;'1'
  1384  00FF72  0D                 	db	13
  1385  00FF73  00                 	db	0
  1386  00FF74                     STR_2:
  1387  00FF74  41                 	db	65	;'A'
  1388  00FF75  54                 	db	84	;'T'
  1389  00FF76  2B                 	db	43
  1390  00FF77  49                 	db	73	;'I'
  1391  00FF78  50                 	db	80	;'P'
  1392  00FF79  52                 	db	82	;'R'
  1393  00FF7A  3D                 	db	61	;'='
  1394  00FF7B  39                 	db	57	;'9'
  1395  00FF7C  36                 	db	54	;'6'
  1396  00FF7D  30                 	db	48	;'0'
  1397  00FF7E  30                 	db	48	;'0'
  1398  00FF7F  0D                 	db	13
  1399  00FF80  0A                 	db	10
  1400  00FF81  00                 	db	0
  1401  00FF82                     STR_17:
  1402  00FF82  41                 	db	65	;'A'
  1403  00FF83  54                 	db	84	;'T'
  1404  00FF84  2B                 	db	43
  1405  00FF85  48                 	db	72	;'H'
  1406  00FF86  54                 	db	84	;'T'
  1407  00FF87  54                 	db	84	;'T'
  1408  00FF88  50                 	db	80	;'P'
  1409  00FF89  52                 	db	82	;'R'
  1410  00FF8A  45                 	db	69	;'E'
  1411  00FF8B  41                 	db	65	;'A'
  1412  00FF8C  44                 	db	68	;'D'
  1413  00FF8D  0D                 	db	13
  1414  00FF8E  00                 	db	0
  1415  00FF8F                     STR_18:
  1416  00FF8F  41                 	db	65	;'A'
  1417  00FF90  54                 	db	84	;'T'
  1418  00FF91  2B                 	db	43
  1419  00FF92  48                 	db	72	;'H'
  1420  00FF93  54                 	db	84	;'T'
  1421  00FF94  54                 	db	84	;'T'
  1422  00FF95  50                 	db	80	;'P'
  1423  00FF96  54                 	db	84	;'T'
  1424  00FF97  45                 	db	69	;'E'
  1425  00FF98  52                 	db	82	;'R'
  1426  00FF99  4D                 	db	77	;'M'
  1427  00FF9A  0D                 	db	13
  1428  00FF9B  00                 	db	0
  1429  00FF9C                     STR_12:
  1430  00FF9C  41                 	db	65	;'A'
  1431  00FF9D  54                 	db	84	;'T'
  1432  00FF9E  2B                 	db	43
  1433  00FF9F  48                 	db	72	;'H'
  1434  00FFA0  54                 	db	84	;'T'
  1435  00FFA1  54                 	db	84	;'T'
  1436  00FFA2  50                 	db	80	;'P'
  1437  00FFA3  49                 	db	73	;'I'
  1438  00FFA4  4E                 	db	78	;'N'
  1439  00FFA5  49                 	db	73	;'I'
  1440  00FFA6  54                 	db	84	;'T'
  1441  00FFA7  0D                 	db	13
  1442  00FFA8  00                 	db	0
  1443  00FFA9                     STR_30:
  1444  00FFA9  41                 	db	65	;'A'
  1445  00FFAA  54                 	db	84	;'T'
  1446  00FFAB  2B                 	db	43
  1447  00FFAC  43                 	db	67	;'C'
  1448  00FFAD  4C                 	db	76	;'L'
  1449  00FFAE  49                 	db	73	;'I'
  1450  00FFAF  50                 	db	80	;'P'
  1451  00FFB0  3D                 	db	61	;'='
  1452  00FFB1  31                 	db	49	;'1'
  1453  00FFB2  0D                 	db	13
  1454  00FFB3  0A                 	db	10
  1455  00FFB4  00                 	db	0
  1456  00FFB5                     STR_28:
  1457  00FFB5  4D                 	db	77	;'M'
  1458  00FFB6  61                 	db	97	;'a'
  1459  00FFB7  72                 	db	114	;'r'
  1460  00FFB8  20                 	db	32
  1461  00FFB9  32                 	db	50	;'2'
  1462  00FFBA  30                 	db	48	;'0'
  1463  00FFBB  20                 	db	32
  1464  00FFBC  32                 	db	50	;'2'
  1465  00FFBD  30                 	db	48	;'0'
  1466  00FFBE  32                 	db	50	;'2'
  1467  00FFBF  32                 	db	50	;'2'
  1468  00FFC0  00                 	db	0
  1469  00FFC1                     STR_4:
  1470  00FFC1  41                 	db	65	;'A'
  1471  00FFC2  54                 	db	84	;'T'
  1472  00FFC3  2B                 	db	43
  1473  00FFC4  43                 	db	67	;'C'
  1474  00FFC5  4D                 	db	77	;'M'
  1475  00FFC6  47                 	db	71	;'G'
  1476  00FFC7  52                 	db	82	;'R'
  1477  00FFC8  3D                 	db	61	;'='
  1478  00FFC9  31                 	db	49	;'1'
  1479  00FFCA  0D                 	db	13
  1480  00FFCB  0A                 	db	10
  1481  00FFCC  00                 	db	0
  1482  00FFCD                     STR_5:
  1483  00FFCD  41                 	db	65	;'A'
  1484  00FFCE  54                 	db	84	;'T'
  1485  00FFCF  2B                 	db	43
  1486  00FFD0  43                 	db	67	;'C'
  1487  00FFD1  4D                 	db	77	;'M'
  1488  00FFD2  47                 	db	71	;'G'
  1489  00FFD3  53                 	db	83	;'S'
  1490  00FFD4  3D                 	db	61	;'='
  1491  00FFD5  22                 	db	34
  1492  00FFD6  00                 	db	0
  1493  00FFD7                     STR_31:
  1494  00FFD7  28                 	db	40
  1495  00FFD8  6E                 	db	110	;'n'
  1496  00FFD9  75                 	db	117	;'u'
  1497  00FFDA  6C                 	db	108	;'l'
  1498  00FFDB  6C                 	db	108	;'l'
  1499  00FFDC  29                 	db	41
  1500  00FFDD  00                 	db	0
  1501  00FFDE                     STR_3:
  1502  00FFDE  41                 	db	65	;'A'
  1503  00FFDF  54                 	db	84	;'T'
  1504  00FFE0  45                 	db	69	;'E'
  1505  00FFE1  30                 	db	48	;'0'
  1506  00FFE2  0D                 	db	13
  1507  00FFE3  0A                 	db	10
  1508  00FFE4  00                 	db	0
  1509  00FFE5                     STR_1:
  1510  00FFE5  41                 	db	65	;'A'
  1511  00FFE6  54                 	db	84	;'T'
  1512  00FFE7  0D                 	db	13
  1513  00FFE8  0A                 	db	10
  1514  00FFE9  00                 	db	0
  1515  00FFEA  41                 	db	65	;'A'
  1516  00FFEB  54                 	db	84	;'T'
  1517  00FFEC  41                 	db	65	;'A'
  1518  00FFED  0D                 	db	13
  1519  00FFEE  00                 	db	0
  1520  00FFEF                     STR_6:
  1521  00FFEF  41                 	db	65	;'A'
  1522  00FFF0  54                 	db	84	;'T'
  1523  00FFF1  48                 	db	72	;'H'
  1524  00FFF2  0D                 	db	13
  1525  00FFF3  00                 	db	0
  1526  00FFF4                     STR_24:
  1527  00FFF4  2E                 	db	46
  1528  00FFF5  00                 	db	0
  1529  0000                     
  1530                           ; #config settings
  1531  00FFF6  00                 	db	0	; dummy byte at the end
  1532  0000                     
  1533                           	psect	cinit
  1534  00280C                     __pcinit:
  1535                           	opt stack 0
  1536  00280C                     start_initialization:
  1537                           	opt stack 0
  1538  00280C                     __initialization:
  1539                           	opt stack 0
  1540                           
  1541                           ; Initialize objects allocated to BANK5 (80 bytes)
  1542                           ; load TBLPTR registers with __pidataBANK5
  1543  00280C  0E94               	movlw	low __pidataBANK5
  1544  00280E  6EF6               	movwf	tblptrl,c
  1545  002810  0E56               	movlw	high __pidataBANK5
  1546  002812  6EF7               	movwf	tblptrh,c
  1547  002814  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1548  002816  6EF8               	movwf	tblptru,c
  1549  002818  EE05  F0A4         	lfsr	0,__pdataBANK5
  1550  00281C  EE10 F050          	lfsr	1,80
  1551  002820                     copy_data0:
  1552  002820  0009               	tblrd		*+
  1553  002822  CFF5 FFEE          	movff	tablat,postinc0
  1554  002826  50E5               	movf	postdec1,w,c
  1555  002828  50E1               	movf	fsr1l,w,c
  1556  00282A  E1FA               	bnz	copy_data0
  1557                           
  1558                           ; Initialize objects allocated to BANK3 (65 bytes)
  1559                           ; load TBLPTR registers with __pidataBANK3
  1560  00282C  0EDC               	movlw	low __pidataBANK3
  1561  00282E  6EF6               	movwf	tblptrl,c
  1562  002830  0E5A               	movlw	high __pidataBANK3
  1563  002832  6EF7               	movwf	tblptrh,c
  1564  002834  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1565  002836  6EF8               	movwf	tblptru,c
  1566  002838  EE03  F0BD         	lfsr	0,__pdataBANK3
  1567  00283C  EE10 F041          	lfsr	1,65
  1568  002840                     copy_data1:
  1569  002840  0009               	tblrd		*+
  1570  002842  CFF5 FFEE          	movff	tablat,postinc0
  1571  002846  50E5               	movf	postdec1,w,c
  1572  002848  50E1               	movf	fsr1l,w,c
  1573  00284A  E1FA               	bnz	copy_data1
  1574                           
  1575                           ; Initialize objects allocated to BANK2 (13 bytes)
  1576                           ; load TBLPTR registers with __pidataBANK2
  1577  00284C  0ED4               	movlw	low __pidataBANK2
  1578  00284E  6EF6               	movwf	tblptrl,c
  1579  002850  0E63               	movlw	high __pidataBANK2
  1580  002852  6EF7               	movwf	tblptrh,c
  1581  002854  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1582  002856  6EF8               	movwf	tblptru,c
  1583  002858  EE02  F0F3         	lfsr	0,__pdataBANK2
  1584  00285C  EE10 F00D          	lfsr	1,13
  1585  002860                     copy_data2:
  1586  002860  0009               	tblrd		*+
  1587  002862  CFF5 FFEE          	movff	tablat,postinc0
  1588  002866  50E5               	movf	postdec1,w,c
  1589  002868  50E1               	movf	fsr1l,w,c
  1590  00286A  E1FA               	bnz	copy_data2
  1591                           
  1592                           ; Initialize objects allocated to BANK1 (2 bytes)
  1593                           ; load TBLPTR registers with __pidataBANK1
  1594  00286C  0E50               	movlw	low __pidataBANK1
  1595  00286E  6EF6               	movwf	tblptrl,c
  1596  002870  0E64               	movlw	high __pidataBANK1
  1597  002872  6EF7               	movwf	tblptrh,c
  1598  002874  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1599  002876  6EF8               	movwf	tblptru,c
  1600  002878  0009               	tblrd		*+	;fetch initializer
  1601  00287A  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1602  00287E  0009               	tblrd		*+	;fetch initializer
  1603  002880  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1604                           
  1605                           ; Initialize objects allocated to BANK4 (24 bytes)
  1606                           ; load TBLPTR registers with __pidataBANK4
  1607  002884  0E74               	movlw	low __pidataBANK4
  1608  002886  6EF6               	movwf	tblptrl,c
  1609  002888  0E62               	movlw	high __pidataBANK4
  1610  00288A  6EF7               	movwf	tblptrh,c
  1611  00288C  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1612  00288E  6EF8               	movwf	tblptru,c
  1613  002890  EE04  F0D0         	lfsr	0,__pdataBANK4
  1614  002894  EE10 F018          	lfsr	1,24
  1615  002898                     copy_data3:
  1616  002898  0009               	tblrd		*+
  1617  00289A  CFF5 FFEE          	movff	tablat,postinc0
  1618  00289E  50E5               	movf	postdec1,w,c
  1619  0028A0  50E1               	movf	fsr1l,w,c
  1620  0028A2  E1FA               	bnz	copy_data3
  1621                           
  1622                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1623  0028A4  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1624  0028A8  EE13 F020          	lfsr	1,800
  1625  0028AC                     clear_0:
  1626  0028AC  6AEE               	clrf	postinc0,c
  1627  0028AE  50E5               	movf	postdec1,w,c
  1628  0028B0  50E1               	movf	fsr1l,w,c
  1629  0028B2  E1FC               	bnz	clear_0
  1630  0028B4  50E2               	movf	fsr1h,w,c
  1631  0028B6  E1FA               	bnz	clear_0
  1632                           
  1633                           ; Clear objects allocated to BANK9 (200 bytes)
  1634  0028B8  EE09  F000         	lfsr	0,__pbssBANK9
  1635  0028BC  0EC8               	movlw	200
  1636  0028BE                     clear_1:
  1637  0028BE  6AEE               	clrf	postinc0,c
  1638  0028C0  06E8               	decf	wreg,f,c
  1639  0028C2  E1FD               	bnz	clear_1
  1640                           
  1641                           ; Clear objects allocated to BANK8 (200 bytes)
  1642  0028C4  EE08  F000         	lfsr	0,__pbssBANK8
  1643  0028C8  0EC8               	movlw	200
  1644  0028CA                     clear_2:
  1645  0028CA  6AEE               	clrf	postinc0,c
  1646  0028CC  06E8               	decf	wreg,f,c
  1647  0028CE  E1FD               	bnz	clear_2
  1648                           
  1649                           ; Clear objects allocated to BANK7 (246 bytes)
  1650  0028D0  EE07  F000         	lfsr	0,__pbssBANK7
  1651  0028D4  0EF6               	movlw	246
  1652  0028D6                     clear_3:
  1653  0028D6  6AEE               	clrf	postinc0,c
  1654  0028D8  06E8               	decf	wreg,f,c
  1655  0028DA  E1FD               	bnz	clear_3
  1656                           
  1657                           ; Clear objects allocated to BANK6 (220 bytes)
  1658  0028DC  EE06  F000         	lfsr	0,__pbssBANK6
  1659  0028E0  0EDC               	movlw	220
  1660  0028E2                     clear_4:
  1661  0028E2  6AEE               	clrf	postinc0,c
  1662  0028E4  06E8               	decf	wreg,f,c
  1663  0028E6  E1FD               	bnz	clear_4
  1664                           
  1665                           ; Clear objects allocated to BANK5 (164 bytes)
  1666  0028E8  EE05  F000         	lfsr	0,__pbssBANK5
  1667  0028EC  0EA4               	movlw	164
  1668  0028EE                     clear_5:
  1669  0028EE  6AEE               	clrf	postinc0,c
  1670  0028F0  06E8               	decf	wreg,f,c
  1671  0028F2  E1FD               	bnz	clear_5
  1672                           
  1673                           ; Clear objects allocated to BANK3 (189 bytes)
  1674  0028F4  EE03  F000         	lfsr	0,__pbssBANK3
  1675  0028F8  0EBD               	movlw	189
  1676  0028FA                     clear_6:
  1677  0028FA  6AEE               	clrf	postinc0,c
  1678  0028FC  06E8               	decf	wreg,f,c
  1679  0028FE  E1FD               	bnz	clear_6
  1680                           
  1681                           ; Clear objects allocated to BANK2 (43 bytes)
  1682  002900  EE02  F0C8         	lfsr	0,__pbssBANK2
  1683  002904  0E2B               	movlw	43
  1684  002906                     clear_7:
  1685  002906  6AEE               	clrf	postinc0,c
  1686  002908  06E8               	decf	wreg,f,c
  1687  00290A  E1FD               	bnz	clear_7
  1688                           
  1689                           ; Clear objects allocated to BANK1 (53 bytes)
  1690  00290C  EE01  F0C9         	lfsr	0,__pbssBANK1
  1691  002910  0E35               	movlw	53
  1692  002912                     clear_8:
  1693  002912  6AEE               	clrf	postinc0,c
  1694  002914  06E8               	decf	wreg,f,c
  1695  002916  E1FD               	bnz	clear_8
  1696                           
  1697                           ; Clear objects allocated to BANK4 (144 bytes)
  1698  002918  EE04  F040         	lfsr	0,__pbssBANK4
  1699  00291C  0E90               	movlw	144
  1700  00291E                     clear_9:
  1701  00291E  6AEE               	clrf	postinc0,c
  1702  002920  06E8               	decf	wreg,f,c
  1703  002922  E1FD               	bnz	clear_9
  1704                           
  1705                           ; Clear objects allocated to BANK0 (51 bytes)
  1706  002924  EE00  F0B0         	lfsr	0,__pbssBANK0
  1707  002928  0E33               	movlw	51
  1708  00292A                     clear_10:
  1709  00292A  6AEE               	clrf	postinc0,c
  1710  00292C  06E8               	decf	wreg,f,c
  1711  00292E  E1FD               	bnz	clear_10
  1712                           
  1713                           ; Clear objects allocated to COMRAM (31 bytes)
  1714  002930  EE00  F023         	lfsr	0,__pbssCOMRAM
  1715  002934  0E1F               	movlw	31
  1716  002936                     clear_11:
  1717  002936  6AEE               	clrf	postinc0,c
  1718  002938  06E8               	decf	wreg,f,c
  1719  00293A  E1FD               	bnz	clear_11
  1720  00293C                     end_of_initialization:
  1721                           	opt stack 0
  1722  00293C                     __end_of__initialization:
  1723                           	opt stack 0
  1724  00293C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1725  00293E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1726  002940  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1727  002942  6EF8               	movwf	tblptru,c
  1728  002944  0100               	movlb	0
  1729  002946  EFF1  F031         	goto	_main	;jump to C main() function
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postdec1	equ	0xFE5
  1737                           fsr1h	equ	0xFE2
  1738                           fsr1l	equ	0xFE1
  1739                           
  1740                           	psect	bssCOMRAM
  1741  000023                     __pbssCOMRAM:
  1742                           	opt stack 0
  1743  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1744                           	opt stack 0
  1745  000023                     	ds	2
  1746  000025                     _USBDeferOUTDataStagePackets:
  1747                           	opt stack 0
  1748  000025                     	ds	1
  1749  000026                     _USBDeferINDataStagePackets:
  1750                           	opt stack 0
  1751  000026                     	ds	1
  1752  000027                     _USBStatusStageEnabledFlag2:
  1753                           	opt stack 0
  1754  000027                     	ds	1
  1755  000028                     ConfigureModem@MdmConfigState:
  1756                           	opt stack 0
  1757  000028                     	ds	1
  1758  000029                     TurnOnModem@TurnOnMdmState:
  1759                           	opt stack 0
  1760  000029                     	ds	1
  1761  00002A                     CheckModem@CheckMdmSts:
  1762                           	opt stack 0
  1763  00002A                     	ds	1
  1764  00002B                     _ComChecCompleted:
  1765                           	opt stack 0
  1766  00002B                     	ds	1
  1767  00002C                     Uart_Uart1RxIsr@UartRxData:
  1768                           	opt stack 0
  1769  00002C                     	ds	1
  1770  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1771                           	opt stack 0
  1772  00002D                     	ds	1
  1773  00002E                     MdmCntSm@MdmCntState:
  1774                           	opt stack 0
  1775  00002E                     	ds	1
  1776  00002F                     RiSm@MdmDrvState:
  1777                           	opt stack 0
  1778  00002F                     	ds	1
  1779  000030                     _Mmd_RingIndicator:
  1780                           	opt stack 0
  1781  000030                     	ds	1
  1782  000031                     I2c_ReadData@ReadStatus:
  1783                           	opt stack 0
  1784  000031                     	ds	1
  1785  000032                     I2c_ReadData@TentativeCounter:
  1786                           	opt stack 0
  1787  000032                     	ds	1
  1788  000033                     I2c_ReadData@DataCounter:
  1789                           	opt stack 0
  1790  000033                     	ds	1
  1791  000034                     I2c_ReadData@I2cReadState:
  1792                           	opt stack 0
  1793  000034                     	ds	1
  1794  000035                     I2c_WriteData@WriteStatus:
  1795                           	opt stack 0
  1796  000035                     	ds	1
  1797  000036                     I2c_WriteData@TentativeCounter:
  1798                           	opt stack 0
  1799  000036                     	ds	1
  1800  000037                     I2c_WriteData@I2cNextState:
  1801                           	opt stack 0
  1802  000037                     	ds	1
  1803  000038                     I2c_WriteData@I2cWriteState:
  1804                           	opt stack 0
  1805  000038                     	ds	1
  1806  000039                     _MdmStsReady:
  1807                           	opt stack 0
  1808  000039                     	ds	1
  1809  00003A                     _NewStringMdmTerminal:
  1810                           	opt stack 0
  1811  00003A                     	ds	1
  1812  00003B                     _NewMdmEvtParserRequest:
  1813                           	opt stack 0
  1814  00003B                     	ds	1
  1815  00003C                     _NewStringReceived:
  1816                           	opt stack 0
  1817  00003C                     	ds	1
  1818  00003D                     _MdmResetRequest:
  1819                           	opt stack 0
  1820  00003D                     	ds	1
  1821  00003E                     _CallClosedEvent:
  1822                           	opt stack 0
  1823  00003E                     	ds	1
  1824  00003F                     _IncomingCallEvent:
  1825                           	opt stack 0
  1826  00003F                     	ds	1
  1827  000040                     _NewSmsEvent:
  1828                           	opt stack 0
  1829  000040                     	ds	1
  1830  000041                     _ActivateRiDetection:
  1831                           	opt stack 0
  1832  000041                     	ds	1
  1833                           tblptru	equ	0xFF8
  1834                           tblptrh	equ	0xFF7
  1835                           tblptrl	equ	0xFF6
  1836                           tablat	equ	0xFF5
  1837                           postinc0	equ	0xFEE
  1838                           wreg	equ	0xFE8
  1839                           postdec1	equ	0xFE5
  1840                           fsr1h	equ	0xFE2
  1841                           fsr1l	equ	0xFE1
  1842                           
  1843                           	psect	bssBANK0
  1844  0000B0                     __pbssBANK0:
  1845                           	opt stack 0
  1846  0000B0                     _inPipes:
  1847                           	opt stack 0
  1848  0000B0                     	ds	6
  1849  0000B6                     _pBDTEntryIn:
  1850                           	opt stack 0
  1851  0000B6                     	ds	6
  1852  0000BC                     _CDCDataOutHandle:
  1853                           	opt stack 0
  1854  0000BC                     	ds	2
  1855  0000BE                     _pBDTEntryEP0OutNext:
  1856                           	opt stack 0
  1857  0000BE                     	ds	2
  1858  0000C0                     _pBDTEntryEP0OutCurrent:
  1859                           	opt stack 0
  1860  0000C0                     	ds	2
  1861  0000C2                     _RxLen:
  1862                           	opt stack 0
  1863  0000C2                     	ds	2
  1864  0000C4                     MyApp_Task@memoryFlag:
  1865                           	opt stack 0
  1866  0000C4                     	ds	1
  1867  0000C5                     _cdc_tx_len:
  1868                           	opt stack 0
  1869  0000C5                     	ds	1
  1870  0000C6                     _cdc_trf_state:
  1871                           	opt stack 0
  1872  0000C6                     	ds	1
  1873  0000C7                     _cdc_rx_len:
  1874                           	opt stack 0
  1875  0000C7                     	ds	1
  1876  0000C8                     _USBStatusStageEnabledFlag1:
  1877                           	opt stack 0
  1878  0000C8                     	ds	1
  1879  0000C9                     _USBDeferStatusStagePacket:
  1880                           	opt stack 0
  1881  0000C9                     	ds	1
  1882  0000CA                     _USBStatusStageTimeoutCounter:
  1883                           	opt stack 0
  1884  0000CA                     	ds	1
  1885  0000CB                     _endpoint_number:
  1886                           	opt stack 0
  1887  0000CB                     	ds	1
  1888  0000CC                     _controlTransferState:
  1889                           	opt stack 0
  1890  0000CC                     	ds	1
  1891  0000CD                     _shortPacketStatus:
  1892                           	opt stack 0
  1893  0000CD                     	ds	1
  1894  0000CE                     _USBDeviceState:
  1895                           	opt stack 0
  1896  0000CE                     	ds	1
  1897  0000CF                     _I2cComSts:
  1898                           	opt stack 0
  1899  0000CF                     	ds	1
  1900  0000D0                     HttpGetMethod@GetMethodNextState:
  1901                           	opt stack 0
  1902  0000D0                     	ds	1
  1903  0000D1                     InitGprsNetwork@GprsNetInitNextState:
  1904                           	opt stack 0
  1905  0000D1                     	ds	1
  1906  0000D2                     _MdmStatus:
  1907                           	opt stack 0
  1908  0000D2                     	ds	1
  1909  0000D3                     _PhoneNumbLen:
  1910                           	opt stack 0
  1911  0000D3                     	ds	1
  1912  0000D4                     _SmsLen:
  1913                           	opt stack 0
  1914  0000D4                     	ds	1
  1915  0000D5                     _SystemState:
  1916                           	opt stack 0
  1917  0000D5                     	ds	1
  1918  0000D6                     _USTATcopy:
  1919                           	opt stack 0
  1920  0000D6                     	ds	1
  1921  0000D7                     _USBActiveConfiguration:
  1922                           	opt stack 0
  1923  0000D7                     	ds	1
  1924  0000D8                     _I2cReadDataEvt:
  1925                           	opt stack 0
  1926  0000D8                     	ds	1
  1927  0000D9                     _I2cWriteDataEvt:
  1928                           	opt stack 0
  1929  0000D9                     	ds	1
  1930  0000DA                     _GetMethod:
  1931                           	opt stack 0
  1932  0000DA                     	ds	1
  1933  0000DB                     _InitNetwork:
  1934                           	opt stack 0
  1935  0000DB                     	ds	1
  1936  0000DC                     _SmsTxtReady:
  1937                           	opt stack 0
  1938  0000DC                     	ds	1
  1939  0000DD                     _GetSmsText:
  1940                           	opt stack 0
  1941  0000DD                     	ds	1
  1942  0000DE                     _SmsEvent:
  1943                           	opt stack 0
  1944  0000DE                     	ds	1
  1945  0000DF                     _ClipEvent:
  1946                           	opt stack 0
  1947  0000DF                     	ds	1
  1948  0000E0                     _RingEvent:
  1949                           	opt stack 0
  1950  0000E0                     	ds	1
  1951  0000E1                     _SendSmsEvent:
  1952                           	opt stack 0
  1953  0000E1                     	ds	1
  1954  0000E2                     _MdmOnOffPulseRequest:
  1955                           	opt stack 0
  1956  0000E2                     	ds	1
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           postinc0	equ	0xFEE
  1962                           wreg	equ	0xFE8
  1963                           postdec1	equ	0xFE5
  1964                           fsr1h	equ	0xFE2
  1965                           fsr1l	equ	0xFE1
  1966                           
  1967                           	psect	bssBANK1
  1968  0001C9                     __pbssBANK1:
  1969                           	opt stack 0
  1970  0001C9                     _outPipes:
  1971                           	opt stack 0
  1972  0001C9                     	ds	8
  1973  0001D1                     _CDCDataInHandle:
  1974                           	opt stack 0
  1975  0001D1                     	ds	2
  1976  0001D3                     initFsm@currentState:
  1977                           	opt stack 0
  1978  0001D3                     	ds	1
  1979  0001D4                     initEeprom@currentState:
  1980                           	opt stack 0
  1981  0001D4                     	ds	1
  1982  0001D5                     initGprsModem@currentState:
  1983                           	opt stack 0
  1984  0001D5                     	ds	1
  1985  0001D6                     MyApp_Task@blinkSeconds:
  1986                           	opt stack 0
  1987  0001D6                     	ds	1
  1988  0001D7                     	ds	1
  1989  0001D8                     	ds	1
  1990  0001D9                     	ds	1
  1991  0001DA                     	ds	1
  1992  0001DB                     	ds	1
  1993  0001DC                     	ds	1
  1994  0001DD                     	ds	1
  1995  0001DE                     GsmGprsTerminal@SMS:
  1996                           	opt stack 0
  1997  0001DE                     	ds	1
  1998  0001DF                     	ds	1
  1999  0001E0                     _control_signal_bitmap:
  2000                           	opt stack 0
  2001  0001E0                     	ds	1
  2002  0001E1                     _cdc_mem_type:
  2003                           	opt stack 0
  2004  0001E1                     	ds	1
  2005  0001E2                     _USBTicksSinceSuspendEnd:
  2006                           	opt stack 0
  2007  0001E2                     	ds	1
  2008  0001E3                     _BothEP0OutUOWNsSet:
  2009                           	opt stack 0
  2010  0001E3                     	ds	1
  2011  0001E4                     _USBBusIsSuspended:
  2012                           	opt stack 0
  2013  0001E4                     	ds	1
  2014  0001E5                     _RemoteWakeup:
  2015                           	opt stack 0
  2016  0001E5                     	ds	1
  2017  0001E6                     I2cSlv_QueryI2cData@Ret:
  2018                           	opt stack 0
  2019  0001E6                     	ds	1
  2020  0001E7                     I2cSlv_QueryI2cData@I2cOpState:
  2021                           	opt stack 0
  2022  0001E7                     	ds	1
  2023  0001E8                     I2cSendMsgSm@I2cComState:
  2024                           	opt stack 0
  2025  0001E8                     	ds	1
  2026  0001E9                     _I2cBusStatus:
  2027                           	opt stack 0
  2028  0001E9                     	ds	1
  2029  0001EA                     HttpGetMethod@GetMOutSts:
  2030                           	opt stack 0
  2031  0001EA                     	ds	1
  2032  0001EB                     HttpGetMethod@GetMethodState:
  2033                           	opt stack 0
  2034  0001EB                     	ds	1
  2035  0001EC                     InitGprsNetwork@GprsNetInitState:
  2036                           	opt stack 0
  2037  0001EC                     	ds	1
  2038  0001ED                     _PostMethod:
  2039                           	opt stack 0
  2040  0001ED                     	ds	1
  2041  0001EE                     _HttpGetMethodSts:
  2042                           	opt stack 0
  2043  0001EE                     	ds	1
  2044  0001EF                     _GprsNetworkSts:
  2045                           	opt stack 0
  2046  0001EF                     	ds	1
  2047  0001F0                     _ApnLenLocal:
  2048                           	opt stack 0
  2049  0001F0                     	ds	1
  2050  0001F1                     SendSmsSm@SendSms_NextState:
  2051                           	opt stack 0
  2052  0001F1                     	ds	1
  2053  0001F2                     SendSmsSm@SendSms_State:
  2054                           	opt stack 0
  2055  0001F2                     	ds	1
  2056  0001F3                     GetSmsSm@GetSmsState:
  2057                           	opt stack 0
  2058  0001F3                     	ds	1
  2059  0001F4                     ConfigureModem@NextState:
  2060                           	opt stack 0
  2061  0001F4                     	ds	1
  2062  0001F5                     _ReadAddress:
  2063                           	opt stack 0
  2064  0001F5                     	ds	1
  2065  0001F6                     _AlarmEvent:
  2066                           	opt stack 0
  2067  0001F6                     	ds	1
  2068  0001F7                     _Led3OutSts:
  2069                           	opt stack 0
  2070  0001F7                     	ds	1
  2071  0001F8                     _Led3Sts:
  2072                           	opt stack 0
  2073  0001F8                     	ds	1
  2074  0001F9                     _Led2OutSts:
  2075                           	opt stack 0
  2076  0001F9                     	ds	1
  2077  0001FA                     _Led2Sts:
  2078                           	opt stack 0
  2079  0001FA                     	ds	1
  2080  0001FB                     _Led1OutSts:
  2081                           	opt stack 0
  2082  0001FB                     	ds	1
  2083  0001FC                     _Led1Sts:
  2084                           	opt stack 0
  2085  0001FC                     	ds	1
  2086  0001FD                     I2cDummyTx@DummyBuffer:
  2087                           	opt stack 0
  2088  0001FD                     	ds	1
  2089                           tblptru	equ	0xFF8
  2090                           tblptrh	equ	0xFF7
  2091                           tblptrl	equ	0xFF6
  2092                           tablat	equ	0xFF5
  2093                           postinc0	equ	0xFEE
  2094                           wreg	equ	0xFE8
  2095                           postdec1	equ	0xFE5
  2096                           fsr1h	equ	0xFE2
  2097                           fsr1l	equ	0xFE1
  2098                           
  2099                           	psect	dataBANK1
  2100  0001FE                     __pdataBANK1:
  2101                           	opt stack 0
  2102  0001FE                     _isMemoryEmpty:
  2103                           	opt stack 0
  2104  0001FE                     	ds	1
  2105  0001FF                     InitGprsNetwork@GprsInitSts:
  2106                           	opt stack 0
  2107  0001FF                     	ds	1
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           postinc0	equ	0xFEE
  2113                           wreg	equ	0xFE8
  2114                           postdec1	equ	0xFE5
  2115                           fsr1h	equ	0xFE2
  2116                           fsr1l	equ	0xFE1
  2117                           
  2118                           	psect	bssBANK2
  2119  0002C8                     __pbssBANK2:
  2120                           	opt stack 0
  2121  0002C8                     _pCDCDst:
  2122                           	opt stack 0
  2123  0002C8                     	ds	3
  2124  0002CB                     _pCDCSrc:
  2125                           	opt stack 0
  2126  0002CB                     	ds	3
  2127  0002CE                     _ep_data_out:
  2128                           	opt stack 0
  2129  0002CE                     	ds	3
  2130  0002D1                     _ep_data_in:
  2131                           	opt stack 0
  2132  0002D1                     	ds	3
  2133  0002D4                     _pDst:
  2134                           	opt stack 0
  2135  0002D4                     	ds	2
  2136  0002D6                     ConfigureModem@DelayCounter:
  2137                           	opt stack 0
  2138  0002D6                     	ds	2
  2139  0002D8                     ConfigureModem@DelayValueMs:
  2140                           	opt stack 0
  2141  0002D8                     	ds	2
  2142  0002DA                     TurnOnModem@Counter:
  2143                           	opt stack 0
  2144  0002DA                     	ds	2
  2145  0002DC                     UpdateSchFlag@InterruptCounter:
  2146                           	opt stack 0
  2147  0002DC                     	ds	2
  2148  0002DE                     MdmCntSm@Counter:
  2149                           	opt stack 0
  2150  0002DE                     	ds	2
  2151  0002E0                     RiSm@Counter:
  2152                           	opt stack 0
  2153  0002E0                     	ds	2
  2154  0002E2                     _ExtInt1IsrCallback:
  2155                           	opt stack 0
  2156  0002E2                     	ds	2
  2157  0002E4                     _ExtInt0IsrCallback:
  2158                           	opt stack 0
  2159  0002E4                     	ds	2
  2160  0002E6                     _RtccIsrCallback:
  2161                           	opt stack 0
  2162  0002E6                     	ds	2
  2163  0002E8                     _Tmr4IsrCallback:
  2164                           	opt stack 0
  2165  0002E8                     	ds	2
  2166  0002EA                     _Tmr2IsrCallback:
  2167                           	opt stack 0
  2168  0002EA                     	ds	2
  2169  0002EC                     Term_MainSm@TermMainSmState:
  2170                           	opt stack 0
  2171  0002EC                     	ds	1
  2172  0002ED                     Terminal@FormatOption:
  2173                           	opt stack 0
  2174  0002ED                     	ds	1
  2175  0002EE                     Terminal@SlaveAddr:
  2176                           	opt stack 0
  2177  0002EE                     	ds	1
  2178  0002EF                     Terminal@PackageLen:
  2179                           	opt stack 0
  2180  0002EF                     	ds	1
  2181  0002F0                     Terminal@TermState:
  2182                           	opt stack 0
  2183  0002F0                     	ds	1
  2184  0002F1                     _USBAlternateInterface:
  2185                           	opt stack 0
  2186  0002F1                     	ds	2
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postdec1	equ	0xFE5
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           
  2197                           	psect	dataBANK2
  2198  0002F3                     __pdataBANK2:
  2199                           	opt stack 0
  2200  0002F3                     Terminal@EchoOption:
  2201                           	opt stack 0
  2202  0002F3                     	ds	1
  2203  0002F4                     _MainSystemTimebaseFlag:
  2204                           	opt stack 0
  2205  0002F4                     	ds	1
  2206  0002F5                     _ConnTimeout:
  2207                           	opt stack 0
  2208  0002F5                     	ds	11
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	bssBANK3
  2220  000300                     __pbssBANK3:
  2221                           	opt stack 0
  2222  000300                     _Rtcm_SystemDate:
  2223                           	opt stack 0
  2224  000300                     	ds	8
  2225  000308                     _Rtcm_RtccAlarm:
  2226                           	opt stack 0
  2227  000308                     	ds	6
  2228  00030E                     _pBDTEntryOut:
  2229                           	opt stack 0
  2230  00030E                     	ds	6
  2231  000314                     _BaudRateGen:
  2232                           	opt stack 0
  2233  000314                     	ds	4
  2234  000318                     _USB1msTickCount:
  2235                           	opt stack 0
  2236  000318                     	ds	4
  2237  00031C                     _OsTmr_OsTickCounter:
  2238                           	opt stack 0
  2239  00031C                     	ds	4
  2240  000320                     	ds	2
  2241  000322                     _UsbMasterPhoneNumberLen:
  2242                           	opt stack 0
  2243  000322                     	ds	2
  2244  000324                     _ApnLocal:
  2245                           	opt stack 0
  2246  000324                     	ds	2
  2247  000326                     _UartConfig:
  2248                           	opt stack 0
  2249  000326                     	ds	21
  2250  00033B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2251                           	opt stack 0
  2252  00033B                     	ds	11
  2253  000346                     I2cSlv_QueryI2cData@QueryTimer:
  2254                           	opt stack 0
  2255  000346                     	ds	11
  2256  000351                     _I2cConfig:
  2257                           	opt stack 0
  2258  000351                     	ds	10
  2259  00035B                     _Led3Blink:
  2260                           	opt stack 0
  2261  00035B                     	ds	9
  2262  000364                     _Led2Blink:
  2263                           	opt stack 0
  2264  000364                     	ds	9
  2265  00036D                     _Led1Blink:
  2266                           	opt stack 0
  2267  00036D                     	ds	9
  2268  000376                     _dummy_encapsulated_cmd_response:
  2269                           	opt stack 0
  2270  000376                     	ds	8
  2271  00037E                     _line_coding:
  2272                           	opt stack 0
  2273  00037E                     	ds	7
  2274  000385                     _Led3Pulse:
  2275                           	opt stack 0
  2276  000385                     	ds	6
  2277  00038B                     _Led2Pulse:
  2278                           	opt stack 0
  2279  00038B                     	ds	6
  2280  000391                     _Led1Pulse:
  2281                           	opt stack 0
  2282  000391                     	ds	6
  2283  000397                     _I2cRxPacket:
  2284                           	opt stack 0
  2285  000397                     	ds	6
  2286  00039D                     _I2cTxPacket:
  2287                           	opt stack 0
  2288  00039D                     	ds	5
  2289  0003A2                     _HttpGetDataLocal:
  2290                           	opt stack 0
  2291  0003A2                     	ds	5
  2292  0003A7                     _memoryPreamble:
  2293                           	opt stack 0
  2294  0003A7                     	ds	4
  2295  0003AB                     Terminal@Addr:
  2296                           	opt stack 0
  2297  0003AB                     	ds	4
  2298  0003AF                     Terminal@Len:
  2299                           	opt stack 0
  2300  0003AF                     	ds	4
  2301  0003B3                     _AlCfg:
  2302                           	opt stack 0
  2303  0003B3                     	ds	4
  2304  0003B7                     _RtcConfig:
  2305                           	opt stack 0
  2306  0003B7                     	ds	4
  2307  0003BB                     initGprsModem@modemCounter:
  2308                           	opt stack 0
  2309  0003BB                     	ds	2
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           postdec1	equ	0xFE5
  2317                           fsr1h	equ	0xFE2
  2318                           fsr1l	equ	0xFE1
  2319                           
  2320                           	psect	dataBANK3
  2321  0003BD                     __pdataBANK3:
  2322                           	opt stack 0
  2323  0003BD                     ModemEvtParser@F9111:
  2324                           	opt stack 0
  2325  0003BD                     	ds	5
  2326  0003C2                     ModemEvtParser@F9109:
  2327                           	opt stack 0
  2328  0003C2                     	ds	5
  2329  0003C7                     ModemEvtParser@F9107:
  2330                           	opt stack 0
  2331  0003C7                     	ds	4
  2332  0003CB                     MyApp_Task@F9007:
  2333                           	opt stack 0
  2334  0003CB                     	ds	3
  2335  0003CE                     triggerRelay@F8986:
  2336                           	opt stack 0
  2337  0003CE                     	ds	2
  2338  0003D0                     Term_MainSm@TermDelay:
  2339                           	opt stack 0
  2340  0003D0                     	ds	11
  2341  0003DB                     _ConnWait:
  2342                           	opt stack 0
  2343  0003DB                     	ds	11
  2344  0003E6                     SendSmsSm@SwTimer:
  2345                           	opt stack 0
  2346  0003E6                     	ds	11
  2347  0003F1                     CheckModem@Timeout:
  2348                           	opt stack 0
  2349  0003F1                     	ds	11
  2350  0003FC                     MyApp_Task@blinkTicks:
  2351                           	opt stack 0
  2352  0003FC                     	ds	2
  2353                           tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           postdec1	equ	0xFE5
  2360                           fsr1h	equ	0xFE2
  2361                           fsr1l	equ	0xFE1
  2362                           
  2363                           	psect	bssBANK4
  2364  000440                     __pbssBANK4:
  2365                           	opt stack 0
  2366  000440                     _UsbMasterPhoneNumber:
  2367                           	opt stack 0
  2368  000440                     	ds	15
  2369  00044F                     	ds	10
  2370  000459                     _cdc_notice:
  2371                           	opt stack 0
  2372  000459                     	ds	10
  2373  000463                     Term_MainSm@Data:
  2374                           	opt stack 0
  2375  000463                     	ds	50
  2376  000495                     _PhoneNumber:
  2377                           	opt stack 0
  2378  000495                     	ds	20
  2379  0004A9                     _EepromBuffer:
  2380                           	opt stack 0
  2381  0004A9                     	ds	15
  2382  0004B8                     _callerNumber:
  2383                           	opt stack 0
  2384  0004B8                     	ds	13
  2385  0004C5                     Terminal@SwTimer:
  2386                           	opt stack 0
  2387  0004C5                     	ds	11
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           postinc0	equ	0xFEE
  2393                           wreg	equ	0xFE8
  2394                           postdec1	equ	0xFE5
  2395                           fsr1h	equ	0xFE2
  2396                           fsr1l	equ	0xFE1
  2397                           
  2398                           	psect	dataBANK4
  2399  0004D0                     __pdataBANK4:
  2400                           	opt stack 0
  2401  0004D0                     ModemEvtParser@F9113:
  2402                           	opt stack 0
  2403  0004D0                     	ds	10
  2404  0004DA                     MyApp_Task@phone:
  2405                           	opt stack 0
  2406  0004DA                     	ds	14
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           
  2417                           	psect	bssBANK5
  2418  000500                     __pbssBANK5:
  2419                           	opt stack 0
  2420  000500                     _cdc_data_rx:
  2421                           	opt stack 0
  2422  000500                     	ds	64
  2423  000540                     Terminal@TermRxBuffer:
  2424                           	opt stack 0
  2425  000540                     	ds	50
  2426  000572                     _MessageText:
  2427                           	opt stack 0
  2428  000572                     	ds	50
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439                           	psect	dataBANK5
  2440  0005A4                     __pdataBANK5:
  2441                           	opt stack 0
  2442  0005A4                     _TaskTable:
  2443                           	opt stack 0
  2444  0005A4                     	ds	80
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1h	equ	0xFE2
  2453                           fsr1l	equ	0xFE1
  2454                           
  2455                           	psect	bssBANK6
  2456  000600                     __pbssBANK6:
  2457                           	opt stack 0
  2458  000600                     _OsAlarms:
  2459                           	opt stack 0
  2460  000600                     	ds	220
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           postdec1	equ	0xFE5
  2468                           fsr1h	equ	0xFE2
  2469                           fsr1l	equ	0xFE1
  2470                           
  2471                           	psect	bssBANK7
  2472  000700                     __pbssBANK7:
  2473                           	opt stack 0
  2474  000700                     _Mdm_SmsRx:
  2475                           	opt stack 0
  2476  000700                     	ds	102
  2477  000766                     Terminal@Payload:
  2478                           	opt stack 0
  2479  000766                     	ds	80
  2480  0007B6                     _cdc_data_tx:
  2481                           	opt stack 0
  2482  0007B6                     	ds	64
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           postdec1	equ	0xFE5
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           
  2493                           	psect	bssBANK8
  2494  000800                     __pbssBANK8:
  2495                           	opt stack 0
  2496  000800                     GsmGprsTerminal@UsbBuffer:
  2497                           	opt stack 0
  2498  000800                     	ds	200
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           fsr1h	equ	0xFE2
  2507                           fsr1l	equ	0xFE1
  2508                           
  2509                           	psect	bssBANK9
  2510  000900                     __pbssBANK9:
  2511                           	opt stack 0
  2512  000900                     GsmGprsTerminal@UartBuffer:
  2513                           	opt stack 0
  2514  000900                     	ds	200
  2515                           tblptru	equ	0xFF8
  2516                           tblptrh	equ	0xFF7
  2517                           tblptrl	equ	0xFF6
  2518                           tablat	equ	0xFF5
  2519                           postinc0	equ	0xFEE
  2520                           wreg	equ	0xFE8
  2521                           postdec1	equ	0xFE5
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           
  2525                           	psect	bssBIGRAMl
  2526  000AC8                     __pbssBIGRAMl:
  2527                           	opt stack 0
  2528  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2529                           	opt stack 0
  2530  000AC8                     	ds	400
  2531  000C58                     _RxBuffer:
  2532                           	opt stack 0
  2533  000C58                     	ds	400
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           
  2544                           	psect	cstackBANK10
  2545  000A00                     __pcstackBANK10:
  2546                           	opt stack 0
  2547  000A00                     Terminal@UsbRxBuffer:
  2548                           	opt stack 0
  2549                           
  2550                           ; 200 bytes @ 0x0
  2551  000A00                     	ds	200
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           postdec1	equ	0xFE5
  2559                           fsr1h	equ	0xFE2
  2560                           fsr1l	equ	0xFE1
  2561                           
  2562                           	psect	cstackBANK4
  2563  0004E8                     __pcstackBANK4:
  2564                           	opt stack 0
  2565  0004E8                     ??_ScheduleTasks:
  2566  0004E8                     InitializeTasks@ActiveTaskIndex:
  2567                           	opt stack 0
  2568                           
  2569                           ; 1 bytes @ 0x0
  2570  0004E8                     	ds	4
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           postinc0	equ	0xFEE
  2576                           wreg	equ	0xFE8
  2577                           postdec1	equ	0xFE5
  2578                           fsr1h	equ	0xFE2
  2579                           fsr1l	equ	0xFE1
  2580                           
  2581                           	psect	cstackBANK3
  2582  0003FE                     __pcstackBANK3:
  2583                           	opt stack 0
  2584  0003FE                     ??_InitializeTasks:
  2585  0003FE                     ScheduleTasks@ActiveTaskIndex:
  2586                           	opt stack 0
  2587                           
  2588                           ; 1 bytes @ 0x0
  2589  0003FE                     	ds	2
  2590                           tblptru	equ	0xFF8
  2591                           tblptrh	equ	0xFF7
  2592                           tblptrl	equ	0xFF6
  2593                           tablat	equ	0xFF5
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           postdec1	equ	0xFE5
  2597                           fsr1h	equ	0xFE2
  2598                           fsr1l	equ	0xFE1
  2599                           
  2600                           	psect	cstackBANK2
  2601  000200                     __pcstackBANK2:
  2602                           	opt stack 0
  2603  000200                     Terminal@UsbTxBuffer:
  2604                           	opt stack 0
  2605                           
  2606                           ; 200 bytes @ 0x0
  2607  000200                     	ds	200
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           postdec1	equ	0xFE5
  2615                           fsr1h	equ	0xFE2
  2616                           fsr1l	equ	0xFE1
  2617                           
  2618                           	psect	cstackBANK1
  2619  000100                     __pcstackBANK1:
  2620                           	opt stack 0
  2621  000100                     initEeprom@addressToRead:
  2622                           	opt stack 0
  2623  000100                     SendSmsSm@UartMessage:
  2624                           	opt stack 0
  2625  000100                     InitGprsNetwork@UartMessage:
  2626                           	opt stack 0
  2627  000100                     Terminal@TermTxBuffer:
  2628                           	opt stack 0
  2629  000100                     HttpGetMethod@UartMessage:
  2630                           	opt stack 0
  2631                           
  2632                           ; 200 bytes @ 0x0
  2633  000100                     	ds	1
  2634  000101                     initEeprom@memoryOpResult:
  2635                           	opt stack 0
  2636                           
  2637                           ; 1 bytes @ 0x1
  2638  000101                     	ds	1
  2639  000102                     initEeprom@isInitialized:
  2640                           	opt stack 0
  2641                           
  2642                           ; 1 bytes @ 0x2
  2643  000102                     	ds	1
  2644  000103                     initFsm@isInitialized:
  2645                           	opt stack 0
  2646                           
  2647                           ; 1 bytes @ 0x3
  2648  000103                     	ds	1
  2649  000104                     MyApp_Task@cmpString:
  2650                           	opt stack 0
  2651                           
  2652                           ; 3 bytes @ 0x4
  2653  000104                     	ds	3
  2654  000107                     MyApp_Task@memoryResult:
  2655                           	opt stack 0
  2656                           
  2657                           ; 1 bytes @ 0x7
  2658  000107                     	ds	43
  2659  000132                     InitGprsNetwork@Index:
  2660                           	opt stack 0
  2661  000132                     Term_MainSm@FwkMajorStr:
  2662                           	opt stack 0
  2663                           
  2664                           ; 4 bytes @ 0x32
  2665  000132                     	ds	4
  2666  000136                     Term_MainSm@FwkMinorStr:
  2667                           	opt stack 0
  2668                           
  2669                           ; 4 bytes @ 0x36
  2670  000136                     	ds	4
  2671  00013A                     Term_MainSm@FwkBuildStr:
  2672                           	opt stack 0
  2673                           
  2674                           ; 4 bytes @ 0x3A
  2675  00013A                     	ds	142
  2676  0001C8                     HttpGetMethod@Index:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0xC8
  2680  0001C8                     	ds	1
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           
  2691                           	psect	cstackBANK0
  2692  000060                     __pcstackBANK0:
  2693                           	opt stack 0
  2694  000060                     
  2695                           ; 1 bytes @ 0x0
  2696  000060                     	ds	8
  2697  000068                     ??_LowPriorityIsr:
  2698                           
  2699                           ; 1 bytes @ 0x8
  2700  000068                     	ds	21
  2701  00007D                     ??_isdigit:
  2702  00007D                     ??_isspace:
  2703  00007D                     ??_isupper:
  2704  00007D                     ??_Rtcc_GetRtccValue:
  2705  00007D                     ??_UartTxBufferStatus:
  2706  00007D                     ??_USBStdGetDscHandler:
  2707  00007D                     ??_USBStdGetStatusHandler:
  2708  00007D                     ?_USBTransferOnePacket:
  2709                           	opt stack 0
  2710  00007D                     ?_strlen:
  2711                           	opt stack 0
  2712  00007D                     ?_sprintf:
  2713                           	opt stack 0
  2714  00007D                     ?___wmul:
  2715                           	opt stack 0
  2716  00007D                     ?___awdiv:
  2717                           	opt stack 0
  2718  00007D                     ?___awmod:
  2719                           	opt stack 0
  2720  00007D                     ?___lwmod:
  2721                           	opt stack 0
  2722  00007D                     ?_GetOsTickCounter:
  2723                           	opt stack 0
  2724  00007D                     ?___lmul:
  2725                           	opt stack 0
  2726  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2727                           	opt stack 0
  2728  00007D                     SetAckStatus@AckSts:
  2729                           	opt stack 0
  2730  00007D                     WriteByte@Byte:
  2731                           	opt stack 0
  2732  00007D                     ReadByte@Byte:
  2733                           	opt stack 0
  2734  00007D                     Mcu_SetWdgSts@WdgSts:
  2735                           	opt stack 0
  2736  00007D                     RtccIrqInit@Priority:
  2737                           	opt stack 0
  2738  00007D                     Rtcc_SetRtcStatus@Status:
  2739                           	opt stack 0
  2740  00007D                     TmrBInit@Prescaler:
  2741                           	opt stack 0
  2742  00007D                     Tmr_TmrBIrqSet@Priority:
  2743                           	opt stack 0
  2744  00007D                     Tmr_StartTmr@TmrNumb:
  2745                           	opt stack 0
  2746  00007D                     UartWriteByte@ByteToWrite:
  2747                           	opt stack 0
  2748  00007D                     USBTransferOnePacket@dir:
  2749                           	opt stack 0
  2750  00007D                     USBConfigureEndpoint@direction:
  2751                           	opt stack 0
  2752  00007D                     USBCtrlTrfTxService@byteToSend:
  2753                           	opt stack 0
  2754  00007D                     USBCtrlTrfRxService@i:
  2755                           	opt stack 0
  2756  00007D                     Led_SetLedStatus@LedSts:
  2757                           	opt stack 0
  2758  00007D                     toupper@c:
  2759                           	opt stack 0
  2760  00007D                     tolower@c:
  2761                           	opt stack 0
  2762  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2763                           	opt stack 0
  2764  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2765                           	opt stack 0
  2766  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2767                           	opt stack 0
  2768  00007D                     Uart_ClearRxBuffer@Index:
  2769                           	opt stack 0
  2770  00007D                     GenerateEvt@Event:
  2771                           	opt stack 0
  2772  00007D                     ReceiveEvt@Event:
  2773                           	opt stack 0
  2774  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2775                           	opt stack 0
  2776  00007D                     StringCopy@SourceStr:
  2777                           	opt stack 0
  2778  00007D                     ClearBuffer@Buffer:
  2779                           	opt stack 0
  2780  00007D                     sprintf@sp:
  2781                           	opt stack 0
  2782  00007D                     ___wmul@multiplier:
  2783                           	opt stack 0
  2784  00007D                     ___awdiv@dividend:
  2785                           	opt stack 0
  2786  00007D                     ___awmod@dividend:
  2787                           	opt stack 0
  2788  00007D                     ___lwmod@dividend:
  2789                           	opt stack 0
  2790  00007D                     memcpy@d1:
  2791                           	opt stack 0
  2792  00007D                     memset@p1:
  2793                           	opt stack 0
  2794  00007D                     strcat@to:
  2795                           	opt stack 0
  2796  00007D                     strcpy@to:
  2797                           	opt stack 0
  2798  00007D                     strlen@s:
  2799                           	opt stack 0
  2800  00007D                     ___lmul@multiplier:
  2801                           	opt stack 0
  2802                           
  2803                           ; 4 bytes @ 0x1D
  2804  00007D                     	ds	1
  2805  00007E                     ??_USBConfigureEndpoint:
  2806  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2807                           	opt stack 0
  2808  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2809                           	opt stack 0
  2810  00007E                     TmrBInit@Postscaler:
  2811                           	opt stack 0
  2812  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2813                           	opt stack 0
  2814  00007E                     UartWriteByte@Module:
  2815                           	opt stack 0
  2816  00007E                     UartTxBufferStatus@Module:
  2817                           	opt stack 0
  2818  00007E                     USBCtrlTrfRxService@byteToRead:
  2819                           	opt stack 0
  2820  00007E                     USBCtrlTrfInHandler@lastDTS:
  2821                           	opt stack 0
  2822  00007E                     Led_SetLedStatus@Led:
  2823                           	opt stack 0
  2824  00007E                     _isdigit$6245:
  2825                           	opt stack 0
  2826  00007E                     _isspace$6514:
  2827                           	opt stack 0
  2828  00007E                     _isupper$6517:
  2829                           	opt stack 0
  2830  00007E                     I2c_WriteData@WritePacket:
  2831                           	opt stack 0
  2832  00007E                     Rtcc_RtcConfig@RtcConfig:
  2833                           	opt stack 0
  2834  00007E                     USBTransferOnePacket@data:
  2835                           	opt stack 0
  2836  00007E                     USBStdGetStatusHandler@p:
  2837                           	opt stack 0
  2838                           
  2839                           ; 2 bytes @ 0x1E
  2840  00007E                     	ds	1
  2841  00007F                     ??_strlen:
  2842  00007F                     ??_Rtcc_AlarmConfig:
  2843  00007F                     ??_TmrBInit:
  2844  00007F                     Irq_InitIntController@IntPriorityEn:
  2845                           	opt stack 0
  2846  00007F                     Rtcc_GetRtccValue@RetValue:
  2847                           	opt stack 0
  2848  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2849                           	opt stack 0
  2850  00007F                     UartTxBufferStatus@TxBufferStatus:
  2851                           	opt stack 0
  2852  00007F                     GenerateEvt@EventStatus:
  2853                           	opt stack 0
  2854  00007F                     isdigit@c:
  2855                           	opt stack 0
  2856  00007F                     isspace@c:
  2857                           	opt stack 0
  2858  00007F                     isupper@c:
  2859                           	opt stack 0
  2860  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2861                           	opt stack 0
  2862  00007F                     StringCopy@DestStr:
  2863                           	opt stack 0
  2864  00007F                     ClearBuffer@Len:
  2865                           	opt stack 0
  2866  00007F                     sprintf@f:
  2867                           	opt stack 0
  2868  00007F                     ___wmul@multiplicand:
  2869                           	opt stack 0
  2870  00007F                     ___awdiv@divisor:
  2871                           	opt stack 0
  2872  00007F                     ___awmod@divisor:
  2873                           	opt stack 0
  2874  00007F                     ___lwmod@divisor:
  2875                           	opt stack 0
  2876  00007F                     memcpy@s1:
  2877                           	opt stack 0
  2878  00007F                     memset@c:
  2879                           	opt stack 0
  2880  00007F                     strcat@from:
  2881                           	opt stack 0
  2882  00007F                     strcpy@from:
  2883                           	opt stack 0
  2884                           
  2885                           ; 2 bytes @ 0x1F
  2886  00007F                     	ds	1
  2887  000080                     ??_isalpha:
  2888  000080                     ??_isxdigit:
  2889  000080                     ??_I2c_WriteData:
  2890  000080                     ??_Rtcc_RtcConfig:
  2891  000080                     Rtcc_GetRtccValue@RegValue:
  2892                           	opt stack 0
  2893  000080                     TmrBInit@TmrNumb:
  2894                           	opt stack 0
  2895  000080                     ReceiveEvt@EventStatus:
  2896                           	opt stack 0
  2897  000080                     USBTransferOnePacket@len:
  2898                           	opt stack 0
  2899  000080                     I2c_ReadData@ReadPacket:
  2900                           	opt stack 0
  2901  000080                     Uart_WriteConstString@ConstStringToWrite:
  2902                           	opt stack 0
  2903  000080                     Uart_WriteString@StringToWrite:
  2904                           	opt stack 0
  2905  000080                     Uart_WriteStringLen@StringToWrite:
  2906                           	opt stack 0
  2907  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2908                           	opt stack 0
  2909  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2910                           	opt stack 0
  2911                           
  2912                           ; 2 bytes @ 0x20
  2913  000080                     	ds	1
  2914  000081                     ?_GetElapsedTime:
  2915                           	opt stack 0
  2916  000081                     ?_Rtcm_GetRtccDate:
  2917                           	opt stack 0
  2918  000081                     Mdm_IsSmsReceived@Ret:
  2919                           	opt stack 0
  2920  000081                     Mdm_IsRinging@Ret:
  2921                           	opt stack 0
  2922  000081                     I2cSlv_I2cReadMsgSts@Result:
  2923                           	opt stack 0
  2924  000081                     USBTransferOnePacket@ep:
  2925                           	opt stack 0
  2926  000081                     Led_SetLedBlinkTime@Led:
  2927                           	opt stack 0
  2928  000081                     ___awdiv@counter:
  2929                           	opt stack 0
  2930  000081                     ___awmod@counter:
  2931                           	opt stack 0
  2932  000081                     ___lwmod@counter:
  2933                           	opt stack 0
  2934  000081                     _isalpha$6511:
  2935                           	opt stack 0
  2936  000081                     _isxdigit$6521:
  2937                           	opt stack 0
  2938  000081                     OsTmr_StartTimer@Timer:
  2939                           	opt stack 0
  2940  000081                     StringCopy@Len:
  2941                           	opt stack 0
  2942  000081                     ClearBuffer@Index:
  2943                           	opt stack 0
  2944  000081                     ___wmul@product:
  2945                           	opt stack 0
  2946  000081                     memcpy@n:
  2947                           	opt stack 0
  2948  000081                     memset@n:
  2949                           	opt stack 0
  2950  000081                     strcat@cp:
  2951                           	opt stack 0
  2952  000081                     strcpy@cp:
  2953                           	opt stack 0
  2954  000081                     strlen@cp:
  2955                           	opt stack 0
  2956  000081                     GetElapsedTime@StartTime:
  2957                           	opt stack 0
  2958  000081                     ___lmul@multiplicand:
  2959                           	opt stack 0
  2960                           
  2961                           ; 4 bytes @ 0x21
  2962  000081                     	ds	1
  2963  000082                     ??_I2c_ReadData:
  2964  000082                     Uart_WriteConstString@Module:
  2965                           	opt stack 0
  2966  000082                     Uart_WriteString@Module:
  2967                           	opt stack 0
  2968  000082                     Uart_WriteStringLen@Len:
  2969                           	opt stack 0
  2970  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2971                           	opt stack 0
  2972  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2973                           	opt stack 0
  2974  000082                     USBConfigureEndpoint@EPNum:
  2975                           	opt stack 0
  2976  000082                     ___awdiv@sign:
  2977                           	opt stack 0
  2978  000082                     ___awmod@sign:
  2979                           	opt stack 0
  2980  000082                     isalpha@c:
  2981                           	opt stack 0
  2982  000082                     isxdigit@c:
  2983                           	opt stack 0
  2984  000082                     USBTransferOnePacket@handle:
  2985                           	opt stack 0
  2986                           
  2987                           ; 2 bytes @ 0x22
  2988  000082                     	ds	1
  2989  000083                     ??_StringCopy:
  2990  000083                     ?_GetCallerNumber:
  2991                           	opt stack 0
  2992  000083                     ?_atoi:
  2993                           	opt stack 0
  2994  000083                     ?_xtoi:
  2995                           	opt stack 0
  2996  000083                     ?___lwdiv:
  2997                           	opt stack 0
  2998  000083                     Uart_WriteStringLen@Index:
  2999                           	opt stack 0
  3000  000083                     Mdm_SetSmsFormat@Index:
  3001                           	opt stack 0
  3002  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3003                           	opt stack 0
  3004  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3005                           	opt stack 0
  3006  000083                     sprintf@flag:
  3007                           	opt stack 0
  3008  000083                     memcpy@tmp:
  3009                           	opt stack 0
  3010  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3011                           	opt stack 0
  3012  000083                     USBConfigureEndpoint@handle:
  3013                           	opt stack 0
  3014  000083                     putUSBUSART@data:
  3015                           	opt stack 0
  3016  000083                     atoi@s:
  3017                           	opt stack 0
  3018  000083                     ___awdiv@quotient:
  3019                           	opt stack 0
  3020  000083                     ___lwdiv@dividend:
  3021                           	opt stack 0
  3022  000083                     memset@p:
  3023                           	opt stack 0
  3024  000083                     xtoi@s:
  3025                           	opt stack 0
  3026  000083                     OsTmr_StartTimer@Timeout:
  3027                           	opt stack 0
  3028                           
  3029                           ; 4 bytes @ 0x23
  3030  000083                     	ds	1
  3031  000084                     Uart_WriteStringLen@Module:
  3032                           	opt stack 0
  3033  000084                     I2cSlv_SendI2cMsg@TxSts:
  3034                           	opt stack 0
  3035  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3036                           	opt stack 0
  3037  000084                     CDCTxService@i:
  3038                           	opt stack 0
  3039  000084                     getsUSBUSART@buffer:
  3040                           	opt stack 0
  3041  000084                     sprintf@ap:
  3042                           	opt stack 0
  3043  000084                     memcpy@d:
  3044                           	opt stack 0
  3045  000084                     Mdm_SetSmsFormat@UartMessage:
  3046                           	opt stack 0
  3047                           
  3048                           ; 20 bytes @ 0x24
  3049  000084                     	ds	1
  3050  000085                     ??_atoi:
  3051  000085                     ??_xtoi:
  3052  000085                     ??_GetElapsedTime:
  3053  000085                     Rtcc_SetRtccValue@Value:
  3054                           	opt stack 0
  3055  000085                     USBDeviceInit@i:
  3056                           	opt stack 0
  3057  000085                     USBEnableEndpoint@options:
  3058                           	opt stack 0
  3059  000085                     putUSBUSART@length:
  3060                           	opt stack 0
  3061  000085                     CDCTxService@byte_to_send:
  3062                           	opt stack 0
  3063  000085                     StringCompare@String1:
  3064                           	opt stack 0
  3065  000085                     StringCopy@Index:
  3066                           	opt stack 0
  3067  000085                     ___lwdiv@divisor:
  3068                           	opt stack 0
  3069  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3070                           	opt stack 0
  3071  000085                     ___lmul@product:
  3072                           	opt stack 0
  3073                           
  3074                           ; 4 bytes @ 0x25
  3075  000085                     	ds	1
  3076  000086                     ??_Rtcc_SetRtccValue:
  3077  000086                     getsUSBUSART@len:
  3078                           	opt stack 0
  3079  000086                     sprintf@c:
  3080                           	opt stack 0
  3081  000086                     USBEnableEndpoint@p:
  3082                           	opt stack 0
  3083  000086                     memcpy@s:
  3084                           	opt stack 0
  3085                           
  3086                           ; 2 bytes @ 0x26
  3087  000086                     	ds	1
  3088  000087                     atoi@sign:
  3089                           	opt stack 0
  3090  000087                     ___lwdiv@counter:
  3091                           	opt stack 0
  3092  000087                     xtoi@sign:
  3093                           	opt stack 0
  3094  000087                     StringCompare@String2:
  3095                           	opt stack 0
  3096  000087                     sprintf@cp:
  3097                           	opt stack 0
  3098                           
  3099                           ; 2 bytes @ 0x27
  3100  000087                     	ds	1
  3101  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3102                           	opt stack 0
  3103  000088                     USBEnableEndpoint@ep:
  3104                           	opt stack 0
  3105  000088                     atoi@a:
  3106                           	opt stack 0
  3107  000088                     ___lwdiv@quotient:
  3108                           	opt stack 0
  3109  000088                     xtoi@val:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x28
  3113  000088                     	ds	1
  3114  000089                     ??_Rtcm_GetRtccDate:
  3115  000089                     ?_strtol:
  3116                           	opt stack 0
  3117  000089                     ?___lldiv:
  3118                           	opt stack 0
  3119  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3120                           	opt stack 0
  3121  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3122                           	opt stack 0
  3123  000089                     StringCompare@Len:
  3124                           	opt stack 0
  3125  000089                     strtol@s:
  3126                           	opt stack 0
  3127  000089                     ___lldiv@dividend:
  3128                           	opt stack 0
  3129  000089                     Rtcm_SetRtccDate@Date:
  3130                           	opt stack 0
  3131                           
  3132                           ; 8 bytes @ 0x29
  3133  000089                     	ds	1
  3134  00008A                     xtoi@c:
  3135                           	opt stack 0
  3136  00008A                     LedBlinkStateMachine@LedBlink:
  3137                           	opt stack 0
  3138  00008A                     LedPulseStateMachine@LedPulse:
  3139                           	opt stack 0
  3140  00008A                     secondsAppTimer@counter:
  3141                           	opt stack 0
  3142  00008A                     secondsAppTimer2@counter:
  3143                           	opt stack 0
  3144  00008A                     utoa@buf:
  3145                           	opt stack 0
  3146  00008A                     Rtcm_GetRtccDate@LocalDate:
  3147                           	opt stack 0
  3148                           
  3149                           ; 8 bytes @ 0x2A
  3150  00008A                     	ds	1
  3151  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3152                           	opt stack 0
  3153  00008B                     strtol@endptr:
  3154                           	opt stack 0
  3155                           
  3156                           ; 2 bytes @ 0x2B
  3157  00008B                     	ds	1
  3158  00008C                     LedPulseStateMachine@Led:
  3159                           	opt stack 0
  3160  00008C                     secondsAppTimer@isCyclic:
  3161                           	opt stack 0
  3162  00008C                     secondsAppTimer2@isCyclic:
  3163                           	opt stack 0
  3164  00008C                     utoa@val:
  3165                           	opt stack 0
  3166                           
  3167                           ; 2 bytes @ 0x2C
  3168  00008C                     	ds	1
  3169  00008D                     StringCompare@Result:
  3170                           	opt stack 0
  3171  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3172                           	opt stack 0
  3173  00008D                     strtol@base:
  3174                           	opt stack 0
  3175  00008D                     GetElapsedTime@TimeValue:
  3176                           	opt stack 0
  3177  00008D                     ___lldiv@divisor:
  3178                           	opt stack 0
  3179                           
  3180                           ; 4 bytes @ 0x2D
  3181  00008D                     	ds	1
  3182  00008E                     StringCompare@Index:
  3183                           	opt stack 0
  3184  00008E                     utoa@base:
  3185                           	opt stack 0
  3186                           
  3187                           ; 2 bytes @ 0x2E
  3188  00008E                     	ds	1
  3189  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3190  00008F                     ??_strtol:
  3191  00008F                     secondsAppTimer@seconds:
  3192                           	opt stack 0
  3193  00008F                     secondsAppTimer2@seconds:
  3194                           	opt stack 0
  3195  00008F                     LedStateMachine@LedSts:
  3196                           	opt stack 0
  3197                           
  3198                           ; 2 bytes @ 0x2F
  3199  00008F                     	ds	1
  3200  000090                     secondsAppTimer@isExpired:
  3201                           	opt stack 0
  3202  000090                     secondsAppTimer2@isExpired:
  3203                           	opt stack 0
  3204  000090                     utoa@v:
  3205                           	opt stack 0
  3206  000090                     ModemEvtParser@CallReadyString:
  3207                           	opt stack 0
  3208                           
  3209                           ; 10 bytes @ 0x30
  3210  000090                     	ds	1
  3211  000091                     ??_USBStdFeatureReqHandler:
  3212  000091                     USBStdSetCfgHandler@i:
  3213                           	opt stack 0
  3214  000091                     LedStateMachine@LedOut:
  3215                           	opt stack 0
  3216  000091                     secondsAppTimer@destinationTicks:
  3217                           	opt stack 0
  3218  000091                     secondsAppTimer2@destinationTicks:
  3219                           	opt stack 0
  3220  000091                     GetElapsedTime@CurrentTimestamp:
  3221                           	opt stack 0
  3222  000091                     ___lldiv@quotient:
  3223                           	opt stack 0
  3224                           
  3225                           ; 4 bytes @ 0x31
  3226  000091                     	ds	1
  3227  000092                     utoa@c:
  3228                           	opt stack 0
  3229  000092                     USBStdFeatureReqHandler@pUEP:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x32
  3233  000092                     	ds	1
  3234  000093                     strtol@sign:
  3235                           	opt stack 0
  3236  000093                     LedStateMachine@LedBlink:
  3237                           	opt stack 0
  3238  000093                     blinkForSeconds@blinkTicks:
  3239                           	opt stack 0
  3240  000093                     itoa@buf:
  3241                           	opt stack 0
  3242                           
  3243                           ; 2 bytes @ 0x33
  3244  000093                     	ds	1
  3245  000094                     USBStdFeatureReqHandler@current_ep_data:
  3246                           	opt stack 0
  3247  000094                     strtol@a:
  3248                           	opt stack 0
  3249                           
  3250                           ; 4 bytes @ 0x34
  3251  000094                     	ds	1
  3252  000095                     blinkForSeconds@seconds:
  3253                           	opt stack 0
  3254  000095                     ___lldiv@counter:
  3255                           	opt stack 0
  3256  000095                     OsTmr_GetTimerStatus@Timer:
  3257                           	opt stack 0
  3258  000095                     USBStdFeatureReqHandler@p:
  3259                           	opt stack 0
  3260  000095                     LedStateMachine@LedPulse:
  3261                           	opt stack 0
  3262  000095                     itoa@val:
  3263                           	opt stack 0
  3264                           
  3265                           ; 2 bytes @ 0x35
  3266  000095                     	ds	1
  3267  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3268                           	opt stack 0
  3269  000096                     SetUartBaudRate@UartConfig:
  3270                           	opt stack 0
  3271  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3272                           	opt stack 0
  3273                           
  3274                           ; 4 bytes @ 0x36
  3275  000096                     	ds	1
  3276  000097                     ??_USBCtrlEPService:
  3277  000097                     itoa@base:
  3278                           	opt stack 0
  3279                           
  3280                           ; 2 bytes @ 0x37
  3281  000097                     	ds	1
  3282  000098                     Tmr_TmrBPrSet@Prescaler:
  3283                           	opt stack 0
  3284  000098                     Mdm_SetSmsFormat@TextFormat:
  3285                           	opt stack 0
  3286  000098                     USBDeviceTasks@i:
  3287                           	opt stack 0
  3288  000098                     LedStateMachine@LedOutSts:
  3289                           	opt stack 0
  3290  000098                     strtol@c:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x38
  3294  000098                     	ds	1
  3295  000099                     Tmr_TmrBPrSet@Postscaler:
  3296                           	opt stack 0
  3297  000099                     SetUartBaudRate@Module:
  3298                           	opt stack 0
  3299  000099                     LedStateMachine@Led:
  3300                           	opt stack 0
  3301  000099                     initGprsModem@isInitialized:
  3302                           	opt stack 0
  3303  000099                     itoa@cp:
  3304                           	opt stack 0
  3305                           
  3306                           ; 2 bytes @ 0x39
  3307  000099                     	ds	1
  3308  00009A                     ??_Led_MainTask:
  3309  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3310                           	opt stack 0
  3311  00009A                     SetUartBaudRate@BaudRateRegister:
  3312                           	opt stack 0
  3313  00009A                     SetBaudRate@McuClockHz:
  3314                           	opt stack 0
  3315  00009A                     ModemEvtParser@ClipString:
  3316                           	opt stack 0
  3317                           
  3318                           ; 5 bytes @ 0x3A
  3319  00009A                     	ds	1
  3320  00009B                     ??_SendSmsSm:
  3321  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3322                           	opt stack 0
  3323  00009B                     OsTmr_Wait@WaitTimer:
  3324                           	opt stack 0
  3325  00009B                     InitGprsNetwork@Apn:
  3326                           	opt stack 0
  3327  00009B                     HttpGetMethod@GetData:
  3328                           	opt stack 0
  3329                           
  3330                           ; 2 bytes @ 0x3B
  3331  00009B                     	ds	1
  3332  00009C                     SetUartBaudRate@DivisionFactor:
  3333                           	opt stack 0
  3334  00009C                     Tmr_TmrBPrSet@Divisor:
  3335                           	opt stack 0
  3336                           
  3337                           ; 4 bytes @ 0x3C
  3338  00009C                     	ds	1
  3339  00009D                     ??_HttpGetMethod:
  3340  00009D                     InitGprsNetwork@ApnLen:
  3341                           	opt stack 0
  3342  00009D                     Uart_InitUartModule@UartConfig:
  3343                           	opt stack 0
  3344  00009D                     OsTmr_Wait@DelayMs:
  3345                           	opt stack 0
  3346                           
  3347                           ; 4 bytes @ 0x3D
  3348  00009D                     	ds	1
  3349  00009E                     ??_SetBaudRate:
  3350  00009E                     ??_InitGprsNetwork:
  3351                           
  3352                           ; 1 bytes @ 0x3E
  3353  00009E                     	ds	1
  3354  00009F                     ??_Uart_InitUartModule:
  3355  00009F                     ModemEvtParser@SmsString:
  3356                           	opt stack 0
  3357                           
  3358                           ; 5 bytes @ 0x3F
  3359  00009F                     	ds	1
  3360  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3361                           	opt stack 0
  3362                           
  3363                           ; 2 bytes @ 0x40
  3364  0000A0                     	ds	1
  3365  0000A1                     Uart_InitUartModule@Module:
  3366                           	opt stack 0
  3367  0000A1                     OsTmr_Wait@Ret:
  3368                           	opt stack 0
  3369                           
  3370                           ; 1 bytes @ 0x41
  3371  0000A1                     	ds	1
  3372  0000A2                     ??_Terminal:
  3373  0000A2                     I2c_InitI2cModule@I2cConfig:
  3374                           	opt stack 0
  3375  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3376                           	opt stack 0
  3377                           
  3378                           ; 2 bytes @ 0x42
  3379  0000A2                     	ds	1
  3380  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3381                           	opt stack 0
  3382                           
  3383                           ; 1 bytes @ 0x43
  3384  0000A3                     	ds	1
  3385  0000A4                     ??_I2c_InitI2cModule:
  3386  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3387                           	opt stack 0
  3388  0000A4                     Terminal@i:
  3389                           	opt stack 0
  3390  0000A4                     ModemEvtParser@RingString:
  3391                           	opt stack 0
  3392  0000A4                     InitSchedTimer@TmrBConfig:
  3393                           	opt stack 0
  3394                           
  3395                           ; 7 bytes @ 0x44
  3396  0000A4                     	ds	1
  3397  0000A5                     Terminal@ReceivedBytes:
  3398                           	opt stack 0
  3399  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x45
  3403  0000A5                     	ds	1
  3404  0000A6                     Terminal@Index:
  3405                           	opt stack 0
  3406                           
  3407                           ; 1 bytes @ 0x46
  3408  0000A6                     	ds	1
  3409  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3410                           	opt stack 0
  3411                           
  3412                           ; 1 bytes @ 0x47
  3413  0000A7                     	ds	1
  3414  0000A8                     ModemEvtParser@Match:
  3415                           	opt stack 0
  3416  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3417                           	opt stack 0
  3418                           
  3419                           ; 1 bytes @ 0x48
  3420  0000A8                     	ds	1
  3421  0000A9                     ModemEvtParser@CompareIdx:
  3422                           	opt stack 0
  3423  0000A9                     Eeprom_Read@ReadBuffer:
  3424                           	opt stack 0
  3425                           
  3426                           ; 2 bytes @ 0x49
  3427  0000A9                     	ds	1
  3428  0000AA                     
  3429                           ; 1 bytes @ 0x4A
  3430  0000AA                     	ds	1
  3431  0000AB                     Eeprom_Read@DataLength:
  3432                           	opt stack 0
  3433                           
  3434                           ; 1 bytes @ 0x4B
  3435  0000AB                     	ds	1
  3436  0000AC                     Eeprom_Read@MemoryAddress:
  3437                           	opt stack 0
  3438                           
  3439                           ; 1 bytes @ 0x4C
  3440  0000AC                     	ds	1
  3441  0000AD                     Eeprom_Read@SlaveAddress:
  3442                           	opt stack 0
  3443                           
  3444                           ; 1 bytes @ 0x4D
  3445  0000AD                     	ds	1
  3446  0000AE                     Eeprom_Read@ReadSts:
  3447                           	opt stack 0
  3448                           
  3449                           ; 1 bytes @ 0x4E
  3450  0000AE                     	ds	1
  3451  0000AF                     Eeprom_Read@QuerySts:
  3452                           	opt stack 0
  3453                           
  3454                           ; 1 bytes @ 0x4F
  3455  0000AF                     	ds	1
  3456  0000B0                     tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           postinc0	equ	0xFEE
  3461                           wreg	equ	0xFE8
  3462                           postdec1	equ	0xFE5
  3463                           fsr1h	equ	0xFE2
  3464                           fsr1l	equ	0xFE1
  3465                           
  3466                           ; 1 bytes @ 0x50
  3467                           
  3468                           	psect	cstackCOMRAM
  3469  000001                     __pcstackCOMRAM:
  3470                           	opt stack 0
  3471  000001                     i2GenerateEvt@Event:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0x0
  3475  000001                     	ds	2
  3476  000003                     i2GenerateEvt@EventStatus:
  3477                           	opt stack 0
  3478                           
  3479                           ; 1 bytes @ 0x2
  3480  000003                     	ds	1
  3481  000004                     Uart_MdmGsmGprsReadService@UartData:
  3482                           	opt stack 0
  3483                           
  3484                           ; 1 bytes @ 0x3
  3485  000004                     	ds	1
  3486  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3487                           	opt stack 0
  3488                           
  3489                           ; 2 bytes @ 0x4
  3490  000005                     	ds	2
  3491  000007                     ??_HighPriorityIsr:
  3492                           
  3493                           ; 1 bytes @ 0x6
  3494  000007                     	ds	18
  3495  000019                     ?i1___wmul:
  3496                           	opt stack 0
  3497  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3498                           	opt stack 0
  3499  000019                     i1GenerateEvt@Event:
  3500                           	opt stack 0
  3501  000019                     i1___wmul@multiplier:
  3502                           	opt stack 0
  3503                           
  3504                           ; 2 bytes @ 0x18
  3505  000019                     	ds	2
  3506  00001B                     i1GenerateEvt@EventStatus:
  3507                           	opt stack 0
  3508  00001B                     i1___wmul@multiplicand:
  3509                           	opt stack 0
  3510                           
  3511                           ; 2 bytes @ 0x1A
  3512  00001B                     	ds	1
  3513  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3514                           	opt stack 0
  3515                           
  3516                           ; 2 bytes @ 0x1B
  3517  00001C                     	ds	1
  3518  00001D                     i1___wmul@product:
  3519                           	opt stack 0
  3520                           
  3521                           ; 2 bytes @ 0x1C
  3522  00001D                     	ds	1
  3523  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3524                           	opt stack 0
  3525                           
  3526                           ; 1 bytes @ 0x1D
  3527  00001E                     	ds	1
  3528  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3529                           	opt stack 0
  3530                           
  3531                           ; 1 bytes @ 0x1E
  3532  00001F                     	ds	1
  3533  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3534                           	opt stack 0
  3535                           
  3536                           ; 1 bytes @ 0x1F
  3537  000020                     	ds	1
  3538  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3539                           	opt stack 0
  3540                           
  3541                           ; 2 bytes @ 0x20
  3542  000021                     	ds	2
  3543  000023                     tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           postdec1	equ	0xFE5
  3550                           fsr1h	equ	0xFE2
  3551                           fsr1l	equ	0xFE1
  3552                           
  3553                           ; 1 bytes @ 0x22
  3554 ;;
  3555 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3556 ;;
  3557 ;; *************** function _main *****************
  3558 ;; Defined at:
  3559 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;		None
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2   14[None  ] short 
  3566 ;; Registers used:
  3567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;Total ram usage:        0 bytes
  3578 ;; Hardware stack levels required when called:   23
  3579 ;; This function calls:
  3580 ;;		_Sch_MainScheduler
  3581 ;;		_SystemInit
  3582 ;; This function is called by:
  3583 ;;		Startup code after reset
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text0
  3588  0063E2                     __ptext0:
  3589                           	opt stack 0
  3590  0063E2                     _main:
  3591                           	opt stack 8
  3592                           
  3593                           ;main.c: 61: SystemInit();
  3594                           
  3595                           ;incstack = 0
  3596  0063E2  EC23  F02F         	call	_SystemInit	;wreg free
  3597                           
  3598                           ;main.c: 64: Sch_MainScheduler();
  3599  0063E6  ECF5  F030         	call	_Sch_MainScheduler	;wreg free
  3600                           
  3601                           ;main.c: 67: return 0;
  3602                           ;	Return value of _main is never used
  3603  0063EA  EF66  F000         	goto	start
  3604  0063EE                     __end_of_main:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postdec1	equ	0xFE5
  3613                           fsr1h	equ	0xFE2
  3614                           fsr1l	equ	0xFE1
  3615                           
  3616 ;; *************** function _SystemInit *****************
  3617 ;; Defined at:
  3618 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:   15
  3639 ;; This function calls:
  3640 ;;		_InitSchedTimer
  3641 ;;		_Irq_InitIntController
  3642 ;;		_Mcu_ConfigExtInt
  3643 ;;		_Mcu_StartSystemPll
  3644 ;;		_Pm_DsReleasePinControl
  3645 ;;		_Tmr_RegisterTmr2IsrCallback
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text1
  3652  005E46                     __ptext1:
  3653                           	opt stack 0
  3654  005E46                     _SystemInit:
  3655                           	opt stack 15
  3656                           
  3657                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3658                           
  3659                           ;incstack = 0
  3660  005E46  EC14  F032         	call	_Pm_DsReleasePinControl	;wreg free
  3661                           
  3662                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3663  005E4A  ECE6  F030         	call	_Mcu_StartSystemPll	;wreg free
  3664                           
  3665                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3666  005E4E  0E01               	movlw	1
  3667  005E50  0100               	movlb	0	; () banked
  3668  005E52  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3669  005E54  0E01               	movlw	1
  3670  005E56  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3671  005E58  0E01               	movlw	1
  3672  005E5A  ECC7  F02F         	call	_Irq_InitIntController
  3673                           
  3674                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3675  005E5E  0EC6               	movlw	low _Sch_SchmIntService
  3676  005E60  0100               	movlb	0	; () banked
  3677  005E62  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3678  005E64  0E63               	movlw	high _Sch_SchmIntService
  3679  005E66  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3680  005E68  ECF7  F031         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3681                           
  3682                           ;sys_init.c: 132: InitSchedTimer();
  3683  005E6C  EC83  F02F         	call	_InitSchedTimer	;wreg free
  3684                           
  3685                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3686  005E70  EC20  F031         	call	_Mcu_ConfigExtInt	;wreg free
  3687  005E74  0012               	return		;funcret
  3688  005E76                     __end_of_SystemInit:
  3689                           	opt stack 0
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           postinc0	equ	0xFEE
  3695                           wreg	equ	0xFE8
  3696                           postdec1	equ	0xFE5
  3697                           fsr1h	equ	0xFE2
  3698                           fsr1l	equ	0xFE1
  3699                           
  3700 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3701 ;; Defined at:
  3702 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3705 ;;		 -> Sch_SchmIntService(1), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3717 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;Total ram usage:        2 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:   11
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_SystemInit
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text2
  3732  0063EE                     __ptext2:
  3733                           	opt stack 0
  3734  0063EE                     _Tmr_RegisterTmr2IsrCallback:
  3735                           	opt stack 18
  3736                           
  3737                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3738                           
  3739                           ;incstack = 0
  3740  0063EE  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3741  0063F2  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3742  0063F6  0012               	return		;funcret
  3743  0063F8                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           postdec1	equ	0xFE5
  3752                           fsr1h	equ	0xFE2
  3753                           fsr1l	equ	0xFE1
  3754                           
  3755 ;; *************** function _Pm_DsReleasePinControl *****************
  3756 ;; Defined at:
  3757 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		None
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;Total ram usage:        0 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:   11
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_SystemInit
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text3
  3786  006428                     __ptext3:
  3787                           	opt stack 0
  3788  006428                     _Pm_DsReleasePinControl:
  3789                           	opt stack 18
  3790                           
  3791                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3792                           
  3793                           ;incstack = 0
  3794  006428  010F               	movlb	15	; () banked
  3795  00642A  914C               	bcf	76,0,b	;volatile
  3796                           
  3797                           ; BSR set to: 15
  3798  00642C  0012               	return		;funcret
  3799  00642E                     __end_of_Pm_DsReleasePinControl:
  3800                           	opt stack 0
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           postinc0	equ	0xFEE
  3806                           wreg	equ	0xFE8
  3807                           postdec1	equ	0xFE5
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           
  3811 ;; *************** function _Mcu_StartSystemPll *****************
  3812 ;; Defined at:
  3813 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;Total ram usage:        2 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:   11
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_SystemInit
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text4
  3842  0061CC                     __ptext4:
  3843                           	opt stack 0
  3844  0061CC                     _Mcu_StartSystemPll:
  3845                           	opt stack 18
  3846                           
  3847                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3848                           
  3849                           ; BSR set to: 15
  3850                           ;incstack = 0
  3851  0061CC  0E03               	movlw	3
  3852  0061CE  0100               	movlb	0	; () banked
  3853  0061D0  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3854  0061D2  0EE8               	movlw	232
  3855  0061D4  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3859  0061D6  8C9B               	bsf	3995,6,c	;volatile
  3860  0061D8                     l11327:
  3861                           
  3862                           ; BSR set to: 0
  3863  0061D8  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3864  0061DA  A0D8               	btfss	status,0,c
  3865  0061DC  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3866  0061DE  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3867  0061E0  E1FB               	bnz	l11327
  3868  0061E2  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3869  0061E4  B4D8               	btfsc	status,2,c
  3870  0061E6  0012               	return	
  3871  0061E8  D7F7               	goto	l237
  3872  0061EA                     __end_of_Mcu_StartSystemPll:
  3873                           	opt stack 0
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           postdec1	equ	0xFE5
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _Mcu_ConfigExtInt *****************
  3886 ;; Defined at:
  3887 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:   11
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_SystemInit
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text5
  3916  006240                     __ptext5:
  3917                           	opt stack 0
  3918  006240                     _Mcu_ConfigExtInt:
  3919                           	opt stack 18
  3920                           
  3921                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;incstack = 0
  3925  006240  8093               	bsf	3987,0,c	;volatile
  3926                           
  3927                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3928  006242  8695               	bsf	3989,3,c	;volatile
  3929                           
  3930                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3931  006244  010F               	movlb	15	; () banked
  3932  006246  8949               	bsf	73,4,b	;volatile
  3933                           
  3934                           ; BSR set to: 15
  3935                           ;mcu_drv.c: 108: RPINR1 = 20;
  3936  006248  0E14               	movlw	20
  3937  00624A  010E               	movlb	14	; () banked
  3938  00624C  6FE7               	movwf	231,b	;volatile
  3939                           
  3940                           ; BSR set to: 14
  3941                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3942  00624E  88F2               	bsf	intcon,4,c	;volatile
  3943                           
  3944                           ; BSR set to: 14
  3945                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3946  006250  86F0               	bsf	intcon3,3,c	;volatile
  3947                           
  3948                           ; BSR set to: 14
  3949                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3950  006252  8CF0               	bsf	intcon3,6,c	;volatile
  3951                           
  3952                           ; BSR set to: 14
  3953                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3954  006254  9CF1               	bcf	intcon2,6,c	;volatile
  3955                           
  3956                           ; BSR set to: 14
  3957                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3958  006256  9AF1               	bcf	intcon2,5,c	;volatile
  3959                           
  3960                           ; BSR set to: 14
  3961  006258  0012               	return		;funcret
  3962  00625A                     __end_of_Mcu_ConfigExtInt:
  3963                           	opt stack 0
  3964                           tblptru	equ	0xFF8
  3965                           tblptrh	equ	0xFF7
  3966                           tblptrl	equ	0xFF6
  3967                           tablat	equ	0xFF5
  3968                           intcon	equ	0xFF2
  3969                           intcon2	equ	0xFF1
  3970                           intcon3	equ	0xFF0
  3971                           postinc0	equ	0xFEE
  3972                           wreg	equ	0xFE8
  3973                           postdec1	equ	0xFE5
  3974                           fsr1h	equ	0xFE2
  3975                           fsr1l	equ	0xFE1
  3976                           status	equ	0xFD8
  3977                           
  3978 ;; *************** function _Irq_InitIntController *****************
  3979 ;; Defined at:
  3980 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  IntPriorityE    1    wreg     enum E7720
  3983 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3984 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;Total ram usage:        3 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:   11
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_SystemInit
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text6
  4011  005F8E                     __ptext6:
  4012                           	opt stack 0
  4013  005F8E                     _Irq_InitIntController:
  4014                           	opt stack 18
  4015                           
  4016                           ; BSR set to: 14
  4017                           ;incstack = 0
  4018                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4019  005F8E  0100               	movlb	0	; () banked
  4020  005F90  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4021                           
  4022                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4023  005F92  0100               	movlb	0	; () banked
  4024  005F94  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4025  005F96  D002               	bra	u9885
  4026  005F98  9ED0               	bcf	4048,7,c	;volatile
  4027  005F9A  D001               	bra	u9886
  4028  005F9C                     u9885:
  4029  005F9C  8ED0               	bsf	4048,7,c	;volatile
  4030  005F9E                     u9886:
  4031                           
  4032                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4033  005F9E  0100               	movlb	0	; () banked
  4034  005FA0  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4035  005FA2  D002               	bra	u9895
  4036  005FA4  9EF2               	bcf	intcon,7,c	;volatile
  4037  005FA6  D001               	bra	u9896
  4038  005FA8                     u9895:
  4039  005FA8  8EF2               	bsf	intcon,7,c	;volatile
  4040  005FAA                     u9896:
  4041                           
  4042                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4043  005FAA  0100               	movlb	0	; () banked
  4044  005FAC  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4045  005FAE  D002               	bra	u9905
  4046  005FB0  9CF2               	bcf	intcon,6,c	;volatile
  4047  005FB2  D001               	bra	u9906
  4048  005FB4                     u9905:
  4049  005FB4  8CF2               	bsf	intcon,6,c	;volatile
  4050  005FB6                     u9906:
  4051  005FB6  0012               	return		;funcret
  4052  005FB8                     __end_of_Irq_InitIntController:
  4053                           	opt stack 0
  4054                           tblptru	equ	0xFF8
  4055                           tblptrh	equ	0xFF7
  4056                           tblptrl	equ	0xFF6
  4057                           tablat	equ	0xFF5
  4058                           intcon	equ	0xFF2
  4059                           intcon2	equ	0xFF1
  4060                           intcon3	equ	0xFF0
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           postdec1	equ	0xFE5
  4064                           fsr1h	equ	0xFE2
  4065                           fsr1l	equ	0xFE1
  4066                           status	equ	0xFD8
  4067                           
  4068 ;; *************** function _InitSchedTimer *****************
  4069 ;; Defined at:
  4070 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4085 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4088 ;;Total ram usage:        7 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:   14
  4091 ;; This function calls:
  4092 ;;		_Tmr_TmrBConfig
  4093 ;; This function is called by:
  4094 ;;		_SystemInit
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text7
  4099  005F06                     __ptext7:
  4100                           	opt stack 0
  4101  005F06                     _InitSchedTimer:
  4102                           	opt stack 15
  4103                           
  4104                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4105                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4106                           
  4107                           ;incstack = 0
  4108  005F06  0E04               	movlw	4
  4109  005F08  0100               	movlb	0	; () banked
  4110  005F0A  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4111                           
  4112                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4113  005F0C  0E0C               	movlw	12
  4114  005F0E  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4115                           
  4116                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4117  005F10  0E00               	movlw	0
  4118  005F12  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4119                           
  4120                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4121  005F14  0E01               	movlw	1
  4122  005F16  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4123                           
  4124                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4125  005F18  0E03               	movlw	3
  4126  005F1A  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4127  005F1C  0EE8               	movlw	232
  4128  005F1E  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4129                           
  4130                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4131  005F20  0E01               	movlw	1
  4132  005F22  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4136  005F24  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4137  005F26  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4138  005F28  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4139  005F2A  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4140  005F2C  0E02               	movlw	2
  4141  005F2E  EC26  F01E         	call	_Tmr_TmrBConfig
  4142  005F32  0012               	return		;funcret
  4143  005F34                     __end_of_InitSchedTimer:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           intcon	equ	0xFF2
  4150                           intcon2	equ	0xFF1
  4151                           intcon3	equ	0xFF0
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           postdec1	equ	0xFE5
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           status	equ	0xFD8
  4158                           
  4159 ;; *************** function _Tmr_TmrBConfig *****************
  4160 ;; Defined at:
  4161 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  TmrNumb         1    wreg     unsigned char 
  4164 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4165 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;Total ram usage:        4 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:   13
  4184 ;; This function calls:
  4185 ;;		_TmrBInit
  4186 ;;		_Tmr_StartTmr
  4187 ;;		_Tmr_TmrBIrqSet
  4188 ;;		_Tmr_TmrBPrSet
  4189 ;; This function is called by:
  4190 ;;		_InitSchedTimer
  4191 ;;		_InitAuxTimer
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text8
  4196  003C4C                     __ptext8:
  4197                           	opt stack 0
  4198  003C4C                     _Tmr_TmrBConfig:
  4199                           	opt stack 15
  4200                           
  4201                           ;incstack = 0
  4202                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4203  003C4C  0100               	movlb	0	; () banked
  4204  003C4E  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4205                           
  4206                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4207  003C50  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4208  003C54  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4209  003C58  50DF               	movf	indf2,w,c
  4210  003C5A  0100               	movlb	0	; () banked
  4211  003C5C  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4212  003C5E  EE20 F001          	lfsr	2,1
  4213  003C62  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4214  003C64  26D9               	addwf	fsr2l,f,c
  4215  003C66  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4216  003C68  22DA               	addwfc	fsr2h,f,c
  4217  003C6A  50DF               	movf	indf2,w,c
  4218  003C6C  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4219  003C6E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4220  003C70  EC57  F024         	call	_TmrBInit
  4221                           
  4222                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4223  003C74  0100               	movlb	0	; () banked
  4224  003C76  EE20 F002          	lfsr	2,2
  4225  003C7A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4226  003C7C  26D9               	addwf	fsr2l,f,c
  4227  003C7E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4228  003C80  22DA               	addwfc	fsr2h,f,c
  4229  003C82  04DE               	decf	postinc2,w,c
  4230  003C84  A4D8               	btfss	status,2,c
  4231  003C86  D00E               	goto	l546
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;tmr_drv.c: 277: {
  4235                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4236  003C88  EE20 F003          	lfsr	2,3
  4237  003C8C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4238  003C8E  26D9               	addwf	fsr2l,f,c
  4239  003C90  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4240  003C92  22DA               	addwfc	fsr2h,f,c
  4241  003C94  50DF               	movf	indf2,w,c
  4242  003C96  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4243  003C98  0E01               	movlw	1
  4244  003C9A  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4245  003C9C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4246  003C9E  EC10  F02C         	call	_Tmr_TmrBIrqSet
  4247                           
  4248                           ;tmr_drv.c: 280: }
  4249  003CA2  D00E               	goto	l547
  4250  003CA4                     l546:
  4251                           
  4252                           ;tmr_drv.c: 281: else
  4253                           ;tmr_drv.c: 282: {
  4254                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4255  003CA4  0100               	movlb	0	; () banked
  4256  003CA6  EE20 F003          	lfsr	2,3
  4257  003CAA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4258  003CAC  26D9               	addwf	fsr2l,f,c
  4259  003CAE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4260  003CB0  22DA               	addwfc	fsr2h,f,c
  4261  003CB2  50DF               	movf	indf2,w,c
  4262  003CB4  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4263  003CB6  0E00               	movlw	0
  4264  003CB8  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4265  003CBA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4266  003CBC  EC10  F02C         	call	_Tmr_TmrBIrqSet
  4267  003CC0                     l547:
  4268                           
  4269                           ;tmr_drv.c: 285: }
  4270                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4271  003CC0  0100               	movlb	0	; () banked
  4272  003CC2  EE20 F004          	lfsr	2,4
  4273  003CC6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4274  003CC8  26D9               	addwf	fsr2l,f,c
  4275  003CCA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4276  003CCC  22DA               	addwfc	fsr2h,f,c
  4277  003CCE  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4278  003CD2  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4279  003CD6  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4280  003CDA  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4281  003CDE  50DF               	movf	indf2,w,c
  4282  003CE0  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4283  003CE2  EE20 F001          	lfsr	2,1
  4284  003CE6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4285  003CE8  26D9               	addwf	fsr2l,f,c
  4286  003CEA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4287  003CEC  22DA               	addwfc	fsr2h,f,c
  4288  003CEE  50DF               	movf	indf2,w,c
  4289  003CF0  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4290  003CF2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4291  003CF4  ECA3  F018         	call	_Tmr_TmrBPrSet
  4292                           
  4293                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4294  003CF8  0100               	movlb	0	; () banked
  4295  003CFA  EE20 F006          	lfsr	2,6
  4296  003CFE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4297  003D00  26D9               	addwf	fsr2l,f,c
  4298  003D02  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4299  003D04  22DA               	addwfc	fsr2h,f,c
  4300  003D06  04DE               	decf	postinc2,w,c
  4301  003D08  A4D8               	btfss	status,2,c
  4302  003D0A  0012               	return	
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;tmr_drv.c: 290: {
  4306                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4307  003D0C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4308  003D0E  ECC6  F030         	call	_Tmr_StartTmr
  4309                           
  4310                           ;tmr_drv.c: 293: }
  4311  003D12  0012               	return	
  4312  003D14                     __end_of_Tmr_TmrBConfig:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           intcon	equ	0xFF2
  4319                           intcon2	equ	0xFF1
  4320                           intcon3	equ	0xFF0
  4321                           postinc0	equ	0xFEE
  4322                           wreg	equ	0xFE8
  4323                           postdec1	equ	0xFE5
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           indf2	equ	0xFDF
  4327                           postinc2	equ	0xFDE
  4328                           postdec2	equ	0xFDD
  4329                           fsr2h	equ	0xFDA
  4330                           fsr2l	equ	0xFD9
  4331                           status	equ	0xFD8
  4332                           
  4333 ;; *************** function _Tmr_TmrBPrSet *****************
  4334 ;; Defined at:
  4335 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  TmrNumb         1    wreg     unsigned char 
  4338 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4339 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4340 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4343 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4344 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      enum E7736
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4358 ;;Total ram usage:       10 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:   12
  4361 ;; This function calls:
  4362 ;;		___lldiv
  4363 ;;		___lmul
  4364 ;; This function is called by:
  4365 ;;		_Tmr_TmrBConfig
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text9
  4370  003146                     __ptext9:
  4371                           	opt stack 0
  4372  003146                     _Tmr_TmrBPrSet:
  4373                           	opt stack 15
  4374                           
  4375                           ;incstack = 0
  4376                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4377  003146  0100               	movlb	0	; () banked
  4378  003148  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4379                           
  4380                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4381                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4382  00314A  0E00               	movlw	0
  4383  00314C  0100               	movlb	0	; () banked
  4384  00314E  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4385  003150  0E00               	movlw	0
  4386  003152  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4387  003154  0E00               	movlw	0
  4388  003156  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4389  003158  0E00               	movlw	0
  4390  00315A  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4394  00315C  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4395  00315E  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4396  003160  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4397  003164  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4398  003168  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4399  00316A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4400  00316C  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4401  003170  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4402  003174  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4403  003176  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4404  003178  ECCB  F029         	call	___lmul	;wreg free
  4405  00317C  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4406  003180  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4407  003184  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4408  003188  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4409                           
  4410                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4411  00318C  0E00               	movlw	0
  4412  00318E  0100               	movlb	0	; () banked
  4413  003190  6F89               	movwf	___lldiv@dividend& (0+255),b
  4414  003192  0E1B               	movlw	27
  4415  003194  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4416  003196  0EB7               	movlw	183
  4417  003198  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4418  00319A  0E00               	movlw	0
  4419  00319C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4420  00319E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4421  0031A2  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4422  0031A6  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4423  0031AA  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4424  0031AE  ECE1  F026         	call	___lldiv	;wreg free
  4425  0031B2  0100               	movlb	0	; () banked
  4426  0031B4  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4427  0031B6  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4428  0031B8  E13A               	bnz	l14239
  4429  0031BA  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4430  0031BC  A0D8               	btfss	status,0,c
  4431  0031BE  D02D               	goto	l529
  4432  0031C0  D036               	goto	l528
  4433  0031C2                     
  4434                           ; BSR set to: 0
  4435                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4436                           
  4437                           ; BSR set to: 0
  4438  0031C2  0E00               	movlw	0
  4439  0031C4  6F89               	movwf	___lldiv@dividend& (0+255),b
  4440  0031C6  0E1B               	movlw	27
  4441  0031C8  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4442  0031CA  0EB7               	movlw	183
  4443  0031CC  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4444  0031CE  0E00               	movlw	0
  4445  0031D0  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4446  0031D2  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4447  0031D6  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4448  0031DA  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4449  0031DE  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4450  0031E2  ECE1  F026         	call	___lldiv	;wreg free
  4451  0031E6  0100               	movlb	0	; () banked
  4452  0031E8  5189               	movf	?___lldiv& (0+255),w,b
  4453  0031EA  6ECB               	movwf	4043,c	;volatile
  4454                           
  4455                           ;tmr_drv.c: 210: break;
  4456  0031EC  D01D               	goto	l531
  4457  0031EE                     
  4458                           ; BSR set to: 0
  4459                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4460                           
  4461                           ; BSR set to: 0
  4462  0031EE  0E00               	movlw	0
  4463  0031F0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4464  0031F2  0E1B               	movlw	27
  4465  0031F4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4466  0031F6  0EB7               	movlw	183
  4467  0031F8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4468  0031FA  0E00               	movlw	0
  4469  0031FC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4470  0031FE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4471  003202  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4472  003206  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4473  00320A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4474  00320E  ECE1  F026         	call	___lldiv	;wreg free
  4475  003212  0100               	movlb	0	; () banked
  4476  003214  5189               	movf	?___lldiv& (0+255),w,b
  4477  003216  6E77               	movwf	3959,c	;volatile
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;tmr_drv.c: 219: }
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;tmr_drv.c: 218: break;
  4484                           
  4485                           ;tmr_drv.c: 217: default:
  4486                           
  4487                           ;tmr_drv.c: 215: break;
  4488  003218  D007               	goto	l531
  4489  00321A                     l529:
  4490                           
  4491                           ; BSR set to: 0
  4492                           
  4493                           ; BSR set to: 0
  4494  00321A  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4495                           
  4496                           ; Switch size 1, requested type "space"
  4497                           ; Number of cases is 2, Range of values is 2 to 4
  4498                           ; switch strategies available:
  4499                           ; Name         Instructions Cycles
  4500                           ; simple_byte            7     4 (average)
  4501                           ;	Chosen strategy is simple_byte
  4502  00321C  0A02               	xorlw	2	; case 2
  4503  00321E  B4D8               	btfsc	status,2,c
  4504  003220  D7D0               	goto	l530
  4505  003222  0A06               	xorlw	6	; case 4
  4506  003224  B4D8               	btfsc	status,2,c
  4507  003226  D7E3               	goto	l532
  4508  003228                     l531:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4512                           
  4513                           ; BSR set to: 0
  4514  003228  0E00               	movlw	0
  4515  00322A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4516                           
  4517                           ;tmr_drv.c: 223: }
  4518  00322C  0012               	return	
  4519  00322E                     l528:
  4520  00322E                     l14239:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;tmr_drv.c: 224: else
  4524                           ;tmr_drv.c: 225: {
  4525                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4526  00322E  0E01               	movlw	1
  4527  003230  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4528                           
  4529                           ; BSR set to: 0
  4530  003232  0012               	return	
  4531  003234                     __end_of_Tmr_TmrBPrSet:
  4532                           	opt stack 0
  4533                           tblptru	equ	0xFF8
  4534                           tblptrh	equ	0xFF7
  4535                           tblptrl	equ	0xFF6
  4536                           tablat	equ	0xFF5
  4537                           prodh	equ	0xFF4
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           intcon2	equ	0xFF1
  4541                           intcon3	equ	0xFF0
  4542                           postinc0	equ	0xFEE
  4543                           wreg	equ	0xFE8
  4544                           postdec1	equ	0xFE5
  4545                           fsr1h	equ	0xFE2
  4546                           fsr1l	equ	0xFE1
  4547                           indf2	equ	0xFDF
  4548                           postinc2	equ	0xFDE
  4549                           postdec2	equ	0xFDD
  4550                           fsr2h	equ	0xFDA
  4551                           fsr2l	equ	0xFD9
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function _Tmr_TmrBIrqSet *****************
  4555 ;; Defined at:
  4556 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  TmrNumb         1    wreg     unsigned char 
  4559 ;;  Priority        1   29[BANK0 ] enum E7716
  4560 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;Total ram usage:        3 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:   11
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_Tmr_TmrBConfig
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text10
  4587  005820                     __ptext10:
  4588                           	opt stack 0
  4589  005820                     _Tmr_TmrBIrqSet:
  4590                           	opt stack 16
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;incstack = 0
  4594                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4595  005820  0100               	movlb	0	; () banked
  4596  005822  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4597                           
  4598                           ;tmr_drv.c: 156: switch (TmrNumb)
  4599  005824  D01A               	goto	l520
  4600  005826                     l521:
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4604  005826  929E               	bcf	3998,1,c	;volatile
  4605                           
  4606                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4607  005828  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4608  00582A  D002               	bra	u8415
  4609  00582C  929F               	bcf	3999,1,c	;volatile
  4610  00582E  D001               	bra	u8416
  4611  005830                     u8415:
  4612  005830  829F               	bsf	3999,1,c	;volatile
  4613  005832                     u8416:
  4614                           
  4615                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4616  005832  0100               	movlb	0	; () banked
  4617  005834  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4618  005836  D002               	bra	u8425
  4619  005838  929D               	bcf	3997,1,c	;volatile
  4620  00583A  D001               	bra	u8426
  4621  00583C                     u8425:
  4622  00583C  829D               	bsf	3997,1,c	;volatile
  4623  00583E                     u8426:
  4624                           
  4625                           ;tmr_drv.c: 165: break;
  4626  00583E  0012               	return	
  4627  005840                     l523:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4631  005840  96A4               	bcf	4004,3,c	;volatile
  4632                           
  4633                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4634  005842  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4635  005844  D002               	bra	u8435
  4636  005846  96A5               	bcf	4005,3,c	;volatile
  4637  005848  D001               	bra	u8436
  4638  00584A                     u8435:
  4639  00584A  86A5               	bsf	4005,3,c	;volatile
  4640  00584C                     u8436:
  4641                           
  4642                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4643  00584C  0100               	movlb	0	; () banked
  4644  00584E  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4645  005850  D002               	bra	u8445
  4646  005852  96A3               	bcf	4003,3,c	;volatile
  4647  005854  D001               	bra	u8446
  4648  005856                     u8445:
  4649  005856  86A3               	bsf	4003,3,c	;volatile
  4650  005858                     u8446:
  4651                           
  4652                           ;tmr_drv.c: 178: }
  4653                           
  4654                           ;tmr_drv.c: 177: break;
  4655                           
  4656                           ;tmr_drv.c: 176: default:
  4657                           
  4658                           ;tmr_drv.c: 174: break;
  4659  005858  0012               	return	
  4660  00585A                     l520:
  4661  00585A  0100               	movlb	0	; () banked
  4662  00585C  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4663                           
  4664                           ; Switch size 1, requested type "space"
  4665                           ; Number of cases is 2, Range of values is 2 to 4
  4666                           ; switch strategies available:
  4667                           ; Name         Instructions Cycles
  4668                           ; simple_byte            7     4 (average)
  4669                           ;	Chosen strategy is simple_byte
  4670  00585E  0A02               	xorlw	2	; case 2
  4671  005860  B4D8               	btfsc	status,2,c
  4672  005862  D7E1               	goto	l521
  4673  005864  0A06               	xorlw	6	; case 4
  4674  005866  A4D8               	btfss	status,2,c
  4675  005868  0012               	return	
  4676  00586A  D7EA               	goto	l523
  4677  00586C                     __end_of_Tmr_TmrBIrqSet:
  4678                           	opt stack 0
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           prodh	equ	0xFF4
  4684                           prodl	equ	0xFF3
  4685                           intcon	equ	0xFF2
  4686                           intcon2	equ	0xFF1
  4687                           intcon3	equ	0xFF0
  4688                           postinc0	equ	0xFEE
  4689                           wreg	equ	0xFE8
  4690                           postdec1	equ	0xFE5
  4691                           fsr1h	equ	0xFE2
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           postinc2	equ	0xFDE
  4695                           postdec2	equ	0xFDD
  4696                           fsr2h	equ	0xFDA
  4697                           fsr2l	equ	0xFD9
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _Tmr_StartTmr *****************
  4701 ;; Defined at:
  4702 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  TmrNumb         1    wreg     unsigned char 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;Total ram usage:        1 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:   11
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_Tmr_TmrBConfig
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text11
  4731  00618C                     __ptext11:
  4732                           	opt stack 0
  4733  00618C                     _Tmr_StartTmr:
  4734                           	opt stack 16
  4735                           
  4736                           ;incstack = 0
  4737                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4738  00618C  0100               	movlb	0	; () banked
  4739  00618E  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4740                           
  4741                           ;tmr_drv.c: 245: switch (TmrNumb)
  4742  006190  D004               	goto	l538
  4743  006192                     l539:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4747  006192  84CA               	bsf	4042,2,c	;volatile
  4748                           
  4749                           ;tmr_drv.c: 250: break;
  4750  006194  0012               	return	
  4751  006196                     l541:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4755  006196  8476               	bsf	3958,2,c	;volatile
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;tmr_drv.c: 259: }
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;tmr_drv.c: 258: break;
  4762                           
  4763                           ;tmr_drv.c: 257: default:
  4764                           
  4765                           ;tmr_drv.c: 255: break;
  4766  006198  0012               	return	
  4767  00619A                     l538:
  4768                           
  4769                           ; BSR set to: 0
  4770  00619A  0100               	movlb	0	; () banked
  4771  00619C  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4772                           
  4773                           ; Switch size 1, requested type "space"
  4774                           ; Number of cases is 2, Range of values is 2 to 4
  4775                           ; switch strategies available:
  4776                           ; Name         Instructions Cycles
  4777                           ; simple_byte            7     4 (average)
  4778                           ;	Chosen strategy is simple_byte
  4779  00619E  0A02               	xorlw	2	; case 2
  4780  0061A0  B4D8               	btfsc	status,2,c
  4781  0061A2  D7F7               	goto	l539
  4782  0061A4  0A06               	xorlw	6	; case 4
  4783  0061A6  A4D8               	btfss	status,2,c
  4784  0061A8  0012               	return	
  4785  0061AA  D7F5               	goto	l541
  4786  0061AC                     __end_of_Tmr_StartTmr:
  4787                           	opt stack 0
  4788                           tblptru	equ	0xFF8
  4789                           tblptrh	equ	0xFF7
  4790                           tblptrl	equ	0xFF6
  4791                           tablat	equ	0xFF5
  4792                           prodh	equ	0xFF4
  4793                           prodl	equ	0xFF3
  4794                           intcon	equ	0xFF2
  4795                           intcon2	equ	0xFF1
  4796                           intcon3	equ	0xFF0
  4797                           postinc0	equ	0xFEE
  4798                           wreg	equ	0xFE8
  4799                           postdec1	equ	0xFE5
  4800                           fsr1h	equ	0xFE2
  4801                           fsr1l	equ	0xFE1
  4802                           indf2	equ	0xFDF
  4803                           postinc2	equ	0xFDE
  4804                           postdec2	equ	0xFDD
  4805                           fsr2h	equ	0xFDA
  4806                           fsr2l	equ	0xFD9
  4807                           status	equ	0xFD8
  4808                           
  4809 ;; *************** function _TmrBInit *****************
  4810 ;; Defined at:
  4811 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  TmrNumb         1    wreg     unsigned char 
  4814 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4815 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4827 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;Total ram usage:        4 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:   11
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_Tmr_TmrBConfig
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text12
  4842  0048AE                     __ptext12:
  4843                           	opt stack 0
  4844  0048AE                     _TmrBInit:
  4845                           	opt stack 16
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;incstack = 0
  4849                           ;TmrBInit@TmrNumb stored from wreg
  4850  0048AE  0100               	movlb	0	; () banked
  4851  0048B0  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4852                           
  4853                           ;tmr_drv.c: 75: switch (TmrNumb)
  4854  0048B2  D03F               	goto	l500
  4855  0048B4                     l503:
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4859  0048B4  90CA               	bcf	4042,0,c	;volatile
  4860  0048B6  D001               	goto	L1
  4861  0048B8                     l505:
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4865  0048B8  80CA               	bsf	4042,0,c	;volatile
  4866  0048BA                     L1:
  4867                           
  4868                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4869  0048BA  92CA               	bcf	4042,1,c	;volatile
  4870                           
  4871                           ;tmr_drv.c: 91: break;
  4872  0048BC  D00E               	goto	l504
  4873  0048BE                     l506:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4877  0048BE  80CA               	bsf	4042,0,c	;volatile
  4878                           
  4879                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4880  0048C0  82CA               	bsf	4042,1,c	;volatile
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;tmr_drv.c: 100: }
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;tmr_drv.c: 99: break;
  4887                           
  4888                           ;tmr_drv.c: 98: default:
  4889                           
  4890                           ;tmr_drv.c: 96: break;
  4891  0048C2  D00B               	goto	l504
  4892  0048C4                     
  4893                           ; BSR set to: 0
  4894  0048C4  0100               	movlb	0	; () banked
  4895  0048C6  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4896                           
  4897                           ; Switch size 1, requested type "space"
  4898                           ; Number of cases is 3, Range of values is 1 to 16
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte           10     6 (average)
  4902                           ;	Chosen strategy is simple_byte
  4903  0048C8  0A01               	xorlw	1	; case 1
  4904  0048CA  B4D8               	btfsc	status,2,c
  4905  0048CC  D7F3               	goto	l503
  4906  0048CE  0A05               	xorlw	5	; case 4
  4907  0048D0  B4D8               	btfsc	status,2,c
  4908  0048D2  D7F2               	goto	l505
  4909  0048D4  0A14               	xorlw	20	; case 16
  4910  0048D6  B4D8               	btfsc	status,2,c
  4911  0048D8  D7F2               	goto	l506
  4912  0048DA                     l504:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4916                           
  4917                           ; BSR set to: 0
  4918  0048DA  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4919  0048DE  0EFF               	movlw	255
  4920  0048E0  277F               	addwf	??_TmrBInit& (0+255),f,b
  4921  0048E2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4922  0048E4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4923  0048E6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4924  0048E8  50CA               	movf	4042,w,c	;volatile
  4925  0048EA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4926  0048EC  0B87               	andlw	-121
  4927  0048EE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4928  0048F0  6ECA               	movwf	4042,c	;volatile
  4929                           
  4930                           ;tmr_drv.c: 104: break;
  4931  0048F2  0012               	return	
  4932  0048F4                     l511:
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4936  0048F4  9076               	bcf	3958,0,c	;volatile
  4937  0048F6  D001               	goto	L2
  4938  0048F8                     l513:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4942  0048F8  8076               	bsf	3958,0,c	;volatile
  4943  0048FA                     L2:
  4944                           
  4945                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4946  0048FA  9276               	bcf	3958,1,c	;volatile
  4947                           
  4948                           ;tmr_drv.c: 120: break;
  4949  0048FC  D00D               	goto	l512
  4950  0048FE                     l514:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4954  0048FE  8076               	bsf	3958,0,c	;volatile
  4955                           
  4956                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4957  004900  8276               	bsf	3958,1,c	;volatile
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;tmr_drv.c: 129: }
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;tmr_drv.c: 128: break;
  4964                           
  4965                           ;tmr_drv.c: 127: default:
  4966                           
  4967                           ;tmr_drv.c: 125: break;
  4968  004902  D00A               	goto	l512
  4969  004904                     
  4970                           ; BSR set to: 0
  4971                           
  4972                           ; BSR set to: 0
  4973  004904  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4974                           
  4975                           ; Switch size 1, requested type "space"
  4976                           ; Number of cases is 3, Range of values is 1 to 16
  4977                           ; switch strategies available:
  4978                           ; Name         Instructions Cycles
  4979                           ; simple_byte           10     6 (average)
  4980                           ;	Chosen strategy is simple_byte
  4981  004906  0A01               	xorlw	1	; case 1
  4982  004908  B4D8               	btfsc	status,2,c
  4983  00490A  D7F4               	goto	l511
  4984  00490C  0A05               	xorlw	5	; case 4
  4985  00490E  B4D8               	btfsc	status,2,c
  4986  004910  D7F3               	goto	l513
  4987  004912  0A14               	xorlw	20	; case 16
  4988  004914  B4D8               	btfsc	status,2,c
  4989  004916  D7F3               	goto	l514
  4990  004918                     l512:
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4994                           
  4995                           ; BSR set to: 0
  4996  004918  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4997  00491C  0EFF               	movlw	255
  4998  00491E  277F               	addwf	??_TmrBInit& (0+255),f,b
  4999  004920  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5000  004922  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5001  004924  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5002  004926  5076               	movf	3958,w,c	;volatile
  5003  004928  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5004  00492A  0B87               	andlw	-121
  5005  00492C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5006  00492E  6E76               	movwf	3958,c	;volatile
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;tmr_drv.c: 137: }
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;tmr_drv.c: 136: break;
  5013                           
  5014                           ;tmr_drv.c: 135: default:
  5015                           
  5016                           ;tmr_drv.c: 133: break;
  5017  004930  0012               	return	
  5018  004932                     l500:
  5019                           
  5020                           ; BSR set to: 0
  5021  004932  0100               	movlb	0	; () banked
  5022  004934  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5023                           
  5024                           ; Switch size 1, requested type "space"
  5025                           ; Number of cases is 2, Range of values is 2 to 4
  5026                           ; switch strategies available:
  5027                           ; Name         Instructions Cycles
  5028                           ; simple_byte            7     4 (average)
  5029                           ;	Chosen strategy is simple_byte
  5030  004936  0A02               	xorlw	2	; case 2
  5031  004938  B4D8               	btfsc	status,2,c
  5032  00493A  D7C4               	goto	l502
  5033  00493C  0A06               	xorlw	6	; case 4
  5034  00493E  A4D8               	btfss	status,2,c
  5035  004940  0012               	return	
  5036  004942  D7E0               	goto	l510
  5037  004944                     __end_of_TmrBInit:
  5038                           	opt stack 0
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           intcon2	equ	0xFF1
  5047                           intcon3	equ	0xFF0
  5048                           postinc0	equ	0xFEE
  5049                           wreg	equ	0xFE8
  5050                           postdec1	equ	0xFE5
  5051                           fsr1h	equ	0xFE2
  5052                           fsr1l	equ	0xFE1
  5053                           indf2	equ	0xFDF
  5054                           postinc2	equ	0xFDE
  5055                           postdec2	equ	0xFDD
  5056                           fsr2h	equ	0xFDA
  5057                           fsr2l	equ	0xFD9
  5058                           status	equ	0xFD8
  5059                           
  5060 ;; *************** function _Sch_MainScheduler *****************
  5061 ;; Defined at:
  5062 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;Total ram usage:        0 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:   22
  5083 ;; This function calls:
  5084 ;;		_InitializeTasks
  5085 ;;		_ScheduleTasks
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text13
  5092  0061EA                     __ptext13:
  5093                           	opt stack 0
  5094  0061EA                     _Sch_MainScheduler:
  5095                           	opt stack 8
  5096                           
  5097                           ;os_sched.c: 178: InitializeTasks();
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101  0061EA  EC64  F027         	call	_InitializeTasks	;wreg free
  5102                           
  5103                           ;os_sched.c: 180: SystemState = RunningState;
  5104  0061EE  0E01               	movlw	1
  5105  0061F0  0100               	movlb	0	; () banked
  5106  0061F2  6FD5               	movwf	_SystemState& (0+255),b
  5107  0061F4                     
  5108                           ;os_sched.c: 188: {
  5109                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5110                           
  5111                           ; BSR set to: 0
  5112  0061F4  0102               	movlb	2	; () banked
  5113  0061F6  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5114  0061F8  A4D8               	btfss	status,2,c
  5115  0061FA  D7FC               	goto	l790
  5116                           
  5117                           ; BSR set to: 2
  5118                           ;os_sched.c: 191: {
  5119                           ;os_sched.c: 196: ScheduleTasks();
  5120  0061FC  EC71  F016         	call	_ScheduleTasks	;wreg free
  5121                           
  5122                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5123  006200  0E01               	movlw	1
  5124  006202  0102               	movlb	2	; () banked
  5125  006204  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5126                           
  5127                           ; BSR set to: 2
  5128                           
  5129                           ; BSR set to: 2
  5130  006206  D7F6               	goto	l790
  5131  006208                     __end_of_Sch_MainScheduler:
  5132                           	opt stack 0
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           intcon	equ	0xFF2
  5140                           intcon2	equ	0xFF1
  5141                           intcon3	equ	0xFF0
  5142                           postinc0	equ	0xFEE
  5143                           wreg	equ	0xFE8
  5144                           postdec1	equ	0xFE5
  5145                           fsr1h	equ	0xFE2
  5146                           fsr1l	equ	0xFE1
  5147                           indf2	equ	0xFDF
  5148                           postinc2	equ	0xFDE
  5149                           postdec2	equ	0xFDD
  5150                           fsr2h	equ	0xFDA
  5151                           fsr2l	equ	0xFD9
  5152                           status	equ	0xFD8
  5153                           
  5154 ;; *************** function _ScheduleTasks *****************
  5155 ;; Defined at:
  5156 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;		None
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  ActiveTaskIn    1    0[BANK3 ] unsigned char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5171 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5173 ;;      Totals:         0       0       0       0       1       4       0       0       0       0       0       0       
      +0       0       0       0
  5174 ;;Total ram usage:        5 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:   21
  5177 ;; This function calls:
  5178 ;;		_I2cSlv_MainTask
  5179 ;;		_Led_MainTask
  5180 ;;		_MdmHttp_MainTask
  5181 ;;		_Mdm_DrvMainFn
  5182 ;;		_Mdm_MainTask
  5183 ;;		_MyApp_Task
  5184 ;;		_Rtcm_MainTask
  5185 ;;		_Term_MainTask
  5186 ;;		_UsbDevice_MainTask
  5187 ;;		_Wdg_MainTask
  5188 ;; This function is called by:
  5189 ;;		_Sch_MainScheduler
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text14
  5194  002CE2                     __ptext14:
  5195                           	opt stack 0
  5196  002CE2                     _ScheduleTasks:
  5197                           	opt stack 8
  5198                           
  5199                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5200                           
  5201                           ; BSR set to: 2
  5202                           ;incstack = 0
  5203  002CE2  0E00               	movlw	0
  5204  002CE4  0103               	movlb	3	; () banked
  5205  002CE6  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5206                           
  5207                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5208  002CE8  0E00               	movlw	0
  5209  002CEA  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5210  002CEC                     l15361:
  5211                           
  5212                           ; BSR set to: 3
  5213  002CEC  0E3D               	movlw	low _TaskNumber
  5214  002CEE  6EF6               	movwf	tblptrl,c
  5215  002CF0                     	if	1	;There is more than 1 active tblptr byte
  5216  002CF0  0EFC               	movlw	high _TaskNumber
  5217  002CF2  6EF7               	movwf	tblptrh,c
  5218  002CF4                     	endif
  5219  002CF4                     	if	0	;There are less than 3 active tblptr bytes
  5220  002CF4                     	endif
  5221  002CF4  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5222  002CF6  0104               	movlb	4	; () banked
  5223  002CF8  6FE8               	movwf	??_ScheduleTasks& (0+255),b
  5224  002CFA  6BE9               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5225  002CFC  0009               	tblrd		*+
  5226  002CFE  50F5               	movf	tablat,w,c
  5227  002D00  5DE8               	subwf	??_ScheduleTasks& (0+255),w,b
  5228  002D02  0009               	tblrd		*+
  5229  002D04  50F5               	movf	tablat,w,c
  5230  002D06  59E9               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5231  002D08  B0D8               	btfsc	status,0,c
  5232  002D0A  0012               	return	
  5233                           
  5234                           ; BSR set to: 4
  5235                           ;os_sched.c: 106: {
  5236                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5237                           
  5238                           ; BSR set to: 4
  5239                           
  5240                           ; BSR set to: 4
  5241  002D0C  0103               	movlb	3	; () banked
  5242  002D0E  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5243  002D10  0D08               	mullw	8
  5244  002D12  0E03               	movlw	3
  5245  002D14  26F3               	addwf	prodl,f,c
  5246  002D16  0E00               	movlw	0
  5247  002D18  22F4               	addwfc	prodh,f,c
  5248  002D1A  0EA4               	movlw	low _TaskTable
  5249  002D1C  24F3               	addwf	prodl,w,c
  5250  002D1E  6ED9               	movwf	fsr2l,c
  5251  002D20  0E05               	movlw	high _TaskTable
  5252  002D22  20F4               	addwfc	prodh,w,c
  5253  002D24  6EDA               	movwf	fsr2h,c
  5254  002D26  2ADE               	incf	postinc2,f,c
  5255  002D28  0E00               	movlw	0
  5256  002D2A  22DD               	addwfc	postdec2,f,c
  5257                           
  5258                           ; BSR set to: 3
  5259                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5260  002D2C  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5261  002D2E  0D08               	mullw	8
  5262  002D30  0E05               	movlw	5
  5263  002D32  26F3               	addwf	prodl,f,c
  5264  002D34  0E00               	movlw	0
  5265  002D36  22F4               	addwfc	prodh,f,c
  5266  002D38  0EA4               	movlw	low _TaskTable
  5267  002D3A  24F3               	addwf	prodl,w,c
  5268  002D3C  6ED9               	movwf	fsr2l,c
  5269  002D3E  0E05               	movlw	high _TaskTable
  5270  002D40  20F4               	addwfc	prodh,w,c
  5271  002D42  6EDA               	movwf	fsr2h,c
  5272  002D44  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5273  002D46  0D08               	mullw	8
  5274  002D48  0E03               	movlw	3
  5275  002D4A  26F3               	addwf	prodl,f,c
  5276  002D4C  0E00               	movlw	0
  5277  002D4E  22F4               	addwfc	prodh,f,c
  5278  002D50  0EA4               	movlw	low _TaskTable
  5279  002D52  24F3               	addwf	prodl,w,c
  5280  002D54  6EE1               	movwf	fsr1l,c
  5281  002D56  0E05               	movlw	high _TaskTable
  5282  002D58  20F4               	addwfc	prodh,w,c
  5283  002D5A  6EE2               	movwf	fsr1h,c
  5284  002D5C  50DE               	movf	postinc2,w,c
  5285  002D5E  5CE6               	subwf	postinc1,w,c
  5286  002D60  50DE               	movf	postinc2,w,c
  5287  002D62  58E6               	subwfb	postinc1,w,c
  5288  002D64  A0D8               	btfss	status,0,c
  5289  002D66  D04E               	goto	l775
  5290                           
  5291                           ; BSR set to: 3
  5292                           ;os_sched.c: 111: {
  5293                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5294  002D68  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5295  002D6A  0D08               	mullw	8
  5296  002D6C  0E03               	movlw	3
  5297  002D6E  26F3               	addwf	prodl,f,c
  5298  002D70  0E00               	movlw	0
  5299  002D72  22F4               	addwfc	prodh,f,c
  5300  002D74  0EA4               	movlw	low _TaskTable
  5301  002D76  24F3               	addwf	prodl,w,c
  5302  002D78  6ED9               	movwf	fsr2l,c
  5303  002D7A  0E05               	movlw	high _TaskTable
  5304  002D7C  20F4               	addwfc	prodh,w,c
  5305  002D7E  6EDA               	movwf	fsr2h,c
  5306  002D80  0E00               	movlw	0
  5307  002D82  6EDE               	movwf	postinc2,c
  5308  002D84  0E00               	movlw	0
  5309  002D86  6EDD               	movwf	postdec2,c
  5310                           
  5311                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5312  002D88  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5313  002D8A  0D08               	mullw	8
  5314  002D8C  0E02               	movlw	2
  5315  002D8E  26F3               	addwf	prodl,f,c
  5316  002D90  0E00               	movlw	0
  5317  002D92  22F4               	addwfc	prodh,f,c
  5318  002D94  0EA4               	movlw	low _TaskTable
  5319  002D96  24F3               	addwf	prodl,w,c
  5320  002D98  6ED9               	movwf	fsr2l,c
  5321  002D9A  0E05               	movlw	high _TaskTable
  5322  002D9C  20F4               	addwfc	prodh,w,c
  5323  002D9E  6EDA               	movwf	fsr2h,c
  5324  002DA0  0E01               	movlw	1
  5325  002DA2  6EDF               	movwf	indf2,c
  5326                           
  5327                           ; BSR set to: 3
  5328                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5329  002DA4  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5330  002DA6  0D08               	mullw	8
  5331  002DA8  0EA4               	movlw	low _TaskTable
  5332  002DAA  24F3               	addwf	prodl,w,c
  5333  002DAC  6ED9               	movwf	fsr2l,c
  5334  002DAE  0E05               	movlw	high _TaskTable
  5335  002DB0  20F4               	addwfc	prodh,w,c
  5336  002DB2  6EDA               	movwf	fsr2h,c
  5337  002DB4  D801               	call	u15098
  5338  002DB6  D017               	goto	u15099
  5339  002DB8                     u15098:
  5340  002DB8  0005               	push	
  5341  002DBA  6EFA               	movwf	pclath,c
  5342  002DBC  50DE               	movf	postinc2,w,c
  5343  002DBE  6EFD               	movwf	tosl,c
  5344  002DC0  50DE               	movf	postinc2,w,c
  5345  002DC2  6EFE               	movwf	tosh,c
  5346  002DC4  50F8               	movf	tblptru,w,c
  5347  002DC6  6EFF               	movwf	tosu,c
  5348  002DC8  50FA               	movf	pclath,w,c
  5349  002DCA  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5350  002DCC  0D08               	mullw	8
  5351  002DCE  0E07               	movlw	7
  5352  002DD0  26F3               	addwf	prodl,f,c
  5353  002DD2  0E00               	movlw	0
  5354  002DD4  22F4               	addwfc	prodh,f,c
  5355  002DD6  0EA4               	movlw	low _TaskTable
  5356  002DD8  24F3               	addwf	prodl,w,c
  5357  002DDA  6ED9               	movwf	fsr2l,c
  5358  002DDC  0E05               	movlw	high _TaskTable
  5359  002DDE  20F4               	addwfc	prodh,w,c
  5360  002DE0  6EDA               	movwf	fsr2h,c
  5361  002DE2  50DF               	movf	indf2,w,c
  5362  002DE4  0012               	return		;indir
  5363  002DE6                     u15099:
  5364                           
  5365                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5366  002DE6  0103               	movlb	3	; () banked
  5367  002DE8  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5368  002DEA  0D08               	mullw	8
  5369  002DEC  0E02               	movlw	2
  5370  002DEE  26F3               	addwf	prodl,f,c
  5371  002DF0  0E00               	movlw	0
  5372  002DF2  22F4               	addwfc	prodh,f,c
  5373  002DF4  0EA4               	movlw	low _TaskTable
  5374  002DF6  24F3               	addwf	prodl,w,c
  5375  002DF8  6ED9               	movwf	fsr2l,c
  5376  002DFA  0E05               	movlw	high _TaskTable
  5377  002DFC  20F4               	addwfc	prodh,w,c
  5378  002DFE  6EDA               	movwf	fsr2h,c
  5379  002E00  0E00               	movlw	0
  5380  002E02  6EDF               	movwf	indf2,c
  5381  002E04                     l775:
  5382                           
  5383                           ; BSR set to: 3
  5384                           
  5385                           ; BSR set to: 3
  5386                           
  5387                           ;os_sched.c: 117: else
  5388                           ;os_sched.c: 118: {
  5389                           
  5390                           ; BSR set to: 3
  5391  002E04  2BFE               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5392  002E06  D772               	goto	l15361
  5393  002E08                     __end_of_ScheduleTasks:
  5394                           	opt stack 0
  5395                           tosu	equ	0xFFF
  5396                           tosh	equ	0xFFE
  5397                           tosl	equ	0xFFD
  5398                           pclath	equ	0xFFA
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           intcon	equ	0xFF2
  5406                           intcon2	equ	0xFF1
  5407                           intcon3	equ	0xFF0
  5408                           postinc0	equ	0xFEE
  5409                           wreg	equ	0xFE8
  5410                           postinc1	equ	0xFE6
  5411                           postdec1	equ	0xFE5
  5412                           fsr1h	equ	0xFE2
  5413                           fsr1l	equ	0xFE1
  5414                           indf2	equ	0xFDF
  5415                           postinc2	equ	0xFDE
  5416                           postdec2	equ	0xFDD
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _InitializeTasks *****************
  5422 ;; Defined at:
  5423 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  ActiveTaskIn    1    0[BANK4 ] unsigned char 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5439 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;      Totals:         0       0       0       0       2       1       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;Total ram usage:        3 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:   21
  5444 ;; This function calls:
  5445 ;;		_I2cSlv_MainTask
  5446 ;;		_Led_MainTask
  5447 ;;		_MdmHttp_MainTask
  5448 ;;		_Mdm_DrvMainFn
  5449 ;;		_Mdm_MainTask
  5450 ;;		_MyApp_Task
  5451 ;;		_Rtcm_MainTask
  5452 ;;		_Term_MainTask
  5453 ;;		_UsbDevice_MainTask
  5454 ;;		_Wdg_MainTask
  5455 ;; This function is called by:
  5456 ;;		_Sch_MainScheduler
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text15
  5461  004EC8                     __ptext15:
  5462                           	opt stack 0
  5463  004EC8                     _InitializeTasks:
  5464                           	opt stack 8
  5465                           
  5466                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5467                           
  5468                           ; BSR set to: 4
  5469                           ;incstack = 0
  5470  004EC8  0E00               	movlw	0
  5471  004ECA  0104               	movlb	4	; () banked
  5472  004ECC  6FE8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5473                           
  5474                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5475  004ECE  0E00               	movlw	0
  5476  004ED0  6FE8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5477  004ED2                     l15349:
  5478                           
  5479                           ; BSR set to: 4
  5480  004ED2  0E3D               	movlw	low _TaskNumber
  5481  004ED4  6EF6               	movwf	tblptrl,c
  5482  004ED6                     	if	1	;There is more than 1 active tblptr byte
  5483  004ED6  0EFC               	movlw	high _TaskNumber
  5484  004ED8  6EF7               	movwf	tblptrh,c
  5485  004EDA                     	endif
  5486  004EDA                     	if	0	;There are less than 3 active tblptr bytes
  5487  004EDA                     	endif
  5488  004EDA  51E8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5489  004EDC  0103               	movlb	3	; () banked
  5490  004EDE  6FFE               	movwf	??_InitializeTasks& (0+255),b
  5491  004EE0  6BFF               	clrf	(??_InitializeTasks+1)& (0+255),b
  5492  004EE2  0009               	tblrd		*+
  5493  004EE4  50F5               	movf	tablat,w,c
  5494  004EE6  5DFE               	subwf	??_InitializeTasks& (0+255),w,b
  5495  004EE8  0009               	tblrd		*+
  5496  004EEA  50F5               	movf	tablat,w,c
  5497  004EEC  59FF               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5498  004EEE  B0D8               	btfsc	status,0,c
  5499  004EF0  0012               	return	
  5500                           
  5501                           ; BSR set to: 3
  5502                           ;os_sched.c: 86: {
  5503                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5504                           
  5505                           ; BSR set to: 3
  5506                           
  5507                           ; BSR set to: 3
  5508  004EF2  0104               	movlb	4	; () banked
  5509  004EF4  51E8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5510  004EF6  0D08               	mullw	8
  5511  004EF8  0EA4               	movlw	low _TaskTable
  5512  004EFA  24F3               	addwf	prodl,w,c
  5513  004EFC  6ED9               	movwf	fsr2l,c
  5514  004EFE  0E05               	movlw	high _TaskTable
  5515  004F00  20F4               	addwfc	prodh,w,c
  5516  004F02  6EDA               	movwf	fsr2h,c
  5517  004F04  D801               	call	u15058
  5518  004F06  D017               	goto	u15059
  5519  004F08                     u15058:
  5520  004F08  0005               	push	
  5521  004F0A  6EFA               	movwf	pclath,c
  5522  004F0C  50DE               	movf	postinc2,w,c
  5523  004F0E  6EFD               	movwf	tosl,c
  5524  004F10  50DE               	movf	postinc2,w,c
  5525  004F12  6EFE               	movwf	tosh,c
  5526  004F14  50F8               	movf	tblptru,w,c
  5527  004F16  6EFF               	movwf	tosu,c
  5528  004F18  50FA               	movf	pclath,w,c
  5529  004F1A  51E8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5530  004F1C  0D08               	mullw	8
  5531  004F1E  0E07               	movlw	7
  5532  004F20  26F3               	addwf	prodl,f,c
  5533  004F22  0E00               	movlw	0
  5534  004F24  22F4               	addwfc	prodh,f,c
  5535  004F26  0EA4               	movlw	low _TaskTable
  5536  004F28  24F3               	addwf	prodl,w,c
  5537  004F2A  6ED9               	movwf	fsr2l,c
  5538  004F2C  0E05               	movlw	high _TaskTable
  5539  004F2E  20F4               	addwfc	prodh,w,c
  5540  004F30  6EDA               	movwf	fsr2h,c
  5541  004F32  50DF               	movf	indf2,w,c
  5542  004F34  0012               	return		;indir
  5543  004F36                     u15059:
  5544  004F36  0104               	movlb	4	; () banked
  5545  004F38  2BE8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5546  004F3A  D7CB               	goto	l15349
  5547  004F3C                     __end_of_InitializeTasks:
  5548                           	opt stack 0
  5549                           tosu	equ	0xFFF
  5550                           tosh	equ	0xFFE
  5551                           tosl	equ	0xFFD
  5552                           pclath	equ	0xFFA
  5553                           tblptru	equ	0xFF8
  5554                           tblptrh	equ	0xFF7
  5555                           tblptrl	equ	0xFF6
  5556                           tablat	equ	0xFF5
  5557                           prodh	equ	0xFF4
  5558                           prodl	equ	0xFF3
  5559                           intcon	equ	0xFF2
  5560                           intcon2	equ	0xFF1
  5561                           intcon3	equ	0xFF0
  5562                           postinc0	equ	0xFEE
  5563                           wreg	equ	0xFE8
  5564                           postinc1	equ	0xFE6
  5565                           postdec1	equ	0xFE5
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           indf2	equ	0xFDF
  5569                           postinc2	equ	0xFDE
  5570                           postdec2	equ	0xFDD
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _MyApp_Task *****************
  5576 ;; Defined at:
  5577 ;;		line 167 in file "../Source/c/04_App/app.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  Options         1    wreg     unsigned char 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  Options         1    0[COMRAM] unsigned char 
  5582 ;;  smsText        20    0        unsigned char [20]
  5583 ;;  cmpString       3    4[BANK1 ] unsigned char [3]
  5584 ;;  memoryResult    1    7[BANK1 ] enum E8114
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5595 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5597 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;Total ram usage:        4 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:   19
  5601 ;; This function calls:
  5602 ;;		_ClearBuffer
  5603 ;;		_Eeprom_Read
  5604 ;;		_GetCallerNumber
  5605 ;;		_Led_SetLedBlinkTime
  5606 ;;		_Mdm_HangPhoneCall
  5607 ;;		_Mdm_IsRinging
  5608 ;;		_Mdm_IsSmsReceived
  5609 ;;		_Mdm_RequestSmsData
  5610 ;;		_StringCompare
  5611 ;;		_blinkForSeconds
  5612 ;;		_initFsm
  5613 ;; This function is called by:
  5614 ;;		_InitializeTasks
  5615 ;;		_ScheduleTasks
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text16
  5620  002F2C                     __ptext16:
  5621                           	opt stack 0
  5622  002F2C                     _MyApp_Task:
  5623                           	opt stack 9
  5624                           
  5625                           ;app.c: 169: static UINT8 phone[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5', '6', '
      +                          7', '8', '9', '\0'};
  5626                           ;app.c: 171: static uint16_t blinkTicks = 0xFFFF;
  5627                           ;app.c: 172: static uint8_t blinkSeconds = 0;
  5628                           ;app.c: 174: uint8_t smsText[((UINT8)(20))];
  5629                           ;app.c: 175: uint8_t cmpString[] = {'c', 'a', 't'};
  5630                           
  5631                           ; BSR set to: 3
  5632                           ;incstack = 0
  5633  002F2C  C3CB  F104         	movff	MyApp_Task@F9007,MyApp_Task@cmpString
  5634  002F30  C3CC  F105         	movff	MyApp_Task@F9007+1,MyApp_Task@cmpString+1
  5635  002F34  C3CD  F106         	movff	MyApp_Task@F9007+2,MyApp_Task@cmpString+2
  5636                           
  5637                           ;app.c: 177: static uint8_t memoryFlag = 0;
  5638                           ;app.c: 178: I2cOpStsType memoryResult = OP_COMPLETE;
  5639  002F38  0E01               	movlw	1
  5640  002F3A  0101               	movlb	1	; () banked
  5641  002F3C  6F07               	movwf	MyApp_Task@memoryResult& (0+255),b
  5642                           
  5643                           ;app.c: 180: switch (SystemState)
  5644  002F3E  D07A               	goto	l2558
  5645  002F40                     
  5646                           ;app.c: 185: Led_SetLedBlinkTime(1u,100,900);
  5647                           
  5648                           ; BSR set to: 1
  5649  002F40  0E00               	movlw	0
  5650  002F42  0100               	movlb	0	; () banked
  5651  002F44  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5652  002F46  0E64               	movlw	100
  5653  002F48  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5654  002F4A  0E03               	movlw	3
  5655  002F4C  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5656  002F4E  0E84               	movlw	132
  5657  002F50  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5658  002F52  0E01               	movlw	1
  5659  002F54  ECCD  F02A         	call	_Led_SetLedBlinkTime
  5660                           
  5661                           ;app.c: 186: break;
  5662  002F58  0012               	return	
  5663  002F5A                     
  5664                           ;app.c: 190: if (initFsm())
  5665  002F5A  EC5A  F02C         	call	_initFsm	;wreg free
  5666  002F5E  0900               	iorlw	0
  5667  002F60  B4D8               	btfsc	status,2,c
  5668  002F62  0012               	return	
  5669                           
  5670                           ;app.c: 191: {
  5671                           ;app.c: 193: if (Mdm_IsRinging())
  5672  002F64  EC3C  F030         	call	_Mdm_IsRinging	;wreg free
  5673  002F68  0900               	iorlw	0
  5674  002F6A  B4D8               	btfsc	status,2,c
  5675  002F6C  D025               	goto	l2563
  5676                           
  5677                           ;app.c: 194: {
  5678                           ;app.c: 195: blinkTicks = 0;
  5679  002F6E  0E00               	movlw	0
  5680  002F70  0103               	movlb	3	; () banked
  5681  002F72  6FFD               	movwf	(MyApp_Task@blinkTicks+1)& (0+255),b
  5682  002F74  0E00               	movlw	0
  5683  002F76  6FFC               	movwf	MyApp_Task@blinkTicks& (0+255),b
  5684                           
  5685                           ; BSR set to: 3
  5686                           ;app.c: 196: if (StringCompare(phone, GetCallerNumber(), 14))
  5687  002F78  0EDA               	movlw	low MyApp_Task@phone
  5688  002F7A  0100               	movlb	0	; () banked
  5689  002F7C  6F85               	movwf	StringCompare@String1& (0+255),b
  5690  002F7E  0E04               	movlw	high MyApp_Task@phone
  5691  002F80  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5692  002F82  ECA1  F02E         	call	_GetCallerNumber	;wreg free
  5693  002F86  C083  F087         	movff	?_GetCallerNumber,StringCompare@String2
  5694  002F8A  C084  F088         	movff	?_GetCallerNumber+1,StringCompare@String2+1
  5695  002F8E  0E00               	movlw	0
  5696  002F90  0100               	movlb	0	; () banked
  5697  002F92  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5698  002F94  0E0E               	movlw	14
  5699  002F96  6F89               	movwf	StringCompare@Len& (0+255),b
  5700  002F98  EC21  F02B         	call	_StringCompare	;wreg free
  5701  002F9C  0900               	iorlw	0
  5702  002F9E  B4D8               	btfsc	status,2,c
  5703  002FA0  D003               	goto	l2564
  5704                           
  5705                           ;app.c: 197: {
  5706                           ;app.c: 198: blinkSeconds = 5;
  5707  002FA2  0E05               	movlw	5
  5708  002FA4  0101               	movlb	1	; () banked
  5709  002FA6  6FD6               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5710  002FA8                     l2564:
  5711                           
  5712                           ;app.c: 199: }
  5713                           ;app.c: 200: blinkSeconds = 3;
  5714  002FA8  0E03               	movlw	3
  5715  002FAA  0101               	movlb	1	; () banked
  5716  002FAC  6FD6               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5717                           
  5718                           ; BSR set to: 1
  5719                           ;app.c: 201: Mdm_HangPhoneCall();
  5720  002FAE  ECA9  F031         	call	_Mdm_HangPhoneCall	;wreg free
  5721                           
  5722                           ;app.c: 202: memoryFlag = 1;
  5723  002FB2  0E01               	movlw	1
  5724  002FB4  0100               	movlb	0	; () banked
  5725  002FB6  6FC4               	movwf	MyApp_Task@memoryFlag& (0+255),b
  5726  002FB8                     l2563:
  5727                           
  5728                           ;app.c: 203: }
  5729                           ;app.c: 204: if (Mdm_IsSmsReceived())
  5730                           
  5731                           ; BSR set to: 0
  5732  002FB8  EC2A  F030         	call	_Mdm_IsSmsReceived	;wreg free
  5733  002FBC  0900               	iorlw	0
  5734  002FBE  A4D8               	btfss	status,2,c
  5735                           
  5736                           ;app.c: 205: {
  5737                           ;app.c: 206: Mdm_RequestSmsData();
  5738  002FC0  ECCB  F031         	call	_Mdm_RequestSmsData	;wreg free
  5739                           
  5740                           ;app.c: 207: }
  5741                           ;app.c: 224: blinkForSeconds(blinkSeconds, &blinkTicks);
  5742  002FC4  0EFC               	movlw	low MyApp_Task@blinkTicks
  5743  002FC6  0100               	movlb	0	; () banked
  5744  002FC8  6F93               	movwf	blinkForSeconds@blinkTicks& (0+255),b
  5745  002FCA  0E03               	movlw	high MyApp_Task@blinkTicks
  5746  002FCC  6F94               	movwf	(blinkForSeconds@blinkTicks+1)& (0+255),b
  5747  002FCE  0101               	movlb	1	; () banked
  5748  002FD0  51D6               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5749  002FD2  EC67  F02E         	call	_blinkForSeconds
  5750                           
  5751                           ;app.c: 226: if (memoryFlag == 1)
  5752  002FD6  0100               	movlb	0	; () banked
  5753  002FD8  05C4               	decf	MyApp_Task@memoryFlag& (0+255),w,b
  5754  002FDA  A4D8               	btfss	status,2,c
  5755  002FDC  D00D               	goto	l2566
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;app.c: 227: {
  5759                           ;app.c: 229: ClearBuffer(phone, 14);
  5760  002FDE  0EDA               	movlw	low MyApp_Task@phone
  5761  002FE0  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5762  002FE2  0E04               	movlw	high MyApp_Task@phone
  5763  002FE4  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5764  002FE6  0E00               	movlw	0
  5765  002FE8  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5766  002FEA  0E0E               	movlw	14
  5767  002FEC  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5768  002FEE  ECBC  F02E         	call	_ClearBuffer	;wreg free
  5769                           
  5770                           ;app.c: 230: memoryFlag++;
  5771  002FF2  0100               	movlb	0	; () banked
  5772  002FF4  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5773                           
  5774                           ;app.c: 231: }
  5775  002FF6  0012               	return	
  5776  002FF8                     l2566:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;app.c: 232: else if (memoryFlag >= 2 && memoryFlag <= 250)
  5780                           
  5781                           ; BSR set to: 0
  5782  002FF8  0E01               	movlw	1
  5783  002FFA  65C4               	cpfsgt	MyApp_Task@memoryFlag& (0+255),b
  5784  002FFC  0012               	return	
  5785                           
  5786                           ; BSR set to: 0
  5787  002FFE  0EFB               	movlw	251
  5788  003000  61C4               	cpfslt	MyApp_Task@memoryFlag& (0+255),b
  5789  003002  0012               	return	
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;app.c: 233: {
  5793                           ;app.c: 234: if (memoryFlag == 100)
  5794  003004  0E64               	movlw	100
  5795  003006  19C4               	xorwf	MyApp_Task@memoryFlag& (0+255),w,b
  5796  003008  A4D8               	btfss	status,2,c
  5797  00300A  D012               	goto	l2569
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;app.c: 235: {
  5801                           ;app.c: 236: memoryResult = Eeprom_Read(0, phone, 13);
  5802  00300C  0EDA               	movlw	low MyApp_Task@phone
  5803  00300E  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
  5804  003010  0E04               	movlw	high MyApp_Task@phone
  5805  003012  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
  5806  003014  0E0D               	movlw	13
  5807  003016  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
  5808  003018  0E00               	movlw	0
  5809  00301A  ECA3  F02A         	call	_Eeprom_Read
  5810  00301E  0101               	movlb	1	; () banked
  5811  003020  6F07               	movwf	MyApp_Task@memoryResult& (0+255),b
  5812                           
  5813                           ; BSR set to: 1
  5814                           ;app.c: 237: if (memoryResult != OP_PENDING)
  5815  003022  0E02               	movlw	2
  5816  003024  1907               	xorwf	MyApp_Task@memoryResult& (0+255),w,b
  5817  003026  B4D8               	btfsc	status,2,c
  5818  003028  0012               	return	
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;app.c: 238: {
  5822                           ;app.c: 239: memoryFlag++;
  5823  00302A  0100               	movlb	0	; () banked
  5824  00302C  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;app.c: 240: }
  5828                           ;app.c: 241: }
  5829  00302E  0012               	return	
  5830  003030                     l2569:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;app.c: 242: else
  5834                           ;app.c: 243: {
  5835                           ;app.c: 244: memoryFlag++;
  5836                           
  5837                           ; BSR set to: 0
  5838  003030  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;app.c: 253: }
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;app.c: 252: break;
  5845                           
  5846                           ;app.c: 251: default:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;app.c: 245: }
  5850                           ;app.c: 246: }
  5851                           ;app.c: 247: }
  5852                           ;app.c: 248: break;
  5853                           
  5854                           ; BSR set to: 0
  5855                           
  5856                           ; BSR set to: 0
  5857                           
  5858                           ; BSR set to: 0
  5859  003032  0012               	return	
  5860  003034                     l2558:
  5861                           
  5862                           ; BSR set to: 0
  5863  003034  0100               	movlb	0	; () banked
  5864  003036  51D5               	movf	_SystemState& (0+255),w,b
  5865                           
  5866                           ; Switch size 1, requested type "space"
  5867                           ; Number of cases is 2, Range of values is 0 to 1
  5868                           ; switch strategies available:
  5869                           ; Name         Instructions Cycles
  5870                           ; simple_byte            7     4 (average)
  5871                           ;	Chosen strategy is simple_byte
  5872  003038  0A00               	xorlw	0	; case 0
  5873  00303A  B4D8               	btfsc	status,2,c
  5874  00303C  D781               	goto	l2559
  5875  00303E  0A01               	xorlw	1	; case 1
  5876  003040  A4D8               	btfss	status,2,c
  5877  003042  0012               	return	
  5878  003044  D78A               	goto	l2561
  5879  003046                     __end_of_MyApp_Task:
  5880                           	opt stack 0
  5881                           tosu	equ	0xFFF
  5882                           tosh	equ	0xFFE
  5883                           tosl	equ	0xFFD
  5884                           pclath	equ	0xFFA
  5885                           tblptru	equ	0xFF8
  5886                           tblptrh	equ	0xFF7
  5887                           tblptrl	equ	0xFF6
  5888                           tablat	equ	0xFF5
  5889                           prodh	equ	0xFF4
  5890                           prodl	equ	0xFF3
  5891                           intcon	equ	0xFF2
  5892                           intcon2	equ	0xFF1
  5893                           intcon3	equ	0xFF0
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           postinc1	equ	0xFE6
  5897                           postdec1	equ	0xFE5
  5898                           fsr1h	equ	0xFE2
  5899                           fsr1l	equ	0xFE1
  5900                           indf2	equ	0xFDF
  5901                           postinc2	equ	0xFDE
  5902                           postdec2	equ	0xFDD
  5903                           fsr2h	equ	0xFDA
  5904                           fsr2l	equ	0xFD9
  5905                           status	equ	0xFD8
  5906                           
  5907 ;; *************** function _Term_MainTask *****************
  5908 ;; Defined at:
  5909 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  Options         1    wreg     unsigned char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  Options         1    0[COMRAM] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:   17
  5930 ;; This function calls:
  5931 ;;		_Term_MainSm
  5932 ;; This function is called by:
  5933 ;;		_InitializeTasks
  5934 ;;		_ScheduleTasks
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text17
  5939  00625A                     __ptext17:
  5940                           	opt stack 0
  5941  00625A                     _Term_MainTask:
  5942                           	opt stack 11
  5943                           
  5944                           ;term.c: 847: switch (SystemState)
  5945                           
  5946                           ;incstack = 0
  5947  00625A  D003               	goto	l2452
  5948  00625C                     
  5949                           ;term.c: 858: Term_MainSm();
  5950  00625C  EC5B  F008         	call	_Term_MainSm	;wreg free
  5951                           
  5952                           ;term.c: 865: }
  5953                           
  5954                           ;term.c: 864: break;
  5955                           
  5956                           ;term.c: 863: default:
  5957                           
  5958                           ;term.c: 860: break;
  5959  006260  0012               	return	
  5960  006262                     l2452:
  5961  006262  0100               	movlb	0	; () banked
  5962  006264  51D5               	movf	_SystemState& (0+255),w,b
  5963                           
  5964                           ; Switch size 1, requested type "space"
  5965                           ; Number of cases is 2, Range of values is 0 to 1
  5966                           ; switch strategies available:
  5967                           ; Name         Instructions Cycles
  5968                           ; simple_byte            7     4 (average)
  5969                           ;	Chosen strategy is simple_byte
  5970  006266  0A00               	xorlw	0	; case 0
  5971  006268  B4D8               	btfsc	status,2,c
  5972  00626A  0012               	return	
  5973  00626C  0A01               	xorlw	1	; case 1
  5974  00626E  A4D8               	btfss	status,2,c
  5975  006270  0012               	return	
  5976  006272  D7F4               	goto	l2455
  5977  006274                     __end_of_Term_MainTask:
  5978                           	opt stack 0
  5979                           tosu	equ	0xFFF
  5980                           tosh	equ	0xFFE
  5981                           tosl	equ	0xFFD
  5982                           pclath	equ	0xFFA
  5983                           tblptru	equ	0xFF8
  5984                           tblptrh	equ	0xFF7
  5985                           tblptrl	equ	0xFF6
  5986                           tablat	equ	0xFF5
  5987                           prodh	equ	0xFF4
  5988                           prodl	equ	0xFF3
  5989                           intcon	equ	0xFF2
  5990                           intcon2	equ	0xFF1
  5991                           intcon3	equ	0xFF0
  5992                           postinc0	equ	0xFEE
  5993                           wreg	equ	0xFE8
  5994                           postinc1	equ	0xFE6
  5995                           postdec1	equ	0xFE5
  5996                           fsr1h	equ	0xFE2
  5997                           fsr1l	equ	0xFE1
  5998                           indf2	equ	0xFDF
  5999                           postinc2	equ	0xFDE
  6000                           postdec2	equ	0xFDD
  6001                           fsr2h	equ	0xFDA
  6002                           fsr2l	equ	0xFD9
  6003                           status	equ	0xFD8
  6004                           
  6005 ;; *************** function _Rtcm_MainTask *****************
  6006 ;; Defined at:
  6007 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  Options         1    wreg     unsigned char 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  Options         1    0[COMRAM] unsigned char 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;Total ram usage:        0 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:   14
  6028 ;; This function calls:
  6029 ;;		_Rtcc_AlarmConfig
  6030 ;;		_Rtcc_LockRtc
  6031 ;;		_Rtcc_RtcConfig
  6032 ;;		_Rtcc_SetRtcStatus
  6033 ;;		_Rtcc_UnlockRtc
  6034 ;;		_Rtcm_GetRtccDate
  6035 ;;		_Rtcm_SetRtccDate
  6036 ;; This function is called by:
  6037 ;;		_InitializeTasks
  6038 ;;		_ScheduleTasks
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text18
  6043  004C22                     __ptext18:
  6044                           	opt stack 0
  6045  004C22                     _Rtcm_MainTask:
  6046                           	opt stack 14
  6047                           
  6048                           ;rtcm.c: 101: switch (SystemState)
  6049                           
  6050                           ;incstack = 0
  6051  004C22  D03D               	goto	l2182
  6052  004C24                     l2183:
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6056  004C24  86CD               	bsf	4045,3,c	;volatile
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6060  004C26  0E00               	movlw	0
  6061  004C28  0103               	movlb	3	; () banked
  6062  004C2A  6FB7               	movwf	_RtcConfig& (0+255),b
  6063                           
  6064                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6065  004C2C  0E00               	movlw	0
  6066  004C2E  6FB8               	movwf	(_RtcConfig+1)& (0+255),b
  6067                           
  6068                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6069  004C30  0E01               	movlw	1
  6070  004C32  6FB9               	movwf	(_RtcConfig+2)& (0+255),b
  6071                           
  6072                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6073  004C34  0E01               	movlw	1
  6074  004C36  6FBA               	movwf	(_RtcConfig+3)& (0+255),b
  6075                           
  6076                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6077  004C38  0E01               	movlw	1
  6078  004C3A  6FB3               	movwf	_AlCfg& (0+255),b
  6079                           
  6080                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6081  004C3C  0E01               	movlw	1
  6082  004C3E  6FB4               	movwf	(_AlCfg+1)& (0+255),b
  6083                           
  6084                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6085  004C40  0E01               	movlw	1
  6086  004C42  6FB5               	movwf	(_AlCfg+2)& (0+255),b
  6087                           
  6088                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6089  004C44  0E00               	movlw	0
  6090  004C46  6FB6               	movwf	(_AlCfg+3)& (0+255),b
  6091                           
  6092                           ; BSR set to: 3
  6093                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6094  004C48  ECBB  F031         	call	_Rtcc_UnlockRtc	;wreg free
  6095                           
  6096                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6097  004C4C  0EB7               	movlw	low _RtcConfig
  6098  004C4E  0100               	movlb	0	; () banked
  6099  004C50  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6100  004C52  0E03               	movlw	high _RtcConfig
  6101  004C54  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6102  004C56  EC6C  F023         	call	_Rtcc_RtcConfig	;wreg free
  6103                           
  6104                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6105  004C5A  0EB3               	movlw	low _AlCfg
  6106  004C5C  0100               	movlb	0	; () banked
  6107  004C5E  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6108  004C60  0E03               	movlw	high _AlCfg
  6109  004C62  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6110  004C64  EC46  F028         	call	_Rtcc_AlarmConfig	;wreg free
  6111                           
  6112                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6113  004C68  0E01               	movlw	1
  6114  004C6A  EC6A  F031         	call	_Rtcc_SetRtcStatus
  6115                           
  6116                           ;rtcm.c: 127: Rtcc_LockRtc();
  6117  004C6E  ECC3  F031         	call	_Rtcc_LockRtc	;wreg free
  6118                           
  6119                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6120  004C72  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6121  004C76  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6122  004C7A  0E07               	movlw	7
  6123  004C7C                     u14931:
  6124  004C7C  CFDB FFEB          	movff	plusw2,plusw0
  6125  004C80  06E8               	decf	wreg,f,c
  6126  004C82  E2FC               	bc	u14931
  6127  004C84  EC79  F02A         	call	_Rtcm_SetRtccDate	;wreg free
  6128                           
  6129                           ;rtcm.c: 154: break;
  6130  004C88  0012               	return	
  6131  004C8A                     
  6132                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6133  004C8A  ECAF  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6134  004C8E  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6135  004C92  0E07               	movlw	7
  6136  004C94                     u14941:
  6137  004C94  CFEB FFDB          	movff	plusw0,plusw2
  6138  004C98  06E8               	decf	wreg,f,c
  6139  004C9A  E2FC               	bc	u14941
  6140                           
  6141                           ;rtcm.c: 165: }
  6142                           
  6143                           ;rtcm.c: 164: break;
  6144                           
  6145                           ;rtcm.c: 163: default:
  6146                           
  6147                           ;rtcm.c: 160: break;
  6148  004C9C  0012               	return	
  6149  004C9E                     l2182:
  6150  004C9E  0100               	movlb	0	; () banked
  6151  004CA0  51D5               	movf	_SystemState& (0+255),w,b
  6152                           
  6153                           ; Switch size 1, requested type "space"
  6154                           ; Number of cases is 2, Range of values is 0 to 1
  6155                           ; switch strategies available:
  6156                           ; Name         Instructions Cycles
  6157                           ; simple_byte            7     4 (average)
  6158                           ;	Chosen strategy is simple_byte
  6159  004CA2  0A00               	xorlw	0	; case 0
  6160  004CA4  B4D8               	btfsc	status,2,c
  6161  004CA6  D7BE               	goto	l2183
  6162  004CA8  0A01               	xorlw	1	; case 1
  6163  004CAA  A4D8               	btfss	status,2,c
  6164  004CAC  0012               	return	
  6165  004CAE  D7ED               	goto	l2185
  6166  004CB0                     __end_of_Rtcm_MainTask:
  6167                           	opt stack 0
  6168                           tosu	equ	0xFFF
  6169                           tosh	equ	0xFFE
  6170                           tosl	equ	0xFFD
  6171                           pclath	equ	0xFFA
  6172                           tblptru	equ	0xFF8
  6173                           tblptrh	equ	0xFF7
  6174                           tblptrl	equ	0xFF6
  6175                           tablat	equ	0xFF5
  6176                           prodh	equ	0xFF4
  6177                           prodl	equ	0xFF3
  6178                           intcon	equ	0xFF2
  6179                           intcon2	equ	0xFF1
  6180                           intcon3	equ	0xFF0
  6181                           postinc0	equ	0xFEE
  6182                           plusw0	equ	0xFEB
  6183                           wreg	equ	0xFE8
  6184                           postinc1	equ	0xFE6
  6185                           postdec1	equ	0xFE5
  6186                           fsr1h	equ	0xFE2
  6187                           fsr1l	equ	0xFE1
  6188                           indf2	equ	0xFDF
  6189                           postinc2	equ	0xFDE
  6190                           postdec2	equ	0xFDD
  6191                           plusw2	equ	0xFDB
  6192                           fsr2h	equ	0xFDA
  6193                           fsr2l	equ	0xFD9
  6194                           status	equ	0xFD8
  6195                           
  6196 ;; *************** function _Led_MainTask *****************
  6197 ;; Defined at:
  6198 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  Options         1    wreg     unsigned char 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  Options         1    0[COMRAM] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      void 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6215 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;Total ram usage:        1 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:   14
  6219 ;; This function calls:
  6220 ;;		_LedStateMachine
  6221 ;; This function is called by:
  6222 ;;		_InitializeTasks
  6223 ;;		_ScheduleTasks
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text19
  6228  0039EA                     __ptext19:
  6229                           	opt stack 0
  6230  0039EA                     _Led_MainTask:
  6231                           	opt stack 14
  6232                           
  6233                           ;led.c: 300: switch (SystemState)
  6234                           
  6235                           ;incstack = 0
  6236  0039EA  D05C               	goto	l2096
  6237  0039EC                     l2097:
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6241  0039EC  9895               	bcf	3989,4,c	;volatile
  6242                           
  6243                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6244  0039EE  9A95               	bcf	3989,5,c	;volatile
  6245                           
  6246                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6247  0039F0  9C95               	bcf	3989,6,c	;volatile
  6248                           
  6249                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6250  0039F2  9883               	bcf	3971,4,c	;volatile
  6251                           
  6252                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6253  0039F4  9A83               	bcf	3971,5,c	;volatile
  6254                           
  6255                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6256  0039F6  9C83               	bcf	3971,6,c	;volatile
  6257                           
  6258                           ;led.c: 311: break;
  6259  0039F8  0012               	return	
  6260  0039FA                     
  6261                           ; BSR set to: 0
  6262                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6263                           
  6264                           ; BSR set to: 0
  6265  0039FA  0EFC               	movlw	low _Led1Sts
  6266  0039FC  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6267  0039FE  0E01               	movlw	high _Led1Sts
  6268  003A00  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6269  003A02  0EFB               	movlw	low _Led1OutSts
  6270  003A04  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6271  003A06  0E01               	movlw	high _Led1OutSts
  6272  003A08  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6273  003A0A  0E6D               	movlw	low _Led1Blink
  6274  003A0C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6275  003A0E  0E03               	movlw	high _Led1Blink
  6276  003A10  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6277  003A12  0E91               	movlw	low _Led1Pulse
  6278  003A14  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6279  003A16  0E03               	movlw	high _Led1Pulse
  6280  003A18  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6281  003A1A  0E01               	movlw	1
  6282  003A1C  EC24  F022         	call	_LedStateMachine
  6283  003A20  0100               	movlb	0	; () banked
  6284  003A22  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6285  003A24  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6286  003A26  5083               	movf	3971,w,c	;volatile
  6287  003A28  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6288  003A2A  0BEF               	andlw	-17
  6289  003A2C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6290  003A2E  6E83               	movwf	3971,c	;volatile
  6291                           
  6292                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6293  003A30  0EFA               	movlw	low _Led2Sts
  6294  003A32  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6295  003A34  0E01               	movlw	high _Led2Sts
  6296  003A36  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6297  003A38  0EF9               	movlw	low _Led2OutSts
  6298  003A3A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6299  003A3C  0E01               	movlw	high _Led2OutSts
  6300  003A3E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6301  003A40  0E64               	movlw	low _Led2Blink
  6302  003A42  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6303  003A44  0E03               	movlw	high _Led2Blink
  6304  003A46  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6305  003A48  0E8B               	movlw	low _Led2Pulse
  6306  003A4A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6307  003A4C  0E03               	movlw	high _Led2Pulse
  6308  003A4E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6309  003A50  0E02               	movlw	2
  6310  003A52  EC24  F022         	call	_LedStateMachine
  6311  003A56  0100               	movlb	0	; () banked
  6312  003A58  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6313  003A5A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6314  003A5C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6315  003A5E  5083               	movf	3971,w,c	;volatile
  6316  003A60  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6317  003A62  0BDF               	andlw	-33
  6318  003A64  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6319  003A66  6E83               	movwf	3971,c	;volatile
  6320                           
  6321                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6322  003A68  0EF8               	movlw	low _Led3Sts
  6323  003A6A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6324  003A6C  0E01               	movlw	high _Led3Sts
  6325  003A6E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6326  003A70  0EF7               	movlw	low _Led3OutSts
  6327  003A72  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6328  003A74  0E01               	movlw	high _Led3OutSts
  6329  003A76  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6330  003A78  0E5B               	movlw	low _Led3Blink
  6331  003A7A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6332  003A7C  0E03               	movlw	high _Led3Blink
  6333  003A7E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6334  003A80  0E85               	movlw	low _Led3Pulse
  6335  003A82  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6336  003A84  0E03               	movlw	high _Led3Pulse
  6337  003A86  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6338  003A88  0E03               	movlw	3
  6339  003A8A  EC24  F022         	call	_LedStateMachine
  6340  003A8E  0100               	movlb	0	; () banked
  6341  003A90  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6342  003A92  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6343  003A94  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6344  003A96  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6345  003A98  5083               	movf	3971,w,c	;volatile
  6346  003A9A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6347  003A9C  0BBF               	andlw	-65
  6348  003A9E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6349  003AA0  6E83               	movwf	3971,c	;volatile
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;led.c: 326: }
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;led.c: 325: break;
  6356                           
  6357                           ;led.c: 324: default:
  6358                           
  6359                           ;led.c: 321: break;
  6360  003AA2  0012               	return	
  6361  003AA4                     l2096:
  6362                           
  6363                           ; BSR set to: 0
  6364  003AA4  0100               	movlb	0	; () banked
  6365  003AA6  51D5               	movf	_SystemState& (0+255),w,b
  6366                           
  6367                           ; Switch size 1, requested type "space"
  6368                           ; Number of cases is 2, Range of values is 0 to 1
  6369                           ; switch strategies available:
  6370                           ; Name         Instructions Cycles
  6371                           ; simple_byte            7     4 (average)
  6372                           ;	Chosen strategy is simple_byte
  6373  003AA8  0A00               	xorlw	0	; case 0
  6374  003AAA  B4D8               	btfsc	status,2,c
  6375  003AAC  D79F               	goto	l2097
  6376  003AAE  0A01               	xorlw	1	; case 1
  6377  003AB0  A4D8               	btfss	status,2,c
  6378  003AB2  0012               	return	
  6379  003AB4  D7A2               	goto	l2099
  6380  003AB6                     __end_of_Led_MainTask:
  6381                           	opt stack 0
  6382                           tosu	equ	0xFFF
  6383                           tosh	equ	0xFFE
  6384                           tosl	equ	0xFFD
  6385                           pclath	equ	0xFFA
  6386                           tblptru	equ	0xFF8
  6387                           tblptrh	equ	0xFF7
  6388                           tblptrl	equ	0xFF6
  6389                           tablat	equ	0xFF5
  6390                           prodh	equ	0xFF4
  6391                           prodl	equ	0xFF3
  6392                           intcon	equ	0xFF2
  6393                           intcon2	equ	0xFF1
  6394                           intcon3	equ	0xFF0
  6395                           postinc0	equ	0xFEE
  6396                           plusw0	equ	0xFEB
  6397                           wreg	equ	0xFE8
  6398                           postinc1	equ	0xFE6
  6399                           postdec1	equ	0xFE5
  6400                           fsr1h	equ	0xFE2
  6401                           fsr1l	equ	0xFE1
  6402                           indf2	equ	0xFDF
  6403                           postinc2	equ	0xFDE
  6404                           postdec2	equ	0xFDD
  6405                           plusw2	equ	0xFDB
  6406                           fsr2h	equ	0xFDA
  6407                           fsr2l	equ	0xFD9
  6408                           status	equ	0xFD8
  6409                           
  6410 ;; *************** function _UsbDevice_MainTask *****************
  6411 ;; Defined at:
  6412 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  Options         1    wreg     unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  Options         1    0[COMRAM] unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:   20
  6433 ;; This function calls:
  6434 ;;		_CDCTxService
  6435 ;;		_USBDeviceInit
  6436 ;;		_USBDeviceTasks
  6437 ;; This function is called by:
  6438 ;;		_InitializeTasks
  6439 ;;		_ScheduleTasks
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text20
  6444  006030                     __ptext20:
  6445                           	opt stack 0
  6446  006030                     _UsbDevice_MainTask:
  6447                           	opt stack 8
  6448                           
  6449                           ;usb_device_mgr.c: 74: switch (SystemState)
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;incstack = 0
  6453  006030  D008               	goto	l1989
  6454  006032                     
  6455                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6456  006032  ECC0  F010         	call	_USBDeviceInit	;wreg free
  6457                           
  6458                           ;usb_device_mgr.c: 80: ;
  6459                           ;usb_device_mgr.c: 81: break;
  6460  006036  0012               	return	
  6461  006038                     
  6462                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6463  006038  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6464                           
  6465                           ;usb_device_mgr.c: 90: CDCTxService();
  6466  00603C  EC63  F013         	call	_CDCTxService	;wreg free
  6467                           
  6468                           ;usb_device_mgr.c: 101: }
  6469                           
  6470                           ;usb_device_mgr.c: 100: break;
  6471                           
  6472                           ;usb_device_mgr.c: 99: default:
  6473                           
  6474                           ;usb_device_mgr.c: 96: break;
  6475  006040  0012               	return	
  6476  006042                     l1989:
  6477  006042  0100               	movlb	0	; () banked
  6478  006044  51D5               	movf	_SystemState& (0+255),w,b
  6479                           
  6480                           ; Switch size 1, requested type "space"
  6481                           ; Number of cases is 2, Range of values is 0 to 1
  6482                           ; switch strategies available:
  6483                           ; Name         Instructions Cycles
  6484                           ; simple_byte            7     4 (average)
  6485                           ;	Chosen strategy is simple_byte
  6486  006046  0A00               	xorlw	0	; case 0
  6487  006048  B4D8               	btfsc	status,2,c
  6488  00604A  D7F3               	goto	l1990
  6489  00604C  0A01               	xorlw	1	; case 1
  6490  00604E  A4D8               	btfss	status,2,c
  6491  006050  0012               	return	
  6492  006052  D7F2               	goto	l1992
  6493  006054                     __end_of_UsbDevice_MainTask:
  6494                           	opt stack 0
  6495                           tosu	equ	0xFFF
  6496                           tosh	equ	0xFFE
  6497                           tosl	equ	0xFFD
  6498                           pclath	equ	0xFFA
  6499                           tblptru	equ	0xFF8
  6500                           tblptrh	equ	0xFF7
  6501                           tblptrl	equ	0xFF6
  6502                           tablat	equ	0xFF5
  6503                           prodh	equ	0xFF4
  6504                           prodl	equ	0xFF3
  6505                           intcon	equ	0xFF2
  6506                           intcon2	equ	0xFF1
  6507                           intcon3	equ	0xFF0
  6508                           postinc0	equ	0xFEE
  6509                           plusw0	equ	0xFEB
  6510                           wreg	equ	0xFE8
  6511                           postinc1	equ	0xFE6
  6512                           postdec1	equ	0xFE5
  6513                           fsr1h	equ	0xFE2
  6514                           fsr1l	equ	0xFE1
  6515                           indf2	equ	0xFDF
  6516                           postinc2	equ	0xFDE
  6517                           postdec2	equ	0xFDD
  6518                           plusw2	equ	0xFDB
  6519                           fsr2h	equ	0xFDA
  6520                           fsr2l	equ	0xFD9
  6521                           status	equ	0xFD8
  6522                           
  6523 ;; *************** function _MdmHttp_MainTask *****************
  6524 ;; Defined at:
  6525 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  Options         1    wreg     unsigned char 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  Options         1    0[COMRAM] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      void 
  6532 ;; Registers used:
  6533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;Total ram usage:        0 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:   15
  6546 ;; This function calls:
  6547 ;;		_HttpGetMethod
  6548 ;;		_InitGprsNetwork
  6549 ;; This function is called by:
  6550 ;;		_InitializeTasks
  6551 ;;		_ScheduleTasks
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text21
  6556  0058FC                     __ptext21:
  6557                           	opt stack 0
  6558  0058FC                     _MdmHttp_MainTask:
  6559                           	opt stack 13
  6560                           
  6561                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6562                           
  6563                           ;incstack = 0
  6564  0058FC  D019               	goto	l1288
  6565  0058FE                     
  6566                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6567  0058FE  0E03               	movlw	3
  6568  005900  0100               	movlb	0	; () banked
  6569  005902  19D2               	xorwf	_MdmStatus& (0+255),w,b
  6570  005904  A4D8               	btfss	status,2,c
  6571  005906  0012               	return	
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;mdm_gsm_gprs_http.c: 570: {
  6575                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6576  005908  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6577  00590C  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6578  005910  C1F0  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6579  005914  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6580  005918  0101               	movlb	1	; () banked
  6581  00591A  6FEF               	movwf	_GprsNetworkSts& (0+255),b
  6582                           
  6583                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6584  00591C  0EA2               	movlw	low _HttpGetDataLocal
  6585  00591E  0100               	movlb	0	; () banked
  6586  005920  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6587  005922  0E03               	movlw	high _HttpGetDataLocal
  6588  005924  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6589  005926  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6590  00592A  0101               	movlb	1	; () banked
  6591  00592C  6FEE               	movwf	_HttpGetMethodSts& (0+255),b
  6592                           
  6593                           ; BSR set to: 1
  6594                           ;mdm_gsm_gprs_http.c: 581: }
  6595                           
  6596                           ; BSR set to: 1
  6597                           ;mdm_gsm_gprs_http.c: 580: break;
  6598                           
  6599                           ;mdm_gsm_gprs_http.c: 579: default:
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;mdm_gsm_gprs_http.c: 575: }
  6603                           ;mdm_gsm_gprs_http.c: 576: break;
  6604  00592E  0012               	return	
  6605  005930                     l1288:
  6606                           
  6607                           ; BSR set to: 1
  6608  005930  0100               	movlb	0	; () banked
  6609  005932  51D5               	movf	_SystemState& (0+255),w,b
  6610                           
  6611                           ; Switch size 1, requested type "space"
  6612                           ; Number of cases is 2, Range of values is 0 to 1
  6613                           ; switch strategies available:
  6614                           ; Name         Instructions Cycles
  6615                           ; simple_byte            7     4 (average)
  6616                           ;	Chosen strategy is simple_byte
  6617  005934  0A00               	xorlw	0	; case 0
  6618  005936  B4D8               	btfsc	status,2,c
  6619  005938  0012               	return	
  6620  00593A  0A01               	xorlw	1	; case 1
  6621  00593C  A4D8               	btfss	status,2,c
  6622  00593E  0012               	return	
  6623  005940  D7DE               	goto	l1291
  6624  005942                     __end_of_MdmHttp_MainTask:
  6625                           	opt stack 0
  6626                           tosu	equ	0xFFF
  6627                           tosh	equ	0xFFE
  6628                           tosl	equ	0xFFD
  6629                           pclath	equ	0xFFA
  6630                           tblptru	equ	0xFF8
  6631                           tblptrh	equ	0xFF7
  6632                           tblptrl	equ	0xFF6
  6633                           tablat	equ	0xFF5
  6634                           prodh	equ	0xFF4
  6635                           prodl	equ	0xFF3
  6636                           intcon	equ	0xFF2
  6637                           intcon2	equ	0xFF1
  6638                           intcon3	equ	0xFF0
  6639                           postinc0	equ	0xFEE
  6640                           plusw0	equ	0xFEB
  6641                           wreg	equ	0xFE8
  6642                           postinc1	equ	0xFE6
  6643                           postdec1	equ	0xFE5
  6644                           fsr1h	equ	0xFE2
  6645                           fsr1l	equ	0xFE1
  6646                           indf2	equ	0xFDF
  6647                           postinc2	equ	0xFDE
  6648                           postdec2	equ	0xFDD
  6649                           plusw2	equ	0xFDB
  6650                           fsr2h	equ	0xFDA
  6651                           fsr2l	equ	0xFD9
  6652                           status	equ	0xFD8
  6653                           
  6654 ;; *************** function _Mdm_MainTask *****************
  6655 ;; Defined at:
  6656 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  Options         1    wreg     unsigned char 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  Options         1    0[COMRAM] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6674 ;;Total ram usage:        0 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:   15
  6677 ;; This function calls:
  6678 ;;		_CheckModem
  6679 ;;		_ConfigureModem
  6680 ;;		_GetSmsSm
  6681 ;;		_ModemEvtParser
  6682 ;;		_SendSmsSm
  6683 ;;		_TurnOnModem
  6684 ;;		_UartSetConfig
  6685 ;;		_Uart_InitUartModule
  6686 ;; This function is called by:
  6687 ;;		_InitializeTasks
  6688 ;;		_ScheduleTasks
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text22
  6693  0056E4                     __ptext22:
  6694                           	opt stack 0
  6695  0056E4                     _Mdm_MainTask:
  6696                           	opt stack 13
  6697                           
  6698                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6699                           
  6700                           ;incstack = 0
  6701  0056E4  D01E               	goto	l1107
  6702  0056E6                     
  6703                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6704  0056E6  EC9F  F029         	call	_UartSetConfig	;wreg free
  6705                           
  6706                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6707  0056EA  0E26               	movlw	low _UartConfig
  6708  0056EC  0100               	movlb	0	; () banked
  6709  0056EE  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6710  0056F0  0E03               	movlw	high _UartConfig
  6711  0056F2  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6712  0056F4  0E01               	movlw	1
  6713  0056F6  EC5E  F005         	call	_Uart_InitUartModule
  6714                           
  6715                           ;mdm_gsm_gprs.c: 764: break;
  6716  0056FA  0012               	return	
  6717  0056FC                     
  6718                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6719  0056FC  EC16  F012         	call	_CheckModem	;wreg free
  6720                           
  6721                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6722  005700  042B               	decf	_ComChecCompleted,w,c
  6723  005702  A4D8               	btfss	status,2,c
  6724  005704  D005               	goto	l1111
  6725  005706  0100               	movlb	0	; () banked
  6726  005708  51D2               	movf	_MdmStatus& (0+255),w,b
  6727  00570A  B4D8               	btfsc	status,2,c
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;mdm_gsm_gprs.c: 772: {
  6731                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6732  00570C  ECA1  F02C         	call	_TurnOnModem	;wreg free
  6733  005710                     l1111:
  6734                           
  6735                           ;mdm_gsm_gprs.c: 775: }
  6736                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6737  005710  EC8E  F01C         	call	_ConfigureModem	;wreg free
  6738                           
  6739                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6740  005714  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6741                           
  6742                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6743  005718  EC41  F015         	call	_GetSmsSm	;wreg free
  6744                           
  6745                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6746  00571C  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6747                           
  6748                           ;mdm_gsm_gprs.c: 789: }
  6749                           
  6750                           ;mdm_gsm_gprs.c: 788: break;
  6751                           
  6752                           ;mdm_gsm_gprs.c: 787: default:
  6753                           
  6754                           ;mdm_gsm_gprs.c: 784: break;
  6755  005720  0012               	return	
  6756  005722                     l1107:
  6757  005722  0100               	movlb	0	; () banked
  6758  005724  51D5               	movf	_SystemState& (0+255),w,b
  6759                           
  6760                           ; Switch size 1, requested type "space"
  6761                           ; Number of cases is 2, Range of values is 0 to 1
  6762                           ; switch strategies available:
  6763                           ; Name         Instructions Cycles
  6764                           ; simple_byte            7     4 (average)
  6765                           ;	Chosen strategy is simple_byte
  6766  005726  0A00               	xorlw	0	; case 0
  6767  005728  B4D8               	btfsc	status,2,c
  6768  00572A  D7DD               	goto	l1108
  6769  00572C  0A01               	xorlw	1	; case 1
  6770  00572E  A4D8               	btfss	status,2,c
  6771  005730  0012               	return	
  6772  005732  D7E4               	goto	l1110
  6773  005734                     __end_of_Mdm_MainTask:
  6774                           	opt stack 0
  6775                           tosu	equ	0xFFF
  6776                           tosh	equ	0xFFE
  6777                           tosl	equ	0xFFD
  6778                           pclath	equ	0xFFA
  6779                           tblptru	equ	0xFF8
  6780                           tblptrh	equ	0xFF7
  6781                           tblptrl	equ	0xFF6
  6782                           tablat	equ	0xFF5
  6783                           prodh	equ	0xFF4
  6784                           prodl	equ	0xFF3
  6785                           intcon	equ	0xFF2
  6786                           intcon2	equ	0xFF1
  6787                           intcon3	equ	0xFF0
  6788                           postinc0	equ	0xFEE
  6789                           plusw0	equ	0xFEB
  6790                           wreg	equ	0xFE8
  6791                           postinc1	equ	0xFE6
  6792                           postdec1	equ	0xFE5
  6793                           fsr1h	equ	0xFE2
  6794                           fsr1l	equ	0xFE1
  6795                           indf2	equ	0xFDF
  6796                           postinc2	equ	0xFDE
  6797                           postdec2	equ	0xFDD
  6798                           plusw2	equ	0xFDB
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _I2cSlv_MainTask *****************
  6804 ;; Defined at:
  6805 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  Options         1    wreg     unsigned char 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  Options         1    0[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;Total ram usage:        0 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:   14
  6826 ;; This function calls:
  6827 ;;		_I2cSendMsgSm
  6828 ;;		_I2cSetConfig
  6829 ;;		_I2c_InitI2cModule
  6830 ;;		_OsAlrm_SetOsAlarm
  6831 ;; This function is called by:
  6832 ;;		_InitializeTasks
  6833 ;;		_ScheduleTasks
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text23
  6838  00549E                     __ptext23:
  6839                           	opt stack 0
  6840  00549E                     _I2cSlv_MainTask:
  6841                           	opt stack 14
  6842                           
  6843                           ;i2c_slv.c: 217: switch (SystemState)
  6844                           
  6845                           ;incstack = 0
  6846  00549E  D020               	goto	l1401
  6847  0054A0                     
  6848                           ;i2c_slv.c: 222: I2cSetConfig();
  6849  0054A0  ECB1  F02F         	call	_I2cSetConfig	;wreg free
  6850                           
  6851                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6852  0054A4  0E51               	movlw	low _I2cConfig
  6853  0054A6  0100               	movlb	0	; () banked
  6854  0054A8  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6855  0054AA  0E03               	movlw	high _I2cConfig
  6856  0054AC  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6857  0054AE  ECD7  F027         	call	_I2c_InitI2cModule	;wreg free
  6858                           
  6859                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6860  0054B2  0E00               	movlw	0
  6861  0054B4  0100               	movlb	0	; () banked
  6862  0054B6  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6863  0054B8  0E00               	movlw	0
  6864  0054BA  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6865  0054BC  0E32               	movlw	50
  6866  0054BE  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6867  0054C0  0E00               	movlw	0
  6868  0054C2  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6869  0054C4  0E00               	movlw	0
  6870  0054C6  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6871  0054C8  0E00               	movlw	0
  6872  0054CA  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6873  0054CC  0E24               	movlw	low _I2cDummyTx
  6874  0054CE  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6875  0054D0  0E62               	movlw	high _I2cDummyTx
  6876  0054D2  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6877  0054D4  ECEE  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6878                           
  6879                           ;i2c_slv.c: 227: break;
  6880  0054D8  0012               	return	
  6881  0054DA                     
  6882                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6883  0054DA  EC52  F01F         	call	_I2cSendMsgSm	;wreg free
  6884                           
  6885                           ;i2c_slv.c: 238: }
  6886                           
  6887                           ;i2c_slv.c: 237: break;
  6888                           
  6889                           ;i2c_slv.c: 236: default:
  6890                           
  6891                           ;i2c_slv.c: 233: break;
  6892  0054DE  0012               	return	
  6893  0054E0                     l1401:
  6894  0054E0  0100               	movlb	0	; () banked
  6895  0054E2  51D5               	movf	_SystemState& (0+255),w,b
  6896                           
  6897                           ; Switch size 1, requested type "space"
  6898                           ; Number of cases is 2, Range of values is 0 to 1
  6899                           ; switch strategies available:
  6900                           ; Name         Instructions Cycles
  6901                           ; simple_byte            7     4 (average)
  6902                           ;	Chosen strategy is simple_byte
  6903  0054E4  0A00               	xorlw	0	; case 0
  6904  0054E6  B4D8               	btfsc	status,2,c
  6905  0054E8  D7DB               	goto	l1402
  6906  0054EA  0A01               	xorlw	1	; case 1
  6907  0054EC  A4D8               	btfss	status,2,c
  6908  0054EE  0012               	return	
  6909  0054F0  D7F4               	goto	l1404
  6910  0054F2                     __end_of_I2cSlv_MainTask:
  6911                           	opt stack 0
  6912                           tosu	equ	0xFFF
  6913                           tosh	equ	0xFFE
  6914                           tosl	equ	0xFFD
  6915                           pclath	equ	0xFFA
  6916                           tblptru	equ	0xFF8
  6917                           tblptrh	equ	0xFF7
  6918                           tblptrl	equ	0xFF6
  6919                           tablat	equ	0xFF5
  6920                           prodh	equ	0xFF4
  6921                           prodl	equ	0xFF3
  6922                           intcon	equ	0xFF2
  6923                           intcon2	equ	0xFF1
  6924                           intcon3	equ	0xFF0
  6925                           postinc0	equ	0xFEE
  6926                           plusw0	equ	0xFEB
  6927                           wreg	equ	0xFE8
  6928                           postinc1	equ	0xFE6
  6929                           postdec1	equ	0xFE5
  6930                           fsr1h	equ	0xFE2
  6931                           fsr1l	equ	0xFE1
  6932                           indf2	equ	0xFDF
  6933                           postinc2	equ	0xFDE
  6934                           postdec2	equ	0xFDD
  6935                           plusw2	equ	0xFDB
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8
  6939                           
  6940 ;; *************** function _Mdm_DrvMainFn *****************
  6941 ;; Defined at:
  6942 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  Options         1    wreg     unsigned char 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  Options         1    0[COMRAM] unsigned char 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6960 ;;Total ram usage:        0 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:   13
  6963 ;; This function calls:
  6964 ;;		_MdmCntSm
  6965 ;; This function is called by:
  6966 ;;		_InitializeTasks
  6967 ;;		_ScheduleTasks
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text24
  6972  00642E                     __ptext24:
  6973                           	opt stack 0
  6974  00642E                     _Mdm_DrvMainFn:
  6975                           	opt stack 15
  6976                           
  6977                           ;mdm_drv.c: 307: MdmCntSm();
  6978                           
  6979                           ;incstack = 0
  6980  00642E  ECD0  F021         	call	_MdmCntSm	;wreg free
  6981  006432  0012               	return		;funcret
  6982  006434                     __end_of_Mdm_DrvMainFn:
  6983                           	opt stack 0
  6984                           tosu	equ	0xFFF
  6985                           tosh	equ	0xFFE
  6986                           tosl	equ	0xFFD
  6987                           pclath	equ	0xFFA
  6988                           tblptru	equ	0xFF8
  6989                           tblptrh	equ	0xFF7
  6990                           tblptrl	equ	0xFF6
  6991                           tablat	equ	0xFF5
  6992                           prodh	equ	0xFF4
  6993                           prodl	equ	0xFF3
  6994                           intcon	equ	0xFF2
  6995                           intcon2	equ	0xFF1
  6996                           intcon3	equ	0xFF0
  6997                           postinc0	equ	0xFEE
  6998                           plusw0	equ	0xFEB
  6999                           wreg	equ	0xFE8
  7000                           postinc1	equ	0xFE6
  7001                           postdec1	equ	0xFE5
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           postdec2	equ	0xFDD
  7007                           plusw2	equ	0xFDB
  7008                           fsr2h	equ	0xFDA
  7009                           fsr2l	equ	0xFD9
  7010                           status	equ	0xFD8
  7011                           
  7012 ;; *************** function _Wdg_MainTask *****************
  7013 ;; Defined at:
  7014 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  Options         1    wreg     unsigned char 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  Options         1    0[COMRAM] unsigned char 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  1    wreg      void 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0, cstack
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7032 ;;Total ram usage:        0 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:   12
  7035 ;; This function calls:
  7036 ;;		_Mcu_ClearWdg
  7037 ;;		_Mcu_SetWdgSts
  7038 ;; This function is called by:
  7039 ;;		_InitializeTasks
  7040 ;;		_ScheduleTasks
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text25
  7045  0060C0                     __ptext25:
  7046                           	opt stack 0
  7047  0060C0                     _Wdg_MainTask:
  7048                           	opt stack 16
  7049                           
  7050                           ;wdg.c: 75: switch (SystemState)
  7051                           
  7052                           ;incstack = 0
  7053  0060C0  D007               	goto	l2472
  7054  0060C2                     
  7055                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7056  0060C2  0E01               	movlw	1
  7057  0060C4  ECA0  F031         	call	_Mcu_SetWdgSts
  7058                           
  7059                           ;wdg.c: 81: break;
  7060  0060C8  0012               	return	
  7061  0060CA                     
  7062                           ;wdg.c: 86: Mcu_ClearWdg();
  7063  0060CA  EC1A  F032         	call	_Mcu_ClearWdg	;wreg free
  7064                           
  7065                           ;wdg.c: 92: }
  7066                           
  7067                           ;wdg.c: 91: break;
  7068                           
  7069                           ;wdg.c: 90: default:
  7070                           
  7071                           ;wdg.c: 87: break;
  7072  0060CE  0012               	return	
  7073  0060D0                     l2472:
  7074  0060D0  0100               	movlb	0	; () banked
  7075  0060D2  51D5               	movf	_SystemState& (0+255),w,b
  7076                           
  7077                           ; Switch size 1, requested type "space"
  7078                           ; Number of cases is 2, Range of values is 0 to 1
  7079                           ; switch strategies available:
  7080                           ; Name         Instructions Cycles
  7081                           ; simple_byte            7     4 (average)
  7082                           ;	Chosen strategy is simple_byte
  7083  0060D4  0A00               	xorlw	0	; case 0
  7084  0060D6  B4D8               	btfsc	status,2,c
  7085  0060D8  D7F4               	goto	l2473
  7086  0060DA  0A01               	xorlw	1	; case 1
  7087  0060DC  A4D8               	btfss	status,2,c
  7088  0060DE  0012               	return	
  7089  0060E0  D7F4               	goto	l2475
  7090  0060E2                     __end_of_Wdg_MainTask:
  7091                           	opt stack 0
  7092                           tosu	equ	0xFFF
  7093                           tosh	equ	0xFFE
  7094                           tosl	equ	0xFFD
  7095                           pclath	equ	0xFFA
  7096                           tblptru	equ	0xFF8
  7097                           tblptrh	equ	0xFF7
  7098                           tblptrl	equ	0xFF6
  7099                           tablat	equ	0xFF5
  7100                           prodh	equ	0xFF4
  7101                           prodl	equ	0xFF3
  7102                           intcon	equ	0xFF2
  7103                           intcon2	equ	0xFF1
  7104                           intcon3	equ	0xFF0
  7105                           postinc0	equ	0xFEE
  7106                           plusw0	equ	0xFEB
  7107                           wreg	equ	0xFE8
  7108                           postinc1	equ	0xFE6
  7109                           postdec1	equ	0xFE5
  7110                           fsr1h	equ	0xFE2
  7111                           fsr1l	equ	0xFE1
  7112                           indf2	equ	0xFDF
  7113                           postinc2	equ	0xFDE
  7114                           postdec2	equ	0xFDD
  7115                           plusw2	equ	0xFDB
  7116                           fsr2h	equ	0xFDA
  7117                           fsr2l	equ	0xFD9
  7118                           status	equ	0xFD8
  7119                           
  7120 ;; *************** function _Mcu_SetWdgSts *****************
  7121 ;; Defined at:
  7122 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  WdgSts          1    wreg     unsigned char 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7140 ;;Total ram usage:        1 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:   11
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_Wdg_MainTask
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text26
  7151  006340                     __ptext26:
  7152                           	opt stack 0
  7153  006340                     _Mcu_SetWdgSts:
  7154                           	opt stack 16
  7155                           
  7156                           ;incstack = 0
  7157                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7158  006340  0100               	movlb	0	; () banked
  7159  006342  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7160                           
  7161                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7162  006344  0100               	movlb	0	; () banked
  7163  006346  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7164  006348  D002               	bra	u13555
  7165  00634A  90C0               	bcf	4032,0,c	;volatile
  7166  00634C  D001               	bra	u13556
  7167  00634E                     u13555:
  7168  00634E  80C0               	bsf	4032,0,c	;volatile
  7169  006350                     u13556:
  7170  006350  0012               	return		;funcret
  7171  006352                     __end_of_Mcu_SetWdgSts:
  7172                           	opt stack 0
  7173                           tosu	equ	0xFFF
  7174                           tosh	equ	0xFFE
  7175                           tosl	equ	0xFFD
  7176                           pclath	equ	0xFFA
  7177                           tblptru	equ	0xFF8
  7178                           tblptrh	equ	0xFF7
  7179                           tblptrl	equ	0xFF6
  7180                           tablat	equ	0xFF5
  7181                           prodh	equ	0xFF4
  7182                           prodl	equ	0xFF3
  7183                           intcon	equ	0xFF2
  7184                           intcon2	equ	0xFF1
  7185                           intcon3	equ	0xFF0
  7186                           postinc0	equ	0xFEE
  7187                           plusw0	equ	0xFEB
  7188                           wreg	equ	0xFE8
  7189                           postinc1	equ	0xFE6
  7190                           postdec1	equ	0xFE5
  7191                           fsr1h	equ	0xFE2
  7192                           fsr1l	equ	0xFE1
  7193                           indf2	equ	0xFDF
  7194                           postinc2	equ	0xFDE
  7195                           postdec2	equ	0xFDD
  7196                           plusw2	equ	0xFDB
  7197                           fsr2h	equ	0xFDA
  7198                           fsr2l	equ	0xFD9
  7199                           status	equ	0xFD8
  7200                           
  7201 ;; *************** function _Mcu_ClearWdg *****************
  7202 ;; Defined at:
  7203 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;		None
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		None
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:   11
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_Wdg_MainTask
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text27
  7232  006434                     __ptext27:
  7233                           	opt stack 0
  7234  006434                     _Mcu_ClearWdg:
  7235                           	opt stack 16
  7236                           
  7237                           ;incstack = 0
  7238  006434  0004               	clrwdt		;# 
  7239  006436  0012               	return		;funcret
  7240  006438                     __end_of_Mcu_ClearWdg:
  7241                           	opt stack 0
  7242                           tosu	equ	0xFFF
  7243                           tosh	equ	0xFFE
  7244                           tosl	equ	0xFFD
  7245                           pclath	equ	0xFFA
  7246                           tblptru	equ	0xFF8
  7247                           tblptrh	equ	0xFF7
  7248                           tblptrl	equ	0xFF6
  7249                           tablat	equ	0xFF5
  7250                           prodh	equ	0xFF4
  7251                           prodl	equ	0xFF3
  7252                           intcon	equ	0xFF2
  7253                           intcon2	equ	0xFF1
  7254                           intcon3	equ	0xFF0
  7255                           postinc0	equ	0xFEE
  7256                           plusw0	equ	0xFEB
  7257                           wreg	equ	0xFE8
  7258                           postinc1	equ	0xFE6
  7259                           postdec1	equ	0xFE5
  7260                           fsr1h	equ	0xFE2
  7261                           fsr1l	equ	0xFE1
  7262                           indf2	equ	0xFDF
  7263                           postinc2	equ	0xFDE
  7264                           postdec2	equ	0xFDD
  7265                           plusw2	equ	0xFDB
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function _USBDeviceTasks *****************
  7271 ;; Defined at:
  7272 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;		None
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  i               1   56[BANK0 ] unsigned char 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  1    wreg      void 
  7279 ;; Registers used:
  7280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;Total ram usage:        1 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:   19
  7293 ;; This function calls:
  7294 ;;		_USBCtrlEPAllowStatusStage
  7295 ;;		_USBCtrlEPService
  7296 ;;		_USBDeviceInit
  7297 ;;		_USBIncrement1msInternalTimers
  7298 ;;		_USBStallHandler
  7299 ;;		_USBSuspend
  7300 ;;		_USBWakeFromSuspend
  7301 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7302 ;; This function is called by:
  7303 ;;		_UsbDevice_MainTask
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text28
  7308  001BAA                     __ptext28:
  7309                           	opt stack 0
  7310  001BAA                     _USBDeviceTasks:
  7311                           	opt stack 8
  7312                           
  7313                           ;usb_device.c: 562: }
  7314                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7315                           
  7316                           ; BSR set to: 0
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;usb_device.c: 561: return;
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7323                           
  7324                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7325                           
  7326                           ;usb_device.c: 529: UIE = 0;
  7327                           
  7328                           ;usb_device.c: 524: {
  7329                           ;usb_device.c: 526: UCON = 0;
  7330                           
  7331                           ;usb_device.c: 497: uint8_t i;
  7332                           ;usb_device.c: 523: if (1 != 1)
  7333                           
  7334                           ;incstack = 0
  7335  001BAA  0100               	movlb	0	; () banked
  7336  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7337  001BAE  A4D8               	btfss	status,2,c
  7338  001BB0  D012               	goto	l1612
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;usb_device.c: 585: {
  7342                           ;usb_device.c: 587: UCON = 0;
  7343  001BB2  0E00               	movlw	0
  7344  001BB4  6E65               	movwf	3941,c	;volatile
  7345                           
  7346                           ;usb_device.c: 590: UIE = 0;
  7347  001BB6  0E00               	movlw	0
  7348  001BB8  010F               	movlb	15	; () banked
  7349  001BBA  6F36               	movwf	54,b	;volatile
  7350                           
  7351                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7352  001BBC  0E16               	movlw	22
  7353  001BBE  6F39               	movwf	57,b	;volatile
  7354  001BC0  0E9F               	movlw	159
  7355  001BC2  6F37               	movwf	55,b	;volatile
  7356  001BC4  0E7B               	movlw	123
  7357  001BC6  6F36               	movwf	54,b	;volatile
  7358                           
  7359                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7360  001BC8  D001               	goto	l1613
  7361  001BCA                     l1614:
  7362  001BCA  8665               	bsf	3941,3,c	;volatile
  7363  001BCC                     l1613:
  7364  001BCC  A665               	btfss	3941,3,c	;volatile
  7365  001BCE  D7FD               	goto	l1614
  7366                           
  7367                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7368  001BD0  0E01               	movlw	1
  7369  001BD2  0100               	movlb	0	; () banked
  7370  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7371  001BD6                     l1612:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;usb_device.c: 605: }
  7375                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7376                           
  7377                           ; BSR set to: 0
  7378  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7379  001BD8  B4D8               	btfsc	status,2,c
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;usb_device.c: 609: {
  7383                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7384  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7385  001BDC  D00A               	goto	l1617
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;usb_device.c: 620: {
  7389                           ;usb_device.c: 626: {UIR = 0;};
  7390  001BDE  0E00               	movlw	0
  7391  001BE0  6E62               	movwf	3938,c	;volatile
  7392                           
  7393                           ;usb_device.c: 630: UIE=0;
  7394  001BE2  0E00               	movlw	0
  7395  001BE4  010F               	movlb	15	; () banked
  7396  001BE6  6F36               	movwf	54,b	;volatile
  7397                           
  7398                           ; BSR set to: 15
  7399                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7400  001BE8  8136               	bsf	54,0,b	;volatile
  7401                           
  7402                           ; BSR set to: 15
  7403                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7404  001BEA  8936               	bsf	54,4,b	;volatile
  7405                           
  7406                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7407  001BEC  0E02               	movlw	2
  7408  001BEE  0100               	movlb	0	; () banked
  7409  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7410  001BF2                     l1617:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;usb_device.c: 635: }
  7414                           ;usb_device.c: 636: }
  7415                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7416                           
  7417                           ; BSR set to: 0
  7418                           
  7419                           ; BSR set to: 0
  7420  001BF2  A462               	btfss	3938,2,c	;volatile
  7421  001BF4  D006               	goto	l1618
  7422                           
  7423                           ; BSR set to: 0
  7424  001BF6  010F               	movlb	15	; () banked
  7425  001BF8  A536               	btfss	54,2,b	;volatile
  7426  001BFA  D003               	goto	l1618
  7427                           
  7428                           ; BSR set to: 15
  7429                           ;usb_device.c: 653: {
  7430                           ;usb_device.c: 654: (UIR &= 0xFB);
  7431  001BFC  9462               	bcf	3938,2,c	;volatile
  7432                           
  7433                           ; BSR set to: 15
  7434                           ;usb_device.c: 658: USBWakeFromSuspend();
  7435  001BFE  EC4A  F02E         	call	_USBWakeFromSuspend	;wreg free
  7436  001C02                     l1618:
  7437                           
  7438                           ;usb_device.c: 660: }
  7439                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7440  001C02  A265               	btfss	3941,1,c	;volatile
  7441  001C04  D002               	goto	l1619
  7442                           
  7443                           ;usb_device.c: 666: {
  7444                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7445  001C06  98A1               	bcf	4001,4,c	;volatile
  7446                           
  7447                           ;usb_device.c: 668: return;
  7448  001C08  0012               	return	
  7449  001C0A                     l1619:
  7450                           
  7451                           ;usb_device.c: 669: }
  7452                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7453  001C0A  A062               	btfss	3938,0,c	;volatile
  7454  001C0C  D009               	goto	l1620
  7455  001C0E  010F               	movlb	15	; () banked
  7456  001C10  A136               	btfss	54,0,b	;volatile
  7457  001C12  D006               	goto	l1620
  7458                           
  7459                           ; BSR set to: 15
  7460                           ;usb_device.c: 682: {
  7461                           ;usb_device.c: 683: USBDeviceInit();
  7462  001C14  ECC0  F010         	call	_USBDeviceInit	;wreg free
  7463                           
  7464                           ;usb_device.c: 687: ;
  7465                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7466  001C18  0E04               	movlw	4
  7467  001C1A  0100               	movlb	0	; () banked
  7468  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;usb_device.c: 699: (UIR &= 0xFE);
  7472  001C1E  9062               	bcf	3938,0,c	;volatile
  7473  001C20                     l1620:
  7474                           
  7475                           ;usb_device.c: 700: }
  7476                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7477                           
  7478                           ; BSR set to: 0
  7479  001C20  A862               	btfss	3938,4,c	;volatile
  7480  001C22  D004               	goto	l1621
  7481  001C24  010F               	movlb	15	; () banked
  7482  001C26  B936               	btfsc	54,4,b	;volatile
  7483                           
  7484                           ; BSR set to: 15
  7485                           ;usb_device.c: 706: {
  7486                           ;usb_device.c: 712: USBSuspend();
  7487  001C28  ECF1  F02E         	call	_USBSuspend	;wreg free
  7488  001C2C                     l1621:
  7489                           
  7490                           ;usb_device.c: 714: }
  7491                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7492  001C2C  AC62               	btfss	3938,6,c	;volatile
  7493  001C2E  D01D               	goto	l1625
  7494                           
  7495                           ;usb_device.c: 727: {
  7496                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7497  001C30  010F               	movlb	15	; () banked
  7498  001C32  AD36               	btfss	54,6,b	;volatile
  7499  001C34  D00F               	goto	l1623
  7500                           
  7501                           ; BSR set to: 15
  7502                           ;usb_device.c: 730: {
  7503                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7504  001C36  0E00               	movlw	0
  7505  001C38  0100               	movlb	0	; () banked
  7506  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7507  001C3C  0E73               	movlw	115
  7508  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7509  001C40  0E00               	movlw	0
  7510  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7511  001C44  0E00               	movlw	0
  7512  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7513  001C48  0E00               	movlw	0
  7514  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7515  001C4C  0E01               	movlw	1
  7516  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7517  001C50  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7518  001C54                     l1623:
  7519                           
  7520                           ;usb_device.c: 732: }
  7521                           ;usb_device.c: 733: (UIR &= 0xBF);
  7522  001C54  9C62               	bcf	3938,6,c	;volatile
  7523                           
  7524                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7525  001C56  EC71  F030         	call	_USBIncrement1msInternalTimers	;wreg free
  7526                           
  7527                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7528  001C5A  0100               	movlb	0	; () banked
  7529  001C5C  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7530  001C5E  A4D8               	btfss	status,2,c
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;usb_device.c: 754: {
  7534                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7535  001C60  07CA               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;usb_device.c: 756: }
  7539                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7540                           
  7541                           ; BSR set to: 0
  7542  001C62  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7543  001C64  B4D8               	btfsc	status,2,c
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;usb_device.c: 763: {
  7547                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7548  001C66  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7549  001C6A                     l1625:
  7550                           
  7551                           ;usb_device.c: 765: }
  7552                           ;usb_device.c: 767: }
  7553                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7554  001C6A  AA62               	btfss	3938,5,c	;volatile
  7555  001C6C  D004               	goto	l1626
  7556  001C6E  010F               	movlb	15	; () banked
  7557  001C70  BB36               	btfsc	54,5,b	;volatile
  7558                           
  7559                           ; BSR set to: 15
  7560                           ;usb_device.c: 770: {
  7561                           ;usb_device.c: 771: USBStallHandler();
  7562  001C72  ECC4  F02C         	call	_USBStallHandler	;wreg free
  7563  001C76                     l1626:
  7564                           
  7565                           ;usb_device.c: 772: }
  7566                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7567  001C76  A262               	btfss	3938,1,c	;volatile
  7568  001C78  D013               	goto	l1627
  7569  001C7A  010F               	movlb	15	; () banked
  7570  001C7C  A336               	btfss	54,1,b	;volatile
  7571  001C7E  D010               	goto	l1627
  7572                           
  7573                           ; BSR set to: 15
  7574                           ;usb_device.c: 775: {
  7575                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7576  001C80  0E7F               	movlw	127
  7577  001C82  0100               	movlb	0	; () banked
  7578  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7579  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7580  001C88  0E00               	movlw	0
  7581  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7582  001C8C  0E00               	movlw	0
  7583  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7584  001C90  0E00               	movlw	0
  7585  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7586  001C94  0E01               	movlw	1
  7587  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7588  001C98  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7589                           
  7590                           ;usb_device.c: 777: {UEIR = 0;};
  7591  001C9C  0E00               	movlw	0
  7592  001C9E  6E63               	movwf	3939,c	;volatile
  7593  001CA0                     l1627:
  7594                           
  7595                           ;usb_device.c: 785: }
  7596                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7597  001CA0  0E04               	movlw	4
  7598  001CA2  0100               	movlb	0	; () banked
  7599  001CA4  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7600  001CA6  D002               	goto	l1628
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;usb_device.c: 793: {
  7604                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7605  001CA8  98A1               	bcf	4001,4,c	;volatile
  7606                           
  7607                           ;usb_device.c: 795: return;
  7608  001CAA  0012               	return	
  7609  001CAC                     l1628:
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;usb_device.c: 796: }
  7613                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7614  001CAC  010F               	movlb	15	; () banked
  7615  001CAE  A736               	btfss	54,3,b	;volatile
  7616  001CB0  D03E               	goto	u14540
  7617                           
  7618                           ; BSR set to: 15
  7619                           ;usb_device.c: 802: {
  7620                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7621  001CB2  0E00               	movlw	0
  7622  001CB4  0100               	movlb	0	; () banked
  7623  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7624  001CB8                     l14903:
  7625                           
  7626                           ; BSR set to: 0
  7627  001CB8  0E03               	movlw	3
  7628  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7629  001CBC  D001               	goto	l1630
  7630  001CBE  D037               	goto	u14540
  7631  001CC0                     l1630:
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;usb_device.c: 804: {
  7635                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7636  001CC0  A662               	btfss	3938,3,c	;volatile
  7637  001CC2  D035               	goto	u14540
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;usb_device.c: 806: {
  7641                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7642  001CC4  CF64 F0D6          	movff	3940,_USTATcopy	;volatile
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7646  001CC8  31D6               	rrcf	_USTATcopy& (0+255),w,b
  7647  001CCA  32E8               	rrcf	wreg,f,c
  7648  001CCC  32E8               	rrcf	wreg,f,c
  7649  001CCE  0B0F               	andlw	15
  7650  001CD0  6FCB               	movwf	_endpoint_number& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;usb_device.c: 811: (UIR &= 0xF7);
  7654  001CD2  9662               	bcf	3938,3,c	;volatile
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7658  001CD4  B5D6               	btfsc	_USTATcopy& (0+255),2,b
  7659  001CD6  D007               	goto	l1633
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;usb_device.c: 817: {
  7663                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7664  001CD8  51CB               	movf	_endpoint_number& (0+255),w,b
  7665  001CDA  0D01               	mullw	1
  7666  001CDC  0ECE               	movlw	low _ep_data_out
  7667  001CDE  24F3               	addwf	prodl,w,c
  7668  001CE0  6ED9               	movwf	fsr2l,c
  7669  001CE2  0E02               	movlw	high _ep_data_out
  7670  001CE4  D007               	goto	L3
  7671  001CE6                     l1633:
  7672                           
  7673                           ;usb_device.c: 820: else
  7674                           ;usb_device.c: 821: {
  7675                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7676                           
  7677                           ; BSR set to: 2
  7678  001CE6  0100               	movlb	0	; () banked
  7679  001CE8  51CB               	movf	_endpoint_number& (0+255),w,b
  7680  001CEA  0D01               	mullw	1
  7681  001CEC  0ED1               	movlw	low _ep_data_in
  7682  001CEE  24F3               	addwf	prodl,w,c
  7683  001CF0  6ED9               	movwf	fsr2l,c
  7684  001CF2  0E02               	movlw	high _ep_data_in
  7685  001CF4                     L3:
  7686  001CF4  20F4               	addwfc	prodh,w,c
  7687  001CF6  6EDA               	movwf	fsr2h,c
  7688  001CF8  0102               	movlb	2	; () banked
  7689  001CFA  70DF               	btg	indf2,0,c
  7690                           
  7691                           ; BSR set to: 2
  7692                           ;usb_device.c: 823: }
  7693                           ;usb_device.c: 828: if(endpoint_number == 0)
  7694                           
  7695                           ; BSR set to: 2
  7696  001CFC  0100               	movlb	0	; () banked
  7697  001CFE  51CB               	movf	_endpoint_number& (0+255),w,b
  7698  001D00  A4D8               	btfss	status,2,c
  7699  001D02  D003               	goto	l1635
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;usb_device.c: 829: {
  7703                           ;usb_device.c: 830: USBCtrlEPService();
  7704  001D04  ECED  F024         	call	_USBCtrlEPService	;wreg free
  7705                           
  7706                           ;usb_device.c: 831: }
  7707  001D08  D00F               	goto	l1637
  7708  001D0A                     l1635:
  7709                           
  7710                           ;usb_device.c: 832: else
  7711                           ;usb_device.c: 833: {
  7712                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7713  001D0A  0E00               	movlw	0
  7714  001D0C  0100               	movlb	0	; () banked
  7715  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7716  001D10  0E72               	movlw	114
  7717  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7718  001D14  0ED6               	movlw	low _USTATcopy
  7719  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7720  001D18  0E00               	movlw	high _USTATcopy
  7721  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7722  001D1C  0E00               	movlw	0
  7723  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7724  001D20  0E00               	movlw	0
  7725  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7726  001D24  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7727  001D28                     l1637:
  7728  001D28  0100               	movlb	0	; () banked
  7729  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7730  001D2C  D7C5               	goto	l14903
  7731  001D2E                     u14540:
  7732                           
  7733                           ;usb_device.c: 840: }
  7734                           ;usb_device.c: 841: }
  7735                           ;usb_device.c: 842: }
  7736                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7737                           
  7738                           ; BSR set to: 0
  7739  001D2E  98A1               	bcf	4001,4,c	;volatile
  7740  001D30  0012               	return		;funcret
  7741  001D32                     __end_of_USBDeviceTasks:
  7742                           	opt stack 0
  7743                           tosu	equ	0xFFF
  7744                           tosh	equ	0xFFE
  7745                           tosl	equ	0xFFD
  7746                           pclath	equ	0xFFA
  7747                           tblptru	equ	0xFF8
  7748                           tblptrh	equ	0xFF7
  7749                           tblptrl	equ	0xFF6
  7750                           tablat	equ	0xFF5
  7751                           prodh	equ	0xFF4
  7752                           prodl	equ	0xFF3
  7753                           intcon	equ	0xFF2
  7754                           intcon2	equ	0xFF1
  7755                           intcon3	equ	0xFF0
  7756                           postinc0	equ	0xFEE
  7757                           plusw0	equ	0xFEB
  7758                           wreg	equ	0xFE8
  7759                           postinc1	equ	0xFE6
  7760                           postdec1	equ	0xFE5
  7761                           fsr1h	equ	0xFE2
  7762                           fsr1l	equ	0xFE1
  7763                           indf2	equ	0xFDF
  7764                           postinc2	equ	0xFDE
  7765                           postdec2	equ	0xFDD
  7766                           plusw2	equ	0xFDB
  7767                           fsr2h	equ	0xFDA
  7768                           fsr2l	equ	0xFD9
  7769                           status	equ	0xFD8
  7770                           
  7771 ;; *************** function _USBWakeFromSuspend *****************
  7772 ;; Defined at:
  7773 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;		None
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:   15
  7794 ;; This function calls:
  7795 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7796 ;; This function is called by:
  7797 ;;		_USBDeviceTasks
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text29
  7802  005C94                     __ptext29:
  7803                           	opt stack 0
  7804  005C94                     _USBWakeFromSuspend:
  7805                           	opt stack 11
  7806                           
  7807                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7808                           
  7809                           ;incstack = 0
  7810  005C94  0E00               	movlw	0
  7811  005C96  0101               	movlb	1	; () banked
  7812  005C98  6FE4               	movwf	_USBBusIsSuspended& (0+255),b
  7813                           
  7814                           ; BSR set to: 1
  7815                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7816  005C9A  0E00               	movlw	0
  7817  005C9C  0100               	movlb	0	; () banked
  7818  005C9E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7819  005CA0  0E74               	movlw	116
  7820  005CA2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7821  005CA4  0E00               	movlw	0
  7822  005CA6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7823  005CA8  0E00               	movlw	0
  7824  005CAA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7825  005CAC  0E00               	movlw	0
  7826  005CAE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7827  005CB0  0E00               	movlw	0
  7828  005CB2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7829  005CB4  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7830                           
  7831                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7832  005CB8  9265               	bcf	3941,1,c	;volatile
  7833                           
  7834                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7835  005CBA  010F               	movlb	15	; () banked
  7836  005CBC  9536               	bcf	54,2,b	;volatile
  7837                           
  7838                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7839  005CBE  D001               	goto	l1765
  7840  005CC0                     
  7841                           ;usb_device.c: 2361: {
  7842                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7843                           
  7844                           ; BSR set to: 15
  7845  005CC0  9462               	bcf	3938,2,c	;volatile
  7846  005CC2                     l1765:
  7847  005CC2  B462               	btfsc	3938,2,c	;volatile
  7848  005CC4  D7FD               	goto	l1766
  7849                           
  7850                           ;usb_device.c: 2363: }
  7851                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7852  005CC6  0E00               	movlw	0
  7853  005CC8  0101               	movlb	1	; () banked
  7854  005CCA  6FE2               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7855                           
  7856                           ; BSR set to: 1
  7857  005CCC  0012               	return		;funcret
  7858  005CCE                     __end_of_USBWakeFromSuspend:
  7859                           	opt stack 0
  7860                           tosu	equ	0xFFF
  7861                           tosh	equ	0xFFE
  7862                           tosl	equ	0xFFD
  7863                           pclath	equ	0xFFA
  7864                           tblptru	equ	0xFF8
  7865                           tblptrh	equ	0xFF7
  7866                           tblptrl	equ	0xFF6
  7867                           tablat	equ	0xFF5
  7868                           prodh	equ	0xFF4
  7869                           prodl	equ	0xFF3
  7870                           intcon	equ	0xFF2
  7871                           intcon2	equ	0xFF1
  7872                           intcon3	equ	0xFF0
  7873                           postinc0	equ	0xFEE
  7874                           plusw0	equ	0xFEB
  7875                           wreg	equ	0xFE8
  7876                           postinc1	equ	0xFE6
  7877                           postdec1	equ	0xFE5
  7878                           fsr1h	equ	0xFE2
  7879                           fsr1l	equ	0xFE1
  7880                           indf2	equ	0xFDF
  7881                           postinc2	equ	0xFDE
  7882                           postdec2	equ	0xFDD
  7883                           plusw2	equ	0xFDB
  7884                           fsr2h	equ	0xFDA
  7885                           fsr2l	equ	0xFD9
  7886                           status	equ	0xFD8
  7887                           
  7888 ;; *************** function _USBSuspend *****************
  7889 ;; Defined at:
  7890 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;Total ram usage:        0 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:   15
  7911 ;; This function calls:
  7912 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7913 ;; This function is called by:
  7914 ;;		_USBDeviceTasks
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text30
  7919  005DE2                     __ptext30:
  7920                           	opt stack 0
  7921  005DE2                     _USBSuspend:
  7922                           	opt stack 11
  7923                           
  7924                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7925                           
  7926                           ; BSR set to: 1
  7927                           ;incstack = 0
  7928  005DE2  010F               	movlb	15	; () banked
  7929  005DE4  8536               	bsf	54,2,b	;volatile
  7930                           
  7931                           ; BSR set to: 15
  7932                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7933  005DE6  9862               	bcf	3938,4,c	;volatile
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7937  005DE8  8265               	bsf	3941,1,c	;volatile
  7938                           
  7939                           ; BSR set to: 15
  7940                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7941  005DEA  0E01               	movlw	1
  7942  005DEC  0101               	movlb	1	; () banked
  7943  005DEE  6FE4               	movwf	_USBBusIsSuspended& (0+255),b
  7944                           
  7945                           ; BSR set to: 1
  7946                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7947  005DF0  0E00               	movlw	0
  7948  005DF2  6FE2               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7949                           
  7950                           ; BSR set to: 1
  7951                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7952  005DF4  0E00               	movlw	0
  7953  005DF6  0100               	movlb	0	; () banked
  7954  005DF8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7955  005DFA  0E75               	movlw	117
  7956  005DFC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7957  005DFE  0E00               	movlw	0
  7958  005E00  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7959  005E02  0E00               	movlw	0
  7960  005E04  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7961  005E06  0E00               	movlw	0
  7962  005E08  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7963  005E0A  0E00               	movlw	0
  7964  005E0C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7965  005E0E  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7966  005E12  0012               	return		;funcret
  7967  005E14                     __end_of_USBSuspend:
  7968                           	opt stack 0
  7969                           tosu	equ	0xFFF
  7970                           tosh	equ	0xFFE
  7971                           tosl	equ	0xFFD
  7972                           pclath	equ	0xFFA
  7973                           tblptru	equ	0xFF8
  7974                           tblptrh	equ	0xFF7
  7975                           tblptrl	equ	0xFF6
  7976                           tablat	equ	0xFF5
  7977                           prodh	equ	0xFF4
  7978                           prodl	equ	0xFF3
  7979                           intcon	equ	0xFF2
  7980                           intcon2	equ	0xFF1
  7981                           intcon3	equ	0xFF0
  7982                           postinc0	equ	0xFEE
  7983                           plusw0	equ	0xFEB
  7984                           wreg	equ	0xFE8
  7985                           postinc1	equ	0xFE6
  7986                           postdec1	equ	0xFE5
  7987                           fsr1h	equ	0xFE2
  7988                           fsr1l	equ	0xFE1
  7989                           indf2	equ	0xFDF
  7990                           postinc2	equ	0xFDE
  7991                           postdec2	equ	0xFDD
  7992                           plusw2	equ	0xFDB
  7993                           fsr2h	equ	0xFDA
  7994                           fsr2l	equ	0xFD9
  7995                           status	equ	0xFD8
  7996                           
  7997 ;; *************** function _USBStallHandler *****************
  7998 ;; Defined at:
  7999 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;		None
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1    wreg      void 
  8006 ;; Registers used:
  8007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8016 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8017 ;;Total ram usage:        1 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:   11
  8020 ;; This function calls:
  8021 ;;		Nothing
  8022 ;; This function is called by:
  8023 ;;		_USBDeviceTasks
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text31
  8028  005988                     __ptext31:
  8029                           	opt stack 0
  8030  005988                     _USBStallHandler:
  8031                           	opt stack 15
  8032                           
  8033                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8034                           
  8035                           ;incstack = 0
  8036  005988  010F               	movlb	15	; () banked
  8037  00598A  A126               	btfss	38,0,b	;volatile
  8038  00598C  D01D               	goto	l1757
  8039                           
  8040                           ; BSR set to: 15
  8041                           ;usb_device.c: 2233: {
  8042                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8043  00598E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8044  005992  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8045  005996  0E80               	movlw	128
  8046  005998  18DE               	xorwf	postinc2,w,c
  8047  00599A  A4D8               	btfss	status,2,c
  8048  00599C  D014               	goto	l1758
  8049                           
  8050                           ; BSR set to: 15
  8051  00599E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8052  0059A2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8053  0059A6  0E84               	movlw	132
  8054  0059A8  18DE               	xorwf	postinc2,w,c
  8055  0059AA  A4D8               	btfss	status,2,c
  8056  0059AC  D00C               	goto	l1758
  8057                           
  8058                           ; BSR set to: 15
  8059                           ;usb_device.c: 2236: {
  8060                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8061  0059AE  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8062  0059B2  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8063  0059B6  0E0C               	movlw	12
  8064  0059B8  6EDF               	movwf	indf2,c
  8065                           
  8066                           ; BSR set to: 15
  8067                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8068  0059BA  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8069  0059BE  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8070  0059C2  0E00               	movlw	0
  8071  0059C4  8EDB               	bsf	plusw2,7,c
  8072  0059C6                     l1758:
  8073                           
  8074                           ; BSR set to: 15
  8075                           ;usb_device.c: 2240: }
  8076                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8077                           
  8078                           ; BSR set to: 15
  8079  0059C6  9126               	bcf	38,0,b	;volatile
  8080  0059C8                     l1757:
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;usb_device.c: 2242: }
  8084                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8085  0059C8  9A62               	bcf	3938,5,c	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088  0059CA  0012               	return		;funcret
  8089  0059CC                     __end_of_USBStallHandler:
  8090                           	opt stack 0
  8091                           tosu	equ	0xFFF
  8092                           tosh	equ	0xFFE
  8093                           tosl	equ	0xFFD
  8094                           pclath	equ	0xFFA
  8095                           tblptru	equ	0xFF8
  8096                           tblptrh	equ	0xFF7
  8097                           tblptrl	equ	0xFF6
  8098                           tablat	equ	0xFF5
  8099                           prodh	equ	0xFF4
  8100                           prodl	equ	0xFF3
  8101                           intcon	equ	0xFF2
  8102                           intcon2	equ	0xFF1
  8103                           intcon3	equ	0xFF0
  8104                           postinc0	equ	0xFEE
  8105                           plusw0	equ	0xFEB
  8106                           wreg	equ	0xFE8
  8107                           postinc1	equ	0xFE6
  8108                           postdec1	equ	0xFE5
  8109                           fsr1h	equ	0xFE2
  8110                           fsr1l	equ	0xFE1
  8111                           indf2	equ	0xFDF
  8112                           postinc2	equ	0xFDE
  8113                           postdec2	equ	0xFDD
  8114                           plusw2	equ	0xFDB
  8115                           fsr2h	equ	0xFDA
  8116                           fsr2l	equ	0xFD9
  8117                           status	equ	0xFD8
  8118                           
  8119 ;; *************** function _USBIncrement1msInternalTimers *****************
  8120 ;; Defined at:
  8121 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2, status,0
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:   11
  8142 ;; This function calls:
  8143 ;;		Nothing
  8144 ;; This function is called by:
  8145 ;;		_USBDeviceTasks
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text32
  8150  0060E2                     __ptext32:
  8151                           	opt stack 0
  8152  0060E2                     _USBIncrement1msInternalTimers:
  8153                           	opt stack 15
  8154                           
  8155                           ;usb_device.c: 3050: USB1msTickCount++;
  8156                           
  8157                           ; BSR set to: 15
  8158                           ;incstack = 0
  8159  0060E2  0E01               	movlw	1
  8160  0060E4  0103               	movlb	3	; () banked
  8161  0060E6  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8162  0060E8  0E00               	movlw	0
  8163  0060EA  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8164  0060EC  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8165  0060EE  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8166                           
  8167                           ; BSR set to: 3
  8168                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8169  0060F0  0101               	movlb	1	; () banked
  8170  0060F2  51E4               	movf	_USBBusIsSuspended& (0+255),w,b
  8171  0060F4  A4D8               	btfss	status,2,c
  8172  0060F6  0012               	return	
  8173                           
  8174                           ; BSR set to: 1
  8175                           ;usb_device.c: 3052: {
  8176                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8177  0060F8  2BE2               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8178                           
  8179                           ; BSR set to: 1
  8180                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8181  0060FA  51E2               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8182  0060FC  A4D8               	btfss	status,2,c
  8183  0060FE  0012               	return	
  8184                           
  8185                           ; BSR set to: 1
  8186                           ;usb_device.c: 3056: {
  8187                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8188  006100  69E2               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8189                           
  8190                           ; BSR set to: 1
  8191  006102  0012               	return	
  8192  006104                     __end_of_USBIncrement1msInternalTimers:
  8193                           	opt stack 0
  8194                           tosu	equ	0xFFF
  8195                           tosh	equ	0xFFE
  8196                           tosl	equ	0xFFD
  8197                           pclath	equ	0xFFA
  8198                           tblptru	equ	0xFF8
  8199                           tblptrh	equ	0xFF7
  8200                           tblptrl	equ	0xFF6
  8201                           tablat	equ	0xFF5
  8202                           prodh	equ	0xFF4
  8203                           prodl	equ	0xFF3
  8204                           intcon	equ	0xFF2
  8205                           intcon2	equ	0xFF1
  8206                           intcon3	equ	0xFF0
  8207                           postinc0	equ	0xFEE
  8208                           plusw0	equ	0xFEB
  8209                           wreg	equ	0xFE8
  8210                           postinc1	equ	0xFE6
  8211                           postdec1	equ	0xFE5
  8212                           fsr1h	equ	0xFE2
  8213                           fsr1l	equ	0xFE1
  8214                           indf2	equ	0xFDF
  8215                           postinc2	equ	0xFDE
  8216                           postdec2	equ	0xFDD
  8217                           plusw2	equ	0xFDB
  8218                           fsr2h	equ	0xFDA
  8219                           fsr2l	equ	0xFD9
  8220                           status	equ	0xFD8
  8221                           
  8222 ;; *************** function _USBDeviceInit *****************
  8223 ;; Defined at:
  8224 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;		None
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  i               1   37[BANK0 ] unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8239 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;Total ram usage:        1 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:   12
  8245 ;; This function calls:
  8246 ;;		_memset
  8247 ;; This function is called by:
  8248 ;;		_USBDeviceTasks
  8249 ;;		_UsbDevice_MainTask
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text33
  8254  002180                     __ptext33:
  8255                           	opt stack 0
  8256  002180                     _USBDeviceInit:
  8257                           	opt stack 14
  8258                           
  8259                           ;usb_device.c: 297: uint8_t i;
  8260                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8261                           
  8262                           ; BSR set to: 1
  8263                           ;incstack = 0
  8264  002180  98A0               	bcf	4000,4,c	;volatile
  8265                           
  8266                           ;usb_device.c: 303: ;
  8267                           ;usb_device.c: 306: {UEIR = 0;};
  8268  002182  0E00               	movlw	0
  8269  002184  6E63               	movwf	3939,c	;volatile
  8270                           
  8271                           ;usb_device.c: 309: {UIR = 0;};
  8272  002186  0E00               	movlw	0
  8273  002188  6E62               	movwf	3938,c	;volatile
  8274                           
  8275                           ;usb_device.c: 312: UEP0 = 0;
  8276  00218A  0E00               	movlw	0
  8277  00218C  010F               	movlb	15	; () banked
  8278  00218E  6F26               	movwf	38,b	;volatile
  8279                           
  8280                           ; BSR set to: 15
  8281                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8282  002190  0E27               	movlw	39
  8283  002192  0100               	movlb	0	; () banked
  8284  002194  6F7D               	movwf	memset@p1& (0+255),b
  8285  002196  0E0F               	movlw	15
  8286  002198  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8287  00219A  0E00               	movlw	0
  8288  00219C  6F80               	movwf	(memset@c+1)& (0+255),b
  8289  00219E  0E00               	movlw	0
  8290  0021A0  6F7F               	movwf	memset@c& (0+255),b
  8291  0021A2  0E00               	movlw	0
  8292  0021A4  6F82               	movwf	(memset@n+1)& (0+255),b
  8293  0021A6  0E02               	movlw	2
  8294  0021A8  6F81               	movwf	memset@n& (0+255),b
  8295  0021AA  EC3B  F02F         	call	_memset	;wreg free
  8296                           
  8297                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8298  0021AE  0E16               	movlw	22
  8299  0021B0  010F               	movlb	15	; () banked
  8300  0021B2  6F39               	movwf	57,b	;volatile
  8301                           
  8302                           ; BSR set to: 15
  8303  0021B4  0E9F               	movlw	159
  8304  0021B6  6F37               	movwf	55,b	;volatile
  8305                           
  8306                           ; BSR set to: 15
  8307  0021B8  0E7B               	movlw	123
  8308  0021BA  6F36               	movwf	54,b	;volatile
  8309                           
  8310                           ; BSR set to: 15
  8311                           ;usb_device.c: 319: ;
  8312                           ;usb_device.c: 322: ;
  8313                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8314  0021BC  0E00               	movlw	0
  8315  0021BE  0100               	movlb	0	; () banked
  8316  0021C0  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8317  0021C2                     l13659:
  8318                           
  8319                           ; BSR set to: 0
  8320  0021C2  0E0B               	movlw	11
  8321  0021C4  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8322  0021C6  D001               	goto	l1601
  8323  0021C8  D00E               	goto	u12780
  8324  0021CA                     l1601:
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;usb_device.c: 326: {
  8328                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8329                           
  8330                           ; BSR set to: 0
  8331  0021CA  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8332  0021CC  0D04               	mullw	4
  8333  0021CE  0E00               	movlw	0
  8334  0021D0  24F3               	addwf	prodl,w,c
  8335  0021D2  6ED9               	movwf	fsr2l,c
  8336  0021D4  0E04               	movlw	4
  8337  0021D6  20F4               	addwfc	prodh,w,c
  8338  0021D8  6EDA               	movwf	fsr2h,c
  8339  0021DA  6ADE               	clrf	postinc2,c
  8340  0021DC  6ADE               	clrf	postinc2,c
  8341  0021DE  6ADE               	clrf	postinc2,c
  8342  0021E0  6ADD               	clrf	postdec2,c
  8343                           
  8344                           ; BSR set to: 0
  8345  0021E2  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8346  0021E4  D7EE               	goto	l13659
  8347  0021E6                     u12780:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;usb_device.c: 328: }
  8351                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8352  0021E6  8C65               	bsf	3941,6,c	;volatile
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;usb_device.c: 334: UADDR = 0x00;
  8356  0021E8  0E00               	movlw	0
  8357  0021EA  010F               	movlb	15	; () banked
  8358  0021EC  6F38               	movwf	56,b	;volatile
  8359                           
  8360                           ; BSR set to: 15
  8361                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8362  0021EE  9865               	bcf	3941,4,c	;volatile
  8363                           
  8364                           ; BSR set to: 15
  8365                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8366  0021F0  9C65               	bcf	3941,6,c	;volatile
  8367  0021F2                     
  8368                           ;usb_device.c: 344: {
  8369                           ;usb_device.c: 345: (UIR &= 0xF7);
  8370                           
  8371                           ; BSR set to: 15
  8372  0021F2  9662               	bcf	3938,3,c	;volatile
  8373                           
  8374                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8375  0021F4  0E00               	movlw	0
  8376  0021F6  0100               	movlb	0	; () banked
  8377  0021F8  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8381  0021FA  0E00               	movlw	0
  8382  0021FC  0101               	movlb	1	; () banked
  8383  0021FE  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8384                           
  8385                           ; BSR set to: 1
  8386                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8387  002200  0E00               	movlw	0
  8388  002202  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8389  002204  0E00               	movlw	0
  8390  002206  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8391                           
  8392                           ; BSR set to: 1
  8393                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8394  002208  B662               	btfsc	3938,3,c	;volatile
  8395  00220A  D7F3               	goto	l1603
  8396                           
  8397                           ; BSR set to: 1
  8398                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8399                           
  8400                           ; BSR set to: 1
  8401  00220C  0E01               	movlw	1
  8402  00220E  0100               	movlb	0	; () banked
  8403  002210  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8404                           
  8405                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8406  002212  0E01               	movlw	1
  8407  002214  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8408                           
  8409                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8410  002216  0E00               	movlw	0
  8411  002218  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8412                           
  8413                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8414  00221A  0E00               	movlw	0
  8415  00221C  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8416                           
  8417                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8418  00221E  0E00               	movlw	0
  8419  002220  0101               	movlb	1	; () banked
  8420  002222  6FE4               	movwf	_USBBusIsSuspended& (0+255),b
  8421                           
  8422                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8423  002224  0E00               	movlw	0
  8424  002226  0100               	movlb	0	; () banked
  8425  002228  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8426  00222A                     l13687:
  8427                           
  8428                           ; BSR set to: 0
  8429  00222A  0E02               	movlw	2
  8430  00222C  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8431  00222E  D001               	goto	l1605
  8432  002230  D02E               	goto	u12810
  8433  002232                     l1605:
  8434                           
  8435                           ; BSR set to: 0
  8436                           ;usb_device.c: 364: {
  8437                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8438                           
  8439                           ; BSR set to: 0
  8440  002232  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8441  002234  0D02               	mullw	2
  8442  002236  0EB6               	movlw	low _pBDTEntryIn
  8443  002238  24F3               	addwf	prodl,w,c
  8444  00223A  6ED9               	movwf	fsr2l,c
  8445  00223C  0E00               	movlw	high _pBDTEntryIn
  8446  00223E  20F4               	addwfc	prodh,w,c
  8447  002240  6EDA               	movwf	fsr2h,c
  8448  002242  0E00               	movlw	0
  8449  002244  6EDE               	movwf	postinc2,c
  8450  002246  0E00               	movlw	0
  8451  002248  6EDD               	movwf	postdec2,c
  8452                           
  8453                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8454  00224A  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8455  00224C  0D02               	mullw	2
  8456  00224E  0E0E               	movlw	low _pBDTEntryOut
  8457  002250  24F3               	addwf	prodl,w,c
  8458  002252  6ED9               	movwf	fsr2l,c
  8459  002254  0E03               	movlw	high _pBDTEntryOut
  8460  002256  20F4               	addwfc	prodh,w,c
  8461  002258  6EDA               	movwf	fsr2h,c
  8462  00225A  0E00               	movlw	0
  8463  00225C  6EDE               	movwf	postinc2,c
  8464  00225E  0E00               	movlw	0
  8465  002260  6EDD               	movwf	postdec2,c
  8466                           
  8467                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8468  002262  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8469  002264  0D01               	mullw	1
  8470  002266  0ED1               	movlw	low _ep_data_in
  8471  002268  24F3               	addwf	prodl,w,c
  8472  00226A  6ED9               	movwf	fsr2l,c
  8473  00226C  0E02               	movlw	high _ep_data_in
  8474  00226E  20F4               	addwfc	prodh,w,c
  8475  002270  6EDA               	movwf	fsr2h,c
  8476  002272  0E00               	movlw	0
  8477  002274  6EDF               	movwf	indf2,c
  8478                           
  8479                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8480  002276  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8481  002278  0D01               	mullw	1
  8482  00227A  0ECE               	movlw	low _ep_data_out
  8483  00227C  24F3               	addwf	prodl,w,c
  8484  00227E  6ED9               	movwf	fsr2l,c
  8485  002280  0E02               	movlw	high _ep_data_out
  8486  002282  20F4               	addwfc	prodh,w,c
  8487  002284  6EDA               	movwf	fsr2h,c
  8488  002286  0E00               	movlw	0
  8489  002288  6EDF               	movwf	indf2,c
  8490                           
  8491                           ; BSR set to: 0
  8492  00228A  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8493  00228C  D7CE               	goto	l13687
  8494  00228E                     u12810:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;usb_device.c: 369: }
  8498                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8499                           
  8500                           ; BSR set to: 0
  8501  00228E  0E08               	movlw	8
  8502  002290  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8503  002292  0E04               	movlw	4
  8504  002294  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8508  002296  0E16               	movlw	22
  8509  002298  010F               	movlb	15	; () banked
  8510  00229A  6F26               	movwf	38,b	;volatile
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8514  00229C  0E04               	movlw	4
  8515  00229E  0104               	movlb	4	; () banked
  8516  0022A0  6F03               	movwf	3,b	;volatile
  8517  0022A2  0E30               	movlw	48
  8518  0022A4  6F02               	movwf	2,b	;volatile
  8519                           
  8520                           ; BSR set to: 4
  8521                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8522  0022A6  0E08               	movlw	8
  8523  0022A8  6F01               	movwf	1,b	;volatile
  8524                           
  8525                           ; BSR set to: 4
  8526                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8527  0022AA  0E04               	movlw	4
  8528  0022AC  6F00               	movwf	0,b	;volatile
  8529                           
  8530                           ; BSR set to: 4
  8531                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8532  0022AE  8F00               	bsf	0,7,b	;volatile
  8533                           
  8534                           ; BSR set to: 4
  8535                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8536  0022B0  0E00               	movlw	0
  8537  0022B2  0100               	movlb	0	; () banked
  8538  0022B4  6FD7               	movwf	_USBActiveConfiguration& (0+255),b
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;usb_device.c: 384: USB1msTickCount = 0;
  8542  0022B6  0E00               	movlw	0
  8543  0022B8  0103               	movlb	3	; () banked
  8544  0022BA  6F18               	movwf	_USB1msTickCount& (0+255),b
  8545  0022BC  0E00               	movlw	0
  8546  0022BE  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8547  0022C0  0E00               	movlw	0
  8548  0022C2  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8549  0022C4  0E00               	movlw	0
  8550  0022C6  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8551                           
  8552                           ; BSR set to: 3
  8553                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8554  0022C8  0E00               	movlw	0
  8555  0022CA  0101               	movlb	1	; () banked
  8556  0022CC  6FE2               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8557                           
  8558                           ; BSR set to: 1
  8559                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8560  0022CE  0E00               	movlw	0
  8561  0022D0  0100               	movlb	0	; () banked
  8562  0022D2  6FCE               	movwf	_USBDeviceState& (0+255),b
  8563                           
  8564                           ; BSR set to: 0
  8565  0022D4  0012               	return		;funcret
  8566  0022D6                     __end_of_USBDeviceInit:
  8567                           	opt stack 0
  8568                           tosu	equ	0xFFF
  8569                           tosh	equ	0xFFE
  8570                           tosl	equ	0xFFD
  8571                           pclath	equ	0xFFA
  8572                           tblptru	equ	0xFF8
  8573                           tblptrh	equ	0xFF7
  8574                           tblptrl	equ	0xFF6
  8575                           tablat	equ	0xFF5
  8576                           prodh	equ	0xFF4
  8577                           prodl	equ	0xFF3
  8578                           intcon	equ	0xFF2
  8579                           intcon2	equ	0xFF1
  8580                           intcon3	equ	0xFF0
  8581                           postinc0	equ	0xFEE
  8582                           plusw0	equ	0xFEB
  8583                           wreg	equ	0xFE8
  8584                           postinc1	equ	0xFE6
  8585                           postdec1	equ	0xFE5
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           plusw2	equ	0xFDB
  8592                           fsr2h	equ	0xFDA
  8593                           fsr2l	equ	0xFD9
  8594                           status	equ	0xFD8
  8595                           
  8596 ;; *************** function _USBCtrlEPService *****************
  8597 ;; Defined at:
  8598 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;Total ram usage:        1 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:   18
  8619 ;; This function calls:
  8620 ;;		_USBCtrlTrfInHandler
  8621 ;;		_USBCtrlTrfOutHandler
  8622 ;;		_USBCtrlTrfSetupHandler
  8623 ;;		_memcpy
  8624 ;; This function is called by:
  8625 ;;		_USBDeviceTasks
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text34
  8630  0049DA                     __ptext34:
  8631                           	opt stack 0
  8632  0049DA                     _USBCtrlEPService:
  8633                           	opt stack 8
  8634                           
  8635                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;incstack = 0
  8639  0049DA  0E2D               	movlw	45
  8640  0049DC  0100               	movlb	0	; () banked
  8641  0049DE  6FCA               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8645  0049E0  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8646  0049E4  0EFD               	movlw	253
  8647  0049E6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8648  0049E8  A4D8               	btfss	status,2,c
  8649  0049EA  D038               	goto	l1771
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;usb_device.c: 2401: {
  8653                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8654  0049EC  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8655  0049F0  90D8               	bcf	status,0,c
  8656  0049F2  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8657  0049F4  0E3F               	movlw	63
  8658  0049F6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8659  0049F8  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8660  0049FA  0D04               	mullw	4
  8661  0049FC  0E00               	movlw	0
  8662  0049FE  24F3               	addwf	prodl,w,c
  8663  004A00  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8664  004A02  0E04               	movlw	4
  8665  004A04  20F4               	addwfc	prodh,w,c
  8666  004A06  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8670  004A08  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8671  004A0C  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8675  004A10  0E04               	movlw	4
  8676  004A12  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8680  004A14  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8681  004A18  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8682  004A1C  30DF               	rrcf	223,w,c
  8683  004A1E  32E8               	rrcf	wreg,f,c
  8684  004A20  0B0F               	andlw	15
  8685  004A22  0A0D               	xorlw	13
  8686  004A24  A4D8               	btfss	status,2,c
  8687  004A26  D017               	goto	l1772
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;usb_device.c: 2418: {
  8691                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8692  004A28  0E30               	movlw	48
  8693  004A2A  6F7D               	movwf	memcpy@d1& (0+255),b
  8694  004A2C  0E04               	movlw	4
  8695  004A2E  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8696  004A30  EE20 F002          	lfsr	2,2
  8697  004A34  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8698  004A36  26D9               	addwf	fsr2l,f,c
  8699  004A38  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8700  004A3A  22DA               	addwfc	fsr2h,f,c
  8701  004A3C  CFDE F07F          	movff	postinc2,memcpy@s1
  8702  004A40  CFDD F080          	movff	postdec2,memcpy@s1+1
  8703  004A44  0E00               	movlw	0
  8704  004A46  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8705  004A48  0E08               	movlw	8
  8706  004A4A  6F81               	movwf	memcpy@n& (0+255),b
  8707  004A4C  EC36  F02C         	call	_memcpy	;wreg free
  8708                           
  8709                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8710  004A50  EC58  F026         	call	_USBCtrlTrfSetupHandler	;wreg free
  8711                           
  8712                           ;usb_device.c: 2427: }
  8713  004A54  0012               	return	
  8714  004A56                     l1772:
  8715                           
  8716                           ;usb_device.c: 2428: else
  8717                           ;usb_device.c: 2429: {
  8718                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8719  004A56  EC7C  F028         	call	_USBCtrlTrfOutHandler	;wreg free
  8720                           
  8721                           ;usb_device.c: 2432: }
  8722                           ;usb_device.c: 2433: }
  8723  004A5A  0012               	return	
  8724  004A5C                     l1771:
  8725                           
  8726                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8727  004A5C  0100               	movlb	0	; () banked
  8728  004A5E  51D6               	movf	_USTATcopy& (0+255),w,b
  8729  004A60  0BFD               	andlw	253
  8730  004A62  0A04               	xorlw	4
  8731  004A64  A4D8               	btfss	status,2,c
  8732  004A66  0012               	return	
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;usb_device.c: 2435: {
  8736                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8737  004A68  ECB4  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8738  004A6C  0012               	return	
  8739  004A6E                     __end_of_USBCtrlEPService:
  8740                           	opt stack 0
  8741                           tosu	equ	0xFFF
  8742                           tosh	equ	0xFFE
  8743                           tosl	equ	0xFFD
  8744                           pclath	equ	0xFFA
  8745                           tblptru	equ	0xFF8
  8746                           tblptrh	equ	0xFF7
  8747                           tblptrl	equ	0xFF6
  8748                           tablat	equ	0xFF5
  8749                           prodh	equ	0xFF4
  8750                           prodl	equ	0xFF3
  8751                           intcon	equ	0xFF2
  8752                           intcon2	equ	0xFF1
  8753                           intcon3	equ	0xFF0
  8754                           postinc0	equ	0xFEE
  8755                           plusw0	equ	0xFEB
  8756                           wreg	equ	0xFE8
  8757                           postinc1	equ	0xFE6
  8758                           postdec1	equ	0xFE5
  8759                           fsr1h	equ	0xFE2
  8760                           fsr1l	equ	0xFE1
  8761                           indf2	equ	0xFDF
  8762                           postinc2	equ	0xFDE
  8763                           postdec2	equ	0xFDD
  8764                           plusw2	equ	0xFDB
  8765                           fsr2h	equ	0xFDA
  8766                           fsr2l	equ	0xFD9
  8767                           status	equ	0xFD8
  8768                           
  8769 ;; *************** function _memcpy *****************
  8770 ;; Defined at:
  8771 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  d1              2   29[BANK0 ] PTR void 
  8774 ;;		 -> SetupPkt(8), 
  8775 ;;  s1              2   31[BANK0 ] PTR const void 
  8776 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8777 ;;  n               2   33[BANK0 ] unsigned int 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8780 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8781 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8782 ;;		 -> SetupPkt(8), 
  8783 ;;  tmp             1   35[BANK0 ] unsigned char 
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  2   29[BANK0 ] PTR void 
  8786 ;; Registers used:
  8787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8793 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8797 ;;Total ram usage:       11 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:   11
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_USBCtrlEPService
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text35
  8808  00586C                     __ptext35:
  8809                           	opt stack 0
  8810  00586C                     _memcpy:
  8811                           	opt stack 14
  8812                           
  8813                           ;incstack = 0
  8814  00586C  C07F  F086         	movff	memcpy@s1,memcpy@s
  8815  005870  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8816  005874  C07D  F084         	movff	memcpy@d1,memcpy@d
  8817  005878  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8818  00587C  D011               	goto	l3154
  8819  00587E                     l12923:
  8820  00587E  C086  FFD9         	movff	memcpy@s,fsr2l
  8821  005882  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8822  005886  50DF               	movf	indf2,w,c
  8823  005888  0100               	movlb	0	; () banked
  8824  00588A  6F83               	movwf	memcpy@tmp& (0+255),b
  8825                           
  8826                           ; BSR set to: 0
  8827  00588C  4B86               	infsnz	memcpy@s& (0+255),f,b
  8828  00588E  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8829                           
  8830                           ; BSR set to: 0
  8831  005890  C084  FFD9         	movff	memcpy@d,fsr2l
  8832  005894  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8833  005898  C083  FFDF         	movff	memcpy@tmp,indf2
  8834                           
  8835                           ; BSR set to: 0
  8836  00589C  4B84               	infsnz	memcpy@d& (0+255),f,b
  8837  00589E  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8838  0058A0                     l3154:
  8839                           
  8840                           ; BSR set to: 0
  8841  0058A0  0100               	movlb	0	; () banked
  8842  0058A2  0781               	decf	memcpy@n& (0+255),f,b
  8843  0058A4  A0D8               	btfss	status,0,c
  8844  0058A6  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8845  0058A8  2981               	incf	memcpy@n& (0+255),w,b
  8846  0058AA  E1E9               	bnz	l12923
  8847  0058AC  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8848  0058AE  B4D8               	btfsc	status,2,c
  8849  0058B0  0012               	return	
  8850  0058B2  D7E5               	goto	l3155
  8851  0058B4                     __end_of_memcpy:
  8852                           	opt stack 0
  8853                           tosu	equ	0xFFF
  8854                           tosh	equ	0xFFE
  8855                           tosl	equ	0xFFD
  8856                           pclath	equ	0xFFA
  8857                           tblptru	equ	0xFF8
  8858                           tblptrh	equ	0xFF7
  8859                           tblptrl	equ	0xFF6
  8860                           tablat	equ	0xFF5
  8861                           prodh	equ	0xFF4
  8862                           prodl	equ	0xFF3
  8863                           intcon	equ	0xFF2
  8864                           intcon2	equ	0xFF1
  8865                           intcon3	equ	0xFF0
  8866                           postinc0	equ	0xFEE
  8867                           plusw0	equ	0xFEB
  8868                           wreg	equ	0xFE8
  8869                           postinc1	equ	0xFE6
  8870                           postdec1	equ	0xFE5
  8871                           fsr1h	equ	0xFE2
  8872                           fsr1l	equ	0xFE1
  8873                           indf2	equ	0xFDF
  8874                           postinc2	equ	0xFDE
  8875                           postdec2	equ	0xFDD
  8876                           plusw2	equ	0xFDB
  8877                           fsr2h	equ	0xFDA
  8878                           fsr2l	equ	0xFD9
  8879                           status	equ	0xFD8
  8880                           
  8881 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8882 ;; Defined at:
  8883 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;		None
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8901 ;;Total ram usage:        0 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:   17
  8904 ;; This function calls:
  8905 ;;		_USBCheckStdRequest
  8906 ;;		_USBCtrlEPServiceComplete
  8907 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8908 ;; This function is called by:
  8909 ;;		_USBCtrlEPService
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text36
  8914  004CB0                     __ptext36:
  8915                           	opt stack 0
  8916  004CB0                     _USBCtrlTrfSetupHandler:
  8917                           	opt stack 8
  8918                           
  8919                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;incstack = 0
  8923  004CB0  0E00               	movlw	0
  8924  004CB2  0100               	movlb	0	; () banked
  8925  004CB4  6FCD               	movwf	_shortPacketStatus& (0+255),b
  8926                           
  8927                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8928  004CB6  0E00               	movlw	0
  8929  004CB8  6FC9               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8930                           
  8931                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8932  004CBA  0E00               	movlw	0
  8933  004CBC  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8934                           
  8935                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8936  004CBE  0E00               	movlw	0
  8937  004CC0  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8938                           
  8939                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8940  004CC2  0E00               	movlw	0
  8941  004CC4  0101               	movlb	1	; () banked
  8942  004CC6  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8943                           
  8944                           ;usb_device.c: 2493: controlTransferState = 0;
  8945  004CC8  0E00               	movlw	0
  8946  004CCA  0100               	movlb	0	; () banked
  8947  004CCC  6FCC               	movwf	_controlTransferState& (0+255),b
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8951  004CCE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8952  004CD2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8953  004CD6  0E7F               	movlw	127
  8954  004CD8  16DF               	andwf	indf2,f,c
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8958  004CDA  0E04               	movlw	4
  8959  004CDC  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8963  004CDE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8964  004CE2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8965  004CE6  0E7F               	movlw	127
  8966  004CE8  16DF               	andwf	indf2,f,c
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8970  004CEA  0E04               	movlw	4
  8971  004CEC  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8975  004CEE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8976  004CF2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8977  004CF6  0E7F               	movlw	127
  8978  004CF8  16DF               	andwf	indf2,f,c
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8982  004CFA  0E00               	movlw	0
  8983  004CFC  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8987  004CFE  0E00               	movlw	0
  8988  004D00  6FB5               	movwf	(_inPipes+5)& (0+255),b
  8989  004D02  0E00               	movlw	0
  8990  004D04  6FB4               	movwf	(_inPipes+4)& (0+255),b
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8994  004D06  0E00               	movlw	0
  8995  004D08  0101               	movlb	1	; () banked
  8996  004D0A  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8997                           
  8998                           ; BSR set to: 1
  8999                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9000  004D0C  0E00               	movlw	0
  9001  004D0E  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9002  004D10  0E00               	movlw	0
  9003  004D12  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9004                           
  9005                           ; BSR set to: 1
  9006                           ;usb_device.c: 2517: USBCheckStdRequest();
  9007  004D14  EC74  F01A         	call	_USBCheckStdRequest	;wreg free
  9008                           
  9009                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9010  004D18  0E00               	movlw	0
  9011  004D1A  0100               	movlb	0	; () banked
  9012  004D1C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9013  004D1E  0E03               	movlw	3
  9014  004D20  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9015  004D22  0E00               	movlw	0
  9016  004D24  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9017  004D26  0E00               	movlw	0
  9018  004D28  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9019  004D2A  0E00               	movlw	0
  9020  004D2C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9021  004D2E  0E00               	movlw	0
  9022  004D30  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9023  004D32  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9024                           
  9025                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9026  004D36  EC23  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9027  004D3A  0012               	return		;funcret
  9028  004D3C                     __end_of_USBCtrlTrfSetupHandler:
  9029                           	opt stack 0
  9030                           tosu	equ	0xFFF
  9031                           tosh	equ	0xFFE
  9032                           tosl	equ	0xFFD
  9033                           pclath	equ	0xFFA
  9034                           tblptru	equ	0xFF8
  9035                           tblptrh	equ	0xFF7
  9036                           tblptrl	equ	0xFF6
  9037                           tablat	equ	0xFF5
  9038                           prodh	equ	0xFF4
  9039                           prodl	equ	0xFF3
  9040                           intcon	equ	0xFF2
  9041                           intcon2	equ	0xFF1
  9042                           intcon3	equ	0xFF0
  9043                           postinc0	equ	0xFEE
  9044                           plusw0	equ	0xFEB
  9045                           wreg	equ	0xFE8
  9046                           postinc1	equ	0xFE6
  9047                           postdec1	equ	0xFE5
  9048                           fsr1h	equ	0xFE2
  9049                           fsr1l	equ	0xFE1
  9050                           indf2	equ	0xFDF
  9051                           postinc2	equ	0xFDE
  9052                           postdec2	equ	0xFDD
  9053                           plusw2	equ	0xFDB
  9054                           fsr2h	equ	0xFDA
  9055                           fsr2l	equ	0xFD9
  9056                           status	equ	0xFD8
  9057                           
  9058 ;; *************** function _USBCtrlEPServiceComplete *****************
  9059 ;; Defined at:
  9060 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;		None
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;		None
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      void 
  9067 ;; Registers used:
  9068 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9078 ;;Total ram usage:        0 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:   13
  9081 ;; This function calls:
  9082 ;;		_USBCtrlEPAllowDataStage
  9083 ;;		_USBCtrlEPAllowStatusStage
  9084 ;; This function is called by:
  9085 ;;		_USBCtrlTrfSetupHandler
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text37
  9090  003046                     __ptext37:
  9091                           	opt stack 0
  9092  003046                     _USBCtrlEPServiceComplete:
  9093                           	opt stack 11
  9094                           
  9095                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9096                           
  9097                           ;incstack = 0
  9098  003046  9865               	bcf	3941,4,c	;volatile
  9099                           
  9100                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9101  003048  0100               	movlb	0	; () banked
  9102  00304A  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9103  00304C  D03C               	goto	l1681
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;usb_device.c: 1647: {
  9107                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9108  00304E  0101               	movlb	1	; () banked
  9109  003050  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9110  003052  D00D               	goto	l1682
  9111                           
  9112                           ; BSR set to: 1
  9113                           ;usb_device.c: 1649: {
  9114                           ;usb_device.c: 1650: controlTransferState = 2;
  9115  003054  0E02               	movlw	2
  9116  003056  0100               	movlb	0	; () banked
  9117  003058  6FCC               	movwf	_controlTransferState& (0+255),b
  9118                           
  9119                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9120  00305A  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9121  00305C  B4D8               	btfsc	status,2,c
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;usb_device.c: 1662: {
  9125                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9126  00305E  ECBC  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9127                           
  9128                           ;usb_device.c: 1664: }
  9129                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9130  003062  0E00               	movlw	0
  9131  003064  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9132                           
  9133                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9134  003066  0E00               	movlw	0
  9135  003068  0100               	movlb	0	; () banked
  9136  00306A  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9137                           
  9138                           ;usb_device.c: 1670: }
  9139  00306C  0012               	return	
  9140  00306E                     l1682:
  9141                           
  9142                           ;usb_device.c: 1671: else
  9143                           ;usb_device.c: 1672: {
  9144                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9145                           
  9146                           ; BSR set to: 0
  9147  00306E  0100               	movlb	0	; () banked
  9148  003070  EE20 F001          	lfsr	2,1
  9149  003074  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9150  003076  26D9               	addwf	fsr2l,f,c
  9151  003078  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9152  00307A  22DA               	addwfc	fsr2h,f,c
  9153  00307C  0E08               	movlw	8
  9154  00307E  6EDF               	movwf	indf2,c
  9155                           
  9156                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9157  003080  EE20 F002          	lfsr	2,2
  9158  003084  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9159  003086  26D9               	addwf	fsr2l,f,c
  9160  003088  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9161  00308A  22DA               	addwfc	fsr2h,f,c
  9162  00308C  0E30               	movlw	48
  9163  00308E  6EDE               	movwf	postinc2,c
  9164  003090  0E04               	movlw	4
  9165  003092  6EDD               	movwf	postdec2,c
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9169  003094  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9170  003098  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9171  00309C  0E0C               	movlw	12
  9172  00309E  6EDF               	movwf	indf2,c
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9176  0030A0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9177  0030A4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9178  0030A8  0E00               	movlw	0
  9179  0030AA  8EDB               	bsf	plusw2,7,c
  9180                           
  9181                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9182  0030AC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9183  0030B0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9184  0030B4  0E04               	movlw	4
  9185  0030B6  6EDF               	movwf	indf2,c
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9189  0030B8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9190  0030BC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9191  0030C0  0E00               	movlw	0
  9192  0030C2  8EDB               	bsf	plusw2,7,c
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;usb_device.c: 1683: }
  9196                           ;usb_device.c: 1684: }
  9197  0030C4  0012               	return	
  9198  0030C6                     l1681:
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;usb_device.c: 1685: else
  9202                           ;usb_device.c: 1686: {
  9203                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9204  0030C6  0104               	movlb	4	; () banked
  9205  0030C8  AF30               	btfss	48,7,b	;volatile
  9206  0030CA  D012               	goto	l1686
  9207                           
  9208                           ; BSR set to: 4
  9209                           ;usb_device.c: 1688: {
  9210                           ;usb_device.c: 1689: controlTransferState = 1;
  9211  0030CC  0E01               	movlw	1
  9212  0030CE  0100               	movlb	0	; () banked
  9213  0030D0  6FCC               	movwf	_controlTransferState& (0+255),b
  9214                           
  9215                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9216  0030D2  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9217  0030D4  B4D8               	btfsc	status,2,c
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;usb_device.c: 1704: {
  9221                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9222  0030D6  ECBC  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9223                           
  9224                           ;usb_device.c: 1706: }
  9225                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9226  0030DA  0E00               	movlw	0
  9227  0030DC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9228                           
  9229                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9230  0030DE  0E00               	movlw	0
  9231  0030E0  0100               	movlb	0	; () banked
  9232  0030E2  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9236  0030E4  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9237  0030E6  A4D8               	btfss	status,2,c
  9238  0030E8  0012               	return	
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;usb_device.c: 1731: {
  9242                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9243  0030EA  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9244                           
  9245                           ;usb_device.c: 1733: }
  9246                           ;usb_device.c: 1734: }
  9247  0030EE  0012               	return	
  9248  0030F0                     l1686:
  9249                           
  9250                           ;usb_device.c: 1735: else
  9251                           ;usb_device.c: 1736: {
  9252                           ;usb_device.c: 1747: controlTransferState = 2;
  9253  0030F0  0E02               	movlw	2
  9254  0030F2  0100               	movlb	0	; () banked
  9255  0030F4  6FCC               	movwf	_controlTransferState& (0+255),b
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9259  0030F6  EE20 F001          	lfsr	2,1
  9260  0030FA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9261  0030FC  26D9               	addwf	fsr2l,f,c
  9262  0030FE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9263  003100  22DA               	addwfc	fsr2h,f,c
  9264  003102  0E08               	movlw	8
  9265  003104  6EDF               	movwf	indf2,c
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9269  003106  EE20 F002          	lfsr	2,2
  9270  00310A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9271  00310C  26D9               	addwf	fsr2l,f,c
  9272  00310E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9273  003110  22DA               	addwfc	fsr2h,f,c
  9274  003112  0E30               	movlw	48
  9275  003114  6EDE               	movwf	postinc2,c
  9276  003116  0E04               	movlw	4
  9277  003118  6EDD               	movwf	postdec2,c
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9281  00311A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9282  00311E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9283  003122  0E04               	movlw	4
  9284  003124  6EDF               	movwf	indf2,c
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9288  003126  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9289  00312A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9290  00312E  0E00               	movlw	0
  9291  003130  8EDB               	bsf	plusw2,7,c
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9295  003132  0E00               	movlw	0
  9296  003134  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9300  003136  0E00               	movlw	0
  9301  003138  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9305  00313A  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9306  00313C  A4D8               	btfss	status,2,c
  9307  00313E  0012               	return	
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;usb_device.c: 1759: {
  9311                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9312  003140  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9313  003144  0012               	return	
  9314  003146                     __end_of_USBCtrlEPServiceComplete:
  9315                           	opt stack 0
  9316                           tosu	equ	0xFFF
  9317                           tosh	equ	0xFFE
  9318                           tosl	equ	0xFFD
  9319                           pclath	equ	0xFFA
  9320                           tblptru	equ	0xFF8
  9321                           tblptrh	equ	0xFF7
  9322                           tblptrl	equ	0xFF6
  9323                           tablat	equ	0xFF5
  9324                           prodh	equ	0xFF4
  9325                           prodl	equ	0xFF3
  9326                           intcon	equ	0xFF2
  9327                           intcon2	equ	0xFF1
  9328                           intcon3	equ	0xFF0
  9329                           postinc0	equ	0xFEE
  9330                           plusw0	equ	0xFEB
  9331                           wreg	equ	0xFE8
  9332                           postinc1	equ	0xFE6
  9333                           postdec1	equ	0xFE5
  9334                           fsr1h	equ	0xFE2
  9335                           fsr1l	equ	0xFE1
  9336                           indf2	equ	0xFDF
  9337                           postinc2	equ	0xFDE
  9338                           postdec2	equ	0xFDD
  9339                           plusw2	equ	0xFDB
  9340                           fsr2h	equ	0xFDA
  9341                           fsr2l	equ	0xFD9
  9342                           status	equ	0xFD8
  9343                           
  9344 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9345 ;; Defined at:
  9346 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;		None
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9364 ;;Total ram usage:        0 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:   12
  9367 ;; This function calls:
  9368 ;;		_USBCtrlTrfTxService
  9369 ;; This function is called by:
  9370 ;;		_USBCtrlEPServiceComplete
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text38
  9375  004778                     __ptext38:
  9376                           	opt stack 0
  9377  004778                     _USBCtrlEPAllowDataStage:
  9378                           	opt stack 11
  9379                           
  9380                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9381                           
  9382                           ;incstack = 0
  9383  004778  0E00               	movlw	0
  9384  00477A  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9385                           
  9386                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9387  00477C  0E00               	movlw	0
  9388  00477E  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9389                           
  9390                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9391  004780  0E02               	movlw	2
  9392  004782  0100               	movlb	0	; () banked
  9393  004784  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9394  004786  A4D8               	btfss	status,2,c
  9395  004788  D01F               	goto	l1670
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;usb_device.c: 1512: {
  9399                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9400  00478A  EE20 F001          	lfsr	2,1
  9401  00478E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9402  004790  26D9               	addwf	fsr2l,f,c
  9403  004792  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9404  004794  22DA               	addwfc	fsr2h,f,c
  9405  004796  0E08               	movlw	8
  9406  004798  6EDF               	movwf	indf2,c
  9407                           
  9408                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9409  00479A  EE20 F002          	lfsr	2,2
  9410  00479E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9411  0047A0  26D9               	addwf	fsr2l,f,c
  9412  0047A2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9413  0047A4  22DA               	addwfc	fsr2h,f,c
  9414  0047A6  0E38               	movlw	56
  9415  0047A8  6EDE               	movwf	postinc2,c
  9416  0047AA  0E04               	movlw	4
  9417  0047AC  6EDD               	movwf	postdec2,c
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9421  0047AE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9422  0047B2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9423  0047B6  0E48               	movlw	72
  9424  0047B8  6EDF               	movwf	indf2,c
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9428  0047BA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9429  0047BE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9430  0047C2  0E00               	movlw	0
  9431  0047C4  8EDB               	bsf	plusw2,7,c
  9432                           
  9433                           ;usb_device.c: 1518: }
  9434  0047C6  0012               	return	
  9435  0047C8                     l1670:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;usb_device.c: 1519: else
  9439                           ;usb_device.c: 1520: {
  9440                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9441                           
  9442                           ; BSR set to: 0
  9443  0047C8  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9444  0047CA  0104               	movlb	4	; () banked
  9445  0047CC  5D36               	subwf	54,w,b	;volatile
  9446  0047CE  0100               	movlb	0	; () banked
  9447  0047D0  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9448  0047D2  0104               	movlb	4	; () banked
  9449  0047D4  5937               	subwfb	55,w,b	;volatile
  9450  0047D6  B0D8               	btfsc	status,0,c
  9451  0047D8  D004               	goto	l1672
  9452                           
  9453                           ; BSR set to: 4
  9454                           ;usb_device.c: 1524: {
  9455                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9456  0047DA  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9457  0047DE  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9458  0047E2                     l1672:
  9459                           
  9460                           ; BSR set to: 4
  9461                           ;usb_device.c: 1526: }
  9462                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9463                           
  9464                           ; BSR set to: 4
  9465  0047E2  ECE6  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9466                           
  9467                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9468  0047E6  0100               	movlb	0	; () banked
  9469  0047E8  EE20 F002          	lfsr	2,2
  9470  0047EC  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9471  0047EE  26D9               	addwf	fsr2l,f,c
  9472  0047F0  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9473  0047F2  22DA               	addwfc	fsr2h,f,c
  9474  0047F4  0E38               	movlw	56
  9475  0047F6  6EDE               	movwf	postinc2,c
  9476  0047F8  0E04               	movlw	4
  9477  0047FA  6EDD               	movwf	postdec2,c
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9481  0047FC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9482  004800  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9483  004804  0E48               	movlw	72
  9484  004806  6EDF               	movwf	indf2,c
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9488  004808  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9489  00480C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9490  004810  0E00               	movlw	0
  9491  004812  8EDB               	bsf	plusw2,7,c
  9492  004814  0012               	return	
  9493  004816                     __end_of_USBCtrlEPAllowDataStage:
  9494                           	opt stack 0
  9495                           tosu	equ	0xFFF
  9496                           tosh	equ	0xFFE
  9497                           tosl	equ	0xFFD
  9498                           pclath	equ	0xFFA
  9499                           tblptru	equ	0xFF8
  9500                           tblptrh	equ	0xFF7
  9501                           tblptrl	equ	0xFF6
  9502                           tablat	equ	0xFF5
  9503                           prodh	equ	0xFF4
  9504                           prodl	equ	0xFF3
  9505                           intcon	equ	0xFF2
  9506                           intcon2	equ	0xFF1
  9507                           intcon3	equ	0xFF0
  9508                           postinc0	equ	0xFEE
  9509                           plusw0	equ	0xFEB
  9510                           wreg	equ	0xFE8
  9511                           postinc1	equ	0xFE6
  9512                           postdec1	equ	0xFE5
  9513                           fsr1h	equ	0xFE2
  9514                           fsr1l	equ	0xFE1
  9515                           indf2	equ	0xFDF
  9516                           postinc2	equ	0xFDE
  9517                           postdec2	equ	0xFDD
  9518                           plusw2	equ	0xFDB
  9519                           fsr2h	equ	0xFDA
  9520                           fsr2l	equ	0xFD9
  9521                           status	equ	0xFD8
  9522                           
  9523 ;; *************** function _USBCheckStdRequest *****************
  9524 ;; Defined at:
  9525 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;		None
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;		None
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9543 ;;Total ram usage:        0 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:   16
  9546 ;; This function calls:
  9547 ;;		_USBStdFeatureReqHandler
  9548 ;;		_USBStdGetDscHandler
  9549 ;;		_USBStdGetStatusHandler
  9550 ;;		_USBStdSetCfgHandler
  9551 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9552 ;; This function is called by:
  9553 ;;		_USBCtrlTrfSetupHandler
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           	psect	text39
  9558  0034E8                     __ptext39:
  9559                           	opt stack 0
  9560  0034E8                     _USBCheckStdRequest:
  9561                           	opt stack 8
  9562                           
  9563                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;incstack = 0
  9567  0034E8  0104               	movlb	4	; () banked
  9568  0034EA  3930               	swapf	48,w,b	;volatile
  9569  0034EC  32E8               	rrcf	wreg,f,c
  9570  0034EE  0B03               	andlw	3
  9571  0034F0  0900               	iorlw	0
  9572  0034F2  A4D8               	btfss	status,2,c
  9573  0034F4  0012               	return	
  9574  0034F6  D048               	goto	l1805
  9575  0034F8                     l1806:
  9576                           
  9577                           ; BSR set to: 4
  9578                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9579  0034F8  0100               	movlb	0	; () banked
  9580  0034FA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9584  0034FC  0E08               	movlw	8
  9585  0034FE  6FCE               	movwf	_USBDeviceState& (0+255),b
  9586                           
  9587                           ;usb_device.c: 2713: break;
  9588  003500  0012               	return	
  9589  003502                     
  9590                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9591                           
  9592                           ; BSR set to: 0
  9593  003502  ECDA  F015         	call	_USBStdGetDscHandler	;wreg free
  9594                           
  9595                           ;usb_device.c: 2716: break;
  9596  003506  0012               	return	
  9597  003508                     
  9598                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9599  003508  EC8E  F019         	call	_USBStdSetCfgHandler	;wreg free
  9600                           
  9601                           ;usb_device.c: 2719: break;
  9602  00350C  0012               	return	
  9603  00350E                     
  9604                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9605  00350E  0ED7               	movlw	low _USBActiveConfiguration
  9606  003510  0100               	movlb	0	; () banked
  9607  003512  6FB0               	movwf	_inPipes& (0+255),b
  9608  003514  0E00               	movlw	high _USBActiveConfiguration
  9609  003516  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9613  003518  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9617  00351A  0E01               	movlw	1
  9618  00351C  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9619                           
  9620                           ; BSR set to: 0
  9621                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9622  00351E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9623                           
  9624                           ;usb_device.c: 2725: break;
  9625  003520  0012               	return	
  9626  003522                     
  9627                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9628                           
  9629                           ; BSR set to: 0
  9630  003522  EC74  F020         	call	_USBStdGetStatusHandler	;wreg free
  9631                           
  9632                           ;usb_device.c: 2728: break;
  9633  003526  0012               	return	
  9634  003528                     
  9635                           ;usb_device.c: 2730: case 3:
  9636                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9637  003528  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9638                           
  9639                           ;usb_device.c: 2732: break;
  9640  00352C  0012               	return	
  9641  00352E                     
  9642                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9643  00352E  0104               	movlb	4	; () banked
  9644  003530  5134               	movf	52,w,b	;volatile
  9645  003532  0D01               	mullw	1
  9646  003534  0EF1               	movlw	low _USBAlternateInterface
  9647  003536  24F3               	addwf	prodl,w,c
  9648  003538  0100               	movlb	0	; () banked
  9649  00353A  6FB0               	movwf	_inPipes& (0+255),b
  9650  00353C  0E02               	movlw	high _USBAlternateInterface
  9651  00353E  20F4               	addwfc	prodh,w,c
  9652  003540  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9656  003542  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9660  003544  0E01               	movlw	1
  9661  003546  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9665  003548  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9666                           
  9667                           ;usb_device.c: 2738: break;
  9668  00354A  0012               	return	
  9669  00354C                     l1815:
  9670                           
  9671                           ; BSR set to: 4
  9672                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9673  00354C  0100               	movlb	0	; () banked
  9674  00354E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9678  003550  0104               	movlb	4	; () banked
  9679  003552  5134               	movf	52,w,b	;volatile
  9680  003554  0D01               	mullw	1
  9681  003556  0EF1               	movlw	low _USBAlternateInterface
  9682  003558  24F3               	addwf	prodl,w,c
  9683  00355A  6ED9               	movwf	fsr2l,c
  9684  00355C  0E02               	movlw	high _USBAlternateInterface
  9685  00355E  20F4               	addwfc	prodh,w,c
  9686  003560  6EDA               	movwf	fsr2h,c
  9687  003562  C432 FFDF          	movff	1074,indf2	;volatile
  9688                           
  9689                           ;usb_device.c: 2742: break;
  9690  003566  0012               	return	
  9691  003568                     
  9692                           ; BSR set to: 4
  9693                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9694                           
  9695                           ; BSR set to: 4
  9696  003568  0E00               	movlw	0
  9697  00356A  0100               	movlb	0	; () banked
  9698  00356C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9699  00356E  0E02               	movlw	2
  9700  003570  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9701  003572  0E00               	movlw	0
  9702  003574  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9703  003576  0E00               	movlw	0
  9704  003578  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9705  00357A  0E00               	movlw	0
  9706  00357C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9707  00357E  0E00               	movlw	0
  9708  003580  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9709  003582  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9710                           
  9711                           ;usb_device.c: 2749: }
  9712                           
  9713                           ;usb_device.c: 2748: break;
  9714                           
  9715                           ;usb_device.c: 2747: default:
  9716                           
  9717                           ;usb_device.c: 2746: case 12:
  9718                           
  9719                           ;usb_device.c: 2745: break;
  9720  003586  0012               	return	
  9721  003588                     l1805:
  9722  003588  0104               	movlb	4	; () banked
  9723  00358A  5131               	movf	49,w,b	;volatile
  9724                           
  9725                           ; Switch size 1, requested type "space"
  9726                           ; Number of cases is 11, Range of values is 0 to 12
  9727                           ; switch strategies available:
  9728                           ; Name         Instructions Cycles
  9729                           ; simple_byte           34    18 (average)
  9730                           ;	Chosen strategy is simple_byte
  9731  00358C  0A00               	xorlw	0	; case 0
  9732  00358E  B4D8               	btfsc	status,2,c
  9733  003590  D7C8               	goto	l1811
  9734  003592  0A01               	xorlw	1	; case 1
  9735  003594  B4D8               	btfsc	status,2,c
  9736  003596  D7C8               	goto	l1812
  9737  003598  0A02               	xorlw	2	; case 3
  9738  00359A  B4D8               	btfsc	status,2,c
  9739  00359C  D7C5               	goto	l1812
  9740  00359E  0A06               	xorlw	6	; case 5
  9741  0035A0  B4D8               	btfsc	status,2,c
  9742  0035A2  D7AA               	goto	l1806
  9743  0035A4  0A03               	xorlw	3	; case 6
  9744  0035A6  B4D8               	btfsc	status,2,c
  9745  0035A8  D7AC               	goto	l1808
  9746  0035AA  0A01               	xorlw	1	; case 7
  9747  0035AC  B4D8               	btfsc	status,2,c
  9748  0035AE  D7DC               	goto	l1816
  9749  0035B0  0A0F               	xorlw	15	; case 8
  9750  0035B2  B4D8               	btfsc	status,2,c
  9751  0035B4  D7AC               	goto	l1810
  9752  0035B6  0A01               	xorlw	1	; case 9
  9753  0035B8  B4D8               	btfsc	status,2,c
  9754  0035BA  D7A6               	goto	l1809
  9755  0035BC  0A03               	xorlw	3	; case 10
  9756  0035BE  B4D8               	btfsc	status,2,c
  9757  0035C0  D7B6               	goto	l1814
  9758  0035C2  0A01               	xorlw	1	; case 11
  9759  0035C4  B4D8               	btfsc	status,2,c
  9760  0035C6  D7C2               	goto	l1815
  9761  0035C8  0A07               	xorlw	7	; case 12
  9762  0035CA  0012               	return	
  9763  0035CC                     __end_of_USBCheckStdRequest:
  9764                           	opt stack 0
  9765                           tosu	equ	0xFFF
  9766                           tosh	equ	0xFFE
  9767                           tosl	equ	0xFFD
  9768                           pclath	equ	0xFFA
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           intcon2	equ	0xFF1
  9777                           intcon3	equ	0xFF0
  9778                           postinc0	equ	0xFEE
  9779                           plusw0	equ	0xFEB
  9780                           wreg	equ	0xFE8
  9781                           postinc1	equ	0xFE6
  9782                           postdec1	equ	0xFE5
  9783                           fsr1h	equ	0xFE2
  9784                           fsr1l	equ	0xFE1
  9785                           indf2	equ	0xFDF
  9786                           postinc2	equ	0xFDE
  9787                           postdec2	equ	0xFDD
  9788                           plusw2	equ	0xFDB
  9789                           fsr2h	equ	0xFDA
  9790                           fsr2l	equ	0xFD9
  9791                           status	equ	0xFD8
  9792                           
  9793 ;; *************** function _USBStdSetCfgHandler *****************
  9794 ;; Defined at:
  9795 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;		None
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  i               1   49[BANK0 ] unsigned char 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9812 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9813 ;;Total ram usage:        1 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:   15
  9816 ;; This function calls:
  9817 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9818 ;;		_memset
  9819 ;; This function is called by:
  9820 ;;		_USBCheckStdRequest
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text40
  9825  00331C                     __ptext40:
  9826                           	opt stack 0
  9827  00331C                     _USBStdSetCfgHandler:
  9828                           	opt stack 8
  9829                           
  9830                           ;usb_device.c: 1988: uint8_t i;
  9831                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9832                           
  9833                           ;incstack = 0
  9834  00331C  0100               	movlb	0	; () banked
  9835  00331E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9839  003320  0E27               	movlw	39
  9840  003322  6F7D               	movwf	memset@p1& (0+255),b
  9841  003324  0E0F               	movlw	15
  9842  003326  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9843  003328  0E00               	movlw	0
  9844  00332A  6F80               	movwf	(memset@c+1)& (0+255),b
  9845  00332C  0E00               	movlw	0
  9846  00332E  6F7F               	movwf	memset@c& (0+255),b
  9847  003330  0E00               	movlw	0
  9848  003332  6F82               	movwf	(memset@n+1)& (0+255),b
  9849  003334  0E02               	movlw	2
  9850  003336  6F81               	movwf	memset@n& (0+255),b
  9851  003338  EC3B  F02F         	call	_memset	;wreg free
  9852                           
  9853                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9854  00333C  0E00               	movlw	0
  9855  00333E  0100               	movlb	0	; () banked
  9856  003340  6F7D               	movwf	memset@p1& (0+255),b
  9857  003342  0E04               	movlw	4
  9858  003344  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9859  003346  0E00               	movlw	0
  9860  003348  6F80               	movwf	(memset@c+1)& (0+255),b
  9861  00334A  0E00               	movlw	0
  9862  00334C  6F7F               	movwf	memset@c& (0+255),b
  9863  00334E  0E00               	movlw	0
  9864  003350  6F82               	movwf	(memset@n+1)& (0+255),b
  9865  003352  0E30               	movlw	48
  9866  003354  6F81               	movwf	memset@n& (0+255),b
  9867  003356  EC3B  F02F         	call	_memset	;wreg free
  9868                           
  9869                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9870  00335A  8C65               	bsf	3941,6,c	;volatile
  9871                           
  9872                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9873  00335C  0E00               	movlw	0
  9874  00335E  0100               	movlb	0	; () banked
  9875  003360  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9876  003362                     l12289:
  9877                           
  9878                           ; BSR set to: 0
  9879  003362  0E02               	movlw	2
  9880  003364  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9881  003366  D001               	goto	l1722
  9882  003368  D016               	goto	u10900
  9883  00336A                     l1722:
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;usb_device.c: 2006: {
  9887                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9888                           
  9889                           ; BSR set to: 0
  9890  00336A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9891  00336C  0D01               	mullw	1
  9892  00336E  0ED1               	movlw	low _ep_data_in
  9893  003370  24F3               	addwf	prodl,w,c
  9894  003372  6ED9               	movwf	fsr2l,c
  9895  003374  0E02               	movlw	high _ep_data_in
  9896  003376  20F4               	addwfc	prodh,w,c
  9897  003378  6EDA               	movwf	fsr2h,c
  9898  00337A  0E00               	movlw	0
  9899  00337C  6EDF               	movwf	indf2,c
  9900                           
  9901                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9902  00337E  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9903  003380  0D01               	mullw	1
  9904  003382  0ECE               	movlw	low _ep_data_out
  9905  003384  24F3               	addwf	prodl,w,c
  9906  003386  6ED9               	movwf	fsr2l,c
  9907  003388  0E02               	movlw	high _ep_data_out
  9908  00338A  20F4               	addwfc	prodh,w,c
  9909  00338C  6EDA               	movwf	fsr2h,c
  9910  00338E  0E00               	movlw	0
  9911  003390  6EDF               	movwf	indf2,c
  9912                           
  9913                           ; BSR set to: 0
  9914  003392  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9915  003394  D7E6               	goto	l12289
  9916  003396                     u10900:
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;usb_device.c: 2009: }
  9920                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9921                           
  9922                           ; BSR set to: 0
  9923  003396  0EF1               	movlw	low _USBAlternateInterface
  9924  003398  6F7D               	movwf	memset@p1& (0+255),b
  9925  00339A  0E02               	movlw	high _USBAlternateInterface
  9926  00339C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9927  00339E  0E00               	movlw	0
  9928  0033A0  6F80               	movwf	(memset@c+1)& (0+255),b
  9929  0033A2  0E00               	movlw	0
  9930  0033A4  6F7F               	movwf	memset@c& (0+255),b
  9931  0033A6  0E00               	movlw	0
  9932  0033A8  6F82               	movwf	(memset@n+1)& (0+255),b
  9933  0033AA  0E02               	movlw	2
  9934  0033AC  6F81               	movwf	memset@n& (0+255),b
  9935  0033AE  EC3B  F02F         	call	_memset	;wreg free
  9936                           
  9937                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9938  0033B2  9C65               	bcf	3941,6,c	;volatile
  9939                           
  9940                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9941  0033B4  0E08               	movlw	8
  9942  0033B6  0100               	movlb	0	; () banked
  9943  0033B8  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9944  0033BA  0E04               	movlw	4
  9945  0033BC  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9949  0033BE  0E00               	movlw	0
  9950  0033C0  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9951  0033C2  0E04               	movlw	4
  9952  0033C4  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9956  0033C6  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9957  0033CA  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9961  0033CE  C432 F0D7          	movff	1074,_USBActiveConfiguration	;volatile
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9965  0033D2  51D7               	movf	_USBActiveConfiguration& (0+255),w,b
  9966  0033D4  A4D8               	btfss	status,2,c
  9967  0033D6  D003               	goto	l1724
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;usb_device.c: 2028: {
  9971                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9972  0033D8  0E10               	movlw	16
  9973  0033DA  6FCE               	movwf	_USBDeviceState& (0+255),b
  9974                           
  9975                           ;usb_device.c: 2031: }
  9976  0033DC  0012               	return	
  9977  0033DE                     l1724:
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;usb_device.c: 2032: else
  9981                           ;usb_device.c: 2033: {
  9982                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9983                           
  9984                           ; BSR set to: 0
  9985  0033DE  0E00               	movlw	0
  9986  0033E0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9987  0033E2  0E01               	movlw	1
  9988  0033E4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9989  0033E6  0ED7               	movlw	low _USBActiveConfiguration
  9990  0033E8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9991  0033EA  0E00               	movlw	high _USBActiveConfiguration
  9992  0033EC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9993  0033EE  0E00               	movlw	0
  9994  0033F0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9995  0033F2  0E01               	movlw	1
  9996  0033F4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9997  0033F6  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9998                           
  9999                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10000  0033FA  0E20               	movlw	32
 10001  0033FC  0100               	movlb	0	; () banked
 10002  0033FE  6FCE               	movwf	_USBDeviceState& (0+255),b
 10003  003400  0012               	return	
 10004  003402                     __end_of_USBStdSetCfgHandler:
 10005                           	opt stack 0
 10006                           tosu	equ	0xFFF
 10007                           tosh	equ	0xFFE
 10008                           tosl	equ	0xFFD
 10009                           pclath	equ	0xFFA
 10010                           tblptru	equ	0xFF8
 10011                           tblptrh	equ	0xFF7
 10012                           tblptrl	equ	0xFF6
 10013                           tablat	equ	0xFF5
 10014                           prodh	equ	0xFF4
 10015                           prodl	equ	0xFF3
 10016                           intcon	equ	0xFF2
 10017                           intcon2	equ	0xFF1
 10018                           intcon3	equ	0xFF0
 10019                           postinc0	equ	0xFEE
 10020                           plusw0	equ	0xFEB
 10021                           wreg	equ	0xFE8
 10022                           postinc1	equ	0xFE6
 10023                           postdec1	equ	0xFE5
 10024                           fsr1h	equ	0xFE2
 10025                           fsr1l	equ	0xFE1
 10026                           indf2	equ	0xFDF
 10027                           postinc2	equ	0xFDE
 10028                           postdec2	equ	0xFDD
 10029                           plusw2	equ	0xFDB
 10030                           fsr2h	equ	0xFDA
 10031                           fsr2l	equ	0xFD9
 10032                           status	equ	0xFD8
 10033                           
 10034 ;; *************** function _USBStdGetStatusHandler *****************
 10035 ;; Defined at:
 10036 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;		None
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10041 ;;		 -> NULL(0), BDT(48), 
 10042 ;; Return value:  Size  Location     Type
 10043 ;;                  1    wreg      void 
 10044 ;; Registers used:
 10045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10052 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10054 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10055 ;;Total ram usage:        3 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; Hardware stack levels required when called:   11
 10058 ;; This function calls:
 10059 ;;		Nothing
 10060 ;; This function is called by:
 10061 ;;		_USBCheckStdRequest
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text41
 10066  0040E8                     __ptext41:
 10067                           	opt stack 0
 10068  0040E8                     _USBStdGetStatusHandler:
 10069                           	opt stack 12
 10070                           
 10071                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;incstack = 0
 10075  0040E8  0E00               	movlw	0
 10076  0040EA  0104               	movlb	4	; () banked
 10077  0040EC  6F38               	movwf	56,b	;volatile
 10078                           
 10079                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10080  0040EE  0E00               	movlw	0
 10081  0040F0  6F39               	movwf	57,b	;volatile
 10082                           
 10083                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10084  0040F2  D03D               	goto	l1743
 10085  0040F4                     l1744:
 10086                           
 10087                           ; BSR set to: 4
 10088                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10089  0040F4  0100               	movlb	0	; () banked
 10090  0040F6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10091                           
 10092                           ;usb_device.c: 2163: }
 10093                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10094                           
 10095                           ; BSR set to: 4
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;usb_device.c: 2161: {
 10099                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10100                           
 10101                           ;usb_device.c: 2160: if(0 == 1)
 10102  0040F8  0101               	movlb	1	; () banked
 10103  0040FA  05E5               	decf	_RemoteWakeup& (0+255),w,b
 10104  0040FC  A4D8               	btfss	status,2,c
 10105  0040FE  D042               	goto	l1747
 10106                           
 10107                           ; BSR set to: 1
 10108                           ;usb_device.c: 2166: {
 10109                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10110  004100  0104               	movlb	4	; () banked
 10111  004102  8338               	bsf	56,1,b	;volatile
 10112                           
 10113                           ; BSR set to: 4
 10114                           ;usb_device.c: 2168: }
 10115                           ;usb_device.c: 2169: break;
 10116  004104  D03F               	goto	l1747
 10117  004106                     l1748:
 10118                           
 10119                           ; BSR set to: 4
 10120                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10121  004106  0100               	movlb	0	; () banked
 10122  004108  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10123                           
 10124                           ;usb_device.c: 2172: break;
 10125  00410A  D03C               	goto	l1747
 10126  00410C                     l1749:
 10127                           
 10128                           ; BSR set to: 4
 10129                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10130  00410C  0100               	movlb	0	; () banked
 10131  00410E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10132                           
 10133                           ;usb_device.c: 2178: {
 10134                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10135                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10136  004110  0104               	movlb	4	; () banked
 10137  004112  BF34               	btfsc	52,7,b	;volatile
 10138  004114  D00B               	goto	l1750
 10139                           
 10140                           ; BSR set to: 4
 10141                           ;usb_device.c: 2182: {
 10142                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10143  004116  5134               	movf	52,w,b	;volatile
 10144  004118  0B0F               	andlw	15
 10145  00411A  0100               	movlb	0	; () banked
 10146  00411C  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10147  00411E  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10148  004120  0D02               	mullw	2
 10149  004122  0E0E               	movlw	low _pBDTEntryOut
 10150  004124  24F3               	addwf	prodl,w,c
 10151  004126  6ED9               	movwf	fsr2l,c
 10152  004128  0E03               	movlw	high _pBDTEntryOut
 10153  00412A  D00B               	goto	L4
 10154  00412C                     l1750:
 10155                           
 10156                           ;usb_device.c: 2185: else
 10157                           ;usb_device.c: 2186: {
 10158                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10159                           
 10160                           ; BSR set to: 0
 10161  00412C  0104               	movlb	4	; () banked
 10162  00412E  5134               	movf	52,w,b	;volatile
 10163  004130  0B0F               	andlw	15
 10164  004132  0100               	movlb	0	; () banked
 10165  004134  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10166  004136  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10167  004138  0D02               	mullw	2
 10168  00413A  0EB6               	movlw	low _pBDTEntryIn
 10169  00413C  24F3               	addwf	prodl,w,c
 10170  00413E  6ED9               	movwf	fsr2l,c
 10171  004140  0E00               	movlw	high _pBDTEntryIn
 10172  004142                     L4:
 10173  004142  20F4               	addwfc	prodh,w,c
 10174  004144  6EDA               	movwf	fsr2h,c
 10175  004146  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10176  00414A  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;usb_device.c: 2188: }
 10180                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10181                           
 10182                           ; BSR set to: 0
 10183  00414E  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10184  004152  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10185  004156  AEDF               	btfss	indf2,7,c
 10186  004158  D015               	goto	l1747
 10187                           
 10188                           ; BSR set to: 0
 10189  00415A  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10190  00415E  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10191  004162  A4DF               	btfss	indf2,2,c
 10192  004164  D00F               	goto	l1747
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10196  004166  0E01               	movlw	1
 10197  004168  0104               	movlb	4	; () banked
 10198  00416A  6F38               	movwf	56,b	;volatile
 10199                           
 10200                           ; BSR set to: 4
 10201                           ;usb_device.c: 2193: }
 10202                           ;usb_device.c: 2194: }
 10203                           
 10204                           ; BSR set to: 4
 10205                           ;usb_device.c: 2192: break;
 10206  00416C  D00B               	goto	l1747
 10207  00416E                     l1743:
 10208                           
 10209                           ; BSR set to: 4
 10210                           
 10211                           ; BSR set to: 4
 10212  00416E  5130               	movf	48,w,b	;volatile
 10213  004170  0B1F               	andlw	31
 10214                           
 10215                           ; Switch size 1, requested type "space"
 10216                           ; Number of cases is 3, Range of values is 0 to 2
 10217                           ; switch strategies available:
 10218                           ; Name         Instructions Cycles
 10219                           ; simple_byte           10     6 (average)
 10220                           ;	Chosen strategy is simple_byte
 10221  004172  0A00               	xorlw	0	; case 0
 10222  004174  B4D8               	btfsc	status,2,c
 10223  004176  D7BE               	goto	l1744
 10224  004178  0A01               	xorlw	1	; case 1
 10225  00417A  B4D8               	btfsc	status,2,c
 10226  00417C  D7C4               	goto	l1748
 10227  00417E  0A03               	xorlw	3	; case 2
 10228  004180  B4D8               	btfsc	status,2,c
 10229  004182  D7C4               	goto	l1749
 10230  004184                     l1747:
 10231                           
 10232                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10233  004184  0100               	movlb	0	; () banked
 10234  004186  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10235  004188  0012               	return	
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;usb_device.c: 2197: {
 10239                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10240  00418A  0E38               	movlw	56
 10241  00418C  6FB0               	movwf	_inPipes& (0+255),b
 10242  00418E  0E04               	movlw	4
 10243  004190  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10247  004192  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10251  004194  0E02               	movlw	2
 10252  004196  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10253  004198  0012               	return	
 10254  00419A                     __end_of_USBStdGetStatusHandler:
 10255                           	opt stack 0
 10256                           tosu	equ	0xFFF
 10257                           tosh	equ	0xFFE
 10258                           tosl	equ	0xFFD
 10259                           pclath	equ	0xFFA
 10260                           tblptru	equ	0xFF8
 10261                           tblptrh	equ	0xFF7
 10262                           tblptrl	equ	0xFF6
 10263                           tablat	equ	0xFF5
 10264                           prodh	equ	0xFF4
 10265                           prodl	equ	0xFF3
 10266                           intcon	equ	0xFF2
 10267                           intcon2	equ	0xFF1
 10268                           intcon3	equ	0xFF0
 10269                           postinc0	equ	0xFEE
 10270                           plusw0	equ	0xFEB
 10271                           wreg	equ	0xFE8
 10272                           postinc1	equ	0xFE6
 10273                           postdec1	equ	0xFE5
 10274                           fsr1h	equ	0xFE2
 10275                           fsr1l	equ	0xFE1
 10276                           indf2	equ	0xFDF
 10277                           postinc2	equ	0xFDE
 10278                           postdec2	equ	0xFDD
 10279                           plusw2	equ	0xFDB
 10280                           fsr2h	equ	0xFDA
 10281                           fsr2l	equ	0xFD9
 10282                           status	equ	0xFD8
 10283                           
 10284 ;; *************** function _USBStdGetDscHandler *****************
 10285 ;; Defined at:
 10286 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;		None
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;		None
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  1    wreg      void 
 10293 ;; Registers used:
 10294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10302 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10303 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10304 ;;Total ram usage:        2 bytes
 10305 ;; Hardware stack levels used:    1
 10306 ;; Hardware stack levels required when called:   11
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_USBCheckStdRequest
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text42
 10315  002BB4                     __ptext42:
 10316                           	opt stack 0
 10317  002BB4                     _USBStdGetDscHandler:
 10318                           	opt stack 12
 10319                           
 10320                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;incstack = 0
 10324  002BB4  0E80               	movlw	128
 10325  002BB6  0104               	movlb	4	; () banked
 10326  002BB8  1930               	xorwf	48,w,b	;volatile
 10327  002BBA  A4D8               	btfss	status,2,c
 10328  002BBC  0012               	return	
 10329                           
 10330                           ; BSR set to: 4
 10331                           ;usb_device.c: 2064: {
 10332                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10333  002BBE  0EC0               	movlw	192
 10334  002BC0  0100               	movlb	0	; () banked
 10335  002BC2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10336                           
 10337                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10338  002BC4  D082               	goto	l1730
 10339  002BC6                     
 10340                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10341                           
 10342                           ; BSR set to: 0
 10343  002BC6  0E56               	movlw	low _device_dsc
 10344  002BC8  0100               	movlb	0	; () banked
 10345  002BCA  6FB0               	movwf	_inPipes& (0+255),b
 10346  002BCC  0EFE               	movlw	high _device_dsc
 10347  002BCE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10348                           
 10349                           ; BSR set to: 0
 10350                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10351  002BD0  0E00               	movlw	0
 10352  002BD2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10353  002BD4  0E12               	movlw	18
 10354  002BD6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10355                           
 10356                           ;usb_device.c: 2076: break;
 10357  002BD8  0012               	return	
 10358  002BDA                     
 10359                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10360                           
 10361                           ; BSR set to: 0
 10362  002BDA  0104               	movlb	4	; () banked
 10363  002BDC  5132               	movf	50,w,b	;volatile
 10364  002BDE  A4D8               	btfss	status,2,c
 10365  002BE0  D040               	goto	l1734
 10366                           
 10367                           ; BSR set to: 4
 10368                           ;usb_device.c: 2082: {
 10369                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10370  002BE2  5132               	movf	50,w,b	;volatile
 10371  002BE4  0D02               	mullw	2
 10372  002BE6  0E3B               	movlw	low _USB_CD_Ptr
 10373  002BE8  24F3               	addwf	prodl,w,c
 10374  002BEA  6EF6               	movwf	tblptrl,c
 10375  002BEC  0EFC               	movlw	high _USB_CD_Ptr
 10376  002BEE  20F4               	addwfc	prodh,w,c
 10377  002BF0  6EF7               	movwf	tblptrh,c
 10378  002BF2                     	if	0	;There are less than 3 active tblptr bytes
 10379  002BF2                     	endif
 10380  002BF2  0009               	tblrd		*+
 10381  002BF4  CFF5 F0B0          	movff	tablat,_inPipes
 10382  002BF8  000A               	tblrd		*-
 10383  002BFA  CFF5 F0B1          	movff	tablat,_inPipes+1
 10384                           
 10385                           ; BSR set to: 4
 10386                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10387  002BFE  0E02               	movlw	2
 10388  002C00  0100               	movlb	0	; () banked
 10389  002C02  25B0               	addwf	_inPipes& (0+255),w,b
 10390  002C04  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10391  002C06  0E00               	movlw	0
 10392  002C08  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10393  002C0A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10394  002C0C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10395  002C10  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10396  002C14  6AF8               	clrf	tblptru,c
 10397  002C16  0E0E               	movlw	(high __ramtop+-1)
 10398  002C18  64F7               	cpfsgt	tblptrh,c
 10399  002C1A  D003               	bra	u10947
 10400  002C1C  0008               	tblrd		*
 10401  002C1E  50F5               	movf	tablat,w,c
 10402  002C20  D005               	bra	u10940
 10403  002C22                     u10947:
 10404  002C22  CFF6 FFE9          	movff	tblptrl,fsr0l
 10405  002C26  CFF7 FFEA          	movff	tblptrh,fsr0h
 10406  002C2A  50EF               	movf	indf0,w,c
 10407  002C2C                     u10940:
 10408  002C2C  0100               	movlb	0	; () banked
 10409  002C2E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10410                           
 10411                           ; BSR set to: 0
 10412                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10413  002C30  0E03               	movlw	3
 10414  002C32  25B0               	addwf	_inPipes& (0+255),w,b
 10415  002C34  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10416  002C36  0E00               	movlw	0
 10417  002C38  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10418  002C3A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10419  002C3C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10420  002C40  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10421  002C44  6AF8               	clrf	tblptru,c
 10422  002C46  0E0E               	movlw	(high __ramtop+-1)
 10423  002C48  64F7               	cpfsgt	tblptrh,c
 10424  002C4A  D003               	bra	u10957
 10425  002C4C  0008               	tblrd		*
 10426  002C4E  50F5               	movf	tablat,w,c
 10427  002C50  D005               	bra	u10950
 10428  002C52                     u10957:
 10429  002C52  CFF6 FFE9          	movff	tblptrl,fsr0l
 10430  002C56  CFF7 FFEA          	movff	tblptrh,fsr0h
 10431  002C5A  50EF               	movf	indf0,w,c
 10432  002C5C                     u10950:
 10433  002C5C  0100               	movlb	0	; () banked
 10434  002C5E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10435                           
 10436                           ;usb_device.c: 2094: }
 10437  002C60  0012               	return	
 10438  002C62                     l1734:
 10439                           
 10440                           ;usb_device.c: 2095: else
 10441                           ;usb_device.c: 2096: {
 10442                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10443                           
 10444                           ; BSR set to: 0
 10445  002C62  0E00               	movlw	0
 10446  002C64  0100               	movlb	0	; () banked
 10447  002C66  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;usb_device.c: 2098: }
 10451                           ;usb_device.c: 2099: break;
 10452  002C68  0012               	return	
 10453  002C6A                     
 10454                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10455                           
 10456                           ; BSR set to: 0
 10457  002C6A  0E03               	movlw	3
 10458  002C6C  0104               	movlb	4	; () banked
 10459  002C6E  6132               	cpfslt	50,b	;volatile
 10460  002C70  D024               	goto	l1737
 10461                           
 10462                           ; BSR set to: 4
 10463                           ;usb_device.c: 2105: {
 10464                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10465  002C72  5132               	movf	50,w,b	;volatile
 10466  002C74  0D02               	mullw	2
 10467  002C76  0E35               	movlw	low _USB_SD_Ptr
 10468  002C78  24F3               	addwf	prodl,w,c
 10469  002C7A  6EF6               	movwf	tblptrl,c
 10470  002C7C  0EFC               	movlw	high _USB_SD_Ptr
 10471  002C7E  20F4               	addwfc	prodh,w,c
 10472  002C80  6EF7               	movwf	tblptrh,c
 10473  002C82                     	if	0	;There are less than 3 active tblptr bytes
 10474  002C82                     	endif
 10475  002C82  0009               	tblrd		*+
 10476  002C84  CFF5 F0B0          	movff	tablat,_inPipes
 10477  002C88  000A               	tblrd		*-
 10478  002C8A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10479                           
 10480                           ; BSR set to: 4
 10481                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10482  002C8E  C0B0  FFF6         	movff	_inPipes,tblptrl
 10483  002C92  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10484  002C96  6AF8               	clrf	tblptru,c
 10485  002C98  0E0E               	movlw	(high __ramtop+-1)
 10486  002C9A  64F7               	cpfsgt	tblptrh,c
 10487  002C9C  D003               	bra	u10977
 10488  002C9E  0008               	tblrd		*
 10489  002CA0  50F5               	movf	tablat,w,c
 10490  002CA2  D005               	bra	u10970
 10491  002CA4                     u10977:
 10492  002CA4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10493  002CA8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10494  002CAC  50EF               	movf	indf0,w,c
 10495  002CAE                     u10970:
 10496  002CAE  0100               	movlb	0	; () banked
 10497  002CB0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10498  002CB2  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10499  002CB4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10500  002CB6  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10501                           
 10502                           ;usb_device.c: 2110: }
 10503  002CB8  0012               	return	
 10504  002CBA                     l1737:
 10505                           
 10506                           ;usb_device.c: 2120: else
 10507                           ;usb_device.c: 2121: {
 10508                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10509                           
 10510                           ; BSR set to: 0
 10511  002CBA  0E00               	movlw	0
 10512  002CBC  0100               	movlb	0	; () banked
 10513  002CBE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;usb_device.c: 2123: }
 10517                           ;usb_device.c: 2124: break;
 10518  002CC0  0012               	return	
 10519  002CC2                     
 10520                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10521                           
 10522                           ; BSR set to: 0
 10523  002CC2  0E00               	movlw	0
 10524  002CC4  0100               	movlb	0	; () banked
 10525  002CC6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;usb_device.c: 2128: }
 10529                           
 10530                           ;usb_device.c: 2127: break;
 10531  002CC8  0012               	return	
 10532  002CCA                     l1730:
 10533                           
 10534                           ; BSR set to: 0
 10535                           
 10536                           ; BSR set to: 0
 10537  002CCA  0104               	movlb	4	; () banked
 10538  002CCC  5133               	movf	51,w,b	;volatile
 10539                           
 10540                           ; Switch size 1, requested type "space"
 10541                           ; Number of cases is 3, Range of values is 1 to 3
 10542                           ; switch strategies available:
 10543                           ; Name         Instructions Cycles
 10544                           ; simple_byte           10     6 (average)
 10545                           ;	Chosen strategy is simple_byte
 10546  002CCE  0A01               	xorlw	1	; case 1
 10547  002CD0  B4D8               	btfsc	status,2,c
 10548  002CD2  D779               	goto	l1731
 10549  002CD4  0A03               	xorlw	3	; case 2
 10550  002CD6  B4D8               	btfsc	status,2,c
 10551  002CD8  D780               	goto	l1733
 10552  002CDA  0A01               	xorlw	1	; case 3
 10553  002CDC  B4D8               	btfsc	status,2,c
 10554  002CDE  D7C5               	goto	l1736
 10555  002CE0  D7F0               	goto	l1739
 10556  002CE2                     __end_of_USBStdGetDscHandler:
 10557                           	opt stack 0
 10558                           tosu	equ	0xFFF
 10559                           tosh	equ	0xFFE
 10560                           tosl	equ	0xFFD
 10561                           pclath	equ	0xFFA
 10562                           tblptru	equ	0xFF8
 10563                           tblptrh	equ	0xFF7
 10564                           tblptrl	equ	0xFF6
 10565                           tablat	equ	0xFF5
 10566                           prodh	equ	0xFF4
 10567                           prodl	equ	0xFF3
 10568                           intcon	equ	0xFF2
 10569                           intcon2	equ	0xFF1
 10570                           intcon3	equ	0xFF0
 10571                           indf0	equ	0xFEF
 10572                           postinc0	equ	0xFEE
 10573                           plusw0	equ	0xFEB
 10574                           fsr0h	equ	0xFEA
 10575                           fsr0l	equ	0xFE9
 10576                           wreg	equ	0xFE8
 10577                           postinc1	equ	0xFE6
 10578                           postdec1	equ	0xFE5
 10579                           fsr1h	equ	0xFE2
 10580                           fsr1l	equ	0xFE1
 10581                           indf2	equ	0xFDF
 10582                           postinc2	equ	0xFDE
 10583                           postdec2	equ	0xFDD
 10584                           plusw2	equ	0xFDB
 10585                           fsr2h	equ	0xFDA
 10586                           fsr2l	equ	0xFD9
 10587                           status	equ	0xFD8
 10588                           
 10589 ;; *************** function _USBStdFeatureReqHandler *****************
 10590 ;; Defined at:
 10591 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10596 ;;		 -> NULL(0), BDT(48), 
 10597 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10598 ;;		 -> UEP0(1), 
 10599 ;;  current_ep_d    1   52[BANK0 ] struct .
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10610 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10613 ;;Total ram usage:        6 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:   15
 10616 ;; This function calls:
 10617 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10618 ;; This function is called by:
 10619 ;;		_USBCheckStdRequest
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text43
 10624  00135A                     __ptext43:
 10625                           	opt stack 0
 10626  00135A                     _USBStdFeatureReqHandler:
 10627                           	opt stack 8
 10628                           
 10629                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10630                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10631                           ;usb_device.c: 2778: unsigned char* pUEP;
 10632                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10633                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10634                           
 10635                           ;incstack = 0
 10636  00135A  0104               	movlb	4	; () banked
 10637  00135C  0532               	decf	50,w,b	;volatile
 10638  00135E  A4D8               	btfss	status,2,c
 10639  001360  D011               	goto	l1823
 10640                           
 10641                           ; BSR set to: 4
 10642  001362  5130               	movf	48,w,b	;volatile
 10643  001364  0B1F               	andlw	31
 10644  001366  0900               	iorlw	0
 10645  001368  A4D8               	btfss	status,2,c
 10646  00136A  D00C               	goto	l1823
 10647                           
 10648                           ; BSR set to: 4
 10649                           ;usb_device.c: 2818: {
 10650                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10651  00136C  0100               	movlb	0	; () banked
 10652  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10656  001370  0E03               	movlw	3
 10657  001372  0104               	movlb	4	; () banked
 10658  001374  1931               	xorwf	49,w,b	;volatile
 10659  001376  A4D8               	btfss	status,2,c
 10660  001378  D002               	goto	l1822
 10661                           
 10662                           ; BSR set to: 4
 10663                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10664  00137A  0E01               	movlw	1
 10665  00137C  D001               	goto	L5
 10666  00137E                     l1822:
 10667                           
 10668                           ;usb_device.c: 2822: else
 10669                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10670                           
 10671                           ; BSR set to: 1
 10672  00137E  0E00               	movlw	0
 10673  001380                     L5:
 10674  001380  0101               	movlb	1	; () banked
 10675  001382  6FE5               	movwf	_RemoteWakeup& (0+255),b
 10676  001384                     l1823:
 10677                           
 10678                           ;usb_device.c: 2824: }
 10679                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10680                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10681                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10682                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10683                           
 10684                           ; BSR set to: 1
 10685  001384  0104               	movlb	4	; () banked
 10686  001386  5132               	movf	50,w,b	;volatile
 10687  001388  A4D8               	btfss	status,2,c
 10688  00138A  0012               	return	
 10689                           
 10690                           ; BSR set to: 4
 10691  00138C  5130               	movf	48,w,b	;volatile
 10692  00138E  0B1F               	andlw	31
 10693  001390  0A02               	xorlw	2
 10694  001392  A4D8               	btfss	status,2,c
 10695  001394  0012               	return	
 10696                           
 10697                           ; BSR set to: 4
 10698  001396  5134               	movf	52,w,b	;volatile
 10699  001398  0B0F               	andlw	15
 10700  00139A  0900               	iorlw	0
 10701  00139C  B4D8               	btfsc	status,2,c
 10702  00139E  0012               	return	
 10703                           
 10704                           ; BSR set to: 4
 10705  0013A0  5134               	movf	52,w,b	;volatile
 10706  0013A2  0B0F               	andlw	15
 10707  0013A4  0100               	movlb	0	; () banked
 10708  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10709  0013A8  0E03               	movlw	3
 10710  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10711  0013AC  0012               	return	
 10712                           
 10713                           ; BSR set to: 0
 10714  0013AE  0E20               	movlw	32
 10715  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10716  0013B2  A4D8               	btfss	status,2,c
 10717  0013B4  0012               	return	
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;usb_device.c: 2831: {
 10721                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10722  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10723                           
 10724                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10725  0013B8  0104               	movlb	4	; () banked
 10726  0013BA  BF34               	btfsc	52,7,b	;volatile
 10727  0013BC  D01C               	goto	l1825
 10728                           
 10729                           ; BSR set to: 4
 10730                           ;usb_device.c: 2838: {
 10731                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10732  0013BE  5134               	movf	52,w,b	;volatile
 10733  0013C0  0B0F               	andlw	15
 10734  0013C2  0100               	movlb	0	; () banked
 10735  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10736  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10737  0013C8  0D02               	mullw	2
 10738  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10739  0013CC  24F3               	addwf	prodl,w,c
 10740  0013CE  6ED9               	movwf	fsr2l,c
 10741  0013D0  0E03               	movlw	high _pBDTEntryOut
 10742  0013D2  20F4               	addwfc	prodh,w,c
 10743  0013D4  6EDA               	movwf	fsr2h,c
 10744  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10745  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10746                           
 10747                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10748  0013DE  0104               	movlb	4	; () banked
 10749  0013E0  5134               	movf	52,w,b	;volatile
 10750  0013E2  0B0F               	andlw	15
 10751  0013E4  0100               	movlb	0	; () banked
 10752  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10753  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10754  0013EA  0D01               	mullw	1
 10755  0013EC  0ECE               	movlw	low _ep_data_out
 10756  0013EE  24F3               	addwf	prodl,w,c
 10757  0013F0  6ED9               	movwf	fsr2l,c
 10758  0013F2  0E02               	movlw	high _ep_data_out
 10759  0013F4  D01C               	goto	L6
 10760  0013F6                     l1825:
 10761                           
 10762                           ;usb_device.c: 2842: else
 10763                           ;usb_device.c: 2843: {
 10764                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10765                           
 10766                           ; BSR set to: 0
 10767  0013F6  0104               	movlb	4	; () banked
 10768  0013F8  5134               	movf	52,w,b	;volatile
 10769  0013FA  0B0F               	andlw	15
 10770  0013FC  0100               	movlb	0	; () banked
 10771  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10772  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10773  001402  0D02               	mullw	2
 10774  001404  0EB6               	movlw	low _pBDTEntryIn
 10775  001406  24F3               	addwf	prodl,w,c
 10776  001408  6ED9               	movwf	fsr2l,c
 10777  00140A  0E00               	movlw	high _pBDTEntryIn
 10778  00140C  20F4               	addwfc	prodh,w,c
 10779  00140E  6EDA               	movwf	fsr2h,c
 10780  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10781  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10782                           
 10783                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10784  001418  0104               	movlb	4	; () banked
 10785  00141A  5134               	movf	52,w,b	;volatile
 10786  00141C  0B0F               	andlw	15
 10787  00141E  0100               	movlb	0	; () banked
 10788  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10789  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10790  001424  0D01               	mullw	1
 10791  001426  0ED1               	movlw	low _ep_data_in
 10792  001428  24F3               	addwf	prodl,w,c
 10793  00142A  6ED9               	movwf	fsr2l,c
 10794  00142C  0E02               	movlw	high _ep_data_in
 10795  00142E                     L6:
 10796  00142E  20F4               	addwfc	prodh,w,c
 10797  001430  6EDA               	movwf	fsr2h,c
 10798  001432  50DF               	movf	indf2,w,c
 10799  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;usb_device.c: 2846: }
 10803                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10804                           
 10805                           ; BSR set to: 0
 10806  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10807  001438  D002               	goto	l1827
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;usb_device.c: 2853: {
 10811                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10812  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10813                           
 10814                           ;usb_device.c: 2855: }
 10815  00143C  D001               	goto	l1828
 10816  00143E                     l1827:
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;usb_device.c: 2856: else
 10820                           ;usb_device.c: 2857: {
 10821                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10822                           
 10823                           ; BSR set to: 0
 10824  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10825  001440                     l1828:
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;usb_device.c: 2859: }
 10829                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10830                           
 10831                           ; BSR set to: 0
 10832  001440  0104               	movlb	4	; () banked
 10833  001442  BF34               	btfsc	52,7,b	;volatile
 10834  001444  D00B               	goto	l1829
 10835                           
 10836                           ; BSR set to: 4
 10837                           ;usb_device.c: 2865: {
 10838                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10839  001446  5134               	movf	52,w,b	;volatile
 10840  001448  0B0F               	andlw	15
 10841  00144A  0100               	movlb	0	; () banked
 10842  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10843  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10844  001450  0D02               	mullw	2
 10845  001452  0E0E               	movlw	low _pBDTEntryOut
 10846  001454  24F3               	addwf	prodl,w,c
 10847  001456  6ED9               	movwf	fsr2l,c
 10848  001458  0E03               	movlw	high _pBDTEntryOut
 10849  00145A  D00B               	goto	L7
 10850  00145C                     l1829:
 10851                           
 10852                           ;usb_device.c: 2868: else
 10853                           ;usb_device.c: 2869: {
 10854                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10855                           
 10856                           ; BSR set to: 0
 10857  00145C  0104               	movlb	4	; () banked
 10858  00145E  5134               	movf	52,w,b	;volatile
 10859  001460  0B0F               	andlw	15
 10860  001462  0100               	movlb	0	; () banked
 10861  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10862  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10863  001468  0D02               	mullw	2
 10864  00146A  0EB6               	movlw	low _pBDTEntryIn
 10865  00146C  24F3               	addwf	prodl,w,c
 10866  00146E  6ED9               	movwf	fsr2l,c
 10867  001470  0E00               	movlw	high _pBDTEntryIn
 10868  001472                     L7:
 10869  001472  20F4               	addwfc	prodh,w,c
 10870  001474  6EDA               	movwf	fsr2h,c
 10871  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10872  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;usb_device.c: 2871: }
 10876                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10877                           
 10878                           ; BSR set to: 0
 10879  00147E  0E03               	movlw	3
 10880  001480  0104               	movlb	4	; () banked
 10881  001482  1931               	xorwf	49,w,b	;volatile
 10882  001484  A4D8               	btfss	status,2,c
 10883  001486  D031               	goto	l1831
 10884                           
 10885                           ; BSR set to: 4
 10886                           ;usb_device.c: 2875: {
 10887                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10888  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10889  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10890  001490  0100               	movlb	0	; () banked
 10891  001492  AEDF               	btfss	indf2,7,c
 10892  001494  D01D               	goto	l1834
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;usb_device.c: 2877: {
 10896                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10897  001496  0104               	movlb	4	; () banked
 10898  001498  BF34               	btfsc	52,7,b	;volatile
 10899  00149A  D00B               	goto	l1833
 10900                           
 10901                           ; BSR set to: 4
 10902                           ;usb_device.c: 2881: {
 10903                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10904  00149C  5134               	movf	52,w,b	;volatile
 10905  00149E  0B0F               	andlw	15
 10906  0014A0  0100               	movlb	0	; () banked
 10907  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10908  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10909  0014A6  0D01               	mullw	1
 10910  0014A8  0ECE               	movlw	low _ep_data_out
 10911  0014AA  24F3               	addwf	prodl,w,c
 10912  0014AC  6ED9               	movwf	fsr2l,c
 10913  0014AE  0E02               	movlw	high _ep_data_out
 10914  0014B0  D00B               	goto	L8
 10915  0014B2                     l1833:
 10916                           
 10917                           ;usb_device.c: 2884: else
 10918                           ;usb_device.c: 2885: {
 10919                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10920                           
 10921                           ; BSR set to: 2
 10922  0014B2  0104               	movlb	4	; () banked
 10923  0014B4  5134               	movf	52,w,b	;volatile
 10924  0014B6  0B0F               	andlw	15
 10925  0014B8  0100               	movlb	0	; () banked
 10926  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10927  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10928  0014BE  0D01               	mullw	1
 10929  0014C0  0ED1               	movlw	low _ep_data_in
 10930  0014C2  24F3               	addwf	prodl,w,c
 10931  0014C4  6ED9               	movwf	fsr2l,c
 10932  0014C6  0E02               	movlw	high _ep_data_in
 10933  0014C8                     L8:
 10934  0014C8  20F4               	addwfc	prodh,w,c
 10935  0014CA  6EDA               	movwf	fsr2h,c
 10936  0014CC  0102               	movlb	2	; () banked
 10937  0014CE  82DF               	bsf	indf2,1,c
 10938  0014D0                     l1834:
 10939                           
 10940                           ;usb_device.c: 2887: }
 10941                           ;usb_device.c: 2888: }
 10942                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10943                           
 10944                           ; BSR set to: 2
 10945                           
 10946                           ; BSR set to: 2
 10947  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10948  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10949  0014D8  0E00               	movlw	0
 10950  0014DA  84DB               	bsf	plusw2,2,c
 10951                           
 10952                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10953  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10954  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10955  0014E4  0E00               	movlw	0
 10956  0014E6  8EDB               	bsf	plusw2,7,c
 10957                           
 10958                           ;usb_device.c: 2893: }
 10959  0014E8  0012               	return	
 10960  0014EA                     l1831:
 10961                           
 10962                           ;usb_device.c: 2894: else
 10963                           ;usb_device.c: 2895: {
 10964                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10965  0014EA  0E04               	movlw	4
 10966  0014EC  0100               	movlb	0	; () banked
 10967  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10971  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10972  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10973  0014F8  AEDF               	btfss	indf2,7,c
 10974  0014FA  D01B               	goto	l1836
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;usb_device.c: 2902: {
 10978                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10979  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10980  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10981  001504  0E7F               	movlw	127
 10982  001506  16DF               	andwf	indf2,f,c
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10986  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10987  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10988  001510  0E00               	movlw	0
 10989  001512  8CDB               	bsf	plusw2,6,c
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10993  001514  0E00               	movlw	0
 10994  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10995  001518  0E05               	movlw	5
 10996  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10997  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10998  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10999  001524  0E00               	movlw	0
 11000  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11001  001528  0E02               	movlw	2
 11002  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11003  00152C  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11004                           
 11005                           ;usb_device.c: 2908: }
 11006  001530  D006               	goto	l1837
 11007  001532                     l1836:
 11008                           
 11009                           ;usb_device.c: 2909: else
 11010                           ;usb_device.c: 2910: {
 11011                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11012  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11013  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11014  00153A  0E00               	movlw	0
 11015  00153C  8CDB               	bsf	plusw2,6,c
 11016  00153E                     l1837:
 11017                           
 11018                           ;usb_device.c: 2913: }
 11019                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11020  00153E  0E04               	movlw	4
 11021  001540  0100               	movlb	0	; () banked
 11022  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11026  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11027  001546  D006               	goto	u11190
 11028                           
 11029                           ; BSR set to: 0
 11030  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11031  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11032  001550  AEDF               	btfss	indf2,7,c
 11033  001552  D033               	goto	l1838
 11034  001554                     u11190:
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;usb_device.c: 2924: {
 11038                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11039  001554  0104               	movlb	4	; () banked
 11040  001556  BF34               	btfsc	52,7,b	;volatile
 11041  001558  D00B               	goto	l1841
 11042                           
 11043                           ; BSR set to: 4
 11044                           ;usb_device.c: 2926: {
 11045                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11046  00155A  5134               	movf	52,w,b	;volatile
 11047  00155C  0B0F               	andlw	15
 11048  00155E  0100               	movlb	0	; () banked
 11049  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11050  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11051  001564  0D01               	mullw	1
 11052  001566  0ECE               	movlw	low _ep_data_out
 11053  001568  24F3               	addwf	prodl,w,c
 11054  00156A  6ED9               	movwf	fsr2l,c
 11055  00156C  0E02               	movlw	high _ep_data_out
 11056  00156E  D00B               	goto	L9
 11057  001570                     l1841:
 11058                           
 11059                           ;usb_device.c: 2929: else
 11060                           ;usb_device.c: 2930: {
 11061                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11062                           
 11063                           ; BSR set to: 2
 11064  001570  0104               	movlb	4	; () banked
 11065  001572  5134               	movf	52,w,b	;volatile
 11066  001574  0B0F               	andlw	15
 11067  001576  0100               	movlb	0	; () banked
 11068  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11069  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11070  00157C  0D01               	mullw	1
 11071  00157E  0ED1               	movlw	low _ep_data_in
 11072  001580  24F3               	addwf	prodl,w,c
 11073  001582  6ED9               	movwf	fsr2l,c
 11074  001584  0E02               	movlw	high _ep_data_in
 11075  001586                     L9:
 11076  001586  20F4               	addwfc	prodh,w,c
 11077  001588  6EDA               	movwf	fsr2h,c
 11078  00158A  0102               	movlb	2	; () banked
 11079  00158C  92DF               	bcf	indf2,1,c
 11080                           
 11081                           ; BSR set to: 2
 11082                           ;usb_device.c: 2932: }
 11083                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11084                           
 11085                           ; BSR set to: 2
 11086  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11087  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11088  001596  0E3B               	movlw	59
 11089  001598  16DF               	andwf	indf2,f,c
 11090                           
 11091                           ; BSR set to: 2
 11092                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11093  00159A  0E00               	movlw	0
 11094  00159C  0100               	movlb	0	; () banked
 11095  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11096  0015A0  0E05               	movlw	5
 11097  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11098  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11099  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11100  0015AC  0E00               	movlw	0
 11101  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11102  0015B0  0E02               	movlw	2
 11103  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11104  0015B4  EC13  F029         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11105                           
 11106                           ;usb_device.c: 2938: }
 11107  0015B8  D006               	goto	l1843
 11108  0015BA                     l1838:
 11109                           
 11110                           ;usb_device.c: 2939: else
 11111                           ;usb_device.c: 2940: {
 11112                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11113  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11114  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11115  0015C2  0E3B               	movlw	59
 11116  0015C4  16DF               	andwf	indf2,f,c
 11117  0015C6                     l1843:
 11118                           
 11119                           ;usb_device.c: 2943: }
 11120                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11121  0015C6  0104               	movlb	4	; () banked
 11122  0015C8  5134               	movf	52,w,b	;volatile
 11123  0015CA  0B0F               	andlw	15
 11124  0015CC  0100               	movlb	0	; () banked
 11125  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11126  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11127  0015D2  0D01               	mullw	1
 11128  0015D4  0E26               	movlw	38
 11129  0015D6  24F3               	addwf	prodl,w,c
 11130  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11131  0015DA  0E0F               	movlw	15
 11132  0015DC  20F4               	addwfc	prodh,w,c
 11133  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11137  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11138  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11139  0015E8  0EFE               	movlw	254
 11140  0015EA  16DF               	andwf	indf2,f,c
 11141                           
 11142                           ; BSR set to: 0
 11143  0015EC  0012               	return	
 11144  0015EE                     __end_of_USBStdFeatureReqHandler:
 11145                           	opt stack 0
 11146                           tosu	equ	0xFFF
 11147                           tosh	equ	0xFFE
 11148                           tosl	equ	0xFFD
 11149                           pclath	equ	0xFFA
 11150                           tblptru	equ	0xFF8
 11151                           tblptrh	equ	0xFF7
 11152                           tblptrl	equ	0xFF6
 11153                           tablat	equ	0xFF5
 11154                           prodh	equ	0xFF4
 11155                           prodl	equ	0xFF3
 11156                           intcon	equ	0xFF2
 11157                           intcon2	equ	0xFF1
 11158                           intcon3	equ	0xFF0
 11159                           indf0	equ	0xFEF
 11160                           postinc0	equ	0xFEE
 11161                           plusw0	equ	0xFEB
 11162                           fsr0h	equ	0xFEA
 11163                           fsr0l	equ	0xFE9
 11164                           wreg	equ	0xFE8
 11165                           postinc1	equ	0xFE6
 11166                           postdec1	equ	0xFE5
 11167                           fsr1h	equ	0xFE2
 11168                           fsr1l	equ	0xFE1
 11169                           indf2	equ	0xFDF
 11170                           postinc2	equ	0xFDE
 11171                           postdec2	equ	0xFDD
 11172                           plusw2	equ	0xFDB
 11173                           fsr2h	equ	0xFDA
 11174                           fsr2l	equ	0xFD9
 11175                           status	equ	0xFD8
 11176                           
 11177 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11178 ;; Defined at:
 11179 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  event           2   41[BANK0 ] enum E8363
 11182 ;;  pdata           2   43[BANK0 ] PTR void 
 11183 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11184 ;;  size            2   45[BANK0 ] unsigned int 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;                  1    wreg      unsigned char 
 11189 ;; Registers used:
 11190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11196 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;Total ram usage:        8 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:   14
 11203 ;; This function calls:
 11204 ;;		_CDCInitEP
 11205 ;;		_USBCheckCDCRequest
 11206 ;; This function is called by:
 11207 ;;		_USBDeviceTasks
 11208 ;;		_USBStdSetCfgHandler
 11209 ;;		_USBSuspend
 11210 ;;		_USBWakeFromSuspend
 11211 ;;		_USBCtrlTrfSetupHandler
 11212 ;;		_USBCheckStdRequest
 11213 ;;		_USBStdFeatureReqHandler
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           	psect	text44
 11218  005226                     __ptext44:
 11219                           	opt stack 0
 11220  005226                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11221                           	opt stack 12
 11222                           
 11223                           ;usb_device_mgr.c: 106: switch( (int) event )
 11224                           
 11225                           ;incstack = 0
 11226  005226  D006               	goto	l1997
 11227  005228                     
 11228                           ;usb_device_mgr.c: 134: CDCInitEP();
 11229  005228  EC10  F028         	call	_CDCInitEP	;wreg free
 11230                           
 11231                           ;usb_device_mgr.c: 142: break;
 11232                           
 11233                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11234                           
 11235                           ;usb_device_mgr.c: 139: break;
 11236  00522C  0012               	return	
 11237  00522E                     
 11238                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11239  00522E  ECCD  F020         	call	_USBCheckCDCRequest	;wreg free
 11240                           
 11241                           ;usb_device_mgr.c: 163: }
 11242                           
 11243                           ;usb_device_mgr.c: 162: break;
 11244                           
 11245                           ;usb_device_mgr.c: 161: default:
 11246                           
 11247                           ;usb_device_mgr.c: 159: break;
 11248                           
 11249                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11250                           
 11251                           ;usb_device_mgr.c: 156: break;
 11252                           
 11253                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11254                           
 11255                           ;usb_device_mgr.c: 153: break;
 11256  005232  0012               	return	
 11257  005234                     l1997:
 11258  005234  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11259  005238  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11260                           
 11261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11262                           ; Switch size 1, requested type "space"
 11263                           ; Number of cases is 2, Range of values is 0 to 127
 11264                           ; switch strategies available:
 11265                           ; Name         Instructions Cycles
 11266                           ; simple_byte            7     4 (average)
 11267                           ;	Chosen strategy is simple_byte
 11268  00523C  0100               	movlb	0	; () banked
 11269  00523E  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11270  005240  0A00               	xorlw	0	; case 0
 11271  005242  B4D8               	btfsc	status,2,c
 11272  005244  D004               	goto	l15711
 11273  005246  0A7F               	xorlw	127	; case 127
 11274  005248  A4D8               	btfss	status,2,c
 11275  00524A  0012               	return	
 11276  00524C  D018               	goto	l15713
 11277  00524E                     l15711:
 11278                           
 11279                           ; BSR set to: 0
 11280                           ; Switch size 1, requested type "space"
 11281                           ; Number of cases is 8, Range of values is 1 to 117
 11282                           ; switch strategies available:
 11283                           ; Name         Instructions Cycles
 11284                           ; simple_byte           25    13 (average)
 11285                           ;	Chosen strategy is simple_byte
 11286  00524E  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11287  005250  0A01               	xorlw	1	; case 1
 11288  005252  B4D8               	btfsc	status,2,c
 11289  005254  D7E9               	goto	l2003
 11290  005256  0A03               	xorlw	3	; case 2
 11291  005258  B4D8               	btfsc	status,2,c
 11292  00525A  0012               	return	
 11293  00525C  0A01               	xorlw	1	; case 3
 11294  00525E  B4D8               	btfsc	status,2,c
 11295  005260  D7E6               	goto	l2005
 11296  005262  0A06               	xorlw	6	; case 5
 11297  005264  B4D8               	btfsc	status,2,c
 11298  005266  0012               	return	
 11299  005268  0A77               	xorlw	119	; case 114
 11300  00526A  B4D8               	btfsc	status,2,c
 11301  00526C  0012               	return	
 11302  00526E  0A01               	xorlw	1	; case 115
 11303  005270  B4D8               	btfsc	status,2,c
 11304  005272  0012               	return	
 11305  005274  0A07               	xorlw	7	; case 116
 11306  005276  B4D8               	btfsc	status,2,c
 11307  005278  0012               	return	
 11308  00527A  0A01               	xorlw	1	; case 117
 11309  00527C  0012               	return	
 11310  00527E                     l15713:
 11311                           
 11312                           ; BSR set to: 0
 11313                           ; Switch size 1, requested type "space"
 11314                           ; Number of cases is 1, Range of values is 255 to 255
 11315                           ; switch strategies available:
 11316                           ; Name         Instructions Cycles
 11317                           ; simple_byte            4     3 (average)
 11318                           ;	Chosen strategy is simple_byte
 11319  00527E  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11320  005280  0AFF               	xorlw	255	; case 255
 11321  005282  0012               	return	
 11322  005284                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11323                           	opt stack 0
 11324                           tosu	equ	0xFFF
 11325                           tosh	equ	0xFFE
 11326                           tosl	equ	0xFFD
 11327                           pclath	equ	0xFFA
 11328                           tblptru	equ	0xFF8
 11329                           tblptrh	equ	0xFF7
 11330                           tblptrl	equ	0xFF6
 11331                           tablat	equ	0xFF5
 11332                           prodh	equ	0xFF4
 11333                           prodl	equ	0xFF3
 11334                           intcon	equ	0xFF2
 11335                           intcon2	equ	0xFF1
 11336                           intcon3	equ	0xFF0
 11337                           indf0	equ	0xFEF
 11338                           postinc0	equ	0xFEE
 11339                           plusw0	equ	0xFEB
 11340                           fsr0h	equ	0xFEA
 11341                           fsr0l	equ	0xFE9
 11342                           wreg	equ	0xFE8
 11343                           postinc1	equ	0xFE6
 11344                           postdec1	equ	0xFE5
 11345                           fsr1h	equ	0xFE2
 11346                           fsr1l	equ	0xFE1
 11347                           indf2	equ	0xFDF
 11348                           postinc2	equ	0xFDE
 11349                           postdec2	equ	0xFDD
 11350                           plusw2	equ	0xFDB
 11351                           fsr2h	equ	0xFDA
 11352                           fsr2l	equ	0xFD9
 11353                           status	equ	0xFD8
 11354                           
 11355 ;; *************** function _USBCheckCDCRequest *****************
 11356 ;; Defined at:
 11357 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		wreg, status,2, status,0
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:   11
 11378 ;; This function calls:
 11379 ;;		Nothing
 11380 ;; This function is called by:
 11381 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text45
 11386  00419A                     __ptext45:
 11387                           	opt stack 0
 11388  00419A                     _USBCheckCDCRequest:
 11389                           	opt stack 14
 11390                           
 11391                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11392                           
 11393                           ;incstack = 0
 11394  00419A  0104               	movlb	4	; () banked
 11395  00419C  5130               	movf	48,w,b	;volatile
 11396  00419E  0B1F               	andlw	31
 11397  0041A0  06E8               	decf	wreg,f,c
 11398  0041A2  A4D8               	btfss	status,2,c
 11399  0041A4  0012               	return	
 11400                           
 11401                           ; BSR set to: 4
 11402                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11403                           
 11404                           ; BSR set to: 4
 11405                           
 11406                           ; BSR set to: 4
 11407  0041A6  3930               	swapf	48,w,b	;volatile
 11408  0041A8  32E8               	rrcf	wreg,f,c
 11409  0041AA  0B03               	andlw	3
 11410  0041AC  06E8               	decf	wreg,f,c
 11411  0041AE  A4D8               	btfss	status,2,c
 11412  0041B0  0012               	return	
 11413                           
 11414                           ; BSR set to: 4
 11415                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11416                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11417                           
 11418                           ; BSR set to: 4
 11419                           
 11420                           ; BSR set to: 4
 11421  0041B2  5134               	movf	52,w,b	;volatile
 11422  0041B4  B4D8               	btfsc	status,2,c
 11423  0041B6  D037               	goto	l1899
 11424                           
 11425                           ; BSR set to: 4
 11426  0041B8  0534               	decf	52,w,b	;volatile
 11427  0041BA  A4D8               	btfss	status,2,c
 11428  0041BC  0012               	return	
 11429  0041BE  D033               	goto	l1899
 11430  0041C0                     
 11431                           ; BSR set to: 4
 11432                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11433                           
 11434                           ; BSR set to: 4
 11435  0041C0  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11436  0041C2  0100               	movlb	0	; () banked
 11437  0041C4  6FB0               	movwf	_inPipes& (0+255),b
 11438  0041C6  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11439  0041C8  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11443  0041CA  0E00               	movlw	0
 11444  0041CC  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11445  0041CE  0E08               	movlw	8
 11446  0041D0  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11450  0041D2  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11454  0041D4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11455                           
 11456                           ;usb_device_cdc.c: 178: break;
 11457  0041D6  0012               	return	
 11458  0041D8                     
 11459                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11460                           
 11461                           ; BSR set to: 0
 11462  0041D8  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11463  0041DA  0100               	movlb	0	; () banked
 11464  0041DC  6FB0               	movwf	_inPipes& (0+255),b
 11465  0041DE  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11466  0041E0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11470  0041E2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11471                           
 11472                           ;usb_device_cdc.c: 183: break;
 11473  0041E4  0012               	return	
 11474  0041E6                     l1903:
 11475                           
 11476                           ; BSR set to: 4
 11477                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11478  0041E6  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11479  0041EA  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11480                           
 11481                           ; BSR set to: 4
 11482                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11483  0041EE  0E7E               	movlw	low _line_coding
 11484  0041F0  0101               	movlb	1	; () banked
 11485  0041F2  6FC9               	movwf	_outPipes& (0+255),b
 11486  0041F4  0E03               	movlw	high _line_coding
 11487  0041F6  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11488                           
 11489                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11490  0041F8  0E00               	movlw	0
 11491  0041FA  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11492  0041FC  0E00               	movlw	0
 11493  0041FE  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11494                           
 11495                           ; BSR set to: 1
 11496                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11497  004200  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11498                           
 11499                           ;usb_device_cdc.c: 192: break;
 11500  004202  0012               	return	
 11501  004204                     
 11502                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11503                           
 11504                           ; BSR set to: 1
 11505  004204  0E7E               	movlw	low _line_coding
 11506  004206  0100               	movlb	0	; () banked
 11507  004208  6FB0               	movwf	_inPipes& (0+255),b
 11508  00420A  0E03               	movlw	high _line_coding
 11509  00420C  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11510                           
 11511                           ; BSR set to: 0
 11512  00420E  0E00               	movlw	0
 11513  004210  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11514  004212  0E07               	movlw	7
 11515  004214  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11516                           
 11517                           ; BSR set to: 0
 11518  004216  0EC1               	movlw	193
 11519  004218  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11520                           
 11521                           ;usb_device_cdc.c: 199: break;
 11522  00421A  0012               	return	
 11523  00421C                     l1905:
 11524                           
 11525                           ; BSR set to: 4
 11526                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11527  00421C  C432 F1E0          	movff	1074,_control_signal_bitmap	;volatile
 11528                           
 11529                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11530  004220  0100               	movlb	0	; () banked
 11531  004222  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;usb_device_cdc.c: 261: }
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;usb_device_cdc.c: 260: break;
 11538                           
 11539                           ;usb_device_cdc.c: 259: default:
 11540                           
 11541                           ;usb_device_cdc.c: 235: break;
 11542  004224  0012               	return	
 11543  004226                     l1899:
 11544                           
 11545                           ; BSR set to: 0
 11546  004226  0104               	movlb	4	; () banked
 11547  004228  5131               	movf	49,w,b	;volatile
 11548                           
 11549                           ; Switch size 1, requested type "space"
 11550                           ; Number of cases is 5, Range of values is 0 to 34
 11551                           ; switch strategies available:
 11552                           ; Name         Instructions Cycles
 11553                           ; simple_byte           16     9 (average)
 11554                           ;	Chosen strategy is simple_byte
 11555  00422A  0A00               	xorlw	0	; case 0
 11556  00422C  B4D8               	btfsc	status,2,c
 11557  00422E  D7C8               	goto	l1900
 11558  004230  0A01               	xorlw	1	; case 1
 11559  004232  B4D8               	btfsc	status,2,c
 11560  004234  D7D1               	goto	l1902
 11561  004236  0A21               	xorlw	33	; case 32
 11562  004238  B4D8               	btfsc	status,2,c
 11563  00423A  D7D5               	goto	l1903
 11564  00423C  0A01               	xorlw	1	; case 33
 11565  00423E  B4D8               	btfsc	status,2,c
 11566  004240  D7E1               	goto	l1904
 11567  004242  0A03               	xorlw	3	; case 34
 11568  004244  A4D8               	btfss	status,2,c
 11569  004246  0012               	return	
 11570  004248  D7E9               	goto	l1905
 11571  00424A                     __end_of_USBCheckCDCRequest:
 11572                           	opt stack 0
 11573                           tosu	equ	0xFFF
 11574                           tosh	equ	0xFFE
 11575                           tosl	equ	0xFFD
 11576                           pclath	equ	0xFFA
 11577                           tblptru	equ	0xFF8
 11578                           tblptrh	equ	0xFF7
 11579                           tblptrl	equ	0xFF6
 11580                           tablat	equ	0xFF5
 11581                           prodh	equ	0xFF4
 11582                           prodl	equ	0xFF3
 11583                           intcon	equ	0xFF2
 11584                           intcon2	equ	0xFF1
 11585                           intcon3	equ	0xFF0
 11586                           indf0	equ	0xFEF
 11587                           postinc0	equ	0xFEE
 11588                           plusw0	equ	0xFEB
 11589                           fsr0h	equ	0xFEA
 11590                           fsr0l	equ	0xFE9
 11591                           wreg	equ	0xFE8
 11592                           postinc1	equ	0xFE6
 11593                           postdec1	equ	0xFE5
 11594                           fsr1h	equ	0xFE2
 11595                           fsr1l	equ	0xFE1
 11596                           indf2	equ	0xFDF
 11597                           postinc2	equ	0xFDE
 11598                           postdec2	equ	0xFDD
 11599                           plusw2	equ	0xFDB
 11600                           fsr2h	equ	0xFDA
 11601                           fsr2l	equ	0xFD9
 11602                           status	equ	0xFD8
 11603                           
 11604 ;; *************** function _CDCInitEP *****************
 11605 ;; Defined at:
 11606 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;		None
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;		None
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  1    wreg      void 
 11613 ;; Registers used:
 11614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11624 ;;Total ram usage:        0 bytes
 11625 ;; Hardware stack levels used:    1
 11626 ;; Hardware stack levels required when called:   13
 11627 ;; This function calls:
 11628 ;;		_USBEnableEndpoint
 11629 ;;		_USBTransferOnePacket
 11630 ;; This function is called by:
 11631 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11632 ;; This function uses a non-reentrant model
 11633 ;;
 11634                           
 11635                           	psect	text46
 11636  005020                     __ptext46:
 11637                           	opt stack 0
 11638  005020                     _CDCInitEP:
 11639                           	opt stack 12
 11640                           
 11641                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11642                           
 11643                           ;incstack = 0
 11644  005020  0E80               	movlw	128
 11645  005022  0103               	movlb	3	; () banked
 11646  005024  6F7E               	movwf	_line_coding& (0+255),b
 11647  005026  0E25               	movlw	37
 11648  005028  6F7F               	movwf	(_line_coding+1)& (0+255),b
 11649  00502A  0E00               	movlw	0
 11650  00502C  6F80               	movwf	(_line_coding+2)& (0+255),b
 11651  00502E  0E00               	movlw	0
 11652  005030  6F81               	movwf	(_line_coding+3)& (0+255),b
 11653                           
 11654                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11655  005032  0E00               	movlw	0
 11656  005034  6F82               	movwf	(_line_coding+4)& (0+255),b
 11657                           
 11658                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11659  005036  0E00               	movlw	0
 11660  005038  6F83               	movwf	(_line_coding+5)& (0+255),b
 11661                           
 11662                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11663  00503A  0E08               	movlw	8
 11664  00503C  6F84               	movwf	(_line_coding+6)& (0+255),b
 11665                           
 11666                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11667  00503E  0E00               	movlw	0
 11668  005040  0100               	movlb	0	; () banked
 11669  005042  6FC7               	movwf	_cdc_rx_len& (0+255),b
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11673  005044  0E1A               	movlw	26
 11674  005046  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11675  005048  0E01               	movlw	1
 11676  00504A  ECE6  F02C         	call	_USBEnableEndpoint
 11677                           
 11678                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11679  00504E  0E1E               	movlw	30
 11680  005050  0100               	movlb	0	; () banked
 11681  005052  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11682  005054  0E02               	movlw	2
 11683  005056  ECE6  F02C         	call	_USBEnableEndpoint
 11684                           
 11685                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11686  00505A  0E00               	movlw	0
 11687  00505C  0100               	movlb	0	; () banked
 11688  00505E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11689  005060  0E00               	movlw	low _cdc_data_rx
 11690  005062  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11691  005064  0E05               	movlw	high _cdc_data_rx
 11692  005066  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11693  005068  0E40               	movlw	64
 11694  00506A  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11695  00506C  0E02               	movlw	2
 11696  00506E  EC15  F020         	call	_USBTransferOnePacket
 11697  005072  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11698  005076  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11699                           
 11700                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11701  00507A  0E00               	movlw	0
 11702  00507C  0101               	movlb	1	; () banked
 11703  00507E  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11704  005080  0E00               	movlw	0
 11705  005082  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11706                           
 11707                           ; BSR set to: 1
 11708                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11709  005084  0E00               	movlw	0
 11710  005086  0100               	movlb	0	; () banked
 11711  005088  6FC6               	movwf	_cdc_trf_state& (0+255),b
 11712                           
 11713                           ; BSR set to: 0
 11714  00508A  0012               	return		;funcret
 11715  00508C                     __end_of_CDCInitEP:
 11716                           	opt stack 0
 11717                           tosu	equ	0xFFF
 11718                           tosh	equ	0xFFE
 11719                           tosl	equ	0xFFD
 11720                           pclath	equ	0xFFA
 11721                           tblptru	equ	0xFF8
 11722                           tblptrh	equ	0xFF7
 11723                           tblptrl	equ	0xFF6
 11724                           tablat	equ	0xFF5
 11725                           prodh	equ	0xFF4
 11726                           prodl	equ	0xFF3
 11727                           intcon	equ	0xFF2
 11728                           intcon2	equ	0xFF1
 11729                           intcon3	equ	0xFF0
 11730                           indf0	equ	0xFEF
 11731                           postinc0	equ	0xFEE
 11732                           plusw0	equ	0xFEB
 11733                           fsr0h	equ	0xFEA
 11734                           fsr0l	equ	0xFE9
 11735                           wreg	equ	0xFE8
 11736                           postinc1	equ	0xFE6
 11737                           postdec1	equ	0xFE5
 11738                           fsr1h	equ	0xFE2
 11739                           fsr1l	equ	0xFE1
 11740                           indf2	equ	0xFDF
 11741                           postinc2	equ	0xFDE
 11742                           postdec2	equ	0xFDD
 11743                           plusw2	equ	0xFDB
 11744                           fsr2h	equ	0xFDA
 11745                           fsr2l	equ	0xFD9
 11746                           status	equ	0xFD8
 11747                           
 11748 ;; *************** function _USBEnableEndpoint *****************
 11749 ;; Defined at:
 11750 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  ep              1    wreg     unsigned char 
 11753 ;;  options         1   37[BANK0 ] unsigned char 
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;  ep              1   40[BANK0 ] unsigned char 
 11756 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11757 ;;		 -> UEP0(1), 
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11767 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11768 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11770 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11771 ;;Total ram usage:        4 bytes
 11772 ;; Hardware stack levels used:    1
 11773 ;; Hardware stack levels required when called:   12
 11774 ;; This function calls:
 11775 ;;		_USBConfigureEndpoint
 11776 ;; This function is called by:
 11777 ;;		_CDCInitEP
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           	psect	text47
 11782  0059CC                     __ptext47:
 11783                           	opt stack 0
 11784  0059CC                     _USBEnableEndpoint:
 11785                           	opt stack 12
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;incstack = 0
 11789                           ;USBEnableEndpoint@ep stored from wreg
 11790  0059CC  0100               	movlb	0	; () banked
 11791  0059CE  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11792                           
 11793                           ;usb_device.c: 898: unsigned char* p;
 11794                           ;usb_device.c: 902: if(options & 0x04)
 11795  0059D0  0100               	movlb	0	; () banked
 11796  0059D2  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11797  0059D4  D005               	goto	l1640
 11798                           
 11799                           ; BSR set to: 0
 11800                           ;usb_device.c: 903: {
 11801                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11802  0059D6  0E00               	movlw	0
 11803  0059D8  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11804  0059DA  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11805  0059DC  EC0B  F024         	call	_USBConfigureEndpoint
 11806  0059E0                     l1640:
 11807                           
 11808                           ;usb_device.c: 905: }
 11809                           ;usb_device.c: 906: if(options & 0x02)
 11810  0059E0  0100               	movlb	0	; () banked
 11811  0059E2  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11812  0059E4  D005               	goto	l1641
 11813                           
 11814                           ; BSR set to: 0
 11815                           ;usb_device.c: 907: {
 11816                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11817  0059E6  0E01               	movlw	1
 11818  0059E8  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11819  0059EA  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11820  0059EC  EC0B  F024         	call	_USBConfigureEndpoint
 11821  0059F0                     l1641:
 11822                           
 11823                           ;usb_device.c: 909: }
 11824                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11825  0059F0  0100               	movlb	0	; () banked
 11826  0059F2  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11827  0059F4  0D01               	mullw	1
 11828  0059F6  0E26               	movlw	38
 11829  0059F8  24F3               	addwf	prodl,w,c
 11830  0059FA  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11831  0059FC  0E0F               	movlw	15
 11832  0059FE  20F4               	addwfc	prodh,w,c
 11833  005A00  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;usb_device.c: 919: *p = options;
 11837  005A02  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11838  005A06  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11839  005A0A  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11840                           
 11841                           ; BSR set to: 0
 11842  005A0E  0012               	return		;funcret
 11843  005A10                     __end_of_USBEnableEndpoint:
 11844                           	opt stack 0
 11845                           tosu	equ	0xFFF
 11846                           tosh	equ	0xFFE
 11847                           tosl	equ	0xFFD
 11848                           pclath	equ	0xFFA
 11849                           tblptru	equ	0xFF8
 11850                           tblptrh	equ	0xFF7
 11851                           tblptrl	equ	0xFF6
 11852                           tablat	equ	0xFF5
 11853                           prodh	equ	0xFF4
 11854                           prodl	equ	0xFF3
 11855                           intcon	equ	0xFF2
 11856                           intcon2	equ	0xFF1
 11857                           intcon3	equ	0xFF0
 11858                           indf0	equ	0xFEF
 11859                           postinc0	equ	0xFEE
 11860                           plusw0	equ	0xFEB
 11861                           fsr0h	equ	0xFEA
 11862                           fsr0l	equ	0xFE9
 11863                           wreg	equ	0xFE8
 11864                           postinc1	equ	0xFE6
 11865                           postdec1	equ	0xFE5
 11866                           fsr1h	equ	0xFE2
 11867                           fsr1l	equ	0xFE1
 11868                           indf2	equ	0xFDF
 11869                           postinc2	equ	0xFDE
 11870                           postdec2	equ	0xFDD
 11871                           plusw2	equ	0xFDB
 11872                           fsr2h	equ	0xFDA
 11873                           fsr2l	equ	0xFD9
 11874                           status	equ	0xFD8
 11875                           
 11876 ;; *************** function _USBConfigureEndpoint *****************
 11877 ;; Defined at:
 11878 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;  EPNum           1    wreg     unsigned char 
 11881 ;;  direction       1   29[BANK0 ] unsigned char 
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11884 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11885 ;;		 -> BDT(48), 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11895 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11896 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11898 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11899 ;;Total ram usage:        8 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:   11
 11902 ;; This function calls:
 11903 ;;		Nothing
 11904 ;; This function is called by:
 11905 ;;		_USBEnableEndpoint
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text48
 11910  004816                     __ptext48:
 11911                           	opt stack 0
 11912  004816                     _USBConfigureEndpoint:
 11913                           	opt stack 12
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;incstack = 0
 11917                           ;USBConfigureEndpoint@EPNum stored from wreg
 11918  004816  0100               	movlb	0	; () banked
 11919  004818  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11920                           
 11921                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11922                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11923  00481A  0E00               	movlw	0
 11924  00481C  0100               	movlb	0	; () banked
 11925  00481E  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11926  004820  0E04               	movlw	4
 11927  004822  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11931  004824  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11932  004826  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11933  004828  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11934  00482A  90D8               	bcf	status,0,c
 11935  00482C  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11936  00482E  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11937  004830  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11938  004832  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11939  004834  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11940  004836  90D8               	bcf	status,0,c
 11941  004838  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11942  00483A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11943  00483C  90D8               	bcf	status,0,c
 11944  00483E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11945  004840  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11946  004842  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11947  004844  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11948  004846  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11949  004848  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11950  00484A  90D8               	bcf	status,0,c
 11951  00484C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11952  00484E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11953  004850  90D8               	bcf	status,0,c
 11954  004852  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11955  004854  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11956  004856  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11957  004858  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11958  00485A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11959  00485C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11960                           
 11961                           ; BSR set to: 0
 11962                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11963  00485E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11964  004862  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11965  004866  9EDF               	bcf	indf2,7,c
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;usb_device.c: 1575: if(direction == 0)
 11969  004868  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11970  00486A  A4D8               	btfss	status,2,c
 11971  00486C  D007               	goto	l1676
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;usb_device.c: 1576: {
 11975                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11976  00486E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11977  004870  0D02               	mullw	2
 11978  004872  0E0E               	movlw	low _pBDTEntryOut
 11979  004874  24F3               	addwf	prodl,w,c
 11980  004876  6ED9               	movwf	fsr2l,c
 11981  004878  0E03               	movlw	high _pBDTEntryOut
 11982  00487A  D006               	goto	L10
 11983  00487C                     l1676:
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;usb_device.c: 1579: else
 11987                           ;usb_device.c: 1580: {
 11988                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11989                           
 11990                           ; BSR set to: 0
 11991  00487C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11992  00487E  0D02               	mullw	2
 11993  004880  0EB6               	movlw	low _pBDTEntryIn
 11994  004882  24F3               	addwf	prodl,w,c
 11995  004884  6ED9               	movwf	fsr2l,c
 11996  004886  0E00               	movlw	high _pBDTEntryIn
 11997  004888                     L10:
 11998  004888  20F4               	addwfc	prodh,w,c
 11999  00488A  6EDA               	movwf	fsr2h,c
 12000  00488C  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12001  004890  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;usb_device.c: 1582: }
 12005                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12006                           
 12007                           ; BSR set to: 0
 12008  004894  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12009  004898  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12010  00489C  9CDF               	bcf	indf2,6,c
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12014  00489E  EE20 F004          	lfsr	2,4
 12015  0048A2  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12016  0048A4  26D9               	addwf	fsr2l,f,c
 12017  0048A6  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12018  0048A8  22DA               	addwfc	fsr2h,f,c
 12019  0048AA  8CDF               	bsf	indf2,6,c
 12020                           
 12021                           ; BSR set to: 0
 12022  0048AC  0012               	return		;funcret
 12023  0048AE                     __end_of_USBConfigureEndpoint:
 12024                           	opt stack 0
 12025                           tosu	equ	0xFFF
 12026                           tosh	equ	0xFFE
 12027                           tosl	equ	0xFFD
 12028                           pclath	equ	0xFFA
 12029                           tblptru	equ	0xFF8
 12030                           tblptrh	equ	0xFF7
 12031                           tblptrl	equ	0xFF6
 12032                           tablat	equ	0xFF5
 12033                           prodh	equ	0xFF4
 12034                           prodl	equ	0xFF3
 12035                           intcon	equ	0xFF2
 12036                           intcon2	equ	0xFF1
 12037                           intcon3	equ	0xFF0
 12038                           indf0	equ	0xFEF
 12039                           postinc0	equ	0xFEE
 12040                           plusw0	equ	0xFEB
 12041                           fsr0h	equ	0xFEA
 12042                           fsr0l	equ	0xFE9
 12043                           wreg	equ	0xFE8
 12044                           postinc1	equ	0xFE6
 12045                           postdec1	equ	0xFE5
 12046                           fsr1h	equ	0xFE2
 12047                           fsr1l	equ	0xFE1
 12048                           indf2	equ	0xFDF
 12049                           postinc2	equ	0xFDE
 12050                           postdec2	equ	0xFDD
 12051                           plusw2	equ	0xFDB
 12052                           fsr2h	equ	0xFDA
 12053                           fsr2l	equ	0xFD9
 12054                           status	equ	0xFD8
 12055                           
 12056 ;; *************** function _USBCtrlTrfOutHandler *****************
 12057 ;; Defined at:
 12058 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      void 
 12065 ;; Registers used:
 12066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12076 ;;Total ram usage:        0 bytes
 12077 ;; Hardware stack levels used:    1
 12078 ;; Hardware stack levels required when called:   13
 12079 ;; This function calls:
 12080 ;;		_USBCtrlTrfRxService
 12081 ;; This function is called by:
 12082 ;;		_USBCtrlEPService
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           	psect	text49
 12087  0050F8                     __ptext49:
 12088                           	opt stack 0
 12089  0050F8                     _USBCtrlTrfOutHandler:
 12090                           	opt stack 12
 12091                           
 12092                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;incstack = 0
 12096  0050F8  0E02               	movlw	2
 12097  0050FA  0100               	movlb	0	; () banked
 12098  0050FC  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12099  0050FE  A4D8               	btfss	status,2,c
 12100  005100  D003               	goto	l1782
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;usb_device.c: 2558: {
 12104                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12105  005102  EC04  F017         	call	_USBCtrlTrfRxService	;wreg free
 12106                           
 12107                           ;usb_device.c: 2560: }
 12108  005106  0012               	return	
 12109  005108                     l1782:
 12110                           
 12111                           ;usb_device.c: 2561: else
 12112                           ;usb_device.c: 2562: {
 12113                           ;usb_device.c: 2565: controlTransferState = 0;
 12114  005108  0E00               	movlw	0
 12115  00510A  0100               	movlb	0	; () banked
 12116  00510C  6FCC               	movwf	_controlTransferState& (0+255),b
 12117                           
 12118                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12119  00510E  0101               	movlb	1	; () banked
 12120  005110  51E3               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12121  005112  A4D8               	btfss	status,2,c
 12122  005114  D020               	goto	l1784
 12123                           
 12124                           ; BSR set to: 1
 12125                           ;usb_device.c: 2573: {
 12126                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12127  005116  0100               	movlb	0	; () banked
 12128  005118  EE20 F001          	lfsr	2,1
 12129  00511C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12130  00511E  26D9               	addwf	fsr2l,f,c
 12131  005120  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12132  005122  22DA               	addwfc	fsr2h,f,c
 12133  005124  0E08               	movlw	8
 12134  005126  6EDF               	movwf	indf2,c
 12135                           
 12136                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12137  005128  EE20 F002          	lfsr	2,2
 12138  00512C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12139  00512E  26D9               	addwf	fsr2l,f,c
 12140  005130  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12141  005132  22DA               	addwfc	fsr2h,f,c
 12142  005134  0E30               	movlw	48
 12143  005136  6EDE               	movwf	postinc2,c
 12144  005138  0E04               	movlw	4
 12145  00513A  6EDD               	movwf	postdec2,c
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12149  00513C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12150  005140  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12151  005144  0E0C               	movlw	12
 12152  005146  6EDF               	movwf	indf2,c
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12156  005148  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12157  00514C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12158  005150  0E00               	movlw	0
 12159  005152  8EDB               	bsf	plusw2,7,c
 12160                           
 12161                           ;usb_device.c: 2578: }
 12162  005154  0012               	return	
 12163  005156                     l1784:
 12164                           
 12165                           ;usb_device.c: 2579: else
 12166                           ;usb_device.c: 2580: {
 12167                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12168                           
 12169                           ; BSR set to: 0
 12170  005156  0E00               	movlw	0
 12171  005158  0101               	movlb	1	; () banked
 12172  00515A  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12173                           
 12174                           ; BSR set to: 1
 12175  00515C  0012               	return	
 12176  00515E                     __end_of_USBCtrlTrfOutHandler:
 12177                           	opt stack 0
 12178                           tosu	equ	0xFFF
 12179                           tosh	equ	0xFFE
 12180                           tosl	equ	0xFFD
 12181                           pclath	equ	0xFFA
 12182                           tblptru	equ	0xFF8
 12183                           tblptrh	equ	0xFF7
 12184                           tblptrl	equ	0xFF6
 12185                           tablat	equ	0xFF5
 12186                           prodh	equ	0xFF4
 12187                           prodl	equ	0xFF3
 12188                           intcon	equ	0xFF2
 12189                           intcon2	equ	0xFF1
 12190                           intcon3	equ	0xFF0
 12191                           indf0	equ	0xFEF
 12192                           postinc0	equ	0xFEE
 12193                           plusw0	equ	0xFEB
 12194                           fsr0h	equ	0xFEA
 12195                           fsr0l	equ	0xFE9
 12196                           wreg	equ	0xFE8
 12197                           postinc1	equ	0xFE6
 12198                           postdec1	equ	0xFE5
 12199                           fsr1h	equ	0xFE2
 12200                           fsr1l	equ	0xFE1
 12201                           indf2	equ	0xFDF
 12202                           postinc2	equ	0xFDE
 12203                           postdec2	equ	0xFDD
 12204                           plusw2	equ	0xFDB
 12205                           fsr2h	equ	0xFDA
 12206                           fsr2l	equ	0xFD9
 12207                           status	equ	0xFD8
 12208                           
 12209 ;; *************** function _USBCtrlTrfRxService *****************
 12210 ;; Defined at:
 12211 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12212 ;; Parameters:    Size  Location     Type
 12213 ;;		None
 12214 ;; Auto vars:     Size  Location     Type
 12215 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12216 ;;  i               1   29[BANK0 ] unsigned char 
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      void 
 12219 ;; Registers used:
 12220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12230 ;;Total ram usage:        2 bytes
 12231 ;; Hardware stack levels used:    1
 12232 ;; Hardware stack levels required when called:   12
 12233 ;; This function calls:
 12234 ;;		_USBCtrlEPAllowStatusStage
 12235 ;; This function is called by:
 12236 ;;		_USBCtrlTrfOutHandler
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text50
 12241  002E08                     __ptext50:
 12242                           	opt stack 0
 12243  002E08                     _USBCtrlTrfRxService:
 12244                           	opt stack 12
 12245                           
 12246                           ;usb_device.c: 1872: uint8_t byteToRead;
 12247                           ;usb_device.c: 1873: uint8_t i;
 12248                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12249                           
 12250                           ;incstack = 0
 12251  002E08  0100               	movlb	0	; () banked
 12252  002E0A  EE20 F001          	lfsr	2,1
 12253  002E0E  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12254  002E10  26D9               	addwf	fsr2l,f,c
 12255  002E12  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12256  002E14  22DA               	addwfc	fsr2h,f,c
 12257  002E16  50DF               	movf	indf2,w,c
 12258  002E18  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12262  002E1A  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12263  002E1C  0101               	movlb	1	; () banked
 12264  002E1E  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12265  002E20  0E00               	movlw	0
 12266  002E22  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12267  002E24  A0D8               	btfss	status,0,c
 12268                           
 12269                           ; BSR set to: 1
 12270                           ;usb_device.c: 1884: {
 12271                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12272  002E26  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;usb_device.c: 1886: }
 12276                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12277                           
 12278                           ; BSR set to: 1
 12279  002E2A  0100               	movlb	0	; () banked
 12280  002E2C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12281  002E2E  0101               	movlb	1	; () banked
 12282  002E30  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12283  002E32  0E00               	movlw	0
 12284  002E34  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12285                           
 12286                           ; BSR set to: 1
 12287                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12288  002E36  0E00               	movlw	0
 12289  002E38  0100               	movlb	0	; () banked
 12290  002E3A  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12291  002E3C  D013               	goto	l1710
 12292  002E3E                     
 12293                           ; BSR set to: 0
 12294                           ;usb_device.c: 1893: {
 12295                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12296                           
 12297                           ; BSR set to: 0
 12298  002E3E  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12299  002E40  0D01               	mullw	1
 12300  002E42  0E38               	movlw	56
 12301  002E44  24F3               	addwf	prodl,w,c
 12302  002E46  6ED9               	movwf	fsr2l,c
 12303  002E48  0E04               	movlw	4
 12304  002E4A  20F4               	addwfc	prodh,w,c
 12305  002E4C  6EDA               	movwf	fsr2h,c
 12306  002E4E  C1C9  FFE1         	movff	_outPipes,fsr1l
 12307  002E52  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12308  002E56  CFDF FFE7          	movff	indf2,indf1
 12309                           
 12310                           ; BSR set to: 0
 12311  002E5A  0101               	movlb	1	; () banked
 12312  002E5C  4BC9               	infsnz	_outPipes& (0+255),f,b
 12313  002E5E  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12314                           
 12315                           ; BSR set to: 1
 12316  002E60  0100               	movlb	0	; () banked
 12317  002E62  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12318  002E64                     l1710:
 12319                           
 12320                           ; BSR set to: 0
 12321                           
 12322                           ; BSR set to: 0
 12323  002E64  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12324  002E66  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12325  002E68  A0D8               	btfss	status,0,c
 12326  002E6A  D7E9               	goto	l1711
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;usb_device.c: 1895: }
 12330                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12331                           
 12332                           ; BSR set to: 0
 12333  002E6C  0101               	movlb	1	; () banked
 12334  002E6E  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12335  002E70  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12336  002E72  B4D8               	btfsc	status,2,c
 12337  002E74  D033               	goto	l1713
 12338                           
 12339                           ; BSR set to: 1
 12340                           ;usb_device.c: 1900: {
 12341                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12342  002E76  0100               	movlb	0	; () banked
 12343  002E78  EE20 F001          	lfsr	2,1
 12344  002E7C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12345  002E7E  26D9               	addwf	fsr2l,f,c
 12346  002E80  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12347  002E82  22DA               	addwfc	fsr2h,f,c
 12348  002E84  0E08               	movlw	8
 12349  002E86  6EDF               	movwf	indf2,c
 12350                           
 12351                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12352  002E88  EE20 F002          	lfsr	2,2
 12353  002E8C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12354  002E8E  26D9               	addwf	fsr2l,f,c
 12355  002E90  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12356  002E92  22DA               	addwfc	fsr2h,f,c
 12357  002E94  0E38               	movlw	56
 12358  002E96  6EDE               	movwf	postinc2,c
 12359  002E98  0E04               	movlw	4
 12360  002E9A  6EDD               	movwf	postdec2,c
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12364  002E9C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12365  002EA0  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12366  002EA4  BCDF               	btfsc	indf2,6,c
 12367  002EA6  D00D               	goto	l1714
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;usb_device.c: 1904: {
 12371                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12372  002EA8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12373  002EAC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12374  002EB0  0E48               	movlw	72
 12375  002EB2  6EDF               	movwf	indf2,c
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12379  002EB4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12380  002EB8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12381  002EBC  0E00               	movlw	0
 12382  002EBE  8EDB               	bsf	plusw2,7,c
 12383                           
 12384                           ;usb_device.c: 1907: }
 12385  002EC0  0012               	return	
 12386  002EC2                     l1714:
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;usb_device.c: 1908: else
 12390                           ;usb_device.c: 1909: {
 12391                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12392                           
 12393                           ; BSR set to: 0
 12394  002EC2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12395  002EC6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12396  002ECA  0E08               	movlw	8
 12397  002ECC  6EDF               	movwf	indf2,c
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12401  002ECE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12402  002ED2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12403  002ED6  0E00               	movlw	0
 12404  002ED8  8EDB               	bsf	plusw2,7,c
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;usb_device.c: 1912: }
 12408                           ;usb_device.c: 1913: }
 12409  002EDA  0012               	return	
 12410  002EDC                     l1713:
 12411                           
 12412                           ;usb_device.c: 1914: else
 12413                           ;usb_device.c: 1915: {
 12414                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12415                           
 12416                           ; BSR set to: 0
 12417  002EDC  0100               	movlb	0	; () banked
 12418  002EDE  EE20 F001          	lfsr	2,1
 12419  002EE2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12420  002EE4  26D9               	addwf	fsr2l,f,c
 12421  002EE6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12422  002EE8  22DA               	addwfc	fsr2h,f,c
 12423  002EEA  0E08               	movlw	8
 12424  002EEC  6EDF               	movwf	indf2,c
 12425                           
 12426                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12427  002EEE  EE20 F002          	lfsr	2,2
 12428  002EF2  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12429  002EF4  26D9               	addwf	fsr2l,f,c
 12430  002EF6  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12431  002EF8  22DA               	addwfc	fsr2h,f,c
 12432  002EFA  0E30               	movlw	48
 12433  002EFC  6EDE               	movwf	postinc2,c
 12434  002EFE  0E04               	movlw	4
 12435  002F00  6EDD               	movwf	postdec2,c
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12439  002F02  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12440  002F06  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12441  002F0A  0E04               	movlw	4
 12442  002F0C  6EDF               	movwf	indf2,c
 12443                           
 12444                           ; BSR set to: 0
 12445                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12446  002F0E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12447  002F12  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12448  002F16  0E00               	movlw	0
 12449  002F18  8EDB               	bsf	plusw2,7,c
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;usb_device.c: 1944: }
 12453                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12454                           
 12455                           ; BSR set to: 0
 12456  002F1A  0101               	movlb	1	; () banked
 12457  002F1C  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12458                           
 12459                           ; BSR set to: 1
 12460                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12461  002F1E  0100               	movlb	0	; () banked
 12462  002F20  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12463  002F22  A4D8               	btfss	status,2,c
 12464  002F24  0012               	return	
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;usb_device.c: 1960: {
 12468                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12469  002F26  EC5B  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12470  002F2A  0012               	return	
 12471  002F2C                     __end_of_USBCtrlTrfRxService:
 12472                           	opt stack 0
 12473                           tosu	equ	0xFFF
 12474                           tosh	equ	0xFFE
 12475                           tosl	equ	0xFFD
 12476                           pclath	equ	0xFFA
 12477                           tblptru	equ	0xFF8
 12478                           tblptrh	equ	0xFF7
 12479                           tblptrl	equ	0xFF6
 12480                           tablat	equ	0xFF5
 12481                           prodh	equ	0xFF4
 12482                           prodl	equ	0xFF3
 12483                           intcon	equ	0xFF2
 12484                           intcon2	equ	0xFF1
 12485                           intcon3	equ	0xFF0
 12486                           indf0	equ	0xFEF
 12487                           postinc0	equ	0xFEE
 12488                           plusw0	equ	0xFEB
 12489                           fsr0h	equ	0xFEA
 12490                           fsr0l	equ	0xFE9
 12491                           wreg	equ	0xFE8
 12492                           indf1	equ	0xFE7
 12493                           postinc1	equ	0xFE6
 12494                           postdec1	equ	0xFE5
 12495                           fsr1h	equ	0xFE2
 12496                           fsr1l	equ	0xFE1
 12497                           indf2	equ	0xFDF
 12498                           postinc2	equ	0xFDE
 12499                           postdec2	equ	0xFDD
 12500                           plusw2	equ	0xFDB
 12501                           fsr2h	equ	0xFDA
 12502                           fsr2l	equ	0xFD9
 12503                           status	equ	0xFD8
 12504                           
 12505 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12506 ;; Defined at:
 12507 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;		None
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;		None
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      void 
 12514 ;; Registers used:
 12515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12525 ;;Total ram usage:        0 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; Hardware stack levels required when called:   11
 12528 ;; This function calls:
 12529 ;;		Nothing
 12530 ;; This function is called by:
 12531 ;;		_USBDeviceTasks
 12532 ;;		_USBCtrlEPServiceComplete
 12533 ;;		_USBCtrlTrfRxService
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text51
 12538  003AB6                     __ptext51:
 12539                           	opt stack 0
 12540  003AB6                     _USBCtrlEPAllowStatusStage:
 12541                           	opt stack 12
 12542                           
 12543                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12544                           
 12545                           ;incstack = 0
 12546  003AB6  0100               	movlb	0	; () banked
 12547  003AB8  51C8               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12548  003ABA  A4D8               	btfss	status,2,c
 12549  003ABC  0012               	return	
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;usb_device.c: 1442: {
 12553                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12554  003ABE  0E01               	movlw	1
 12555  003AC0  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12556                           
 12557                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12558  003AC2  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12559  003AC4  A4D8               	btfss	status,2,c
 12560  003AC6  0012               	return	
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;usb_device.c: 1445: {
 12564                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12565  003AC8  0E01               	movlw	1
 12566  003ACA  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12567                           
 12568                           ; BSR set to: 0
 12569                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12570  003ACC  0E02               	movlw	2
 12571  003ACE  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12572  003AD0  A4D8               	btfss	status,2,c
 12573  003AD2  D015               	goto	l1664
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;usb_device.c: 1451: {
 12577                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12578  003AD4  EE20 F001          	lfsr	2,1
 12579  003AD8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12580  003ADA  26D9               	addwf	fsr2l,f,c
 12581  003ADC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12582  003ADE  22DA               	addwfc	fsr2h,f,c
 12583  003AE0  0E00               	movlw	0
 12584  003AE2  6EDF               	movwf	indf2,c
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12588  003AE4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12589  003AE8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12590  003AEC  0E48               	movlw	72
 12591  003AEE  6EDF               	movwf	indf2,c
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12595  003AF0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12596  003AF4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12597  003AF8  0E00               	movlw	0
 12598  003AFA  8EDB               	bsf	plusw2,7,c
 12599                           
 12600                           ;usb_device.c: 1455: }
 12601  003AFC  0012               	return	
 12602  003AFE                     l1664:
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12606                           
 12607                           ; BSR set to: 0
 12608  003AFE  05CC               	decf	_controlTransferState& (0+255),w,b
 12609  003B00  A4D8               	btfss	status,2,c
 12610  003B02  0012               	return	
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;usb_device.c: 1457: {
 12614                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12615  003B04  0E00               	movlw	0
 12616  003B06  0101               	movlb	1	; () banked
 12617  003B08  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12618                           
 12619                           ; BSR set to: 1
 12620                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12621  003B0A  0100               	movlb	0	; () banked
 12622  003B0C  EE20 F001          	lfsr	2,1
 12623  003B10  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12624  003B12  26D9               	addwf	fsr2l,f,c
 12625  003B14  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12626  003B16  22DA               	addwfc	fsr2h,f,c
 12627  003B18  0E08               	movlw	8
 12628  003B1A  6EDF               	movwf	indf2,c
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12632  003B1C  EE20 F002          	lfsr	2,2
 12633  003B20  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12634  003B22  26D9               	addwf	fsr2l,f,c
 12635  003B24  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12636  003B26  22DA               	addwfc	fsr2h,f,c
 12637  003B28  0E30               	movlw	48
 12638  003B2A  6EDE               	movwf	postinc2,c
 12639  003B2C  0E04               	movlw	4
 12640  003B2E  6EDD               	movwf	postdec2,c
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12644  003B30  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12645  003B34  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12646  003B38  0E04               	movlw	4
 12647  003B3A  6EDF               	movwf	indf2,c
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12651  003B3C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12652  003B40  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12653  003B44  0E00               	movlw	0
 12654  003B46  8EDB               	bsf	plusw2,7,c
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12658  003B48  0E01               	movlw	1
 12659  003B4A  0101               	movlb	1	; () banked
 12660  003B4C  6FE3               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12661                           
 12662                           ; BSR set to: 1
 12663                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12664  003B4E  0100               	movlb	0	; () banked
 12665  003B50  EE20 F001          	lfsr	2,1
 12666  003B54  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12667  003B56  26D9               	addwf	fsr2l,f,c
 12668  003B58  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12669  003B5A  22DA               	addwfc	fsr2h,f,c
 12670  003B5C  0E08               	movlw	8
 12671  003B5E  6EDF               	movwf	indf2,c
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12675  003B60  EE20 F002          	lfsr	2,2
 12676  003B64  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12677  003B66  26D9               	addwf	fsr2l,f,c
 12678  003B68  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12679  003B6A  22DA               	addwfc	fsr2h,f,c
 12680  003B6C  0E30               	movlw	48
 12681  003B6E  6EDE               	movwf	postinc2,c
 12682  003B70  0E04               	movlw	4
 12683  003B72  6EDD               	movwf	postdec2,c
 12684                           
 12685                           ; BSR set to: 0
 12686                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12687  003B74  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12688  003B78  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12689  003B7C  0E80               	movlw	128
 12690  003B7E  6EDF               	movwf	indf2,c
 12691                           
 12692                           ; BSR set to: 0
 12693                           
 12694                           ; BSR set to: 0
 12695                           
 12696                           ; BSR set to: 0
 12697  003B80  0012               	return	
 12698  003B82                     __end_of_USBCtrlEPAllowStatusStage:
 12699                           	opt stack 0
 12700                           tosu	equ	0xFFF
 12701                           tosh	equ	0xFFE
 12702                           tosl	equ	0xFFD
 12703                           pclath	equ	0xFFA
 12704                           tblptru	equ	0xFF8
 12705                           tblptrh	equ	0xFF7
 12706                           tblptrl	equ	0xFF6
 12707                           tablat	equ	0xFF5
 12708                           prodh	equ	0xFF4
 12709                           prodl	equ	0xFF3
 12710                           intcon	equ	0xFF2
 12711                           intcon2	equ	0xFF1
 12712                           intcon3	equ	0xFF0
 12713                           indf0	equ	0xFEF
 12714                           postinc0	equ	0xFEE
 12715                           plusw0	equ	0xFEB
 12716                           fsr0h	equ	0xFEA
 12717                           fsr0l	equ	0xFE9
 12718                           wreg	equ	0xFE8
 12719                           indf1	equ	0xFE7
 12720                           postinc1	equ	0xFE6
 12721                           postdec1	equ	0xFE5
 12722                           fsr1h	equ	0xFE2
 12723                           fsr1l	equ	0xFE1
 12724                           indf2	equ	0xFDF
 12725                           postinc2	equ	0xFDE
 12726                           postdec2	equ	0xFDD
 12727                           plusw2	equ	0xFDB
 12728                           fsr2h	equ	0xFDA
 12729                           fsr2l	equ	0xFD9
 12730                           status	equ	0xFD8
 12731                           
 12732 ;; *************** function _USBCtrlTrfInHandler *****************
 12733 ;; Defined at:
 12734 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;		None
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  1    wreg      void 
 12741 ;; Registers used:
 12742 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12752 ;;Total ram usage:        1 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; Hardware stack levels required when called:   12
 12755 ;; This function calls:
 12756 ;;		_USBCtrlTrfTxService
 12757 ;; This function is called by:
 12758 ;;		_USBCtrlEPService
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text52
 12763  003F68                     __ptext52:
 12764                           	opt stack 0
 12765  003F68                     _USBCtrlTrfInHandler:
 12766                           	opt stack 13
 12767                           
 12768                           ;usb_device.c: 2611: uint8_t lastDTS;
 12769                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;incstack = 0
 12773  003F68  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12774  003F6C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12775  003F70  0100               	movlb	0	; () banked
 12776  003F72  0E00               	movlw	0
 12777  003F74  BCDF               	btfsc	indf2,6,c
 12778  003F76  0E01               	movlw	1
 12779  003F78  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12780                           
 12781                           ; BSR set to: 0
 12782                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12783  003F7A  0E04               	movlw	4
 12784  003F7C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12788  003F7E  0E08               	movlw	8
 12789  003F80  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12790  003F82  A4D8               	btfss	status,2,c
 12791  003F84  D00D               	goto	l1791
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;usb_device.c: 2622: {
 12795                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12796  003F86  0104               	movlb	4	; () banked
 12797  003F88  5132               	movf	50,w,b	;volatile
 12798  003F8A  0B7F               	andlw	127
 12799  003F8C  010F               	movlb	15	; () banked
 12800  003F8E  6F38               	movwf	56,b	;volatile
 12801                           
 12802                           ; BSR set to: 15
 12803                           ;usb_device.c: 2624: if(UADDR != 0u)
 12804  003F90  5138               	movf	56,w,b	;volatile
 12805  003F92  B4D8               	btfsc	status,2,c
 12806  003F94  D002               	goto	l1790
 12807                           
 12808                           ; BSR set to: 15
 12809                           ;usb_device.c: 2625: {
 12810                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12811  003F96  0E10               	movlw	16
 12812  003F98  D001               	goto	L11
 12813  003F9A                     l1790:
 12814                           
 12815                           ;usb_device.c: 2628: else
 12816                           ;usb_device.c: 2629: {
 12817                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12818                           
 12819                           ; BSR set to: 0
 12820  003F9A  0E04               	movlw	4
 12821  003F9C                     L11:
 12822  003F9C  0100               	movlb	0	; () banked
 12823  003F9E  6FCE               	movwf	_USBDeviceState& (0+255),b
 12824  003FA0                     l1791:
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;usb_device.c: 2631: }
 12828                           ;usb_device.c: 2632: }
 12829                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12830                           
 12831                           ; BSR set to: 0
 12832                           
 12833                           ; BSR set to: 0
 12834  003FA0  05CC               	decf	_controlTransferState& (0+255),w,b
 12835  003FA2  A4D8               	btfss	status,2,c
 12836  003FA4  D03B               	goto	l1792
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;usb_device.c: 2636: {
 12840                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12841  003FA6  EE20 F002          	lfsr	2,2
 12842  003FAA  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12843  003FAC  26D9               	addwf	fsr2l,f,c
 12844  003FAE  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12845  003FB0  22DA               	addwfc	fsr2h,f,c
 12846  003FB2  0E38               	movlw	56
 12847  003FB4  6EDE               	movwf	postinc2,c
 12848  003FB6  0E04               	movlw	4
 12849  003FB8  6EDD               	movwf	postdec2,c
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12853  003FBA  ECE6  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12854                           
 12855                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12856  003FBE  0E02               	movlw	2
 12857  003FC0  0100               	movlb	0	; () banked
 12858  003FC2  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 12859  003FC4  A4D8               	btfss	status,2,c
 12860  003FC6  D00D               	goto	l1793
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;usb_device.c: 2645: {
 12864                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12865  003FC8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12866  003FCC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12867  003FD0  0E04               	movlw	4
 12868  003FD2  6EDF               	movwf	indf2,c
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12872  003FD4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12873  003FD8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12874  003FDC  0E00               	movlw	0
 12875  003FDE  8EDB               	bsf	plusw2,7,c
 12876                           
 12877                           ;usb_device.c: 2650: }
 12878  003FE0  0012               	return	
 12879  003FE2                     l1793:
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;usb_device.c: 2651: else
 12883                           ;usb_device.c: 2652: {
 12884                           ;usb_device.c: 2653: if(lastDTS == 0)
 12885                           
 12886                           ; BSR set to: 0
 12887  003FE2  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12888  003FE4  A4D8               	btfss	status,2,c
 12889  003FE6  D00D               	goto	l1795
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;usb_device.c: 2654: {
 12893                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12894  003FE8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12895  003FEC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12896  003FF0  0E48               	movlw	72
 12897  003FF2  6EDF               	movwf	indf2,c
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12901  003FF4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12902  003FF8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12903  003FFC  0E00               	movlw	0
 12904  003FFE  8EDB               	bsf	plusw2,7,c
 12905                           
 12906                           ;usb_device.c: 2657: }
 12907  004000  0012               	return	
 12908  004002                     l1795:
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;usb_device.c: 2658: else
 12912                           ;usb_device.c: 2659: {
 12913                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12914                           
 12915                           ; BSR set to: 0
 12916  004002  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12917  004006  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12918  00400A  0E08               	movlw	8
 12919  00400C  6EDF               	movwf	indf2,c
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12923  00400E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12924  004012  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12925  004016  0E00               	movlw	0
 12926  004018  8EDB               	bsf	plusw2,7,c
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;usb_device.c: 2662: }
 12930                           ;usb_device.c: 2663: }
 12931                           ;usb_device.c: 2664: }
 12932                           
 12933                           ; BSR set to: 0
 12934  00401A  0012               	return	
 12935  00401C                     l1792:
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;usb_device.c: 2665: else
 12939                           ;usb_device.c: 2666: {
 12940                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12941  00401C  0101               	movlb	1	; () banked
 12942  00401E  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12943                           
 12944                           ; BSR set to: 1
 12945                           ;usb_device.c: 2675: }
 12946                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12947                           
 12948                           ; BSR set to: 1
 12949  004020  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12950                           
 12951                           ; BSR set to: 1
 12952                           ;usb_device.c: 2677: }
 12953                           ;usb_device.c: 2679: controlTransferState = 0;
 12954                           
 12955                           ; BSR set to: 1
 12956  004022  0E00               	movlw	0
 12957  004024  0100               	movlb	0	; () banked
 12958  004026  6FCC               	movwf	_controlTransferState& (0+255),b
 12959  004028  0012               	return	
 12960  00402A                     __end_of_USBCtrlTrfInHandler:
 12961                           	opt stack 0
 12962                           tosu	equ	0xFFF
 12963                           tosh	equ	0xFFE
 12964                           tosl	equ	0xFFD
 12965                           pclath	equ	0xFFA
 12966                           tblptru	equ	0xFF8
 12967                           tblptrh	equ	0xFF7
 12968                           tblptrl	equ	0xFF6
 12969                           tablat	equ	0xFF5
 12970                           prodh	equ	0xFF4
 12971                           prodl	equ	0xFF3
 12972                           intcon	equ	0xFF2
 12973                           intcon2	equ	0xFF1
 12974                           intcon3	equ	0xFF0
 12975                           indf0	equ	0xFEF
 12976                           postinc0	equ	0xFEE
 12977                           plusw0	equ	0xFEB
 12978                           fsr0h	equ	0xFEA
 12979                           fsr0l	equ	0xFE9
 12980                           wreg	equ	0xFE8
 12981                           indf1	equ	0xFE7
 12982                           postinc1	equ	0xFE6
 12983                           postdec1	equ	0xFE5
 12984                           fsr1h	equ	0xFE2
 12985                           fsr1l	equ	0xFE1
 12986                           indf2	equ	0xFDF
 12987                           postinc2	equ	0xFDE
 12988                           postdec2	equ	0xFDD
 12989                           plusw2	equ	0xFDB
 12990                           fsr2h	equ	0xFDA
 12991                           fsr2l	equ	0xFD9
 12992                           status	equ	0xFD8
 12993                           
 12994 ;; *************** function _USBCtrlTrfTxService *****************
 12995 ;; Defined at:
 12996 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;		None
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  1    wreg      void 
 13003 ;; Registers used:
 13004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13005 ;; Tracked objects:
 13006 ;;		On entry : 0/0
 13007 ;;		On exit  : 0/0
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13013 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13014 ;;Total ram usage:        1 bytes
 13015 ;; Hardware stack levels used:    1
 13016 ;; Hardware stack levels required when called:   11
 13017 ;; This function calls:
 13018 ;;		Nothing
 13019 ;; This function is called by:
 13020 ;;		_USBCtrlEPAllowDataStage
 13021 ;;		_USBCtrlTrfInHandler
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text53
 13026  0035CC                     __ptext53:
 13027                           	opt stack 0
 13028  0035CC                     _USBCtrlTrfTxService:
 13029                           	opt stack 11
 13030                           
 13031                           ;usb_device.c: 1791: uint8_t byteToSend;
 13032                           ;usb_device.c: 1795: byteToSend = 8;
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;incstack = 0
 13036  0035CC  0E08               	movlw	8
 13037  0035CE  0100               	movlb	0	; () banked
 13038  0035D0  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13042  0035D2  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13043  0035D4  E110               	bnz	l12093
 13044  0035D6  0E08               	movlw	8
 13045  0035D8  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13046  0035DA  B0D8               	btfsc	status,0,c
 13047  0035DC  D00C               	goto	l1697
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;usb_device.c: 1797: {
 13051                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13052  0035DE  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13056  0035E2  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13057  0035E4  A4D8               	btfss	status,2,c
 13058  0035E6  D002               	goto	l1695
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;usb_device.c: 1806: {
 13062                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13063  0035E8  0E01               	movlw	1
 13064  0035EA  D004               	goto	L12
 13065  0035EC                     l1695:
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13069                           
 13070                           ; BSR set to: 0
 13071  0035EC  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13072  0035EE  A4D8               	btfss	status,2,c
 13073  0035F0  D002               	goto	l1697
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;usb_device.c: 1810: {
 13077                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13078  0035F2  0E02               	movlw	2
 13079  0035F4                     L12:
 13080  0035F4  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13081  0035F6                     l1697:
 13082  0035F6                     l12093:
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;usb_device.c: 1812: }
 13086                           ;usb_device.c: 1813: }
 13087                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13088  0035F6  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13089  0035F8  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13090  0035FA  0E00               	movlw	0
 13091  0035FC  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13095  0035FE  EE20 F001          	lfsr	2,1
 13096  003602  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13097  003604  26D9               	addwf	fsr2l,f,c
 13098  003606  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13099  003608  22DA               	addwfc	fsr2h,f,c
 13100  00360A  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13104  00360E  0E38               	movlw	56
 13105  003610  0102               	movlb	2	; () banked
 13106  003612  6FD4               	movwf	_pDst& (0+255),b
 13107  003614  0E04               	movlw	4
 13108  003616  6FD5               	movwf	(_pDst+1)& (0+255),b
 13109                           
 13110                           ; BSR set to: 2
 13111                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13112  003618  0100               	movlb	0	; () banked
 13113  00361A  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13114  00361C  D01E               	goto	l1699
 13115  00361E  D03E               	goto	l1703
 13116  003620                     
 13117                           ; BSR set to: 0
 13118                           ;usb_device.c: 1830: {
 13119                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13120                           
 13121                           ; BSR set to: 0
 13122  003620  C0B0  FFF6         	movff	_inPipes,tblptrl
 13123  003624  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13124  003628  6AF8               	clrf	tblptru,c
 13125  00362A  C2D4  FFD9         	movff	_pDst,fsr2l
 13126  00362E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13127  003632  0E0E               	movlw	(high __ramtop+-1)
 13128  003634  64F7               	cpfsgt	tblptrh,c
 13129  003636  D003               	bra	u10677
 13130  003638  0008               	tblrd		*
 13131  00363A  50F5               	movf	tablat,w,c
 13132  00363C  D005               	bra	u10670
 13133  00363E                     u10677:
 13134  00363E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13135  003642  CFF7 FFEA          	movff	tblptrh,fsr0h
 13136  003646  50EF               	movf	indf0,w,c
 13137  003648                     u10670:
 13138  003648  6EDF               	movwf	indf2,c
 13139  00364A  0100               	movlb	0	; () banked
 13140  00364C  4BB0               	infsnz	_inPipes& (0+255),f,b
 13141  00364E  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13142                           
 13143                           ; BSR set to: 0
 13144  003650  0102               	movlb	2	; () banked
 13145  003652  4BD4               	infsnz	_pDst& (0+255),f,b
 13146  003654  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13147                           
 13148                           ; BSR set to: 2
 13149                           ;usb_device.c: 1832: byteToSend--;
 13150  003656  0100               	movlb	0	; () banked
 13151  003658  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13152  00365A                     l1699:
 13153                           
 13154                           ; BSR set to: 0
 13155                           
 13156                           ; BSR set to: 0
 13157  00365A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13158  00365C  B4D8               	btfsc	status,2,c
 13159  00365E  0012               	return	
 13160  003660  D7DF               	goto	l1700
 13161  003662                     
 13162                           ; BSR set to: 0
 13163                           ;usb_device.c: 1838: {
 13164                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13165                           
 13166                           ; BSR set to: 0
 13167  003662  C0B0  FFF6         	movff	_inPipes,tblptrl
 13168  003666  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13169  00366A  6AF8               	clrf	tblptru,c
 13170  00366C  C2D4  FFD9         	movff	_pDst,fsr2l
 13171  003670  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13172  003674  0E0E               	movlw	(high __ramtop+-1)
 13173  003676  64F7               	cpfsgt	tblptrh,c
 13174  003678  D003               	bra	u10697
 13175  00367A  0008               	tblrd		*
 13176  00367C  50F5               	movf	tablat,w,c
 13177  00367E  D005               	bra	u10690
 13178  003680                     u10697:
 13179  003680  CFF6 FFE9          	movff	tblptrl,fsr0l
 13180  003684  CFF7 FFEA          	movff	tblptrh,fsr0h
 13181  003688  50EF               	movf	indf0,w,c
 13182  00368A                     u10690:
 13183  00368A  6EDF               	movwf	indf2,c
 13184  00368C  0100               	movlb	0	; () banked
 13185  00368E  4BB0               	infsnz	_inPipes& (0+255),f,b
 13186  003690  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13187                           
 13188                           ; BSR set to: 0
 13189  003692  0102               	movlb	2	; () banked
 13190  003694  4BD4               	infsnz	_pDst& (0+255),f,b
 13191  003696  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13192                           
 13193                           ; BSR set to: 2
 13194                           ;usb_device.c: 1840: byteToSend--;
 13195  003698  0100               	movlb	0	; () banked
 13196  00369A  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13197  00369C                     l1703:
 13198                           
 13199                           ; BSR set to: 0
 13200                           
 13201                           ; BSR set to: 0
 13202  00369C  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13203  00369E  B4D8               	btfsc	status,2,c
 13204  0036A0  0012               	return	
 13205  0036A2  D7DF               	goto	l1704
 13206  0036A4                     __end_of_USBCtrlTrfTxService:
 13207                           	opt stack 0
 13208                           tosu	equ	0xFFF
 13209                           tosh	equ	0xFFE
 13210                           tosl	equ	0xFFD
 13211                           pclath	equ	0xFFA
 13212                           tblptru	equ	0xFF8
 13213                           tblptrh	equ	0xFF7
 13214                           tblptrl	equ	0xFF6
 13215                           tablat	equ	0xFF5
 13216                           prodh	equ	0xFF4
 13217                           prodl	equ	0xFF3
 13218                           intcon	equ	0xFF2
 13219                           intcon2	equ	0xFF1
 13220                           intcon3	equ	0xFF0
 13221                           indf0	equ	0xFEF
 13222                           postinc0	equ	0xFEE
 13223                           plusw0	equ	0xFEB
 13224                           fsr0h	equ	0xFEA
 13225                           fsr0l	equ	0xFE9
 13226                           wreg	equ	0xFE8
 13227                           indf1	equ	0xFE7
 13228                           postinc1	equ	0xFE6
 13229                           postdec1	equ	0xFE5
 13230                           fsr1h	equ	0xFE2
 13231                           fsr1l	equ	0xFE1
 13232                           indf2	equ	0xFDF
 13233                           postinc2	equ	0xFDE
 13234                           postdec2	equ	0xFDD
 13235                           plusw2	equ	0xFDB
 13236                           fsr2h	equ	0xFDA
 13237                           fsr2l	equ	0xFD9
 13238                           status	equ	0xFD8
 13239                           
 13240 ;; *************** function _CDCTxService *****************
 13241 ;; Defined at:
 13242 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;		None
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13247 ;;  i               1   36[BANK0 ] unsigned char 
 13248 ;; Return value:  Size  Location     Type
 13249 ;;                  1    wreg      void 
 13250 ;; Registers used:
 13251 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13252 ;; Tracked objects:
 13253 ;;		On entry : 0/0
 13254 ;;		On exit  : 0/0
 13255 ;;		Unchanged: 0/0
 13256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13261 ;;Total ram usage:        2 bytes
 13262 ;; Hardware stack levels used:    1
 13263 ;; Hardware stack levels required when called:   12
 13264 ;; This function calls:
 13265 ;;		_USBTransferOnePacket
 13266 ;; This function is called by:
 13267 ;;		_UsbDevice_MainTask
 13268 ;; This function uses a non-reentrant model
 13269 ;;
 13270                           
 13271                           	psect	text54
 13272  0026C6                     __ptext54:
 13273                           	opt stack 0
 13274  0026C6                     _CDCTxService:
 13275                           	opt stack 15
 13276                           
 13277                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13278                           ;usb_device_cdc.c: 842: uint8_t i;
 13279                           ;usb_device_cdc.c: 844: ;
 13280                           ;usb_device_cdc.c: 846: {};
 13281                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;incstack = 0
 13285  0026C6  0101               	movlb	1	; () banked
 13286  0026C8  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13287  0026CA  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13288  0026CC  B4D8               	btfsc	status,2,c
 13289  0026CE  D006               	goto	l1949
 13290                           
 13291                           ; BSR set to: 1
 13292  0026D0  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13293  0026D4  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13294  0026D8  BEDF               	btfsc	indf2,7,c
 13295  0026DA  0012               	return	
 13296  0026DC                     l1949:
 13297                           
 13298                           ; BSR set to: 1
 13299                           ;usb_device_cdc.c: 852: }
 13300                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13301                           
 13302                           ; BSR set to: 1
 13303  0026DC  0E03               	movlw	3
 13304  0026DE  0100               	movlb	0	; () banked
 13305  0026E0  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13306  0026E2  A4D8               	btfss	status,2,c
 13307  0026E4  D002               	goto	l1951
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13311  0026E6  0E00               	movlw	0
 13312  0026E8  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13313  0026EA                     l1951:
 13314                           
 13315                           ; BSR set to: 0
 13316                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13317  0026EA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13318  0026EC  B4D8               	btfsc	status,2,c
 13319  0026EE  0012               	return	
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;usb_device_cdc.c: 869: }
 13323                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13324                           
 13325                           ; BSR set to: 0
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;usb_device_cdc.c: 866: {
 13329                           ;usb_device_cdc.c: 867: ;
 13330                           ;usb_device_cdc.c: 868: return;
 13331  0026F0  0E02               	movlw	2
 13332  0026F2  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13333  0026F4  A4D8               	btfss	status,2,c
 13334  0026F6  D013               	goto	l1953
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;usb_device_cdc.c: 875: {
 13338                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13339  0026F8  0E01               	movlw	1
 13340  0026FA  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13341  0026FC  0E00               	movlw	0
 13342  0026FE  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13343  002700  0E00               	movlw	0
 13344  002702  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13345  002704  0E00               	movlw	0
 13346  002706  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13347  002708  0E02               	movlw	2
 13348  00270A  EC15  F020         	call	_USBTransferOnePacket
 13349  00270E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13350  002712  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13351                           
 13352                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13353  002716  0E03               	movlw	3
 13354  002718  0100               	movlb	0	; () banked
 13355  00271A  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13356                           
 13357                           ;usb_device_cdc.c: 879: }
 13358  00271C  0012               	return	
 13359  00271E                     l1953:
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13363                           
 13364                           ; BSR set to: 0
 13365  00271E  05C6               	decf	_cdc_trf_state& (0+255),w,b
 13366  002720  A4D8               	btfss	status,2,c
 13367  002722  0012               	return	
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;usb_device_cdc.c: 881: {
 13371                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13372  002724  0E40               	movlw	64
 13373  002726  65C5               	cpfsgt	_cdc_tx_len& (0+255),b
 13374  002728  D003               	goto	l1956
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13378  00272A  0E40               	movlw	64
 13379  00272C  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13380  00272E  D002               	goto	l1957
 13381  002730                     l1956:
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;usb_device_cdc.c: 887: else
 13385                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13386  002730  C0C5  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13387  002734                     l1957:
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13391                           
 13392                           ; BSR set to: 0
 13393  002734  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13394  002736  0800               	sublw	0
 13395  002738  25C5               	addwf	_cdc_tx_len& (0+255),w,b
 13396  00273A  6FC5               	movwf	_cdc_tx_len& (0+255),b
 13397                           
 13398                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13399  00273C  0EB6               	movlw	low _cdc_data_tx
 13400  00273E  0102               	movlb	2	; () banked
 13401  002740  6FC8               	movwf	_pCDCDst& (0+255),b
 13402  002742  0E07               	movlw	high _cdc_data_tx
 13403  002744  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13404                           
 13405                           ; BSR set to: 2
 13406                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13407  002746  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13408                           
 13409                           ; BSR set to: 2
 13410                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13411  00274A  0101               	movlb	1	; () banked
 13412  00274C  51E1               	movf	_cdc_mem_type& (0+255),w,b
 13413  00274E  B4D8               	btfsc	status,2,c
 13414  002750  D01D               	goto	l1959
 13415  002752  D03D               	goto	l1963
 13416  002754                     
 13417                           ;usb_device_cdc.c: 901: {
 13418                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13419                           
 13420                           ; BSR set to: 1
 13421  002754  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13422  002758  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13423  00275C  6AF8               	clrf	tblptru,c
 13424  00275E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13425  002762  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13426  002766  0E0E               	movlw	(high __ramtop+-1)
 13427  002768  64F7               	cpfsgt	tblptrh,c
 13428  00276A  D003               	bra	u14637
 13429  00276C  0008               	tblrd		*
 13430  00276E  50F5               	movf	tablat,w,c
 13431  002770  D005               	bra	u14630
 13432  002772                     u14637:
 13433  002772  CFF6 FFE9          	movff	tblptrl,fsr0l
 13434  002776  CFF7 FFEA          	movff	tblptrh,fsr0h
 13435  00277A  50EF               	movf	indf0,w,c
 13436  00277C                     u14630:
 13437  00277C  6EDF               	movwf	indf2,c
 13438                           
 13439                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13440  00277E  0102               	movlb	2	; () banked
 13441  002780  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13442  002782  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13443                           
 13444                           ; BSR set to: 2
 13445                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13446  002784  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13447  002786  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13448                           
 13449                           ; BSR set to: 2
 13450                           ;usb_device_cdc.c: 905: i--;
 13451  002788  0100               	movlb	0	; () banked
 13452  00278A  0784               	decf	CDCTxService@i& (0+255),f,b
 13453  00278C                     l1959:
 13454                           
 13455                           ; BSR set to: 0
 13456  00278C  0100               	movlb	0	; () banked
 13457  00278E  5184               	movf	CDCTxService@i& (0+255),w,b
 13458  002790  B4D8               	btfsc	status,2,c
 13459  002792  D021               	goto	u14660
 13460  002794  D7DF               	goto	l1960
 13461  002796                     
 13462                           ; BSR set to: 0
 13463                           ;usb_device_cdc.c: 911: {
 13464                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13465                           
 13466                           ; BSR set to: 0
 13467  002796  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13468  00279A  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13469  00279E  6AF8               	clrf	tblptru,c
 13470  0027A0  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13471  0027A4  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13472  0027A8  0E0E               	movlw	(high __ramtop+-1)
 13473  0027AA  64F7               	cpfsgt	tblptrh,c
 13474  0027AC  D003               	bra	u14657
 13475  0027AE  0008               	tblrd		*
 13476  0027B0  50F5               	movf	tablat,w,c
 13477  0027B2  D005               	bra	u14650
 13478  0027B4                     u14657:
 13479  0027B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13480  0027B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13481  0027BC  50EF               	movf	indf0,w,c
 13482  0027BE                     u14650:
 13483  0027BE  6EDF               	movwf	indf2,c
 13484                           
 13485                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13486  0027C0  0102               	movlb	2	; () banked
 13487  0027C2  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13488  0027C4  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13489                           
 13490                           ; BSR set to: 2
 13491                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13492  0027C6  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13493  0027C8  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13494                           
 13495                           ; BSR set to: 2
 13496                           ;usb_device_cdc.c: 915: i--;
 13497  0027CA  0100               	movlb	0	; () banked
 13498  0027CC  0784               	decf	CDCTxService@i& (0+255),f,b
 13499  0027CE                     l1963:
 13500                           
 13501                           ; BSR set to: 0
 13502  0027CE  0100               	movlb	0	; () banked
 13503  0027D0  5184               	movf	CDCTxService@i& (0+255),w,b
 13504  0027D2  A4D8               	btfss	status,2,c
 13505  0027D4  D7E0               	goto	l1964
 13506  0027D6                     u14660:
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;usb_device_cdc.c: 916: }
 13510                           ;usb_device_cdc.c: 917: }
 13511                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13512                           
 13513                           ; BSR set to: 0
 13514                           
 13515                           ; BSR set to: 0
 13516  0027D6  51C5               	movf	_cdc_tx_len& (0+255),w,b
 13517  0027D8  A4D8               	btfss	status,2,c
 13518  0027DA  D008               	goto	l1968
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;usb_device_cdc.c: 924: {
 13522                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13523  0027DC  0E40               	movlw	64
 13524  0027DE  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13525  0027E0  A4D8               	btfss	status,2,c
 13526  0027E2  D002               	goto	l1967
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13530  0027E4  0E02               	movlw	2
 13531  0027E6  D001               	goto	L13
 13532  0027E8                     l1967:
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;usb_device_cdc.c: 927: else
 13536                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13537                           
 13538                           ; BSR set to: 0
 13539  0027E8  0E03               	movlw	3
 13540  0027EA                     L13:
 13541  0027EA  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13542  0027EC                     l1968:
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;usb_device_cdc.c: 929: }
 13546                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13547                           
 13548                           ; BSR set to: 0
 13549                           
 13550                           ; BSR set to: 0
 13551  0027EC  0E01               	movlw	1
 13552  0027EE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13553  0027F0  0EB6               	movlw	low _cdc_data_tx
 13554  0027F2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13555  0027F4  0E07               	movlw	high _cdc_data_tx
 13556  0027F6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13557  0027F8  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13558  0027FC  0E02               	movlw	2
 13559  0027FE  EC15  F020         	call	_USBTransferOnePacket
 13560  002802  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13561  002806  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13562  00280A  0012               	return	
 13563  00280C                     __end_of_CDCTxService:
 13564                           	opt stack 0
 13565                           tosu	equ	0xFFF
 13566                           tosh	equ	0xFFE
 13567                           tosl	equ	0xFFD
 13568                           pclath	equ	0xFFA
 13569                           tblptru	equ	0xFF8
 13570                           tblptrh	equ	0xFF7
 13571                           tblptrl	equ	0xFF6
 13572                           tablat	equ	0xFF5
 13573                           prodh	equ	0xFF4
 13574                           prodl	equ	0xFF3
 13575                           intcon	equ	0xFF2
 13576                           intcon2	equ	0xFF1
 13577                           intcon3	equ	0xFF0
 13578                           indf0	equ	0xFEF
 13579                           postinc0	equ	0xFEE
 13580                           plusw0	equ	0xFEB
 13581                           fsr0h	equ	0xFEA
 13582                           fsr0l	equ	0xFE9
 13583                           wreg	equ	0xFE8
 13584                           indf1	equ	0xFE7
 13585                           postinc1	equ	0xFE6
 13586                           postdec1	equ	0xFE5
 13587                           fsr1h	equ	0xFE2
 13588                           fsr1l	equ	0xFE1
 13589                           indf2	equ	0xFDF
 13590                           postinc2	equ	0xFDE
 13591                           postdec2	equ	0xFDD
 13592                           plusw2	equ	0xFDB
 13593                           fsr2h	equ	0xFDA
 13594                           fsr2l	equ	0xFD9
 13595                           status	equ	0xFD8
 13596                           
 13597 ;; *************** function _Term_MainSm *****************
 13598 ;; Defined at:
 13599 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13600 ;; Parameters:    Size  Location     Type
 13601 ;;		None
 13602 ;; Auto vars:     Size  Location     Type
 13603 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13604 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13605 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13606 ;;  FwkBuildYear    4    0        unsigned char [4]
 13607 ;;  FwkBuildMont    4    0        unsigned char [4]
 13608 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13609 ;; Return value:  Size  Location     Type
 13610 ;;                  1    wreg      void 
 13611 ;; Registers used:
 13612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13613 ;; Tracked objects:
 13614 ;;		On entry : 0/0
 13615 ;;		On exit  : 0/0
 13616 ;;		Unchanged: 0/0
 13617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13619 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13621 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13622 ;;Total ram usage:       12 bytes
 13623 ;; Hardware stack levels used:    1
 13624 ;; Hardware stack levels required when called:   16
 13625 ;; This function calls:
 13626 ;;		_OsTmr_GetTimerStatus
 13627 ;;		_OsTmr_StartTimer
 13628 ;;		_Terminal
 13629 ;;		_memset
 13630 ;;		_putUSBUSART
 13631 ;;		_sprintf
 13632 ;;		_strcat
 13633 ;;		_strcpy
 13634 ;;		_strlen
 13635 ;;		_utoa
 13636 ;; This function is called by:
 13637 ;;		_Term_MainTask
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           	psect	text55
 13642  0010B6                     __ptext55:
 13643                           	opt stack 0
 13644  0010B6                     _Term_MainSm:
 13645                           	opt stack 11
 13646                           
 13647                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13648                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13649                           ;term.c: 711: static UINT8 Data[50];
 13650                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13651                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13652                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13653                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13654                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13655                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13656                           ;term.c: 719: switch (TermMainSmState)
 13657                           
 13658                           ;incstack = 0
 13659  0010B6  D133               	goto	l2427
 13660  0010B8                     
 13661                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13662  0010B8  0ED0               	movlw	low Term_MainSm@TermDelay
 13663  0010BA  0100               	movlb	0	; () banked
 13664  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13665  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13666  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13667  0010C2  0ED0               	movlw	208
 13668  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13669  0010C6  0E07               	movlw	7
 13670  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13671  0010CA  0E00               	movlw	0
 13672  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13673  0010CE  0E00               	movlw	0
 13674  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13675  0010D2  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 13676                           
 13677                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13678  0010D6  0E01               	movlw	1
 13679  0010D8  0102               	movlb	2	; () banked
 13680  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13681                           
 13682                           ;term.c: 726: break;
 13683  0010DC  0012               	return	
 13684  0010DE                     
 13685                           ; BSR set to: 2
 13686                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13687                           
 13688                           ; BSR set to: 2
 13689  0010DE  0ED0               	movlw	low Term_MainSm@TermDelay
 13690  0010E0  0100               	movlb	0	; () banked
 13691  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13692  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13693  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13694  0010E8  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 13695  0010EC  06E8               	decf	wreg,f,c
 13696  0010EE  A4D8               	btfss	status,2,c
 13697  0010F0  0012               	return	
 13698                           
 13699                           ;term.c: 731: {
 13700                           ;term.c: 733: TermMainSmState = Term_InitState;
 13701  0010F2  0E02               	movlw	2
 13702  0010F4  0102               	movlb	2	; () banked
 13703  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13704                           
 13705                           ; BSR set to: 2
 13706                           ;term.c: 734: }
 13707                           ;term.c: 735: break;
 13708  0010F8  0012               	return	
 13709  0010FA                     
 13710                           ; BSR set to: 2
 13711                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13712                           
 13713                           ; BSR set to: 2
 13714  0010FA  0E1F               	movlw	31
 13715  0010FC  0100               	movlb	0	; () banked
 13716  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13717  001100  0012               	return	
 13718                           
 13719                           ; BSR set to: 0
 13720  001102  B265               	btfsc	3941,1,c	;volatile
 13721  001104  0012               	return	
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;term.c: 743: else
 13725                           ;term.c: 744: {
 13726                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13727                           
 13728                           ; BSR set to: 0
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;term.c: 740: {
 13732                           ;term.c: 742: }
 13733  001106  0E03               	movlw	3
 13734  001108  0102               	movlb	2	; () banked
 13735  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13736                           
 13737                           ; BSR set to: 2
 13738                           ;term.c: 747: }
 13739                           ;term.c: 748: break;
 13740  00110C  0012               	return	
 13741  00110E                     
 13742                           ; BSR set to: 2
 13743                           ;term.c: 752: if((cdc_trf_state == 0))
 13744                           
 13745                           ; BSR set to: 2
 13746  00110E  0100               	movlb	0	; () banked
 13747  001110  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13748  001112  A4D8               	btfss	status,2,c
 13749  001114  0012               	return	
 13750                           
 13751                           ; BSR set to: 0
 13752                           ;term.c: 753: {
 13753                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13754  001116  0E2F               	movlw	low _Welcome
 13755  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13756  00111A  0EFD               	movlw	high _Welcome
 13757  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13758  00111E  0E88               	movlw	136
 13759  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13760  001122  EC93  F030         	call	_putUSBUSART	;wreg free
 13761                           
 13762                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13763  001126  0E04               	movlw	4
 13764  001128  0102               	movlb	2	; () banked
 13765  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13766                           
 13767                           ; BSR set to: 2
 13768                           ;term.c: 758: }
 13769                           ;term.c: 759: break;
 13770  00112C  0012               	return	
 13771  00112E                     
 13772                           ; BSR set to: 2
 13773                           ;term.c: 763: if((cdc_trf_state == 0))
 13774                           
 13775                           ; BSR set to: 2
 13776  00112E  0100               	movlb	0	; () banked
 13777  001130  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13778  001132  A4D8               	btfss	status,2,c
 13779  001134  0012               	return	
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;term.c: 764: {
 13783                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13784  001136  0E3F               	movlw	low _MsgFormat
 13785  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13786  00113A  0EFC               	movlw	high _MsgFormat
 13787  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13788  00113E  0EEF               	movlw	239
 13789  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13790  001142  EC93  F030         	call	_putUSBUSART	;wreg free
 13791                           
 13792                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13793  001146  0E05               	movlw	5
 13794  001148  0102               	movlb	2	; () banked
 13795  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13796                           
 13797                           ; BSR set to: 2
 13798                           ;term.c: 769: }
 13799                           ;term.c: 770: break;
 13800  00114C  0012               	return	
 13801  00114E                     
 13802                           ; BSR set to: 2
 13803                           ;term.c: 774: if((cdc_trf_state == 0))
 13804                           
 13805                           ; BSR set to: 2
 13806  00114E  0100               	movlb	0	; () banked
 13807  001150  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13808  001152  A4D8               	btfss	status,2,c
 13809  001154  0012               	return	
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;term.c: 775: {
 13813                           ;term.c: 777: memset(Data,0,50);
 13814  001156  0E63               	movlw	low Term_MainSm@Data
 13815  001158  6F7D               	movwf	memset@p1& (0+255),b
 13816  00115A  0E04               	movlw	high Term_MainSm@Data
 13817  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13818  00115E  0E00               	movlw	0
 13819  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13820  001162  0E00               	movlw	0
 13821  001164  6F7F               	movwf	memset@c& (0+255),b
 13822  001166  0E00               	movlw	0
 13823  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13824  00116A  0E32               	movlw	50
 13825  00116C  6F81               	movwf	memset@n& (0+255),b
 13826  00116E  EC3B  F02F         	call	_memset	;wreg free
 13827                           
 13828                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13829  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13830  001174  0100               	movlb	0	; () banked
 13831  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13832  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13833  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13834  00117C  0E00               	movlw	0
 13835  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13836  001180  0E01               	movlw	1
 13837  001182  6F8C               	movwf	utoa@val& (0+255),b
 13838  001184  0E00               	movlw	0
 13839  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13840  001188  0E0A               	movlw	10
 13841  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13842  00118C  EC7B  F021         	call	_utoa	;wreg free
 13843                           
 13844                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13845  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13846  001192  0100               	movlb	0	; () banked
 13847  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13848  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13849  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13850  00119A  0E00               	movlw	0
 13851  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13852  00119E  0E02               	movlw	2
 13853  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13854  0011A2  0E00               	movlw	0
 13855  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13856  0011A6  0E0A               	movlw	10
 13857  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13858  0011AA  EC7B  F021         	call	_utoa	;wreg free
 13859                           
 13860                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13861  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13862  0011B0  0100               	movlb	0	; () banked
 13863  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13864  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13865  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13866  0011B8  0E00               	movlw	0
 13867  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13868  0011BC  0E00               	movlw	0
 13869  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13870  0011C0  0E00               	movlw	0
 13871  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13872  0011C4  0E0A               	movlw	10
 13873  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13874  0011C8  EC7B  F021         	call	_utoa	;wreg free
 13875                           
 13876                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13877  0011CC  0E63               	movlw	low Term_MainSm@Data
 13878  0011CE  0100               	movlb	0	; () banked
 13879  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13880  0011D2  0E04               	movlw	high Term_MainSm@Data
 13881  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13882  0011D6  0EDF               	movlw	low STR_23
 13883  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13884  0011DA  0EFE               	movlw	high STR_23
 13885  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13886  0011DE  EC0A  F02F         	call	_strcpy	;wreg free
 13887                           
 13888                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13889  0011E2  0E63               	movlw	low Term_MainSm@Data
 13890  0011E4  0100               	movlb	0	; () banked
 13891  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13892  0011E8  0E04               	movlw	high Term_MainSm@Data
 13893  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13894  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13895  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13896  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13897  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13898  0011F4  EC71  F029         	call	_strcat	;wreg free
 13899                           
 13900                           ;term.c: 784: strcat(Data,".");
 13901  0011F8  0E63               	movlw	low Term_MainSm@Data
 13902  0011FA  0100               	movlb	0	; () banked
 13903  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13904  0011FE  0E04               	movlw	high Term_MainSm@Data
 13905  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13906  001202  0EF4               	movlw	low STR_24
 13907  001204  6F7F               	movwf	strcat@from& (0+255),b
 13908  001206  0EFF               	movlw	high STR_24
 13909  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13910  00120A  EC71  F029         	call	_strcat	;wreg free
 13911                           
 13912                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13913  00120E  0E63               	movlw	low Term_MainSm@Data
 13914  001210  0100               	movlb	0	; () banked
 13915  001212  6F7D               	movwf	strcat@to& (0+255),b
 13916  001214  0E04               	movlw	high Term_MainSm@Data
 13917  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13918  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13919  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13920  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13921  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13922  001220  EC71  F029         	call	_strcat	;wreg free
 13923                           
 13924                           ;term.c: 786: strcat(Data,".");
 13925  001224  0E63               	movlw	low Term_MainSm@Data
 13926  001226  0100               	movlb	0	; () banked
 13927  001228  6F7D               	movwf	strcat@to& (0+255),b
 13928  00122A  0E04               	movlw	high Term_MainSm@Data
 13929  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13930  00122E  0EF4               	movlw	low STR_24
 13931  001230  6F7F               	movwf	strcat@from& (0+255),b
 13932  001232  0EFF               	movlw	high STR_24
 13933  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13934  001236  EC71  F029         	call	_strcat	;wreg free
 13935                           
 13936                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13937  00123A  0E63               	movlw	low Term_MainSm@Data
 13938  00123C  0100               	movlb	0	; () banked
 13939  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13940  001240  0E04               	movlw	high Term_MainSm@Data
 13941  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13942  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13943  001246  6F7F               	movwf	strcat@from& (0+255),b
 13944  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13945  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13946  00124C  EC71  F029         	call	_strcat	;wreg free
 13947                           
 13948                           ;term.c: 788: strcat(Data,"\r\n");
 13949  001250  0E63               	movlw	low Term_MainSm@Data
 13950  001252  0100               	movlb	0	; () banked
 13951  001254  6F7D               	movwf	strcat@to& (0+255),b
 13952  001256  0E04               	movlw	high Term_MainSm@Data
 13953  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13954  00125A  0E93               	movlw	low (STR_21+39)
 13955  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13956  00125E  0EFE               	movlw	high (STR_21+39)
 13957  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13958  001262  EC71  F029         	call	_strcat	;wreg free
 13959                           
 13960                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13961  001266  0E63               	movlw	low Term_MainSm@Data
 13962  001268  0100               	movlb	0	; () banked
 13963  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13964  00126C  0E04               	movlw	high Term_MainSm@Data
 13965  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13966  001270  0E63               	movlw	low Term_MainSm@Data
 13967  001272  6F7D               	movwf	strlen@s& (0+255),b
 13968  001274  0E04               	movlw	high Term_MainSm@Data
 13969  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13970  001278  ECCF  F02D         	call	_strlen	;wreg free
 13971  00127C  0100               	movlb	0	; () banked
 13972  00127E  517D               	movf	?_strlen& (0+255),w,b
 13973  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13974  001282  EC93  F030         	call	_putUSBUSART	;wreg free
 13975                           
 13976                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13977  001286  0E06               	movlw	6
 13978  001288  0102               	movlb	2	; () banked
 13979  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13980                           
 13981                           ; BSR set to: 2
 13982                           ;term.c: 793: }
 13983                           ;term.c: 794: break;
 13984  00128C  0012               	return	
 13985  00128E                     
 13986                           ; BSR set to: 2
 13987                           ;term.c: 798: if((cdc_trf_state == 0))
 13988                           
 13989                           ; BSR set to: 2
 13990  00128E  0100               	movlb	0	; () banked
 13991  001290  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13992  001292  A4D8               	btfss	status,2,c
 13993  001294  0012               	return	
 13994                           
 13995                           ; BSR set to: 0
 13996                           ;term.c: 799: {
 13997                           ;term.c: 801: memset(Data,0,50);
 13998  001296  0E63               	movlw	low Term_MainSm@Data
 13999  001298  6F7D               	movwf	memset@p1& (0+255),b
 14000  00129A  0E04               	movlw	high Term_MainSm@Data
 14001  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14002  00129E  0E00               	movlw	0
 14003  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14004  0012A2  0E00               	movlw	0
 14005  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14006  0012A6  0E00               	movlw	0
 14007  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14008  0012AA  0E32               	movlw	50
 14009  0012AC  6F81               	movwf	memset@n& (0+255),b
 14010  0012AE  EC3B  F02F         	call	_memset	;wreg free
 14011                           
 14012                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 20 2022");
 14013  0012B2  0E63               	movlw	low Term_MainSm@Data
 14014  0012B4  0100               	movlb	0	; () banked
 14015  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14016  0012B8  0E04               	movlw	high Term_MainSm@Data
 14017  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14018  0012BC  0E1A               	movlw	low STR_27
 14019  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14020  0012C0  0EFF               	movlw	high STR_27
 14021  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14022  0012C4  0EB5               	movlw	low STR_28
 14023  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14024  0012C8  0EFF               	movlw	high STR_28
 14025  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14026  0012CC  EC27  F01C         	call	_sprintf	;wreg free
 14027                           
 14028                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14029  0012D0  0E63               	movlw	low Term_MainSm@Data
 14030  0012D2  0100               	movlb	0	; () banked
 14031  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14032  0012D6  0E04               	movlw	high Term_MainSm@Data
 14033  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14034  0012DA  0E63               	movlw	low Term_MainSm@Data
 14035  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14036  0012DE  0E04               	movlw	high Term_MainSm@Data
 14037  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14038  0012E2  ECCF  F02D         	call	_strlen	;wreg free
 14039  0012E6  0100               	movlb	0	; () banked
 14040  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14041  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14042  0012EC  EC93  F030         	call	_putUSBUSART	;wreg free
 14043                           
 14044                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14045  0012F0  0E07               	movlw	7
 14046  0012F2  0102               	movlb	2	; () banked
 14047  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14048                           
 14049                           ; BSR set to: 2
 14050                           ;term.c: 808: }
 14051                           ;term.c: 809: break;
 14052  0012F6  0012               	return	
 14053  0012F8                     
 14054                           ; BSR set to: 2
 14055                           ;term.c: 813: if((cdc_trf_state == 0))
 14056                           
 14057                           ; BSR set to: 2
 14058  0012F8  0100               	movlb	0	; () banked
 14059  0012FA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14060  0012FC  A4D8               	btfss	status,2,c
 14061  0012FE  0012               	return	
 14062                           
 14063                           ; BSR set to: 0
 14064                           ;term.c: 814: {
 14065                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14066  001300  0E3F               	movlw	low _MsgReady
 14067  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14068  001304  0EFE               	movlw	high _MsgReady
 14069  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14070  001308  0E16               	movlw	22
 14071  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14072  00130C  EC93  F030         	call	_putUSBUSART	;wreg free
 14073                           
 14074                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14075  001310  0E08               	movlw	8
 14076  001312  0102               	movlb	2	; () banked
 14077  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14078                           
 14079                           ; BSR set to: 2
 14080                           ;term.c: 819: }
 14081                           ;term.c: 820: break;
 14082  001316  0012               	return	
 14083  001318                     
 14084                           ; BSR set to: 2
 14085                           ;term.c: 824: Terminal();
 14086                           
 14087                           ; BSR set to: 2
 14088  001318  EC68  F000         	call	_Terminal	;wreg free
 14089                           
 14090                           ;term.c: 829: }
 14091                           
 14092                           ;term.c: 828: break;
 14093                           
 14094                           ;term.c: 827: default:
 14095                           
 14096                           ;term.c: 825: break;
 14097  00131C  0012               	return	
 14098  00131E                     l2427:
 14099  00131E  0102               	movlb	2	; () banked
 14100  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14101                           
 14102                           ; Switch size 1, requested type "space"
 14103                           ; Number of cases is 9, Range of values is 0 to 8
 14104                           ; switch strategies available:
 14105                           ; Name         Instructions Cycles
 14106                           ; simple_byte           28    15 (average)
 14107                           ;	Chosen strategy is simple_byte
 14108  001322  0A00               	xorlw	0	; case 0
 14109  001324  B4D8               	btfsc	status,2,c
 14110  001326  D6C8               	goto	l2428
 14111  001328  0A01               	xorlw	1	; case 1
 14112  00132A  B4D8               	btfsc	status,2,c
 14113  00132C  D6D8               	goto	l2430
 14114  00132E  0A03               	xorlw	3	; case 2
 14115  001330  B4D8               	btfsc	status,2,c
 14116  001332  D6E3               	goto	l2432
 14117  001334  0A01               	xorlw	1	; case 3
 14118  001336  B4D8               	btfsc	status,2,c
 14119  001338  D6EA               	goto	l2437
 14120  00133A  0A07               	xorlw	7	; case 4
 14121  00133C  B4D8               	btfsc	status,2,c
 14122  00133E  D6F7               	goto	l2439
 14123  001340  0A01               	xorlw	1	; case 5
 14124  001342  B4D8               	btfsc	status,2,c
 14125  001344  D704               	goto	l2441
 14126  001346  0A03               	xorlw	3	; case 6
 14127  001348  B4D8               	btfsc	status,2,c
 14128  00134A  D7A1               	goto	l2443
 14129  00134C  0A01               	xorlw	1	; case 7
 14130  00134E  B4D8               	btfsc	status,2,c
 14131  001350  D7D3               	goto	l2445
 14132  001352  0A0F               	xorlw	15	; case 8
 14133  001354  A4D8               	btfss	status,2,c
 14134  001356  0012               	return	
 14135  001358  D7DF               	goto	l2447
 14136  00135A                     __end_of_Term_MainSm:
 14137                           	opt stack 0
 14138                           tosu	equ	0xFFF
 14139                           tosh	equ	0xFFE
 14140                           tosl	equ	0xFFD
 14141                           pclath	equ	0xFFA
 14142                           tblptru	equ	0xFF8
 14143                           tblptrh	equ	0xFF7
 14144                           tblptrl	equ	0xFF6
 14145                           tablat	equ	0xFF5
 14146                           prodh	equ	0xFF4
 14147                           prodl	equ	0xFF3
 14148                           intcon	equ	0xFF2
 14149                           intcon2	equ	0xFF1
 14150                           intcon3	equ	0xFF0
 14151                           indf0	equ	0xFEF
 14152                           postinc0	equ	0xFEE
 14153                           plusw0	equ	0xFEB
 14154                           fsr0h	equ	0xFEA
 14155                           fsr0l	equ	0xFE9
 14156                           wreg	equ	0xFE8
 14157                           indf1	equ	0xFE7
 14158                           postinc1	equ	0xFE6
 14159                           postdec1	equ	0xFE5
 14160                           fsr1h	equ	0xFE2
 14161                           fsr1l	equ	0xFE1
 14162                           indf2	equ	0xFDF
 14163                           postinc2	equ	0xFDE
 14164                           postdec2	equ	0xFDD
 14165                           plusw2	equ	0xFDB
 14166                           fsr2h	equ	0xFDA
 14167                           fsr2l	equ	0xFD9
 14168                           status	equ	0xFD8
 14169                           
 14170 ;; *************** function _strlen *****************
 14171 ;; Defined at:
 14172 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14175 ;;		 -> Term_MainSm@Data(50), 
 14176 ;; Auto vars:     Size  Location     Type
 14177 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14178 ;;		 -> Term_MainSm@Data(50), 
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  2   29[BANK0 ] unsigned int 
 14181 ;; Registers used:
 14182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 0/0
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14191 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14192 ;;Total ram usage:        6 bytes
 14193 ;; Hardware stack levels used:    1
 14194 ;; Hardware stack levels required when called:   11
 14195 ;; This function calls:
 14196 ;;		Nothing
 14197 ;; This function is called by:
 14198 ;;		_Term_MainSm
 14199 ;; This function uses a non-reentrant model
 14200 ;;
 14201                           
 14202                           	psect	text56
 14203  005B9E                     __ptext56:
 14204                           	opt stack 0
 14205  005B9E                     _strlen:
 14206                           	opt stack 15
 14207                           
 14208                           ;incstack = 0
 14209  005B9E  C07D  F081         	movff	strlen@s,strlen@cp
 14210  005BA2  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14211  005BA6  D003               	goto	l3301
 14212  005BA8  0100               	movlb	0	; () banked
 14213  005BAA  4B81               	infsnz	strlen@cp& (0+255),f,b
 14214  005BAC  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14215  005BAE                     l3301:
 14216                           
 14217                           ; BSR set to: 0
 14218  005BAE  C081  FFD9         	movff	strlen@cp,fsr2l
 14219  005BB2  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14220  005BB6  50DF               	movf	indf2,w,c
 14221  005BB8  A4D8               	btfss	status,2,c
 14222  005BBA  D7F6               	goto	l3302
 14223  005BBC  C07D  F07F         	movff	strlen@s,??_strlen
 14224  005BC0  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14225  005BC4  0100               	movlb	0	; () banked
 14226  005BC6  1F7F               	comf	??_strlen& (0+255),f,b
 14227  005BC8  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14228  005BCA  4B7F               	infsnz	??_strlen& (0+255),f,b
 14229  005BCC  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14230  005BCE  5181               	movf	strlen@cp& (0+255),w,b
 14231  005BD0  257F               	addwf	??_strlen& (0+255),w,b
 14232  005BD2  6F7D               	movwf	?_strlen& (0+255),b
 14233  005BD4  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14234  005BD6  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14235  005BD8  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14236  005BDA  0012               	return	
 14237  005BDC                     __end_of_strlen:
 14238                           	opt stack 0
 14239                           tosu	equ	0xFFF
 14240                           tosh	equ	0xFFE
 14241                           tosl	equ	0xFFD
 14242                           pclath	equ	0xFFA
 14243                           tblptru	equ	0xFF8
 14244                           tblptrh	equ	0xFF7
 14245                           tblptrl	equ	0xFF6
 14246                           tablat	equ	0xFF5
 14247                           prodh	equ	0xFF4
 14248                           prodl	equ	0xFF3
 14249                           intcon	equ	0xFF2
 14250                           intcon2	equ	0xFF1
 14251                           intcon3	equ	0xFF0
 14252                           indf0	equ	0xFEF
 14253                           postinc0	equ	0xFEE
 14254                           plusw0	equ	0xFEB
 14255                           fsr0h	equ	0xFEA
 14256                           fsr0l	equ	0xFE9
 14257                           wreg	equ	0xFE8
 14258                           indf1	equ	0xFE7
 14259                           postinc1	equ	0xFE6
 14260                           postdec1	equ	0xFE5
 14261                           fsr1h	equ	0xFE2
 14262                           fsr1l	equ	0xFE1
 14263                           indf2	equ	0xFDF
 14264                           postinc2	equ	0xFDE
 14265                           postdec2	equ	0xFDD
 14266                           plusw2	equ	0xFDB
 14267                           fsr2h	equ	0xFDA
 14268                           fsr2l	equ	0xFD9
 14269                           status	equ	0xFD8
 14270                           
 14271 ;; *************** function _strcat *****************
 14272 ;; Defined at:
 14273 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14276 ;;		 -> Term_MainSm@Data(50), 
 14277 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14278 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14279 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14282 ;;		 -> Term_MainSm@Data(50), 
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  2   29[BANK0 ] PTR unsigned char 
 14285 ;; Registers used:
 14286 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14292 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14295 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14296 ;;Total ram usage:        6 bytes
 14297 ;; Hardware stack levels used:    1
 14298 ;; Hardware stack levels required when called:   11
 14299 ;; This function calls:
 14300 ;;		Nothing
 14301 ;; This function is called by:
 14302 ;;		_Term_MainSm
 14303 ;; This function uses a non-reentrant model
 14304 ;;
 14305                           
 14306                           	psect	text57
 14307  0052E2                     __ptext57:
 14308                           	opt stack 0
 14309  0052E2                     _strcat:
 14310                           	opt stack 15
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;incstack = 0
 14314  0052E2  C07D  F081         	movff	strcat@to,strcat@cp
 14315  0052E6  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14316  0052EA  D003               	goto	l3286
 14317  0052EC  0100               	movlb	0	; () banked
 14318  0052EE  4B81               	infsnz	strcat@cp& (0+255),f,b
 14319  0052F0  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14320  0052F2                     l3286:
 14321                           
 14322                           ; BSR set to: 0
 14323  0052F2  C081  FFD9         	movff	strcat@cp,fsr2l
 14324  0052F6  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14325  0052FA  50DF               	movf	indf2,w,c
 14326  0052FC  B4D8               	btfsc	status,2,c
 14327  0052FE  D006               	goto	l3289
 14328  005300  D7F5               	goto	l3287
 14329  005302  0100               	movlb	0	; () banked
 14330  005304  4B81               	infsnz	strcat@cp& (0+255),f,b
 14331  005306  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14332  005308  4B7F               	infsnz	strcat@from& (0+255),f,b
 14333  00530A  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14334  00530C                     l3289:
 14335                           
 14336                           ; BSR set to: 0
 14337  00530C  C07F  FFF6         	movff	strcat@from,tblptrl
 14338  005310  C080  FFF7         	movff	strcat@from+1,tblptrh
 14339  005314  6AF8               	clrf	tblptru,c
 14340  005316  C081  FFD9         	movff	strcat@cp,fsr2l
 14341  00531A  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14342  00531E  0E0E               	movlw	(high __ramtop+-1)
 14343  005320  64F7               	cpfsgt	tblptrh,c
 14344  005322  D003               	bra	u13367
 14345  005324  0008               	tblrd		*
 14346  005326  50F5               	movf	tablat,w,c
 14347  005328  D005               	bra	u13360
 14348  00532A                     u13367:
 14349  00532A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14350  00532E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14351  005332  50EF               	movf	indf0,w,c
 14352  005334                     u13360:
 14353  005334  6EDF               	movwf	indf2,c
 14354  005336  50DF               	movf	indf2,w,c
 14355  005338  B4D8               	btfsc	status,2,c
 14356  00533A  0012               	return	
 14357  00533C  D7E2               	goto	l3290
 14358  00533E                     __end_of_strcat:
 14359                           	opt stack 0
 14360                           tosu	equ	0xFFF
 14361                           tosh	equ	0xFFE
 14362                           tosl	equ	0xFFD
 14363                           pclath	equ	0xFFA
 14364                           tblptru	equ	0xFF8
 14365                           tblptrh	equ	0xFF7
 14366                           tblptrl	equ	0xFF6
 14367                           tablat	equ	0xFF5
 14368                           prodh	equ	0xFF4
 14369                           prodl	equ	0xFF3
 14370                           intcon	equ	0xFF2
 14371                           intcon2	equ	0xFF1
 14372                           intcon3	equ	0xFF0
 14373                           indf0	equ	0xFEF
 14374                           postinc0	equ	0xFEE
 14375                           plusw0	equ	0xFEB
 14376                           fsr0h	equ	0xFEA
 14377                           fsr0l	equ	0xFE9
 14378                           wreg	equ	0xFE8
 14379                           indf1	equ	0xFE7
 14380                           postinc1	equ	0xFE6
 14381                           postdec1	equ	0xFE5
 14382                           fsr1h	equ	0xFE2
 14383                           fsr1l	equ	0xFE1
 14384                           indf2	equ	0xFDF
 14385                           postinc2	equ	0xFDE
 14386                           postdec2	equ	0xFDD
 14387                           plusw2	equ	0xFDB
 14388                           fsr2h	equ	0xFDA
 14389                           fsr2l	equ	0xFD9
 14390                           status	equ	0xFD8
 14391                           
 14392 ;; *************** function _sprintf *****************
 14393 ;; Defined at:
 14394 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14397 ;;		 -> Term_MainSm@Data(50), 
 14398 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14399 ;;		 -> STR_27(17), 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;  tmpval          4    0        struct .
 14402 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14403 ;;		 -> STR_31(7), STR_28(12), 
 14404 ;;  ap              2   36[BANK0 ] PTR void [1]
 14405 ;;		 -> ?_sprintf(2), 
 14406 ;;  len             2    0        unsigned int 
 14407 ;;  val             2    0        unsigned int 
 14408 ;;  c               1   38[BANK0 ] char 
 14409 ;;  flag            1   35[BANK0 ] unsigned char 
 14410 ;;  prec            1    0        char 
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  2   29[BANK0 ] int 
 14413 ;; Registers used:
 14414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14420 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14421 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;Total ram usage:       12 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:   11
 14427 ;; This function calls:
 14428 ;;		Nothing
 14429 ;; This function is called by:
 14430 ;;		_Term_MainSm
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           	psect	text58
 14435  00384E                     __ptext58:
 14436                           	opt stack 0
 14437  00384E                     _sprintf:
 14438                           	opt stack 15
 14439                           
 14440                           ;doprnt.c: 494: va_list ap;
 14441                           ;doprnt.c: 499: signed char c;
 14442                           ;doprnt.c: 506: signed char prec;
 14443                           ;doprnt.c: 508: unsigned char flag;
 14444                           ;doprnt.c: 523: union {
 14445                           ;doprnt.c: 524: unsigned long vd;
 14446                           ;doprnt.c: 525: double integ;
 14447                           ;doprnt.c: 526: } tmpval;
 14448                           ;doprnt.c: 528: unsigned int val;
 14449                           ;doprnt.c: 529: unsigned len;
 14450                           ;doprnt.c: 530: const char * cp;
 14451                           ;doprnt.c: 533: *ap = __va_start();
 14452                           
 14453                           ;incstack = 0
 14454  00384E  0E81               	movlw	low (?_sprintf+4)
 14455  003850  0100               	movlb	0	; () banked
 14456  003852  6F84               	movwf	sprintf@ap& (0+255),b
 14457  003854  0E00               	movlw	high (?_sprintf+4)
 14458  003856  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14459                           
 14460                           ;doprnt.c: 536: while(c = *f++) {
 14461  003858  D04E               	goto	l2690
 14462  00385A                     
 14463                           ; BSR set to: 0
 14464                           ;doprnt.c: 538: if(c != '%')
 14465                           
 14466                           ; BSR set to: 0
 14467  00385A  0E25               	movlw	37
 14468  00385C  1986               	xorwf	sprintf@c& (0+255),w,b
 14469  00385E  B4D8               	btfsc	status,2,c
 14470  003860  D009               	goto	l2680
 14471                           
 14472                           ; BSR set to: 0
 14473                           ;doprnt.c: 540: {
 14474                           ;doprnt.c: 541: ((*sp++ = (c)));
 14475  003862  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14476  003866  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14477  00386A  C086  FFDF         	movff	sprintf@c,indf2
 14478                           
 14479                           ; BSR set to: 0
 14480  00386E  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14481  003870  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14482                           
 14483                           ;doprnt.c: 542: continue;
 14484  003872  D041               	goto	l2690
 14485  003874                     l2680:
 14486                           
 14487                           ; BSR set to: 0
 14488                           ;doprnt.c: 543: }
 14489                           ;doprnt.c: 548: flag = 0;
 14490                           
 14491                           ; BSR set to: 0
 14492  003874  0E00               	movlw	0
 14493  003876  6F83               	movwf	sprintf@flag& (0+255),b
 14494                           
 14495                           ;doprnt.c: 635: switch(c = *f++) {
 14496  003878  D02E               	goto	l2681
 14497  00387A                     
 14498                           ; BSR set to: 0
 14499                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14500                           
 14501                           ; BSR set to: 0
 14502  00387A  C084  FFD9         	movff	sprintf@ap,fsr2l
 14503  00387E  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14504  003882  CFDE F087          	movff	postinc2,sprintf@cp
 14505  003886  CFDD F088          	movff	postdec2,sprintf@cp+1
 14506                           
 14507                           ; BSR set to: 0
 14508  00388A  0E02               	movlw	2
 14509  00388C  2784               	addwf	sprintf@ap& (0+255),f,b
 14510  00388E  0E00               	movlw	0
 14511  003890  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;doprnt.c: 740: if(!cp)
 14515  003892  5187               	movf	sprintf@cp& (0+255),w,b
 14516  003894  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14517  003896  A4D8               	btfss	status,2,c
 14518  003898  D014               	goto	l2686
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;doprnt.c: 741: cp = "(null)";
 14522  00389A  0ED7               	movlw	low STR_31
 14523  00389C  6F87               	movwf	sprintf@cp& (0+255),b
 14524  00389E  0EFF               	movlw	high STR_31
 14525  0038A0  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;doprnt.c: 777: while(*cp)
 14529  0038A2  D00F               	goto	l2686
 14530  0038A4                     
 14531                           ; BSR set to: 0
 14532                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14533                           
 14534                           ; BSR set to: 0
 14535  0038A4  C087  FFF6         	movff	sprintf@cp,tblptrl
 14536  0038A8  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14537  0038AC                     	if	0	;tblptru may be non-zero
 14538  0038AC                     	endif
 14539  0038AC                     	if	0	;tblptru may be non-zero
 14540  0038AC                     	endif
 14541  0038AC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14542  0038B0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14543  0038B4  0008               	tblrd		*
 14544  0038B6  CFF5 FFDF          	movff	tablat,indf2
 14545                           
 14546                           ; BSR set to: 0
 14547  0038BA  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14548  0038BC  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14549                           
 14550                           ; BSR set to: 0
 14551  0038BE  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14552  0038C0  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14553  0038C2                     l2686:
 14554                           
 14555                           ; BSR set to: 0
 14556                           
 14557                           ; BSR set to: 0
 14558  0038C2  C087  FFF6         	movff	sprintf@cp,tblptrl
 14559  0038C6  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14560  0038CA                     	if	0	;tblptru may be non-zero
 14561  0038CA                     	endif
 14562  0038CA                     	if	0	;tblptru may be non-zero
 14563  0038CA                     	endif
 14564  0038CA  0008               	tblrd		*
 14565  0038CC  50F5               	movf	tablat,w,c
 14566  0038CE  0900               	iorlw	0
 14567  0038D0  B4D8               	btfsc	status,2,c
 14568  0038D2  D011               	goto	l2690
 14569  0038D4  D7E7               	goto	l2687
 14570  0038D6                     l2681:
 14571                           
 14572                           ; BSR set to: 0
 14573                           
 14574                           ; BSR set to: 0
 14575  0038D6  C07F  FFF6         	movff	sprintf@f,tblptrl
 14576  0038DA  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14577  0038DE  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14578  0038E0  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14579  0038E2                     	if	0	;tblptru may be non-zero
 14580  0038E2                     	endif
 14581  0038E2                     	if	0	;tblptru may be non-zero
 14582  0038E2                     	endif
 14583  0038E2  0008               	tblrd		*
 14584  0038E4  CFF5 F086          	movff	tablat,sprintf@c
 14585  0038E8  5186               	movf	sprintf@c& (0+255),w,b
 14586                           
 14587                           ; Switch size 1, requested type "space"
 14588                           ; Number of cases is 2, Range of values is 0 to 115
 14589                           ; switch strategies available:
 14590                           ; Name         Instructions Cycles
 14591                           ; simple_byte            7     4 (average)
 14592                           ;	Chosen strategy is simple_byte
 14593  0038EA  0A00               	xorlw	0	; case 0
 14594  0038EC  B4D8               	btfsc	status,2,c
 14595  0038EE  D00F               	goto	u13420
 14596  0038F0  0A73               	xorlw	115	; case 115
 14597  0038F2  B4D8               	btfsc	status,2,c
 14598  0038F4  D7C2               	goto	l2684
 14599  0038F6                     l2690:
 14600                           
 14601                           ; BSR set to: 0
 14602                           
 14603                           ; BSR set to: 0
 14604                           
 14605                           ;doprnt.c: 1422: {
 14606                           
 14607                           ; BSR set to: 0
 14608  0038F6  C07F  FFF6         	movff	sprintf@f,tblptrl
 14609  0038FA  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14610  0038FE  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14611  003900  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14612  003902                     	if	0	;tblptru may be non-zero
 14613  003902                     	endif
 14614  003902                     	if	0	;tblptru may be non-zero
 14615  003902                     	endif
 14616  003902  0008               	tblrd		*
 14617  003904  CFF5 F086          	movff	tablat,sprintf@c
 14618  003908  5186               	movf	sprintf@c& (0+255),w,b
 14619  00390A  A4D8               	btfss	status,2,c
 14620  00390C  D7A6               	goto	l2679
 14621  00390E                     u13420:
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;doprnt.c: 1538: *sp = 0;
 14625                           
 14626                           ; BSR set to: 0
 14627                           
 14628                           ;doprnt.c: 1469: }
 14629                           ;doprnt.c: 1533: }
 14630                           ;doprnt.c: 1535: alldone:
 14631                           
 14632                           ; BSR set to: 0
 14633  00390E  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14634  003912  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14635  003916  0E00               	movlw	0
 14636  003918  6EDF               	movwf	indf2,c
 14637  00391A  0012               	return	
 14638  00391C                     __end_of_sprintf:
 14639                           	opt stack 0
 14640                           tosu	equ	0xFFF
 14641                           tosh	equ	0xFFE
 14642                           tosl	equ	0xFFD
 14643                           pclath	equ	0xFFA
 14644                           tblptru	equ	0xFF8
 14645                           tblptrh	equ	0xFF7
 14646                           tblptrl	equ	0xFF6
 14647                           tablat	equ	0xFF5
 14648                           prodh	equ	0xFF4
 14649                           prodl	equ	0xFF3
 14650                           intcon	equ	0xFF2
 14651                           intcon2	equ	0xFF1
 14652                           intcon3	equ	0xFF0
 14653                           indf0	equ	0xFEF
 14654                           postinc0	equ	0xFEE
 14655                           plusw0	equ	0xFEB
 14656                           fsr0h	equ	0xFEA
 14657                           fsr0l	equ	0xFE9
 14658                           wreg	equ	0xFE8
 14659                           indf1	equ	0xFE7
 14660                           postinc1	equ	0xFE6
 14661                           postdec1	equ	0xFE5
 14662                           fsr1h	equ	0xFE2
 14663                           fsr1l	equ	0xFE1
 14664                           indf2	equ	0xFDF
 14665                           postinc2	equ	0xFDE
 14666                           postdec2	equ	0xFDD
 14667                           plusw2	equ	0xFDB
 14668                           fsr2h	equ	0xFDA
 14669                           fsr2l	equ	0xFD9
 14670                           status	equ	0xFD8
 14671                           
 14672 ;; *************** function _memset *****************
 14673 ;; Defined at:
 14674 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;  p1              2   29[BANK0 ] PTR void 
 14677 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14678 ;;  c               2   31[BANK0 ] int 
 14679 ;;  n               2   33[BANK0 ] unsigned int 
 14680 ;; Auto vars:     Size  Location     Type
 14681 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14682 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14683 ;; Return value:  Size  Location     Type
 14684 ;;                  2   29[BANK0 ] PTR void 
 14685 ;; Registers used:
 14686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14687 ;; Tracked objects:
 14688 ;;		On entry : 0/0
 14689 ;;		On exit  : 0/0
 14690 ;;		Unchanged: 0/0
 14691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14692 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14695 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14696 ;;Total ram usage:        8 bytes
 14697 ;; Hardware stack levels used:    1
 14698 ;; Hardware stack levels required when called:   11
 14699 ;; This function calls:
 14700 ;;		Nothing
 14701 ;; This function is called by:
 14702 ;;		_USBDeviceInit
 14703 ;;		_USBStdSetCfgHandler
 14704 ;;		_Term_MainSm
 14705 ;; This function uses a non-reentrant model
 14706 ;;
 14707                           
 14708                           	psect	text59
 14709  005E76                     __ptext59:
 14710                           	opt stack 0
 14711  005E76                     _memset:
 14712                           	opt stack 14
 14713                           
 14714                           ; BSR set to: 0
 14715                           ;incstack = 0
 14716  005E76  C07D  F083         	movff	memset@p1,memset@p
 14717  005E7A  C07E  F084         	movff	memset@p1+1,memset@p+1
 14718  005E7E  D009               	goto	l3160
 14719  005E80                     l12055:
 14720  005E80  C083  FFD9         	movff	memset@p,fsr2l
 14721  005E84  C084  FFDA         	movff	memset@p+1,fsr2h
 14722  005E88  C07F  FFDF         	movff	memset@c,indf2
 14723  005E8C  0100               	movlb	0	; () banked
 14724  005E8E  4B83               	infsnz	memset@p& (0+255),f,b
 14725  005E90  2B84               	incf	(memset@p+1)& (0+255),f,b
 14726  005E92                     l3160:
 14727                           
 14728                           ; BSR set to: 0
 14729  005E92  0100               	movlb	0	; () banked
 14730  005E94  0781               	decf	memset@n& (0+255),f,b
 14731  005E96  A0D8               	btfss	status,0,c
 14732  005E98  0782               	decf	(memset@n+1)& (0+255),f,b
 14733  005E9A  2981               	incf	memset@n& (0+255),w,b
 14734  005E9C  E1F1               	bnz	l12055
 14735  005E9E  2982               	incf	(memset@n+1)& (0+255),w,b
 14736  005EA0  B4D8               	btfsc	status,2,c
 14737  005EA2  0012               	return	
 14738  005EA4  D7ED               	goto	l3161
 14739  005EA6                     __end_of_memset:
 14740                           	opt stack 0
 14741                           tosu	equ	0xFFF
 14742                           tosh	equ	0xFFE
 14743                           tosl	equ	0xFFD
 14744                           pclath	equ	0xFFA
 14745                           tblptru	equ	0xFF8
 14746                           tblptrh	equ	0xFF7
 14747                           tblptrl	equ	0xFF6
 14748                           tablat	equ	0xFF5
 14749                           prodh	equ	0xFF4
 14750                           prodl	equ	0xFF3
 14751                           intcon	equ	0xFF2
 14752                           intcon2	equ	0xFF1
 14753                           intcon3	equ	0xFF0
 14754                           indf0	equ	0xFEF
 14755                           postinc0	equ	0xFEE
 14756                           plusw0	equ	0xFEB
 14757                           fsr0h	equ	0xFEA
 14758                           fsr0l	equ	0xFE9
 14759                           wreg	equ	0xFE8
 14760                           indf1	equ	0xFE7
 14761                           postinc1	equ	0xFE6
 14762                           postdec1	equ	0xFE5
 14763                           fsr1h	equ	0xFE2
 14764                           fsr1l	equ	0xFE1
 14765                           indf2	equ	0xFDF
 14766                           postinc2	equ	0xFDE
 14767                           postdec2	equ	0xFDD
 14768                           plusw2	equ	0xFDB
 14769                           fsr2h	equ	0xFDA
 14770                           fsr2l	equ	0xFD9
 14771                           status	equ	0xFD8
 14772                           
 14773 ;; *************** function _Terminal *****************
 14774 ;; Defined at:
 14775 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14776 ;; Parameters:    Size  Location     Type
 14777 ;;		None
 14778 ;; Auto vars:     Size  Location     Type
 14779 ;;  i               1   68[BANK0 ] unsigned char 
 14780 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14781 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14782 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14783 ;;  Index           1   70[BANK0 ] unsigned char 
 14784 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14785 ;; Return value:  Size  Location     Type
 14786 ;;                  1    wreg      void 
 14787 ;; Registers used:
 14788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14789 ;; Tracked objects:
 14790 ;;		On entry : 0/0
 14791 ;;		On exit  : 0/0
 14792 ;;		Unchanged: 0/0
 14793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14795 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14796 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14797 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14798 ;;Total ram usage:      455 bytes
 14799 ;; Hardware stack levels used:    1
 14800 ;; Hardware stack levels required when called:   15
 14801 ;; This function calls:
 14802 ;;		_I2cSlv_I2cReadMsgSts
 14803 ;;		_I2cSlv_ReceiveI2cMsg
 14804 ;;		_I2cSlv_SendI2cMsg
 14805 ;;		_OsTmr_Wait
 14806 ;;		_atoi
 14807 ;;		_getsUSBUSART
 14808 ;;		_itoa
 14809 ;;		_putUSBUSART
 14810 ;;		_strcpy
 14811 ;;		_strtol
 14812 ;;		_xtoi
 14813 ;; This function is called by:
 14814 ;;		_Term_MainSm
 14815 ;; This function uses a non-reentrant model
 14816 ;;
 14817                           
 14818                           	psect	text60
 14819  0000D0                     __ptext60:
 14820                           	opt stack 0
 14821  0000D0                     _Terminal:
 14822                           	opt stack 11
 14823                           
 14824                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14825                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14826                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14827                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14828                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14829                           ;term.c: 435: UINT8 Index;
 14830                           ;term.c: 436: static UINT8 Len[4];
 14831                           ;term.c: 437: static UINT8 PackageLen;
 14832                           ;term.c: 438: static UINT8 Addr[4];
 14833                           ;term.c: 439: static UINT8 SlaveAddr;
 14834                           ;term.c: 440: static PayloadType Payload[20u];
 14835                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14836                           
 14837                           ; BSR set to: 0
 14838                           ;incstack = 0
 14839  0000D0  0E00               	movlw	0
 14840  0000D2  0100               	movlb	0	; () banked
 14841  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14845                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14846                           ;term.c: 445: static SwTimerType SwTimer;
 14847                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14848  0000D6  0E1F               	movlw	31
 14849  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 14850  0000DA  0012               	return	
 14851                           
 14852                           ; BSR set to: 0
 14853  0000DC  B265               	btfsc	3941,1,c	;volatile
 14854  0000DE  0012               	return	
 14855  0000E0  D278               	goto	l2367
 14856  0000E2                     
 14857                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14858                           
 14859                           ; BSR set to: 0
 14860  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14861  0000E4  0100               	movlb	0	; () banked
 14862  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14863  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14864  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14865  0000EC  0EC8               	movlw	200
 14866  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14867  0000F0  ECA2  F024         	call	_getsUSBUSART	;wreg free
 14868  0000F4  0100               	movlb	0	; () banked
 14869  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;term.c: 458: if (ReceivedBytes > 0)
 14873  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14874  0000FA  B4D8               	btfsc	status,2,c
 14875  0000FC  0012               	return	
 14876                           
 14877                           ; BSR set to: 0
 14878                           ;term.c: 459: {
 14879                           ;term.c: 461: if (EchoOption == 1u)
 14880  0000FE  0102               	movlb	2	; () banked
 14881  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14882  000102  A4D8               	btfss	status,2,c
 14883  000104  D026               	goto	l2371
 14884                           
 14885                           ; BSR set to: 2
 14886                           ;term.c: 462: {
 14887                           ;term.c: 464: if((cdc_trf_state == 0))
 14888  000106  0100               	movlb	0	; () banked
 14889  000108  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14890  00010A  A4D8               	btfss	status,2,c
 14891  00010C  D022               	goto	l2371
 14892                           
 14893                           ; BSR set to: 0
 14894                           ;term.c: 465: {
 14895                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14896  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14897  000110  0D01               	mullw	1
 14898  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14899  000114  24F3               	addwf	prodl,w,c
 14900  000116  6ED9               	movwf	fsr2l,c
 14901  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14902  00011A  20F4               	addwfc	prodh,w,c
 14903  00011C  6EDA               	movwf	fsr2h,c
 14904  00011E  0E0D               	movlw	13
 14905  000120  6EDF               	movwf	indf2,c
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14909  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14910  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14911  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14912  000128  0E01               	movlw	1
 14913  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14914  00012C  0E00               	movlw	0
 14915  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14916  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14917  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14918  000134  6ED9               	movwf	fsr2l,c
 14919  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14920  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14921  00013A  6EDA               	movwf	fsr2h,c
 14922  00013C  0E0A               	movlw	10
 14923  00013E  6EDF               	movwf	indf2,c
 14924                           
 14925                           ; BSR set to: 0
 14926                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14927  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14928  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14929  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14930  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14931  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14932  00014A  0F02               	addlw	2
 14933  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14934  00014E  EC93  F030         	call	_putUSBUSART	;wreg free
 14935  000152                     l2371:
 14936                           
 14937                           ;term.c: 469: }
 14938                           ;term.c: 470: }
 14939                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14940                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14941                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14942  000152  0E53               	movlw	83
 14943  000154  010A               	movlb	10	; () banked
 14944  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14945  000158  A4D8               	btfss	status,2,c
 14946  00015A  D043               	goto	l2372
 14947                           
 14948                           ; BSR set to: 10
 14949  00015C  0E4F               	movlw	79
 14950  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14951  000160  A4D8               	btfss	status,2,c
 14952  000162  D03F               	goto	l2372
 14953                           
 14954                           ; BSR set to: 10
 14955  000164  0E3A               	movlw	58
 14956  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14957  000168  A4D8               	btfss	status,2,c
 14958  00016A  D03B               	goto	l2372
 14959                           
 14960                           ; BSR set to: 10
 14961                           ;term.c: 476: {
 14962                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14963  00016C  0E47               	movlw	71
 14964  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14965  000170  A4D8               	btfss	status,2,c
 14966  000172  0012               	return	
 14967                           
 14968                           ; BSR set to: 10
 14969  000174  0E3A               	movlw	58
 14970  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14971  000178  A4D8               	btfss	status,2,c
 14972  00017A  0012               	return	
 14973                           
 14974                           ; BSR set to: 10
 14975                           ;term.c: 479: {
 14976                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14977  00017C  0E44               	movlw	68
 14978  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14979  000180  A4D8               	btfss	status,2,c
 14980  000182  D015               	goto	l2374
 14981                           
 14982                           ; BSR set to: 10
 14983  000184  0E46               	movlw	70
 14984  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14985  000188  A4D8               	btfss	status,2,c
 14986  00018A  D011               	goto	l2374
 14987                           
 14988                           ; BSR set to: 10
 14989                           ;term.c: 482: {
 14990                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14991  00018C  0E41               	movlw	65
 14992  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14993  000190  A4D8               	btfss	status,2,c
 14994  000192  D004               	goto	l2375
 14995                           
 14996                           ; BSR set to: 10
 14997                           ;term.c: 484: {
 14998                           ;term.c: 485: FormatOption = 1u;
 14999  000194  0E01               	movlw	1
 15000  000196  0102               	movlb	2	; () banked
 15001  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15002                           
 15003                           ;term.c: 486: }
 15004  00019A  0012               	return	
 15005  00019C                     l2375:
 15006                           
 15007                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15008                           
 15009                           ; BSR set to: 2
 15010  00019C  0E42               	movlw	66
 15011  00019E  010A               	movlb	10	; () banked
 15012  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15013  0001A2  A4D8               	btfss	status,2,c
 15014  0001A4  0012               	return	
 15015                           
 15016                           ; BSR set to: 10
 15017                           ;term.c: 488: {
 15018                           ;term.c: 489: FormatOption = 0u;
 15019  0001A6  0E00               	movlw	0
 15020  0001A8  0102               	movlb	2	; () banked
 15021  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15022                           
 15023                           ; BSR set to: 2
 15024                           ;term.c: 490: }
 15025                           ;term.c: 491: }
 15026                           
 15027                           ; BSR set to: 2
 15028  0001AC  0012               	return	
 15029  0001AE                     l2374:
 15030                           
 15031                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15032                           
 15033                           ; BSR set to: 2
 15034  0001AE  0E45               	movlw	69
 15035  0001B0  010A               	movlb	10	; () banked
 15036  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15037  0001B4  A4D8               	btfss	status,2,c
 15038  0001B6  0012               	return	
 15039                           
 15040                           ; BSR set to: 10
 15041  0001B8  0E4D               	movlw	77
 15042  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15043  0001BC  A4D8               	btfss	status,2,c
 15044  0001BE  0012               	return	
 15045                           
 15046                           ; BSR set to: 10
 15047                           ;term.c: 494: {
 15048                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15049  0001C0  0E31               	movlw	49
 15050  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15051  0001C4  A4D8               	btfss	status,2,c
 15052  0001C6  D004               	goto	l2380
 15053                           
 15054                           ; BSR set to: 10
 15055                           ;term.c: 496: {
 15056                           ;term.c: 497: EchoOption = 1u;
 15057  0001C8  0E01               	movlw	1
 15058  0001CA  0102               	movlb	2	; () banked
 15059  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15060                           
 15061                           ;term.c: 498: }
 15062  0001CE  0012               	return	
 15063  0001D0                     l2380:
 15064                           
 15065                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15066                           
 15067                           ; BSR set to: 2
 15068  0001D0  0E30               	movlw	48
 15069  0001D2  010A               	movlb	10	; () banked
 15070  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15071  0001D6  A4D8               	btfss	status,2,c
 15072  0001D8  0012               	return	
 15073                           
 15074                           ; BSR set to: 10
 15075                           ;term.c: 500: {
 15076                           ;term.c: 501: EchoOption = 0u;
 15077  0001DA  0E00               	movlw	0
 15078  0001DC  0102               	movlb	2	; () banked
 15079  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15080                           
 15081                           ; BSR set to: 2
 15082                           ;term.c: 507: }
 15083                           ;term.c: 508: }
 15084                           ;term.c: 509: }
 15085                           
 15086                           ; BSR set to: 2
 15087                           
 15088                           ; BSR set to: 2
 15089                           
 15090                           ;term.c: 504: else
 15091                           ;term.c: 505: {
 15092                           
 15093                           ; BSR set to: 2
 15094                           
 15095                           ; BSR set to: 2
 15096                           ;term.c: 502: }
 15097                           ;term.c: 503: }
 15098                           
 15099                           ; BSR set to: 2
 15100  0001E0  0012               	return	
 15101  0001E2                     l2372:
 15102                           
 15103                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15104                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15105                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15106                           
 15107                           ; BSR set to: 2
 15108  0001E2  0E53               	movlw	83
 15109  0001E4  010A               	movlb	10	; () banked
 15110  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15111  0001E8  A4D8               	btfss	status,2,c
 15112  0001EA  D0D3               	goto	l2385
 15113                           
 15114                           ; BSR set to: 10
 15115  0001EC  0E42               	movlw	66
 15116  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15117  0001F0  A4D8               	btfss	status,2,c
 15118  0001F2  D0CF               	goto	l2385
 15119                           
 15120                           ; BSR set to: 10
 15121  0001F4  0E3A               	movlw	58
 15122  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15123  0001F8  A4D8               	btfss	status,2,c
 15124  0001FA  D0CB               	goto	l2385
 15125                           
 15126                           ; BSR set to: 10
 15127                           ;term.c: 513: {
 15128                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15129  0001FC  0E57               	movlw	87
 15130  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15131  000200  A4D8               	btfss	status,2,c
 15132  000202  D091               	goto	l2386
 15133                           
 15134                           ; BSR set to: 10
 15135  000204  0E3A               	movlw	58
 15136  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15137  000208  A4D8               	btfss	status,2,c
 15138  00020A  D08D               	goto	l2386
 15139                           
 15140                           ; BSR set to: 10
 15141                           ;term.c: 515: {
 15142                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15143  00020C  CA05  F3AF         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15144                           
 15145                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15146  000210  CA06  F3B0         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15147                           
 15148                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15149  000214  CA08  F3AB         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15150                           
 15151                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15152  000218  CA09  F3AC         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15153                           
 15154                           ; BSR set to: 10
 15155                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15156  00021C  0EAF               	movlw	low Terminal@Len
 15157  00021E  0100               	movlb	0	; () banked
 15158  000220  6F83               	movwf	atoi@s& (0+255),b
 15159  000222  0E03               	movlw	high Terminal@Len
 15160  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15161  000226  EC52  F01B         	call	_atoi	;wreg free
 15162  00022A  0100               	movlb	0	; () banked
 15163  00022C  5183               	movf	?_atoi& (0+255),w,b
 15164  00022E  0102               	movlb	2	; () banked
 15165  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15166                           
 15167                           ; BSR set to: 2
 15168                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15169  000232  0EAB               	movlw	low Terminal@Addr
 15170  000234  0100               	movlb	0	; () banked
 15171  000236  6F83               	movwf	xtoi@s& (0+255),b
 15172  000238  0E03               	movlw	high Terminal@Addr
 15173  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15174  00023C  EC01  F01A         	call	_xtoi	;wreg free
 15175  000240  0100               	movlb	0	; () banked
 15176  000242  5183               	movf	?_xtoi& (0+255),w,b
 15177  000244  0102               	movlb	2	; () banked
 15178  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15179                           
 15180                           ; BSR set to: 2
 15181                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15182  000248  0E00               	movlw	0
 15183  00024A  0100               	movlb	0	; () banked
 15184  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15185  00024E  D032               	goto	l2387
 15186  000250                     
 15187                           ;term.c: 527: {
 15188                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15189                           
 15190                           ; BSR set to: 0
 15191  000250  0100               	movlb	0	; () banked
 15192  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15193  000254  0D02               	mullw	2
 15194  000256  0E0B               	movlw	11
 15195  000258  26F3               	addwf	prodl,f,c
 15196  00025A  0E00               	movlw	0
 15197  00025C  22F4               	addwfc	prodh,f,c
 15198  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15199  000260  24F3               	addwf	prodl,w,c
 15200  000262  6ED9               	movwf	fsr2l,c
 15201  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15202  000266  20F4               	addwfc	prodh,w,c
 15203  000268  6EDA               	movwf	fsr2h,c
 15204  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15205  00026C  0D04               	mullw	4
 15206  00026E  0E66               	movlw	low Terminal@Payload
 15207  000270  24F3               	addwf	prodl,w,c
 15208  000272  6EE1               	movwf	fsr1l,c
 15209  000274  0E07               	movlw	high Terminal@Payload
 15210  000276  20F4               	addwfc	prodh,w,c
 15211  000278  6EE2               	movwf	fsr1h,c
 15212  00027A  CFDF FFE7          	movff	indf2,indf1
 15213                           
 15214                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15215  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15216  000280  0D02               	mullw	2
 15217  000282  0E0C               	movlw	12
 15218  000284  26F3               	addwf	prodl,f,c
 15219  000286  0E00               	movlw	0
 15220  000288  22F4               	addwfc	prodh,f,c
 15221  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15222  00028C  24F3               	addwf	prodl,w,c
 15223  00028E  6ED9               	movwf	fsr2l,c
 15224  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15225  000292  20F4               	addwfc	prodh,w,c
 15226  000294  6EDA               	movwf	fsr2h,c
 15227  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15228  000298  0D04               	mullw	4
 15229  00029A  0E01               	movlw	1
 15230  00029C  26F3               	addwf	prodl,f,c
 15231  00029E  0E00               	movlw	0
 15232  0002A0  22F4               	addwfc	prodh,f,c
 15233  0002A2  0E66               	movlw	low Terminal@Payload
 15234  0002A4  24F3               	addwf	prodl,w,c
 15235  0002A6  6EE1               	movwf	fsr1l,c
 15236  0002A8  0E07               	movlw	high Terminal@Payload
 15237  0002AA  20F4               	addwfc	prodh,w,c
 15238  0002AC  6EE2               	movwf	fsr1h,c
 15239  0002AE  CFDF FFE7          	movff	indf2,indf1
 15240                           
 15241                           ; BSR set to: 0
 15242  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15243  0002B4                     l2387:
 15244                           
 15245                           ; BSR set to: 0
 15246                           
 15247                           ; BSR set to: 0
 15248  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15249  0002B6  0102               	movlb	2	; () banked
 15250  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15251  0002BA  B0D8               	btfsc	status,0,c
 15252  0002BC  D7C9               	goto	l2388
 15253                           
 15254                           ; BSR set to: 2
 15255                           ;term.c: 530: }
 15256                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15257                           
 15258                           ; BSR set to: 2
 15259  0002BE  0E00               	movlw	0
 15260  0002C0  0100               	movlb	0	; () banked
 15261  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15262  0002C4  D01F               	goto	l2390
 15263  0002C6                     
 15264                           ;term.c: 533: {
 15265                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15266                           
 15267                           ; BSR set to: 0
 15268  0002C6  0100               	movlb	0	; () banked
 15269  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15270  0002CA  0D04               	mullw	4
 15271  0002CC  0E66               	movlw	low Terminal@Payload
 15272  0002CE  24F3               	addwf	prodl,w,c
 15273  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15274  0002D2  0E07               	movlw	high Terminal@Payload
 15275  0002D4  20F4               	addwfc	prodh,w,c
 15276  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15277  0002D8  0E00               	movlw	0
 15278  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15279  0002DC  0E00               	movlw	0
 15280  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15281  0002E0  0E00               	movlw	0
 15282  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15283  0002E4  0E10               	movlw	16
 15284  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15285  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15286  0002EC  0100               	movlb	0	; () banked
 15287  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15288  0002F0  0D01               	mullw	1
 15289  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15290  0002F4  24F3               	addwf	prodl,w,c
 15291  0002F6  6ED9               	movwf	fsr2l,c
 15292  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15293  0002FA  20F4               	addwfc	prodh,w,c
 15294  0002FC  6EDA               	movwf	fsr2h,c
 15295  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15296                           
 15297                           ; BSR set to: 0
 15298  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15299  000304                     l2390:
 15300                           
 15301                           ; BSR set to: 0
 15302                           
 15303                           ; BSR set to: 0
 15304  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15305  000306  0102               	movlb	2	; () banked
 15306  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15307  00030A  B0D8               	btfsc	status,0,c
 15308  00030C  D7DC               	goto	l2391
 15309                           
 15310                           ; BSR set to: 2
 15311                           ;term.c: 539: }
 15312                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15313                           
 15314                           ; BSR set to: 2
 15315  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15316  000310  0100               	movlb	0	; () banked
 15317  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15318  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15319  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15320  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15321  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15322  000320  ECEE  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 15323                           
 15324                           ;term.c: 543: }
 15325  000324  0012               	return	
 15326  000326                     l2386:
 15327                           
 15328                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15329  000326  0E52               	movlw	82
 15330  000328  010A               	movlb	10	; () banked
 15331  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15332  00032C  A4D8               	btfss	status,2,c
 15333  00032E  0012               	return	
 15334                           
 15335                           ; BSR set to: 10
 15336  000330  0E3A               	movlw	58
 15337  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15338  000334  A4D8               	btfss	status,2,c
 15339  000336  0012               	return	
 15340                           
 15341                           ; BSR set to: 10
 15342                           ;term.c: 545: {
 15343                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15344  000338  CA05  F3AF         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15345                           
 15346                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15347  00033C  CA06  F3B0         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15348                           
 15349                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15350  000340  CA08  F3AB         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15351                           
 15352                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15353  000344  CA09  F3AC         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15354                           
 15355                           ; BSR set to: 10
 15356                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15357  000348  0EAF               	movlw	low Terminal@Len
 15358  00034A  0100               	movlb	0	; () banked
 15359  00034C  6F83               	movwf	atoi@s& (0+255),b
 15360  00034E  0E03               	movlw	high Terminal@Len
 15361  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15362  000352  EC52  F01B         	call	_atoi	;wreg free
 15363  000356  0100               	movlb	0	; () banked
 15364  000358  5183               	movf	?_atoi& (0+255),w,b
 15365  00035A  0102               	movlb	2	; () banked
 15366  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15367                           
 15368                           ; BSR set to: 2
 15369                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15370  00035E  0EAB               	movlw	low Terminal@Addr
 15371  000360  0100               	movlb	0	; () banked
 15372  000362  6F83               	movwf	xtoi@s& (0+255),b
 15373  000364  0E03               	movlw	high Terminal@Addr
 15374  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15375  000368  EC01  F01A         	call	_xtoi	;wreg free
 15376  00036C  0100               	movlb	0	; () banked
 15377  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15378  000370  0102               	movlb	2	; () banked
 15379  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15380                           
 15381                           ; BSR set to: 2
 15382                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15383  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15384  000376  0100               	movlb	0	; () banked
 15385  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15386  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15387  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15388  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15389  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15390  000386  EC8F  F02D         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15391                           
 15392                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15393  00038A  0E01               	movlw	1
 15394  00038C  0102               	movlb	2	; () banked
 15395  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15396                           
 15397                           ; BSR set to: 2
 15398                           ;term.c: 561: }
 15399                           ;term.c: 562: }
 15400                           
 15401                           ; BSR set to: 2
 15402  000390  0012               	return	
 15403  000392                     l2385:
 15404                           
 15405                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15406                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15407                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15408                           
 15409                           ; BSR set to: 2
 15410  000392  0E54               	movlw	84
 15411  000394  010A               	movlb	10	; () banked
 15412  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15413  000398  A4D8               	btfss	status,2,c
 15414  00039A  0012               	return	
 15415                           
 15416                           ; BSR set to: 10
 15417  00039C  0E45               	movlw	69
 15418  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15419  0003A0  A4D8               	btfss	status,2,c
 15420  0003A2  0012               	return	
 15421                           
 15422                           ; BSR set to: 10
 15423  0003A4  0E4C               	movlw	76
 15424  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15425  0003A8  A4D8               	btfss	status,2,c
 15426  0003AA  0012               	return	
 15427                           
 15428                           ; BSR set to: 10
 15429                           ;term.c: 566: {
 15430                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15431  0003AC  CA03  F3AF         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15432                           
 15433                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15434  0003B0  CA04  F3B0         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15435                           
 15436                           ; BSR set to: 10
 15437                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15438  0003B4  0EAF               	movlw	low Terminal@Len
 15439  0003B6  0100               	movlb	0	; () banked
 15440  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15441  0003BA  0E03               	movlw	high Terminal@Len
 15442  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15443  0003BE  EC52  F01B         	call	_atoi	;wreg free
 15444  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15445  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15446                           
 15447                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15448  0003CA  0E00               	movlw	0
 15449  0003CC  0100               	movlb	0	; () banked
 15450  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15451  0003D0  D018               	goto	l2397
 15452  0003D2                     
 15453                           ; BSR set to: 0
 15454                           ;term.c: 573: {
 15455                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15456                           
 15457                           ; BSR set to: 0
 15458  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15459  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15460  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15461  0003D8  0E05               	movlw	5
 15462  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15463  0003DC  0E00               	movlw	0
 15464  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15465  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15466  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15467  0003E4  6ED9               	movwf	fsr2l,c
 15468  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15469  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15470  0003EA  6EDA               	movwf	fsr2h,c
 15471  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15472  0003EE  0D01               	mullw	1
 15473  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15474  0003F2  24F3               	addwf	prodl,w,c
 15475  0003F4  6EE1               	movwf	fsr1l,c
 15476  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15477  0003F8  20F4               	addwfc	prodh,w,c
 15478  0003FA  6EE2               	movwf	fsr1h,c
 15479  0003FC  CFDF FFE7          	movff	indf2,indf1
 15480                           
 15481                           ; BSR set to: 0
 15482  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15483  000402                     l2397:
 15484                           
 15485                           ; BSR set to: 0
 15486                           
 15487                           ; BSR set to: 0
 15488  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15489  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15490  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15491  000408  0103               	movlb	3	; () banked
 15492  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15493  00040C  0100               	movlb	0	; () banked
 15494  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15495  000410  0103               	movlb	3	; () banked
 15496  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15497  000414  0100               	movlb	0	; () banked
 15498  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15499  000418  B0D8               	btfsc	status,0,c
 15500  00041A  0012               	return	
 15501  00041C  D7DA               	goto	l2398
 15502  00041E                     
 15503                           ;term.c: 619: if((cdc_trf_state == 0))
 15504                           
 15505                           ; BSR set to: 0
 15506  00041E  0100               	movlb	0	; () banked
 15507  000420  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15508  000422  A4D8               	btfss	status,2,c
 15509  000424  0012               	return	
 15510                           
 15511                           ; BSR set to: 0
 15512                           ;term.c: 620: {
 15513                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15514  000426  0E53               	movlw	83
 15515  000428  0102               	movlb	2	; () banked
 15516  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15517                           
 15518                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15519  00042C  0E42               	movlw	66
 15520  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15521                           
 15522                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15523  000430  0E5B               	movlw	91
 15524  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15525                           
 15526                           ; BSR set to: 2
 15527                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15528  000434  C3AB  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15529                           
 15530                           ; BSR set to: 2
 15531                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15532  000438  C3AC  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15533                           
 15534                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15535  00043C  0E5D               	movlw	93
 15536  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15537                           
 15538                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15539  000440  0E3A               	movlw	58
 15540  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15541                           
 15542                           ; BSR set to: 2
 15543                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15544  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15545  000446  0100               	movlb	0	; () banked
 15546  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15547  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15548  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15549  00044E  0E07               	movlw	7
 15550  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15551  000452  EC93  F030         	call	_putUSBUSART	;wreg free
 15552                           
 15553                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15554  000456  0E02               	movlw	2
 15555  000458  0102               	movlb	2	; () banked
 15556  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15557                           
 15558                           ; BSR set to: 2
 15559                           ;term.c: 632: }
 15560                           ;term.c: 633: break;
 15561  00045C  0012               	return	
 15562  00045E                     
 15563                           ; BSR set to: 2
 15564                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15565                           
 15566                           ; BSR set to: 2
 15567  00045E  ECB5  F030         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15568  000462  06E8               	decf	wreg,f,c
 15569  000464  A4D8               	btfss	status,2,c
 15570  000466  D088               	goto	l2406
 15571                           
 15572                           ;term.c: 638: {
 15573                           ;term.c: 640: if (FormatOption == 1u)
 15574  000468  0102               	movlb	2	; () banked
 15575  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15576  00046C  A4D8               	btfss	status,2,c
 15577  00046E  D027               	goto	u13300
 15578                           
 15579                           ; BSR set to: 2
 15580                           ;term.c: 641: {
 15581                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15582  000470  0E00               	movlw	0
 15583  000472  0100               	movlb	0	; () banked
 15584  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15585  000476  D01E               	goto	l2408
 15586  000478                     
 15587                           ;term.c: 644: {
 15588                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15589                           
 15590                           ; BSR set to: 0
 15591  000478  0100               	movlb	0	; () banked
 15592  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15593  00047C  0D04               	mullw	4
 15594  00047E  0E66               	movlw	low Terminal@Payload
 15595  000480  24F3               	addwf	prodl,w,c
 15596  000482  6F93               	movwf	itoa@buf& (0+255),b
 15597  000484  0E07               	movlw	high Terminal@Payload
 15598  000486  20F4               	addwfc	prodh,w,c
 15599  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15600  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15601  00048C  0D01               	mullw	1
 15602  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15603  000490  24F3               	addwf	prodl,w,c
 15604  000492  6ED9               	movwf	fsr2l,c
 15605  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15606  000496  20F4               	addwfc	prodh,w,c
 15607  000498  6EDA               	movwf	fsr2h,c
 15608  00049A  50DF               	movf	indf2,w,c
 15609  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15610  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15611  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15612  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15613  0004A4  0E00               	movlw	0
 15614  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15615  0004A8  0E0A               	movlw	10
 15616  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15617  0004AC  EC08  F02D         	call	_itoa	;wreg free
 15618  0004B0  0100               	movlb	0	; () banked
 15619  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15620  0004B4                     l2408:
 15621                           
 15622                           ; BSR set to: 0
 15623                           
 15624                           ; BSR set to: 0
 15625  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15626  0004B6  0102               	movlb	2	; () banked
 15627  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15628  0004BA  B0D8               	btfsc	status,0,c
 15629  0004BC  D7DD               	goto	l2409
 15630  0004BE                     u13300:
 15631                           
 15632                           ; BSR set to: 2
 15633                           ;term.c: 646: }
 15634                           ;term.c: 647: }
 15635                           ;term.c: 650: if((cdc_trf_state == 0))
 15636                           
 15637                           ; BSR set to: 2
 15638                           
 15639                           ; BSR set to: 2
 15640  0004BE  0100               	movlb	0	; () banked
 15641  0004C0  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15642  0004C2  A4D8               	btfss	status,2,c
 15643  0004C4  0012               	return	
 15644                           
 15645                           ; BSR set to: 0
 15646                           ;term.c: 651: {
 15647                           ;term.c: 653: if (FormatOption == 1u)
 15648  0004C6  0102               	movlb	2	; () banked
 15649  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15650  0004CA  A4D8               	btfss	status,2,c
 15651  0004CC  D02B               	goto	l2412
 15652                           
 15653                           ; BSR set to: 2
 15654                           ;term.c: 654: {
 15655                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15656  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15657  0004D0  0D08               	mullw	8
 15658  0004D2  0E03               	movlw	3
 15659  0004D4  26F3               	addwf	prodl,f,c
 15660  0004D6  0E00               	movlw	0
 15661  0004D8  22F4               	addwfc	prodh,f,c
 15662  0004DA  0E66               	movlw	low Terminal@Payload
 15663  0004DC  24F3               	addwf	prodl,w,c
 15664  0004DE  6ED9               	movwf	fsr2l,c
 15665  0004E0  0E07               	movlw	high Terminal@Payload
 15666  0004E2  20F4               	addwfc	prodh,w,c
 15667  0004E4  6EDA               	movwf	fsr2h,c
 15668  0004E6  0E0D               	movlw	13
 15669  0004E8  6EDF               	movwf	indf2,c
 15670                           
 15671                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15672  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15673  0004EC  0D08               	mullw	8
 15674  0004EE  0E02               	movlw	2
 15675  0004F0  26F3               	addwf	prodl,f,c
 15676  0004F2  0E00               	movlw	0
 15677  0004F4  22F4               	addwfc	prodh,f,c
 15678  0004F6  0E66               	movlw	low Terminal@Payload
 15679  0004F8  24F3               	addwf	prodl,w,c
 15680  0004FA  6ED9               	movwf	fsr2l,c
 15681  0004FC  0E07               	movlw	high Terminal@Payload
 15682  0004FE  20F4               	addwfc	prodh,w,c
 15683  000500  6EDA               	movwf	fsr2h,c
 15684  000502  0E0A               	movlw	10
 15685  000504  6EDF               	movwf	indf2,c
 15686                           
 15687                           ; BSR set to: 2
 15688                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15689  000506  0E66               	movlw	low Terminal@Payload
 15690  000508  0100               	movlb	0	; () banked
 15691  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15692  00050C  0E07               	movlw	high Terminal@Payload
 15693  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15694  000510  0102               	movlb	2	; () banked
 15695  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15696  000514  0D02               	mullw	2
 15697  000516  50F3               	movf	prodl,w,c
 15698  000518  0F04               	addlw	4
 15699  00051A  0100               	movlb	0	; () banked
 15700  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15701  00051E  EC93  F030         	call	_putUSBUSART	;wreg free
 15702                           
 15703                           ;term.c: 659: }
 15704  000522  D026               	goto	l2413
 15705  000524                     l2412:
 15706                           
 15707                           ;term.c: 660: else
 15708                           ;term.c: 661: {
 15709                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15710  000524  0102               	movlb	2	; () banked
 15711  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15712  000528  0D01               	mullw	1
 15713  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15714  00052C  24F3               	addwf	prodl,w,c
 15715  00052E  6ED9               	movwf	fsr2l,c
 15716  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15717  000532  20F4               	addwfc	prodh,w,c
 15718  000534  6EDA               	movwf	fsr2h,c
 15719  000536  0E0D               	movlw	13
 15720  000538  6EDF               	movwf	indf2,c
 15721                           
 15722                           ; BSR set to: 2
 15723                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15724  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15725  00053C  0100               	movlb	0	; () banked
 15726  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15727  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15728  000542  0E01               	movlw	1
 15729  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15730  000546  0E00               	movlw	0
 15731  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15732  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15733  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15734  00054E  6ED9               	movwf	fsr2l,c
 15735  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15736  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15737  000554  6EDA               	movwf	fsr2h,c
 15738  000556  0E0A               	movlw	10
 15739  000558  6EDF               	movwf	indf2,c
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15743  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15744  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15745  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15746  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15747  000562  0102               	movlb	2	; () banked
 15748  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15749  000566  0F02               	addlw	2
 15750  000568  0100               	movlb	0	; () banked
 15751  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15752  00056C  EC93  F030         	call	_putUSBUSART	;wreg free
 15753  000570                     l2413:
 15754                           
 15755                           ;term.c: 666: }
 15756                           ;term.c: 668: TermState = Term_GetData;
 15757  000570  0E00               	movlw	0
 15758  000572  0102               	movlb	2	; () banked
 15759  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15760                           
 15761                           ; BSR set to: 2
 15762                           ;term.c: 669: }
 15763                           ;term.c: 670: }
 15764  000576  0012               	return	
 15765  000578                     l2406:
 15766                           
 15767                           ;term.c: 671: else
 15768                           ;term.c: 672: {
 15769                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15770                           
 15771                           ; BSR set to: 2
 15772  000578  0EC5               	movlw	low Terminal@SwTimer
 15773  00057A  0100               	movlb	0	; () banked
 15774  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15775  00057E  0E04               	movlw	high Terminal@SwTimer
 15776  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15777  000582  0EB8               	movlw	184
 15778  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15779  000586  0E0B               	movlw	11
 15780  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15781  00058A  0E00               	movlw	0
 15782  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15783  00058E  0E00               	movlw	0
 15784  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15785  000592  EC23  F027         	call	_OsTmr_Wait	;wreg free
 15786  000596  06E8               	decf	wreg,f,c
 15787  000598  A4D8               	btfss	status,2,c
 15788  00059A  0012               	return	
 15789                           
 15790                           ;term.c: 675: {
 15791                           ;term.c: 677: if((cdc_trf_state == 0))
 15792  00059C  0100               	movlb	0	; () banked
 15793  00059E  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15794  0005A0  A4D8               	btfss	status,2,c
 15795  0005A2  0012               	return	
 15796                           
 15797                           ; BSR set to: 0
 15798                           ;term.c: 678: {
 15799                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15800  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15801  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15802  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15803  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15804  0005AC  0E6C               	movlw	low STR_21
 15805  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15806  0005B0  0EFE               	movlw	high STR_21
 15807  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15808  0005B4  EC0A  F02F         	call	_strcpy	;wreg free
 15809                           
 15810                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15811  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15812  0005BA  0100               	movlb	0	; () banked
 15813  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15814  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15815  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15816  0005C2  0E29               	movlw	41
 15817  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15818  0005C6  EC93  F030         	call	_putUSBUSART	;wreg free
 15819                           
 15820                           ;term.c: 682: TermState = Term_GetData;
 15821  0005CA  0E00               	movlw	0
 15822  0005CC  0102               	movlb	2	; () banked
 15823  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15824                           
 15825                           ; BSR set to: 2
 15826                           ;term.c: 693: }
 15827                           
 15828                           ; BSR set to: 2
 15829                           ;term.c: 692: break;
 15830                           
 15831                           ;term.c: 691: default:
 15832                           
 15833                           ; BSR set to: 2
 15834                           ;term.c: 689: break;
 15835                           
 15836                           ;term.c: 688: case Term_ReadSlvUartData:
 15837                           
 15838                           ; BSR set to: 2
 15839                           ;term.c: 683: }
 15840                           ;term.c: 684: }
 15841                           ;term.c: 685: }
 15842                           ;term.c: 686: break;
 15843                           
 15844                           ; BSR set to: 2
 15845                           
 15846                           ; BSR set to: 2
 15847  0005D0  0012               	return	
 15848  0005D2                     l2367:
 15849                           
 15850                           ; BSR set to: 2
 15851  0005D2  0102               	movlb	2	; () banked
 15852  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15853                           
 15854                           ; Switch size 1, requested type "space"
 15855                           ; Number of cases is 4, Range of values is 0 to 3
 15856                           ; switch strategies available:
 15857                           ; Name         Instructions Cycles
 15858                           ; simple_byte           13     7 (average)
 15859                           ;	Chosen strategy is simple_byte
 15860  0005D6  0A00               	xorlw	0	; case 0
 15861  0005D8  B4D8               	btfsc	status,2,c
 15862  0005DA  D583               	goto	l2368
 15863  0005DC  0A01               	xorlw	1	; case 1
 15864  0005DE  B4D8               	btfsc	status,2,c
 15865  0005E0  D71E               	goto	l2403
 15866  0005E2  0A03               	xorlw	3	; case 2
 15867  0005E4  B4D8               	btfsc	status,2,c
 15868  0005E6  D73B               	goto	l2405
 15869  0005E8  0A01               	xorlw	1	; case 3
 15870  0005EA  0012               	return	
 15871  0005EC                     __end_of_Terminal:
 15872                           	opt stack 0
 15873                           tosu	equ	0xFFF
 15874                           tosh	equ	0xFFE
 15875                           tosl	equ	0xFFD
 15876                           pclath	equ	0xFFA
 15877                           tblptru	equ	0xFF8
 15878                           tblptrh	equ	0xFF7
 15879                           tblptrl	equ	0xFF6
 15880                           tablat	equ	0xFF5
 15881                           prodh	equ	0xFF4
 15882                           prodl	equ	0xFF3
 15883                           intcon	equ	0xFF2
 15884                           intcon2	equ	0xFF1
 15885                           intcon3	equ	0xFF0
 15886                           indf0	equ	0xFEF
 15887                           postinc0	equ	0xFEE
 15888                           plusw0	equ	0xFEB
 15889                           fsr0h	equ	0xFEA
 15890                           fsr0l	equ	0xFE9
 15891                           wreg	equ	0xFE8
 15892                           indf1	equ	0xFE7
 15893                           postinc1	equ	0xFE6
 15894                           postdec1	equ	0xFE5
 15895                           fsr1h	equ	0xFE2
 15896                           fsr1l	equ	0xFE1
 15897                           indf2	equ	0xFDF
 15898                           postinc2	equ	0xFDE
 15899                           postdec2	equ	0xFDD
 15900                           plusw2	equ	0xFDB
 15901                           fsr2h	equ	0xFDA
 15902                           fsr2l	equ	0xFD9
 15903                           status	equ	0xFD8
 15904                           
 15905 ;; *************** function _xtoi *****************
 15906 ;; Defined at:
 15907 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15908 ;; Parameters:    Size  Location     Type
 15909 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15910 ;;		 -> Terminal@Addr(4), 
 15911 ;; Auto vars:     Size  Location     Type
 15912 ;;  val             2   40[BANK0 ] unsigned int 
 15913 ;;  c               1   42[BANK0 ] unsigned char 
 15914 ;;  sign            1   39[BANK0 ] unsigned char 
 15915 ;; Return value:  Size  Location     Type
 15916 ;;                  2   35[BANK0 ] unsigned int 
 15917 ;; Registers used:
 15918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15919 ;; Tracked objects:
 15920 ;;		On entry : 0/0
 15921 ;;		On exit  : 0/0
 15922 ;;		Unchanged: 0/0
 15923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15925 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15927 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15928 ;;Total ram usage:        8 bytes
 15929 ;; Hardware stack levels used:    1
 15930 ;; Hardware stack levels required when called:   13
 15931 ;; This function calls:
 15932 ;;		_isdigit
 15933 ;;		_isspace
 15934 ;;		_isupper
 15935 ;;		_isxdigit
 15936 ;;		_tolower
 15937 ;; This function is called by:
 15938 ;;		_Terminal
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942                           	psect	text61
 15943  003402                     __ptext61:
 15944                           	opt stack 0
 15945  003402                     _xtoi:
 15946                           	opt stack 12
 15947                           
 15948                           ;incstack = 0
 15949  003402  0E00               	movlw	0
 15950  003404  0100               	movlb	0	; () banked
 15951  003406  6F87               	movwf	xtoi@sign& (0+255),b
 15952  003408  0E00               	movlw	0
 15953  00340A  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15954  00340C  0E00               	movlw	0
 15955  00340E  6F88               	movwf	xtoi@val& (0+255),b
 15956  003410  D003               	goto	l3355
 15957  003412                     
 15958                           ; BSR set to: 0
 15959  003412  0100               	movlb	0	; () banked
 15960  003414  4B83               	infsnz	xtoi@s& (0+255),f,b
 15961  003416  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15962  003418                     l3355:
 15963                           
 15964                           ; BSR set to: 0
 15965                           
 15966                           ; BSR set to: 0
 15967  003418  C083  FFD9         	movff	xtoi@s,fsr2l
 15968  00341C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15969  003420  50DF               	movf	indf2,w,c
 15970  003422  ECDC  F02F         	call	_isspace
 15971  003426  B0D8               	btfsc	status,0,c
 15972  003428  D7F4               	goto	l3356
 15973  00342A  C083  FFD9         	movff	xtoi@s,fsr2l
 15974  00342E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15975  003432  0E2D               	movlw	45
 15976  003434  18DE               	xorwf	postinc2,w,c
 15977  003436  A4D8               	btfss	status,2,c
 15978  003438  D003               	goto	l3358
 15979  00343A  0100               	movlb	0	; () banked
 15980  00343C  2B87               	incf	xtoi@sign& (0+255),f,b
 15981  00343E  D009               	goto	L15
 15982  003440                     l3358:
 15983                           
 15984                           ; BSR set to: 0
 15985  003440  C083  FFD9         	movff	xtoi@s,fsr2l
 15986  003444  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15987  003448  0E2B               	movlw	43
 15988  00344A  18DE               	xorwf	postinc2,w,c
 15989  00344C  A4D8               	btfss	status,2,c
 15990  00344E  D028               	goto	l3361
 15991  003450  0100               	movlb	0	; () banked
 15992  003452                     L15:
 15993  003452  4B83               	infsnz	xtoi@s& (0+255),f,b
 15994  003454  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15995                           
 15996                           ; BSR set to: 0
 15997                           
 15998                           ; BSR set to: 0
 15999  003456  D024               	goto	l3361
 16000  003458                     
 16001                           ; BSR set to: 0
 16002  003458  0100               	movlb	0	; () banked
 16003  00345A  518A               	movf	xtoi@c& (0+255),w,b
 16004  00345C  EC82  F030         	call	_isupper
 16005  003460  A0D8               	btfss	status,0,c
 16006  003462  D006               	goto	l3363
 16007  003464  0100               	movlb	0	; () banked
 16008  003466  518A               	movf	xtoi@c& (0+255),w,b
 16009  003468  EC46  F031         	call	_tolower
 16010  00346C  0100               	movlb	0	; () banked
 16011  00346E  6F8A               	movwf	xtoi@c& (0+255),b
 16012  003470                     l3363:
 16013  003470  0100               	movlb	0	; () banked
 16014  003472  518A               	movf	xtoi@c& (0+255),w,b
 16015  003474  ECA4  F030         	call	_isdigit
 16016  003478  A0D8               	btfss	status,0,c
 16017  00347A  D002               	goto	l3364
 16018  00347C  0E30               	movlw	48
 16019  00347E  D001               	goto	L14
 16020  003480                     l3364:
 16021                           
 16022                           ; BSR set to: 0
 16023  003480  0E57               	movlw	87
 16024  003482                     L14:
 16025  003482  0100               	movlb	0	; () banked
 16026  003484  5F8A               	subwf	xtoi@c& (0+255),f,b
 16027                           
 16028                           ; BSR set to: 0
 16029  003486  3B88               	swapf	xtoi@val& (0+255),f,b
 16030  003488  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16031  00348A  0EF0               	movlw	240
 16032  00348C  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16033  00348E  5188               	movf	xtoi@val& (0+255),w,b
 16034  003490  0B0F               	andlw	15
 16035  003492  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16036  003494  0EF0               	movlw	240
 16037  003496  1788               	andwf	xtoi@val& (0+255),f,b
 16038  003498  518A               	movf	xtoi@c& (0+255),w,b
 16039  00349A  2788               	addwf	xtoi@val& (0+255),f,b
 16040  00349C  0E00               	movlw	0
 16041  00349E  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16042  0034A0                     l3361:
 16043                           
 16044                           ; BSR set to: 0
 16045  0034A0  C083  FFD9         	movff	xtoi@s,fsr2l
 16046  0034A4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16047  0034A8  0100               	movlb	0	; () banked
 16048  0034AA  4B83               	infsnz	xtoi@s& (0+255),f,b
 16049  0034AC  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16050  0034AE  50DF               	movf	indf2,w,c
 16051  0034B0  6F8A               	movwf	xtoi@c& (0+255),b
 16052  0034B2  518A               	movf	xtoi@c& (0+255),w,b
 16053  0034B4  EC2C  F02E         	call	_isxdigit
 16054  0034B8  B0D8               	btfsc	status,0,c
 16055  0034BA  D7CE               	goto	l3362
 16056  0034BC  0100               	movlb	0	; () banked
 16057  0034BE  5187               	movf	xtoi@sign& (0+255),w,b
 16058  0034C0  B4D8               	btfsc	status,2,c
 16059  0034C2  D00D               	goto	l3367
 16060                           
 16061                           ; BSR set to: 0
 16062  0034C4  C088  F085         	movff	xtoi@val,??_xtoi
 16063  0034C8  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16064  0034CC  1F85               	comf	??_xtoi& (0+255),f,b
 16065  0034CE  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16066  0034D0  4B85               	infsnz	??_xtoi& (0+255),f,b
 16067  0034D2  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16068  0034D4  C085  F083         	movff	??_xtoi,?_xtoi
 16069  0034D8  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16070  0034DC  0012               	return	
 16071  0034DE                     l3367:
 16072                           
 16073                           ; BSR set to: 0
 16074  0034DE  C088  F083         	movff	xtoi@val,?_xtoi
 16075  0034E2  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16076                           
 16077                           ; BSR set to: 0
 16078  0034E6  0012               	return		;funcret
 16079  0034E8                     __end_of_xtoi:
 16080                           	opt stack 0
 16081                           tosu	equ	0xFFF
 16082                           tosh	equ	0xFFE
 16083                           tosl	equ	0xFFD
 16084                           pclath	equ	0xFFA
 16085                           tblptru	equ	0xFF8
 16086                           tblptrh	equ	0xFF7
 16087                           tblptrl	equ	0xFF6
 16088                           tablat	equ	0xFF5
 16089                           prodh	equ	0xFF4
 16090                           prodl	equ	0xFF3
 16091                           intcon	equ	0xFF2
 16092                           intcon2	equ	0xFF1
 16093                           intcon3	equ	0xFF0
 16094                           indf0	equ	0xFEF
 16095                           postinc0	equ	0xFEE
 16096                           plusw0	equ	0xFEB
 16097                           fsr0h	equ	0xFEA
 16098                           fsr0l	equ	0xFE9
 16099                           wreg	equ	0xFE8
 16100                           indf1	equ	0xFE7
 16101                           postinc1	equ	0xFE6
 16102                           postdec1	equ	0xFE5
 16103                           fsr1h	equ	0xFE2
 16104                           fsr1l	equ	0xFE1
 16105                           indf2	equ	0xFDF
 16106                           postinc2	equ	0xFDE
 16107                           postdec2	equ	0xFDD
 16108                           plusw2	equ	0xFDB
 16109                           fsr2h	equ	0xFDA
 16110                           fsr2l	equ	0xFD9
 16111                           status	equ	0xFD8
 16112                           
 16113 ;; *************** function _tolower *****************
 16114 ;; Defined at:
 16115 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;  c               1    wreg     unsigned char 
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;  c               1   29[BANK0 ] unsigned char 
 16120 ;; Return value:  Size  Location     Type
 16121 ;;                  1    wreg      unsigned char 
 16122 ;; Registers used:
 16123 ;;		wreg, status,2, status,0
 16124 ;; Tracked objects:
 16125 ;;		On entry : 0/0
 16126 ;;		On exit  : 0/0
 16127 ;;		Unchanged: 0/0
 16128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16133 ;;Total ram usage:        1 bytes
 16134 ;; Hardware stack levels used:    1
 16135 ;; Hardware stack levels required when called:   11
 16136 ;; This function calls:
 16137 ;;		Nothing
 16138 ;; This function is called by:
 16139 ;;		_xtoi
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text62
 16144  00628C                     __ptext62:
 16145                           	opt stack 0
 16146  00628C                     _tolower:
 16147                           	opt stack 13
 16148                           
 16149                           ; BSR set to: 0
 16150                           ;incstack = 0
 16151                           ;tolower@c stored from wreg
 16152  00628C  0100               	movlb	0	; () banked
 16153  00628E  6F7D               	movwf	tolower@c& (0+255),b
 16154  006290  0E5B               	movlw	91
 16155  006292  0100               	movlb	0	; () banked
 16156  006294  617D               	cpfslt	tolower@c& (0+255),b
 16157  006296  D004               	goto	l3414
 16158                           
 16159                           ; BSR set to: 0
 16160  006298  0E40               	movlw	64
 16161  00629A  657D               	cpfsgt	tolower@c& (0+255),b
 16162  00629C  D001               	goto	l3414
 16163                           
 16164                           ; BSR set to: 0
 16165  00629E  8B7D               	bsf	tolower@c& (0+255),5,b
 16166  0062A0                     l3414:
 16167                           
 16168                           ; BSR set to: 0
 16169                           
 16170                           ; BSR set to: 0
 16171  0062A0  517D               	movf	tolower@c& (0+255),w,b
 16172  0062A2  0012               	return	
 16173  0062A4                     __end_of_tolower:
 16174                           	opt stack 0
 16175                           tosu	equ	0xFFF
 16176                           tosh	equ	0xFFE
 16177                           tosl	equ	0xFFD
 16178                           pclath	equ	0xFFA
 16179                           tblptru	equ	0xFF8
 16180                           tblptrh	equ	0xFF7
 16181                           tblptrl	equ	0xFF6
 16182                           tablat	equ	0xFF5
 16183                           prodh	equ	0xFF4
 16184                           prodl	equ	0xFF3
 16185                           intcon	equ	0xFF2
 16186                           intcon2	equ	0xFF1
 16187                           intcon3	equ	0xFF0
 16188                           indf0	equ	0xFEF
 16189                           postinc0	equ	0xFEE
 16190                           plusw0	equ	0xFEB
 16191                           fsr0h	equ	0xFEA
 16192                           fsr0l	equ	0xFE9
 16193                           wreg	equ	0xFE8
 16194                           indf1	equ	0xFE7
 16195                           postinc1	equ	0xFE6
 16196                           postdec1	equ	0xFE5
 16197                           fsr1h	equ	0xFE2
 16198                           fsr1l	equ	0xFE1
 16199                           indf2	equ	0xFDF
 16200                           postinc2	equ	0xFDE
 16201                           postdec2	equ	0xFDD
 16202                           plusw2	equ	0xFDB
 16203                           fsr2h	equ	0xFDA
 16204                           fsr2l	equ	0xFD9
 16205                           status	equ	0xFD8
 16206                           
 16207 ;; *************** function _isxdigit *****************
 16208 ;; Defined at:
 16209 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;  c               1    wreg     unsigned char 
 16212 ;; Auto vars:     Size  Location     Type
 16213 ;;  c               1   34[BANK0 ] unsigned char 
 16214 ;; Return value:  Size  Location     Type
 16215 ;;		None               void
 16216 ;; Registers used:
 16217 ;;		wreg, status,2, status,0, cstack
 16218 ;; Tracked objects:
 16219 ;;		On entry : 0/0
 16220 ;;		On exit  : 0/0
 16221 ;;		Unchanged: 0/0
 16222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16225 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16226 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16227 ;;Total ram usage:        3 bytes
 16228 ;; Hardware stack levels used:    1
 16229 ;; Hardware stack levels required when called:   12
 16230 ;; This function calls:
 16231 ;;		_isdigit
 16232 ;; This function is called by:
 16233 ;;		_xtoi
 16234 ;; This function uses a non-reentrant model
 16235 ;;
 16236                           
 16237                           	psect	text63
 16238  005C58                     __ptext63:
 16239                           	opt stack 0
 16240  005C58                     _isxdigit:
 16241                           	opt stack 12
 16242                           
 16243                           ; BSR set to: 0
 16244                           ;incstack = 0
 16245                           ;isxdigit@c stored from wreg
 16246  005C58  0100               	movlb	0	; () banked
 16247  005C5A  6F82               	movwf	isxdigit@c& (0+255),b
 16248  005C5C  0E01               	movlw	1
 16249  005C5E  0100               	movlb	0	; () banked
 16250  005C60  6F81               	movwf	_isxdigit$6521& (0+255),b
 16251                           
 16252                           ; BSR set to: 0
 16253  005C62  0E67               	movlw	103
 16254  005C64  6182               	cpfslt	isxdigit@c& (0+255),b
 16255  005C66  D003               	goto	u11680
 16256                           
 16257                           ; BSR set to: 0
 16258  005C68  0E61               	movlw	97
 16259  005C6A  6182               	cpfslt	isxdigit@c& (0+255),b
 16260  005C6C  D00E               	goto	l3410
 16261  005C6E                     u11680:
 16262                           
 16263                           ; BSR set to: 0
 16264                           
 16265                           ; BSR set to: 0
 16266  005C6E  0E47               	movlw	71
 16267  005C70  6182               	cpfslt	isxdigit@c& (0+255),b
 16268  005C72  D003               	goto	u11700
 16269                           
 16270                           ; BSR set to: 0
 16271  005C74  0E41               	movlw	65
 16272  005C76  6182               	cpfslt	isxdigit@c& (0+255),b
 16273  005C78  D008               	goto	l3410
 16274  005C7A                     u11700:
 16275                           
 16276                           ; BSR set to: 0
 16277                           
 16278                           ; BSR set to: 0
 16279  005C7A  5182               	movf	isxdigit@c& (0+255),w,b
 16280  005C7C  ECA4  F030         	call	_isdigit
 16281  005C80  B0D8               	btfsc	status,0,c
 16282  005C82  D003               	goto	l3410
 16283  005C84  0E00               	movlw	0
 16284  005C86  0100               	movlb	0	; () banked
 16285  005C88  6F81               	movwf	_isxdigit$6521& (0+255),b
 16286  005C8A                     l3410:
 16287                           
 16288                           ; BSR set to: 0
 16289  005C8A  C081  F080         	movff	_isxdigit$6521,??_isxdigit
 16290  005C8E  0100               	movlb	0	; () banked
 16291  005C90  3180               	rrcf	??_isxdigit& (0+255),w,b
 16292  005C92  0012               	return	
 16293  005C94                     __end_of_isxdigit:
 16294                           	opt stack 0
 16295                           tosu	equ	0xFFF
 16296                           tosh	equ	0xFFE
 16297                           tosl	equ	0xFFD
 16298                           pclath	equ	0xFFA
 16299                           tblptru	equ	0xFF8
 16300                           tblptrh	equ	0xFF7
 16301                           tblptrl	equ	0xFF6
 16302                           tablat	equ	0xFF5
 16303                           prodh	equ	0xFF4
 16304                           prodl	equ	0xFF3
 16305                           intcon	equ	0xFF2
 16306                           intcon2	equ	0xFF1
 16307                           intcon3	equ	0xFF0
 16308                           indf0	equ	0xFEF
 16309                           postinc0	equ	0xFEE
 16310                           plusw0	equ	0xFEB
 16311                           fsr0h	equ	0xFEA
 16312                           fsr0l	equ	0xFE9
 16313                           wreg	equ	0xFE8
 16314                           indf1	equ	0xFE7
 16315                           postinc1	equ	0xFE6
 16316                           postdec1	equ	0xFE5
 16317                           fsr1h	equ	0xFE2
 16318                           fsr1l	equ	0xFE1
 16319                           indf2	equ	0xFDF
 16320                           postinc2	equ	0xFDE
 16321                           postdec2	equ	0xFDD
 16322                           plusw2	equ	0xFDB
 16323                           fsr2h	equ	0xFDA
 16324                           fsr2l	equ	0xFD9
 16325                           status	equ	0xFD8
 16326                           
 16327 ;; *************** function _strtol *****************
 16328 ;; Defined at:
 16329 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16330 ;; Parameters:    Size  Location     Type
 16331 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16332 ;;		 -> Terminal@Payload(80), 
 16333 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16334 ;;		 -> NULL(0), 
 16335 ;;  base            2   45[BANK0 ] int 
 16336 ;; Auto vars:     Size  Location     Type
 16337 ;;  a               4   52[BANK0 ] long 
 16338 ;;  c               1   56[BANK0 ] unsigned char 
 16339 ;;  sign            1   51[BANK0 ] unsigned char 
 16340 ;; Return value:  Size  Location     Type
 16341 ;;                  4   41[BANK0 ] long 
 16342 ;; Registers used:
 16343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16344 ;; Tracked objects:
 16345 ;;		On entry : 0/0
 16346 ;;		On exit  : 0/0
 16347 ;;		Unchanged: 0/0
 16348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16350 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16352 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16353 ;;Total ram usage:       16 bytes
 16354 ;; Hardware stack levels used:    1
 16355 ;; Hardware stack levels required when called:   13
 16356 ;; This function calls:
 16357 ;;		___lmul
 16358 ;;		_isalpha
 16359 ;;		_isdigit
 16360 ;;		_isspace
 16361 ;;		_toupper
 16362 ;; This function is called by:
 16363 ;;		_Terminal
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           	psect	text64
 16368  00181C                     __ptext64:
 16369                           	opt stack 0
 16370  00181C                     _strtol:
 16371                           	opt stack 12
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;incstack = 0
 16375  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16376  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16377  001824  50DF               	movf	indf2,w,c
 16378  001826  0100               	movlb	0	; () banked
 16379  001828  6F98               	movwf	strtol@c& (0+255),b
 16380                           
 16381                           ; BSR set to: 0
 16382  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16383  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16384                           
 16385                           ; BSR set to: 0
 16386  00182E  5198               	movf	strtol@c& (0+255),w,b
 16387  001830  ECDC  F02F         	call	_isspace
 16388  001834  B0D8               	btfsc	status,0,c
 16389  001836  D7F2               	goto	_strtol
 16390  001838  0E00               	movlw	0
 16391  00183A  0100               	movlb	0	; () banked
 16392  00183C  6F94               	movwf	strtol@a& (0+255),b
 16393  00183E  0E00               	movlw	0
 16394  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16395  001842  0E00               	movlw	0
 16396  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16397  001846  0E00               	movlw	0
 16398  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16399  00184A  0E00               	movlw	0
 16400  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16401                           
 16402                           ; BSR set to: 0
 16403  00184E  0E2D               	movlw	45
 16404  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16405  001852  A4D8               	btfss	status,2,c
 16406  001854  D003               	goto	l3317
 16407                           
 16408                           ; BSR set to: 0
 16409  001856  0E01               	movlw	1
 16410  001858  6F93               	movwf	strtol@sign& (0+255),b
 16411  00185A  D004               	goto	u12150
 16412  00185C                     l3317:
 16413                           
 16414                           ; BSR set to: 0
 16415                           
 16416                           ; BSR set to: 0
 16417  00185C  0E2B               	movlw	43
 16418  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16419  001860  A4D8               	btfss	status,2,c
 16420  001862  D008               	goto	l3319
 16421  001864                     u12150:
 16422                           
 16423                           ; BSR set to: 0
 16424  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16425  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16426  00186C  50DF               	movf	indf2,w,c
 16427  00186E  6F98               	movwf	strtol@c& (0+255),b
 16428                           
 16429                           ; BSR set to: 0
 16430  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16431  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16432  001874                     l3319:
 16433                           
 16434                           ; BSR set to: 0
 16435                           
 16436                           ; BSR set to: 0
 16437                           
 16438                           ; BSR set to: 0
 16439  001874  0E30               	movlw	48
 16440  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16441  001878  A4D8               	btfss	status,2,c
 16442  00187A  D02E               	goto	l3327
 16443                           
 16444                           ; BSR set to: 0
 16445  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16446  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16447  001884  50DF               	movf	indf2,w,c
 16448  001886  6F98               	movwf	strtol@c& (0+255),b
 16449                           
 16450                           ; BSR set to: 0
 16451  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16452  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16453                           
 16454                           ; BSR set to: 0
 16455  00188C  518D               	movf	strtol@base& (0+255),w,b
 16456  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16457  001890  B4D8               	btfsc	status,2,c
 16458  001892  D005               	goto	u12180
 16459                           
 16460                           ; BSR set to: 0
 16461  001894  0E10               	movlw	16
 16462  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16463  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16464  00189A  A4D8               	btfss	status,2,c
 16465  00189C  D015               	goto	l3321
 16466  00189E                     u12180:
 16467                           
 16468                           ; BSR set to: 0
 16469                           
 16470                           ; BSR set to: 0
 16471  00189E  0E78               	movlw	120
 16472  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16473  0018A2  B4D8               	btfsc	status,2,c
 16474  0018A4  D004               	goto	u12200
 16475                           
 16476                           ; BSR set to: 0
 16477  0018A6  0E58               	movlw	88
 16478  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16479  0018AA  A4D8               	btfss	status,2,c
 16480  0018AC  D00D               	goto	l3321
 16481  0018AE                     u12200:
 16482                           
 16483                           ; BSR set to: 0
 16484                           
 16485                           ; BSR set to: 0
 16486  0018AE  0E00               	movlw	0
 16487  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16488  0018B2  0E10               	movlw	16
 16489  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16490                           
 16491                           ; BSR set to: 0
 16492  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16493  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16494  0018BE  50DF               	movf	indf2,w,c
 16495  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16496                           
 16497                           ; BSR set to: 0
 16498  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16499  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16500  0018C6  D008               	goto	l3327
 16501  0018C8                     l3321:
 16502                           
 16503                           ; BSR set to: 0
 16504                           
 16505                           ; BSR set to: 0
 16506  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16507  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16508  0018CC  A4D8               	btfss	status,2,c
 16509  0018CE  D004               	goto	l3327
 16510                           
 16511                           ; BSR set to: 0
 16512  0018D0  0E00               	movlw	0
 16513  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16514  0018D4  0E08               	movlw	8
 16515  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16516  0018D8                     l3327:
 16517                           
 16518                           ; BSR set to: 0
 16519                           
 16520                           ; BSR set to: 0
 16521                           
 16522                           ; BSR set to: 0
 16523                           
 16524                           ; BSR set to: 0
 16525  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16526  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16527  0018DC  A4D8               	btfss	status,2,c
 16528  0018DE  D004               	goto	l3328
 16529                           
 16530                           ; BSR set to: 0
 16531  0018E0  0E00               	movlw	0
 16532  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16533  0018E4  0E0A               	movlw	10
 16534  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16535  0018E8                     l3328:
 16536                           
 16537                           ; BSR set to: 0
 16538                           
 16539                           ; BSR set to: 0
 16540                           
 16541                           ; BSR set to: 0
 16542  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16543  0018EA  EC53  F02F         	call	_isalpha
 16544  0018EE  A0D8               	btfss	status,0,c
 16545  0018F0  D008               	goto	l3330
 16546  0018F2  0100               	movlb	0	; () banked
 16547  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16548  0018F6  EC52  F031         	call	_toupper
 16549  0018FA  0FC9               	addlw	201
 16550  0018FC  0100               	movlb	0	; () banked
 16551  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16552  001900  D009               	goto	l3333
 16553  001902                     l3330:
 16554                           
 16555                           ; BSR set to: 0
 16556  001902  0100               	movlb	0	; () banked
 16557  001904  5198               	movf	strtol@c& (0+255),w,b
 16558  001906  ECA4  F030         	call	_isdigit
 16559  00190A  A0D8               	btfss	status,0,c
 16560  00190C  D039               	goto	l3334
 16561  00190E  0E30               	movlw	48
 16562  001910  0100               	movlb	0	; () banked
 16563  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16564  001914                     l3333:
 16565                           
 16566                           ; BSR set to: 0
 16567                           
 16568                           ; BSR set to: 0
 16569                           
 16570                           ; BSR set to: 0
 16571  001914  5198               	movf	strtol@c& (0+255),w,b
 16572  001916  6F8F               	movwf	??_strtol& (0+255),b
 16573  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16574  00191A  518D               	movf	strtol@base& (0+255),w,b
 16575  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16576  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16577  001920  0A80               	xorlw	128
 16578  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16579  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16580  001926  0A80               	xorlw	128
 16581  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16582  00192A  B0D8               	btfsc	status,0,c
 16583  00192C  D029               	goto	l3334
 16584                           
 16585                           ; BSR set to: 0
 16586                           
 16587                           ; BSR set to: 0
 16588                           
 16589                           ; BSR set to: 0
 16590  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16591  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16592  001936  0E00               	movlw	0
 16593  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16594  00193A  0EFF               	movlw	-1
 16595  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16596  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16597  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16598  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16599  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16600  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16601  001950  ECCB  F029         	call	___lmul	;wreg free
 16602  001954  0100               	movlb	0	; () banked
 16603  001956  5198               	movf	strtol@c& (0+255),w,b
 16604  001958  257D               	addwf	?___lmul& (0+255),w,b
 16605  00195A  6F94               	movwf	strtol@a& (0+255),b
 16606  00195C  0E00               	movlw	0
 16607  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16608  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16609  001962  0E00               	movlw	0
 16610  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16611  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16612  001968  0E00               	movlw	0
 16613  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16614  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16615                           
 16616                           ; BSR set to: 0
 16617  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16618  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16619  001976  50DF               	movf	indf2,w,c
 16620  001978  6F98               	movwf	strtol@c& (0+255),b
 16621                           
 16622                           ; BSR set to: 0
 16623  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16624  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16625  00197E  D7B4               	goto	l3328
 16626  001980                     l3334:
 16627                           
 16628                           ; BSR set to: 0
 16629  001980  0100               	movlb	0	; () banked
 16630  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16631  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16632  001986  B4D8               	btfsc	status,2,c
 16633  001988  D00E               	goto	l3336
 16634                           
 16635                           ; BSR set to: 0
 16636  00198A  0EFF               	movlw	255
 16637  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16638  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16639  001990  0EFF               	movlw	255
 16640  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16641  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16642  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16643  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16644  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16645  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16646  0019A6                     l3336:
 16647                           
 16648                           ; BSR set to: 0
 16649                           
 16650                           ; BSR set to: 0
 16651  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16652  0019A8  B4D8               	btfsc	status,2,c
 16653  0019AA  D01A               	goto	l3337
 16654                           
 16655                           ; BSR set to: 0
 16656  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16657  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16658  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16659  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16660  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16661  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16662  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16663  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16664  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16665  0019C6  0E00               	movlw	0
 16666  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16667  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16668  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16669  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16670  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16671  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16672  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16673                           
 16674                           ; BSR set to: 0
 16675  0019DE  0012               	return	
 16676  0019E0                     l3337:
 16677                           
 16678                           ; BSR set to: 0
 16679  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16680  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16681  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16682  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16683                           
 16684                           ; BSR set to: 0
 16685  0019F0  0012               	return		;funcret
 16686  0019F2                     __end_of_strtol:
 16687                           	opt stack 0
 16688                           tosu	equ	0xFFF
 16689                           tosh	equ	0xFFE
 16690                           tosl	equ	0xFFD
 16691                           pclath	equ	0xFFA
 16692                           tblptru	equ	0xFF8
 16693                           tblptrh	equ	0xFF7
 16694                           tblptrl	equ	0xFF6
 16695                           tablat	equ	0xFF5
 16696                           prodh	equ	0xFF4
 16697                           prodl	equ	0xFF3
 16698                           intcon	equ	0xFF2
 16699                           intcon2	equ	0xFF1
 16700                           intcon3	equ	0xFF0
 16701                           indf0	equ	0xFEF
 16702                           postinc0	equ	0xFEE
 16703                           plusw0	equ	0xFEB
 16704                           fsr0h	equ	0xFEA
 16705                           fsr0l	equ	0xFE9
 16706                           wreg	equ	0xFE8
 16707                           indf1	equ	0xFE7
 16708                           postinc1	equ	0xFE6
 16709                           postdec1	equ	0xFE5
 16710                           fsr1h	equ	0xFE2
 16711                           fsr1l	equ	0xFE1
 16712                           indf2	equ	0xFDF
 16713                           postinc2	equ	0xFDE
 16714                           postdec2	equ	0xFDD
 16715                           plusw2	equ	0xFDB
 16716                           fsr2h	equ	0xFDA
 16717                           fsr2l	equ	0xFD9
 16718                           status	equ	0xFD8
 16719                           
 16720 ;; *************** function _toupper *****************
 16721 ;; Defined at:
 16722 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16723 ;; Parameters:    Size  Location     Type
 16724 ;;  c               1    wreg     unsigned char 
 16725 ;; Auto vars:     Size  Location     Type
 16726 ;;  c               1   29[BANK0 ] unsigned char 
 16727 ;; Return value:  Size  Location     Type
 16728 ;;                  1    wreg      unsigned char 
 16729 ;; Registers used:
 16730 ;;		wreg, status,2, status,0
 16731 ;; Tracked objects:
 16732 ;;		On entry : 0/0
 16733 ;;		On exit  : 0/0
 16734 ;;		Unchanged: 0/0
 16735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16739 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16740 ;;Total ram usage:        1 bytes
 16741 ;; Hardware stack levels used:    1
 16742 ;; Hardware stack levels required when called:   11
 16743 ;; This function calls:
 16744 ;;		Nothing
 16745 ;; This function is called by:
 16746 ;;		_strtol
 16747 ;; This function uses a non-reentrant model
 16748 ;;
 16749                           
 16750                           	psect	text65
 16751  0062A4                     __ptext65:
 16752                           	opt stack 0
 16753  0062A4                     _toupper:
 16754                           	opt stack 13
 16755                           
 16756                           ; BSR set to: 0
 16757                           ;incstack = 0
 16758                           ;toupper@c stored from wreg
 16759  0062A4  0100               	movlb	0	; () banked
 16760  0062A6  6F7D               	movwf	toupper@c& (0+255),b
 16761  0062A8  0E7B               	movlw	123
 16762  0062AA  0100               	movlb	0	; () banked
 16763  0062AC  617D               	cpfslt	toupper@c& (0+255),b
 16764  0062AE  D004               	goto	l3341
 16765                           
 16766                           ; BSR set to: 0
 16767  0062B0  0E60               	movlw	96
 16768  0062B2  657D               	cpfsgt	toupper@c& (0+255),b
 16769  0062B4  D001               	goto	l3341
 16770                           
 16771                           ; BSR set to: 0
 16772  0062B6  9B7D               	bcf	toupper@c& (0+255),5,b
 16773  0062B8                     l3341:
 16774                           
 16775                           ; BSR set to: 0
 16776                           
 16777                           ; BSR set to: 0
 16778  0062B8  517D               	movf	toupper@c& (0+255),w,b
 16779  0062BA  0012               	return	
 16780  0062BC                     __end_of_toupper:
 16781                           	opt stack 0
 16782                           tosu	equ	0xFFF
 16783                           tosh	equ	0xFFE
 16784                           tosl	equ	0xFFD
 16785                           pclath	equ	0xFFA
 16786                           tblptru	equ	0xFF8
 16787                           tblptrh	equ	0xFF7
 16788                           tblptrl	equ	0xFF6
 16789                           tablat	equ	0xFF5
 16790                           prodh	equ	0xFF4
 16791                           prodl	equ	0xFF3
 16792                           intcon	equ	0xFF2
 16793                           intcon2	equ	0xFF1
 16794                           intcon3	equ	0xFF0
 16795                           indf0	equ	0xFEF
 16796                           postinc0	equ	0xFEE
 16797                           plusw0	equ	0xFEB
 16798                           fsr0h	equ	0xFEA
 16799                           fsr0l	equ	0xFE9
 16800                           wreg	equ	0xFE8
 16801                           indf1	equ	0xFE7
 16802                           postinc1	equ	0xFE6
 16803                           postdec1	equ	0xFE5
 16804                           fsr1h	equ	0xFE2
 16805                           fsr1l	equ	0xFE1
 16806                           indf2	equ	0xFDF
 16807                           postinc2	equ	0xFDE
 16808                           postdec2	equ	0xFDD
 16809                           plusw2	equ	0xFDB
 16810                           fsr2h	equ	0xFDA
 16811                           fsr2l	equ	0xFD9
 16812                           status	equ	0xFD8
 16813                           
 16814 ;; *************** function _isspace *****************
 16815 ;; Defined at:
 16816 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16817 ;; Parameters:    Size  Location     Type
 16818 ;;  c               1    wreg     unsigned char 
 16819 ;; Auto vars:     Size  Location     Type
 16820 ;;  c               1   31[BANK0 ] unsigned char 
 16821 ;; Return value:  Size  Location     Type
 16822 ;;		None               void
 16823 ;; Registers used:
 16824 ;;		wreg, status,2, status,0
 16825 ;; Tracked objects:
 16826 ;;		On entry : 0/0
 16827 ;;		On exit  : 0/0
 16828 ;;		Unchanged: 0/0
 16829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16833 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16834 ;;Total ram usage:        3 bytes
 16835 ;; Hardware stack levels used:    1
 16836 ;; Hardware stack levels required when called:   11
 16837 ;; This function calls:
 16838 ;;		Nothing
 16839 ;; This function is called by:
 16840 ;;		_strtol
 16841 ;;		_xtoi
 16842 ;; This function uses a non-reentrant model
 16843 ;;
 16844                           
 16845                           	psect	text66
 16846  005FB8                     __ptext66:
 16847                           	opt stack 0
 16848  005FB8                     _isspace:
 16849                           	opt stack 13
 16850                           
 16851                           ; BSR set to: 0
 16852                           ;incstack = 0
 16853                           ;isspace@c stored from wreg
 16854  005FB8  0100               	movlb	0	; () banked
 16855  005FBA  6F7F               	movwf	isspace@c& (0+255),b
 16856  005FBC  0E01               	movlw	1
 16857  005FBE  0100               	movlb	0	; () banked
 16858  005FC0  6F7E               	movwf	_isspace$6514& (0+255),b
 16859                           
 16860                           ; BSR set to: 0
 16861  005FC2  0E20               	movlw	32
 16862  005FC4  197F               	xorwf	isspace@c& (0+255),w,b
 16863  005FC6  B4D8               	btfsc	status,2,c
 16864  005FC8  D008               	goto	l3398
 16865                           
 16866                           ; BSR set to: 0
 16867  005FCA  0E0E               	movlw	14
 16868  005FCC  617F               	cpfslt	isspace@c& (0+255),b
 16869  005FCE  D003               	goto	u11590
 16870                           
 16871                           ; BSR set to: 0
 16872  005FD0  0E09               	movlw	9
 16873  005FD2  617F               	cpfslt	isspace@c& (0+255),b
 16874  005FD4  D002               	goto	l3398
 16875  005FD6                     u11590:
 16876                           
 16877                           ; BSR set to: 0
 16878                           
 16879                           ; BSR set to: 0
 16880  005FD6  0E00               	movlw	0
 16881  005FD8  6F7E               	movwf	_isspace$6514& (0+255),b
 16882  005FDA                     l3398:
 16883                           
 16884                           ; BSR set to: 0
 16885                           
 16886                           ; BSR set to: 0
 16887  005FDA  C07E  F07D         	movff	_isspace$6514,??_isspace
 16888  005FDE  317D               	rrcf	??_isspace& (0+255),w,b
 16889  005FE0  0012               	return	
 16890  005FE2                     __end_of_isspace:
 16891                           	opt stack 0
 16892                           tosu	equ	0xFFF
 16893                           tosh	equ	0xFFE
 16894                           tosl	equ	0xFFD
 16895                           pclath	equ	0xFFA
 16896                           tblptru	equ	0xFF8
 16897                           tblptrh	equ	0xFF7
 16898                           tblptrl	equ	0xFF6
 16899                           tablat	equ	0xFF5
 16900                           prodh	equ	0xFF4
 16901                           prodl	equ	0xFF3
 16902                           intcon	equ	0xFF2
 16903                           intcon2	equ	0xFF1
 16904                           intcon3	equ	0xFF0
 16905                           indf0	equ	0xFEF
 16906                           postinc0	equ	0xFEE
 16907                           plusw0	equ	0xFEB
 16908                           fsr0h	equ	0xFEA
 16909                           fsr0l	equ	0xFE9
 16910                           wreg	equ	0xFE8
 16911                           indf1	equ	0xFE7
 16912                           postinc1	equ	0xFE6
 16913                           postdec1	equ	0xFE5
 16914                           fsr1h	equ	0xFE2
 16915                           fsr1l	equ	0xFE1
 16916                           indf2	equ	0xFDF
 16917                           postinc2	equ	0xFDE
 16918                           postdec2	equ	0xFDD
 16919                           plusw2	equ	0xFDB
 16920                           fsr2h	equ	0xFDA
 16921                           fsr2l	equ	0xFD9
 16922                           status	equ	0xFD8
 16923                           
 16924 ;; *************** function _isalpha *****************
 16925 ;; Defined at:
 16926 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16927 ;; Parameters:    Size  Location     Type
 16928 ;;  c               1    wreg     unsigned char 
 16929 ;; Auto vars:     Size  Location     Type
 16930 ;;  c               1   34[BANK0 ] unsigned char 
 16931 ;; Return value:  Size  Location     Type
 16932 ;;		None               void
 16933 ;; Registers used:
 16934 ;;		wreg, status,2, status,0, cstack
 16935 ;; Tracked objects:
 16936 ;;		On entry : 0/0
 16937 ;;		On exit  : 0/0
 16938 ;;		Unchanged: 0/0
 16939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16943 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16944 ;;Total ram usage:        3 bytes
 16945 ;; Hardware stack levels used:    1
 16946 ;; Hardware stack levels required when called:   12
 16947 ;; This function calls:
 16948 ;;		_isupper
 16949 ;; This function is called by:
 16950 ;;		_strtol
 16951 ;; This function uses a non-reentrant model
 16952 ;;
 16953                           
 16954                           	psect	text67
 16955  005EA6                     __ptext67:
 16956                           	opt stack 0
 16957  005EA6                     _isalpha:
 16958                           	opt stack 12
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;incstack = 0
 16962                           ;isalpha@c stored from wreg
 16963  005EA6  0100               	movlb	0	; () banked
 16964  005EA8  6F82               	movwf	isalpha@c& (0+255),b
 16965  005EAA  0E01               	movlw	1
 16966  005EAC  0100               	movlb	0	; () banked
 16967  005EAE  6F81               	movwf	_isalpha$6511& (0+255),b
 16968                           
 16969                           ; BSR set to: 0
 16970  005EB0  0E7B               	movlw	123
 16971  005EB2  6182               	cpfslt	isalpha@c& (0+255),b
 16972  005EB4  D003               	goto	u11610
 16973                           
 16974                           ; BSR set to: 0
 16975  005EB6  0E61               	movlw	97
 16976  005EB8  6182               	cpfslt	isalpha@c& (0+255),b
 16977  005EBA  D008               	goto	l3393
 16978  005EBC                     u11610:
 16979                           
 16980                           ; BSR set to: 0
 16981                           
 16982                           ; BSR set to: 0
 16983  005EBC  5182               	movf	isalpha@c& (0+255),w,b
 16984  005EBE  EC82  F030         	call	_isupper
 16985  005EC2  B0D8               	btfsc	status,0,c
 16986  005EC4  D003               	goto	l3393
 16987  005EC6  0E00               	movlw	0
 16988  005EC8  0100               	movlb	0	; () banked
 16989  005ECA  6F81               	movwf	_isalpha$6511& (0+255),b
 16990  005ECC                     l3393:
 16991                           
 16992                           ; BSR set to: 0
 16993  005ECC  C081  F080         	movff	_isalpha$6511,??_isalpha
 16994  005ED0  0100               	movlb	0	; () banked
 16995  005ED2  3180               	rrcf	??_isalpha& (0+255),w,b
 16996  005ED4  0012               	return	
 16997  005ED6                     __end_of_isalpha:
 16998                           	opt stack 0
 16999                           tosu	equ	0xFFF
 17000                           tosh	equ	0xFFE
 17001                           tosl	equ	0xFFD
 17002                           pclath	equ	0xFFA
 17003                           tblptru	equ	0xFF8
 17004                           tblptrh	equ	0xFF7
 17005                           tblptrl	equ	0xFF6
 17006                           tablat	equ	0xFF5
 17007                           prodh	equ	0xFF4
 17008                           prodl	equ	0xFF3
 17009                           intcon	equ	0xFF2
 17010                           intcon2	equ	0xFF1
 17011                           intcon3	equ	0xFF0
 17012                           indf0	equ	0xFEF
 17013                           postinc0	equ	0xFEE
 17014                           plusw0	equ	0xFEB
 17015                           fsr0h	equ	0xFEA
 17016                           fsr0l	equ	0xFE9
 17017                           wreg	equ	0xFE8
 17018                           indf1	equ	0xFE7
 17019                           postinc1	equ	0xFE6
 17020                           postdec1	equ	0xFE5
 17021                           fsr1h	equ	0xFE2
 17022                           fsr1l	equ	0xFE1
 17023                           indf2	equ	0xFDF
 17024                           postinc2	equ	0xFDE
 17025                           postdec2	equ	0xFDD
 17026                           plusw2	equ	0xFDB
 17027                           fsr2h	equ	0xFDA
 17028                           fsr2l	equ	0xFD9
 17029                           status	equ	0xFD8
 17030                           
 17031 ;; *************** function _isupper *****************
 17032 ;; Defined at:
 17033 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17034 ;; Parameters:    Size  Location     Type
 17035 ;;  c               1    wreg     unsigned char 
 17036 ;; Auto vars:     Size  Location     Type
 17037 ;;  c               1   31[BANK0 ] unsigned char 
 17038 ;; Return value:  Size  Location     Type
 17039 ;;		None               void
 17040 ;; Registers used:
 17041 ;;		wreg, status,2, status,0
 17042 ;; Tracked objects:
 17043 ;;		On entry : 0/0
 17044 ;;		On exit  : 0/0
 17045 ;;		Unchanged: 0/0
 17046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17048 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17049 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17050 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17051 ;;Total ram usage:        3 bytes
 17052 ;; Hardware stack levels used:    1
 17053 ;; Hardware stack levels required when called:   11
 17054 ;; This function calls:
 17055 ;;		Nothing
 17056 ;; This function is called by:
 17057 ;;		_xtoi
 17058 ;;		_isalpha
 17059 ;; This function uses a non-reentrant model
 17060 ;;
 17061                           
 17062                           	psect	text68
 17063  006104                     __ptext68:
 17064                           	opt stack 0
 17065  006104                     _isupper:
 17066                           	opt stack 13
 17067                           
 17068                           ; BSR set to: 0
 17069                           ;incstack = 0
 17070                           ;isupper@c stored from wreg
 17071  006104  0100               	movlb	0	; () banked
 17072  006106  6F7F               	movwf	isupper@c& (0+255),b
 17073  006108  0E00               	movlw	0
 17074  00610A  0100               	movlb	0	; () banked
 17075  00610C  6F7E               	movwf	_isupper$6517& (0+255),b
 17076                           
 17077                           ; BSR set to: 0
 17078  00610E  0E5B               	movlw	91
 17079  006110  617F               	cpfslt	isupper@c& (0+255),b
 17080  006112  D005               	goto	l3403
 17081                           
 17082                           ; BSR set to: 0
 17083  006114  0E40               	movlw	64
 17084  006116  657F               	cpfsgt	isupper@c& (0+255),b
 17085  006118  D002               	goto	l3403
 17086                           
 17087                           ; BSR set to: 0
 17088  00611A  0E01               	movlw	1
 17089  00611C  6F7E               	movwf	_isupper$6517& (0+255),b
 17090  00611E                     l3403:
 17091                           
 17092                           ; BSR set to: 0
 17093                           
 17094                           ; BSR set to: 0
 17095  00611E  C07E  F07D         	movff	_isupper$6517,??_isupper
 17096  006122  317D               	rrcf	??_isupper& (0+255),w,b
 17097  006124  0012               	return	
 17098  006126                     __end_of_isupper:
 17099                           	opt stack 0
 17100                           tosu	equ	0xFFF
 17101                           tosh	equ	0xFFE
 17102                           tosl	equ	0xFFD
 17103                           pclath	equ	0xFFA
 17104                           tblptru	equ	0xFF8
 17105                           tblptrh	equ	0xFF7
 17106                           tblptrl	equ	0xFF6
 17107                           tablat	equ	0xFF5
 17108                           prodh	equ	0xFF4
 17109                           prodl	equ	0xFF3
 17110                           intcon	equ	0xFF2
 17111                           intcon2	equ	0xFF1
 17112                           intcon3	equ	0xFF0
 17113                           indf0	equ	0xFEF
 17114                           postinc0	equ	0xFEE
 17115                           plusw0	equ	0xFEB
 17116                           fsr0h	equ	0xFEA
 17117                           fsr0l	equ	0xFE9
 17118                           wreg	equ	0xFE8
 17119                           indf1	equ	0xFE7
 17120                           postinc1	equ	0xFE6
 17121                           postdec1	equ	0xFE5
 17122                           fsr1h	equ	0xFE2
 17123                           fsr1l	equ	0xFE1
 17124                           indf2	equ	0xFDF
 17125                           postinc2	equ	0xFDE
 17126                           postdec2	equ	0xFDD
 17127                           plusw2	equ	0xFDB
 17128                           fsr2h	equ	0xFDA
 17129                           fsr2l	equ	0xFD9
 17130                           status	equ	0xFD8
 17131                           
 17132 ;; *************** function _strcpy *****************
 17133 ;; Defined at:
 17134 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17135 ;; Parameters:    Size  Location     Type
 17136 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17137 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17138 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17139 ;;		 -> STR_23(20), STR_21(42), 
 17140 ;; Auto vars:     Size  Location     Type
 17141 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17142 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17143 ;; Return value:  Size  Location     Type
 17144 ;;                  2   29[BANK0 ] PTR unsigned char 
 17145 ;; Registers used:
 17146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17147 ;; Tracked objects:
 17148 ;;		On entry : 0/0
 17149 ;;		On exit  : 0/0
 17150 ;;		Unchanged: 0/0
 17151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17153 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17155 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17156 ;;Total ram usage:        6 bytes
 17157 ;; Hardware stack levels used:    1
 17158 ;; Hardware stack levels required when called:   11
 17159 ;; This function calls:
 17160 ;;		Nothing
 17161 ;; This function is called by:
 17162 ;;		_Terminal
 17163 ;;		_Term_MainSm
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167                           	psect	text69
 17168  005E14                     __ptext69:
 17169                           	opt stack 0
 17170  005E14                     _strcpy:
 17171                           	opt stack 15
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;incstack = 0
 17175  005E14  C07D  F081         	movff	strcpy@to,strcpy@cp
 17176  005E18  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17177  005E1C  D005               	goto	l3295
 17178  005E1E  0100               	movlb	0	; () banked
 17179  005E20  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17180  005E22  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17181  005E24  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17182  005E26  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17183  005E28                     l3295:
 17184                           
 17185                           ; BSR set to: 0
 17186  005E28  C07F  FFF6         	movff	strcpy@from,tblptrl
 17187  005E2C  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17188  005E30                     	if	0	;tblptru may be non-zero
 17189  005E30                     	endif
 17190  005E30                     	if	0	;tblptru may be non-zero
 17191  005E30                     	endif
 17192  005E30  C081  FFD9         	movff	strcpy@cp,fsr2l
 17193  005E34  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17194  005E38  0008               	tblrd		*
 17195  005E3A  CFF5 FFDF          	movff	tablat,indf2
 17196  005E3E  50DF               	movf	indf2,w,c
 17197  005E40  B4D8               	btfsc	status,2,c
 17198  005E42  0012               	return	
 17199  005E44  D7EC               	goto	l3296
 17200  005E46                     __end_of_strcpy:
 17201                           	opt stack 0
 17202                           tosu	equ	0xFFF
 17203                           tosh	equ	0xFFE
 17204                           tosl	equ	0xFFD
 17205                           pclath	equ	0xFFA
 17206                           tblptru	equ	0xFF8
 17207                           tblptrh	equ	0xFF7
 17208                           tblptrl	equ	0xFF6
 17209                           tablat	equ	0xFF5
 17210                           prodh	equ	0xFF4
 17211                           prodl	equ	0xFF3
 17212                           intcon	equ	0xFF2
 17213                           intcon2	equ	0xFF1
 17214                           intcon3	equ	0xFF0
 17215                           indf0	equ	0xFEF
 17216                           postinc0	equ	0xFEE
 17217                           plusw0	equ	0xFEB
 17218                           fsr0h	equ	0xFEA
 17219                           fsr0l	equ	0xFE9
 17220                           wreg	equ	0xFE8
 17221                           indf1	equ	0xFE7
 17222                           postinc1	equ	0xFE6
 17223                           postdec1	equ	0xFE5
 17224                           fsr1h	equ	0xFE2
 17225                           fsr1l	equ	0xFE1
 17226                           indf2	equ	0xFDF
 17227                           postinc2	equ	0xFDE
 17228                           postdec2	equ	0xFDD
 17229                           plusw2	equ	0xFDB
 17230                           fsr2h	equ	0xFDA
 17231                           fsr2l	equ	0xFD9
 17232                           status	equ	0xFD8
 17233                           
 17234 ;; *************** function _putUSBUSART *****************
 17235 ;; Defined at:
 17236 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17239 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17240 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17241 ;;		 -> RxBuffer(400), 
 17242 ;;  length          1   37[BANK0 ] unsigned char 
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;		None
 17245 ;; Return value:  Size  Location     Type
 17246 ;;                  1    wreg      void 
 17247 ;; Registers used:
 17248 ;;		wreg, status,2, status,0
 17249 ;; Tracked objects:
 17250 ;;		On entry : 0/0
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17257 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17258 ;;Total ram usage:        3 bytes
 17259 ;; Hardware stack levels used:    1
 17260 ;; Hardware stack levels required when called:   11
 17261 ;; This function calls:
 17262 ;;		Nothing
 17263 ;; This function is called by:
 17264 ;;		_Terminal
 17265 ;;		_Term_MainSm
 17266 ;;		_GsmGprsTerminal
 17267 ;; This function uses a non-reentrant model
 17268 ;;
 17269                           
 17270                           	psect	text70
 17271  006126                     __ptext70:
 17272                           	opt stack 0
 17273  006126                     _putUSBUSART:
 17274                           	opt stack 15
 17275                           
 17276                           ;usb_device_cdc.c: 584: ;
 17277                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17278                           
 17279                           ;incstack = 0
 17280  006126  0100               	movlb	0	; () banked
 17281  006128  51C6               	movf	_cdc_trf_state& (0+255),w,b
 17282  00612A  A4D8               	btfss	status,2,c
 17283  00612C  0012               	return	
 17284                           
 17285                           ; BSR set to: 0
 17286                           ;usb_device_cdc.c: 586: {
 17287                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17288  00612E  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17289  006132  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17290                           
 17291                           ; BSR set to: 0
 17292  006136  C085  F0C5         	movff	putUSBUSART@length,_cdc_tx_len
 17293                           
 17294                           ; BSR set to: 0
 17295  00613A  0E01               	movlw	1
 17296  00613C  0101               	movlb	1	; () banked
 17297  00613E  6FE1               	movwf	_cdc_mem_type& (0+255),b
 17298                           
 17299                           ; BSR set to: 1
 17300  006140  0E01               	movlw	1
 17301  006142  0100               	movlb	0	; () banked
 17302  006144  6FC6               	movwf	_cdc_trf_state& (0+255),b
 17303  006146  0012               	return	
 17304  006148                     __end_of_putUSBUSART:
 17305                           	opt stack 0
 17306                           tosu	equ	0xFFF
 17307                           tosh	equ	0xFFE
 17308                           tosl	equ	0xFFD
 17309                           pclath	equ	0xFFA
 17310                           tblptru	equ	0xFF8
 17311                           tblptrh	equ	0xFF7
 17312                           tblptrl	equ	0xFF6
 17313                           tablat	equ	0xFF5
 17314                           prodh	equ	0xFF4
 17315                           prodl	equ	0xFF3
 17316                           intcon	equ	0xFF2
 17317                           intcon2	equ	0xFF1
 17318                           intcon3	equ	0xFF0
 17319                           indf0	equ	0xFEF
 17320                           postinc0	equ	0xFEE
 17321                           plusw0	equ	0xFEB
 17322                           fsr0h	equ	0xFEA
 17323                           fsr0l	equ	0xFE9
 17324                           wreg	equ	0xFE8
 17325                           indf1	equ	0xFE7
 17326                           postinc1	equ	0xFE6
 17327                           postdec1	equ	0xFE5
 17328                           fsr1h	equ	0xFE2
 17329                           fsr1l	equ	0xFE1
 17330                           indf2	equ	0xFDF
 17331                           postinc2	equ	0xFDE
 17332                           postdec2	equ	0xFDD
 17333                           plusw2	equ	0xFDB
 17334                           fsr2h	equ	0xFDA
 17335                           fsr2l	equ	0xFD9
 17336                           status	equ	0xFD8
 17337                           
 17338 ;; *************** function _itoa *****************
 17339 ;; Defined at:
 17340 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17341 ;; Parameters:    Size  Location     Type
 17342 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17343 ;;		 -> Terminal@Payload(80), 
 17344 ;;  val             2   53[BANK0 ] int 
 17345 ;;  base            2   55[BANK0 ] int 
 17346 ;; Auto vars:     Size  Location     Type
 17347 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17348 ;;		 -> Terminal@Payload(80), 
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  2   51[BANK0 ] PTR unsigned char 
 17351 ;; Registers used:
 17352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17353 ;; Tracked objects:
 17354 ;;		On entry : 0/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17358 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17361 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17362 ;;Total ram usage:        8 bytes
 17363 ;; Hardware stack levels used:    1
 17364 ;; Hardware stack levels required when called:   13
 17365 ;; This function calls:
 17366 ;;		_utoa
 17367 ;; This function is called by:
 17368 ;;		_Terminal
 17369 ;; This function uses a non-reentrant model
 17370 ;;
 17371                           
 17372                           	psect	text71
 17373  005A10                     __ptext71:
 17374                           	opt stack 0
 17375  005A10                     _itoa:
 17376                           	opt stack 12
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;incstack = 0
 17380  005A10  C093  F099         	movff	itoa@buf,itoa@cp
 17381  005A14  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17382  005A18  0100               	movlb	0	; () banked
 17383  005A1A  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17384  005A1C  D00C               	goto	l3043
 17385                           
 17386                           ; BSR set to: 0
 17387  005A1E  C093  FFD9         	movff	itoa@buf,fsr2l
 17388  005A22  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17389  005A26  0E2D               	movlw	45
 17390  005A28  6EDF               	movwf	indf2,c
 17391                           
 17392                           ; BSR set to: 0
 17393  005A2A  4B93               	infsnz	itoa@buf& (0+255),f,b
 17394  005A2C  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17395                           
 17396                           ; BSR set to: 0
 17397  005A2E  6D95               	negf	itoa@val& (0+255),b
 17398  005A30  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17399  005A32  B0D8               	btfsc	status,0,c
 17400  005A34  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17401  005A36                     l3043:
 17402                           
 17403                           ; BSR set to: 0
 17404                           
 17405                           ; BSR set to: 0
 17406  005A36  C093  F08A         	movff	itoa@buf,utoa@buf
 17407  005A3A  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17408  005A3E  C095  F08C         	movff	itoa@val,utoa@val
 17409  005A42  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17410  005A46  C097  F08E         	movff	itoa@base,utoa@base
 17411  005A4A  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17412  005A4E  EC7B  F021         	call	_utoa	;wreg free
 17413  005A52  0012               	return	
 17414  005A54                     __end_of_itoa:
 17415                           	opt stack 0
 17416                           tosu	equ	0xFFF
 17417                           tosh	equ	0xFFE
 17418                           tosl	equ	0xFFD
 17419                           pclath	equ	0xFFA
 17420                           tblptru	equ	0xFF8
 17421                           tblptrh	equ	0xFF7
 17422                           tblptrl	equ	0xFF6
 17423                           tablat	equ	0xFF5
 17424                           prodh	equ	0xFF4
 17425                           prodl	equ	0xFF3
 17426                           intcon	equ	0xFF2
 17427                           intcon2	equ	0xFF1
 17428                           intcon3	equ	0xFF0
 17429                           indf0	equ	0xFEF
 17430                           postinc0	equ	0xFEE
 17431                           plusw0	equ	0xFEB
 17432                           fsr0h	equ	0xFEA
 17433                           fsr0l	equ	0xFE9
 17434                           wreg	equ	0xFE8
 17435                           indf1	equ	0xFE7
 17436                           postinc1	equ	0xFE6
 17437                           postdec1	equ	0xFE5
 17438                           fsr1h	equ	0xFE2
 17439                           fsr1l	equ	0xFE1
 17440                           indf2	equ	0xFDF
 17441                           postinc2	equ	0xFDE
 17442                           postdec2	equ	0xFDD
 17443                           plusw2	equ	0xFDB
 17444                           fsr2h	equ	0xFDA
 17445                           fsr2l	equ	0xFD9
 17446                           status	equ	0xFD8
 17447                           
 17448 ;; *************** function _utoa *****************
 17449 ;; Defined at:
 17450 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17453 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17454 ;;  val             2   44[BANK0 ] unsigned int 
 17455 ;;  base            2   46[BANK0 ] int 
 17456 ;; Auto vars:     Size  Location     Type
 17457 ;;  v               2   48[BANK0 ] unsigned int 
 17458 ;;  c               1   50[BANK0 ] unsigned char 
 17459 ;; Return value:  Size  Location     Type
 17460 ;;                  2   42[BANK0 ] PTR unsigned char 
 17461 ;; Registers used:
 17462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17463 ;; Tracked objects:
 17464 ;;		On entry : 0/0
 17465 ;;		On exit  : 0/0
 17466 ;;		Unchanged: 0/0
 17467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17468 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17469 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17471 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17472 ;;Total ram usage:        9 bytes
 17473 ;; Hardware stack levels used:    1
 17474 ;; Hardware stack levels required when called:   12
 17475 ;; This function calls:
 17476 ;;		___lwdiv
 17477 ;;		___lwmod
 17478 ;; This function is called by:
 17479 ;;		_Term_MainSm
 17480 ;;		_itoa
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           	psect	text72
 17485  0042F6                     __ptext72:
 17486                           	opt stack 0
 17487  0042F6                     _utoa:
 17488                           	opt stack 14
 17489                           
 17490                           ;incstack = 0
 17491  0042F6  C08C  F090         	movff	utoa@val,utoa@v
 17492  0042FA  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17493  0042FE  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17494  004302  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17495  004306  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17496  00430A  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17497  00430E  ECF7  F02A         	call	___lwdiv	;wreg free
 17498  004312  C083  F090         	movff	?___lwdiv,utoa@v
 17499  004316  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17500  00431A  0100               	movlb	0	; () banked
 17501  00431C  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17502  00431E  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17503                           
 17504                           ; BSR set to: 0
 17505  004320  5190               	movf	utoa@v& (0+255),w,b
 17506  004322  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17507  004324  A4D8               	btfss	status,2,c
 17508  004326  D7EB               	goto	l3047
 17509                           
 17510                           ; BSR set to: 0
 17511                           
 17512                           ; BSR set to: 0
 17513  004328  C08A  FFD9         	movff	utoa@buf,fsr2l
 17514  00432C  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17515  004330  0E00               	movlw	0
 17516  004332  6EDF               	movwf	indf2,c
 17517                           
 17518                           ; BSR set to: 0
 17519  004334  078A               	decf	utoa@buf& (0+255),f,b
 17520  004336  A0D8               	btfss	status,0,c
 17521  004338  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17522  00433A                     
 17523                           ; BSR set to: 0
 17524                           
 17525                           ; BSR set to: 0
 17526  00433A  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17527  00433E  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17528  004342  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17529  004346  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17530  00434A  EC2A  F02D         	call	___lwmod	;wreg free
 17531  00434E  0100               	movlb	0	; () banked
 17532  004350  517D               	movf	?___lwmod& (0+255),w,b
 17533  004352  6F92               	movwf	utoa@c& (0+255),b
 17534                           
 17535                           ; BSR set to: 0
 17536  004354  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17537  004358  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17538  00435C  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17539  004360  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17540  004364  ECF7  F02A         	call	___lwdiv	;wreg free
 17541  004368  C083  F08C         	movff	?___lwdiv,utoa@val
 17542  00436C  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17543  004370  0E09               	movlw	9
 17544  004372  0100               	movlb	0	; () banked
 17545  004374  6592               	cpfsgt	utoa@c& (0+255),b
 17546  004376  D002               	goto	l3050
 17547                           
 17548                           ; BSR set to: 0
 17549  004378  0E07               	movlw	7
 17550  00437A  2792               	addwf	utoa@c& (0+255),f,b
 17551  00437C                     l3050:
 17552                           
 17553                           ; BSR set to: 0
 17554  00437C  0E30               	movlw	48
 17555  00437E  2792               	addwf	utoa@c& (0+255),f,b
 17556                           
 17557                           ; BSR set to: 0
 17558  004380  C08A  FFD9         	movff	utoa@buf,fsr2l
 17559  004384  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17560  004388  C092  FFDF         	movff	utoa@c,indf2
 17561                           
 17562                           ; BSR set to: 0
 17563  00438C  078A               	decf	utoa@buf& (0+255),f,b
 17564  00438E  A0D8               	btfss	status,0,c
 17565  004390  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17566                           
 17567                           ; BSR set to: 0
 17568  004392  518C               	movf	utoa@val& (0+255),w,b
 17569  004394  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17570  004396  A4D8               	btfss	status,2,c
 17571  004398  D7D0               	goto	l3049
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;	Return value of _utoa is never used
 17575                           
 17576                           ; BSR set to: 0
 17577  00439A  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17578  00439C  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17579  00439E  0012               	return	
 17580  0043A0                     __end_of_utoa:
 17581                           	opt stack 0
 17582                           tosu	equ	0xFFF
 17583                           tosh	equ	0xFFE
 17584                           tosl	equ	0xFFD
 17585                           pclath	equ	0xFFA
 17586                           tblptru	equ	0xFF8
 17587                           tblptrh	equ	0xFF7
 17588                           tblptrl	equ	0xFF6
 17589                           tablat	equ	0xFF5
 17590                           prodh	equ	0xFF4
 17591                           prodl	equ	0xFF3
 17592                           intcon	equ	0xFF2
 17593                           intcon2	equ	0xFF1
 17594                           intcon3	equ	0xFF0
 17595                           indf0	equ	0xFEF
 17596                           postinc0	equ	0xFEE
 17597                           plusw0	equ	0xFEB
 17598                           fsr0h	equ	0xFEA
 17599                           fsr0l	equ	0xFE9
 17600                           wreg	equ	0xFE8
 17601                           indf1	equ	0xFE7
 17602                           postinc1	equ	0xFE6
 17603                           postdec1	equ	0xFE5
 17604                           fsr1h	equ	0xFE2
 17605                           fsr1l	equ	0xFE1
 17606                           indf2	equ	0xFDF
 17607                           postinc2	equ	0xFDE
 17608                           postdec2	equ	0xFDD
 17609                           plusw2	equ	0xFDB
 17610                           fsr2h	equ	0xFDA
 17611                           fsr2l	equ	0xFD9
 17612                           status	equ	0xFD8
 17613                           
 17614 ;; *************** function ___lwmod *****************
 17615 ;; Defined at:
 17616 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17617 ;; Parameters:    Size  Location     Type
 17618 ;;  dividend        2   29[BANK0 ] unsigned int 
 17619 ;;  divisor         2   31[BANK0 ] unsigned int 
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;  counter         1   33[BANK0 ] unsigned char 
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  2   29[BANK0 ] unsigned int 
 17624 ;; Registers used:
 17625 ;;		wreg, status,2, status,0
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17634 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17635 ;;Total ram usage:        5 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; Hardware stack levels required when called:   11
 17638 ;; This function calls:
 17639 ;;		Nothing
 17640 ;; This function is called by:
 17641 ;;		_utoa
 17642 ;; This function uses a non-reentrant model
 17643 ;;
 17644                           
 17645                           	psect	text73
 17646  005A54                     __ptext73:
 17647                           	opt stack 0
 17648  005A54                     ___lwmod:
 17649                           	opt stack 14
 17650                           
 17651                           ; BSR set to: 0
 17652                           ;incstack = 0
 17653  005A54  0100               	movlb	0	; () banked
 17654  005A56  517F               	movf	___lwmod@divisor& (0+255),w,b
 17655  005A58  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17656  005A5A  B4D8               	btfsc	status,2,c
 17657  005A5C  D018               	goto	l3145
 17658                           
 17659                           ; BSR set to: 0
 17660  005A5E  0E01               	movlw	1
 17661  005A60  6F81               	movwf	___lwmod@counter& (0+255),b
 17662  005A62  D004               	goto	l3140
 17663  005A64                     
 17664                           ; BSR set to: 0
 17665                           
 17666                           ; BSR set to: 0
 17667  005A64  90D8               	bcf	status,0,c
 17668  005A66  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17669  005A68  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17670  005A6A  2B81               	incf	___lwmod@counter& (0+255),f,b
 17671  005A6C                     l3140:
 17672                           
 17673                           ; BSR set to: 0
 17674                           
 17675                           ; BSR set to: 0
 17676  005A6C  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17677  005A6E  D7FA               	goto	l3141
 17678  005A70                     u11270:
 17679                           
 17680                           ; BSR set to: 0
 17681                           
 17682                           ; BSR set to: 0
 17683                           
 17684                           ; BSR set to: 0
 17685  005A70  517F               	movf	___lwmod@divisor& (0+255),w,b
 17686  005A72  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17687  005A74  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17688  005A76  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17689  005A78  A0D8               	btfss	status,0,c
 17690  005A7A  D004               	goto	l3144
 17691                           
 17692                           ; BSR set to: 0
 17693  005A7C  517F               	movf	___lwmod@divisor& (0+255),w,b
 17694  005A7E  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17695  005A80  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17696  005A82  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17697  005A84                     l3144:
 17698                           
 17699                           ; BSR set to: 0
 17700                           
 17701                           ; BSR set to: 0
 17702  005A84  90D8               	bcf	status,0,c
 17703  005A86  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17704  005A88  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17705                           
 17706                           ; BSR set to: 0
 17707  005A8A  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17708  005A8C  D7F1               	goto	u11270
 17709  005A8E                     l3145:
 17710                           
 17711                           ; BSR set to: 0
 17712                           
 17713                           ; BSR set to: 0
 17714  005A8E  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17715  005A92  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17716                           
 17717                           ; BSR set to: 0
 17718  005A96  0012               	return		;funcret
 17719  005A98                     __end_of___lwmod:
 17720                           	opt stack 0
 17721                           tosu	equ	0xFFF
 17722                           tosh	equ	0xFFE
 17723                           tosl	equ	0xFFD
 17724                           pclath	equ	0xFFA
 17725                           tblptru	equ	0xFF8
 17726                           tblptrh	equ	0xFF7
 17727                           tblptrl	equ	0xFF6
 17728                           tablat	equ	0xFF5
 17729                           prodh	equ	0xFF4
 17730                           prodl	equ	0xFF3
 17731                           intcon	equ	0xFF2
 17732                           intcon2	equ	0xFF1
 17733                           intcon3	equ	0xFF0
 17734                           indf0	equ	0xFEF
 17735                           postinc0	equ	0xFEE
 17736                           plusw0	equ	0xFEB
 17737                           fsr0h	equ	0xFEA
 17738                           fsr0l	equ	0xFE9
 17739                           wreg	equ	0xFE8
 17740                           indf1	equ	0xFE7
 17741                           postinc1	equ	0xFE6
 17742                           postdec1	equ	0xFE5
 17743                           fsr1h	equ	0xFE2
 17744                           fsr1l	equ	0xFE1
 17745                           indf2	equ	0xFDF
 17746                           postinc2	equ	0xFDE
 17747                           postdec2	equ	0xFDD
 17748                           plusw2	equ	0xFDB
 17749                           fsr2h	equ	0xFDA
 17750                           fsr2l	equ	0xFD9
 17751                           status	equ	0xFD8
 17752                           
 17753 ;; *************** function _getsUSBUSART *****************
 17754 ;; Defined at:
 17755 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17756 ;; Parameters:    Size  Location     Type
 17757 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17758 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17759 ;;  len             1   38[BANK0 ] unsigned char 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;		None
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      unsigned char 
 17764 ;; Registers used:
 17765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17771 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17774 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17775 ;;Total ram usage:        4 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; Hardware stack levels required when called:   12
 17778 ;; This function calls:
 17779 ;;		_USBTransferOnePacket
 17780 ;; This function is called by:
 17781 ;;		_Terminal
 17782 ;;		_GsmGprsTerminal
 17783 ;; This function uses a non-reentrant model
 17784 ;;
 17785                           
 17786                           	psect	text74
 17787  004944                     __ptext74:
 17788                           	opt stack 0
 17789  004944                     _getsUSBUSART:
 17790                           	opt stack 13
 17791                           
 17792                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;incstack = 0
 17796  004944  0E00               	movlw	0
 17797  004946  0100               	movlb	0	; () banked
 17798  004948  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17802  00494A  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17803  00494C  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17804  00494E  B4D8               	btfsc	status,2,c
 17805  004950  D006               	goto	u11960
 17806                           
 17807                           ; BSR set to: 0
 17808  004952  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17809  004956  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17810  00495A  BEDF               	btfsc	indf2,7,c
 17811  00495C  D03B               	goto	l1921
 17812  00495E                     u11960:
 17813                           
 17814                           ; BSR set to: 0
 17815                           ;usb_device_cdc.c: 493: {
 17816                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17817                           
 17818                           ; BSR set to: 0
 17819  00495E  EE20 F001          	lfsr	2,1
 17820  004962  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17821  004964  26D9               	addwf	fsr2l,f,c
 17822  004966  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17823  004968  22DA               	addwfc	fsr2h,f,c
 17824  00496A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17825  00496C  5CDE               	subwf	postinc2,w,c
 17826  00496E  B0D8               	btfsc	status,0,c
 17827  004970  D008               	goto	l1924
 17828                           
 17829                           ; BSR set to: 0
 17830                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17831  004972  EE20 F001          	lfsr	2,1
 17832  004976  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17833  004978  26D9               	addwf	fsr2l,f,c
 17834  00497A  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17835  00497C  22DA               	addwfc	fsr2h,f,c
 17836  00497E  50DF               	movf	indf2,w,c
 17837  004980  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17838  004982                     l1924:
 17839                           
 17840                           ; BSR set to: 0
 17841                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17842                           
 17843                           ; BSR set to: 0
 17844  004982  0E00               	movlw	0
 17845  004984  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17846  004986  D013               	goto	l1925
 17847  004988                     
 17848                           ; BSR set to: 0
 17849                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17850                           
 17851                           ; BSR set to: 0
 17852  004988  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17853  00498A  0D01               	mullw	1
 17854  00498C  0E00               	movlw	low _cdc_data_rx
 17855  00498E  24F3               	addwf	prodl,w,c
 17856  004990  6ED9               	movwf	fsr2l,c
 17857  004992  0E05               	movlw	high _cdc_data_rx
 17858  004994  20F4               	addwfc	prodh,w,c
 17859  004996  6EDA               	movwf	fsr2h,c
 17860  004998  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17861  00499A  0D01               	mullw	1
 17862  00499C  50F3               	movf	prodl,w,c
 17863  00499E  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17864  0049A0  6EE1               	movwf	fsr1l,c
 17865  0049A2  50F4               	movf	prodh,w,c
 17866  0049A4  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17867  0049A6  6EE2               	movwf	fsr1h,c
 17868  0049A8  CFDF FFE7          	movff	indf2,indf1
 17869                           
 17870                           ; BSR set to: 0
 17871  0049AC  2BC7               	incf	_cdc_rx_len& (0+255),f,b
 17872  0049AE                     l1925:
 17873                           
 17874                           ; BSR set to: 0
 17875                           
 17876                           ; BSR set to: 0
 17877  0049AE  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17878  0049B0  5DC7               	subwf	_cdc_rx_len& (0+255),w,b
 17879  0049B2  A0D8               	btfss	status,0,c
 17880  0049B4  D7E9               	goto	l1926
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17884                           
 17885                           ; BSR set to: 0
 17886  0049B6  0E00               	movlw	0
 17887  0049B8  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17888  0049BA  0E00               	movlw	low _cdc_data_rx
 17889  0049BC  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17890  0049BE  0E05               	movlw	high _cdc_data_rx
 17891  0049C0  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17892  0049C2  0E40               	movlw	64
 17893  0049C4  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17894  0049C6  0E02               	movlw	2
 17895  0049C8  EC15  F020         	call	_USBTransferOnePacket
 17896  0049CC  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17897  0049D0  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17898  0049D4                     l1921:
 17899                           
 17900                           ;usb_device_cdc.c: 513: }
 17901                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17902  0049D4  0100               	movlb	0	; () banked
 17903  0049D6  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17904  0049D8  0012               	return	
 17905  0049DA                     __end_of_getsUSBUSART:
 17906                           	opt stack 0
 17907                           tosu	equ	0xFFF
 17908                           tosh	equ	0xFFE
 17909                           tosl	equ	0xFFD
 17910                           pclath	equ	0xFFA
 17911                           tblptru	equ	0xFF8
 17912                           tblptrh	equ	0xFF7
 17913                           tblptrl	equ	0xFF6
 17914                           tablat	equ	0xFF5
 17915                           prodh	equ	0xFF4
 17916                           prodl	equ	0xFF3
 17917                           intcon	equ	0xFF2
 17918                           intcon2	equ	0xFF1
 17919                           intcon3	equ	0xFF0
 17920                           indf0	equ	0xFEF
 17921                           postinc0	equ	0xFEE
 17922                           plusw0	equ	0xFEB
 17923                           fsr0h	equ	0xFEA
 17924                           fsr0l	equ	0xFE9
 17925                           wreg	equ	0xFE8
 17926                           indf1	equ	0xFE7
 17927                           postinc1	equ	0xFE6
 17928                           postdec1	equ	0xFE5
 17929                           fsr1h	equ	0xFE2
 17930                           fsr1l	equ	0xFE1
 17931                           indf2	equ	0xFDF
 17932                           postinc2	equ	0xFDE
 17933                           postdec2	equ	0xFDD
 17934                           plusw2	equ	0xFDB
 17935                           fsr2h	equ	0xFDA
 17936                           fsr2l	equ	0xFD9
 17937                           status	equ	0xFD8
 17938                           
 17939 ;; *************** function _USBTransferOnePacket *****************
 17940 ;; Defined at:
 17941 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;  ep              1    wreg     unsigned char 
 17944 ;;  dir             1   29[BANK0 ] unsigned char 
 17945 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17946 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17947 ;;  len             1   32[BANK0 ] unsigned char 
 17948 ;; Auto vars:     Size  Location     Type
 17949 ;;  ep              1   33[BANK0 ] unsigned char 
 17950 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17951 ;;		 -> NULL(0), BDT(48), 
 17952 ;; Return value:  Size  Location     Type
 17953 ;;                  2   29[BANK0 ] PTR void 
 17954 ;; Registers used:
 17955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17956 ;; Tracked objects:
 17957 ;;		On entry : 0/0
 17958 ;;		On exit  : 0/0
 17959 ;;		Unchanged: 0/0
 17960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17962 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17964 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17965 ;;Total ram usage:        7 bytes
 17966 ;; Hardware stack levels used:    1
 17967 ;; Hardware stack levels required when called:   11
 17968 ;; This function calls:
 17969 ;;		Nothing
 17970 ;; This function is called by:
 17971 ;;		_CDCInitEP
 17972 ;;		_getsUSBUSART
 17973 ;;		_CDCTxService
 17974 ;;		_USBCDCEventHandler
 17975 ;; This function uses a non-reentrant model
 17976 ;;
 17977                           
 17978                           	psect	text75
 17979  00402A                     __ptext75:
 17980                           	opt stack 0
 17981  00402A                     _USBTransferOnePacket:
 17982                           	opt stack 13
 17983                           
 17984                           ; BSR set to: 0
 17985                           ;incstack = 0
 17986                           ;USBTransferOnePacket@ep stored from wreg
 17987  00402A  0100               	movlb	0	; () banked
 17988  00402C  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17989                           
 17990                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17991                           ;usb_device.c: 1018: if(dir != 0)
 17992  00402E  0100               	movlb	0	; () banked
 17993  004030  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17994  004032  B4D8               	btfsc	status,2,c
 17995  004034  D007               	goto	l1645
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;usb_device.c: 1019: {
 17999                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18000  004036  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18001  004038  0D02               	mullw	2
 18002  00403A  0EB6               	movlw	low _pBDTEntryIn
 18003  00403C  24F3               	addwf	prodl,w,c
 18004  00403E  6ED9               	movwf	fsr2l,c
 18005  004040  0E00               	movlw	high _pBDTEntryIn
 18006  004042  D006               	goto	L16
 18007  004044                     l1645:
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;usb_device.c: 1023: else
 18011                           ;usb_device.c: 1024: {
 18012                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18013                           
 18014                           ; BSR set to: 0
 18015  004044  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18016  004046  0D02               	mullw	2
 18017  004048  0E0E               	movlw	low _pBDTEntryOut
 18018  00404A  24F3               	addwf	prodl,w,c
 18019  00404C  6ED9               	movwf	fsr2l,c
 18020  00404E  0E03               	movlw	high _pBDTEntryOut
 18021  004050                     L16:
 18022  004050  20F4               	addwfc	prodh,w,c
 18023  004052  6EDA               	movwf	fsr2h,c
 18024  004054  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18025  004058  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18026                           
 18027                           ; BSR set to: 0
 18028                           ;usb_device.c: 1027: }
 18029                           ;usb_device.c: 1031: if(handle == 0)
 18030                           
 18031                           ; BSR set to: 0
 18032  00405C  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18033  00405E  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18034  004060  A4D8               	btfss	status,2,c
 18035  004062  D005               	goto	l1647
 18036                           
 18037                           ; BSR set to: 0
 18038                           ;usb_device.c: 1032: {
 18039                           ;usb_device.c: 1033: return 0;
 18040  004064  0E00               	movlw	0
 18041  004066  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18042  004068  0E00               	movlw	0
 18043  00406A  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18044                           
 18045                           ; BSR set to: 0
 18046  00406C  0012               	return	
 18047  00406E                     l1647:
 18048                           
 18049                           ; BSR set to: 0
 18050                           ;usb_device.c: 1034: }
 18051                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18052                           
 18053                           ; BSR set to: 0
 18054  00406E  EE20 F002          	lfsr	2,2
 18055  004072  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18056  004074  26D9               	addwf	fsr2l,f,c
 18057  004076  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18058  004078  22DA               	addwfc	fsr2h,f,c
 18059  00407A  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18060  00407E  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18061                           
 18062                           ;usb_device.c: 1048: handle->CNT = len;
 18063  004082  EE20 F001          	lfsr	2,1
 18064  004086  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18065  004088  26D9               	addwf	fsr2l,f,c
 18066  00408A  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18067  00408C  22DA               	addwfc	fsr2h,f,c
 18068  00408E  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18072  004092  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18073  004096  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18074  00409A  0E40               	movlw	64
 18075  00409C  16DF               	andwf	indf2,f,c
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18079  00409E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18080  0040A2  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18081  0040A6  0E00               	movlw	0
 18082  0040A8  86DB               	bsf	plusw2,3,c
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18086  0040AA  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18087  0040AE  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18088  0040B2  0E00               	movlw	0
 18089  0040B4  8EDB               	bsf	plusw2,7,c
 18090                           
 18091                           ; BSR set to: 0
 18092                           ;usb_device.c: 1054: if(dir != 0)
 18093  0040B6  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18094  0040B8  B4D8               	btfsc	status,2,c
 18095  0040BA  D007               	goto	l1649
 18096                           
 18097                           ; BSR set to: 0
 18098                           ;usb_device.c: 1055: {
 18099                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18100  0040BC  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18101  0040BE  0D02               	mullw	2
 18102  0040C0  0EB6               	movlw	low _pBDTEntryIn
 18103  0040C2  24F3               	addwf	prodl,w,c
 18104  0040C4  6ED9               	movwf	fsr2l,c
 18105  0040C6  0E00               	movlw	high _pBDTEntryIn
 18106  0040C8  D006               	goto	L17
 18107  0040CA                     l1649:
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;usb_device.c: 1059: else
 18111                           ;usb_device.c: 1060: {
 18112                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18113                           
 18114                           ; BSR set to: 0
 18115  0040CA  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18116  0040CC  0D02               	mullw	2
 18117  0040CE  0E0E               	movlw	low _pBDTEntryOut
 18118  0040D0  24F3               	addwf	prodl,w,c
 18119  0040D2  6ED9               	movwf	fsr2l,c
 18120  0040D4  0E03               	movlw	high _pBDTEntryOut
 18121  0040D6                     L17:
 18122  0040D6  20F4               	addwfc	prodh,w,c
 18123  0040D8  6EDA               	movwf	fsr2h,c
 18124  0040DA  0E04               	movlw	4
 18125  0040DC  1ADF               	xorwf	indf2,f,c
 18126                           
 18127                           ; BSR set to: 0
 18128                           ;usb_device.c: 1063: }
 18129                           ;usb_device.c: 1064: return (void*)handle;
 18130                           
 18131                           ; BSR set to: 0
 18132  0040DE  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18133  0040E2  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18134  0040E6  0012               	return	
 18135  0040E8                     __end_of_USBTransferOnePacket:
 18136                           	opt stack 0
 18137                           tosu	equ	0xFFF
 18138                           tosh	equ	0xFFE
 18139                           tosl	equ	0xFFD
 18140                           pclath	equ	0xFFA
 18141                           tblptru	equ	0xFF8
 18142                           tblptrh	equ	0xFF7
 18143                           tblptrl	equ	0xFF6
 18144                           tablat	equ	0xFF5
 18145                           prodh	equ	0xFF4
 18146                           prodl	equ	0xFF3
 18147                           intcon	equ	0xFF2
 18148                           intcon2	equ	0xFF1
 18149                           intcon3	equ	0xFF0
 18150                           indf0	equ	0xFEF
 18151                           postinc0	equ	0xFEE
 18152                           plusw0	equ	0xFEB
 18153                           fsr0h	equ	0xFEA
 18154                           fsr0l	equ	0xFE9
 18155                           wreg	equ	0xFE8
 18156                           indf1	equ	0xFE7
 18157                           postinc1	equ	0xFE6
 18158                           postdec1	equ	0xFE5
 18159                           fsr1h	equ	0xFE2
 18160                           fsr1l	equ	0xFE1
 18161                           indf2	equ	0xFDF
 18162                           postinc2	equ	0xFDE
 18163                           postdec2	equ	0xFDD
 18164                           plusw2	equ	0xFDB
 18165                           fsr2h	equ	0xFDA
 18166                           fsr2l	equ	0xFD9
 18167                           status	equ	0xFD8
 18168                           
 18169 ;; *************** function _atoi *****************
 18170 ;; Defined at:
 18171 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18172 ;; Parameters:    Size  Location     Type
 18173 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18174 ;;		 -> Terminal@Len(4), 
 18175 ;; Auto vars:     Size  Location     Type
 18176 ;;  a               2   40[BANK0 ] int 
 18177 ;;  sign            1   39[BANK0 ] unsigned char 
 18178 ;; Return value:  Size  Location     Type
 18179 ;;                  2   35[BANK0 ] int 
 18180 ;; Registers used:
 18181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18182 ;; Tracked objects:
 18183 ;;		On entry : 0/0
 18184 ;;		On exit  : 0/0
 18185 ;;		Unchanged: 0/0
 18186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18188 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18190 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18191 ;;Total ram usage:        7 bytes
 18192 ;; Hardware stack levels used:    1
 18193 ;; Hardware stack levels required when called:   12
 18194 ;; This function calls:
 18195 ;;		___wmul
 18196 ;;		_isdigit
 18197 ;; This function is called by:
 18198 ;;		_Terminal
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202                           	psect	text76
 18203  0036A4                     __ptext76:
 18204                           	opt stack 0
 18205  0036A4                     _atoi:
 18206                           	opt stack 13
 18207                           
 18208                           ; BSR set to: 0
 18209                           ;incstack = 0
 18210  0036A4  D003               	goto	l2856
 18211  0036A6  0100               	movlb	0	; () banked
 18212  0036A8  4B83               	infsnz	atoi@s& (0+255),f,b
 18213  0036AA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18214  0036AC                     l2856:
 18215                           
 18216                           ; BSR set to: 0
 18217  0036AC  C083  FFD9         	movff	atoi@s,fsr2l
 18218  0036B0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18219  0036B4  0E20               	movlw	32
 18220  0036B6  18DE               	xorwf	postinc2,w,c
 18221  0036B8  B4D8               	btfsc	status,2,c
 18222  0036BA  D7F5               	goto	l2857
 18223  0036BC  C083  FFD9         	movff	atoi@s,fsr2l
 18224  0036C0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18225  0036C4  0E09               	movlw	9
 18226  0036C6  18DE               	xorwf	postinc2,w,c
 18227  0036C8  B4D8               	btfsc	status,2,c
 18228  0036CA  D7ED               	goto	l2857
 18229  0036CC  0E00               	movlw	0
 18230  0036CE  0100               	movlb	0	; () banked
 18231  0036D0  6F89               	movwf	(atoi@a+1)& (0+255),b
 18232  0036D2  0E00               	movlw	0
 18233  0036D4  6F88               	movwf	atoi@a& (0+255),b
 18234  0036D6  0E00               	movlw	0
 18235  0036D8  6F87               	movwf	atoi@sign& (0+255),b
 18236                           
 18237                           ; BSR set to: 0
 18238  0036DA  C083  FFD9         	movff	atoi@s,fsr2l
 18239  0036DE  C084  FFDA         	movff	atoi@s+1,fsr2h
 18240  0036E2  0E2D               	movlw	45
 18241  0036E4  18DE               	xorwf	postinc2,w,c
 18242  0036E6  A4D8               	btfss	status,2,c
 18243  0036E8  D002               	goto	l2859
 18244                           
 18245                           ; BSR set to: 0
 18246  0036EA  2B87               	incf	atoi@sign& (0+255),f,b
 18247  0036EC  D026               	goto	l13073
 18248  0036EE                     l2859:
 18249                           
 18250                           ; BSR set to: 0
 18251                           
 18252                           ; BSR set to: 0
 18253  0036EE  C083  FFD9         	movff	atoi@s,fsr2l
 18254  0036F2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18255  0036F6  0E2B               	movlw	43
 18256  0036F8  18DE               	xorwf	postinc2,w,c
 18257  0036FA  A4D8               	btfss	status,2,c
 18258  0036FC  D020               	goto	l2862
 18259  0036FE  D01D               	goto	l13073
 18260  003700                     
 18261                           ; BSR set to: 0
 18262  003700  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18263  003704  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18264  003708  0E00               	movlw	0
 18265  00370A  0100               	movlb	0	; () banked
 18266  00370C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18267  00370E  0E0A               	movlw	10
 18268  003710  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18269  003712  ECF1  F02F         	call	___wmul	;wreg free
 18270  003716  C083  FFD9         	movff	atoi@s,fsr2l
 18271  00371A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18272  00371E  50DF               	movf	indf2,w,c
 18273  003720  0100               	movlb	0	; () banked
 18274  003722  6F85               	movwf	??_atoi& (0+255),b
 18275  003724  6B86               	clrf	(??_atoi+1)& (0+255),b
 18276  003726  517D               	movf	?___wmul& (0+255),w,b
 18277  003728  2785               	addwf	??_atoi& (0+255),f,b
 18278  00372A  517E               	movf	(?___wmul+1)& (0+255),w,b
 18279  00372C  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18280  00372E  0ED0               	movlw	208
 18281  003730  2585               	addwf	??_atoi& (0+255),w,b
 18282  003732  6F88               	movwf	atoi@a& (0+255),b
 18283  003734  0EFF               	movlw	255
 18284  003736  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18285  003738  6F89               	movwf	(atoi@a+1)& (0+255),b
 18286  00373A                     l13073:
 18287                           
 18288                           ; BSR set to: 0
 18289  00373A  4B83               	infsnz	atoi@s& (0+255),f,b
 18290  00373C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18291  00373E                     l2862:
 18292                           
 18293                           ; BSR set to: 0
 18294                           
 18295                           ; BSR set to: 0
 18296  00373E  C083  FFD9         	movff	atoi@s,fsr2l
 18297  003742  C084  FFDA         	movff	atoi@s+1,fsr2h
 18298  003746  50DF               	movf	indf2,w,c
 18299  003748  ECA4  F030         	call	_isdigit
 18300  00374C  B0D8               	btfsc	status,0,c
 18301  00374E  D7D8               	goto	l2863
 18302  003750  0100               	movlb	0	; () banked
 18303  003752  5187               	movf	atoi@sign& (0+255),w,b
 18304  003754  B4D8               	btfsc	status,2,c
 18305  003756  D00D               	goto	l2865
 18306                           
 18307                           ; BSR set to: 0
 18308  003758  C088  F085         	movff	atoi@a,??_atoi
 18309  00375C  C089  F086         	movff	atoi@a+1,??_atoi+1
 18310  003760  1F85               	comf	??_atoi& (0+255),f,b
 18311  003762  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18312  003764  4B85               	infsnz	??_atoi& (0+255),f,b
 18313  003766  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18314  003768  C085  F083         	movff	??_atoi,?_atoi
 18315  00376C  C086  F084         	movff	??_atoi+1,?_atoi+1
 18316  003770  0012               	return	
 18317  003772                     l2865:
 18318                           
 18319                           ; BSR set to: 0
 18320  003772  C088  F083         	movff	atoi@a,?_atoi
 18321  003776  C089  F084         	movff	atoi@a+1,?_atoi+1
 18322                           
 18323                           ; BSR set to: 0
 18324  00377A  0012               	return		;funcret
 18325  00377C                     __end_of_atoi:
 18326                           	opt stack 0
 18327                           tosu	equ	0xFFF
 18328                           tosh	equ	0xFFE
 18329                           tosl	equ	0xFFD
 18330                           pclath	equ	0xFFA
 18331                           tblptru	equ	0xFF8
 18332                           tblptrh	equ	0xFF7
 18333                           tblptrl	equ	0xFF6
 18334                           tablat	equ	0xFF5
 18335                           prodh	equ	0xFF4
 18336                           prodl	equ	0xFF3
 18337                           intcon	equ	0xFF2
 18338                           intcon2	equ	0xFF1
 18339                           intcon3	equ	0xFF0
 18340                           indf0	equ	0xFEF
 18341                           postinc0	equ	0xFEE
 18342                           plusw0	equ	0xFEB
 18343                           fsr0h	equ	0xFEA
 18344                           fsr0l	equ	0xFE9
 18345                           wreg	equ	0xFE8
 18346                           indf1	equ	0xFE7
 18347                           postinc1	equ	0xFE6
 18348                           postdec1	equ	0xFE5
 18349                           fsr1h	equ	0xFE2
 18350                           fsr1l	equ	0xFE1
 18351                           indf2	equ	0xFDF
 18352                           postinc2	equ	0xFDE
 18353                           postdec2	equ	0xFDD
 18354                           plusw2	equ	0xFDB
 18355                           fsr2h	equ	0xFDA
 18356                           fsr2l	equ	0xFD9
 18357                           status	equ	0xFD8
 18358                           
 18359 ;; *************** function _isdigit *****************
 18360 ;; Defined at:
 18361 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;  c               1    wreg     unsigned char 
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;  c               1   31[BANK0 ] unsigned char 
 18366 ;; Return value:  Size  Location     Type
 18367 ;;		None               void
 18368 ;; Registers used:
 18369 ;;		wreg, status,2, status,0
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18378 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18379 ;;Total ram usage:        3 bytes
 18380 ;; Hardware stack levels used:    1
 18381 ;; Hardware stack levels required when called:   11
 18382 ;; This function calls:
 18383 ;;		Nothing
 18384 ;; This function is called by:
 18385 ;;		_atoi
 18386 ;;		_strtol
 18387 ;;		_xtoi
 18388 ;;		_isxdigit
 18389 ;; This function uses a non-reentrant model
 18390 ;;
 18391                           
 18392                           	psect	text77
 18393  006148                     __ptext77:
 18394                           	opt stack 0
 18395  006148                     _isdigit:
 18396                           	opt stack 12
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;incstack = 0
 18400                           ;isdigit@c stored from wreg
 18401  006148  0100               	movlb	0	; () banked
 18402  00614A  6F7F               	movwf	isdigit@c& (0+255),b
 18403  00614C  0E00               	movlw	0
 18404  00614E  0100               	movlb	0	; () banked
 18405  006150  6F7E               	movwf	_isdigit$6245& (0+255),b
 18406                           
 18407                           ; BSR set to: 0
 18408  006152  0E3A               	movlw	58
 18409  006154  617F               	cpfslt	isdigit@c& (0+255),b
 18410  006156  D005               	goto	l3037
 18411                           
 18412                           ; BSR set to: 0
 18413  006158  0E2F               	movlw	47
 18414  00615A  657F               	cpfsgt	isdigit@c& (0+255),b
 18415  00615C  D002               	goto	l3037
 18416                           
 18417                           ; BSR set to: 0
 18418  00615E  0E01               	movlw	1
 18419  006160  6F7E               	movwf	_isdigit$6245& (0+255),b
 18420  006162                     l3037:
 18421                           
 18422                           ; BSR set to: 0
 18423                           
 18424                           ; BSR set to: 0
 18425  006162  C07E  F07D         	movff	_isdigit$6245,??_isdigit
 18426  006166  317D               	rrcf	??_isdigit& (0+255),w,b
 18427  006168  0012               	return	
 18428  00616A                     __end_of_isdigit:
 18429                           	opt stack 0
 18430                           tosu	equ	0xFFF
 18431                           tosh	equ	0xFFE
 18432                           tosl	equ	0xFFD
 18433                           pclath	equ	0xFFA
 18434                           tblptru	equ	0xFF8
 18435                           tblptrh	equ	0xFF7
 18436                           tblptrl	equ	0xFF6
 18437                           tablat	equ	0xFF5
 18438                           prodh	equ	0xFF4
 18439                           prodl	equ	0xFF3
 18440                           intcon	equ	0xFF2
 18441                           intcon2	equ	0xFF1
 18442                           intcon3	equ	0xFF0
 18443                           indf0	equ	0xFEF
 18444                           postinc0	equ	0xFEE
 18445                           plusw0	equ	0xFEB
 18446                           fsr0h	equ	0xFEA
 18447                           fsr0l	equ	0xFE9
 18448                           wreg	equ	0xFE8
 18449                           indf1	equ	0xFE7
 18450                           postinc1	equ	0xFE6
 18451                           postdec1	equ	0xFE5
 18452                           fsr1h	equ	0xFE2
 18453                           fsr1l	equ	0xFE1
 18454                           indf2	equ	0xFDF
 18455                           postinc2	equ	0xFDE
 18456                           postdec2	equ	0xFDD
 18457                           plusw2	equ	0xFDB
 18458                           fsr2h	equ	0xFDA
 18459                           fsr2l	equ	0xFD9
 18460                           status	equ	0xFD8
 18461                           
 18462 ;; *************** function _Rtcm_SetRtccDate *****************
 18463 ;; Defined at:
 18464 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18465 ;; Parameters:    Size  Location     Type
 18466 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18467 ;; Auto vars:     Size  Location     Type
 18468 ;;		None
 18469 ;; Return value:  Size  Location     Type
 18470 ;;                  1    wreg      void 
 18471 ;; Registers used:
 18472 ;;		wreg, status,2, status,0, cstack
 18473 ;; Tracked objects:
 18474 ;;		On entry : 0/0
 18475 ;;		On exit  : 0/0
 18476 ;;		Unchanged: 0/0
 18477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18478 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18481 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18482 ;;Total ram usage:        8 bytes
 18483 ;; Hardware stack levels used:    1
 18484 ;; Hardware stack levels required when called:   13
 18485 ;; This function calls:
 18486 ;;		_Rtcc_LockRtc
 18487 ;;		_Rtcc_SetRtccValue
 18488 ;;		_Rtcc_UnlockRtc
 18489 ;; This function is called by:
 18490 ;;		_Rtcm_MainTask
 18491 ;; This function uses a non-reentrant model
 18492 ;;
 18493                           
 18494                           	psect	text78
 18495  0054F2                     __ptext78:
 18496                           	opt stack 0
 18497  0054F2                     _Rtcm_SetRtccDate:
 18498                           	opt stack 14
 18499                           
 18500                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;incstack = 0
 18504  0054F2  ECBB  F031         	call	_Rtcc_UnlockRtc	;wreg free
 18505                           
 18506                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18507  0054F6  0100               	movlb	0	; () banked
 18508  0054F8  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18509  0054FA  0F30               	addlw	48
 18510  0054FC  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18511  0054FE  0E00               	movlw	0
 18512  005500  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18513                           
 18514                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18515  005504  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18516  005508  0E01               	movlw	1
 18517  00550A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18518                           
 18519                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18520  00550E  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18521  005512  0E02               	movlw	2
 18522  005514  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18523                           
 18524                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18525  005518  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18526  00551C  0E03               	movlw	3
 18527  00551E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18528                           
 18529                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18530  005522  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18531  005526  0E04               	movlw	4
 18532  005528  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18533                           
 18534                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18535  00552C  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18536  005530  0E05               	movlw	5
 18537  005532  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18538                           
 18539                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18540  005536  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18541  00553A  0E06               	movlw	6
 18542  00553C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18543                           
 18544                           ;rtcm.c: 191: Rtcc_LockRtc();
 18545  005540  ECC3  F031         	call	_Rtcc_LockRtc	;wreg free
 18546  005544  0012               	return		;funcret
 18547  005546                     __end_of_Rtcm_SetRtccDate:
 18548                           	opt stack 0
 18549                           tosu	equ	0xFFF
 18550                           tosh	equ	0xFFE
 18551                           tosl	equ	0xFFD
 18552                           pclath	equ	0xFFA
 18553                           tblptru	equ	0xFF8
 18554                           tblptrh	equ	0xFF7
 18555                           tblptrl	equ	0xFF6
 18556                           tablat	equ	0xFF5
 18557                           prodh	equ	0xFF4
 18558                           prodl	equ	0xFF3
 18559                           intcon	equ	0xFF2
 18560                           intcon2	equ	0xFF1
 18561                           intcon3	equ	0xFF0
 18562                           indf0	equ	0xFEF
 18563                           postinc0	equ	0xFEE
 18564                           plusw0	equ	0xFEB
 18565                           fsr0h	equ	0xFEA
 18566                           fsr0l	equ	0xFE9
 18567                           wreg	equ	0xFE8
 18568                           indf1	equ	0xFE7
 18569                           postinc1	equ	0xFE6
 18570                           postdec1	equ	0xFE5
 18571                           fsr1h	equ	0xFE2
 18572                           fsr1l	equ	0xFE1
 18573                           indf2	equ	0xFDF
 18574                           postinc2	equ	0xFDE
 18575                           postdec2	equ	0xFDD
 18576                           plusw2	equ	0xFDB
 18577                           fsr2h	equ	0xFDA
 18578                           fsr2l	equ	0xFD9
 18579                           status	equ	0xFD8
 18580                           
 18581 ;; *************** function _Rtcc_UnlockRtc *****************
 18582 ;; Defined at:
 18583 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      void 
 18590 ;; Registers used:
 18591 ;;		None
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18601 ;;Total ram usage:        0 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; Hardware stack levels required when called:   11
 18604 ;; This function calls:
 18605 ;;		Nothing
 18606 ;; This function is called by:
 18607 ;;		_Rtcm_MainTask
 18608 ;;		_Rtcm_SetRtccDate
 18609 ;;		_Rtcm_SetRtccAlarm
 18610 ;; This function uses a non-reentrant model
 18611 ;;
 18612                           
 18613                           	psect	text79
 18614  006376                     __ptext79:
 18615                           	opt stack 0
 18616  006376                     _Rtcc_UnlockRtc:
 18617                           	opt stack 15
 18618                           
 18619                           ;incstack = 0
 18620  006376  010F               	movlb	15	;# 
 18621  006378  0E55               	movlw	85	;# 
 18622  00637A  6EA7               	movwf	4007,c	;# 
 18623  00637C  0EAA               	movlw	170	;# 
 18624  00637E  6EA7               	movwf	4007,c	;# 
 18625                           
 18626                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18627  006380  010F               	movlb	15	; () banked
 18628  006382  8B3F               	bsf	63,5,b	;volatile
 18629                           
 18630                           ; BSR set to: 15
 18631  006384  0012               	return		;funcret
 18632  006386                     __end_of_Rtcc_UnlockRtc:
 18633                           	opt stack 0
 18634                           tosu	equ	0xFFF
 18635                           tosh	equ	0xFFE
 18636                           tosl	equ	0xFFD
 18637                           pclath	equ	0xFFA
 18638                           tblptru	equ	0xFF8
 18639                           tblptrh	equ	0xFF7
 18640                           tblptrl	equ	0xFF6
 18641                           tablat	equ	0xFF5
 18642                           prodh	equ	0xFF4
 18643                           prodl	equ	0xFF3
 18644                           intcon	equ	0xFF2
 18645                           intcon2	equ	0xFF1
 18646                           intcon3	equ	0xFF0
 18647                           indf0	equ	0xFEF
 18648                           postinc0	equ	0xFEE
 18649                           plusw0	equ	0xFEB
 18650                           fsr0h	equ	0xFEA
 18651                           fsr0l	equ	0xFE9
 18652                           wreg	equ	0xFE8
 18653                           indf1	equ	0xFE7
 18654                           postinc1	equ	0xFE6
 18655                           postdec1	equ	0xFE5
 18656                           fsr1h	equ	0xFE2
 18657                           fsr1l	equ	0xFE1
 18658                           indf2	equ	0xFDF
 18659                           postinc2	equ	0xFDE
 18660                           postdec2	equ	0xFDD
 18661                           plusw2	equ	0xFDB
 18662                           fsr2h	equ	0xFDA
 18663                           fsr2l	equ	0xFD9
 18664                           status	equ	0xFD8
 18665                           
 18666 ;; *************** function _Rtcc_SetRtccValue *****************
 18667 ;; Defined at:
 18668 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18669 ;; Parameters:    Size  Location     Type
 18670 ;;  RtccPtrVal      1    wreg     enum E7757
 18671 ;;  Value           1   37[BANK0 ] unsigned char 
 18672 ;; Auto vars:     Size  Location     Type
 18673 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18674 ;; Return value:  Size  Location     Type
 18675 ;;                  1    wreg      void 
 18676 ;; Registers used:
 18677 ;;		wreg, status,2, status,0, cstack
 18678 ;; Tracked objects:
 18679 ;;		On entry : 0/0
 18680 ;;		On exit  : 0/0
 18681 ;;		Unchanged: 0/0
 18682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18683 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18686 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18687 ;;Total ram usage:        4 bytes
 18688 ;; Hardware stack levels used:    1
 18689 ;; Hardware stack levels required when called:   12
 18690 ;; This function calls:
 18691 ;;		___awdiv
 18692 ;;		___awmod
 18693 ;; This function is called by:
 18694 ;;		_Rtcm_SetRtccDate
 18695 ;; This function uses a non-reentrant model
 18696 ;;
 18697                           
 18698                           	psect	text80
 18699  0015EE                     __ptext80:
 18700                           	opt stack 0
 18701  0015EE                     _Rtcc_SetRtccValue:
 18702                           	opt stack 14
 18703                           
 18704                           ; BSR set to: 15
 18705                           ;incstack = 0
 18706                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18707  0015EE  0100               	movlb	0	; () banked
 18708  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18709                           
 18710                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18711  0015F2  D0FC               	goto	l441
 18712  0015F4                     l442:
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18716  0015F4  010F               	movlb	15	; () banked
 18717  0015F6  833F               	bsf	63,1,b	;volatile
 18718                           
 18719                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18720  0015F8  813F               	bsf	63,0,b	;volatile
 18721                           
 18722                           ; BSR set to: 15
 18723                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18724  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18725  0015FE  0100               	movlb	0	; () banked
 18726  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18727  001602  0E00               	movlw	0
 18728  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18729  001606  0E0A               	movlw	10
 18730  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18731  00160A  EC9E  F027         	call	___awmod	;wreg free
 18732  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18733  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18734  001616  0E0F               	movlw	15
 18735  001618  0100               	movlb	0	; () banked
 18736  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18737  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18738  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18739  001622  0E00               	movlw	0
 18740  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18741  001626  0E0A               	movlw	10
 18742  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18743  00162A  EC9E  F026         	call	___awdiv	;wreg free
 18744  00162E  0100               	movlb	0	; () banked
 18745  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18746  001632  0BF0               	andlw	240
 18747  001634  0BF0               	andlw	240
 18748  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18749  001638  6E98               	movwf	3992,c	;volatile
 18750                           
 18751                           ;rtcc_drv.c: 393: break;
 18752  00163A  0012               	return	
 18753  00163C                     l444:
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18757  00163C  010F               	movlb	15	; () banked
 18758  00163E  833F               	bsf	63,1,b	;volatile
 18759                           
 18760                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18761  001640  913F               	bcf	63,0,b	;volatile
 18762                           
 18763                           ; BSR set to: 15
 18764                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18765  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18766  001646  0100               	movlb	0	; () banked
 18767  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18768  00164A  0E00               	movlw	0
 18769  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18770  00164E  0E0A               	movlw	10
 18771  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18772  001652  EC9E  F027         	call	___awmod	;wreg free
 18773  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18774  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18775  00165E  0E0F               	movlw	15
 18776  001660  0100               	movlb	0	; () banked
 18777  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18778  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18779  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18780  00166A  0E00               	movlw	0
 18781  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18782  00166E  0E0A               	movlw	10
 18783  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18784  001672  EC9E  F026         	call	___awdiv	;wreg free
 18785  001676  0100               	movlb	0	; () banked
 18786  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18787  00167A  0BF0               	andlw	240
 18788  00167C  0BF0               	andlw	240
 18789  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18790  001680  6E99               	movwf	3993,c	;volatile
 18791                           
 18792                           ;rtcc_drv.c: 401: break;
 18793  001682  0012               	return	
 18794  001684                     l445:
 18795                           
 18796                           ; BSR set to: 0
 18797                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18798  001684  010F               	movlb	15	; () banked
 18799  001686  833F               	bsf	63,1,b	;volatile
 18800                           
 18801                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18802  001688  913F               	bcf	63,0,b	;volatile
 18803                           
 18804                           ; BSR set to: 15
 18805                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18806  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18807  00168E  0100               	movlb	0	; () banked
 18808  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18809  001692  0E00               	movlw	0
 18810  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18811  001696  0E0A               	movlw	10
 18812  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18813  00169A  EC9E  F027         	call	___awmod	;wreg free
 18814  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18815  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18816  0016A6  0E0F               	movlw	15
 18817  0016A8  0100               	movlb	0	; () banked
 18818  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18819  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18820  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18821  0016B2  0E00               	movlw	0
 18822  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18823  0016B6  0E0A               	movlw	10
 18824  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18825  0016BA  EC9E  F026         	call	___awdiv	;wreg free
 18826  0016BE  0100               	movlb	0	; () banked
 18827  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18828  0016C2  0BF0               	andlw	240
 18829  0016C4  0BF0               	andlw	240
 18830  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18831  0016C8  6E98               	movwf	3992,c	;volatile
 18832                           
 18833                           ;rtcc_drv.c: 409: break;
 18834  0016CA  0012               	return	
 18835  0016CC                     l446:
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18839  0016CC  010F               	movlb	15	; () banked
 18840  0016CE  933F               	bcf	63,1,b	;volatile
 18841                           
 18842                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18843  0016D0  813F               	bsf	63,0,b	;volatile
 18844                           
 18845                           ; BSR set to: 15
 18846                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18847  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18848  0016D6  0100               	movlb	0	; () banked
 18849  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18850  0016DA  0E00               	movlw	0
 18851  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18852  0016DE  0E0A               	movlw	10
 18853  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18854  0016E2  EC9E  F027         	call	___awmod	;wreg free
 18855  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18856  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18857  0016EE  0E0F               	movlw	15
 18858  0016F0  0100               	movlb	0	; () banked
 18859  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18860  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18861  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18862  0016FA  0E00               	movlw	0
 18863  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18864  0016FE  0E0A               	movlw	10
 18865  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18866  001702  EC9E  F026         	call	___awdiv	;wreg free
 18867  001706  0100               	movlb	0	; () banked
 18868  001708  397D               	swapf	?___awdiv& (0+255),w,b
 18869  00170A  0BF0               	andlw	240
 18870  00170C  0BF0               	andlw	240
 18871  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18872  001710  6E99               	movwf	3993,c	;volatile
 18873                           
 18874                           ;rtcc_drv.c: 417: break;
 18875  001712  0012               	return	
 18876  001714                     l447:
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 18880  001714  010F               	movlb	15	; () banked
 18881  001716  933F               	bcf	63,1,b	;volatile
 18882                           
 18883                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 18884  001718  813F               	bsf	63,0,b	;volatile
 18885                           
 18886                           ; BSR set to: 15
 18887                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18888  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18889  00171E  0100               	movlb	0	; () banked
 18890  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18891  001722  0E00               	movlw	0
 18892  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18893  001726  0E0A               	movlw	10
 18894  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 18895  00172A  EC9E  F027         	call	___awmod	;wreg free
 18896  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18897  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18898  001736  0E0F               	movlw	15
 18899  001738  0100               	movlb	0	; () banked
 18900  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18901  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18902  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18903  001742  0E00               	movlw	0
 18904  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18905  001746  0E0A               	movlw	10
 18906  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18907  00174A  EC9E  F026         	call	___awdiv	;wreg free
 18908  00174E  0100               	movlb	0	; () banked
 18909  001750  397D               	swapf	?___awdiv& (0+255),w,b
 18910  001752  0BF0               	andlw	240
 18911  001754  0BF0               	andlw	240
 18912  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18913  001758  6E98               	movwf	3992,c	;volatile
 18914                           
 18915                           ;rtcc_drv.c: 425: break;
 18916  00175A  0012               	return	
 18917  00175C                     l448:
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 18921  00175C  010F               	movlb	15	; () banked
 18922  00175E  933F               	bcf	63,1,b	;volatile
 18923                           
 18924                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 18925  001760  913F               	bcf	63,0,b	;volatile
 18926                           
 18927                           ; BSR set to: 15
 18928                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18929  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18930  001766  0100               	movlb	0	; () banked
 18931  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18932  00176A  0E00               	movlw	0
 18933  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18934  00176E  0E0A               	movlw	10
 18935  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 18936  001772  EC9E  F027         	call	___awmod	;wreg free
 18937  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18938  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18939  00177E  0E0F               	movlw	15
 18940  001780  0100               	movlb	0	; () banked
 18941  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18942  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18943  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18944  00178A  0E00               	movlw	0
 18945  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18946  00178E  0E0A               	movlw	10
 18947  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18948  001792  EC9E  F026         	call	___awdiv	;wreg free
 18949  001796  0100               	movlb	0	; () banked
 18950  001798  397D               	swapf	?___awdiv& (0+255),w,b
 18951  00179A  0BF0               	andlw	240
 18952  00179C  0BF0               	andlw	240
 18953  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18954  0017A0  6E99               	movwf	3993,c	;volatile
 18955                           
 18956                           ;rtcc_drv.c: 433: break;
 18957  0017A2  0012               	return	
 18958  0017A4                     l449:
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 18962  0017A4  010F               	movlb	15	; () banked
 18963  0017A6  933F               	bcf	63,1,b	;volatile
 18964                           
 18965                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 18966  0017A8  913F               	bcf	63,0,b	;volatile
 18967                           
 18968                           ; BSR set to: 15
 18969                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18970  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18971  0017AE  0100               	movlb	0	; () banked
 18972  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18973  0017B2  0E00               	movlw	0
 18974  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18975  0017B6  0E0A               	movlw	10
 18976  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 18977  0017BA  EC9E  F027         	call	___awmod	;wreg free
 18978  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18979  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18980  0017C6  0E0F               	movlw	15
 18981  0017C8  0100               	movlb	0	; () banked
 18982  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18983  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18984  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18985  0017D2  0E00               	movlw	0
 18986  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18987  0017D6  0E0A               	movlw	10
 18988  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18989  0017DA  EC9E  F026         	call	___awdiv	;wreg free
 18990  0017DE  0100               	movlb	0	; () banked
 18991  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 18992  0017E2  0BF0               	andlw	240
 18993  0017E4  0BF0               	andlw	240
 18994  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18995  0017E8  6E98               	movwf	3992,c	;volatile
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;rtcc_drv.c: 445: }
 18999                           
 19000                           ; BSR set to: 0
 19001                           ;rtcc_drv.c: 444: break;
 19002                           
 19003                           ;rtcc_drv.c: 443: default:
 19004                           
 19005                           ;rtcc_drv.c: 441: break;
 19006  0017EA  0012               	return	
 19007  0017EC                     l441:
 19008                           
 19009                           ; BSR set to: 0
 19010  0017EC  0100               	movlb	0	; () banked
 19011  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19012                           
 19013                           ; Switch size 1, requested type "space"
 19014                           ; Number of cases is 7, Range of values is 0 to 6
 19015                           ; switch strategies available:
 19016                           ; Name         Instructions Cycles
 19017                           ; simple_byte           22    12 (average)
 19018                           ;	Chosen strategy is simple_byte
 19019  0017F0  0A00               	xorlw	0	; case 0
 19020  0017F2  B4D8               	btfsc	status,2,c
 19021  0017F4  D6FF               	goto	l442
 19022  0017F6  0A01               	xorlw	1	; case 1
 19023  0017F8  B4D8               	btfsc	status,2,c
 19024  0017FA  D720               	goto	l444
 19025  0017FC  0A03               	xorlw	3	; case 2
 19026  0017FE  B4D8               	btfsc	status,2,c
 19027  001800  D741               	goto	l445
 19028  001802  0A01               	xorlw	1	; case 3
 19029  001804  B4D8               	btfsc	status,2,c
 19030  001806  D762               	goto	l446
 19031  001808  0A07               	xorlw	7	; case 4
 19032  00180A  B4D8               	btfsc	status,2,c
 19033  00180C  D783               	goto	l447
 19034  00180E  0A01               	xorlw	1	; case 5
 19035  001810  B4D8               	btfsc	status,2,c
 19036  001812  D7A4               	goto	l448
 19037  001814  0A03               	xorlw	3	; case 6
 19038  001816  A4D8               	btfss	status,2,c
 19039  001818  0012               	return	
 19040  00181A  D7C4               	goto	l449
 19041  00181C                     __end_of_Rtcc_SetRtccValue:
 19042                           	opt stack 0
 19043                           tosu	equ	0xFFF
 19044                           tosh	equ	0xFFE
 19045                           tosl	equ	0xFFD
 19046                           pclath	equ	0xFFA
 19047                           tblptru	equ	0xFF8
 19048                           tblptrh	equ	0xFF7
 19049                           tblptrl	equ	0xFF6
 19050                           tablat	equ	0xFF5
 19051                           prodh	equ	0xFF4
 19052                           prodl	equ	0xFF3
 19053                           intcon	equ	0xFF2
 19054                           intcon2	equ	0xFF1
 19055                           intcon3	equ	0xFF0
 19056                           indf0	equ	0xFEF
 19057                           postinc0	equ	0xFEE
 19058                           plusw0	equ	0xFEB
 19059                           fsr0h	equ	0xFEA
 19060                           fsr0l	equ	0xFE9
 19061                           wreg	equ	0xFE8
 19062                           indf1	equ	0xFE7
 19063                           postinc1	equ	0xFE6
 19064                           postdec1	equ	0xFE5
 19065                           fsr1h	equ	0xFE2
 19066                           fsr1l	equ	0xFE1
 19067                           indf2	equ	0xFDF
 19068                           postinc2	equ	0xFDE
 19069                           postdec2	equ	0xFDD
 19070                           plusw2	equ	0xFDB
 19071                           fsr2h	equ	0xFDA
 19072                           fsr2l	equ	0xFD9
 19073                           status	equ	0xFD8
 19074                           
 19075 ;; *************** function ___awmod *****************
 19076 ;; Defined at:
 19077 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19078 ;; Parameters:    Size  Location     Type
 19079 ;;  dividend        2   29[BANK0 ] int 
 19080 ;;  divisor         2   31[BANK0 ] int 
 19081 ;; Auto vars:     Size  Location     Type
 19082 ;;  sign            1   34[BANK0 ] unsigned char 
 19083 ;;  counter         1   33[BANK0 ] unsigned char 
 19084 ;; Return value:  Size  Location     Type
 19085 ;;                  2   29[BANK0 ] int 
 19086 ;; Registers used:
 19087 ;;		wreg, status,2, status,0
 19088 ;; Tracked objects:
 19089 ;;		On entry : 0/0
 19090 ;;		On exit  : 0/0
 19091 ;;		Unchanged: 0/0
 19092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19094 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19096 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19097 ;;Total ram usage:        6 bytes
 19098 ;; Hardware stack levels used:    1
 19099 ;; Hardware stack levels required when called:   11
 19100 ;; This function calls:
 19101 ;;		Nothing
 19102 ;; This function is called by:
 19103 ;;		_Rtcc_SetRtccValue
 19104 ;;		_Rtcc_SetRtccAlarm
 19105 ;; This function uses a non-reentrant model
 19106 ;;
 19107                           
 19108                           	psect	text81
 19109  004F3C                     __ptext81:
 19110                           	opt stack 0
 19111  004F3C                     ___awmod:
 19112                           	opt stack 14
 19113                           
 19114                           ; BSR set to: 0
 19115                           ;incstack = 0
 19116  004F3C  0E00               	movlw	0
 19117  004F3E  0100               	movlb	0	; () banked
 19118  004F40  6F82               	movwf	___awmod@sign& (0+255),b
 19119                           
 19120                           ; BSR set to: 0
 19121  004F42  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19122  004F44  D006               	goto	l2888
 19123                           
 19124                           ; BSR set to: 0
 19125  004F46  6D7D               	negf	___awmod@dividend& (0+255),b
 19126  004F48  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19127  004F4A  B0D8               	btfsc	status,0,c
 19128  004F4C  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19129                           
 19130                           ; BSR set to: 0
 19131  004F4E  0E01               	movlw	1
 19132  004F50  6F82               	movwf	___awmod@sign& (0+255),b
 19133  004F52                     l2888:
 19134                           
 19135                           ; BSR set to: 0
 19136                           
 19137                           ; BSR set to: 0
 19138  004F52  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19139  004F54  D004               	goto	l2889
 19140                           
 19141                           ; BSR set to: 0
 19142  004F56  6D7F               	negf	___awmod@divisor& (0+255),b
 19143  004F58  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19144  004F5A  B0D8               	btfsc	status,0,c
 19145  004F5C  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19146  004F5E                     l2889:
 19147                           
 19148                           ; BSR set to: 0
 19149                           
 19150                           ; BSR set to: 0
 19151  004F5E  517F               	movf	___awmod@divisor& (0+255),w,b
 19152  004F60  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19153  004F62  B4D8               	btfsc	status,2,c
 19154  004F64  D018               	goto	l2896
 19155                           
 19156                           ; BSR set to: 0
 19157  004F66  0E01               	movlw	1
 19158  004F68  6F81               	movwf	___awmod@counter& (0+255),b
 19159  004F6A  D004               	goto	l2891
 19160  004F6C                     
 19161                           ; BSR set to: 0
 19162                           
 19163                           ; BSR set to: 0
 19164  004F6C  90D8               	bcf	status,0,c
 19165  004F6E  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19166  004F70  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19167  004F72  2B81               	incf	___awmod@counter& (0+255),f,b
 19168  004F74                     l2891:
 19169                           
 19170                           ; BSR set to: 0
 19171                           
 19172                           ; BSR set to: 0
 19173  004F74  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19174  004F76  D7FA               	goto	l2892
 19175  004F78                     u12440:
 19176                           
 19177                           ; BSR set to: 0
 19178                           
 19179                           ; BSR set to: 0
 19180                           
 19181                           ; BSR set to: 0
 19182  004F78  517F               	movf	___awmod@divisor& (0+255),w,b
 19183  004F7A  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19184  004F7C  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19185  004F7E  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19186  004F80  A0D8               	btfss	status,0,c
 19187  004F82  D004               	goto	l2895
 19188                           
 19189                           ; BSR set to: 0
 19190  004F84  517F               	movf	___awmod@divisor& (0+255),w,b
 19191  004F86  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19192  004F88  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19193  004F8A  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19194  004F8C                     l2895:
 19195                           
 19196                           ; BSR set to: 0
 19197                           
 19198                           ; BSR set to: 0
 19199  004F8C  90D8               	bcf	status,0,c
 19200  004F8E  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19201  004F90  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19202                           
 19203                           ; BSR set to: 0
 19204  004F92  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19205  004F94  D7F1               	goto	u12440
 19206  004F96                     l2896:
 19207                           
 19208                           ; BSR set to: 0
 19209                           
 19210                           ; BSR set to: 0
 19211                           
 19212                           ; BSR set to: 0
 19213  004F96  5182               	movf	___awmod@sign& (0+255),w,b
 19214  004F98  B4D8               	btfsc	status,2,c
 19215  004F9A  D004               	goto	l2897
 19216                           
 19217                           ; BSR set to: 0
 19218  004F9C  6D7D               	negf	___awmod@dividend& (0+255),b
 19219  004F9E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19220  004FA0  B0D8               	btfsc	status,0,c
 19221  004FA2  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19222  004FA4                     l2897:
 19223                           
 19224                           ; BSR set to: 0
 19225                           
 19226                           ; BSR set to: 0
 19227  004FA4  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19228  004FA8  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19229  004FAC  0012               	return	
 19230  004FAE                     __end_of___awmod:
 19231                           	opt stack 0
 19232                           tosu	equ	0xFFF
 19233                           tosh	equ	0xFFE
 19234                           tosl	equ	0xFFD
 19235                           pclath	equ	0xFFA
 19236                           tblptru	equ	0xFF8
 19237                           tblptrh	equ	0xFF7
 19238                           tblptrl	equ	0xFF6
 19239                           tablat	equ	0xFF5
 19240                           prodh	equ	0xFF4
 19241                           prodl	equ	0xFF3
 19242                           intcon	equ	0xFF2
 19243                           intcon2	equ	0xFF1
 19244                           intcon3	equ	0xFF0
 19245                           indf0	equ	0xFEF
 19246                           postinc0	equ	0xFEE
 19247                           plusw0	equ	0xFEB
 19248                           fsr0h	equ	0xFEA
 19249                           fsr0l	equ	0xFE9
 19250                           wreg	equ	0xFE8
 19251                           indf1	equ	0xFE7
 19252                           postinc1	equ	0xFE6
 19253                           postdec1	equ	0xFE5
 19254                           fsr1h	equ	0xFE2
 19255                           fsr1l	equ	0xFE1
 19256                           indf2	equ	0xFDF
 19257                           postinc2	equ	0xFDE
 19258                           postdec2	equ	0xFDD
 19259                           plusw2	equ	0xFDB
 19260                           fsr2h	equ	0xFDA
 19261                           fsr2l	equ	0xFD9
 19262                           status	equ	0xFD8
 19263                           
 19264 ;; *************** function ___awdiv *****************
 19265 ;; Defined at:
 19266 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19267 ;; Parameters:    Size  Location     Type
 19268 ;;  dividend        2   29[BANK0 ] int 
 19269 ;;  divisor         2   31[BANK0 ] int 
 19270 ;; Auto vars:     Size  Location     Type
 19271 ;;  quotient        2   35[BANK0 ] int 
 19272 ;;  sign            1   34[BANK0 ] unsigned char 
 19273 ;;  counter         1   33[BANK0 ] unsigned char 
 19274 ;; Return value:  Size  Location     Type
 19275 ;;                  2   29[BANK0 ] int 
 19276 ;; Registers used:
 19277 ;;		wreg, status,2, status,0
 19278 ;; Tracked objects:
 19279 ;;		On entry : 0/0
 19280 ;;		On exit  : 0/0
 19281 ;;		Unchanged: 0/0
 19282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19284 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19286 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19287 ;;Total ram usage:        8 bytes
 19288 ;; Hardware stack levels used:    1
 19289 ;; Hardware stack levels required when called:   11
 19290 ;; This function calls:
 19291 ;;		Nothing
 19292 ;; This function is called by:
 19293 ;;		_Rtcc_SetRtccValue
 19294 ;;		_Rtcc_SetRtccAlarm
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           	psect	text82
 19299  004D3C                     __ptext82:
 19300                           	opt stack 0
 19301  004D3C                     ___awdiv:
 19302                           	opt stack 14
 19303                           
 19304                           ; BSR set to: 0
 19305                           ;incstack = 0
 19306  004D3C  0E00               	movlw	0
 19307  004D3E  0100               	movlb	0	; () banked
 19308  004D40  6F82               	movwf	___awdiv@sign& (0+255),b
 19309                           
 19310                           ; BSR set to: 0
 19311  004D42  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19312  004D44  D006               	goto	l2875
 19313                           
 19314                           ; BSR set to: 0
 19315  004D46  6D7F               	negf	___awdiv@divisor& (0+255),b
 19316  004D48  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19317  004D4A  B0D8               	btfsc	status,0,c
 19318  004D4C  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19319                           
 19320                           ; BSR set to: 0
 19321  004D4E  0E01               	movlw	1
 19322  004D50  6F82               	movwf	___awdiv@sign& (0+255),b
 19323  004D52                     l2875:
 19324                           
 19325                           ; BSR set to: 0
 19326                           
 19327                           ; BSR set to: 0
 19328  004D52  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19329  004D54  D006               	goto	l2876
 19330                           
 19331                           ; BSR set to: 0
 19332  004D56  6D7D               	negf	___awdiv@dividend& (0+255),b
 19333  004D58  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19334  004D5A  B0D8               	btfsc	status,0,c
 19335  004D5C  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19336                           
 19337                           ; BSR set to: 0
 19338  004D5E  0E01               	movlw	1
 19339  004D60  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19340  004D62                     l2876:
 19341                           
 19342                           ; BSR set to: 0
 19343                           
 19344                           ; BSR set to: 0
 19345  004D62  0E00               	movlw	0
 19346  004D64  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19347  004D66  0E00               	movlw	0
 19348  004D68  6F83               	movwf	___awdiv@quotient& (0+255),b
 19349                           
 19350                           ; BSR set to: 0
 19351  004D6A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19352  004D6C  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19353  004D6E  B4D8               	btfsc	status,2,c
 19354  004D70  D01C               	goto	l2883
 19355                           
 19356                           ; BSR set to: 0
 19357  004D72  0E01               	movlw	1
 19358  004D74  6F81               	movwf	___awdiv@counter& (0+255),b
 19359  004D76  D004               	goto	l2878
 19360  004D78                     
 19361                           ; BSR set to: 0
 19362                           
 19363                           ; BSR set to: 0
 19364  004D78  90D8               	bcf	status,0,c
 19365  004D7A  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19366  004D7C  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19367  004D7E  2B81               	incf	___awdiv@counter& (0+255),f,b
 19368  004D80                     l2878:
 19369                           
 19370                           ; BSR set to: 0
 19371                           
 19372                           ; BSR set to: 0
 19373  004D80  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19374  004D82  D7FA               	goto	l2879
 19375  004D84                     u12380:
 19376                           
 19377                           ; BSR set to: 0
 19378                           
 19379                           ; BSR set to: 0
 19380                           
 19381                           ; BSR set to: 0
 19382  004D84  90D8               	bcf	status,0,c
 19383  004D86  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19384  004D88  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19385                           
 19386                           ; BSR set to: 0
 19387  004D8A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19388  004D8C  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19389  004D8E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19390  004D90  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19391  004D92  A0D8               	btfss	status,0,c
 19392  004D94  D005               	goto	l2882
 19393                           
 19394                           ; BSR set to: 0
 19395  004D96  517F               	movf	___awdiv@divisor& (0+255),w,b
 19396  004D98  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19397  004D9A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19398  004D9C  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19399                           
 19400                           ; BSR set to: 0
 19401  004D9E  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19402  004DA0                     l2882:
 19403                           
 19404                           ; BSR set to: 0
 19405                           
 19406                           ; BSR set to: 0
 19407  004DA0  90D8               	bcf	status,0,c
 19408  004DA2  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19409  004DA4  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19410                           
 19411                           ; BSR set to: 0
 19412  004DA6  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19413  004DA8  D7ED               	goto	u12380
 19414  004DAA                     l2883:
 19415                           
 19416                           ; BSR set to: 0
 19417                           
 19418                           ; BSR set to: 0
 19419                           
 19420                           ; BSR set to: 0
 19421  004DAA  5182               	movf	___awdiv@sign& (0+255),w,b
 19422  004DAC  B4D8               	btfsc	status,2,c
 19423  004DAE  D004               	goto	l2884
 19424                           
 19425                           ; BSR set to: 0
 19426  004DB0  6D83               	negf	___awdiv@quotient& (0+255),b
 19427  004DB2  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19428  004DB4  B0D8               	btfsc	status,0,c
 19429  004DB6  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19430  004DB8                     l2884:
 19431                           
 19432                           ; BSR set to: 0
 19433                           
 19434                           ; BSR set to: 0
 19435  004DB8  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19436  004DBC  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19437  004DC0  0012               	return	
 19438  004DC2                     __end_of___awdiv:
 19439                           	opt stack 0
 19440                           tosu	equ	0xFFF
 19441                           tosh	equ	0xFFE
 19442                           tosl	equ	0xFFD
 19443                           pclath	equ	0xFFA
 19444                           tblptru	equ	0xFF8
 19445                           tblptrh	equ	0xFF7
 19446                           tblptrl	equ	0xFF6
 19447                           tablat	equ	0xFF5
 19448                           prodh	equ	0xFF4
 19449                           prodl	equ	0xFF3
 19450                           intcon	equ	0xFF2
 19451                           intcon2	equ	0xFF1
 19452                           intcon3	equ	0xFF0
 19453                           indf0	equ	0xFEF
 19454                           postinc0	equ	0xFEE
 19455                           plusw0	equ	0xFEB
 19456                           fsr0h	equ	0xFEA
 19457                           fsr0l	equ	0xFE9
 19458                           wreg	equ	0xFE8
 19459                           indf1	equ	0xFE7
 19460                           postinc1	equ	0xFE6
 19461                           postdec1	equ	0xFE5
 19462                           fsr1h	equ	0xFE2
 19463                           fsr1l	equ	0xFE1
 19464                           indf2	equ	0xFDF
 19465                           postinc2	equ	0xFDE
 19466                           postdec2	equ	0xFDD
 19467                           plusw2	equ	0xFDB
 19468                           fsr2h	equ	0xFDA
 19469                           fsr2l	equ	0xFD9
 19470                           status	equ	0xFD8
 19471                           
 19472 ;; *************** function _Rtcc_LockRtc *****************
 19473 ;; Defined at:
 19474 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19475 ;; Parameters:    Size  Location     Type
 19476 ;;		None
 19477 ;; Auto vars:     Size  Location     Type
 19478 ;;		None
 19479 ;; Return value:  Size  Location     Type
 19480 ;;                  1    wreg      void 
 19481 ;; Registers used:
 19482 ;;		None
 19483 ;; Tracked objects:
 19484 ;;		On entry : 0/0
 19485 ;;		On exit  : 0/0
 19486 ;;		Unchanged: 0/0
 19487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19492 ;;Total ram usage:        0 bytes
 19493 ;; Hardware stack levels used:    1
 19494 ;; Hardware stack levels required when called:   11
 19495 ;; This function calls:
 19496 ;;		Nothing
 19497 ;; This function is called by:
 19498 ;;		_Rtcm_MainTask
 19499 ;;		_Rtcm_SetRtccDate
 19500 ;;		_Rtcm_SetRtccAlarm
 19501 ;; This function uses a non-reentrant model
 19502 ;;
 19503                           
 19504                           	psect	text83
 19505  006386                     __ptext83:
 19506                           	opt stack 0
 19507  006386                     _Rtcc_LockRtc:
 19508                           	opt stack 15
 19509                           
 19510                           ; BSR set to: 0
 19511                           ;incstack = 0
 19512  006386  010F               	movlb	15	;# 
 19513  006388  0E55               	movlw	85	;# 
 19514  00638A  6EA7               	movwf	4007,c	;# 
 19515  00638C  0EAA               	movlw	170	;# 
 19516  00638E  6EA7               	movwf	4007,c	;# 
 19517                           
 19518                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19519  006390  010F               	movlb	15	; () banked
 19520  006392  9B3F               	bcf	63,5,b	;volatile
 19521                           
 19522                           ; BSR set to: 15
 19523  006394  0012               	return		;funcret
 19524  006396                     __end_of_Rtcc_LockRtc:
 19525                           	opt stack 0
 19526                           tosu	equ	0xFFF
 19527                           tosh	equ	0xFFE
 19528                           tosl	equ	0xFFD
 19529                           pclath	equ	0xFFA
 19530                           tblptru	equ	0xFF8
 19531                           tblptrh	equ	0xFF7
 19532                           tblptrl	equ	0xFF6
 19533                           tablat	equ	0xFF5
 19534                           prodh	equ	0xFF4
 19535                           prodl	equ	0xFF3
 19536                           intcon	equ	0xFF2
 19537                           intcon2	equ	0xFF1
 19538                           intcon3	equ	0xFF0
 19539                           indf0	equ	0xFEF
 19540                           postinc0	equ	0xFEE
 19541                           plusw0	equ	0xFEB
 19542                           fsr0h	equ	0xFEA
 19543                           fsr0l	equ	0xFE9
 19544                           wreg	equ	0xFE8
 19545                           indf1	equ	0xFE7
 19546                           postinc1	equ	0xFE6
 19547                           postdec1	equ	0xFE5
 19548                           fsr1h	equ	0xFE2
 19549                           fsr1l	equ	0xFE1
 19550                           indf2	equ	0xFDF
 19551                           postinc2	equ	0xFDE
 19552                           postdec2	equ	0xFDD
 19553                           plusw2	equ	0xFDB
 19554                           fsr2h	equ	0xFDA
 19555                           fsr2l	equ	0xFD9
 19556                           status	equ	0xFD8
 19557                           
 19558 ;; *************** function _Rtcm_GetRtccDate *****************
 19559 ;; Defined at:
 19560 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19561 ;; Parameters:    Size  Location     Type
 19562 ;;		None
 19563 ;; Auto vars:     Size  Location     Type
 19564 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19565 ;; Return value:  Size  Location     Type
 19566 ;;                  8   33[BANK0 ] struct _RtccDateType
 19567 ;; Registers used:
 19568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19569 ;; Tracked objects:
 19570 ;;		On entry : 0/0
 19571 ;;		On exit  : 0/0
 19572 ;;		Unchanged: 0/0
 19573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19574 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19575 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19577 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19578 ;;Total ram usage:       17 bytes
 19579 ;; Hardware stack levels used:    1
 19580 ;; Hardware stack levels required when called:   12
 19581 ;; This function calls:
 19582 ;;		_Rtcc_GetRtccValue
 19583 ;; This function is called by:
 19584 ;;		_Rtcm_MainTask
 19585 ;; This function uses a non-reentrant model
 19586 ;;
 19587                           
 19588                           	psect	text84
 19589  00515E                     __ptext84:
 19590                           	opt stack 0
 19591  00515E                     _Rtcm_GetRtccDate:
 19592                           	opt stack 15
 19593                           
 19594                           ;rtcm.c: 204: RtccDateType LocalDate;
 19595                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19596                           
 19597                           ; BSR set to: 15
 19598                           ;incstack = 0
 19599  00515E  0E00               	movlw	0
 19600  005160  EC37  F025         	call	_Rtcc_GetRtccValue
 19601  005164  0100               	movlb	0	; () banked
 19602  005166  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19603  005168  0ED0               	movlw	208
 19604  00516A  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19605  00516C  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19606  00516E  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19607  005170  0E07               	movlw	7
 19608  005172  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19609                           
 19610                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19611  005174  0E01               	movlw	1
 19612  005176  EC37  F025         	call	_Rtcc_GetRtccValue
 19613  00517A  0100               	movlb	0	; () banked
 19614  00517C  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19615                           
 19616                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19617  00517E  0E02               	movlw	2
 19618  005180  EC37  F025         	call	_Rtcc_GetRtccValue
 19619  005184  0100               	movlb	0	; () banked
 19620  005186  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19621                           
 19622                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19623  005188  0E03               	movlw	3
 19624  00518A  EC37  F025         	call	_Rtcc_GetRtccValue
 19625  00518E  0100               	movlb	0	; () banked
 19626  005190  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19627                           
 19628                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19629  005192  0E04               	movlw	4
 19630  005194  EC37  F025         	call	_Rtcc_GetRtccValue
 19631  005198  0100               	movlb	0	; () banked
 19632  00519A  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19633                           
 19634                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19635  00519C  0E05               	movlw	5
 19636  00519E  EC37  F025         	call	_Rtcc_GetRtccValue
 19637  0051A2  0100               	movlb	0	; () banked
 19638  0051A4  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19639                           
 19640                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19641  0051A6  0E06               	movlw	6
 19642  0051A8  EC37  F025         	call	_Rtcc_GetRtccValue
 19643  0051AC  0100               	movlb	0	; () banked
 19644  0051AE  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19645                           
 19646                           ; BSR set to: 0
 19647                           ;rtcm.c: 216: return LocalDate;
 19648  0051B0  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19649  0051B4  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19650  0051B8  0E07               	movlw	7
 19651  0051BA                     u14701:
 19652  0051BA  CFDB FFEB          	movff	plusw2,plusw0
 19653  0051BE  06E8               	decf	wreg,f,c
 19654  0051C0  E2FC               	bc	u14701
 19655  0051C2  0012               	return	
 19656  0051C4                     __end_of_Rtcm_GetRtccDate:
 19657                           	opt stack 0
 19658                           tosu	equ	0xFFF
 19659                           tosh	equ	0xFFE
 19660                           tosl	equ	0xFFD
 19661                           pclath	equ	0xFFA
 19662                           tblptru	equ	0xFF8
 19663                           tblptrh	equ	0xFF7
 19664                           tblptrl	equ	0xFF6
 19665                           tablat	equ	0xFF5
 19666                           prodh	equ	0xFF4
 19667                           prodl	equ	0xFF3
 19668                           intcon	equ	0xFF2
 19669                           intcon2	equ	0xFF1
 19670                           intcon3	equ	0xFF0
 19671                           indf0	equ	0xFEF
 19672                           postinc0	equ	0xFEE
 19673                           plusw0	equ	0xFEB
 19674                           fsr0h	equ	0xFEA
 19675                           fsr0l	equ	0xFE9
 19676                           wreg	equ	0xFE8
 19677                           indf1	equ	0xFE7
 19678                           postinc1	equ	0xFE6
 19679                           postdec1	equ	0xFE5
 19680                           fsr1h	equ	0xFE2
 19681                           fsr1l	equ	0xFE1
 19682                           indf2	equ	0xFDF
 19683                           postinc2	equ	0xFDE
 19684                           postdec2	equ	0xFDD
 19685                           plusw2	equ	0xFDB
 19686                           fsr2h	equ	0xFDA
 19687                           fsr2l	equ	0xFD9
 19688                           status	equ	0xFD8
 19689                           
 19690 ;; *************** function _Rtcc_GetRtccValue *****************
 19691 ;; Defined at:
 19692 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19693 ;; Parameters:    Size  Location     Type
 19694 ;;  RtccPtrVal      1    wreg     enum E7757
 19695 ;; Auto vars:     Size  Location     Type
 19696 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19697 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19698 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  1    wreg      unsigned char 
 19701 ;; Registers used:
 19702 ;;		wreg, status,2, status,0, prodl, prodh
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19709 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19711 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19712 ;;Total ram usage:        4 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:   11
 19715 ;; This function calls:
 19716 ;;		Nothing
 19717 ;; This function is called by:
 19718 ;;		_Rtcm_GetRtccDate
 19719 ;; This function uses a non-reentrant model
 19720 ;;
 19721                           
 19722                           	psect	text85
 19723  004A6E                     __ptext85:
 19724                           	opt stack 0
 19725  004A6E                     _Rtcc_GetRtccValue:
 19726                           	opt stack 15
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;incstack = 0
 19730                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19731  004A6E  0100               	movlb	0	; () banked
 19732  004A70  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19733                           
 19734                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19735                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19736                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19737  004A72  D02D               	goto	l416
 19738  004A74                     l417:
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19742  004A74  010F               	movlb	15	; () banked
 19743  004A76  833F               	bsf	63,1,b	;volatile
 19744  004A78                     
 19745                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19746  004A78  813F               	bsf	63,0,b	;volatile
 19747  004A7A  D01C               	goto	L18
 19748  004A7C                     l419:
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19752  004A7C  010F               	movlb	15	; () banked
 19753  004A7E  833F               	bsf	63,1,b	;volatile
 19754  004A80  D01E               	goto	L19
 19755  004A82                     l420:
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19759  004A82  010F               	movlb	15	; () banked
 19760  004A84  833F               	bsf	63,1,b	;volatile
 19761  004A86  D021               	goto	L22
 19762  004A88                     l13477:
 19763                           
 19764                           ; BSR set to: 15
 19765                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19766  004A88  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19767  004A8C  0E0F               	movlw	15
 19768  004A8E  0100               	movlb	0	; () banked
 19769  004A90  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19770  004A92  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19771  004A94  0B0F               	andlw	15
 19772  004A96  0B0F               	andlw	15
 19773  004A98  0D0A               	mullw	10
 19774  004A9A  50F3               	movf	prodl,w,c
 19775  004A9C  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19776  004A9E  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19777                           
 19778                           ;rtcc_drv.c: 241: break;
 19779  004AA0  D02D               	goto	l418
 19780  004AA2                     l421:
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19784  004AA2  010F               	movlb	15	; () banked
 19785  004AA4  933F               	bcf	63,1,b	;volatile
 19786                           
 19787                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19788  004AA6  813F               	bsf	63,0,b	;volatile
 19789                           
 19790                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19791  004AA8  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19792                           
 19793                           ;rtcc_drv.c: 249: break;
 19794  004AAC  D027               	goto	l418
 19795  004AAE                     l422:
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19799  004AAE  010F               	movlb	15	; () banked
 19800  004AB0  933F               	bcf	63,1,b	;volatile
 19801  004AB2  D7E2               	goto	L20
 19802  004AB4                     L18:
 19803                           
 19804                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19805  004AB4  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19806  004AB8  D7E7               	goto	l13477
 19807  004ABA                     l423:
 19808                           
 19809                           ; BSR set to: 0
 19810                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19811  004ABA  010F               	movlb	15	; () banked
 19812  004ABC  933F               	bcf	63,1,b	;volatile
 19813  004ABE                     L19:
 19814                           
 19815                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19816  004ABE  913F               	bcf	63,0,b	;volatile
 19817                           
 19818                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19819  004AC0  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19820  004AC4  D7E1               	goto	l13477
 19821  004AC6                     l424:
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19825  004AC6  010F               	movlb	15	; () banked
 19826  004AC8  933F               	bcf	63,1,b	;volatile
 19827  004ACA                     L22:
 19828                           
 19829                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19830  004ACA  913F               	bcf	63,0,b	;volatile
 19831  004ACC  D7F3               	goto	L18
 19832  004ACE                     l416:
 19833                           
 19834                           ; BSR set to: 0
 19835  004ACE  0100               	movlb	0	; () banked
 19836  004AD0  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19837                           
 19838                           ; Switch size 1, requested type "space"
 19839                           ; Number of cases is 7, Range of values is 0 to 6
 19840                           ; switch strategies available:
 19841                           ; Name         Instructions Cycles
 19842                           ; simple_byte           22    12 (average)
 19843                           ;	Chosen strategy is simple_byte
 19844  004AD2  0A00               	xorlw	0	; case 0
 19845  004AD4  B4D8               	btfsc	status,2,c
 19846  004AD6  D7CE               	goto	l417
 19847  004AD8  0A01               	xorlw	1	; case 1
 19848  004ADA  B4D8               	btfsc	status,2,c
 19849  004ADC  D7CF               	goto	l419
 19850  004ADE  0A03               	xorlw	3	; case 2
 19851  004AE0  B4D8               	btfsc	status,2,c
 19852  004AE2  D7CF               	goto	l420
 19853  004AE4  0A01               	xorlw	1	; case 3
 19854  004AE6  B4D8               	btfsc	status,2,c
 19855  004AE8  D7DC               	goto	l421
 19856  004AEA  0A07               	xorlw	7	; case 4
 19857  004AEC  B4D8               	btfsc	status,2,c
 19858  004AEE  D7DF               	goto	l422
 19859  004AF0  0A01               	xorlw	1	; case 5
 19860  004AF2  B4D8               	btfsc	status,2,c
 19861  004AF4  D7E2               	goto	l423
 19862  004AF6  0A03               	xorlw	3	; case 6
 19863  004AF8  B4D8               	btfsc	status,2,c
 19864  004AFA  D7E5               	goto	l424
 19865  004AFC                     l418:
 19866                           
 19867                           ;rtcc_drv.c: 286: return RetValue;
 19868                           
 19869                           ; BSR set to: 0
 19870  004AFC  0100               	movlb	0	; () banked
 19871  004AFE  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19872  004B00  0012               	return	
 19873  004B02                     __end_of_Rtcc_GetRtccValue:
 19874                           	opt stack 0
 19875                           tosu	equ	0xFFF
 19876                           tosh	equ	0xFFE
 19877                           tosl	equ	0xFFD
 19878                           pclath	equ	0xFFA
 19879                           tblptru	equ	0xFF8
 19880                           tblptrh	equ	0xFF7
 19881                           tblptrl	equ	0xFF6
 19882                           tablat	equ	0xFF5
 19883                           prodh	equ	0xFF4
 19884                           prodl	equ	0xFF3
 19885                           intcon	equ	0xFF2
 19886                           intcon2	equ	0xFF1
 19887                           intcon3	equ	0xFF0
 19888                           indf0	equ	0xFEF
 19889                           postinc0	equ	0xFEE
 19890                           plusw0	equ	0xFEB
 19891                           fsr0h	equ	0xFEA
 19892                           fsr0l	equ	0xFE9
 19893                           wreg	equ	0xFE8
 19894                           indf1	equ	0xFE7
 19895                           postinc1	equ	0xFE6
 19896                           postdec1	equ	0xFE5
 19897                           fsr1h	equ	0xFE2
 19898                           fsr1l	equ	0xFE1
 19899                           indf2	equ	0xFDF
 19900                           postinc2	equ	0xFDE
 19901                           postdec2	equ	0xFDD
 19902                           plusw2	equ	0xFDB
 19903                           fsr2h	equ	0xFDA
 19904                           fsr2l	equ	0xFD9
 19905                           status	equ	0xFD8
 19906                           
 19907 ;; *************** function _Rtcc_SetRtcStatus *****************
 19908 ;; Defined at:
 19909 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19910 ;; Parameters:    Size  Location     Type
 19911 ;;  Status          1    wreg     unsigned char 
 19912 ;; Auto vars:     Size  Location     Type
 19913 ;;  Status          1   29[BANK0 ] unsigned char 
 19914 ;; Return value:  Size  Location     Type
 19915 ;;                  1    wreg      void 
 19916 ;; Registers used:
 19917 ;;		wreg
 19918 ;; Tracked objects:
 19919 ;;		On entry : 0/0
 19920 ;;		On exit  : 0/0
 19921 ;;		Unchanged: 0/0
 19922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19924 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19926 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19927 ;;Total ram usage:        1 bytes
 19928 ;; Hardware stack levels used:    1
 19929 ;; Hardware stack levels required when called:   11
 19930 ;; This function calls:
 19931 ;;		Nothing
 19932 ;; This function is called by:
 19933 ;;		_Rtcm_MainTask
 19934 ;; This function uses a non-reentrant model
 19935 ;;
 19936                           
 19937                           	psect	text86
 19938  0062D4                     __ptext86:
 19939                           	opt stack 0
 19940  0062D4                     _Rtcc_SetRtcStatus:
 19941                           	opt stack 16
 19942                           
 19943                           ; BSR set to: 0
 19944                           ;incstack = 0
 19945                           ;Rtcc_SetRtcStatus@Status stored from wreg
 19946  0062D4  0100               	movlb	0	; () banked
 19947  0062D6  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 19948                           
 19949                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 19950  0062D8  0100               	movlb	0	; () banked
 19951  0062DA  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 19952  0062DC  D003               	bra	u13615
 19953  0062DE  010F               	movlb	15	; () banked
 19954  0062E0  9F3F               	bcf	63,7,b	;volatile
 19955  0062E2  D002               	bra	u13616
 19956  0062E4                     u13615:
 19957  0062E4  010F               	movlb	15	; () banked
 19958  0062E6  8F3F               	bsf	63,7,b	;volatile
 19959  0062E8                     u13616:
 19960                           
 19961                           ; BSR set to: 15
 19962  0062E8  0012               	return		;funcret
 19963  0062EA                     __end_of_Rtcc_SetRtcStatus:
 19964                           	opt stack 0
 19965                           tosu	equ	0xFFF
 19966                           tosh	equ	0xFFE
 19967                           tosl	equ	0xFFD
 19968                           pclath	equ	0xFFA
 19969                           tblptru	equ	0xFF8
 19970                           tblptrh	equ	0xFF7
 19971                           tblptrl	equ	0xFF6
 19972                           tablat	equ	0xFF5
 19973                           prodh	equ	0xFF4
 19974                           prodl	equ	0xFF3
 19975                           intcon	equ	0xFF2
 19976                           intcon2	equ	0xFF1
 19977                           intcon3	equ	0xFF0
 19978                           indf0	equ	0xFEF
 19979                           postinc0	equ	0xFEE
 19980                           plusw0	equ	0xFEB
 19981                           fsr0h	equ	0xFEA
 19982                           fsr0l	equ	0xFE9
 19983                           wreg	equ	0xFE8
 19984                           indf1	equ	0xFE7
 19985                           postinc1	equ	0xFE6
 19986                           postdec1	equ	0xFE5
 19987                           fsr1h	equ	0xFE2
 19988                           fsr1l	equ	0xFE1
 19989                           indf2	equ	0xFDF
 19990                           postinc2	equ	0xFDE
 19991                           postdec2	equ	0xFDD
 19992                           plusw2	equ	0xFDB
 19993                           fsr2h	equ	0xFDA
 19994                           fsr2l	equ	0xFD9
 19995                           status	equ	0xFD8
 19996                           
 19997 ;; *************** function _Rtcc_RtcConfig *****************
 19998 ;; Defined at:
 19999 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20000 ;; Parameters:    Size  Location     Type
 20001 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20002 ;;		 -> RtcConfig(4), 
 20003 ;; Auto vars:     Size  Location     Type
 20004 ;;		None
 20005 ;; Return value:  Size  Location     Type
 20006 ;;                  1    wreg      void 
 20007 ;; Registers used:
 20008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20009 ;; Tracked objects:
 20010 ;;		On entry : 0/0
 20011 ;;		On exit  : 0/0
 20012 ;;		Unchanged: 0/0
 20013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20017 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20018 ;;Total ram usage:        3 bytes
 20019 ;; Hardware stack levels used:    1
 20020 ;; Hardware stack levels required when called:   12
 20021 ;; This function calls:
 20022 ;;		_RtccIrqInit
 20023 ;; This function is called by:
 20024 ;;		_Rtcm_MainTask
 20025 ;; This function uses a non-reentrant model
 20026 ;;
 20027                           
 20028                           	psect	text87
 20029  0046D8                     __ptext87:
 20030                           	opt stack 0
 20031  0046D8                     _Rtcc_RtcConfig:
 20032                           	opt stack 15
 20033                           
 20034                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20035                           
 20036                           ; BSR set to: 15
 20037                           ;incstack = 0
 20038  0046D8  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20039  0046DC  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20040  0046E0  50DF               	movf	indf2,w,c
 20041  0046E2  0100               	movlb	0	; () banked
 20042  0046E4  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20043  0046E6  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20044  0046E8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20045  0046EA  010F               	movlb	15	; () banked
 20046  0046EC  513F               	movf	63,w,b	;volatile
 20047  0046EE  0100               	movlb	0	; () banked
 20048  0046F0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20049  0046F2  0BFB               	andlw	-5
 20050  0046F4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20051  0046F6  010F               	movlb	15	; () banked
 20052  0046F8  6F3F               	movwf	63,b	;volatile
 20053                           
 20054                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20055  0046FA  0100               	movlb	0	; () banked
 20056  0046FC  EE20 F001          	lfsr	2,1
 20057  004700  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20058  004702  26D9               	addwf	fsr2l,f,c
 20059  004704  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20060  004706  22DA               	addwfc	fsr2h,f,c
 20061  004708  50DF               	movf	indf2,w,c
 20062  00470A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20063  00470C  0E01               	movlw	1
 20064  00470E  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20065  004710  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20066  004712  010F               	movlb	15	; () banked
 20067  004714  513C               	movf	60,w,b	;volatile
 20068  004716  0100               	movlb	0	; () banked
 20069  004718  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20070  00471A  0BFD               	andlw	-3
 20071  00471C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20072  00471E  010F               	movlb	15	; () banked
 20073  004720  6F3C               	movwf	60,b	;volatile
 20074                           
 20075                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20076  004722  0100               	movlb	0	; () banked
 20077  004724  EE20 F001          	lfsr	2,1
 20078  004728  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20079  00472A  26D9               	addwf	fsr2l,f,c
 20080  00472C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20081  00472E  22DA               	addwfc	fsr2h,f,c
 20082  004730  50DF               	movf	indf2,w,c
 20083  004732  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20084  004734  90D8               	bcf	status,0,c
 20085  004736  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20086  004738  0E01               	movlw	1
 20087  00473A  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20088  00473C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20089  00473E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20090  004740  010F               	movlb	15	; () banked
 20091  004742  513C               	movf	60,w,b	;volatile
 20092  004744  0100               	movlb	0	; () banked
 20093  004746  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20094  004748  0BFB               	andlw	-5
 20095  00474A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20096  00474C  010F               	movlb	15	; () banked
 20097  00474E  6F3C               	movwf	60,b	;volatile
 20098                           
 20099                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20100  004750  0100               	movlb	0	; () banked
 20101  004752  EE20 F002          	lfsr	2,2
 20102  004756  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20103  004758  26D9               	addwf	fsr2l,f,c
 20104  00475A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20105  00475C  22DA               	addwfc	fsr2h,f,c
 20106  00475E  04DE               	decf	postinc2,w,c
 20107  004760  A4D8               	btfss	status,2,c
 20108  004762  0012               	return	
 20109                           
 20110                           ; BSR set to: 0
 20111                           ;rtcc_drv.c: 115: {
 20112                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20113  004764  EE20 F003          	lfsr	2,3
 20114  004768  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20115  00476A  26D9               	addwf	fsr2l,f,c
 20116  00476C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20117  00476E  22DA               	addwfc	fsr2h,f,c
 20118  004770  50DF               	movf	indf2,w,c
 20119  004772  EC75  F031         	call	_RtccIrqInit
 20120  004776  0012               	return	
 20121  004778                     __end_of_Rtcc_RtcConfig:
 20122                           	opt stack 0
 20123                           tosu	equ	0xFFF
 20124                           tosh	equ	0xFFE
 20125                           tosl	equ	0xFFD
 20126                           pclath	equ	0xFFA
 20127                           tblptru	equ	0xFF8
 20128                           tblptrh	equ	0xFF7
 20129                           tblptrl	equ	0xFF6
 20130                           tablat	equ	0xFF5
 20131                           prodh	equ	0xFF4
 20132                           prodl	equ	0xFF3
 20133                           intcon	equ	0xFF2
 20134                           intcon2	equ	0xFF1
 20135                           intcon3	equ	0xFF0
 20136                           indf0	equ	0xFEF
 20137                           postinc0	equ	0xFEE
 20138                           plusw0	equ	0xFEB
 20139                           fsr0h	equ	0xFEA
 20140                           fsr0l	equ	0xFE9
 20141                           wreg	equ	0xFE8
 20142                           indf1	equ	0xFE7
 20143                           postinc1	equ	0xFE6
 20144                           postdec1	equ	0xFE5
 20145                           fsr1h	equ	0xFE2
 20146                           fsr1l	equ	0xFE1
 20147                           indf2	equ	0xFDF
 20148                           postinc2	equ	0xFDE
 20149                           postdec2	equ	0xFDD
 20150                           plusw2	equ	0xFDB
 20151                           fsr2h	equ	0xFDA
 20152                           fsr2l	equ	0xFD9
 20153                           status	equ	0xFD8
 20154                           
 20155 ;; *************** function _RtccIrqInit *****************
 20156 ;; Defined at:
 20157 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20158 ;; Parameters:    Size  Location     Type
 20159 ;;  Priority        1    wreg     enum E7716
 20160 ;; Auto vars:     Size  Location     Type
 20161 ;;  Priority        1   29[BANK0 ] enum E7716
 20162 ;; Return value:  Size  Location     Type
 20163 ;;                  1    wreg      void 
 20164 ;; Registers used:
 20165 ;;		wreg
 20166 ;; Tracked objects:
 20167 ;;		On entry : 0/0
 20168 ;;		On exit  : 0/0
 20169 ;;		Unchanged: 0/0
 20170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20174 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20175 ;;Total ram usage:        1 bytes
 20176 ;; Hardware stack levels used:    1
 20177 ;; Hardware stack levels required when called:   11
 20178 ;; This function calls:
 20179 ;;		Nothing
 20180 ;; This function is called by:
 20181 ;;		_Rtcc_RtcConfig
 20182 ;; This function uses a non-reentrant model
 20183 ;;
 20184                           
 20185                           	psect	text88
 20186  0062EA                     __ptext88:
 20187                           	opt stack 0
 20188  0062EA                     _RtccIrqInit:
 20189                           	opt stack 15
 20190                           
 20191                           ;incstack = 0
 20192                           ;RtccIrqInit@Priority stored from wreg
 20193  0062EA  0100               	movlb	0	; () banked
 20194  0062EC  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20195                           
 20196                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20197  0062EE  90A4               	bcf	4004,0,c	;volatile
 20198                           
 20199                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20200  0062F0  0100               	movlb	0	; () banked
 20201  0062F2  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20202  0062F4  D002               	bra	u12595
 20203  0062F6  90A5               	bcf	4005,0,c	;volatile
 20204  0062F8  D001               	bra	u12596
 20205  0062FA                     u12595:
 20206  0062FA  80A5               	bsf	4005,0,c	;volatile
 20207  0062FC                     u12596:
 20208                           
 20209                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20210  0062FC  80A3               	bsf	4003,0,c	;volatile
 20211  0062FE  0012               	return		;funcret
 20212  006300                     __end_of_RtccIrqInit:
 20213                           	opt stack 0
 20214                           tosu	equ	0xFFF
 20215                           tosh	equ	0xFFE
 20216                           tosl	equ	0xFFD
 20217                           pclath	equ	0xFFA
 20218                           tblptru	equ	0xFF8
 20219                           tblptrh	equ	0xFF7
 20220                           tblptrl	equ	0xFF6
 20221                           tablat	equ	0xFF5
 20222                           prodh	equ	0xFF4
 20223                           prodl	equ	0xFF3
 20224                           intcon	equ	0xFF2
 20225                           intcon2	equ	0xFF1
 20226                           intcon3	equ	0xFF0
 20227                           indf0	equ	0xFEF
 20228                           postinc0	equ	0xFEE
 20229                           plusw0	equ	0xFEB
 20230                           fsr0h	equ	0xFEA
 20231                           fsr0l	equ	0xFE9
 20232                           wreg	equ	0xFE8
 20233                           indf1	equ	0xFE7
 20234                           postinc1	equ	0xFE6
 20235                           postdec1	equ	0xFE5
 20236                           fsr1h	equ	0xFE2
 20237                           fsr1l	equ	0xFE1
 20238                           indf2	equ	0xFDF
 20239                           postinc2	equ	0xFDE
 20240                           postdec2	equ	0xFDD
 20241                           plusw2	equ	0xFDB
 20242                           fsr2h	equ	0xFDA
 20243                           fsr2l	equ	0xFD9
 20244                           status	equ	0xFD8
 20245                           
 20246 ;; *************** function _Rtcc_AlarmConfig *****************
 20247 ;; Defined at:
 20248 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20249 ;; Parameters:    Size  Location     Type
 20250 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20251 ;;		 -> AlCfg(4), 
 20252 ;; Auto vars:     Size  Location     Type
 20253 ;;		None
 20254 ;; Return value:  Size  Location     Type
 20255 ;;                  1    wreg      void 
 20256 ;; Registers used:
 20257 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20258 ;; Tracked objects:
 20259 ;;		On entry : 0/0
 20260 ;;		On exit  : 0/0
 20261 ;;		Unchanged: 0/0
 20262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20266 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20267 ;;Total ram usage:        3 bytes
 20268 ;; Hardware stack levels used:    1
 20269 ;; Hardware stack levels required when called:   11
 20270 ;; This function calls:
 20271 ;;		Nothing
 20272 ;; This function is called by:
 20273 ;;		_Rtcm_MainTask
 20274 ;; This function uses a non-reentrant model
 20275 ;;
 20276                           
 20277                           	psect	text89
 20278  00508C                     __ptext89:
 20279                           	opt stack 0
 20280  00508C                     _Rtcc_AlarmConfig:
 20281                           	opt stack 16
 20282                           
 20283                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20284                           
 20285                           ;incstack = 0
 20286  00508C  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20287  005090  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20288  005094  50DF               	movf	indf2,w,c
 20289  005096  0100               	movlb	0	; () banked
 20290  005098  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20291  00509A  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20292  00509C  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20293  00509E  5091               	movf	3985,w,c	;volatile
 20294  0050A0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20295  0050A2  0B7F               	andlw	-129
 20296  0050A4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20297  0050A6  6E91               	movwf	3985,c	;volatile
 20298                           
 20299                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20300  0050A8  EE20 F001          	lfsr	2,1
 20301  0050AC  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20302  0050AE  26D9               	addwf	fsr2l,f,c
 20303  0050B0  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20304  0050B2  22DA               	addwfc	fsr2h,f,c
 20305  0050B4  50DF               	movf	indf2,w,c
 20306  0050B6  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20307  0050B8  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20308  0050BA  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20309  0050BC  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20310  0050BE  5091               	movf	3985,w,c	;volatile
 20311  0050C0  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20312  0050C2  0BBF               	andlw	-65
 20313  0050C4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20314  0050C6  6E91               	movwf	3985,c	;volatile
 20315                           
 20316                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20317  0050C8  EE20 F002          	lfsr	2,2
 20318  0050CC  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20319  0050CE  26D9               	addwf	fsr2l,f,c
 20320  0050D0  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20321  0050D2  22DA               	addwfc	fsr2h,f,c
 20322  0050D4  50DF               	movf	indf2,w,c
 20323  0050D6  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20324  0050D8  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20325  0050DA  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20326  0050DC  5091               	movf	3985,w,c	;volatile
 20327  0050DE  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20328  0050E0  0BC3               	andlw	-61
 20329  0050E2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20330  0050E4  6E91               	movwf	3985,c	;volatile
 20331                           
 20332                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20333  0050E6  EE20 F003          	lfsr	2,3
 20334  0050EA  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20335  0050EC  26D9               	addwf	fsr2l,f,c
 20336  0050EE  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20337  0050F0  22DA               	addwfc	fsr2h,f,c
 20338  0050F2  50DF               	movf	indf2,w,c
 20339  0050F4  6E90               	movwf	3984,c	;volatile
 20340                           
 20341                           ; BSR set to: 0
 20342  0050F6  0012               	return		;funcret
 20343  0050F8                     __end_of_Rtcc_AlarmConfig:
 20344                           	opt stack 0
 20345                           tosu	equ	0xFFF
 20346                           tosh	equ	0xFFE
 20347                           tosl	equ	0xFFD
 20348                           pclath	equ	0xFFA
 20349                           tblptru	equ	0xFF8
 20350                           tblptrh	equ	0xFF7
 20351                           tblptrl	equ	0xFF6
 20352                           tablat	equ	0xFF5
 20353                           prodh	equ	0xFF4
 20354                           prodl	equ	0xFF3
 20355                           intcon	equ	0xFF2
 20356                           intcon2	equ	0xFF1
 20357                           intcon3	equ	0xFF0
 20358                           indf0	equ	0xFEF
 20359                           postinc0	equ	0xFEE
 20360                           plusw0	equ	0xFEB
 20361                           fsr0h	equ	0xFEA
 20362                           fsr0l	equ	0xFE9
 20363                           wreg	equ	0xFE8
 20364                           indf1	equ	0xFE7
 20365                           postinc1	equ	0xFE6
 20366                           postdec1	equ	0xFE5
 20367                           fsr1h	equ	0xFE2
 20368                           fsr1l	equ	0xFE1
 20369                           indf2	equ	0xFDF
 20370                           postinc2	equ	0xFDE
 20371                           postdec2	equ	0xFDD
 20372                           plusw2	equ	0xFDB
 20373                           fsr2h	equ	0xFDA
 20374                           fsr2l	equ	0xFD9
 20375                           status	equ	0xFD8
 20376                           
 20377 ;; *************** function _initFsm *****************
 20378 ;; Defined at:
 20379 ;;		line 203 in file "../Source/c/04_App/app_init.c"
 20380 ;; Parameters:    Size  Location     Type
 20381 ;;		None
 20382 ;; Auto vars:     Size  Location     Type
 20383 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20384 ;; Return value:  Size  Location     Type
 20385 ;;                  1    wreg      unsigned char 
 20386 ;; Registers used:
 20387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20388 ;; Tracked objects:
 20389 ;;		On entry : 0/0
 20390 ;;		On exit  : 0/0
 20391 ;;		Unchanged: 0/0
 20392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20394 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20396 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20397 ;;Total ram usage:        1 bytes
 20398 ;; Hardware stack levels used:    1
 20399 ;; Hardware stack levels required when called:   18
 20400 ;; This function calls:
 20401 ;;		_initEeprom
 20402 ;;		_initGprsModem
 20403 ;; This function is called by:
 20404 ;;		_MyApp_Task
 20405 ;; This function uses a non-reentrant model
 20406 ;;
 20407                           
 20408                           	psect	text90
 20409  0058B4                     __ptext90:
 20410                           	opt stack 0
 20411  0058B4                     _initFsm:
 20412                           	opt stack 9
 20413                           
 20414                           ;app_init.c: 205: static initFsmStates currentState = INIT_FSM_MODEM;
 20415                           ;app_init.c: 206: bool isInitialized = 0;
 20416                           
 20417                           ; BSR set to: 0
 20418                           ;incstack = 0
 20419  0058B4  0E00               	movlw	0
 20420  0058B6  0101               	movlb	1	; () banked
 20421  0058B8  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20422                           
 20423                           ;app_init.c: 208: switch (currentState)
 20424  0058BA  D013               	goto	l2663
 20425  0058BC                     
 20426                           ; BSR set to: 1
 20427                           ;app_init.c: 211: if (initGprsModem())
 20428                           
 20429                           ; BSR set to: 1
 20430  0058BC  EC81  F025         	call	_initGprsModem	;wreg free
 20431  0058C0  0900               	iorlw	0
 20432  0058C2  B4D8               	btfsc	status,2,c
 20433  0058C4  D018               	goto	l2666
 20434                           
 20435                           ;app_init.c: 212: {
 20436                           ;app_init.c: 213: currentState = INIT_FSM_EEPROM;
 20437  0058C6  0E01               	movlw	1
 20438  0058C8  D006               	goto	L23
 20439  0058CA                     
 20440                           ; BSR set to: 1
 20441                           ;app_init.c: 218: if (initEeprom())
 20442                           
 20443                           ; BSR set to: 1
 20444  0058CA  EC78  F022         	call	_initEeprom	;wreg free
 20445  0058CE  0900               	iorlw	0
 20446  0058D0  B4D8               	btfsc	status,2,c
 20447  0058D2  D011               	goto	l2666
 20448                           
 20449                           ;app_init.c: 219: {
 20450                           ;app_init.c: 220: currentState = INIT_FSM_COMPLETE;
 20451  0058D4  0E02               	movlw	2
 20452  0058D6                     L23:
 20453  0058D6  0101               	movlb	1	; () banked
 20454  0058D8  6FD3               	movwf	initFsm@currentState& (0+255),b
 20455                           
 20456                           ; BSR set to: 1
 20457                           ;app_init.c: 221: }
 20458                           ;app_init.c: 222: break;
 20459  0058DA  D00D               	goto	l2666
 20460  0058DC                     
 20461                           ; BSR set to: 1
 20462                           ;app_init.c: 225: isInitialized = 1;
 20463                           
 20464                           ; BSR set to: 1
 20465  0058DC  0E01               	movlw	1
 20466  0058DE  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20467                           
 20468                           ; BSR set to: 1
 20469                           ;app_init.c: 230: }
 20470                           
 20471                           ; BSR set to: 1
 20472                           ;app_init.c: 229: break;
 20473                           
 20474                           ;app_init.c: 228: default:
 20475                           
 20476                           ;app_init.c: 226: break;
 20477  0058E0  D00A               	goto	l2666
 20478  0058E2                     l2663:
 20479                           
 20480                           ; BSR set to: 1
 20481                           
 20482                           ; BSR set to: 1
 20483  0058E2  51D3               	movf	initFsm@currentState& (0+255),w,b
 20484                           
 20485                           ; Switch size 1, requested type "space"
 20486                           ; Number of cases is 3, Range of values is 0 to 2
 20487                           ; switch strategies available:
 20488                           ; Name         Instructions Cycles
 20489                           ; simple_byte           10     6 (average)
 20490                           ;	Chosen strategy is simple_byte
 20491  0058E4  0A00               	xorlw	0	; case 0
 20492  0058E6  B4D8               	btfsc	status,2,c
 20493  0058E8  D7E9               	goto	l2664
 20494  0058EA  0A01               	xorlw	1	; case 1
 20495  0058EC  B4D8               	btfsc	status,2,c
 20496  0058EE  D7ED               	goto	l2667
 20497  0058F0  0A03               	xorlw	3	; case 2
 20498  0058F2  B4D8               	btfsc	status,2,c
 20499  0058F4  D7F3               	goto	l2669
 20500  0058F6                     l2666:
 20501                           
 20502                           ;app_init.c: 231: return isInitialized;
 20503                           
 20504                           ; BSR set to: 1
 20505  0058F6  0101               	movlb	1	; () banked
 20506  0058F8  5103               	movf	initFsm@isInitialized& (0+255),w,b
 20507  0058FA  0012               	return	
 20508  0058FC                     __end_of_initFsm:
 20509                           	opt stack 0
 20510                           tosu	equ	0xFFF
 20511                           tosh	equ	0xFFE
 20512                           tosl	equ	0xFFD
 20513                           pclath	equ	0xFFA
 20514                           tblptru	equ	0xFF8
 20515                           tblptrh	equ	0xFF7
 20516                           tblptrl	equ	0xFF6
 20517                           tablat	equ	0xFF5
 20518                           prodh	equ	0xFF4
 20519                           prodl	equ	0xFF3
 20520                           intcon	equ	0xFF2
 20521                           intcon2	equ	0xFF1
 20522                           intcon3	equ	0xFF0
 20523                           indf0	equ	0xFEF
 20524                           postinc0	equ	0xFEE
 20525                           plusw0	equ	0xFEB
 20526                           fsr0h	equ	0xFEA
 20527                           fsr0l	equ	0xFE9
 20528                           wreg	equ	0xFE8
 20529                           indf1	equ	0xFE7
 20530                           postinc1	equ	0xFE6
 20531                           postdec1	equ	0xFE5
 20532                           fsr1h	equ	0xFE2
 20533                           fsr1l	equ	0xFE1
 20534                           indf2	equ	0xFDF
 20535                           postinc2	equ	0xFDE
 20536                           postdec2	equ	0xFDD
 20537                           plusw2	equ	0xFDB
 20538                           fsr2h	equ	0xFDA
 20539                           fsr2l	equ	0xFD9
 20540                           status	equ	0xFD8
 20541                           
 20542 ;; *************** function _initGprsModem *****************
 20543 ;; Defined at:
 20544 ;;		line 109 in file "../Source/c/04_App/app_init.c"
 20545 ;; Parameters:    Size  Location     Type
 20546 ;;		None
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 20549 ;; Return value:  Size  Location     Type
 20550 ;;                  1    wreg      unsigned char 
 20551 ;; Registers used:
 20552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20553 ;; Tracked objects:
 20554 ;;		On entry : 0/0
 20555 ;;		On exit  : 0/0
 20556 ;;		Unchanged: 0/0
 20557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20562 ;;Total ram usage:        1 bytes
 20563 ;; Hardware stack levels used:    1
 20564 ;; Hardware stack levels required when called:   14
 20565 ;; This function calls:
 20566 ;;		_Mdm_SetSmsFormat
 20567 ;;		_Uart_WriteConstString
 20568 ;;		_secondsAppTimer2
 20569 ;; This function is called by:
 20570 ;;		_initFsm
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           	psect	text91
 20575  004B02                     __ptext91:
 20576                           	opt stack 0
 20577  004B02                     _initGprsModem:
 20578                           	opt stack 12
 20579                           
 20580                           ;app_init.c: 111: static uint16_t modemCounter = 0;
 20581                           ;app_init.c: 112: static modemStates currentState = MODEM_INIT;
 20582                           ;app_init.c: 113: bool isInitialized = 0;
 20583                           
 20584                           ; BSR set to: 1
 20585                           ;incstack = 0
 20586  004B02  0E00               	movlw	0
 20587  004B04  0100               	movlb	0	; () banked
 20588  004B06  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 20589                           
 20590                           ;app_init.c: 115: switch(currentState)
 20591  004B08  D033               	goto	l2633
 20592  004B0A                     
 20593                           ;app_init.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20594                           
 20595                           ; BSR set to: 0
 20596  004B0A  0E03               	movlw	3
 20597  004B0C  0100               	movlb	0	; () banked
 20598  004B0E  19D2               	xorwf	_MdmStatus& (0+255),w,b
 20599  004B10  B4D8               	btfsc	status,2,c
 20600  004B12  D003               	goto	u13470
 20601                           
 20602                           ; BSR set to: 0
 20603  004B14  05D2               	decf	_MdmStatus& (0+255),w,b
 20604  004B16  A4D8               	btfss	status,2,c
 20605  004B18  D039               	goto	l2639
 20606  004B1A                     u13470:
 20607                           
 20608                           ; BSR set to: 0
 20609                           ;app_init.c: 119: {
 20610                           ;app_init.c: 120: if (secondsAppTimer2(4, &modemCounter, 0))
 20611                           
 20612                           ; BSR set to: 0
 20613  004B1A  0EBB               	movlw	low initGprsModem@modemCounter
 20614  004B1C  6F8A               	movwf	secondsAppTimer2@counter& (0+255),b
 20615  004B1E  0E03               	movlw	high initGprsModem@modemCounter
 20616  004B20  6F8B               	movwf	(secondsAppTimer2@counter+1)& (0+255),b
 20617  004B22  0E00               	movlw	0
 20618  004B24  6F8C               	movwf	secondsAppTimer2@isCyclic& (0+255),b
 20619  004B26  0E04               	movlw	4
 20620  004B28  ECCA  F022         	call	_secondsAppTimer2
 20621  004B2C  0900               	iorlw	0
 20622  004B2E  B4D8               	btfsc	status,2,c
 20623  004B30  D02D               	goto	l2639
 20624                           
 20625                           ;app_init.c: 121: {
 20626                           ;app_init.c: 122: Mdm_SetSmsFormat(1);
 20627  004B32  0E01               	movlw	1
 20628  004B34  EC9A  F02B         	call	_Mdm_SetSmsFormat
 20629                           
 20630                           ;app_init.c: 123: currentState = MODEM_DELETE_SMS;
 20631  004B38  0E01               	movlw	1
 20632  004B3A  D013               	goto	L25
 20633  004B3C                     
 20634                           ; BSR set to: 1
 20635                           ;app_init.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 20636                           
 20637                           ; BSR set to: 1
 20638  004B3C  0E07               	movlw	low STR_29
 20639  004B3E  0100               	movlb	0	; () banked
 20640  004B40  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20641  004B42  0EFF               	movlw	high STR_29
 20642  004B44  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20643  004B46  0E01               	movlw	1
 20644  004B48  EC4C  F02D         	call	_Uart_WriteConstString
 20645                           
 20646                           ;app_init.c: 130: currentState = MODEM_SET_CALLER_ID;
 20647  004B4C  0E02               	movlw	2
 20648  004B4E  D009               	goto	L25
 20649  004B50                     
 20650                           ; BSR set to: 1
 20651                           ;app_init.c: 134: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 20652                           
 20653                           ; BSR set to: 1
 20654  004B50  0EA9               	movlw	low STR_30
 20655  004B52  0100               	movlb	0	; () banked
 20656  004B54  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20657  004B56  0EFF               	movlw	high STR_30
 20658  004B58  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20659  004B5A  0E01               	movlw	1
 20660  004B5C  EC4C  F02D         	call	_Uart_WriteConstString
 20661                           
 20662                           ;app_init.c: 135: currentState = MODEM_INIT_COMPLETE;
 20663  004B60  0E03               	movlw	3
 20664  004B62                     L25:
 20665  004B62  0101               	movlb	1	; () banked
 20666  004B64  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 20667                           
 20668                           ;app_init.c: 136: break;
 20669  004B66  D012               	goto	l2639
 20670  004B68                     
 20671                           ; BSR set to: 1
 20672                           ;app_init.c: 139: isInitialized = 1;
 20673                           
 20674                           ; BSR set to: 1
 20675  004B68  0E01               	movlw	1
 20676  004B6A  0100               	movlb	0	; () banked
 20677  004B6C  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 20678                           
 20679                           ; BSR set to: 0
 20680                           ;app_init.c: 144: }
 20681                           
 20682                           ; BSR set to: 0
 20683                           ;app_init.c: 143: break;
 20684                           
 20685                           ;app_init.c: 142: default:
 20686                           
 20687                           ;app_init.c: 140: break;
 20688  004B6E  D00E               	goto	l2639
 20689  004B70                     l2633:
 20690                           
 20691                           ; BSR set to: 0
 20692                           
 20693                           ; BSR set to: 0
 20694  004B70  0101               	movlb	1	; () banked
 20695  004B72  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 20696                           
 20697                           ; Switch size 1, requested type "space"
 20698                           ; Number of cases is 4, Range of values is 0 to 3
 20699                           ; switch strategies available:
 20700                           ; Name         Instructions Cycles
 20701                           ; simple_byte           13     7 (average)
 20702                           ;	Chosen strategy is simple_byte
 20703  004B74  0A00               	xorlw	0	; case 0
 20704  004B76  B4D8               	btfsc	status,2,c
 20705  004B78  D7C8               	goto	l2634
 20706  004B7A  0A01               	xorlw	1	; case 1
 20707  004B7C  B4D8               	btfsc	status,2,c
 20708  004B7E  D7DE               	goto	l2640
 20709  004B80  0A03               	xorlw	3	; case 2
 20710  004B82  B4D8               	btfsc	status,2,c
 20711  004B84  D7E5               	goto	l2641
 20712  004B86  0A01               	xorlw	1	; case 3
 20713  004B88  B4D8               	btfsc	status,2,c
 20714  004B8A  D7EE               	goto	l2642
 20715  004B8C                     l2639:
 20716                           
 20717                           ;app_init.c: 145: return isInitialized;
 20718                           
 20719                           ; BSR set to: 1
 20720  004B8C  0100               	movlb	0	; () banked
 20721  004B8E  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 20722  004B90  0012               	return	
 20723  004B92                     __end_of_initGprsModem:
 20724                           	opt stack 0
 20725                           tosu	equ	0xFFF
 20726                           tosh	equ	0xFFE
 20727                           tosl	equ	0xFFD
 20728                           pclath	equ	0xFFA
 20729                           tblptru	equ	0xFF8
 20730                           tblptrh	equ	0xFF7
 20731                           tblptrl	equ	0xFF6
 20732                           tablat	equ	0xFF5
 20733                           prodh	equ	0xFF4
 20734                           prodl	equ	0xFF3
 20735                           intcon	equ	0xFF2
 20736                           intcon2	equ	0xFF1
 20737                           intcon3	equ	0xFF0
 20738                           indf0	equ	0xFEF
 20739                           postinc0	equ	0xFEE
 20740                           plusw0	equ	0xFEB
 20741                           fsr0h	equ	0xFEA
 20742                           fsr0l	equ	0xFE9
 20743                           wreg	equ	0xFE8
 20744                           indf1	equ	0xFE7
 20745                           postinc1	equ	0xFE6
 20746                           postdec1	equ	0xFE5
 20747                           fsr1h	equ	0xFE2
 20748                           fsr1l	equ	0xFE1
 20749                           indf2	equ	0xFDF
 20750                           postinc2	equ	0xFDE
 20751                           postdec2	equ	0xFDD
 20752                           plusw2	equ	0xFDB
 20753                           fsr2h	equ	0xFDA
 20754                           fsr2l	equ	0xFD9
 20755                           status	equ	0xFD8
 20756                           
 20757 ;; *************** function _secondsAppTimer2 *****************
 20758 ;; Defined at:
 20759 ;;		line 82 in file "../Source/c/04_App/app_init.c"
 20760 ;; Parameters:    Size  Location     Type
 20761 ;;  seconds         1    wreg     unsigned char 
 20762 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 20763 ;;		 -> initGprsModem@modemCounter(2), 
 20764 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 20765 ;; Auto vars:     Size  Location     Type
 20766 ;;  seconds         1   47[BANK0 ] unsigned char 
 20767 ;;  destinationT    2   49[BANK0 ] unsigned int 
 20768 ;;  isExpired       1   48[BANK0 ] unsigned char 
 20769 ;; Return value:  Size  Location     Type
 20770 ;;                  1    wreg      unsigned char 
 20771 ;; Registers used:
 20772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20773 ;; Tracked objects:
 20774 ;;		On entry : 0/0
 20775 ;;		On exit  : 0/0
 20776 ;;		Unchanged: 0/0
 20777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20778 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20781 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20782 ;;Total ram usage:        9 bytes
 20783 ;; Hardware stack levels used:    1
 20784 ;; Hardware stack levels required when called:   12
 20785 ;; This function calls:
 20786 ;;		___lwdiv
 20787 ;;		___wmul
 20788 ;; This function is called by:
 20789 ;;		_initGprsModem
 20790 ;; This function uses a non-reentrant model
 20791 ;;
 20792                           
 20793                           	psect	text92
 20794  004594                     __ptext92:
 20795                           	opt stack 0
 20796  004594                     _secondsAppTimer2:
 20797                           	opt stack 13
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;incstack = 0
 20801                           ;secondsAppTimer2@seconds stored from wreg
 20802  004594  0100               	movlb	0	; () banked
 20803  004596  6F8F               	movwf	secondsAppTimer2@seconds& (0+255),b
 20804                           
 20805                           ;app_init.c: 84: bool isExpired = 1;
 20806  004598  0E01               	movlw	1
 20807  00459A  0100               	movlb	0	; () banked
 20808  00459C  6F90               	movwf	secondsAppTimer2@isExpired& (0+255),b
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;app_init.c: 85: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100
      +                          ));
 20812  00459E  C08F  F07D         	movff	secondsAppTimer2@seconds,___wmul@multiplier
 20813  0045A2  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 20814  0045A4  0E03               	movlw	3
 20815  0045A6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20816  0045A8  0EE8               	movlw	232
 20817  0045AA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 20818  0045AC  ECF1  F02F         	call	___wmul	;wreg free
 20819  0045B0  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 20820  0045B4  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 20821  0045B8  0E00               	movlw	0
 20822  0045BA  0100               	movlb	0	; () banked
 20823  0045BC  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20824  0045BE  0E64               	movlw	100
 20825  0045C0  6F85               	movwf	___lwdiv@divisor& (0+255),b
 20826  0045C2  ECF7  F02A         	call	___lwdiv	;wreg free
 20827  0045C6  C083  F091         	movff	?___lwdiv,secondsAppTimer2@destinationTicks
 20828  0045CA  C084  F092         	movff	?___lwdiv+1,secondsAppTimer2@destinationTicks+1
 20829                           
 20830                           ;app_init.c: 87: if (*counter < destinationTicks)
 20831  0045CE  C08A  FFD9         	movff	secondsAppTimer2@counter,fsr2l
 20832  0045D2  C08B  FFDA         	movff	secondsAppTimer2@counter+1,fsr2h
 20833  0045D6  0100               	movlb	0	; () banked
 20834  0045D8  5191               	movf	secondsAppTimer2@destinationTicks& (0+255),w,b
 20835  0045DA  5CDE               	subwf	postinc2,w,c
 20836  0045DC  5192               	movf	(secondsAppTimer2@destinationTicks+1)& (0+255),w,b
 20837  0045DE  58DE               	subwfb	postinc2,w,c
 20838  0045E0  B0D8               	btfsc	status,0,c
 20839  0045E2  D009               	goto	l2622
 20840                           
 20841                           ; BSR set to: 0
 20842                           ;app_init.c: 88: {
 20843                           ;app_init.c: 89: *counter += 1;
 20844  0045E4  C08A  FFD9         	movff	secondsAppTimer2@counter,fsr2l
 20845  0045E8  C08B  FFDA         	movff	secondsAppTimer2@counter+1,fsr2h
 20846  0045EC  2ADE               	incf	postinc2,f,c
 20847  0045EE  0E00               	movlw	0
 20848  0045F0  22DD               	addwfc	postdec2,f,c
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;app_init.c: 90: isExpired = 0;
 20852  0045F2  0E00               	movlw	0
 20853  0045F4  6F90               	movwf	secondsAppTimer2@isExpired& (0+255),b
 20854  0045F6                     l2622:
 20855                           
 20856                           ; BSR set to: 0
 20857                           ;app_init.c: 91: }
 20858                           ;app_init.c: 92: if (*counter == destinationTicks)
 20859                           
 20860                           ; BSR set to: 0
 20861  0045F6  C08A  FFD9         	movff	secondsAppTimer2@counter,fsr2l
 20862  0045FA  C08B  FFDA         	movff	secondsAppTimer2@counter+1,fsr2h
 20863  0045FE  5191               	movf	secondsAppTimer2@destinationTicks& (0+255),w,b
 20864  004600  18DE               	xorwf	postinc2,w,c
 20865  004602  E117               	bnz	l13239
 20866  004604  5192               	movf	(secondsAppTimer2@destinationTicks+1)& (0+255),w,b
 20867  004606  18DE               	xorwf	postinc2,w,c
 20868  004608  A4D8               	btfss	status,2,c
 20869  00460A  D013               	goto	l2625
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;app_init.c: 93: {
 20873                           ;app_init.c: 94: if (isCyclic)
 20874  00460C  518C               	movf	secondsAppTimer2@isCyclic& (0+255),w,b
 20875  00460E  B4D8               	btfsc	status,2,c
 20876  004610  D008               	goto	l2624
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;app_init.c: 95: {
 20880                           ;app_init.c: 96: *counter = 0;
 20881  004612  C08A  FFD9         	movff	secondsAppTimer2@counter,fsr2l
 20882  004616  C08B  FFDA         	movff	secondsAppTimer2@counter+1,fsr2h
 20883  00461A  0E00               	movlw	0
 20884  00461C  6EDE               	movwf	postinc2,c
 20885  00461E  0E00               	movlw	0
 20886  004620  D007               	goto	L26
 20887  004622                     l2624:
 20888                           
 20889                           ; BSR set to: 0
 20890                           ;app_init.c: 98: else
 20891                           ;app_init.c: 99: {
 20892                           ;app_init.c: 100: *counter = 0xFFFF;
 20893                           
 20894                           ; BSR set to: 0
 20895  004622  C08A  FFD9         	movff	secondsAppTimer2@counter,fsr2l
 20896  004626  C08B  FFDA         	movff	secondsAppTimer2@counter+1,fsr2h
 20897  00462A  0EFF               	movlw	255
 20898  00462C  6EDE               	movwf	postinc2,c
 20899  00462E  0EFF               	movlw	255
 20900  004630                     L26:
 20901  004630  6EDD               	movwf	postdec2,c
 20902  004632                     l2625:
 20903  004632                     l13239:
 20904                           
 20905                           ; BSR set to: 0
 20906                           ;app_init.c: 101: }
 20907                           ;app_init.c: 102: }
 20908                           ;app_init.c: 103: return isExpired;
 20909  004632  5190               	movf	secondsAppTimer2@isExpired& (0+255),w,b
 20910  004634  0012               	return	
 20911  004636                     __end_of_secondsAppTimer2:
 20912                           	opt stack 0
 20913                           tosu	equ	0xFFF
 20914                           tosh	equ	0xFFE
 20915                           tosl	equ	0xFFD
 20916                           pclath	equ	0xFFA
 20917                           tblptru	equ	0xFF8
 20918                           tblptrh	equ	0xFF7
 20919                           tblptrl	equ	0xFF6
 20920                           tablat	equ	0xFF5
 20921                           prodh	equ	0xFF4
 20922                           prodl	equ	0xFF3
 20923                           intcon	equ	0xFF2
 20924                           intcon2	equ	0xFF1
 20925                           intcon3	equ	0xFF0
 20926                           indf0	equ	0xFEF
 20927                           postinc0	equ	0xFEE
 20928                           plusw0	equ	0xFEB
 20929                           fsr0h	equ	0xFEA
 20930                           fsr0l	equ	0xFE9
 20931                           wreg	equ	0xFE8
 20932                           indf1	equ	0xFE7
 20933                           postinc1	equ	0xFE6
 20934                           postdec1	equ	0xFE5
 20935                           fsr1h	equ	0xFE2
 20936                           fsr1l	equ	0xFE1
 20937                           indf2	equ	0xFDF
 20938                           postinc2	equ	0xFDE
 20939                           postdec2	equ	0xFDD
 20940                           plusw2	equ	0xFDB
 20941                           fsr2h	equ	0xFDA
 20942                           fsr2l	equ	0xFD9
 20943                           status	equ	0xFD8
 20944                           
 20945 ;; *************** function _Mdm_SetSmsFormat *****************
 20946 ;; Defined at:
 20947 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20948 ;; Parameters:    Size  Location     Type
 20949 ;;  TextFormat      1    wreg     unsigned char 
 20950 ;; Auto vars:     Size  Location     Type
 20951 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 20952 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 20953 ;;  Index           1   35[BANK0 ] unsigned char 
 20954 ;; Return value:  Size  Location     Type
 20955 ;;                  1    wreg      void 
 20956 ;; Registers used:
 20957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20958 ;; Tracked objects:
 20959 ;;		On entry : 0/0
 20960 ;;		On exit  : 0/0
 20961 ;;		Unchanged: 0/0
 20962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20964 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20966 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20967 ;;Total ram usage:       22 bytes
 20968 ;; Hardware stack levels used:    1
 20969 ;; Hardware stack levels required when called:   13
 20970 ;; This function calls:
 20971 ;;		_Uart_WriteString
 20972 ;; This function is called by:
 20973 ;;		_initGprsModem
 20974 ;; This function uses a non-reentrant model
 20975 ;;
 20976                           
 20977                           	psect	text93
 20978  005734                     __ptext93:
 20979                           	opt stack 0
 20980  005734                     _Mdm_SetSmsFormat:
 20981                           	opt stack 12
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;incstack = 0
 20985                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 20986  005734  0100               	movlb	0	; () banked
 20987  005736  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 20988                           
 20989                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 20990                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 20991  005738  0E00               	movlw	0
 20992  00573A  0100               	movlb	0	; () banked
 20993  00573C  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 20994                           
 20995                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 20996  00573E  0E41               	movlw	65
 20997  005740  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 20998                           
 20999                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21000  005742  0E54               	movlw	84
 21001  005744  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21002                           
 21003                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21004  005746  0E2B               	movlw	43
 21005  005748  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21006                           
 21007                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21008  00574A  0E43               	movlw	67
 21009  00574C  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21010                           
 21011                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21012  00574E  0E4D               	movlw	77
 21013  005750  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21014                           
 21015                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21016  005752  0E47               	movlw	71
 21017  005754  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21018                           
 21019                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 21020  005756  0E46               	movlw	70
 21021  005758  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21022                           
 21023                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 21024  00575A  0E3D               	movlw	61
 21025  00575C  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 21029  00575E  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21030  005760  A4D8               	btfss	status,2,c
 21031  005762  D002               	goto	l1121
 21032                           
 21033                           ; BSR set to: 0
 21034                           ;mdm_gsm_gprs.c: 854: {
 21035                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 21036  005764  0E31               	movlw	49
 21037  005766  D001               	goto	L27
 21038  005768                     l1121:
 21039                           
 21040                           ; BSR set to: 0
 21041                           ;mdm_gsm_gprs.c: 857: else
 21042                           ;mdm_gsm_gprs.c: 858: {
 21043                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 21044                           
 21045                           ; BSR set to: 0
 21046  005768  0E30               	movlw	48
 21047  00576A                     L27:
 21048  00576A  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 21049                           
 21050                           ; BSR set to: 0
 21051                           ;mdm_gsm_gprs.c: 860: }
 21052                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 21053  00576C  0E0D               	movlw	13
 21054  00576E  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 21055                           
 21056                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 21057  005770  0E00               	movlw	0
 21058  005772  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 21062  005774  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 21063  005776  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 21064  005778  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 21065  00577A  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 21066  00577C  0E01               	movlw	1
 21067  00577E  EC0D  F02E         	call	_Uart_WriteString
 21068  005782  0012               	return		;funcret
 21069  005784                     __end_of_Mdm_SetSmsFormat:
 21070                           	opt stack 0
 21071                           tosu	equ	0xFFF
 21072                           tosh	equ	0xFFE
 21073                           tosl	equ	0xFFD
 21074                           pclath	equ	0xFFA
 21075                           tblptru	equ	0xFF8
 21076                           tblptrh	equ	0xFF7
 21077                           tblptrl	equ	0xFF6
 21078                           tablat	equ	0xFF5
 21079                           prodh	equ	0xFF4
 21080                           prodl	equ	0xFF3
 21081                           intcon	equ	0xFF2
 21082                           intcon2	equ	0xFF1
 21083                           intcon3	equ	0xFF0
 21084                           indf0	equ	0xFEF
 21085                           postinc0	equ	0xFEE
 21086                           plusw0	equ	0xFEB
 21087                           fsr0h	equ	0xFEA
 21088                           fsr0l	equ	0xFE9
 21089                           wreg	equ	0xFE8
 21090                           indf1	equ	0xFE7
 21091                           postinc1	equ	0xFE6
 21092                           postdec1	equ	0xFE5
 21093                           fsr1h	equ	0xFE2
 21094                           fsr1l	equ	0xFE1
 21095                           indf2	equ	0xFDF
 21096                           postinc2	equ	0xFDE
 21097                           postdec2	equ	0xFDD
 21098                           plusw2	equ	0xFDB
 21099                           fsr2h	equ	0xFDA
 21100                           fsr2l	equ	0xFD9
 21101                           status	equ	0xFD8
 21102                           
 21103 ;; *************** function _initEeprom *****************
 21104 ;; Defined at:
 21105 ;;		line 152 in file "../Source/c/04_App/app_init.c"
 21106 ;; Parameters:    Size  Location     Type
 21107 ;;		None
 21108 ;; Auto vars:     Size  Location     Type
 21109 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 21110 ;;  memoryOpResu    1    1[BANK1 ] enum E8245
 21111 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 21112 ;; Return value:  Size  Location     Type
 21113 ;;                  1    wreg      unsigned char 
 21114 ;; Registers used:
 21115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21116 ;; Tracked objects:
 21117 ;;		On entry : 0/0
 21118 ;;		On exit  : 0/0
 21119 ;;		Unchanged: 0/0
 21120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21122 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21124 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21125 ;;Total ram usage:        3 bytes
 21126 ;; Hardware stack levels used:    1
 21127 ;; Hardware stack levels required when called:   17
 21128 ;; This function calls:
 21129 ;;		_Eeprom_Read
 21130 ;;		_Led_SetLedStatus
 21131 ;; This function is called by:
 21132 ;;		_initFsm
 21133 ;; This function uses a non-reentrant model
 21134 ;;
 21135                           
 21136                           	psect	text94
 21137  0044F0                     __ptext94:
 21138                           	opt stack 0
 21139  0044F0                     _initEeprom:
 21140                           	opt stack 9
 21141                           
 21142                           ;app_init.c: 154: const uint8_t addressToRead = 0;
 21143                           
 21144                           ;incstack = 0
 21145  0044F0  0E00               	movlw	0
 21146  0044F2  0101               	movlb	1	; () banked
 21147  0044F4  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 21148                           
 21149                           ;app_init.c: 155: static eepromStates currentState = EEPROM_INIT;
 21150                           ;app_init.c: 156: EepromStsType memoryOpResult = OP_PENDING;
 21151  0044F6  0E02               	movlw	2
 21152  0044F8  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 21153                           
 21154                           ;app_init.c: 157: bool isInitialized = 0;
 21155  0044FA  0E00               	movlw	0
 21156  0044FC  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 21157                           
 21158                           ;app_init.c: 159: switch (currentState)
 21159  0044FE  D03C               	goto	l2649
 21160  004500                     
 21161                           ; BSR set to: 1
 21162                           ;app_init.c: 162: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 21163                           
 21164                           ; BSR set to: 1
 21165  004500  0EA7               	movlw	low _memoryPreamble
 21166  004502  0100               	movlb	0	; () banked
 21167  004504  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 21168  004506  0E03               	movlw	high _memoryPreamble
 21169  004508  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 21170  00450A  0E04               	movlw	4
 21171  00450C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 21172  00450E  0E00               	movlw	0
 21173  004510  ECA3  F02A         	call	_Eeprom_Read
 21174  004514  0101               	movlb	1	; () banked
 21175  004516  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 21176                           
 21177                           ; BSR set to: 1
 21178                           ;app_init.c: 163: if (memoryOpResult != OP_PENDING)
 21179  004518  0E02               	movlw	2
 21180  00451A  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 21181  00451C  B4D8               	btfsc	status,2,c
 21182  00451E  D037               	goto	l2654
 21183                           
 21184                           ; BSR set to: 1
 21185                           ;app_init.c: 164: {
 21186                           ;app_init.c: 165: if (memoryPreamble[0] == 'U' &&
 21187                           ;app_init.c: 166: memoryPreamble[1] == 'S' &&
 21188                           ;app_init.c: 167: memoryPreamble[2] == 'I' &&
 21189                           ;app_init.c: 168: memoryPreamble[3] == 'M')
 21190  004520  0E55               	movlw	85
 21191  004522  0103               	movlb	3	; () banked
 21192  004524  19A7               	xorwf	_memoryPreamble& (0+255),w,b
 21193  004526  A4D8               	btfss	status,2,c
 21194  004528  D00E               	goto	l2652
 21195                           
 21196                           ; BSR set to: 3
 21197  00452A  0E53               	movlw	83
 21198  00452C  19A8               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 21199  00452E  A4D8               	btfss	status,2,c
 21200  004530  D00A               	goto	l2652
 21201                           
 21202                           ; BSR set to: 3
 21203  004532  0E49               	movlw	73
 21204  004534  19A9               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 21205  004536  A4D8               	btfss	status,2,c
 21206  004538  D006               	goto	l2652
 21207                           
 21208                           ; BSR set to: 3
 21209  00453A  0E4D               	movlw	77
 21210  00453C  19AA               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 21211  00453E  A4D8               	btfss	status,2,c
 21212  004540  D002               	goto	l2652
 21213                           
 21214                           ; BSR set to: 3
 21215                           ;app_init.c: 169: {
 21216                           ;app_init.c: 170: currentState = EEPROM_NOT_EMPTY;
 21217  004542  0E02               	movlw	2
 21218  004544  D001               	goto	L28
 21219  004546                     l2652:
 21220                           
 21221                           ;app_init.c: 172: else
 21222                           ;app_init.c: 173: {
 21223                           ;app_init.c: 174: currentState = EEPROM_EMPTY;
 21224                           
 21225                           ; BSR set to: 1
 21226  004546  0E01               	movlw	1
 21227  004548                     L28:
 21228  004548  0101               	movlb	1	; () banked
 21229  00454A  6FD4               	movwf	initEeprom@currentState& (0+255),b
 21230                           
 21231                           ; BSR set to: 1
 21232                           ;app_init.c: 175: }
 21233                           ;app_init.c: 176: }
 21234                           ;app_init.c: 177: break;
 21235                           
 21236                           ; BSR set to: 1
 21237  00454C  D020               	goto	l2654
 21238  00454E                     
 21239                           ; BSR set to: 1
 21240                           ;app_init.c: 180: isInitialized = 1;
 21241                           
 21242                           ; BSR set to: 1
 21243  00454E  0E01               	movlw	1
 21244  004550  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;app_init.c: 181: Led_SetLedStatus(1u, LED_STS_BLINK);
 21248  004552  0E03               	movlw	3
 21249  004554  0100               	movlb	0	; () banked
 21250  004556  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21251  004558  0E01               	movlw	1
 21252  00455A  EC6B  F02F         	call	_Led_SetLedStatus
 21253                           
 21254                           ;app_init.c: 182: break;
 21255  00455E  D017               	goto	l2654
 21256  004560                     
 21257                           ;app_init.c: 185: isInitialized = 1;
 21258  004560  0E01               	movlw	1
 21259  004562  0101               	movlb	1	; () banked
 21260  004564  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 21261                           
 21262                           ;app_init.c: 186: isMemoryEmpty = 0;
 21263  004566  0E00               	movlw	0
 21264  004568  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 21265                           
 21266                           ; BSR set to: 1
 21267                           ;app_init.c: 187: Led_SetLedStatus(1u, LED_STS_ON);
 21268  00456A  0E01               	movlw	1
 21269  00456C  0100               	movlb	0	; () banked
 21270  00456E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21271  004570  0E01               	movlw	1
 21272  004572  EC6B  F02F         	call	_Led_SetLedStatus
 21273                           
 21274                           ;app_init.c: 192: }
 21275                           
 21276                           ;app_init.c: 191: break;
 21277                           
 21278                           ;app_init.c: 190: default:
 21279                           
 21280                           ;app_init.c: 188: break;
 21281  004576  D00B               	goto	l2654
 21282  004578                     l2649:
 21283  004578  0101               	movlb	1	; () banked
 21284  00457A  51D4               	movf	initEeprom@currentState& (0+255),w,b
 21285                           
 21286                           ; Switch size 1, requested type "space"
 21287                           ; Number of cases is 3, Range of values is 0 to 2
 21288                           ; switch strategies available:
 21289                           ; Name         Instructions Cycles
 21290                           ; simple_byte           10     6 (average)
 21291                           ;	Chosen strategy is simple_byte
 21292  00457C  0A00               	xorlw	0	; case 0
 21293  00457E  B4D8               	btfsc	status,2,c
 21294  004580  D7BF               	goto	l2650
 21295  004582  0A01               	xorlw	1	; case 1
 21296  004584  B4D8               	btfsc	status,2,c
 21297  004586  D7E3               	goto	l2655
 21298  004588  0A03               	xorlw	3	; case 2
 21299  00458A  B4D8               	btfsc	status,2,c
 21300  00458C  D7E9               	goto	l2656
 21301  00458E                     l2654:
 21302                           
 21303                           ;app_init.c: 193: return isInitialized;
 21304                           
 21305                           ; BSR set to: 1
 21306  00458E  0101               	movlb	1	; () banked
 21307  004590  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 21308  004592  0012               	return	
 21309  004594                     __end_of_initEeprom:
 21310                           	opt stack 0
 21311                           tosu	equ	0xFFF
 21312                           tosh	equ	0xFFE
 21313                           tosl	equ	0xFFD
 21314                           pclath	equ	0xFFA
 21315                           tblptru	equ	0xFF8
 21316                           tblptrh	equ	0xFF7
 21317                           tblptrl	equ	0xFF6
 21318                           tablat	equ	0xFF5
 21319                           prodh	equ	0xFF4
 21320                           prodl	equ	0xFF3
 21321                           intcon	equ	0xFF2
 21322                           intcon2	equ	0xFF1
 21323                           intcon3	equ	0xFF0
 21324                           indf0	equ	0xFEF
 21325                           postinc0	equ	0xFEE
 21326                           plusw0	equ	0xFEB
 21327                           fsr0h	equ	0xFEA
 21328                           fsr0l	equ	0xFE9
 21329                           wreg	equ	0xFE8
 21330                           indf1	equ	0xFE7
 21331                           postinc1	equ	0xFE6
 21332                           postdec1	equ	0xFE5
 21333                           fsr1h	equ	0xFE2
 21334                           fsr1l	equ	0xFE1
 21335                           indf2	equ	0xFDF
 21336                           postinc2	equ	0xFDE
 21337                           postdec2	equ	0xFDD
 21338                           plusw2	equ	0xFDB
 21339                           fsr2h	equ	0xFDA
 21340                           fsr2l	equ	0xFD9
 21341                           status	equ	0xFD8
 21342                           
 21343 ;; *************** function _Eeprom_Read *****************
 21344 ;; Defined at:
 21345 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21346 ;; Parameters:    Size  Location     Type
 21347 ;;  MemoryAddres    1    wreg     unsigned char 
 21348 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 21349 ;;		 -> memoryPreamble(4), MyApp_Task@phone(14), 
 21350 ;;  DataLength      1   75[BANK0 ] unsigned char 
 21351 ;; Auto vars:     Size  Location     Type
 21352 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 21353 ;;  QuerySts        1   79[BANK0 ] enum E8931
 21354 ;;  ReadSts         1   78[BANK0 ] enum E8957
 21355 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 21356 ;; Return value:  Size  Location     Type
 21357 ;;                  1    wreg      enum E8245
 21358 ;; Registers used:
 21359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21360 ;; Tracked objects:
 21361 ;;		On entry : 0/0
 21362 ;;		On exit  : 0/0
 21363 ;;		Unchanged: 0/0
 21364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21365 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21366 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21368 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21369 ;;Total ram usage:        7 bytes
 21370 ;; Hardware stack levels used:    1
 21371 ;; Hardware stack levels required when called:   16
 21372 ;; This function calls:
 21373 ;;		_I2cSlv_QueryI2cData
 21374 ;; This function is called by:
 21375 ;;		_MyApp_Task
 21376 ;;		_initEeprom
 21377 ;; This function uses a non-reentrant model
 21378 ;;
 21379                           
 21380                           	psect	text95
 21381  005546                     __ptext95:
 21382                           	opt stack 0
 21383  005546                     _Eeprom_Read:
 21384                           	opt stack 9
 21385                           
 21386                           ; BSR set to: 1
 21387                           ;incstack = 0
 21388                           ;Eeprom_Read@MemoryAddress stored from wreg
 21389  005546  0100               	movlb	0	; () banked
 21390  005548  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 21391                           
 21392                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 21393  00554A  0E50               	movlw	80
 21394  00554C  0100               	movlb	0	; () banked
 21395  00554E  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 21396                           
 21397                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 21398  005550  0E00               	movlw	0
 21399  005552  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21400                           
 21401                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 21402  005554  0E02               	movlw	2
 21403  005556  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21404                           
 21405                           ; BSR set to: 0
 21406                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 21407  005558  C0AC  F1F5         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 21411  00555C  0EF5               	movlw	low _ReadAddress
 21412  00555E  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 21413  005560  0E01               	movlw	high _ReadAddress
 21414  005562  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 21415  005564  0E01               	movlw	1
 21416  005566  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 21417  005568  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 21418  00556C  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 21419  005570  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 21420  005574  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 21421  005578  ECBE  F01B         	call	_I2cSlv_QueryI2cData	;wreg free
 21422  00557C  0100               	movlb	0	; () banked
 21423  00557E  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 21427  005580  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 21428  005582  A4D8               	btfss	status,2,c
 21429  005584  D002               	goto	l2596
 21430                           
 21431                           ; BSR set to: 0
 21432                           ;eeprom_if.c: 114: {
 21433                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 21434  005586  0E00               	movlw	0
 21435  005588  D005               	goto	L29
 21436  00558A                     l2596:
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 21440                           
 21441                           ; BSR set to: 0
 21442  00558A  0E02               	movlw	2
 21443  00558C  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 21444  00558E  A4D8               	btfss	status,2,c
 21445  005590  D002               	goto	l2598
 21446                           
 21447                           ; BSR set to: 0
 21448                           ;eeprom_if.c: 118: {
 21449                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 21450  005592  0E01               	movlw	1
 21451  005594                     L29:
 21452  005594  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21453  005596                     l2598:
 21454                           
 21455                           ; BSR set to: 0
 21456                           ;eeprom_if.c: 120: }
 21457                           ;eeprom_if.c: 121: return ReadSts;
 21458                           
 21459                           ; BSR set to: 0
 21460  005596  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 21461  005598  0012               	return	
 21462  00559A                     __end_of_Eeprom_Read:
 21463                           	opt stack 0
 21464                           tosu	equ	0xFFF
 21465                           tosh	equ	0xFFE
 21466                           tosl	equ	0xFFD
 21467                           pclath	equ	0xFFA
 21468                           tblptru	equ	0xFF8
 21469                           tblptrh	equ	0xFF7
 21470                           tblptrl	equ	0xFF6
 21471                           tablat	equ	0xFF5
 21472                           prodh	equ	0xFF4
 21473                           prodl	equ	0xFF3
 21474                           intcon	equ	0xFF2
 21475                           intcon2	equ	0xFF1
 21476                           intcon3	equ	0xFF0
 21477                           indf0	equ	0xFEF
 21478                           postinc0	equ	0xFEE
 21479                           plusw0	equ	0xFEB
 21480                           fsr0h	equ	0xFEA
 21481                           fsr0l	equ	0xFE9
 21482                           wreg	equ	0xFE8
 21483                           indf1	equ	0xFE7
 21484                           postinc1	equ	0xFE6
 21485                           postdec1	equ	0xFE5
 21486                           fsr1h	equ	0xFE2
 21487                           fsr1l	equ	0xFE1
 21488                           indf2	equ	0xFDF
 21489                           postinc2	equ	0xFDE
 21490                           postdec2	equ	0xFDD
 21491                           plusw2	equ	0xFDB
 21492                           fsr2h	equ	0xFDA
 21493                           fsr2l	equ	0xFD9
 21494                           status	equ	0xFD8
 21495                           
 21496 ;; *************** function _I2cSlv_QueryI2cData *****************
 21497 ;; Defined at:
 21498 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21499 ;; Parameters:    Size  Location     Type
 21500 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 21501 ;;		 -> ReadAddress(1), 
 21502 ;;  TxLen           1   68[BANK0 ] unsigned char 
 21503 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 21504 ;;		 -> memoryPreamble(4), MyApp_Task@phone(14), 
 21505 ;;  RxLen           1   71[BANK0 ] unsigned char 
 21506 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;		None
 21509 ;; Return value:  Size  Location     Type
 21510 ;;                  1    wreg      enum E8944
 21511 ;; Registers used:
 21512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21513 ;; Tracked objects:
 21514 ;;		On entry : 0/0
 21515 ;;		On exit  : 0/0
 21516 ;;		Unchanged: 0/0
 21517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21518 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21521 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21522 ;;Total ram usage:        7 bytes
 21523 ;; Hardware stack levels used:    1
 21524 ;; Hardware stack levels required when called:   15
 21525 ;; This function calls:
 21526 ;;		_I2cSlv_I2cReadMsgSts
 21527 ;;		_I2cSlv_ReceiveI2cMsg
 21528 ;;		_I2cSlv_SendI2cMsg
 21529 ;;		_OsTmr_GetTimerStatus
 21530 ;;		_OsTmr_StartTimer
 21531 ;;		_OsTmr_Wait
 21532 ;; This function is called by:
 21533 ;;		_Eeprom_Read
 21534 ;; This function uses a non-reentrant model
 21535 ;;
 21536                           
 21537                           	psect	text96
 21538  00377C                     __ptext96:
 21539                           	opt stack 0
 21540  00377C                     _I2cSlv_QueryI2cData:
 21541                           	opt stack 9
 21542                           
 21543                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 21544                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 21545                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 21546                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 21547                           ;i2c_slv.c: 388: switch(I2cOpState)
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;incstack = 0
 21551  00377C  D05B               	goto	l1437
 21552  00377E                     
 21553                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 21554  00377E  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 21555  003782  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 21556  003786  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 21557  00378A  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 21558  00378E  ECEE  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 21559                           
 21560                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 21561  003792  0E01               	movlw	1
 21562  003794  0101               	movlb	1	; () banked
 21563  003796  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21564                           
 21565                           ; BSR set to: 1
 21566                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 21567  003798  0E00               	movlw	0
 21568  00379A  D04A               	goto	L33
 21569  00379C                     
 21570                           ; BSR set to: 1
 21571                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 21572                           
 21573                           ; BSR set to: 1
 21574  00379C  0E46               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 21575  00379E  0100               	movlb	0	; () banked
 21576  0037A0  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 21577  0037A2  0E03               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 21578  0037A4  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 21579  0037A6  0EF4               	movlw	244
 21580  0037A8  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 21581  0037AA  0E01               	movlw	1
 21582  0037AC  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 21583  0037AE  0E00               	movlw	0
 21584  0037B0  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 21585  0037B2  0E00               	movlw	0
 21586  0037B4  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 21587  0037B6  EC23  F027         	call	_OsTmr_Wait	;wreg free
 21588  0037BA  06E8               	decf	wreg,f,c
 21589  0037BC  A4D8               	btfss	status,2,c
 21590  0037BE  D036               	goto	l1445
 21591                           
 21592                           ;i2c_slv.c: 402: {
 21593                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 21594  0037C0  0E3B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21595  0037C2  0100               	movlb	0	; () banked
 21596  0037C4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21597  0037C6  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21598  0037C8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21599  0037CA  0EC4               	movlw	196
 21600  0037CC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21601  0037CE  0E09               	movlw	9
 21602  0037D0  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21603  0037D2  0E00               	movlw	0
 21604  0037D4  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21605  0037D6  0E00               	movlw	0
 21606  0037D8  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21607  0037DA  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 21608                           
 21609                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 21610  0037DE  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 21611  0037E2  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 21612  0037E6  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 21613  0037EA  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 21614  0037EE  EC8F  F02D         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 21615                           
 21616                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 21617  0037F2  0E02               	movlw	2
 21618  0037F4  0101               	movlb	1	; () banked
 21619  0037F6  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21620  0037F8  D019               	goto	l1445
 21621  0037FA                     
 21622                           ; BSR set to: 1
 21623                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 21624                           
 21625                           ; BSR set to: 1
 21626  0037FA  ECB5  F030         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 21627  0037FE  06E8               	decf	wreg,f,c
 21628  003800  A4D8               	btfss	status,2,c
 21629  003802  D005               	goto	l1443
 21630                           
 21631                           ;i2c_slv.c: 414: {
 21632                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 21633  003804  0E00               	movlw	0
 21634  003806  0101               	movlb	1	; () banked
 21635  003808  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21636                           
 21637                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 21638  00380A  0E01               	movlw	1
 21639  00380C  D011               	goto	L33
 21640  00380E                     l1443:
 21641                           
 21642                           ;i2c_slv.c: 420: else
 21643                           ;i2c_slv.c: 421: {
 21644                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 21645                           
 21646                           ; BSR set to: 1
 21647  00380E  0E3B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21648  003810  0100               	movlb	0	; () banked
 21649  003812  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21650  003814  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21651  003816  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21652  003818  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 21653  00381C  06E8               	decf	wreg,f,c
 21654  00381E  A4D8               	btfss	status,2,c
 21655  003820  D005               	goto	l1445
 21656                           
 21657                           ;i2c_slv.c: 423: {
 21658                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 21659  003822  0E00               	movlw	0
 21660  003824  0101               	movlb	1	; () banked
 21661  003826  6FE7               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21662                           
 21663                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 21664  003828  0E02               	movlw	2
 21665  00382A  D002               	goto	L33
 21666  00382C                     l1445:
 21667                           
 21668                           ;i2c_slv.c: 429: else
 21669                           ;i2c_slv.c: 430: {
 21670                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 21671                           
 21672                           ; BSR set to: 1
 21673  00382C  0E00               	movlw	0
 21674  00382E  0101               	movlb	1	; () banked
 21675  003830                     L33:
 21676  003830  6FE6               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 21677                           
 21678                           ; BSR set to: 1
 21679                           ;i2c_slv.c: 439: }
 21680                           
 21681                           ; BSR set to: 1
 21682                           ;i2c_slv.c: 438: break;
 21683                           
 21684                           ;i2c_slv.c: 437: default:
 21685                           
 21686                           ; BSR set to: 1
 21687                           ;i2c_slv.c: 433: }
 21688                           ;i2c_slv.c: 434: }
 21689                           ;i2c_slv.c: 435: break;
 21690                           
 21691                           ; BSR set to: 1
 21692  003832  D00B               	goto	l1439
 21693  003834                     l1437:
 21694                           
 21695                           ; BSR set to: 1
 21696  003834  0101               	movlb	1	; () banked
 21697  003836  51E7               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 21698                           
 21699                           ; Switch size 1, requested type "space"
 21700                           ; Number of cases is 3, Range of values is 0 to 2
 21701                           ; switch strategies available:
 21702                           ; Name         Instructions Cycles
 21703                           ; simple_byte           10     6 (average)
 21704                           ;	Chosen strategy is simple_byte
 21705  003838  0A00               	xorlw	0	; case 0
 21706  00383A  B4D8               	btfsc	status,2,c
 21707  00383C  D7A0               	goto	l1438
 21708  00383E  0A01               	xorlw	1	; case 1
 21709  003840  B4D8               	btfsc	status,2,c
 21710  003842  D7AC               	goto	l1440
 21711  003844  0A03               	xorlw	3	; case 2
 21712  003846  B4D8               	btfsc	status,2,c
 21713  003848  D7D8               	goto	l1442
 21714  00384A                     l1439:
 21715                           
 21716                           ; BSR set to: 1
 21717                           ;i2c_slv.c: 441: return Ret;
 21718                           
 21719                           ; BSR set to: 1
 21720  00384A  51E6               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 21721  00384C  0012               	return	
 21722  00384E                     __end_of_I2cSlv_QueryI2cData:
 21723                           	opt stack 0
 21724                           tosu	equ	0xFFF
 21725                           tosh	equ	0xFFE
 21726                           tosl	equ	0xFFD
 21727                           pclath	equ	0xFFA
 21728                           tblptru	equ	0xFF8
 21729                           tblptrh	equ	0xFF7
 21730                           tblptrl	equ	0xFF6
 21731                           tablat	equ	0xFF5
 21732                           prodh	equ	0xFF4
 21733                           prodl	equ	0xFF3
 21734                           intcon	equ	0xFF2
 21735                           intcon2	equ	0xFF1
 21736                           intcon3	equ	0xFF0
 21737                           indf0	equ	0xFEF
 21738                           postinc0	equ	0xFEE
 21739                           plusw0	equ	0xFEB
 21740                           fsr0h	equ	0xFEA
 21741                           fsr0l	equ	0xFE9
 21742                           wreg	equ	0xFE8
 21743                           indf1	equ	0xFE7
 21744                           postinc1	equ	0xFE6
 21745                           postdec1	equ	0xFE5
 21746                           fsr1h	equ	0xFE2
 21747                           fsr1l	equ	0xFE1
 21748                           indf2	equ	0xFDF
 21749                           postinc2	equ	0xFDE
 21750                           postdec2	equ	0xFDD
 21751                           plusw2	equ	0xFDB
 21752                           fsr2h	equ	0xFDA
 21753                           fsr2l	equ	0xFD9
 21754                           status	equ	0xFD8
 21755                           
 21756 ;; *************** function _OsTmr_Wait *****************
 21757 ;; Defined at:
 21758 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 21759 ;; Parameters:    Size  Location     Type
 21760 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 21761 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 21762 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 21763 ;; Auto vars:     Size  Location     Type
 21764 ;;  Ret             1   65[BANK0 ] enum E7749
 21765 ;; Return value:  Size  Location     Type
 21766 ;;                  1    wreg      enum E7749
 21767 ;; Registers used:
 21768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21769 ;; Tracked objects:
 21770 ;;		On entry : 0/0
 21771 ;;		On exit  : 0/0
 21772 ;;		Unchanged: 0/0
 21773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21774 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21777 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21778 ;;Total ram usage:        7 bytes
 21779 ;; Hardware stack levels used:    1
 21780 ;; Hardware stack levels required when called:   14
 21781 ;; This function calls:
 21782 ;;		_OsTmr_GetTimerStatus
 21783 ;;		_OsTmr_StartTimer
 21784 ;; This function is called by:
 21785 ;;		_I2cSlv_QueryI2cData
 21786 ;;		_Terminal
 21787 ;; This function uses a non-reentrant model
 21788 ;;
 21789                           
 21790                           	psect	text97
 21791  004E46                     __ptext97:
 21792                           	opt stack 0
 21793  004E46                     _OsTmr_Wait:
 21794                           	opt stack 11
 21795                           
 21796                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 21797                           
 21798                           ; BSR set to: 1
 21799                           ;incstack = 0
 21800  004E46  0E00               	movlw	0
 21801  004E48  0100               	movlb	0	; () banked
 21802  004E4A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 21803                           
 21804                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 21805  004E4C  D02D               	goto	l855
 21806  004E4E                     
 21807                           ; BSR set to: 0
 21808                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 21809                           
 21810                           ; BSR set to: 0
 21811  004E4E  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 21812  004E52  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 21813  004E56  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 21814  004E5A  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 21815  004E5E  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 21816  004E62  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 21817  004E66  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 21818                           
 21819                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 21820  004E6A  0100               	movlb	0	; () banked
 21821  004E6C  EE20 F00A          	lfsr	2,10
 21822  004E70  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 21823  004E72  26D9               	addwf	fsr2l,f,c
 21824  004E74  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 21825  004E76  22DA               	addwfc	fsr2h,f,c
 21826  004E78  0E01               	movlw	1
 21827  004E7A  6EDF               	movwf	indf2,c
 21828                           
 21829                           ;os_timers.c: 165: break;
 21830  004E7C  D022               	goto	l857
 21831  004E7E                     
 21832                           ; BSR set to: 0
 21833                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 21834                           
 21835                           ; BSR set to: 0
 21836  004E7E  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 21837  004E82  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 21838  004E86  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 21839  004E8A  06E8               	decf	wreg,f,c
 21840  004E8C  A4D8               	btfss	status,2,c
 21841  004E8E  D019               	goto	l857
 21842                           
 21843                           ;os_timers.c: 170: {
 21844                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 21845  004E90  0100               	movlb	0	; () banked
 21846  004E92  EE20 F00A          	lfsr	2,10
 21847  004E96  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 21848  004E98  26D9               	addwf	fsr2l,f,c
 21849  004E9A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 21850  004E9C  22DA               	addwfc	fsr2h,f,c
 21851  004E9E  0E00               	movlw	0
 21852  004EA0  6EDF               	movwf	indf2,c
 21853                           
 21854                           ; BSR set to: 0
 21855                           ;os_timers.c: 174: Ret = DelayExpired;
 21856  004EA2  0E01               	movlw	1
 21857  004EA4  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 21858                           
 21859                           ; BSR set to: 0
 21860                           ;os_timers.c: 180: }
 21861                           
 21862                           ; BSR set to: 0
 21863                           ;os_timers.c: 179: break;
 21864                           
 21865                           ;os_timers.c: 178: default:
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;os_timers.c: 175: }
 21869                           ;os_timers.c: 176: break;
 21870  004EA6  D00D               	goto	l857
 21871  004EA8                     l855:
 21872                           
 21873                           ; BSR set to: 0
 21874                           
 21875                           ; BSR set to: 0
 21876  004EA8  EE20 F00A          	lfsr	2,10
 21877  004EAC  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 21878  004EAE  26D9               	addwf	fsr2l,f,c
 21879  004EB0  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 21880  004EB2  22DA               	addwfc	fsr2h,f,c
 21881  004EB4  50DF               	movf	indf2,w,c
 21882                           
 21883                           ; Switch size 1, requested type "space"
 21884                           ; Number of cases is 2, Range of values is 0 to 1
 21885                           ; switch strategies available:
 21886                           ; Name         Instructions Cycles
 21887                           ; simple_byte            7     4 (average)
 21888                           ;	Chosen strategy is simple_byte
 21889  004EB6  0A00               	xorlw	0	; case 0
 21890  004EB8  B4D8               	btfsc	status,2,c
 21891  004EBA  D7C9               	goto	l856
 21892  004EBC  0A01               	xorlw	1	; case 1
 21893  004EBE  B4D8               	btfsc	status,2,c
 21894  004EC0  D7DE               	goto	l858
 21895  004EC2                     l857:
 21896                           
 21897                           ;os_timers.c: 182: return Ret;
 21898                           
 21899                           ; BSR set to: 0
 21900  004EC2  0100               	movlb	0	; () banked
 21901  004EC4  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 21902  004EC6  0012               	return	
 21903  004EC8                     __end_of_OsTmr_Wait:
 21904                           	opt stack 0
 21905                           tosu	equ	0xFFF
 21906                           tosh	equ	0xFFE
 21907                           tosl	equ	0xFFD
 21908                           pclath	equ	0xFFA
 21909                           tblptru	equ	0xFF8
 21910                           tblptrh	equ	0xFF7
 21911                           tblptrl	equ	0xFF6
 21912                           tablat	equ	0xFF5
 21913                           prodh	equ	0xFF4
 21914                           prodl	equ	0xFF3
 21915                           intcon	equ	0xFF2
 21916                           intcon2	equ	0xFF1
 21917                           intcon3	equ	0xFF0
 21918                           indf0	equ	0xFEF
 21919                           postinc0	equ	0xFEE
 21920                           plusw0	equ	0xFEB
 21921                           fsr0h	equ	0xFEA
 21922                           fsr0l	equ	0xFE9
 21923                           wreg	equ	0xFE8
 21924                           indf1	equ	0xFE7
 21925                           postinc1	equ	0xFE6
 21926                           postdec1	equ	0xFE5
 21927                           fsr1h	equ	0xFE2
 21928                           fsr1l	equ	0xFE1
 21929                           indf2	equ	0xFDF
 21930                           postinc2	equ	0xFDE
 21931                           postdec2	equ	0xFDD
 21932                           plusw2	equ	0xFDB
 21933                           fsr2h	equ	0xFDA
 21934                           fsr2l	equ	0xFD9
 21935                           status	equ	0xFD8
 21936                           
 21937 ;; *************** function _I2cSlv_SendI2cMsg *****************
 21938 ;; Defined at:
 21939 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21940 ;; Parameters:    Size  Location     Type
 21941 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 21942 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 21943 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 21944 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 21945 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 21946 ;; Auto vars:     Size  Location     Type
 21947 ;;  TxSts           1   36[BANK0 ] unsigned char 
 21948 ;; Return value:  Size  Location     Type
 21949 ;;                  1    wreg      unsigned char 
 21950 ;; Registers used:
 21951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21952 ;; Tracked objects:
 21953 ;;		On entry : 0/0
 21954 ;;		On exit  : 0/0
 21955 ;;		Unchanged: 0/0
 21956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21957 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21960 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21961 ;;Total ram usage:        5 bytes
 21962 ;; Hardware stack levels used:    1
 21963 ;; Hardware stack levels required when called:   12
 21964 ;; This function calls:
 21965 ;;		_GenerateEvt
 21966 ;; This function is called by:
 21967 ;;		_I2cSlv_QueryI2cData
 21968 ;;		_Terminal
 21969 ;;		_triggerRelay
 21970 ;;		_Eeprom_Write
 21971 ;; This function uses a non-reentrant model
 21972 ;;
 21973                           
 21974                           	psect	text98
 21975  005BDC                     __ptext98:
 21976                           	opt stack 0
 21977  005BDC                     _I2cSlv_SendI2cMsg:
 21978                           	opt stack 13
 21979                           
 21980                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;incstack = 0
 21984  005BDC  0E00               	movlw	0
 21985  005BDE  0100               	movlb	0	; () banked
 21986  005BE0  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 21990  005BE2  05CF               	decf	_I2cComSts& (0+255),w,b
 21991  005BE4  B4D8               	btfsc	status,2,c
 21992  005BE6  D015               	goto	l1409
 21993                           
 21994                           ; BSR set to: 0
 21995                           ;i2c_slv.c: 257: {
 21996                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 21997  005BE8  C082  F39D         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 21998                           
 21999                           ; BSR set to: 0
 22000                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 22001  005BEC  0E00               	movlw	0
 22002  005BEE  0103               	movlb	3	; () banked
 22003  005BF0  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 22004                           
 22005                           ; BSR set to: 3
 22006                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 22007  005BF2  C083  F3A1         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 22008                           
 22009                           ; BSR set to: 3
 22010                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 22011  005BF6  C080  F39F         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 22012  005BFA  C081  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 22013                           
 22014                           ; BSR set to: 3
 22015                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 22016  005BFE  0ED9               	movlw	low _I2cWriteDataEvt
 22017  005C00  0100               	movlb	0	; () banked
 22018  005C02  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22019  005C04  0E00               	movlw	high _I2cWriteDataEvt
 22020  005C06  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22021  005C08  EC5E  F031         	call	_GenerateEvt	;wreg free
 22022                           
 22023                           ;i2c_slv.c: 267: TxSts = 1u;
 22024  005C0C  0E01               	movlw	1
 22025  005C0E  0100               	movlb	0	; () banked
 22026  005C10  D001               	goto	L34
 22027  005C12                     l1409:
 22028                           
 22029                           ; BSR set to: 0
 22030                           ;i2c_slv.c: 269: else
 22031                           ;i2c_slv.c: 270: {
 22032                           ;i2c_slv.c: 272: TxSts = 0u;
 22033                           
 22034                           ; BSR set to: 0
 22035  005C12  0E00               	movlw	0
 22036  005C14                     L34:
 22037  005C14  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;i2c_slv.c: 273: }
 22041                           ;i2c_slv.c: 275: return TxSts;
 22042  005C16  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 22043  005C18  0012               	return	
 22044  005C1A                     __end_of_I2cSlv_SendI2cMsg:
 22045                           	opt stack 0
 22046                           tosu	equ	0xFFF
 22047                           tosh	equ	0xFFE
 22048                           tosl	equ	0xFFD
 22049                           pclath	equ	0xFFA
 22050                           tblptru	equ	0xFF8
 22051                           tblptrh	equ	0xFF7
 22052                           tblptrl	equ	0xFF6
 22053                           tablat	equ	0xFF5
 22054                           prodh	equ	0xFF4
 22055                           prodl	equ	0xFF3
 22056                           intcon	equ	0xFF2
 22057                           intcon2	equ	0xFF1
 22058                           intcon3	equ	0xFF0
 22059                           indf0	equ	0xFEF
 22060                           postinc0	equ	0xFEE
 22061                           plusw0	equ	0xFEB
 22062                           fsr0h	equ	0xFEA
 22063                           fsr0l	equ	0xFE9
 22064                           wreg	equ	0xFE8
 22065                           indf1	equ	0xFE7
 22066                           postinc1	equ	0xFE6
 22067                           postdec1	equ	0xFE5
 22068                           fsr1h	equ	0xFE2
 22069                           fsr1l	equ	0xFE1
 22070                           indf2	equ	0xFDF
 22071                           postinc2	equ	0xFDE
 22072                           postdec2	equ	0xFDD
 22073                           plusw2	equ	0xFDB
 22074                           fsr2h	equ	0xFDA
 22075                           fsr2l	equ	0xFD9
 22076                           status	equ	0xFD8
 22077                           
 22078 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 22079 ;; Defined at:
 22080 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22081 ;; Parameters:    Size  Location     Type
 22082 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 22083 ;;		 -> memoryPreamble(4), MyApp_Task@phone(14), Terminal@TermRxBuffer(50), 
 22084 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22085 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22086 ;; Auto vars:     Size  Location     Type
 22087 ;;  RxSts           1   36[BANK0 ] unsigned char 
 22088 ;; Return value:  Size  Location     Type
 22089 ;;                  1    wreg      unsigned char 
 22090 ;; Registers used:
 22091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22092 ;; Tracked objects:
 22093 ;;		On entry : 0/0
 22094 ;;		On exit  : 0/0
 22095 ;;		Unchanged: 0/0
 22096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22097 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22098 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22100 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22101 ;;Total ram usage:        5 bytes
 22102 ;; Hardware stack levels used:    1
 22103 ;; Hardware stack levels required when called:   12
 22104 ;; This function calls:
 22105 ;;		_GenerateEvt
 22106 ;; This function is called by:
 22107 ;;		_I2cSlv_QueryI2cData
 22108 ;;		_Terminal
 22109 ;; This function uses a non-reentrant model
 22110 ;;
 22111                           
 22112                           	psect	text99
 22113  005B1E                     __ptext99:
 22114                           	opt stack 0
 22115  005B1E                     _I2cSlv_ReceiveI2cMsg:
 22116                           	opt stack 13
 22117                           
 22118                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 22119                           
 22120                           ; BSR set to: 0
 22121                           ;incstack = 0
 22122  005B1E  0E00               	movlw	0
 22123  005B20  0100               	movlb	0	; () banked
 22124  005B22  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22125                           
 22126                           ; BSR set to: 0
 22127                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 22128  005B24  0E02               	movlw	2
 22129  005B26  19CF               	xorwf	_I2cComSts& (0+255),w,b
 22130  005B28  B4D8               	btfsc	status,2,c
 22131  005B2A  D016               	goto	l1414
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;i2c_slv.c: 294: {
 22135                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 22136  005B2C  C082  F397         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 22137                           
 22138                           ; BSR set to: 0
 22139                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 22140  005B30  0E01               	movlw	1
 22141  005B32  0103               	movlb	3	; () banked
 22142  005B34  6F98               	movwf	(_I2cRxPacket+1)& (0+255),b
 22143                           
 22144                           ; BSR set to: 3
 22145                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 22146  005B36  C083  F39B         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 22147                           
 22148                           ; BSR set to: 3
 22149                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 22150  005B3A  C080  F399         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 22151  005B3E  C081  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 22152                           
 22153                           ; BSR set to: 3
 22154                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 22155  005B42  0ED8               	movlw	low _I2cReadDataEvt
 22156  005B44  0100               	movlb	0	; () banked
 22157  005B46  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22158  005B48  0E00               	movlw	high _I2cReadDataEvt
 22159  005B4A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22160  005B4C  EC5E  F031         	call	_GenerateEvt	;wreg free
 22161                           
 22162                           ;i2c_slv.c: 304: RxSts = 1u;
 22163  005B50  0E01               	movlw	1
 22164  005B52  0100               	movlb	0	; () banked
 22165  005B54  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22166                           
 22167                           ;i2c_slv.c: 305: }
 22168  005B56  0012               	return	
 22169  005B58                     l1414:
 22170                           
 22171                           ; BSR set to: 0
 22172                           ;i2c_slv.c: 306: else
 22173                           ;i2c_slv.c: 307: {
 22174                           ;i2c_slv.c: 309: RxSts = 0u;
 22175                           
 22176                           ; BSR set to: 0
 22177  005B58  0E00               	movlw	0
 22178  005B5A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22179                           
 22180                           ; BSR set to: 0
 22181  005B5C  0012               	return	
 22182  005B5E                     __end_of_I2cSlv_ReceiveI2cMsg:
 22183                           	opt stack 0
 22184                           tosu	equ	0xFFF
 22185                           tosh	equ	0xFFE
 22186                           tosl	equ	0xFFD
 22187                           pclath	equ	0xFFA
 22188                           tblptru	equ	0xFF8
 22189                           tblptrh	equ	0xFF7
 22190                           tblptrl	equ	0xFF6
 22191                           tablat	equ	0xFF5
 22192                           prodh	equ	0xFF4
 22193                           prodl	equ	0xFF3
 22194                           intcon	equ	0xFF2
 22195                           intcon2	equ	0xFF1
 22196                           intcon3	equ	0xFF0
 22197                           indf0	equ	0xFEF
 22198                           postinc0	equ	0xFEE
 22199                           plusw0	equ	0xFEB
 22200                           fsr0h	equ	0xFEA
 22201                           fsr0l	equ	0xFE9
 22202                           wreg	equ	0xFE8
 22203                           indf1	equ	0xFE7
 22204                           postinc1	equ	0xFE6
 22205                           postdec1	equ	0xFE5
 22206                           fsr1h	equ	0xFE2
 22207                           fsr1l	equ	0xFE1
 22208                           indf2	equ	0xFDF
 22209                           postinc2	equ	0xFDE
 22210                           postdec2	equ	0xFDD
 22211                           plusw2	equ	0xFDB
 22212                           fsr2h	equ	0xFDA
 22213                           fsr2l	equ	0xFD9
 22214                           status	equ	0xFD8
 22215                           
 22216 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 22217 ;; Defined at:
 22218 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22219 ;; Parameters:    Size  Location     Type
 22220 ;;		None
 22221 ;; Auto vars:     Size  Location     Type
 22222 ;;  Result          1   33[BANK0 ] enum E8932
 22223 ;; Return value:  Size  Location     Type
 22224 ;;                  1    wreg      enum E8932
 22225 ;; Registers used:
 22226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22227 ;; Tracked objects:
 22228 ;;		On entry : 0/0
 22229 ;;		On exit  : 0/0
 22230 ;;		Unchanged: 0/0
 22231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22235 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22236 ;;Total ram usage:        1 bytes
 22237 ;; Hardware stack levels used:    1
 22238 ;; Hardware stack levels required when called:   12
 22239 ;; This function calls:
 22240 ;;		_ReceiveEvt
 22241 ;; This function is called by:
 22242 ;;		_I2cSlv_QueryI2cData
 22243 ;;		_Terminal
 22244 ;; This function uses a non-reentrant model
 22245 ;;
 22246                           
 22247                           	psect	text100
 22248  00616A                     __ptext100:
 22249                           	opt stack 0
 22250  00616A                     _I2cSlv_I2cReadMsgSts:
 22251                           	opt stack 13
 22252                           
 22253                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 22254                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 22255                           
 22256                           ; BSR set to: 0
 22257                           ;incstack = 0
 22258  00616A  0E9C               	movlw	low (_I2cRxPacket+5)
 22259  00616C  0100               	movlb	0	; () banked
 22260  00616E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22261  006170  0E03               	movlw	high (_I2cRxPacket+5)
 22262  006172  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22263  006174  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 22264  006178  0900               	iorlw	0
 22265  00617A  B4D8               	btfsc	status,2,c
 22266  00617C  D002               	goto	l1419
 22267                           
 22268                           ;i2c_slv.c: 331: {
 22269                           ;i2c_slv.c: 332: Result = MessageReceived;
 22270  00617E  0E01               	movlw	1
 22271  006180  D001               	goto	L35
 22272  006182                     l1419:
 22273                           
 22274                           ;i2c_slv.c: 334: else
 22275                           ;i2c_slv.c: 335: {
 22276                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 22277                           
 22278                           ; BSR set to: 0
 22279  006182  0E00               	movlw	0
 22280  006184                     L35:
 22281  006184  0100               	movlb	0	; () banked
 22282  006186  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 22283                           
 22284                           ; BSR set to: 0
 22285                           ;i2c_slv.c: 337: }
 22286                           ;i2c_slv.c: 339: return Result;
 22287  006188  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 22288  00618A  0012               	return	
 22289  00618C                     __end_of_I2cSlv_I2cReadMsgSts:
 22290                           	opt stack 0
 22291                           tosu	equ	0xFFF
 22292                           tosh	equ	0xFFE
 22293                           tosl	equ	0xFFD
 22294                           pclath	equ	0xFFA
 22295                           tblptru	equ	0xFF8
 22296                           tblptrh	equ	0xFF7
 22297                           tblptrl	equ	0xFF6
 22298                           tablat	equ	0xFF5
 22299                           prodh	equ	0xFF4
 22300                           prodl	equ	0xFF3
 22301                           intcon	equ	0xFF2
 22302                           intcon2	equ	0xFF1
 22303                           intcon3	equ	0xFF0
 22304                           indf0	equ	0xFEF
 22305                           postinc0	equ	0xFEE
 22306                           plusw0	equ	0xFEB
 22307                           fsr0h	equ	0xFEA
 22308                           fsr0l	equ	0xFE9
 22309                           wreg	equ	0xFE8
 22310                           indf1	equ	0xFE7
 22311                           postinc1	equ	0xFE6
 22312                           postdec1	equ	0xFE5
 22313                           fsr1h	equ	0xFE2
 22314                           fsr1l	equ	0xFE1
 22315                           indf2	equ	0xFDF
 22316                           postinc2	equ	0xFDE
 22317                           postdec2	equ	0xFDD
 22318                           plusw2	equ	0xFDB
 22319                           fsr2h	equ	0xFDA
 22320                           fsr2l	equ	0xFD9
 22321                           status	equ	0xFD8
 22322                           
 22323 ;; *************** function _blinkForSeconds *****************
 22324 ;; Defined at:
 22325 ;;		line 144 in file "../Source/c/04_App/app.c"
 22326 ;; Parameters:    Size  Location     Type
 22327 ;;  seconds         1    wreg     unsigned char 
 22328 ;;  blinkTicks      2   51[BANK0 ] PTR unsigned int 
 22329 ;;		 -> MyApp_Task@blinkTicks(2), 
 22330 ;; Auto vars:     Size  Location     Type
 22331 ;;  seconds         1   53[BANK0 ] unsigned char 
 22332 ;; Return value:  Size  Location     Type
 22333 ;;                  1    wreg      void 
 22334 ;; Registers used:
 22335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22336 ;; Tracked objects:
 22337 ;;		On entry : 0/0
 22338 ;;		On exit  : 0/0
 22339 ;;		Unchanged: 0/0
 22340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22344 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22345 ;;Total ram usage:        3 bytes
 22346 ;; Hardware stack levels used:    1
 22347 ;; Hardware stack levels required when called:   13
 22348 ;; This function calls:
 22349 ;;		_Led_SetLedStatus
 22350 ;;		_secondsAppTimer
 22351 ;; This function is called by:
 22352 ;;		_MyApp_Task
 22353 ;; This function uses a non-reentrant model
 22354 ;;
 22355                           
 22356                           	psect	text101
 22357  005CCE                     __ptext101:
 22358                           	opt stack 0
 22359  005CCE                     _blinkForSeconds:
 22360                           	opt stack 14
 22361                           
 22362                           ; BSR set to: 0
 22363                           ;incstack = 0
 22364                           ;blinkForSeconds@seconds stored from wreg
 22365  005CCE  0100               	movlb	0	; () banked
 22366  005CD0  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 22367                           
 22368                           ;app.c: 146: if (secondsAppTimer(seconds, blinkTicks, 0))
 22369  005CD2  C093  F08A         	movff	blinkForSeconds@blinkTicks,secondsAppTimer@counter
 22370  005CD6  C094  F08B         	movff	blinkForSeconds@blinkTicks+1,secondsAppTimer@counter+1
 22371  005CDA  0E00               	movlw	0
 22372  005CDC  0100               	movlb	0	; () banked
 22373  005CDE  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22374  005CE0  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 22375  005CE2  EC1B  F023         	call	_secondsAppTimer
 22376  005CE6  0900               	iorlw	0
 22377  005CE8  B4D8               	btfsc	status,2,c
 22378  005CEA  D007               	goto	l2543
 22379                           
 22380                           ;app.c: 147: {
 22381                           ;app.c: 148: Led_SetLedStatus(1u, LED_STS_ON);
 22382  005CEC  0E01               	movlw	1
 22383  005CEE  0100               	movlb	0	; () banked
 22384  005CF0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 22385  005CF2  0E01               	movlw	1
 22386  005CF4  EC6B  F02F         	call	_Led_SetLedStatus
 22387                           
 22388                           ;app.c: 149: }
 22389  005CF8  0012               	return	
 22390  005CFA                     l2543:
 22391                           
 22392                           ;app.c: 150: else
 22393                           ;app.c: 151: {
 22394                           ;app.c: 152: Led_SetLedStatus(1u, LED_STS_BLINK);
 22395  005CFA  0E03               	movlw	3
 22396  005CFC  0100               	movlb	0	; () banked
 22397  005CFE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 22398  005D00  0E01               	movlw	1
 22399  005D02  EC6B  F02F         	call	_Led_SetLedStatus
 22400  005D06  0012               	return	
 22401  005D08                     __end_of_blinkForSeconds:
 22402                           	opt stack 0
 22403                           tosu	equ	0xFFF
 22404                           tosh	equ	0xFFE
 22405                           tosl	equ	0xFFD
 22406                           pclath	equ	0xFFA
 22407                           tblptru	equ	0xFF8
 22408                           tblptrh	equ	0xFF7
 22409                           tblptrl	equ	0xFF6
 22410                           tablat	equ	0xFF5
 22411                           prodh	equ	0xFF4
 22412                           prodl	equ	0xFF3
 22413                           intcon	equ	0xFF2
 22414                           intcon2	equ	0xFF1
 22415                           intcon3	equ	0xFF0
 22416                           indf0	equ	0xFEF
 22417                           postinc0	equ	0xFEE
 22418                           plusw0	equ	0xFEB
 22419                           fsr0h	equ	0xFEA
 22420                           fsr0l	equ	0xFE9
 22421                           wreg	equ	0xFE8
 22422                           indf1	equ	0xFE7
 22423                           postinc1	equ	0xFE6
 22424                           postdec1	equ	0xFE5
 22425                           fsr1h	equ	0xFE2
 22426                           fsr1l	equ	0xFE1
 22427                           indf2	equ	0xFDF
 22428                           postinc2	equ	0xFDE
 22429                           postdec2	equ	0xFDD
 22430                           plusw2	equ	0xFDB
 22431                           fsr2h	equ	0xFDA
 22432                           fsr2l	equ	0xFD9
 22433                           status	equ	0xFD8
 22434                           
 22435 ;; *************** function _secondsAppTimer *****************
 22436 ;; Defined at:
 22437 ;;		line 85 in file "../Source/c/04_App/app.c"
 22438 ;; Parameters:    Size  Location     Type
 22439 ;;  seconds         1    wreg     unsigned char 
 22440 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22441 ;;		 -> MyApp_Task@blinkTicks(2), 
 22442 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22443 ;; Auto vars:     Size  Location     Type
 22444 ;;  seconds         1   47[BANK0 ] unsigned char 
 22445 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22446 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22447 ;; Return value:  Size  Location     Type
 22448 ;;                  1    wreg      unsigned char 
 22449 ;; Registers used:
 22450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22451 ;; Tracked objects:
 22452 ;;		On entry : 0/0
 22453 ;;		On exit  : 0/0
 22454 ;;		Unchanged: 0/0
 22455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22456 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22457 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22459 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22460 ;;Total ram usage:        9 bytes
 22461 ;; Hardware stack levels used:    1
 22462 ;; Hardware stack levels required when called:   12
 22463 ;; This function calls:
 22464 ;;		___lwdiv
 22465 ;;		___wmul
 22466 ;; This function is called by:
 22467 ;;		_blinkForSeconds
 22468 ;; This function uses a non-reentrant model
 22469 ;;
 22470                           
 22471                           	psect	text102
 22472  004636                     __ptext102:
 22473                           	opt stack 0
 22474  004636                     _secondsAppTimer:
 22475                           	opt stack 14
 22476                           
 22477                           ;incstack = 0
 22478                           ;secondsAppTimer@seconds stored from wreg
 22479  004636  0100               	movlb	0	; () banked
 22480  004638  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22481                           
 22482                           ;app.c: 87: bool isExpired = 1;
 22483  00463A  0E01               	movlw	1
 22484  00463C  0100               	movlb	0	; () banked
 22485  00463E  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 22489  004640  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22490  004644  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22491  004646  0E03               	movlw	3
 22492  004648  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22493  00464A  0EE8               	movlw	232
 22494  00464C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22495  00464E  ECF1  F02F         	call	___wmul	;wreg free
 22496  004652  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22497  004656  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22498  00465A  0E00               	movlw	0
 22499  00465C  0100               	movlb	0	; () banked
 22500  00465E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22501  004660  0E64               	movlw	100
 22502  004662  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22503  004664  ECF7  F02A         	call	___lwdiv	;wreg free
 22504  004668  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22505  00466C  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22506                           
 22507                           ;app.c: 90: if (*counter < destinationTicks)
 22508  004670  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22509  004674  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22510  004678  0100               	movlb	0	; () banked
 22511  00467A  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22512  00467C  5CDE               	subwf	postinc2,w,c
 22513  00467E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22514  004680  58DE               	subwfb	postinc2,w,c
 22515  004682  B0D8               	btfsc	status,0,c
 22516  004684  D009               	goto	l2536
 22517                           
 22518                           ; BSR set to: 0
 22519                           ;app.c: 91: {
 22520                           ;app.c: 92: *counter += 1;
 22521  004686  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22522  00468A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22523  00468E  2ADE               	incf	postinc2,f,c
 22524  004690  0E00               	movlw	0
 22525  004692  22DD               	addwfc	postdec2,f,c
 22526                           
 22527                           ; BSR set to: 0
 22528                           ;app.c: 93: isExpired = 0;
 22529  004694  0E00               	movlw	0
 22530  004696  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22531  004698                     l2536:
 22532                           
 22533                           ; BSR set to: 0
 22534                           ;app.c: 94: }
 22535                           ;app.c: 95: if (*counter == destinationTicks)
 22536                           
 22537                           ; BSR set to: 0
 22538  004698  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22539  00469C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22540  0046A0  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22541  0046A2  18DE               	xorwf	postinc2,w,c
 22542  0046A4  E117               	bnz	l14095
 22543  0046A6  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22544  0046A8  18DE               	xorwf	postinc2,w,c
 22545  0046AA  A4D8               	btfss	status,2,c
 22546  0046AC  D013               	goto	l2539
 22547                           
 22548                           ; BSR set to: 0
 22549                           ;app.c: 96: {
 22550                           ;app.c: 97: if (isCyclic)
 22551  0046AE  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22552  0046B0  B4D8               	btfsc	status,2,c
 22553  0046B2  D008               	goto	l2538
 22554                           
 22555                           ; BSR set to: 0
 22556                           ;app.c: 98: {
 22557                           ;app.c: 99: *counter = 0;
 22558  0046B4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22559  0046B8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22560  0046BC  0E00               	movlw	0
 22561  0046BE  6EDE               	movwf	postinc2,c
 22562  0046C0  0E00               	movlw	0
 22563  0046C2  D007               	goto	L36
 22564  0046C4                     l2538:
 22565                           
 22566                           ; BSR set to: 0
 22567                           ;app.c: 101: else
 22568                           ;app.c: 102: {
 22569                           ;app.c: 103: *counter = 0xFFFF;
 22570                           
 22571                           ; BSR set to: 0
 22572  0046C4  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22573  0046C8  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22574  0046CC  0EFF               	movlw	255
 22575  0046CE  6EDE               	movwf	postinc2,c
 22576  0046D0  0EFF               	movlw	255
 22577  0046D2                     L36:
 22578  0046D2  6EDD               	movwf	postdec2,c
 22579  0046D4                     l2539:
 22580  0046D4                     l14095:
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;app.c: 104: }
 22584                           ;app.c: 105: }
 22585                           ;app.c: 106: return isExpired;
 22586  0046D4  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22587  0046D6  0012               	return	
 22588  0046D8                     __end_of_secondsAppTimer:
 22589                           	opt stack 0
 22590                           tosu	equ	0xFFF
 22591                           tosh	equ	0xFFE
 22592                           tosl	equ	0xFFD
 22593                           pclath	equ	0xFFA
 22594                           tblptru	equ	0xFF8
 22595                           tblptrh	equ	0xFF7
 22596                           tblptrl	equ	0xFF6
 22597                           tablat	equ	0xFF5
 22598                           prodh	equ	0xFF4
 22599                           prodl	equ	0xFF3
 22600                           intcon	equ	0xFF2
 22601                           intcon2	equ	0xFF1
 22602                           intcon3	equ	0xFF0
 22603                           indf0	equ	0xFEF
 22604                           postinc0	equ	0xFEE
 22605                           plusw0	equ	0xFEB
 22606                           fsr0h	equ	0xFEA
 22607                           fsr0l	equ	0xFE9
 22608                           wreg	equ	0xFE8
 22609                           indf1	equ	0xFE7
 22610                           postinc1	equ	0xFE6
 22611                           postdec1	equ	0xFE5
 22612                           fsr1h	equ	0xFE2
 22613                           fsr1l	equ	0xFE1
 22614                           indf2	equ	0xFDF
 22615                           postinc2	equ	0xFDE
 22616                           postdec2	equ	0xFDD
 22617                           plusw2	equ	0xFDB
 22618                           fsr2h	equ	0xFDA
 22619                           fsr2l	equ	0xFD9
 22620                           status	equ	0xFD8
 22621                           
 22622 ;; *************** function _Mdm_RequestSmsData *****************
 22623 ;; Defined at:
 22624 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22625 ;; Parameters:    Size  Location     Type
 22626 ;;		None
 22627 ;; Auto vars:     Size  Location     Type
 22628 ;;		None
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  1    wreg      void 
 22631 ;; Registers used:
 22632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22633 ;; Tracked objects:
 22634 ;;		On entry : 0/0
 22635 ;;		On exit  : 0/0
 22636 ;;		Unchanged: 0/0
 22637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22642 ;;Total ram usage:        0 bytes
 22643 ;; Hardware stack levels used:    1
 22644 ;; Hardware stack levels required when called:   12
 22645 ;; This function calls:
 22646 ;;		_GenerateEvt
 22647 ;; This function is called by:
 22648 ;;		_MyApp_Task
 22649 ;; This function uses a non-reentrant model
 22650 ;;
 22651                           
 22652                           	psect	text103
 22653  006396                     __ptext103:
 22654                           	opt stack 0
 22655  006396                     _Mdm_RequestSmsData:
 22656                           	opt stack 15
 22657                           
 22658                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22659                           
 22660                           ; BSR set to: 0
 22661                           ;incstack = 0
 22662  006396  0EDD               	movlw	low _GetSmsText
 22663  006398  0100               	movlb	0	; () banked
 22664  00639A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22665  00639C  0E00               	movlw	high _GetSmsText
 22666  00639E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22667  0063A0  EC5E  F031         	call	_GenerateEvt	;wreg free
 22668  0063A4  0012               	return		;funcret
 22669  0063A6                     __end_of_Mdm_RequestSmsData:
 22670                           	opt stack 0
 22671                           tosu	equ	0xFFF
 22672                           tosh	equ	0xFFE
 22673                           tosl	equ	0xFFD
 22674                           pclath	equ	0xFFA
 22675                           tblptru	equ	0xFF8
 22676                           tblptrh	equ	0xFF7
 22677                           tblptrl	equ	0xFF6
 22678                           tablat	equ	0xFF5
 22679                           prodh	equ	0xFF4
 22680                           prodl	equ	0xFF3
 22681                           intcon	equ	0xFF2
 22682                           intcon2	equ	0xFF1
 22683                           intcon3	equ	0xFF0
 22684                           indf0	equ	0xFEF
 22685                           postinc0	equ	0xFEE
 22686                           plusw0	equ	0xFEB
 22687                           fsr0h	equ	0xFEA
 22688                           fsr0l	equ	0xFE9
 22689                           wreg	equ	0xFE8
 22690                           indf1	equ	0xFE7
 22691                           postinc1	equ	0xFE6
 22692                           postdec1	equ	0xFE5
 22693                           fsr1h	equ	0xFE2
 22694                           fsr1l	equ	0xFE1
 22695                           indf2	equ	0xFDF
 22696                           postinc2	equ	0xFDE
 22697                           postdec2	equ	0xFDD
 22698                           plusw2	equ	0xFDB
 22699                           fsr2h	equ	0xFDA
 22700                           fsr2l	equ	0xFD9
 22701                           status	equ	0xFD8
 22702                           
 22703 ;; *************** function _Mdm_IsSmsReceived *****************
 22704 ;; Defined at:
 22705 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22706 ;; Parameters:    Size  Location     Type
 22707 ;;		None
 22708 ;; Auto vars:     Size  Location     Type
 22709 ;;  Ret             1   33[BANK0 ] enum E8928
 22710 ;; Return value:  Size  Location     Type
 22711 ;;                  1    wreg      enum E8928
 22712 ;; Registers used:
 22713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22714 ;; Tracked objects:
 22715 ;;		On entry : 0/0
 22716 ;;		On exit  : 0/0
 22717 ;;		Unchanged: 0/0
 22718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22722 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22723 ;;Total ram usage:        1 bytes
 22724 ;; Hardware stack levels used:    1
 22725 ;; Hardware stack levels required when called:   12
 22726 ;; This function calls:
 22727 ;;		_ReceiveEvt
 22728 ;; This function is called by:
 22729 ;;		_MyApp_Task
 22730 ;; This function uses a non-reentrant model
 22731 ;;
 22732                           
 22733                           	psect	text104
 22734  006054                     __ptext104:
 22735                           	opt stack 0
 22736  006054                     _Mdm_IsSmsReceived:
 22737                           	opt stack 15
 22738                           
 22739                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22740                           
 22741                           ;incstack = 0
 22742  006054  0E00               	movlw	0
 22743  006056  0100               	movlb	0	; () banked
 22744  006058  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22745                           
 22746                           ; BSR set to: 0
 22747                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22748  00605A  0EDE               	movlw	low _SmsEvent
 22749  00605C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22750  00605E  0E00               	movlw	high _SmsEvent
 22751  006060  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22752  006062  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 22753  006066  0900               	iorlw	0
 22754  006068  B4D8               	btfsc	status,2,c
 22755  00606A  D003               	goto	l1136
 22756                           
 22757                           ;mdm_gsm_gprs.c: 947: {
 22758                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22759  00606C  0E01               	movlw	1
 22760  00606E  0100               	movlb	0	; () banked
 22761  006070  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22762  006072                     l1136:
 22763                           
 22764                           ;mdm_gsm_gprs.c: 949: }
 22765                           ;mdm_gsm_gprs.c: 951: return Ret;
 22766  006072  0100               	movlb	0	; () banked
 22767  006074  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22768  006076  0012               	return	
 22769  006078                     __end_of_Mdm_IsSmsReceived:
 22770                           	opt stack 0
 22771                           tosu	equ	0xFFF
 22772                           tosh	equ	0xFFE
 22773                           tosl	equ	0xFFD
 22774                           pclath	equ	0xFFA
 22775                           tblptru	equ	0xFF8
 22776                           tblptrh	equ	0xFF7
 22777                           tblptrl	equ	0xFF6
 22778                           tablat	equ	0xFF5
 22779                           prodh	equ	0xFF4
 22780                           prodl	equ	0xFF3
 22781                           intcon	equ	0xFF2
 22782                           intcon2	equ	0xFF1
 22783                           intcon3	equ	0xFF0
 22784                           indf0	equ	0xFEF
 22785                           postinc0	equ	0xFEE
 22786                           plusw0	equ	0xFEB
 22787                           fsr0h	equ	0xFEA
 22788                           fsr0l	equ	0xFE9
 22789                           wreg	equ	0xFE8
 22790                           indf1	equ	0xFE7
 22791                           postinc1	equ	0xFE6
 22792                           postdec1	equ	0xFE5
 22793                           fsr1h	equ	0xFE2
 22794                           fsr1l	equ	0xFE1
 22795                           indf2	equ	0xFDF
 22796                           postinc2	equ	0xFDE
 22797                           postdec2	equ	0xFDD
 22798                           plusw2	equ	0xFDB
 22799                           fsr2h	equ	0xFDA
 22800                           fsr2l	equ	0xFD9
 22801                           status	equ	0xFD8
 22802                           
 22803 ;; *************** function _Mdm_IsRinging *****************
 22804 ;; Defined at:
 22805 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22806 ;; Parameters:    Size  Location     Type
 22807 ;;		None
 22808 ;; Auto vars:     Size  Location     Type
 22809 ;;  Ret             1   33[BANK0 ] enum E8924
 22810 ;; Return value:  Size  Location     Type
 22811 ;;                  1    wreg      enum E8924
 22812 ;; Registers used:
 22813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22814 ;; Tracked objects:
 22815 ;;		On entry : 0/0
 22816 ;;		On exit  : 0/0
 22817 ;;		Unchanged: 0/0
 22818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22823 ;;Total ram usage:        1 bytes
 22824 ;; Hardware stack levels used:    1
 22825 ;; Hardware stack levels required when called:   12
 22826 ;; This function calls:
 22827 ;;		_ReceiveEvt
 22828 ;; This function is called by:
 22829 ;;		_MyApp_Task
 22830 ;; This function uses a non-reentrant model
 22831 ;;
 22832                           
 22833                           	psect	text105
 22834  006078                     __ptext105:
 22835                           	opt stack 0
 22836  006078                     _Mdm_IsRinging:
 22837                           	opt stack 15
 22838                           
 22839                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 22840                           
 22841                           ; BSR set to: 0
 22842                           ;incstack = 0
 22843  006078  0E00               	movlw	0
 22844  00607A  0100               	movlb	0	; () banked
 22845  00607C  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22846                           
 22847                           ; BSR set to: 0
 22848                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 22849  00607E  0EE0               	movlw	low _RingEvent
 22850  006080  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22851  006082  0E00               	movlw	high _RingEvent
 22852  006084  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22853  006086  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 22854  00608A  0900               	iorlw	0
 22855  00608C  B4D8               	btfsc	status,2,c
 22856  00608E  D003               	goto	l1152
 22857                           
 22858                           ;mdm_gsm_gprs.c: 1030: {
 22859                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 22860  006090  0E01               	movlw	1
 22861  006092  0100               	movlb	0	; () banked
 22862  006094  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22863  006096                     l1152:
 22864                           
 22865                           ;mdm_gsm_gprs.c: 1032: }
 22866                           ;mdm_gsm_gprs.c: 1034: return Ret;
 22867  006096  0100               	movlb	0	; () banked
 22868  006098  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 22869  00609A  0012               	return	
 22870  00609C                     __end_of_Mdm_IsRinging:
 22871                           	opt stack 0
 22872                           tosu	equ	0xFFF
 22873                           tosh	equ	0xFFE
 22874                           tosl	equ	0xFFD
 22875                           pclath	equ	0xFFA
 22876                           tblptru	equ	0xFF8
 22877                           tblptrh	equ	0xFF7
 22878                           tblptrl	equ	0xFF6
 22879                           tablat	equ	0xFF5
 22880                           prodh	equ	0xFF4
 22881                           prodl	equ	0xFF3
 22882                           intcon	equ	0xFF2
 22883                           intcon2	equ	0xFF1
 22884                           intcon3	equ	0xFF0
 22885                           indf0	equ	0xFEF
 22886                           postinc0	equ	0xFEE
 22887                           plusw0	equ	0xFEB
 22888                           fsr0h	equ	0xFEA
 22889                           fsr0l	equ	0xFE9
 22890                           wreg	equ	0xFE8
 22891                           indf1	equ	0xFE7
 22892                           postinc1	equ	0xFE6
 22893                           postdec1	equ	0xFE5
 22894                           fsr1h	equ	0xFE2
 22895                           fsr1l	equ	0xFE1
 22896                           indf2	equ	0xFDF
 22897                           postinc2	equ	0xFDE
 22898                           postdec2	equ	0xFDD
 22899                           plusw2	equ	0xFDB
 22900                           fsr2h	equ	0xFDA
 22901                           fsr2l	equ	0xFD9
 22902                           status	equ	0xFD8
 22903                           
 22904 ;; *************** function _Mdm_HangPhoneCall *****************
 22905 ;; Defined at:
 22906 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22907 ;; Parameters:    Size  Location     Type
 22908 ;;		None
 22909 ;; Auto vars:     Size  Location     Type
 22910 ;;		None
 22911 ;; Return value:  Size  Location     Type
 22912 ;;                  1    wreg      void 
 22913 ;; Registers used:
 22914 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22915 ;; Tracked objects:
 22916 ;;		On entry : 0/0
 22917 ;;		On exit  : 0/0
 22918 ;;		Unchanged: 0/0
 22919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22924 ;;Total ram usage:        0 bytes
 22925 ;; Hardware stack levels used:    1
 22926 ;; Hardware stack levels required when called:   13
 22927 ;; This function calls:
 22928 ;;		_Uart_WriteConstString
 22929 ;; This function is called by:
 22930 ;;		_MyApp_Task
 22931 ;; This function uses a non-reentrant model
 22932 ;;
 22933                           
 22934                           	psect	text106
 22935  006352                     __ptext106:
 22936                           	opt stack 0
 22937  006352                     _Mdm_HangPhoneCall:
 22938                           	opt stack 14
 22939                           
 22940                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 22941                           
 22942                           ; BSR set to: 0
 22943                           ;incstack = 0
 22944  006352  0EEF               	movlw	low STR_6
 22945  006354  0100               	movlb	0	; () banked
 22946  006356  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22947  006358  0EFF               	movlw	high STR_6
 22948  00635A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22949  00635C  0E01               	movlw	1
 22950  00635E  EC4C  F02D         	call	_Uart_WriteConstString
 22951  006362  0012               	return		;funcret
 22952  006364                     __end_of_Mdm_HangPhoneCall:
 22953                           	opt stack 0
 22954                           tosu	equ	0xFFF
 22955                           tosh	equ	0xFFE
 22956                           tosl	equ	0xFFD
 22957                           pclath	equ	0xFFA
 22958                           tblptru	equ	0xFF8
 22959                           tblptrh	equ	0xFF7
 22960                           tblptrl	equ	0xFF6
 22961                           tablat	equ	0xFF5
 22962                           prodh	equ	0xFF4
 22963                           prodl	equ	0xFF3
 22964                           intcon	equ	0xFF2
 22965                           intcon2	equ	0xFF1
 22966                           intcon3	equ	0xFF0
 22967                           indf0	equ	0xFEF
 22968                           postinc0	equ	0xFEE
 22969                           plusw0	equ	0xFEB
 22970                           fsr0h	equ	0xFEA
 22971                           fsr0l	equ	0xFE9
 22972                           wreg	equ	0xFE8
 22973                           indf1	equ	0xFE7
 22974                           postinc1	equ	0xFE6
 22975                           postdec1	equ	0xFE5
 22976                           fsr1h	equ	0xFE2
 22977                           fsr1l	equ	0xFE1
 22978                           indf2	equ	0xFDF
 22979                           postinc2	equ	0xFDE
 22980                           postdec2	equ	0xFDD
 22981                           plusw2	equ	0xFDB
 22982                           fsr2h	equ	0xFDA
 22983                           fsr2l	equ	0xFD9
 22984                           status	equ	0xFD8
 22985                           
 22986 ;; *************** function _Led_SetLedBlinkTime *****************
 22987 ;; Defined at:
 22988 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 22989 ;; Parameters:    Size  Location     Type
 22990 ;;  Led             1    wreg     unsigned char 
 22991 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 22992 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 22993 ;; Auto vars:     Size  Location     Type
 22994 ;;  Led             1   33[BANK0 ] unsigned char 
 22995 ;; Return value:  Size  Location     Type
 22996 ;;                  1    wreg      void 
 22997 ;; Registers used:
 22998 ;;		wreg, status,2, status,0
 22999 ;; Tracked objects:
 23000 ;;		On entry : 0/0
 23001 ;;		On exit  : 0/0
 23002 ;;		Unchanged: 0/0
 23003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23007 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23008 ;;Total ram usage:        5 bytes
 23009 ;; Hardware stack levels used:    1
 23010 ;; Hardware stack levels required when called:   11
 23011 ;; This function calls:
 23012 ;;		Nothing
 23013 ;; This function is called by:
 23014 ;;		_MyApp_Task
 23015 ;; This function uses a non-reentrant model
 23016 ;;
 23017                           
 23018                           	psect	text107
 23019  00559A                     __ptext107:
 23020                           	opt stack 0
 23021  00559A                     _Led_SetLedBlinkTime:
 23022                           	opt stack 16
 23023                           
 23024                           ;incstack = 0
 23025                           ;Led_SetLedBlinkTime@Led stored from wreg
 23026  00559A  0100               	movlb	0	; () banked
 23027  00559C  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 23028                           
 23029                           ;led.c: 374: switch (Led)
 23030  00559E  D01B               	goto	l2113
 23031  0055A0                     l2114:
 23032                           
 23033                           ; BSR set to: 0
 23034                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 23035  0055A0  C07D  F371         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 23036  0055A4  C07E  F372         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 23037                           
 23038                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 23039  0055A8  C07F  F373         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 23040  0055AC  C080  F374         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 23041                           
 23042                           ;led.c: 379: break;
 23043  0055B0  0012               	return	
 23044  0055B2                     l2116:
 23045                           
 23046                           ; BSR set to: 0
 23047                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 23048  0055B2  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 23049  0055B6  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 23050                           
 23051                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 23052  0055BA  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 23053  0055BE  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 23054                           
 23055                           ;led.c: 384: break;
 23056  0055C2  0012               	return	
 23057  0055C4                     l2117:
 23058                           
 23059                           ; BSR set to: 0
 23060                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 23061  0055C4  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 23062  0055C8  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 23063                           
 23064                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 23065  0055CC  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 23066  0055D0  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 23067                           
 23068                           ; BSR set to: 0
 23069                           ;led.c: 393: }
 23070                           
 23071                           ; BSR set to: 0
 23072                           ;led.c: 392: break;
 23073                           
 23074                           ;led.c: 391: default:
 23075                           
 23076                           ;led.c: 389: break;
 23077  0055D4  0012               	return	
 23078  0055D6                     l2113:
 23079                           
 23080                           ; BSR set to: 0
 23081  0055D6  0100               	movlb	0	; () banked
 23082  0055D8  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 23083                           
 23084                           ; Switch size 1, requested type "space"
 23085                           ; Number of cases is 3, Range of values is 1 to 3
 23086                           ; switch strategies available:
 23087                           ; Name         Instructions Cycles
 23088                           ; simple_byte           10     6 (average)
 23089                           ;	Chosen strategy is simple_byte
 23090  0055DA  0A01               	xorlw	1	; case 1
 23091  0055DC  B4D8               	btfsc	status,2,c
 23092  0055DE  D7E0               	goto	l2114
 23093  0055E0  0A03               	xorlw	3	; case 2
 23094  0055E2  B4D8               	btfsc	status,2,c
 23095  0055E4  D7E6               	goto	l2116
 23096  0055E6  0A01               	xorlw	1	; case 3
 23097  0055E8  A4D8               	btfss	status,2,c
 23098  0055EA  0012               	return	
 23099  0055EC  D7EB               	goto	l2117
 23100  0055EE                     __end_of_Led_SetLedBlinkTime:
 23101                           	opt stack 0
 23102                           tosu	equ	0xFFF
 23103                           tosh	equ	0xFFE
 23104                           tosl	equ	0xFFD
 23105                           pclath	equ	0xFFA
 23106                           tblptru	equ	0xFF8
 23107                           tblptrh	equ	0xFF7
 23108                           tblptrl	equ	0xFF6
 23109                           tablat	equ	0xFF5
 23110                           prodh	equ	0xFF4
 23111                           prodl	equ	0xFF3
 23112                           intcon	equ	0xFF2
 23113                           intcon2	equ	0xFF1
 23114                           intcon3	equ	0xFF0
 23115                           indf0	equ	0xFEF
 23116                           postinc0	equ	0xFEE
 23117                           plusw0	equ	0xFEB
 23118                           fsr0h	equ	0xFEA
 23119                           fsr0l	equ	0xFE9
 23120                           wreg	equ	0xFE8
 23121                           indf1	equ	0xFE7
 23122                           postinc1	equ	0xFE6
 23123                           postdec1	equ	0xFE5
 23124                           fsr1h	equ	0xFE2
 23125                           fsr1l	equ	0xFE1
 23126                           indf2	equ	0xFDF
 23127                           postinc2	equ	0xFDE
 23128                           postdec2	equ	0xFDD
 23129                           plusw2	equ	0xFDB
 23130                           fsr2h	equ	0xFDA
 23131                           fsr2l	equ	0xFD9
 23132                           status	equ	0xFD8
 23133                           
 23134 ;; *************** function _GetCallerNumber *****************
 23135 ;; Defined at:
 23136 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23137 ;; Parameters:    Size  Location     Type
 23138 ;;		None
 23139 ;; Auto vars:     Size  Location     Type
 23140 ;;		None
 23141 ;; Return value:  Size  Location     Type
 23142 ;;                  2   35[BANK0 ] PTR unsigned char 
 23143 ;; Registers used:
 23144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23145 ;; Tracked objects:
 23146 ;;		On entry : 0/0
 23147 ;;		On exit  : 0/0
 23148 ;;		Unchanged: 0/0
 23149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23153 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23154 ;;Total ram usage:        2 bytes
 23155 ;; Hardware stack levels used:    1
 23156 ;; Hardware stack levels required when called:   12
 23157 ;; This function calls:
 23158 ;;		_ClearBuffer
 23159 ;;		_ReceiveEvt
 23160 ;; This function is called by:
 23161 ;;		_MyApp_Task
 23162 ;; This function uses a non-reentrant model
 23163 ;;
 23164                           
 23165                           	psect	text108
 23166  005D42                     __ptext108:
 23167                           	opt stack 0
 23168  005D42                     _GetCallerNumber:
 23169                           	opt stack 15
 23170                           
 23171                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23172                           
 23173                           ; BSR set to: 0
 23174                           ;incstack = 0
 23175  005D42  0EDF               	movlw	low _ClipEvent
 23176  005D44  0100               	movlb	0	; () banked
 23177  005D46  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23178  005D48  0E00               	movlw	high _ClipEvent
 23179  005D4A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23180  005D4C  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 23181  005D50  0900               	iorlw	0
 23182  005D52  A4D8               	btfss	status,2,c
 23183  005D54  D00B               	goto	l1156
 23184                           
 23185                           ;mdm_gsm_gprs.c: 1040: {
 23186                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23187  005D56  0EB8               	movlw	low _callerNumber
 23188  005D58  0100               	movlb	0	; () banked
 23189  005D5A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23190  005D5C  0E04               	movlw	high _callerNumber
 23191  005D5E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23192  005D60  0E00               	movlw	0
 23193  005D62  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23194  005D64  0E0D               	movlw	13
 23195  005D66  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23196  005D68  ECBC  F02E         	call	_ClearBuffer	;wreg free
 23197  005D6C                     l1156:
 23198                           
 23199                           ;mdm_gsm_gprs.c: 1042: }
 23200                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23201  005D6C  0EB8               	movlw	low _callerNumber
 23202  005D6E  0100               	movlb	0	; () banked
 23203  005D70  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23204  005D72  0E04               	movlw	high _callerNumber
 23205  005D74  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23206  005D76  0012               	return	
 23207  005D78                     __end_of_GetCallerNumber:
 23208                           	opt stack 0
 23209                           tosu	equ	0xFFF
 23210                           tosh	equ	0xFFE
 23211                           tosl	equ	0xFFD
 23212                           pclath	equ	0xFFA
 23213                           tblptru	equ	0xFF8
 23214                           tblptrh	equ	0xFF7
 23215                           tblptrl	equ	0xFF6
 23216                           tablat	equ	0xFF5
 23217                           prodh	equ	0xFF4
 23218                           prodl	equ	0xFF3
 23219                           intcon	equ	0xFF2
 23220                           intcon2	equ	0xFF1
 23221                           intcon3	equ	0xFF0
 23222                           indf0	equ	0xFEF
 23223                           postinc0	equ	0xFEE
 23224                           plusw0	equ	0xFEB
 23225                           fsr0h	equ	0xFEA
 23226                           fsr0l	equ	0xFE9
 23227                           wreg	equ	0xFE8
 23228                           indf1	equ	0xFE7
 23229                           postinc1	equ	0xFE6
 23230                           postdec1	equ	0xFE5
 23231                           fsr1h	equ	0xFE2
 23232                           fsr1l	equ	0xFE1
 23233                           indf2	equ	0xFDF
 23234                           postinc2	equ	0xFDE
 23235                           postdec2	equ	0xFDD
 23236                           plusw2	equ	0xFDB
 23237                           fsr2h	equ	0xFDA
 23238                           fsr2l	equ	0xFD9
 23239                           status	equ	0xFD8
 23240                           
 23241 ;; *************** function _UartSetConfig *****************
 23242 ;; Defined at:
 23243 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23244 ;; Parameters:    Size  Location     Type
 23245 ;;		None
 23246 ;; Auto vars:     Size  Location     Type
 23247 ;;		None
 23248 ;; Return value:  Size  Location     Type
 23249 ;;                  1    wreg      void 
 23250 ;; Registers used:
 23251 ;;		wreg, status,2
 23252 ;; Tracked objects:
 23253 ;;		On entry : 0/0
 23254 ;;		On exit  : 0/0
 23255 ;;		Unchanged: 0/0
 23256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23261 ;;Total ram usage:        0 bytes
 23262 ;; Hardware stack levels used:    1
 23263 ;; Hardware stack levels required when called:   11
 23264 ;; This function calls:
 23265 ;;		Nothing
 23266 ;; This function is called by:
 23267 ;;		_Mdm_MainTask
 23268 ;; This function uses a non-reentrant model
 23269 ;;
 23270                           
 23271                           	psect	text109
 23272  00533E                     __ptext109:
 23273                           	opt stack 0
 23274  00533E                     _UartSetConfig:
 23275                           	opt stack 16
 23276                           
 23277                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 23278                           
 23279                           ; BSR set to: 0
 23280                           ;incstack = 0
 23281  00533E  0E01               	movlw	1
 23282  005340  0103               	movlb	3	; () banked
 23283  005342  6F26               	movwf	_UartConfig& (0+255),b
 23284                           
 23285                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 23286  005344  0E00               	movlw	0
 23287  005346  6F27               	movwf	(_UartConfig+1)& (0+255),b
 23288                           
 23289                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 23290  005348  0E00               	movlw	0
 23291  00534A  6F28               	movwf	(_UartConfig+2)& (0+255),b
 23292                           
 23293                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 23294  00534C  0E00               	movlw	0
 23295  00534E  6F29               	movwf	(_UartConfig+3)& (0+255),b
 23296                           
 23297                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 23298  005350  0E00               	movlw	0
 23299  005352  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 23300                           
 23301                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 23302  005354  0E00               	movlw	0
 23303  005356  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 23304                           
 23305                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 23306  005358  0E01               	movlw	1
 23307  00535A  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 23308                           
 23309                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 23310  00535C  0E01               	movlw	1
 23311  00535E  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 23312                           
 23313                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 23314  005360  0E00               	movlw	0
 23315  005362  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 23316                           
 23317                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 23318  005364  0E00               	movlw	0
 23319  005366  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 23320                           
 23321                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 23322  005368  0E00               	movlw	0
 23323  00536A  6F30               	movwf	(_UartConfig+10)& (0+255),b
 23324                           
 23325                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 23326  00536C  0E00               	movlw	0
 23327  00536E  6F31               	movwf	(_UartConfig+11)& (0+255),b
 23328                           
 23329                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 23330  005370  0E01               	movlw	1
 23331  005372  6F32               	movwf	(_UartConfig+12)& (0+255),b
 23332                           
 23333                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 23334  005374  0E00               	movlw	0
 23335  005376  6F33               	movwf	(_UartConfig+13)& (0+255),b
 23336  005378  0E6C               	movlw	108
 23337  00537A  6F34               	movwf	(_UartConfig+14)& (0+255),b
 23338  00537C  0EDC               	movlw	220
 23339  00537E  6F35               	movwf	(_UartConfig+15)& (0+255),b
 23340  005380  0E02               	movlw	2
 23341  005382  6F36               	movwf	(_UartConfig+16)& (0+255),b
 23342                           
 23343                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 23344  005384  0E80               	movlw	128
 23345  005386  6F37               	movwf	(_UartConfig+17)& (0+255),b
 23346  005388  0E25               	movlw	37
 23347  00538A  6F38               	movwf	(_UartConfig+18)& (0+255),b
 23348  00538C  0E00               	movlw	0
 23349  00538E  6F39               	movwf	(_UartConfig+19)& (0+255),b
 23350  005390  0E00               	movlw	0
 23351  005392  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 23352                           
 23353                           ; BSR set to: 3
 23354  005394  0012               	return		;funcret
 23355  005396                     __end_of_UartSetConfig:
 23356                           	opt stack 0
 23357                           tosu	equ	0xFFF
 23358                           tosh	equ	0xFFE
 23359                           tosl	equ	0xFFD
 23360                           pclath	equ	0xFFA
 23361                           tblptru	equ	0xFF8
 23362                           tblptrh	equ	0xFF7
 23363                           tblptrl	equ	0xFF6
 23364                           tablat	equ	0xFF5
 23365                           prodh	equ	0xFF4
 23366                           prodl	equ	0xFF3
 23367                           intcon	equ	0xFF2
 23368                           intcon2	equ	0xFF1
 23369                           intcon3	equ	0xFF0
 23370                           indf0	equ	0xFEF
 23371                           postinc0	equ	0xFEE
 23372                           plusw0	equ	0xFEB
 23373                           fsr0h	equ	0xFEA
 23374                           fsr0l	equ	0xFE9
 23375                           wreg	equ	0xFE8
 23376                           indf1	equ	0xFE7
 23377                           postinc1	equ	0xFE6
 23378                           postdec1	equ	0xFE5
 23379                           fsr1h	equ	0xFE2
 23380                           fsr1l	equ	0xFE1
 23381                           indf2	equ	0xFDF
 23382                           postinc2	equ	0xFDE
 23383                           postdec2	equ	0xFDD
 23384                           plusw2	equ	0xFDB
 23385                           fsr2h	equ	0xFDA
 23386                           fsr2l	equ	0xFD9
 23387                           status	equ	0xFD8
 23388                           
 23389 ;; *************** function _TurnOnModem *****************
 23390 ;; Defined at:
 23391 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23392 ;; Parameters:    Size  Location     Type
 23393 ;;		None
 23394 ;; Auto vars:     Size  Location     Type
 23395 ;;		None
 23396 ;; Return value:  Size  Location     Type
 23397 ;;                  1    wreg      void 
 23398 ;; Registers used:
 23399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23400 ;; Tracked objects:
 23401 ;;		On entry : 0/0
 23402 ;;		On exit  : 0/0
 23403 ;;		Unchanged: 0/0
 23404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23409 ;;Total ram usage:        0 bytes
 23410 ;; Hardware stack levels used:    1
 23411 ;; Hardware stack levels required when called:   12
 23412 ;; This function calls:
 23413 ;;		_GenerateEvt
 23414 ;; This function is called by:
 23415 ;;		_Mdm_MainTask
 23416 ;; This function uses a non-reentrant model
 23417 ;;
 23418                           
 23419                           	psect	text110
 23420  005942                     __ptext110:
 23421                           	opt stack 0
 23422  005942                     _TurnOnModem:
 23423                           	opt stack 15
 23424                           
 23425                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 23426                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 23427                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 23428                           
 23429                           ; BSR set to: 3
 23430                           ;incstack = 0
 23431  005942  D019               	goto	l1009
 23432  005944                     
 23433                           ;mdm_gsm_gprs.c: 385: Counter++;
 23434  005944  0102               	movlb	2	; () banked
 23435  005946  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 23436  005948  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 23437                           
 23438                           ; BSR set to: 2
 23439                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 23440  00594A  0EB8               	movlw	184
 23441  00594C  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 23442  00594E  0E0B               	movlw	11
 23443  005950  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 23444  005952  A0D8               	btfss	status,0,c
 23445  005954  0012               	return	
 23446                           
 23447                           ; BSR set to: 2
 23448                           ;mdm_gsm_gprs.c: 388: {
 23449                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 23450  005956  0E01               	movlw	1
 23451  005958  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 23452                           
 23453                           ; BSR set to: 2
 23454                           ;mdm_gsm_gprs.c: 391: }
 23455                           ;mdm_gsm_gprs.c: 392: break;
 23456  00595A  0012               	return	
 23457  00595C                     
 23458                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 23459                           
 23460                           ; BSR set to: 2
 23461  00595C  0EE2               	movlw	low _MdmOnOffPulseRequest
 23462  00595E  0100               	movlb	0	; () banked
 23463  005960  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23464  005962  0E00               	movlw	high _MdmOnOffPulseRequest
 23465  005964  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23466  005966  EC5E  F031         	call	_GenerateEvt	;wreg free
 23467                           
 23468                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 23469  00596A  0E01               	movlw	1
 23470  00596C  0100               	movlb	0	; () banked
 23471  00596E  6FD2               	movwf	_MdmStatus& (0+255),b
 23472                           
 23473                           ; BSR set to: 0
 23474                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 23475  005970  0E02               	movlw	2
 23476  005972  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 23477                           
 23478                           ; BSR set to: 0
 23479                           ;mdm_gsm_gprs.c: 408: }
 23480                           
 23481                           ; BSR set to: 0
 23482                           ;mdm_gsm_gprs.c: 407: break;
 23483                           
 23484                           ;mdm_gsm_gprs.c: 406: default:
 23485                           
 23486                           ; BSR set to: 0
 23487                           ;mdm_gsm_gprs.c: 404: break;
 23488                           
 23489                           ;mdm_gsm_gprs.c: 403: case Stop:
 23490                           
 23491                           ;mdm_gsm_gprs.c: 401: break;
 23492  005974  0012               	return	
 23493  005976                     l1009:
 23494                           
 23495                           ; BSR set to: 0
 23496  005976  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 23497                           
 23498                           ; Switch size 1, requested type "space"
 23499                           ; Number of cases is 3, Range of values is 0 to 2
 23500                           ; switch strategies available:
 23501                           ; Name         Instructions Cycles
 23502                           ; simple_byte           10     6 (average)
 23503                           ;	Chosen strategy is simple_byte
 23504  005978  0A00               	xorlw	0	; case 0
 23505  00597A  B4D8               	btfsc	status,2,c
 23506  00597C  D7E3               	goto	l1010
 23507  00597E  0A01               	xorlw	1	; case 1
 23508  005980  B4D8               	btfsc	status,2,c
 23509  005982  D7EC               	goto	l1013
 23510  005984  0A03               	xorlw	3	; case 2
 23511  005986  0012               	return	
 23512  005988                     __end_of_TurnOnModem:
 23513                           	opt stack 0
 23514                           tosu	equ	0xFFF
 23515                           tosh	equ	0xFFE
 23516                           tosl	equ	0xFFD
 23517                           pclath	equ	0xFFA
 23518                           tblptru	equ	0xFF8
 23519                           tblptrh	equ	0xFF7
 23520                           tblptrl	equ	0xFF6
 23521                           tablat	equ	0xFF5
 23522                           prodh	equ	0xFF4
 23523                           prodl	equ	0xFF3
 23524                           intcon	equ	0xFF2
 23525                           intcon2	equ	0xFF1
 23526                           intcon3	equ	0xFF0
 23527                           indf0	equ	0xFEF
 23528                           postinc0	equ	0xFEE
 23529                           plusw0	equ	0xFEB
 23530                           fsr0h	equ	0xFEA
 23531                           fsr0l	equ	0xFE9
 23532                           wreg	equ	0xFE8
 23533                           indf1	equ	0xFE7
 23534                           postinc1	equ	0xFE6
 23535                           postdec1	equ	0xFE5
 23536                           fsr1h	equ	0xFE2
 23537                           fsr1l	equ	0xFE1
 23538                           indf2	equ	0xFDF
 23539                           postinc2	equ	0xFDE
 23540                           postdec2	equ	0xFDD
 23541                           plusw2	equ	0xFDB
 23542                           fsr2h	equ	0xFDA
 23543                           fsr2l	equ	0xFD9
 23544                           status	equ	0xFD8
 23545                           
 23546 ;; *************** function _SendSmsSm *****************
 23547 ;; Defined at:
 23548 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23549 ;; Parameters:    Size  Location     Type
 23550 ;;		None
 23551 ;; Auto vars:     Size  Location     Type
 23552 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 23553 ;; Return value:  Size  Location     Type
 23554 ;;                  1    wreg      void 
 23555 ;; Registers used:
 23556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23557 ;; Tracked objects:
 23558 ;;		On entry : 0/0
 23559 ;;		On exit  : 0/0
 23560 ;;		Unchanged: 0/0
 23561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23563 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23565 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23566 ;;Total ram usage:       52 bytes
 23567 ;; Hardware stack levels used:    1
 23568 ;; Hardware stack levels required when called:   14
 23569 ;; This function calls:
 23570 ;;		_OsTmr_GetTimerStatus
 23571 ;;		_OsTmr_StartTimer
 23572 ;;		_ReceiveEvt
 23573 ;;		_StringCopy
 23574 ;;		_Uart_WriteStringLen
 23575 ;; This function is called by:
 23576 ;;		_Mdm_MainTask
 23577 ;; This function uses a non-reentrant model
 23578 ;;
 23579                           
 23580                           	psect	text111
 23581  0019F2                     __ptext111:
 23582                           	opt stack 0
 23583  0019F2                     _SendSmsSm:
 23584                           	opt stack 13
 23585                           
 23586                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 23587                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 23588                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 23589                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 23590                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 23591                           
 23592                           ;incstack = 0
 23593  0019F2  0E03               	movlw	3
 23594  0019F4  0100               	movlb	0	; () banked
 23595  0019F6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 23596  0019F8  A4D8               	btfss	status,2,c
 23597  0019FA  0012               	return	
 23598  0019FC  D0C1               	goto	l1091
 23599  0019FE                     
 23600                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 23601                           
 23602                           ; BSR set to: 0
 23603  0019FE  0EE1               	movlw	low _SendSmsEvent
 23604  001A00  0100               	movlb	0	; () banked
 23605  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23606  001A04  0E00               	movlw	high _SendSmsEvent
 23607  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23608  001A08  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 23609  001A0C  0900               	iorlw	0
 23610  001A0E  B4D8               	btfsc	status,2,c
 23611  001A10  0012               	return	
 23612                           
 23613                           ;mdm_gsm_gprs.c: 671: {
 23614                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 23615  001A12  0E01               	movlw	1
 23616  001A14  0101               	movlb	1	; () banked
 23617  001A16  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23618                           
 23619                           ; BSR set to: 1
 23620                           ;mdm_gsm_gprs.c: 674: }
 23621                           ;mdm_gsm_gprs.c: 675: break;
 23622  001A18  0012               	return	
 23623  001A1A                     
 23624                           ; BSR set to: 1
 23625                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 23626                           
 23627                           ; BSR set to: 1
 23628  001A1A  0ECD               	movlw	low STR_5
 23629  001A1C  0100               	movlb	0	; () banked
 23630  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23631  001A20  0EFF               	movlw	high STR_5
 23632  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23633  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 23634  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23635  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 23636  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23637  001A2C  0E00               	movlw	0
 23638  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23639  001A30  0E09               	movlw	9
 23640  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 23641  001A34  ECE2  F028         	call	_StringCopy	;wreg free
 23642                           
 23643                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 23644  001A38  0E95               	movlw	low _PhoneNumber
 23645  001A3A  0100               	movlb	0	; () banked
 23646  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23647  001A3E  0E04               	movlw	high _PhoneNumber
 23648  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23649  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 23650  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23651  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 23652  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23653  001A4A  C0D3  F081         	movff	_PhoneNumbLen,StringCopy@Len
 23654  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23655  001A50  ECE2  F028         	call	_StringCopy	;wreg free
 23656                           
 23657                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 23658  001A54  0100               	movlb	0	; () banked
 23659  001A56  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23660  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23661  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23662  001A5C  0E09               	movlw	9
 23663  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23664  001A60  0E00               	movlw	0
 23665  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23666  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 23667  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23668  001A68  6ED9               	movwf	fsr2l,c
 23669  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 23670  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23671  001A6E  6EDA               	movwf	fsr2h,c
 23672  001A70  0E22               	movlw	34
 23673  001A72  6EDF               	movwf	indf2,c
 23674                           
 23675                           ; BSR set to: 0
 23676                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 23677  001A74  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23678  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23679  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23680  001A7A  0E0A               	movlw	10
 23681  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23682  001A7E  0E00               	movlw	0
 23683  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23684  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 23685  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23686  001A86  6ED9               	movwf	fsr2l,c
 23687  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 23688  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23689  001A8C  6EDA               	movwf	fsr2h,c
 23690  001A8E  0E0D               	movlw	13
 23691  001A90  6EDF               	movwf	indf2,c
 23692                           
 23693                           ; BSR set to: 0
 23694                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 23695  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 23696  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23697  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 23698  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23699  001A9A  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23700  001A9C  0F0B               	addlw	11
 23701  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23702  001AA0  0E01               	movlw	1
 23703  001AA2  ECAF  F02D         	call	_Uart_WriteStringLen
 23704                           
 23705                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 23706  001AA6  0EE6               	movlw	low SendSmsSm@SwTimer
 23707  001AA8  0100               	movlb	0	; () banked
 23708  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23709  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 23710  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23711  001AB0  0EC4               	movlw	196
 23712  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23713  001AB4  0E09               	movlw	9
 23714  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23715  001AB8  0E00               	movlw	0
 23716  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23717  001ABC  0E00               	movlw	0
 23718  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23719  001AC0  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 23720                           
 23721                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 23722  001AC4  0E05               	movlw	5
 23723  001AC6  0101               	movlb	1	; () banked
 23724  001AC8  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23725                           
 23726                           ; BSR set to: 1
 23727                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 23728  001ACA  0E02               	movlw	2
 23729  001ACC  6FF1               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 23730                           
 23731                           ;mdm_gsm_gprs.c: 691: break;
 23732  001ACE  0012               	return	
 23733  001AD0                     
 23734                           ; BSR set to: 1
 23735                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 23736                           
 23737                           ; BSR set to: 1
 23738  001AD0  0E0A               	movlw	10
 23739  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 23740                           
 23741                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 23742  001AD4  0E0D               	movlw	13
 23743  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 23744                           
 23745                           ; BSR set to: 1
 23746                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 23747  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 23748  001ADA  0100               	movlb	0	; () banked
 23749  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23750  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 23751  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23752  001AE2  0E02               	movlw	2
 23753  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23754  001AE6  0E01               	movlw	1
 23755  001AE8  ECAF  F02D         	call	_Uart_WriteStringLen
 23756                           
 23757                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 23758  001AEC  0E03               	movlw	3
 23759  001AEE  0101               	movlb	1	; () banked
 23760  001AF0  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23761                           
 23762                           ;mdm_gsm_gprs.c: 701: break;
 23763  001AF2  0012               	return	
 23764  001AF4                     
 23765                           ; BSR set to: 1
 23766                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 23767                           
 23768                           ; BSR set to: 1
 23769  001AF4  0E3C               	movlw	low _NewStringReceived
 23770  001AF6  0100               	movlb	0	; () banked
 23771  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23772  001AFA  0E00               	movlw	high _NewStringReceived
 23773  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23774  001AFE  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 23775  001B02  0900               	iorlw	0
 23776  001B04  B4D8               	btfsc	status,2,c
 23777  001B06  0012               	return	
 23778                           
 23779                           ;mdm_gsm_gprs.c: 706: {
 23780                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 23781  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 23782  001B0C  0A3E               	xorlw	62
 23783  001B0E  A4D8               	btfss	status,2,c
 23784  001B10  0012               	return	
 23785                           
 23786                           ;mdm_gsm_gprs.c: 709: {
 23787                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 23788  001B12  0E04               	movlw	4
 23789  001B14  0101               	movlb	1	; () banked
 23790  001B16  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23791                           
 23792                           ; BSR set to: 1
 23793                           ;mdm_gsm_gprs.c: 712: }
 23794                           ;mdm_gsm_gprs.c: 713: }
 23795                           ;mdm_gsm_gprs.c: 714: break;
 23796                           
 23797                           ; BSR set to: 1
 23798  001B18  0012               	return	
 23799  001B1A                     
 23800                           ; BSR set to: 1
 23801                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 23802                           
 23803                           ; BSR set to: 1
 23804  001B1A  0E72               	movlw	low _MessageText
 23805  001B1C  0100               	movlb	0	; () banked
 23806  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23807  001B20  0E05               	movlw	high _MessageText
 23808  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23809  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 23810  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23811  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 23812  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23813  001B2C  C0D4  F081         	movff	_SmsLen,StringCopy@Len
 23814  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23815  001B32  ECE2  F028         	call	_StringCopy	;wreg free
 23816                           
 23817                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 23818  001B36  0100               	movlb	0	; () banked
 23819  001B38  51D4               	movf	_SmsLen& (0+255),w,b
 23820  001B3A  0D01               	mullw	1
 23821  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 23822  001B3E  24F3               	addwf	prodl,w,c
 23823  001B40  6ED9               	movwf	fsr2l,c
 23824  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 23825  001B44  20F4               	addwfc	prodh,w,c
 23826  001B46  6EDA               	movwf	fsr2h,c
 23827  001B48  0E1A               	movlw	26
 23828  001B4A  6EDF               	movwf	indf2,c
 23829                           
 23830                           ; BSR set to: 0
 23831                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 23832  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 23833  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23834  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 23835  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23836  001B54  29D4               	incf	_SmsLen& (0+255),w,b
 23837  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23838  001B58  0E01               	movlw	1
 23839  001B5A  ECAF  F02D         	call	_Uart_WriteStringLen
 23840                           
 23841                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 23842  001B5E  0E00               	movlw	0
 23843  001B60  0101               	movlb	1	; () banked
 23844  001B62  6FF2               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23845                           
 23846                           ;mdm_gsm_gprs.c: 725: break;
 23847  001B64  0012               	return	
 23848  001B66                     
 23849                           ; BSR set to: 1
 23850                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 23851                           
 23852                           ; BSR set to: 1
 23853  001B66  0EE6               	movlw	low SendSmsSm@SwTimer
 23854  001B68  0100               	movlb	0	; () banked
 23855  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23856  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 23857  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23858  001B70  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 23859  001B74  06E8               	decf	wreg,f,c
 23860  001B76  A4D8               	btfss	status,2,c
 23861  001B78  0012               	return	
 23862                           
 23863                           ;mdm_gsm_gprs.c: 730: {
 23864                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 23865  001B7A  C1F1  F1F2         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 23866                           
 23867                           ;mdm_gsm_gprs.c: 738: }
 23868                           
 23869                           ;mdm_gsm_gprs.c: 737: break;
 23870                           
 23871                           ;mdm_gsm_gprs.c: 736: default:
 23872                           
 23873                           ;mdm_gsm_gprs.c: 733: }
 23874                           ;mdm_gsm_gprs.c: 734: break;
 23875  001B7E  0012               	return	
 23876  001B80                     l1091:
 23877  001B80  0101               	movlb	1	; () banked
 23878  001B82  51F2               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 23879                           
 23880                           ; Switch size 1, requested type "space"
 23881                           ; Number of cases is 6, Range of values is 0 to 5
 23882                           ; switch strategies available:
 23883                           ; Name         Instructions Cycles
 23884                           ; simple_byte           19    10 (average)
 23885                           ;	Chosen strategy is simple_byte
 23886  001B84  0A00               	xorlw	0	; case 0
 23887  001B86  B4D8               	btfsc	status,2,c
 23888  001B88  D73A               	goto	l1092
 23889  001B8A  0A01               	xorlw	1	; case 1
 23890  001B8C  B4D8               	btfsc	status,2,c
 23891  001B8E  D745               	goto	l1095
 23892  001B90  0A03               	xorlw	3	; case 2
 23893  001B92  B4D8               	btfsc	status,2,c
 23894  001B94  D79D               	goto	l1096
 23895  001B96  0A01               	xorlw	1	; case 3
 23896  001B98  B4D8               	btfsc	status,2,c
 23897  001B9A  D7AC               	goto	l1097
 23898  001B9C  0A07               	xorlw	7	; case 4
 23899  001B9E  B4D8               	btfsc	status,2,c
 23900  001BA0  D7BC               	goto	l1100
 23901  001BA2  0A01               	xorlw	1	; case 5
 23902  001BA4  A4D8               	btfss	status,2,c
 23903                           
 23904                           ; BSR set to: 1
 23905  001BA6  0012               	return	
 23906  001BA8  D7DE               	goto	l1101
 23907  001BAA                     __end_of_SendSmsSm:
 23908                           	opt stack 0
 23909                           tosu	equ	0xFFF
 23910                           tosh	equ	0xFFE
 23911                           tosl	equ	0xFFD
 23912                           pclath	equ	0xFFA
 23913                           tblptru	equ	0xFF8
 23914                           tblptrh	equ	0xFF7
 23915                           tblptrl	equ	0xFF6
 23916                           tablat	equ	0xFF5
 23917                           prodh	equ	0xFF4
 23918                           prodl	equ	0xFF3
 23919                           intcon	equ	0xFF2
 23920                           intcon2	equ	0xFF1
 23921                           intcon3	equ	0xFF0
 23922                           indf0	equ	0xFEF
 23923                           postinc0	equ	0xFEE
 23924                           plusw0	equ	0xFEB
 23925                           fsr0h	equ	0xFEA
 23926                           fsr0l	equ	0xFE9
 23927                           wreg	equ	0xFE8
 23928                           indf1	equ	0xFE7
 23929                           postinc1	equ	0xFE6
 23930                           postdec1	equ	0xFE5
 23931                           fsr1h	equ	0xFE2
 23932                           fsr1l	equ	0xFE1
 23933                           indf2	equ	0xFDF
 23934                           postinc2	equ	0xFDE
 23935                           postdec2	equ	0xFDD
 23936                           plusw2	equ	0xFDB
 23937                           fsr2h	equ	0xFDA
 23938                           fsr2l	equ	0xFD9
 23939                           status	equ	0xFD8
 23940                           
 23941 ;; *************** function _Uart_WriteStringLen *****************
 23942 ;; Defined at:
 23943 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;  Module          1    wreg     unsigned char 
 23946 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 23947 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 23948 ;;  Len             1   34[BANK0 ] unsigned char 
 23949 ;; Auto vars:     Size  Location     Type
 23950 ;;  Module          1   36[BANK0 ] unsigned char 
 23951 ;;  Index           1   35[BANK0 ] unsigned char 
 23952 ;; Return value:  Size  Location     Type
 23953 ;;                  1    wreg      void 
 23954 ;; Registers used:
 23955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23956 ;; Tracked objects:
 23957 ;;		On entry : 0/0
 23958 ;;		On exit  : 0/0
 23959 ;;		Unchanged: 0/0
 23960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23961 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23964 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23965 ;;Total ram usage:        5 bytes
 23966 ;; Hardware stack levels used:    1
 23967 ;; Hardware stack levels required when called:   12
 23968 ;; This function calls:
 23969 ;;		_UartTxBufferStatus
 23970 ;;		_UartWriteByte
 23971 ;; This function is called by:
 23972 ;;		_SendSmsSm
 23973 ;;		_GsmGprsTerminal
 23974 ;; This function uses a non-reentrant model
 23975 ;;
 23976                           
 23977                           	psect	text112
 23978  005B5E                     __ptext112:
 23979                           	opt stack 0
 23980  005B5E                     _Uart_WriteStringLen:
 23981                           	opt stack 14
 23982                           
 23983                           ;incstack = 0
 23984                           ;Uart_WriteStringLen@Module stored from wreg
 23985  005B5E  0100               	movlb	0	; () banked
 23986  005B60  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 23987                           
 23988                           ;uart_drv.c: 544: UINT8 Index;
 23989                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 23990  005B62  0E00               	movlw	0
 23991  005B64  0100               	movlb	0	; () banked
 23992  005B66  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 23993  005B68  D015               	goto	l715
 23994  005B6A                     
 23995                           ; BSR set to: 0
 23996                           ;uart_drv.c: 547: {
 23997                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 23998                           
 23999                           ; BSR set to: 0
 24000  005B6A  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 24001  005B6E  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 24002  005B72  50DF               	movf	indf2,w,c
 24003  005B74  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 24004  005B76  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 24005  005B78  ECD6  F030         	call	_UartWriteByte
 24006                           
 24007                           ;uart_drv.c: 551: StringToWrite++;
 24008  005B7C  0100               	movlb	0	; () banked
 24009  005B7E  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 24010  005B80  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 24011  005B82                     
 24012                           ; BSR set to: 0
 24013                           
 24014                           ; BSR set to: 0
 24015  005B82  0100               	movlb	0	; () banked
 24016  005B84  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 24017  005B86  ECC2  F02B         	call	_UartTxBufferStatus
 24018  005B8A  06E8               	decf	wreg,f,c
 24019  005B8C  B4D8               	btfsc	status,2,c
 24020  005B8E  D7F9               	goto	l718
 24021  005B90  0100               	movlb	0	; () banked
 24022  005B92  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 24023  005B94                     l715:
 24024                           
 24025                           ; BSR set to: 0
 24026                           
 24027                           ; BSR set to: 0
 24028  005B94  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 24029  005B96  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 24030  005B98  B0D8               	btfsc	status,0,c
 24031  005B9A  0012               	return	
 24032  005B9C  D7E6               	goto	l716
 24033  005B9E                     __end_of_Uart_WriteStringLen:
 24034                           	opt stack 0
 24035                           tosu	equ	0xFFF
 24036                           tosh	equ	0xFFE
 24037                           tosl	equ	0xFFD
 24038                           pclath	equ	0xFFA
 24039                           tblptru	equ	0xFF8
 24040                           tblptrh	equ	0xFF7
 24041                           tblptrl	equ	0xFF6
 24042                           tablat	equ	0xFF5
 24043                           prodh	equ	0xFF4
 24044                           prodl	equ	0xFF3
 24045                           intcon	equ	0xFF2
 24046                           intcon2	equ	0xFF1
 24047                           intcon3	equ	0xFF0
 24048                           indf0	equ	0xFEF
 24049                           postinc0	equ	0xFEE
 24050                           plusw0	equ	0xFEB
 24051                           fsr0h	equ	0xFEA
 24052                           fsr0l	equ	0xFE9
 24053                           wreg	equ	0xFE8
 24054                           indf1	equ	0xFE7
 24055                           postinc1	equ	0xFE6
 24056                           postdec1	equ	0xFE5
 24057                           fsr1h	equ	0xFE2
 24058                           fsr1l	equ	0xFE1
 24059                           indf2	equ	0xFDF
 24060                           postinc2	equ	0xFDE
 24061                           postdec2	equ	0xFDD
 24062                           plusw2	equ	0xFDB
 24063                           fsr2h	equ	0xFDA
 24064                           fsr2l	equ	0xFD9
 24065                           status	equ	0xFD8
 24066                           
 24067 ;; *************** function _ModemEvtParser *****************
 24068 ;; Defined at:
 24069 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24070 ;; Parameters:    Size  Location     Type
 24071 ;;		None
 24072 ;; Auto vars:     Size  Location     Type
 24073 ;;  CallReadyStr   10   48[BANK0 ] unsigned char [10]
 24074 ;;  SmsString       5   63[BANK0 ] unsigned char [5]
 24075 ;;  ClipString      5   58[BANK0 ] unsigned char [5]
 24076 ;;  RingString      4   68[BANK0 ] unsigned char [4]
 24077 ;;  CompareIdx      1   73[BANK0 ] unsigned char 
 24078 ;;  Match           1   72[BANK0 ] unsigned char 
 24079 ;; Return value:  Size  Location     Type
 24080 ;;                  1    wreg      void 
 24081 ;; Registers used:
 24082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24083 ;; Tracked objects:
 24084 ;;		On entry : 0/0
 24085 ;;		On exit  : 0/0
 24086 ;;		Unchanged: 0/0
 24087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24089 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24091 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24092 ;;Total ram usage:       26 bytes
 24093 ;; Hardware stack levels used:    1
 24094 ;; Hardware stack levels required when called:   12
 24095 ;; This function calls:
 24096 ;;		_GenerateEvt
 24097 ;;		_ReceiveEvt
 24098 ;;		_StringCompare
 24099 ;;		_StringCopy
 24100 ;;		_Uart_ClearRxBuffer
 24101 ;; This function is called by:
 24102 ;;		_Mdm_MainTask
 24103 ;; This function uses a non-reentrant model
 24104 ;;
 24105                           
 24106                           	psect	text113
 24107  001D32                     __ptext113:
 24108                           	opt stack 0
 24109  001D32                     _ModemEvtParser:
 24110                           	opt stack 15
 24111                           
 24112                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 24113                           
 24114                           ; BSR set to: 0
 24115                           ;incstack = 0
 24116  001D32  C3C7  F0A4         	movff	ModemEvtParser@F9107,ModemEvtParser@RingString
 24117  001D36  C3C8  F0A5         	movff	ModemEvtParser@F9107+1,ModemEvtParser@RingString+1
 24118  001D3A  C3C9  F0A6         	movff	ModemEvtParser@F9107+2,ModemEvtParser@RingString+2
 24119  001D3E  C3CA  F0A7         	movff	ModemEvtParser@F9107+3,ModemEvtParser@RingString+3
 24120                           
 24121                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 24122  001D42  EE23  F0C2         	lfsr	2,ModemEvtParser@F9109
 24123  001D46  EE10  F09A         	lfsr	1,ModemEvtParser@ClipString
 24124  001D4A  0E04               	movlw	4
 24125  001D4C                     u13741:
 24126  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 24127  001D50  06E8               	decf	wreg,f,c
 24128  001D52  E2FC               	bc	u13741
 24129                           
 24130                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 24131  001D54  EE23  F0BD         	lfsr	2,ModemEvtParser@F9111
 24132  001D58  EE10  F09F         	lfsr	1,ModemEvtParser@SmsString
 24133  001D5C  0E04               	movlw	4
 24134  001D5E                     u13751:
 24135  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 24136  001D62  06E8               	decf	wreg,f,c
 24137  001D64  E2FC               	bc	u13751
 24138                           
 24139                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 24140  001D66  EE24  F0D0         	lfsr	2,ModemEvtParser@F9113
 24141  001D6A  EE10  F090         	lfsr	1,ModemEvtParser@CallReadyString
 24142  001D6E  0E09               	movlw	9
 24143  001D70                     u13761:
 24144  001D70  CFDB FFE3          	movff	plusw2,plusw1
 24145  001D74  06E8               	decf	wreg,f,c
 24146  001D76  E2FC               	bc	u13761
 24147                           
 24148                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 24149  001D78  0E00               	movlw	0
 24150  001D7A  0100               	movlb	0	; () banked
 24151  001D7C  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 24152                           
 24153                           ; BSR set to: 0
 24154                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 24155  001D7E  0E00               	movlw	0
 24156  001D80  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 24157                           
 24158                           ; BSR set to: 0
 24159                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 24160  001D82  0E3B               	movlw	low _NewMdmEvtParserRequest
 24161  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24162  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 24163  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24164  001D8A  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 24165  001D8E  0900               	iorlw	0
 24166  001D90  B4D8               	btfsc	status,2,c
 24167  001D92  0012               	return	
 24168                           
 24169                           ;mdm_gsm_gprs.c: 510: {
 24170                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 24171  001D94  0E00               	movlw	0
 24172  001D96  0100               	movlb	0	; () banked
 24173  001D98  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 24174  001D9A                     l14365:
 24175                           
 24176                           ; BSR set to: 0
 24177  001D9A  0E03               	movlw	3
 24178  001D9C  65A9               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 24179  001D9E  D074               	goto	l1052
 24180  001DA0  D083               	goto	u13830
 24181  001DA2                     
 24182                           ; BSR set to: 0
 24183                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 24184                           
 24185                           ; BSR set to: 0
 24186  001DA2  0EA4               	movlw	low ModemEvtParser@RingString
 24187  001DA4  6F85               	movwf	StringCompare@String1& (0+255),b
 24188  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 24189  001DA8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 24190  001DAA  0E58               	movlw	low _RxBuffer
 24191  001DAC  6F87               	movwf	StringCompare@String2& (0+255),b
 24192  001DAE  0E0C               	movlw	high _RxBuffer
 24193  001DB0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 24194  001DB2  0E00               	movlw	0
 24195  001DB4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 24196  001DB6  0E04               	movlw	4
 24197  001DB8  6F89               	movwf	StringCompare@Len& (0+255),b
 24198  001DBA  EC21  F02B         	call	_StringCompare	;wreg free
 24199  001DBE  0900               	iorlw	0
 24200  001DC0  B4D8               	btfsc	status,2,c
 24201  001DC2  D06F               	goto	l1055
 24202                           
 24203                           ;mdm_gsm_gprs.c: 518: {
 24204                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 24205  001DC4  0EE0               	movlw	low _RingEvent
 24206  001DC6  0100               	movlb	0	; () banked
 24207  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24208  001DCA  0E00               	movlw	high _RingEvent
 24209  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24210  001DCE  EC5E  F031         	call	_GenerateEvt	;wreg free
 24211  001DD2  D040               	goto	l14387
 24212  001DD4                     
 24213                           ; BSR set to: 0
 24214                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 24215                           
 24216                           ; BSR set to: 0
 24217  001DD4  0E9A               	movlw	low ModemEvtParser@ClipString
 24218  001DD6  6F85               	movwf	StringCompare@String1& (0+255),b
 24219  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 24220  001DDA  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 24221  001DDC  0E58               	movlw	low _RxBuffer
 24222  001DDE  6F87               	movwf	StringCompare@String2& (0+255),b
 24223  001DE0  0E0C               	movlw	high _RxBuffer
 24224  001DE2  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 24225  001DE4  0E00               	movlw	0
 24226  001DE6  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 24227  001DE8  0E05               	movlw	5
 24228  001DEA  6F89               	movwf	StringCompare@Len& (0+255),b
 24229  001DEC  EC21  F02B         	call	_StringCompare	;wreg free
 24230  001DF0  0900               	iorlw	0
 24231  001DF2  B4D8               	btfsc	status,2,c
 24232  001DF4  D056               	goto	l1055
 24233                           
 24234                           ;mdm_gsm_gprs.c: 529: {
 24235                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 24236  001DF6  0E60               	movlw	low (_RxBuffer+8)
 24237  001DF8  0100               	movlb	0	; () banked
 24238  001DFA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24239  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 24240  001DFE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24241  001E00  0EB8               	movlw	low _callerNumber
 24242  001E02  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24243  001E04  0E04               	movlw	high _callerNumber
 24244  001E06  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24245  001E08  0E00               	movlw	0
 24246  001E0A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24247  001E0C  0E0D               	movlw	13
 24248  001E0E  6F81               	movwf	StringCopy@Len& (0+255),b
 24249  001E10  ECE2  F028         	call	_StringCopy	;wreg free
 24250                           
 24251                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 24252  001E14  0EDF               	movlw	low _ClipEvent
 24253  001E16  0100               	movlb	0	; () banked
 24254  001E18  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24255  001E1A  0E00               	movlw	high _ClipEvent
 24256  001E1C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24257  001E1E  EC5E  F031         	call	_GenerateEvt	;wreg free
 24258  001E22  D018               	goto	l14387
 24259  001E24                     
 24260                           ; BSR set to: 0
 24261                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 24262                           
 24263                           ; BSR set to: 0
 24264  001E24  0E9F               	movlw	low ModemEvtParser@SmsString
 24265  001E26  6F85               	movwf	StringCompare@String1& (0+255),b
 24266  001E28  0E00               	movlw	high ModemEvtParser@SmsString
 24267  001E2A  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 24268  001E2C  0E58               	movlw	low _RxBuffer
 24269  001E2E  6F87               	movwf	StringCompare@String2& (0+255),b
 24270  001E30  0E0C               	movlw	high _RxBuffer
 24271  001E32  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 24272  001E34  0E00               	movlw	0
 24273  001E36  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 24274  001E38  0E05               	movlw	5
 24275  001E3A  6F89               	movwf	StringCompare@Len& (0+255),b
 24276  001E3C  EC21  F02B         	call	_StringCompare	;wreg free
 24277  001E40  0900               	iorlw	0
 24278  001E42  B4D8               	btfsc	status,2,c
 24279  001E44  D02E               	goto	l1055
 24280                           
 24281                           ;mdm_gsm_gprs.c: 541: {
 24282                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 24283  001E46  0EDE               	movlw	low _SmsEvent
 24284  001E48  0100               	movlb	0	; () banked
 24285  001E4A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24286  001E4C  0E00               	movlw	high _SmsEvent
 24287  001E4E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24288  001E50  EC5E  F031         	call	_GenerateEvt	;wreg free
 24289  001E54                     l14387:
 24290                           
 24291                           ;mdm_gsm_gprs.c: 545: Match = 1;
 24292  001E54  0E01               	movlw	1
 24293  001E56  0100               	movlb	0	; () banked
 24294  001E58  D015               	goto	L37
 24295  001E5A                     
 24296                           ; BSR set to: 0
 24297                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 24298                           
 24299                           ; BSR set to: 0
 24300  001E5A  0E90               	movlw	low ModemEvtParser@CallReadyString
 24301  001E5C  6F85               	movwf	StringCompare@String1& (0+255),b
 24302  001E5E  0E00               	movlw	high ModemEvtParser@CallReadyString
 24303  001E60  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 24304  001E62  0E58               	movlw	low _RxBuffer
 24305  001E64  6F87               	movwf	StringCompare@String2& (0+255),b
 24306  001E66  0E0C               	movlw	high _RxBuffer
 24307  001E68  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 24308  001E6A  0E00               	movlw	0
 24309  001E6C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 24310  001E6E  0E0A               	movlw	10
 24311  001E70  6F89               	movwf	StringCompare@Len& (0+255),b
 24312  001E72  EC21  F02B         	call	_StringCompare	;wreg free
 24313  001E76  0900               	iorlw	0
 24314  001E78  B4D8               	btfsc	status,2,c
 24315  001E7A  D013               	goto	l1055
 24316                           
 24317                           ;mdm_gsm_gprs.c: 552: {
 24318                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 24319  001E7C  0E02               	movlw	2
 24320  001E7E  0100               	movlb	0	; () banked
 24321  001E80  6FD2               	movwf	_MdmStatus& (0+255),b
 24322                           
 24323                           ;mdm_gsm_gprs.c: 556: Match = 1;
 24324  001E82  0E01               	movlw	1
 24325  001E84                     L37:
 24326  001E84  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 24327                           
 24328                           ; BSR set to: 0
 24329                           ;mdm_gsm_gprs.c: 562: }
 24330                           
 24331                           ; BSR set to: 0
 24332                           ;mdm_gsm_gprs.c: 561: break;
 24333                           
 24334                           ;mdm_gsm_gprs.c: 560: default:
 24335                           
 24336                           ; BSR set to: 0
 24337                           ;mdm_gsm_gprs.c: 557: }
 24338                           ;mdm_gsm_gprs.c: 558: break;
 24339  001E86  D00D               	goto	l1055
 24340  001E88                     l1052:
 24341                           
 24342                           ; BSR set to: 0
 24343                           
 24344                           ; BSR set to: 0
 24345  001E88  51A9               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 24346                           
 24347                           ; Switch size 1, requested type "space"
 24348                           ; Number of cases is 4, Range of values is 0 to 3
 24349                           ; switch strategies available:
 24350                           ; Name         Instructions Cycles
 24351                           ; simple_byte           13     7 (average)
 24352                           ;	Chosen strategy is simple_byte
 24353  001E8A  0A00               	xorlw	0	; case 0
 24354  001E8C  B4D8               	btfsc	status,2,c
 24355  001E8E  D789               	goto	l1053
 24356  001E90  0A01               	xorlw	1	; case 1
 24357  001E92  B4D8               	btfsc	status,2,c
 24358  001E94  D7C7               	goto	l1058
 24359  001E96  0A03               	xorlw	3	; case 2
 24360  001E98  B4D8               	btfsc	status,2,c
 24361  001E9A  D7DF               	goto	l1060
 24362  001E9C  0A01               	xorlw	1	; case 3
 24363  001E9E  B4D8               	btfsc	status,2,c
 24364  001EA0  D799               	goto	l1056
 24365  001EA2                     l1055:
 24366                           
 24367                           ; BSR set to: 0
 24368  001EA2  0100               	movlb	0	; () banked
 24369  001EA4  2BA9               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 24370  001EA6  D779               	goto	l14365
 24371  001EA8                     u13830:
 24372                           
 24373                           ; BSR set to: 0
 24374                           ;mdm_gsm_gprs.c: 563: }
 24375                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 24376                           
 24377                           ; BSR set to: 0
 24378  001EA8  05A8               	decf	ModemEvtParser@Match& (0+255),w,b
 24379  001EAA  A4D8               	btfss	status,2,c
 24380  001EAC  0012               	return	
 24381                           
 24382                           ; BSR set to: 0
 24383                           ;mdm_gsm_gprs.c: 567: {
 24384                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 24385  001EAE  ECD7  F02E         	call	_Uart_ClearRxBuffer	;wreg free
 24386  001EB2  0012               	return	
 24387  001EB4                     __end_of_ModemEvtParser:
 24388                           	opt stack 0
 24389                           tosu	equ	0xFFF
 24390                           tosh	equ	0xFFE
 24391                           tosl	equ	0xFFD
 24392                           pclath	equ	0xFFA
 24393                           tblptru	equ	0xFF8
 24394                           tblptrh	equ	0xFF7
 24395                           tblptrl	equ	0xFF6
 24396                           tablat	equ	0xFF5
 24397                           prodh	equ	0xFF4
 24398                           prodl	equ	0xFF3
 24399                           intcon	equ	0xFF2
 24400                           intcon2	equ	0xFF1
 24401                           intcon3	equ	0xFF0
 24402                           indf0	equ	0xFEF
 24403                           postinc0	equ	0xFEE
 24404                           plusw0	equ	0xFEB
 24405                           fsr0h	equ	0xFEA
 24406                           fsr0l	equ	0xFE9
 24407                           wreg	equ	0xFE8
 24408                           indf1	equ	0xFE7
 24409                           postinc1	equ	0xFE6
 24410                           postdec1	equ	0xFE5
 24411                           plusw1	equ	0xFE3
 24412                           fsr1h	equ	0xFE2
 24413                           fsr1l	equ	0xFE1
 24414                           indf2	equ	0xFDF
 24415                           postinc2	equ	0xFDE
 24416                           postdec2	equ	0xFDD
 24417                           plusw2	equ	0xFDB
 24418                           fsr2h	equ	0xFDA
 24419                           fsr2l	equ	0xFD9
 24420                           status	equ	0xFD8
 24421                           
 24422 ;; *************** function _Uart_ClearRxBuffer *****************
 24423 ;; Defined at:
 24424 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24425 ;; Parameters:    Size  Location     Type
 24426 ;;		None
 24427 ;; Auto vars:     Size  Location     Type
 24428 ;;  Index           2   29[BANK0 ] unsigned short 
 24429 ;; Return value:  Size  Location     Type
 24430 ;;                  1    wreg      void 
 24431 ;; Registers used:
 24432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24433 ;; Tracked objects:
 24434 ;;		On entry : 0/0
 24435 ;;		On exit  : 0/0
 24436 ;;		Unchanged: 0/0
 24437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24439 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24442 ;;Total ram usage:        2 bytes
 24443 ;; Hardware stack levels used:    1
 24444 ;; Hardware stack levels required when called:   11
 24445 ;; This function calls:
 24446 ;;		Nothing
 24447 ;; This function is called by:
 24448 ;;		_ModemEvtParser
 24449 ;; This function uses a non-reentrant model
 24450 ;;
 24451                           
 24452                           	psect	text114
 24453  005DAE                     __ptext114:
 24454                           	opt stack 0
 24455  005DAE                     _Uart_ClearRxBuffer:
 24456                           	opt stack 15
 24457                           
 24458                           ;uart_drv.c: 567: UINT16 Index = 0;
 24459                           
 24460                           ;incstack = 0
 24461  005DAE  0E00               	movlw	0
 24462  005DB0  0100               	movlb	0	; () banked
 24463  005DB2  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 24464  005DB4  0E00               	movlw	0
 24465  005DB6  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 24466                           
 24467                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 24468  005DB8  0E00               	movlw	0
 24469  005DBA  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 24470  005DBC  0E00               	movlw	0
 24471  005DBE  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 24472  005DC0                     l13603:
 24473                           
 24474                           ; BSR set to: 0
 24475  005DC0  0E90               	movlw	144
 24476  005DC2  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 24477  005DC4  0E01               	movlw	1
 24478  005DC6  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 24479  005DC8  B0D8               	btfsc	status,0,c
 24480  005DCA  0012               	return	
 24481                           
 24482                           ; BSR set to: 0
 24483                           ;uart_drv.c: 571: {
 24484                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 24485                           
 24486                           ; BSR set to: 0
 24487                           
 24488                           ; BSR set to: 0
 24489  005DCC  0E58               	movlw	low _RxBuffer
 24490  005DCE  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 24491  005DD0  6ED9               	movwf	fsr2l,c
 24492  005DD2  0E0C               	movlw	high _RxBuffer
 24493  005DD4  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 24494  005DD6  6EDA               	movwf	fsr2h,c
 24495  005DD8  0E00               	movlw	0
 24496  005DDA  6EDF               	movwf	indf2,c
 24497                           
 24498                           ; BSR set to: 0
 24499  005DDC  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 24500  005DDE  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 24501  005DE0  D7EF               	goto	l13603
 24502  005DE2                     __end_of_Uart_ClearRxBuffer:
 24503                           	opt stack 0
 24504                           tosu	equ	0xFFF
 24505                           tosh	equ	0xFFE
 24506                           tosl	equ	0xFFD
 24507                           pclath	equ	0xFFA
 24508                           tblptru	equ	0xFF8
 24509                           tblptrh	equ	0xFF7
 24510                           tblptrl	equ	0xFF6
 24511                           tablat	equ	0xFF5
 24512                           prodh	equ	0xFF4
 24513                           prodl	equ	0xFF3
 24514                           intcon	equ	0xFF2
 24515                           intcon2	equ	0xFF1
 24516                           intcon3	equ	0xFF0
 24517                           indf0	equ	0xFEF
 24518                           postinc0	equ	0xFEE
 24519                           plusw0	equ	0xFEB
 24520                           fsr0h	equ	0xFEA
 24521                           fsr0l	equ	0xFE9
 24522                           wreg	equ	0xFE8
 24523                           indf1	equ	0xFE7
 24524                           postinc1	equ	0xFE6
 24525                           postdec1	equ	0xFE5
 24526                           plusw1	equ	0xFE3
 24527                           fsr1h	equ	0xFE2
 24528                           fsr1l	equ	0xFE1
 24529                           indf2	equ	0xFDF
 24530                           postinc2	equ	0xFDE
 24531                           postdec2	equ	0xFDD
 24532                           plusw2	equ	0xFDB
 24533                           fsr2h	equ	0xFDA
 24534                           fsr2l	equ	0xFD9
 24535                           status	equ	0xFD8
 24536                           
 24537 ;; *************** function _StringCompare *****************
 24538 ;; Defined at:
 24539 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 24540 ;; Parameters:    Size  Location     Type
 24541 ;;  String1         2   37[BANK0 ] PTR unsigned char 
 24542 ;;		 -> MyApp_Task@phone(14), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@ClipString
      +(5), 
 24543 ;;		 -> ModemEvtParser@RingString(4), 
 24544 ;;  String2         2   39[BANK0 ] PTR unsigned char 
 24545 ;;		 -> callerNumber(13), RxBuffer(400), 
 24546 ;;  Len             2   41[BANK0 ] unsigned short 
 24547 ;; Auto vars:     Size  Location     Type
 24548 ;;  Index           2   46[BANK0 ] unsigned short 
 24549 ;;  Result          1   45[BANK0 ] unsigned char 
 24550 ;; Return value:  Size  Location     Type
 24551 ;;                  1    wreg      unsigned char 
 24552 ;; Registers used:
 24553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24554 ;; Tracked objects:
 24555 ;;		On entry : 0/0
 24556 ;;		On exit  : 0/0
 24557 ;;		Unchanged: 0/0
 24558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24561 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24562 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24563 ;;Total ram usage:       11 bytes
 24564 ;; Hardware stack levels used:    1
 24565 ;; Hardware stack levels required when called:   11
 24566 ;; This function calls:
 24567 ;;		Nothing
 24568 ;; This function is called by:
 24569 ;;		_ModemEvtParser
 24570 ;;		_MyApp_Task
 24571 ;; This function uses a non-reentrant model
 24572 ;;
 24573                           
 24574                           	psect	text115
 24575  005642                     __ptext115:
 24576                           	opt stack 0
 24577  005642                     _StringCompare:
 24578                           	opt stack 16
 24579                           
 24580                           ;sf.c: 77: UINT16 Index = 0;
 24581                           
 24582                           ; BSR set to: 0
 24583                           ;incstack = 0
 24584  005642  0E00               	movlw	0
 24585  005644  0100               	movlb	0	; () banked
 24586  005646  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 24587  005648  0E00               	movlw	0
 24588  00564A  6F8E               	movwf	StringCompare@Index& (0+255),b
 24589                           
 24590                           ;sf.c: 78: UINT8 Result = 1;
 24591  00564C  0E01               	movlw	1
 24592  00564E  6F8D               	movwf	StringCompare@Result& (0+255),b
 24593                           
 24594                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 24595  005650  0E00               	movlw	0
 24596  005652  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 24597  005654  0E00               	movlw	0
 24598  005656  6F8E               	movwf	StringCompare@Index& (0+255),b
 24599  005658  D015               	goto	l2211
 24600  00565A                     
 24601                           ; BSR set to: 0
 24602                           ;sf.c: 82: {
 24603                           ;sf.c: 83: if (String1[Index] != String2[Index])
 24604                           
 24605                           ; BSR set to: 0
 24606  00565A  518E               	movf	StringCompare@Index& (0+255),w,b
 24607  00565C  2587               	addwf	StringCompare@String2& (0+255),w,b
 24608  00565E  6ED9               	movwf	fsr2l,c
 24609  005660  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 24610  005662  2188               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 24611  005664  6EDA               	movwf	fsr2h,c
 24612  005666  518E               	movf	StringCompare@Index& (0+255),w,b
 24613  005668  2585               	addwf	StringCompare@String1& (0+255),w,b
 24614  00566A  6EE1               	movwf	fsr1l,c
 24615  00566C  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 24616  00566E  2186               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 24617  005670  6EE2               	movwf	fsr1h,c
 24618  005672  50DE               	movf	postinc2,w,c
 24619  005674  18E6               	xorwf	postinc1,w,c
 24620  005676  B4D8               	btfsc	status,2,c
 24621  005678  D003               	goto	l2213
 24622                           
 24623                           ; BSR set to: 0
 24624                           ;sf.c: 84: {
 24625                           ;sf.c: 85: Result = 0;
 24626  00567A  0E00               	movlw	0
 24627  00567C  6F8D               	movwf	StringCompare@Result& (0+255),b
 24628                           
 24629                           ;sf.c: 86: break;
 24630  00567E  D008               	goto	u12730
 24631  005680                     l2213:
 24632                           
 24633                           ; BSR set to: 0
 24634                           
 24635                           ; BSR set to: 0
 24636  005680  4B8E               	infsnz	StringCompare@Index& (0+255),f,b
 24637  005682  2B8F               	incf	(StringCompare@Index+1)& (0+255),f,b
 24638  005684                     l2211:
 24639                           
 24640                           ; BSR set to: 0
 24641                           
 24642                           ; BSR set to: 0
 24643  005684  5189               	movf	StringCompare@Len& (0+255),w,b
 24644  005686  5D8E               	subwf	StringCompare@Index& (0+255),w,b
 24645  005688  518A               	movf	(StringCompare@Len+1)& (0+255),w,b
 24646  00568A  598F               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 24647  00568C  A0D8               	btfss	status,0,c
 24648  00568E  D7E5               	goto	l2212
 24649  005690                     u12730:
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;sf.c: 87: }
 24653                           ;sf.c: 88: }
 24654                           ;sf.c: 91: return Result;
 24655                           
 24656                           ; BSR set to: 0
 24657  005690  518D               	movf	StringCompare@Result& (0+255),w,b
 24658  005692  0012               	return	
 24659  005694                     __end_of_StringCompare:
 24660                           	opt stack 0
 24661                           tosu	equ	0xFFF
 24662                           tosh	equ	0xFFE
 24663                           tosl	equ	0xFFD
 24664                           pclath	equ	0xFFA
 24665                           tblptru	equ	0xFF8
 24666                           tblptrh	equ	0xFF7
 24667                           tblptrl	equ	0xFF6
 24668                           tablat	equ	0xFF5
 24669                           prodh	equ	0xFF4
 24670                           prodl	equ	0xFF3
 24671                           intcon	equ	0xFF2
 24672                           intcon2	equ	0xFF1
 24673                           intcon3	equ	0xFF0
 24674                           indf0	equ	0xFEF
 24675                           postinc0	equ	0xFEE
 24676                           plusw0	equ	0xFEB
 24677                           fsr0h	equ	0xFEA
 24678                           fsr0l	equ	0xFE9
 24679                           wreg	equ	0xFE8
 24680                           indf1	equ	0xFE7
 24681                           postinc1	equ	0xFE6
 24682                           postdec1	equ	0xFE5
 24683                           plusw1	equ	0xFE3
 24684                           fsr1h	equ	0xFE2
 24685                           fsr1l	equ	0xFE1
 24686                           indf2	equ	0xFDF
 24687                           postinc2	equ	0xFDE
 24688                           postdec2	equ	0xFDD
 24689                           plusw2	equ	0xFDB
 24690                           fsr2h	equ	0xFDA
 24691                           fsr2l	equ	0xFD9
 24692                           status	equ	0xFD8
 24693                           
 24694 ;; *************** function _GetSmsSm *****************
 24695 ;; Defined at:
 24696 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24697 ;; Parameters:    Size  Location     Type
 24698 ;;		None
 24699 ;; Auto vars:     Size  Location     Type
 24700 ;;		None
 24701 ;; Return value:  Size  Location     Type
 24702 ;;                  1    wreg      void 
 24703 ;; Registers used:
 24704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24705 ;; Tracked objects:
 24706 ;;		On entry : 0/0
 24707 ;;		On exit  : 0/0
 24708 ;;		Unchanged: 0/0
 24709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24714 ;;Total ram usage:        0 bytes
 24715 ;; Hardware stack levels used:    1
 24716 ;; Hardware stack levels required when called:   13
 24717 ;; This function calls:
 24718 ;;		_ClearBuffer
 24719 ;;		_GenerateEvt
 24720 ;;		_ReceiveEvt
 24721 ;;		_StringCopy
 24722 ;;		_Uart_WriteConstString
 24723 ;; This function is called by:
 24724 ;;		_Mdm_MainTask
 24725 ;; This function uses a non-reentrant model
 24726 ;;
 24727                           
 24728                           	psect	text116
 24729  002A82                     __ptext116:
 24730                           	opt stack 0
 24731  002A82                     _GetSmsSm:
 24732                           	opt stack 14
 24733                           
 24734                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 24735                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 24736                           
 24737                           ; BSR set to: 0
 24738                           ;incstack = 0
 24739  002A82  0E03               	movlw	3
 24740  002A84  0100               	movlb	0	; () banked
 24741  002A86  19D2               	xorwf	_MdmStatus& (0+255),w,b
 24742  002A88  A4D8               	btfss	status,2,c
 24743  002A8A  0012               	return	
 24744  002A8C  D084               	goto	l1070
 24745  002A8E                     
 24746                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 24747                           
 24748                           ; BSR set to: 0
 24749  002A8E  0EDD               	movlw	low _GetSmsText
 24750  002A90  0100               	movlb	0	; () banked
 24751  002A92  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24752  002A94  0E00               	movlw	high _GetSmsText
 24753  002A96  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24754  002A98  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 24755  002A9C  0900               	iorlw	0
 24756  002A9E  B4D8               	btfsc	status,2,c
 24757  002AA0  0012               	return	
 24758                           
 24759                           ;mdm_gsm_gprs.c: 596: {
 24760                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 24761  002AA2  0E01               	movlw	1
 24762  002AA4  0101               	movlb	1	; () banked
 24763  002AA6  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24764                           
 24765                           ; BSR set to: 1
 24766                           ;mdm_gsm_gprs.c: 599: }
 24767                           ;mdm_gsm_gprs.c: 600: break;
 24768  002AA8  0012               	return	
 24769  002AAA                     
 24770                           ; BSR set to: 1
 24771                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 24772                           
 24773                           ; BSR set to: 1
 24774  002AAA  0EC1               	movlw	low STR_4
 24775  002AAC  0100               	movlb	0	; () banked
 24776  002AAE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24777  002AB0  0EFF               	movlw	high STR_4
 24778  002AB2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24779  002AB4  0E01               	movlw	1
 24780  002AB6  EC4C  F02D         	call	_Uart_WriteConstString
 24781                           
 24782                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 24783  002ABA  0E02               	movlw	2
 24784  002ABC  0101               	movlb	1	; () banked
 24785  002ABE  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24786                           
 24787                           ;mdm_gsm_gprs.c: 607: break;
 24788  002AC0  0012               	return	
 24789  002AC2                     
 24790                           ; BSR set to: 1
 24791                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 24792                           
 24793                           ; BSR set to: 1
 24794  002AC2  0E3C               	movlw	low _NewStringReceived
 24795  002AC4  0100               	movlb	0	; () banked
 24796  002AC6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24797  002AC8  0E00               	movlw	high _NewStringReceived
 24798  002ACA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24799  002ACC  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 24800  002AD0  0900               	iorlw	0
 24801  002AD2  B4D8               	btfsc	status,2,c
 24802  002AD4  0012               	return	
 24803                           
 24804                           ;mdm_gsm_gprs.c: 612: {
 24805                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 24806  002AD6  CC58  FFE8         	movff	_RxBuffer,wreg
 24807  002ADA  0A2B               	xorlw	43
 24808  002ADC  A4D8               	btfss	status,2,c
 24809  002ADE  0012               	return	
 24810  002AE0  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24811  002AE4  0A43               	xorlw	67
 24812  002AE6  A4D8               	btfss	status,2,c
 24813  002AE8  0012               	return	
 24814  002AEA  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24815  002AEE  0A4D               	xorlw	77
 24816  002AF0  A4D8               	btfss	status,2,c
 24817  002AF2  0012               	return	
 24818                           
 24819                           ;mdm_gsm_gprs.c: 614: {
 24820                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 24821  002AF4  0E00               	movlw	low _Mdm_SmsRx
 24822  002AF6  0100               	movlb	0	; () banked
 24823  002AF8  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24824  002AFA  0E07               	movlw	high _Mdm_SmsRx
 24825  002AFC  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24826  002AFE  0E00               	movlw	0
 24827  002B00  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24828  002B02  0E50               	movlw	80
 24829  002B04  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24830  002B06  ECBC  F02E         	call	_ClearBuffer	;wreg free
 24831                           
 24832                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 24833  002B0A  0E58               	movlw	low _RxBuffer
 24834  002B0C  0100               	movlb	0	; () banked
 24835  002B0E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24836  002B10  0E0C               	movlw	high _RxBuffer
 24837  002B12  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24838  002B14  0E00               	movlw	low _Mdm_SmsRx
 24839  002B16  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24840  002B18  0E07               	movlw	high _Mdm_SmsRx
 24841  002B1A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24842  002B1C  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24843  002B20  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24844  002B24  ECE2  F028         	call	_StringCopy	;wreg free
 24845                           
 24846                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 24847  002B28  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 24848                           
 24849                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 24850  002B2C  0E03               	movlw	3
 24851  002B2E  0101               	movlb	1	; () banked
 24852  002B30  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24853                           
 24854                           ; BSR set to: 1
 24855                           ;mdm_gsm_gprs.c: 622: }
 24856                           ;mdm_gsm_gprs.c: 623: }
 24857                           ;mdm_gsm_gprs.c: 624: break;
 24858                           
 24859                           ; BSR set to: 1
 24860  002B32  0012               	return	
 24861  002B34                     
 24862                           ; BSR set to: 1
 24863                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 24864                           
 24865                           ; BSR set to: 1
 24866  002B34  0E3C               	movlw	low _NewStringReceived
 24867  002B36  0100               	movlb	0	; () banked
 24868  002B38  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24869  002B3A  0E00               	movlw	high _NewStringReceived
 24870  002B3C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24871  002B3E  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 24872  002B42  0900               	iorlw	0
 24873  002B44  B4D8               	btfsc	status,2,c
 24874  002B46  0012               	return	
 24875                           
 24876                           ;mdm_gsm_gprs.c: 629: {
 24877                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 24878  002B48  0E50               	movlw	low (_Mdm_SmsRx+80)
 24879  002B4A  0100               	movlb	0	; () banked
 24880  002B4C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24881  002B4E  0E07               	movlw	high (_Mdm_SmsRx+80)
 24882  002B50  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24883  002B52  0E00               	movlw	0
 24884  002B54  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24885  002B56  0E14               	movlw	20
 24886  002B58  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24887  002B5A  ECBC  F02E         	call	_ClearBuffer	;wreg free
 24888                           
 24889                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 24890  002B5E  0E58               	movlw	low _RxBuffer
 24891  002B60  0100               	movlb	0	; () banked
 24892  002B62  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24893  002B64  0E0C               	movlw	high _RxBuffer
 24894  002B66  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24895  002B68  0E50               	movlw	low (_Mdm_SmsRx+80)
 24896  002B6A  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24897  002B6C  0E07               	movlw	high (_Mdm_SmsRx+80)
 24898  002B6E  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24899  002B70  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24900  002B74  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24901  002B78  ECE2  F028         	call	_StringCopy	;wreg free
 24902                           
 24903                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 24904  002B7C  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 24905                           
 24906                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 24907  002B80  0E00               	movlw	0
 24908  002B82  0101               	movlb	1	; () banked
 24909  002B84  6FF3               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24910                           
 24911                           ; BSR set to: 1
 24912                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 24913  002B86  0EDC               	movlw	low _SmsTxtReady
 24914  002B88  0100               	movlb	0	; () banked
 24915  002B8A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24916  002B8C  0E00               	movlw	high _SmsTxtReady
 24917  002B8E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24918  002B90  EC5E  F031         	call	_GenerateEvt	;wreg free
 24919                           
 24920                           ;mdm_gsm_gprs.c: 644: }
 24921                           
 24922                           ;mdm_gsm_gprs.c: 643: break;
 24923                           
 24924                           ;mdm_gsm_gprs.c: 642: default:
 24925                           
 24926                           ;mdm_gsm_gprs.c: 639: }
 24927                           ;mdm_gsm_gprs.c: 640: break;
 24928  002B94  0012               	return	
 24929  002B96                     l1070:
 24930  002B96  0101               	movlb	1	; () banked
 24931  002B98  51F3               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 24932                           
 24933                           ; Switch size 1, requested type "space"
 24934                           ; Number of cases is 4, Range of values is 0 to 3
 24935                           ; switch strategies available:
 24936                           ; Name         Instructions Cycles
 24937                           ; simple_byte           13     7 (average)
 24938                           ;	Chosen strategy is simple_byte
 24939  002B9A  0A00               	xorlw	0	; case 0
 24940  002B9C  B4D8               	btfsc	status,2,c
 24941  002B9E  D777               	goto	l1071
 24942  002BA0  0A01               	xorlw	1	; case 1
 24943  002BA2  B4D8               	btfsc	status,2,c
 24944  002BA4  D782               	goto	l1074
 24945  002BA6  0A03               	xorlw	3	; case 2
 24946  002BA8  B4D8               	btfsc	status,2,c
 24947  002BAA  D78B               	goto	l1075
 24948  002BAC  0A01               	xorlw	1	; case 3
 24949  002BAE  A4D8               	btfss	status,2,c
 24950                           
 24951                           ; BSR set to: 1
 24952  002BB0  0012               	return	
 24953  002BB2  D7C0               	goto	l1078
 24954  002BB4                     __end_of_GetSmsSm:
 24955                           	opt stack 0
 24956                           tosu	equ	0xFFF
 24957                           tosh	equ	0xFFE
 24958                           tosl	equ	0xFFD
 24959                           pclath	equ	0xFFA
 24960                           tblptru	equ	0xFF8
 24961                           tblptrh	equ	0xFF7
 24962                           tblptrl	equ	0xFF6
 24963                           tablat	equ	0xFF5
 24964                           prodh	equ	0xFF4
 24965                           prodl	equ	0xFF3
 24966                           intcon	equ	0xFF2
 24967                           intcon2	equ	0xFF1
 24968                           intcon3	equ	0xFF0
 24969                           indf0	equ	0xFEF
 24970                           postinc0	equ	0xFEE
 24971                           plusw0	equ	0xFEB
 24972                           fsr0h	equ	0xFEA
 24973                           fsr0l	equ	0xFE9
 24974                           wreg	equ	0xFE8
 24975                           indf1	equ	0xFE7
 24976                           postinc1	equ	0xFE6
 24977                           postdec1	equ	0xFE5
 24978                           plusw1	equ	0xFE3
 24979                           fsr1h	equ	0xFE2
 24980                           fsr1l	equ	0xFE1
 24981                           indf2	equ	0xFDF
 24982                           postinc2	equ	0xFDE
 24983                           postdec2	equ	0xFDD
 24984                           plusw2	equ	0xFDB
 24985                           fsr2h	equ	0xFDA
 24986                           fsr2l	equ	0xFD9
 24987                           status	equ	0xFD8
 24988                           
 24989 ;; *************** function _ConfigureModem *****************
 24990 ;; Defined at:
 24991 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24992 ;; Parameters:    Size  Location     Type
 24993 ;;		None
 24994 ;; Auto vars:     Size  Location     Type
 24995 ;;		None
 24996 ;; Return value:  Size  Location     Type
 24997 ;;                  1    wreg      void 
 24998 ;; Registers used:
 24999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25000 ;; Tracked objects:
 25001 ;;		On entry : 0/0
 25002 ;;		On exit  : 0/0
 25003 ;;		Unchanged: 0/0
 25004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25009 ;;Total ram usage:        0 bytes
 25010 ;; Hardware stack levels used:    1
 25011 ;; Hardware stack levels required when called:   14
 25012 ;; This function calls:
 25013 ;;		_GenerateEvt
 25014 ;;		_UartSetConfigLow
 25015 ;;		_Uart_InitUartModule
 25016 ;;		_Uart_WriteConstString
 25017 ;; This function is called by:
 25018 ;;		_Mdm_MainTask
 25019 ;; This function uses a non-reentrant model
 25020 ;;
 25021                           
 25022                           	psect	text117
 25023  00391C                     __ptext117:
 25024                           	opt stack 0
 25025  00391C                     _ConfigureModem:
 25026                           	opt stack 13
 25027                           
 25028                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 25029                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 25030                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 25031                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 25032                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 25033                           
 25034                           ;incstack = 0
 25035  00391C  D054               	goto	l1027
 25036  00391E                     
 25037                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 25038  00391E  0E02               	movlw	2
 25039  003920  0100               	movlb	0	; () banked
 25040  003922  19D2               	xorwf	_MdmStatus& (0+255),w,b
 25041  003924  A4D8               	btfss	status,2,c
 25042  003926  0012               	return	
 25043                           
 25044                           ; BSR set to: 0
 25045                           ;mdm_gsm_gprs.c: 431: {
 25046                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 25047  003928  0E01               	movlw	1
 25048  00392A  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25049                           
 25050                           ; BSR set to: 0
 25051                           ;mdm_gsm_gprs.c: 434: }
 25052                           ;mdm_gsm_gprs.c: 435: break;
 25053  00392C  0012               	return	
 25054  00392E                     
 25055                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 25056                           
 25057                           ; BSR set to: 0
 25058  00392E  0E74               	movlw	low STR_2
 25059  003930  0100               	movlb	0	; () banked
 25060  003932  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25061  003934  0EFF               	movlw	high STR_2
 25062  003936  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25063  003938  0E01               	movlw	1
 25064  00393A  EC4C  F02D         	call	_Uart_WriteConstString
 25065                           
 25066                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 25067  00393E  ECF7  F029         	call	_UartSetConfigLow	;wreg free
 25068                           
 25069                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 25070  003942  0E26               	movlw	low _UartConfig
 25071  003944  0100               	movlb	0	; () banked
 25072  003946  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 25073  003948  0E03               	movlw	high _UartConfig
 25074  00394A  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 25075  00394C  0E01               	movlw	1
 25076  00394E  EC5E  F005         	call	_Uart_InitUartModule
 25077                           
 25078                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 25079  003952  0E03               	movlw	3
 25080  003954  0102               	movlb	2	; () banked
 25081  003956  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 25082  003958  0EE8               	movlw	232
 25083  00395A  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 25084                           
 25085                           ; BSR set to: 2
 25086                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 25087  00395C  0E02               	movlw	2
 25088  00395E  0101               	movlb	1	; () banked
 25089  003960  6FF4               	movwf	ConfigureModem@NextState& (0+255),b
 25090                           
 25091                           ; BSR set to: 1
 25092                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 25093  003962  0E04               	movlw	4
 25094  003964  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25095                           
 25096                           ;mdm_gsm_gprs.c: 449: break;
 25097  003966  0012               	return	
 25098  003968                     
 25099                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 25100                           
 25101                           ; BSR set to: 1
 25102  003968  0EDE               	movlw	low STR_3
 25103  00396A  0100               	movlb	0	; () banked
 25104  00396C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25105  00396E  0EFF               	movlw	high STR_3
 25106  003970  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25107  003972  0E01               	movlw	1
 25108  003974  EC4C  F02D         	call	_Uart_WriteConstString
 25109                           
 25110                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 25111  003978  0E03               	movlw	3
 25112  00397A  0102               	movlb	2	; () banked
 25113  00397C  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 25114  00397E  0EE8               	movlw	232
 25115  003980  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 25116                           
 25117                           ; BSR set to: 2
 25118                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 25119  003982  0E05               	movlw	5
 25120  003984  0101               	movlb	1	; () banked
 25121  003986  6FF4               	movwf	ConfigureModem@NextState& (0+255),b
 25122                           
 25123                           ; BSR set to: 1
 25124                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 25125  003988  0E04               	movlw	4
 25126  00398A  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25127                           
 25128                           ;mdm_gsm_gprs.c: 459: break;
 25129  00398C  0012               	return	
 25130  00398E                     
 25131                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 25132                           
 25133                           ; BSR set to: 1
 25134  00398E  0102               	movlb	2	; () banked
 25135  003990  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 25136  003992  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 25137                           
 25138                           ; BSR set to: 2
 25139                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 25140  003994  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 25141  003996  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 25142  003998  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 25143  00399A  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 25144  00399C  A0D8               	btfss	status,0,c
 25145  00399E  0012               	return	
 25146                           
 25147                           ; BSR set to: 2
 25148                           ;mdm_gsm_gprs.c: 466: {
 25149                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 25150  0039A0  0E00               	movlw	0
 25151  0039A2  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 25152  0039A4  0E00               	movlw	0
 25153  0039A6  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 25154                           
 25155                           ; BSR set to: 2
 25156                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 25157  0039A8  C1F4  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 25158                           
 25159                           ; BSR set to: 2
 25160                           ;mdm_gsm_gprs.c: 471: }
 25161                           ;mdm_gsm_gprs.c: 472: break;
 25162  0039AC  0012               	return	
 25163  0039AE                     
 25164                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 25165                           
 25166                           ; BSR set to: 2
 25167  0039AE  0E03               	movlw	3
 25168  0039B0  0100               	movlb	0	; () banked
 25169  0039B2  6FD2               	movwf	_MdmStatus& (0+255),b
 25170                           
 25171                           ; BSR set to: 0
 25172                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 25173  0039B4  0E39               	movlw	low _MdmStsReady
 25174  0039B6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25175  0039B8  0E00               	movlw	high _MdmStsReady
 25176  0039BA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25177  0039BC  EC5E  F031         	call	_GenerateEvt	;wreg free
 25178                           
 25179                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 25180  0039C0  0E06               	movlw	6
 25181  0039C2  6E28               	movwf	ConfigureModem@MdmConfigState,c
 25182                           
 25183                           ;mdm_gsm_gprs.c: 488: }
 25184                           
 25185                           ;mdm_gsm_gprs.c: 487: break;
 25186                           
 25187                           ;mdm_gsm_gprs.c: 486: default:
 25188                           
 25189                           ;mdm_gsm_gprs.c: 484: break;
 25190                           
 25191                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 25192                           
 25193                           ;mdm_gsm_gprs.c: 481: break;
 25194  0039C4  0012               	return	
 25195  0039C6                     l1027:
 25196  0039C6  5028               	movf	ConfigureModem@MdmConfigState,w,c
 25197                           
 25198                           ; Switch size 1, requested type "space"
 25199                           ; Number of cases is 6, Range of values is 0 to 6
 25200                           ; switch strategies available:
 25201                           ; Name         Instructions Cycles
 25202                           ; simple_byte           19    10 (average)
 25203                           ;	Chosen strategy is simple_byte
 25204  0039C8  0A00               	xorlw	0	; case 0
 25205  0039CA  B4D8               	btfsc	status,2,c
 25206  0039CC  D7A8               	goto	l1028
 25207  0039CE  0A01               	xorlw	1	; case 1
 25208  0039D0  B4D8               	btfsc	status,2,c
 25209  0039D2  D7AD               	goto	l1031
 25210  0039D4  0A03               	xorlw	3	; case 2
 25211  0039D6  B4D8               	btfsc	status,2,c
 25212  0039D8  D7C7               	goto	l1032
 25213  0039DA  0A06               	xorlw	6	; case 4
 25214  0039DC  B4D8               	btfsc	status,2,c
 25215  0039DE  D7D7               	goto	l1033
 25216  0039E0  0A01               	xorlw	1	; case 5
 25217  0039E2  B4D8               	btfsc	status,2,c
 25218  0039E4  D7E4               	goto	l1035
 25219  0039E6  0A03               	xorlw	3	; case 6
 25220  0039E8  0012               	return	
 25221  0039EA                     __end_of_ConfigureModem:
 25222                           	opt stack 0
 25223                           tosu	equ	0xFFF
 25224                           tosh	equ	0xFFE
 25225                           tosl	equ	0xFFD
 25226                           pclath	equ	0xFFA
 25227                           tblptru	equ	0xFF8
 25228                           tblptrh	equ	0xFF7
 25229                           tblptrl	equ	0xFF6
 25230                           tablat	equ	0xFF5
 25231                           prodh	equ	0xFF4
 25232                           prodl	equ	0xFF3
 25233                           intcon	equ	0xFF2
 25234                           intcon2	equ	0xFF1
 25235                           intcon3	equ	0xFF0
 25236                           indf0	equ	0xFEF
 25237                           postinc0	equ	0xFEE
 25238                           plusw0	equ	0xFEB
 25239                           fsr0h	equ	0xFEA
 25240                           fsr0l	equ	0xFE9
 25241                           wreg	equ	0xFE8
 25242                           indf1	equ	0xFE7
 25243                           postinc1	equ	0xFE6
 25244                           postdec1	equ	0xFE5
 25245                           plusw1	equ	0xFE3
 25246                           fsr1h	equ	0xFE2
 25247                           fsr1l	equ	0xFE1
 25248                           indf2	equ	0xFDF
 25249                           postinc2	equ	0xFDE
 25250                           postdec2	equ	0xFDD
 25251                           plusw2	equ	0xFDB
 25252                           fsr2h	equ	0xFDA
 25253                           fsr2l	equ	0xFD9
 25254                           status	equ	0xFD8
 25255                           
 25256 ;; *************** function _Uart_InitUartModule *****************
 25257 ;; Defined at:
 25258 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25259 ;; Parameters:    Size  Location     Type
 25260 ;;  Module          1    wreg     unsigned char 
 25261 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 25262 ;;		 -> UartConfig(21), 
 25263 ;; Auto vars:     Size  Location     Type
 25264 ;;  Module          1   65[BANK0 ] unsigned char 
 25265 ;; Return value:  Size  Location     Type
 25266 ;;                  1    wreg      void 
 25267 ;; Registers used:
 25268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25269 ;; Tracked objects:
 25270 ;;		On entry : 0/0
 25271 ;;		On exit  : 0/0
 25272 ;;		Unchanged: 0/0
 25273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25276 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25277 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25278 ;;Total ram usage:        5 bytes
 25279 ;; Hardware stack levels used:    1
 25280 ;; Hardware stack levels required when called:   13
 25281 ;; This function calls:
 25282 ;;		_SetUartBaudRate
 25283 ;; This function is called by:
 25284 ;;		_ConfigureModem
 25285 ;;		_Mdm_MainTask
 25286 ;; This function uses a non-reentrant model
 25287 ;;
 25288                           
 25289                           	psect	text118
 25290  000ABC                     __ptext118:
 25291                           	opt stack 0
 25292  000ABC                     _Uart_InitUartModule:
 25293                           	opt stack 14
 25294                           
 25295                           ;incstack = 0
 25296                           ;Uart_InitUartModule@Module stored from wreg
 25297  000ABC  0100               	movlb	0	; () banked
 25298  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 25299                           
 25300                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 25301  000AC0  0100               	movlb	0	; () banked
 25302  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 25303  000AC4  A4D8               	btfss	status,2,c
 25304  000AC6  D0BE               	goto	l668
 25305                           
 25306                           ; BSR set to: 0
 25307                           ;uart_drv.c: 291: {
 25308                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 25309  000AC8  9C94               	bcf	3988,6,c	;volatile
 25310                           
 25311                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 25312  000ACA  8E94               	bsf	3988,7,c	;volatile
 25313                           
 25314                           ; BSR set to: 0
 25315                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 25316  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 25317  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 25318  000AD4  0E01               	movlw	1
 25319  000AD6  ECA5  F014         	call	_SetUartBaudRate
 25320                           
 25321                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 25322  000ADA  0E00               	movlw	0
 25323  000ADC  6EAD               	movwf	4013,c	;volatile
 25324                           
 25325                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 25326  000ADE  0100               	movlb	0	; () banked
 25327  000AE0  EE20 F004          	lfsr	2,4
 25328  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25329  000AE6  26D9               	addwf	fsr2l,f,c
 25330  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25331  000AEA  22DA               	addwfc	fsr2h,f,c
 25332  000AEC  50DF               	movf	indf2,w,c
 25333  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25334  000AF0  0E06               	movlw	6
 25335  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25336  000AF4                     u12615:
 25337  000AF4  90D8               	bcf	status,0,c
 25338  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25339  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25340  000AFA  D7FC               	goto	u12615
 25341  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25342  000AFE  12AD               	iorwf	4013,f,c	;volatile
 25343                           
 25344                           ; BSR set to: 0
 25345                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 25346  000B00  EE20 F006          	lfsr	2,6
 25347  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25348  000B06  26D9               	addwf	fsr2l,f,c
 25349  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25350  000B0A  22DA               	addwfc	fsr2h,f,c
 25351  000B0C  50DF               	movf	indf2,w,c
 25352  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25353  000B10  0E05               	movlw	5
 25354  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25355  000B14                     u12625:
 25356  000B14  90D8               	bcf	status,0,c
 25357  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25358  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25359  000B1A  D7FC               	goto	u12625
 25360  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25361  000B1E  12AD               	iorwf	4013,f,c	;volatile
 25362                           
 25363                           ; BSR set to: 0
 25364                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 25365  000B20  EE20 F001          	lfsr	2,1
 25366  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25367  000B26  26D9               	addwf	fsr2l,f,c
 25368  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25369  000B2A  22DA               	addwfc	fsr2h,f,c
 25370  000B2C  50DF               	movf	indf2,w,c
 25371  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25372  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25373  000B32  0BF0               	andlw	240
 25374  000B34  12AD               	iorwf	4013,f,c	;volatile
 25375                           
 25376                           ; BSR set to: 0
 25377                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 25378  000B36  EE20 F008          	lfsr	2,8
 25379  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25380  000B3C  26D9               	addwf	fsr2l,f,c
 25381  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25382  000B40  22DA               	addwfc	fsr2h,f,c
 25383  000B42  50DF               	movf	indf2,w,c
 25384  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25385  000B46  90D8               	bcf	status,0,c
 25386  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25387  000B4A  90D8               	bcf	status,0,c
 25388  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25389  000B4E  90D8               	bcf	status,0,c
 25390  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25391  000B52  12AD               	iorwf	4013,f,c	;volatile
 25392                           
 25393                           ; BSR set to: 0
 25394                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 25395  000B54  EE20 F003          	lfsr	2,3
 25396  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25397  000B5A  26D9               	addwf	fsr2l,f,c
 25398  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25399  000B5E  22DA               	addwfc	fsr2h,f,c
 25400  000B60  50DF               	movf	indf2,w,c
 25401  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25402  000B64  90D8               	bcf	status,0,c
 25403  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25404  000B68  90D8               	bcf	status,0,c
 25405  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25406  000B6C  12AD               	iorwf	4013,f,c	;volatile
 25407                           
 25408                           ; BSR set to: 0
 25409                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 25410  000B6E  0E00               	movlw	0
 25411  000B70  6EAC               	movwf	4012,c	;volatile
 25412                           
 25413                           ; BSR set to: 0
 25414                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25415  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25416  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25417  000B7A  50DF               	movf	indf2,w,c
 25418  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25419  000B7E  0E00               	movlw	0
 25420  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25421  000B82  0E80               	movlw	128
 25422  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25423  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25424  000B88  12AC               	iorwf	4012,f,c	;volatile
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25428  000B8A  EE20 F005          	lfsr	2,5
 25429  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25430  000B90  26D9               	addwf	fsr2l,f,c
 25431  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25432  000B94  22DA               	addwfc	fsr2h,f,c
 25433  000B96  50DF               	movf	indf2,w,c
 25434  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25435  000B9A  0E06               	movlw	6
 25436  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25437  000B9E                     u12635:
 25438  000B9E  90D8               	bcf	status,0,c
 25439  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25440  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25441  000BA4  D7FC               	goto	u12635
 25442  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25443  000BA8  12AC               	iorwf	4012,f,c	;volatile
 25444                           
 25445                           ; BSR set to: 0
 25446                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 25447  000BAA  EE20 F007          	lfsr	2,7
 25448  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25449  000BB0  26D9               	addwf	fsr2l,f,c
 25450  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25451  000BB4  22DA               	addwfc	fsr2h,f,c
 25452  000BB6  50DF               	movf	indf2,w,c
 25453  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25454  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25455  000BBC  0BF0               	andlw	240
 25456  000BBE  12AC               	iorwf	4012,f,c	;volatile
 25457                           
 25458                           ; BSR set to: 0
 25459                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 25460  000BC0  0E00               	movlw	0
 25461  000BC2  6E7E               	movwf	3966,c	;volatile
 25462                           
 25463                           ; BSR set to: 0
 25464                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 25465  000BC4  EE20 F002          	lfsr	2,2
 25466  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25467  000BCA  26D9               	addwf	fsr2l,f,c
 25468  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25469  000BCE  22DA               	addwfc	fsr2h,f,c
 25470  000BD0  50DF               	movf	indf2,w,c
 25471  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25472  000BD4  90D8               	bcf	status,0,c
 25473  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25474  000BD8  90D8               	bcf	status,0,c
 25475  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25476  000BDC  90D8               	bcf	status,0,c
 25477  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25478  000BE0  127E               	iorwf	3966,f,c	;volatile
 25479                           
 25480                           ; BSR set to: 0
 25481                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 25482  000BE2  EE20 F00A          	lfsr	2,10
 25483  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25484  000BE8  26D9               	addwf	fsr2l,f,c
 25485  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25486  000BEC  22DA               	addwfc	fsr2h,f,c
 25487  000BEE  50DF               	movf	indf2,w,c
 25488  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25489  000BF2  90D8               	bcf	status,0,c
 25490  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25491  000BF6  127E               	iorwf	3966,f,c	;volatile
 25492                           
 25493                           ; BSR set to: 0
 25494                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 25495  000BF8  EE20 F009          	lfsr	2,9
 25496  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25497  000BFE  26D9               	addwf	fsr2l,f,c
 25498  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25499  000C02  22DA               	addwfc	fsr2h,f,c
 25500  000C04  50DF               	movf	indf2,w,c
 25501  000C06  127E               	iorwf	3966,f,c	;volatile
 25502                           
 25503                           ; BSR set to: 0
 25504                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 25505  000C08  EE20 F00B          	lfsr	2,11
 25506  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25507  000C0E  26D9               	addwf	fsr2l,f,c
 25508  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25509  000C12  22DA               	addwfc	fsr2h,f,c
 25510  000C14  50DF               	movf	indf2,w,c
 25511  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25512  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25513  000C1A  509D               	movf	3997,w,c	;volatile
 25514  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25515  000C1E  0BEF               	andlw	-17
 25516  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25517  000C22  6E9D               	movwf	3997,c	;volatile
 25518                           
 25519                           ; BSR set to: 0
 25520                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 25521  000C24  EE20 F00C          	lfsr	2,12
 25522  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25523  000C2A  26D9               	addwf	fsr2l,f,c
 25524  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25525  000C2E  22DA               	addwfc	fsr2h,f,c
 25526  000C30  50DF               	movf	indf2,w,c
 25527  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25528  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25529  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 25530  000C38  509D               	movf	3997,w,c	;volatile
 25531  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25532  000C3C  0BDF               	andlw	-33
 25533  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25534  000C40  6E9D               	movwf	3997,c	;volatile
 25535                           
 25536                           ;uart_drv.c: 326: }
 25537  000C42  0012               	return	
 25538  000C44                     l668:
 25539                           
 25540                           ; BSR set to: 0
 25541                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 25542                           
 25543                           ; BSR set to: 0
 25544  000C44  0E02               	movlw	2
 25545  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 25546  000C48  A4D8               	btfss	status,2,c
 25547  000C4A  0012               	return	
 25548                           
 25549                           ; BSR set to: 0
 25550                           ;uart_drv.c: 328: {
 25551                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 25552  000C4C  9094               	bcf	3988,0,c	;volatile
 25553                           
 25554                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 25555  000C4E  8294               	bsf	3988,1,c	;volatile
 25556                           
 25557                           ; BSR set to: 0
 25558                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 25559  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 25560  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 25561  000C58  0E02               	movlw	2
 25562  000C5A  ECA5  F014         	call	_SetUartBaudRate
 25563                           
 25564                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 25565  000C5E  0E00               	movlw	0
 25566  000C60  6EA8               	movwf	4008,c	;volatile
 25567                           
 25568                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 25569  000C62  0100               	movlb	0	; () banked
 25570  000C64  EE20 F004          	lfsr	2,4
 25571  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25572  000C6A  26D9               	addwf	fsr2l,f,c
 25573  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25574  000C6E  22DA               	addwfc	fsr2h,f,c
 25575  000C70  50DF               	movf	indf2,w,c
 25576  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25577  000C74  0E06               	movlw	6
 25578  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25579  000C78                     u12655:
 25580  000C78  90D8               	bcf	status,0,c
 25581  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25582  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25583  000C7E  D7FC               	goto	u12655
 25584  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25585  000C82  12A8               	iorwf	4008,f,c	;volatile
 25586                           
 25587                           ; BSR set to: 0
 25588                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 25589  000C84  EE20 F006          	lfsr	2,6
 25590  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25591  000C8A  26D9               	addwf	fsr2l,f,c
 25592  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25593  000C8E  22DA               	addwfc	fsr2h,f,c
 25594  000C90  50DF               	movf	indf2,w,c
 25595  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25596  000C94  0E05               	movlw	5
 25597  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25598  000C98                     u12665:
 25599  000C98  90D8               	bcf	status,0,c
 25600  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25601  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25602  000C9E  D7FC               	goto	u12665
 25603  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25604  000CA2  12A8               	iorwf	4008,f,c	;volatile
 25605                           
 25606                           ; BSR set to: 0
 25607                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 25608  000CA4  EE20 F001          	lfsr	2,1
 25609  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25610  000CAA  26D9               	addwf	fsr2l,f,c
 25611  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25612  000CAE  22DA               	addwfc	fsr2h,f,c
 25613  000CB0  50DF               	movf	indf2,w,c
 25614  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25615  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25616  000CB6  0BF0               	andlw	240
 25617  000CB8  12A8               	iorwf	4008,f,c	;volatile
 25618                           
 25619                           ; BSR set to: 0
 25620                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 25621  000CBA  EE20 F008          	lfsr	2,8
 25622  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25623  000CC0  26D9               	addwf	fsr2l,f,c
 25624  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25625  000CC4  22DA               	addwfc	fsr2h,f,c
 25626  000CC6  50DF               	movf	indf2,w,c
 25627  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25628  000CCA  90D8               	bcf	status,0,c
 25629  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25630  000CCE  90D8               	bcf	status,0,c
 25631  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25632  000CD2  90D8               	bcf	status,0,c
 25633  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25634  000CD6  12A8               	iorwf	4008,f,c	;volatile
 25635                           
 25636                           ; BSR set to: 0
 25637                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 25638  000CD8  EE20 F003          	lfsr	2,3
 25639  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25640  000CDE  26D9               	addwf	fsr2l,f,c
 25641  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25642  000CE2  22DA               	addwfc	fsr2h,f,c
 25643  000CE4  50DF               	movf	indf2,w,c
 25644  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25645  000CE8  90D8               	bcf	status,0,c
 25646  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25647  000CEC  90D8               	bcf	status,0,c
 25648  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25649  000CF0  12A8               	iorwf	4008,f,c	;volatile
 25650                           
 25651                           ; BSR set to: 0
 25652                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 25653  000CF2  0E00               	movlw	0
 25654  000CF4  6E9C               	movwf	3996,c	;volatile
 25655                           
 25656                           ; BSR set to: 0
 25657                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25658  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25659  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25660  000CFE  50DF               	movf	indf2,w,c
 25661  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25662  000D02  0E00               	movlw	0
 25663  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25664  000D06  0E80               	movlw	128
 25665  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25666  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25667  000D0C  129C               	iorwf	3996,f,c	;volatile
 25668                           
 25669                           ; BSR set to: 0
 25670                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25671  000D0E  EE20 F005          	lfsr	2,5
 25672  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25673  000D14  26D9               	addwf	fsr2l,f,c
 25674  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25675  000D18  22DA               	addwfc	fsr2h,f,c
 25676  000D1A  50DF               	movf	indf2,w,c
 25677  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25678  000D1E  0E06               	movlw	6
 25679  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25680  000D22                     u12675:
 25681  000D22  90D8               	bcf	status,0,c
 25682  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25683  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25684  000D28  D7FC               	goto	u12675
 25685  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25686  000D2C  129C               	iorwf	3996,f,c	;volatile
 25687                           
 25688                           ; BSR set to: 0
 25689                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 25690  000D2E  EE20 F007          	lfsr	2,7
 25691  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25692  000D34  26D9               	addwf	fsr2l,f,c
 25693  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25694  000D38  22DA               	addwfc	fsr2h,f,c
 25695  000D3A  50DF               	movf	indf2,w,c
 25696  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25697  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25698  000D40  0BF0               	andlw	240
 25699  000D42  129C               	iorwf	3996,f,c	;volatile
 25700                           
 25701                           ; BSR set to: 0
 25702                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 25703  000D44  0E00               	movlw	0
 25704  000D46  6E7C               	movwf	3964,c	;volatile
 25705                           
 25706                           ; BSR set to: 0
 25707                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 25708  000D48  EE20 F002          	lfsr	2,2
 25709  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25710  000D4E  26D9               	addwf	fsr2l,f,c
 25711  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25712  000D52  22DA               	addwfc	fsr2h,f,c
 25713  000D54  50DF               	movf	indf2,w,c
 25714  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25715  000D58  90D8               	bcf	status,0,c
 25716  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25717  000D5C  90D8               	bcf	status,0,c
 25718  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25719  000D60  90D8               	bcf	status,0,c
 25720  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25721  000D64  127C               	iorwf	3964,f,c	;volatile
 25722                           
 25723                           ; BSR set to: 0
 25724                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 25725  000D66  EE20 F00A          	lfsr	2,10
 25726  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25727  000D6C  26D9               	addwf	fsr2l,f,c
 25728  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25729  000D70  22DA               	addwfc	fsr2h,f,c
 25730  000D72  50DF               	movf	indf2,w,c
 25731  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25732  000D76  90D8               	bcf	status,0,c
 25733  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25734  000D7A  127C               	iorwf	3964,f,c	;volatile
 25735                           
 25736                           ; BSR set to: 0
 25737                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 25738  000D7C  EE20 F009          	lfsr	2,9
 25739  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25740  000D82  26D9               	addwf	fsr2l,f,c
 25741  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25742  000D86  22DA               	addwfc	fsr2h,f,c
 25743  000D88  50DF               	movf	indf2,w,c
 25744  000D8A  127C               	iorwf	3964,f,c	;volatile
 25745                           
 25746                           ; BSR set to: 0
 25747                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 25748  000D8C  EE20 F00B          	lfsr	2,11
 25749  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25750  000D92  26D9               	addwf	fsr2l,f,c
 25751  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25752  000D96  22DA               	addwfc	fsr2h,f,c
 25753  000D98  50DF               	movf	indf2,w,c
 25754  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25755  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25756  000D9E  50A3               	movf	4003,w,c	;volatile
 25757  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25758  000DA2  0BEF               	andlw	-17
 25759  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25760  000DA6  6EA3               	movwf	4003,c	;volatile
 25761                           
 25762                           ; BSR set to: 0
 25763                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 25764  000DA8  EE20 F00C          	lfsr	2,12
 25765  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25766  000DAE  26D9               	addwf	fsr2l,f,c
 25767  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25768  000DB2  22DA               	addwfc	fsr2h,f,c
 25769  000DB4  50DF               	movf	indf2,w,c
 25770  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25771  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25772  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 25773  000DBC  50A3               	movf	4003,w,c	;volatile
 25774  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25775  000DC0  0BDF               	andlw	-33
 25776  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25777  000DC4  6EA3               	movwf	4003,c	;volatile
 25778                           
 25779                           ; BSR set to: 0
 25780  000DC6  0012               	return	
 25781  000DC8                     __end_of_Uart_InitUartModule:
 25782                           	opt stack 0
 25783                           tosu	equ	0xFFF
 25784                           tosh	equ	0xFFE
 25785                           tosl	equ	0xFFD
 25786                           pclath	equ	0xFFA
 25787                           tblptru	equ	0xFF8
 25788                           tblptrh	equ	0xFF7
 25789                           tblptrl	equ	0xFF6
 25790                           tablat	equ	0xFF5
 25791                           prodh	equ	0xFF4
 25792                           prodl	equ	0xFF3
 25793                           intcon	equ	0xFF2
 25794                           intcon2	equ	0xFF1
 25795                           intcon3	equ	0xFF0
 25796                           indf0	equ	0xFEF
 25797                           postinc0	equ	0xFEE
 25798                           plusw0	equ	0xFEB
 25799                           fsr0h	equ	0xFEA
 25800                           fsr0l	equ	0xFE9
 25801                           wreg	equ	0xFE8
 25802                           indf1	equ	0xFE7
 25803                           postinc1	equ	0xFE6
 25804                           postdec1	equ	0xFE5
 25805                           plusw1	equ	0xFE3
 25806                           fsr1h	equ	0xFE2
 25807                           fsr1l	equ	0xFE1
 25808                           indf2	equ	0xFDF
 25809                           postinc2	equ	0xFDE
 25810                           postdec2	equ	0xFDD
 25811                           plusw2	equ	0xFDB
 25812                           fsr2h	equ	0xFDA
 25813                           fsr2l	equ	0xFD9
 25814                           status	equ	0xFD8
 25815                           
 25816 ;; *************** function _SetUartBaudRate *****************
 25817 ;; Defined at:
 25818 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25819 ;; Parameters:    Size  Location     Type
 25820 ;;  Module          1    wreg     unsigned char 
 25821 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 25822 ;;		 -> UartConfig(21), 
 25823 ;; Auto vars:     Size  Location     Type
 25824 ;;  Module          1   57[BANK0 ] unsigned char 
 25825 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 25826 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 25827 ;; Return value:  Size  Location     Type
 25828 ;;                  1    wreg      void 
 25829 ;; Registers used:
 25830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25831 ;; Tracked objects:
 25832 ;;		On entry : 0/0
 25833 ;;		On exit  : 0/0
 25834 ;;		Unchanged: 0/0
 25835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25837 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25839 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25840 ;;Total ram usage:        7 bytes
 25841 ;; Hardware stack levels used:    1
 25842 ;; Hardware stack levels required when called:   12
 25843 ;; This function calls:
 25844 ;;		___lldiv
 25845 ;;		___lmul
 25846 ;; This function is called by:
 25847 ;;		_Uart_InitUartModule
 25848 ;; This function uses a non-reentrant model
 25849 ;;
 25850                           
 25851                           	psect	text119
 25852  00294A                     __ptext119:
 25853                           	opt stack 0
 25854  00294A                     _SetUartBaudRate:
 25855                           	opt stack 14
 25856                           
 25857                           ; BSR set to: 0
 25858                           ;incstack = 0
 25859                           ;SetUartBaudRate@Module stored from wreg
 25860  00294A  0100               	movlb	0	; () banked
 25861  00294C  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 25862                           
 25863                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 25864  00294E  0E00               	movlw	0
 25865  002950  0100               	movlb	0	; () banked
 25866  002952  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25867  002954  0E00               	movlw	0
 25868  002956  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25869                           
 25870                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 25871  002958  0E00               	movlw	0
 25872  00295A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25873                           
 25874                           ; BSR set to: 0
 25875                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 25876  00295C  EE20 F002          	lfsr	2,2
 25877  002960  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25878  002962  26D9               	addwf	fsr2l,f,c
 25879  002964  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25880  002966  22DA               	addwfc	fsr2h,f,c
 25881  002968  50DF               	movf	indf2,w,c
 25882  00296A  A4D8               	btfss	status,2,c
 25883  00296C  D00B               	goto	l625
 25884                           
 25885                           ; BSR set to: 0
 25886  00296E  EE20 F002          	lfsr	2,2
 25887  002972  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25888  002974  26D9               	addwf	fsr2l,f,c
 25889  002976  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25890  002978  22DA               	addwfc	fsr2h,f,c
 25891  00297A  50DF               	movf	indf2,w,c
 25892  00297C  A4D8               	btfss	status,2,c
 25893  00297E  D002               	goto	l625
 25894                           
 25895                           ; BSR set to: 0
 25896                           ;uart_drv.c: 128: {
 25897                           ;uart_drv.c: 129: DivisionFactor = 64;
 25898  002980  0E40               	movlw	64
 25899  002982  D039               	goto	L39
 25900  002984                     l625:
 25901                           
 25902                           ; BSR set to: 0
 25903                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 25904                           
 25905                           ; BSR set to: 0
 25906  002984  EE20 F002          	lfsr	2,2
 25907  002988  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25908  00298A  26D9               	addwf	fsr2l,f,c
 25909  00298C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25910  00298E  22DA               	addwfc	fsr2h,f,c
 25911  002990  04DE               	decf	postinc2,w,c
 25912  002992  A4D8               	btfss	status,2,c
 25913  002994  D009               	goto	l627
 25914                           
 25915                           ; BSR set to: 0
 25916  002996  EE20 F002          	lfsr	2,2
 25917  00299A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25918  00299C  26D9               	addwf	fsr2l,f,c
 25919  00299E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25920  0029A0  22DA               	addwfc	fsr2h,f,c
 25921  0029A2  50DF               	movf	indf2,w,c
 25922  0029A4  B4D8               	btfsc	status,2,c
 25923  0029A6  D012               	goto	u11780
 25924  0029A8                     l627:
 25925                           
 25926                           ; BSR set to: 0
 25927                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25928                           
 25929                           ; BSR set to: 0
 25930  0029A8  EE20 F002          	lfsr	2,2
 25931  0029AC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25932  0029AE  26D9               	addwf	fsr2l,f,c
 25933  0029B0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25934  0029B2  22DA               	addwfc	fsr2h,f,c
 25935  0029B4  50DF               	movf	indf2,w,c
 25936  0029B6  A4D8               	btfss	status,2,c
 25937  0029B8  D00B               	goto	l629
 25938                           
 25939                           ; BSR set to: 0
 25940  0029BA  EE20 F002          	lfsr	2,2
 25941  0029BE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25942  0029C0  26D9               	addwf	fsr2l,f,c
 25943  0029C2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25944  0029C4  22DA               	addwfc	fsr2h,f,c
 25945  0029C6  04DE               	decf	postinc2,w,c
 25946  0029C8  A4D8               	btfss	status,2,c
 25947  0029CA  D002               	goto	l629
 25948  0029CC                     u11780:
 25949                           
 25950                           ; BSR set to: 0
 25951                           ;uart_drv.c: 136: {
 25952                           ;uart_drv.c: 137: DivisionFactor = 16;
 25953  0029CC  0E10               	movlw	16
 25954  0029CE  D013               	goto	L39
 25955  0029D0                     l629:
 25956                           
 25957                           ; BSR set to: 0
 25958                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25959                           
 25960                           ; BSR set to: 0
 25961  0029D0  EE20 F002          	lfsr	2,2
 25962  0029D4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25963  0029D6  26D9               	addwf	fsr2l,f,c
 25964  0029D8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25965  0029DA  22DA               	addwfc	fsr2h,f,c
 25966  0029DC  04DE               	decf	postinc2,w,c
 25967  0029DE  A4D8               	btfss	status,2,c
 25968  0029E0  D00B               	goto	l631
 25969                           
 25970                           ; BSR set to: 0
 25971  0029E2  EE20 F002          	lfsr	2,2
 25972  0029E6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25973  0029E8  26D9               	addwf	fsr2l,f,c
 25974  0029EA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25975  0029EC  22DA               	addwfc	fsr2h,f,c
 25976  0029EE  04DE               	decf	postinc2,w,c
 25977  0029F0  A4D8               	btfss	status,2,c
 25978  0029F2  D002               	goto	l631
 25979                           
 25980                           ; BSR set to: 0
 25981                           ;uart_drv.c: 140: {
 25982                           ;uart_drv.c: 141: DivisionFactor = 4;
 25983  0029F4  0E04               	movlw	4
 25984  0029F6                     L39:
 25985  0029F6  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25986  0029F8                     l631:
 25987                           
 25988                           ; BSR set to: 0
 25989                           ;uart_drv.c: 146: }
 25990                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 25991                           
 25992                           ; BSR set to: 0
 25993                           
 25994                           ; BSR set to: 0
 25995                           
 25996                           ; BSR set to: 0
 25997                           
 25998                           ; BSR set to: 0
 25999                           
 26000                           ;uart_drv.c: 143: else
 26001                           ;uart_drv.c: 144: {
 26002                           
 26003                           ; BSR set to: 0
 26004  0029F8  EE20 F00D          	lfsr	2,13
 26005  0029FC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26006  0029FE  26D9               	addwf	fsr2l,f,c
 26007  002A00  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26008  002A02  22DA               	addwfc	fsr2h,f,c
 26009  002A04  CFDE F089          	movff	postinc2,___lldiv@dividend
 26010  002A08  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 26011  002A0C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 26012  002A10  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 26013  002A14  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 26014  002A16  6F7D               	movwf	___lmul@multiplier& (0+255),b
 26015  002A18  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 26016  002A1A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 26017  002A1C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 26018  002A1E  EE20 F011          	lfsr	2,17
 26019  002A22  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 26020  002A24  26D9               	addwf	fsr2l,f,c
 26021  002A26  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 26022  002A28  22DA               	addwfc	fsr2h,f,c
 26023  002A2A  CFDE F081          	movff	postinc2,___lmul@multiplicand
 26024  002A2E  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 26025  002A32  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 26026  002A36  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 26027  002A3A  ECCB  F029         	call	___lmul	;wreg free
 26028  002A3E  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 26029  002A42  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 26030  002A46  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 26031  002A4A  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 26032  002A4E  ECE1  F026         	call	___lldiv	;wreg free
 26033  002A52  0EFF               	movlw	255
 26034  002A54  0100               	movlb	0	; () banked
 26035  002A56  2589               	addwf	?___lldiv& (0+255),w,b
 26036  002A58  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 26037  002A5A  0EFF               	movlw	255
 26038  002A5C  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 26039  002A5E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 26040                           
 26041                           ; BSR set to: 0
 26042                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 26043  002A60  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 26044  002A62  A4D8               	btfss	status,2,c
 26045  002A64  D005               	goto	l633
 26046                           
 26047                           ; BSR set to: 0
 26048                           ;uart_drv.c: 152: {
 26049                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 26050  002A66  0E00               	movlw	0
 26051  002A68  6E7F               	movwf	3967,c	;volatile
 26052                           
 26053                           ; BSR set to: 0
 26054                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 26055  002A6A  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 26056                           
 26057                           ;uart_drv.c: 156: }
 26058  002A6E  0012               	return	
 26059  002A70                     l633:
 26060                           
 26061                           ; BSR set to: 0
 26062                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 26063                           
 26064                           ; BSR set to: 0
 26065  002A70  0E02               	movlw	2
 26066  002A72  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 26067  002A74  A4D8               	btfss	status,2,c
 26068  002A76  0012               	return	
 26069                           
 26070                           ; BSR set to: 0
 26071                           ;uart_drv.c: 158: {
 26072                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 26073  002A78  0E00               	movlw	0
 26074  002A7A  6E7D               	movwf	3965,c	;volatile
 26075                           
 26076                           ; BSR set to: 0
 26077                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 26078  002A7C  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 26079                           
 26080                           ; BSR set to: 0
 26081  002A80  0012               	return	
 26082  002A82                     __end_of_SetUartBaudRate:
 26083                           	opt stack 0
 26084                           tosu	equ	0xFFF
 26085                           tosh	equ	0xFFE
 26086                           tosl	equ	0xFFD
 26087                           pclath	equ	0xFFA
 26088                           tblptru	equ	0xFF8
 26089                           tblptrh	equ	0xFF7
 26090                           tblptrl	equ	0xFF6
 26091                           tablat	equ	0xFF5
 26092                           prodh	equ	0xFF4
 26093                           prodl	equ	0xFF3
 26094                           intcon	equ	0xFF2
 26095                           intcon2	equ	0xFF1
 26096                           intcon3	equ	0xFF0
 26097                           indf0	equ	0xFEF
 26098                           postinc0	equ	0xFEE
 26099                           plusw0	equ	0xFEB
 26100                           fsr0h	equ	0xFEA
 26101                           fsr0l	equ	0xFE9
 26102                           wreg	equ	0xFE8
 26103                           indf1	equ	0xFE7
 26104                           postinc1	equ	0xFE6
 26105                           postdec1	equ	0xFE5
 26106                           plusw1	equ	0xFE3
 26107                           fsr1h	equ	0xFE2
 26108                           fsr1l	equ	0xFE1
 26109                           indf2	equ	0xFDF
 26110                           postinc2	equ	0xFDE
 26111                           postdec2	equ	0xFDD
 26112                           plusw2	equ	0xFDB
 26113                           fsr2h	equ	0xFDA
 26114                           fsr2l	equ	0xFD9
 26115                           status	equ	0xFD8
 26116                           
 26117 ;; *************** function ___lmul *****************
 26118 ;; Defined at:
 26119 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 26120 ;; Parameters:    Size  Location     Type
 26121 ;;  multiplier      4   29[BANK0 ] unsigned long 
 26122 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 26123 ;; Auto vars:     Size  Location     Type
 26124 ;;  product         4   37[BANK0 ] unsigned long 
 26125 ;; Return value:  Size  Location     Type
 26126 ;;                  4   29[BANK0 ] unsigned long 
 26127 ;; Registers used:
 26128 ;;		wreg, status,2, status,0
 26129 ;; Tracked objects:
 26130 ;;		On entry : 0/0
 26131 ;;		On exit  : 0/0
 26132 ;;		Unchanged: 0/0
 26133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26135 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26137 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26138 ;;Total ram usage:       12 bytes
 26139 ;; Hardware stack levels used:    1
 26140 ;; Hardware stack levels required when called:   11
 26141 ;; This function calls:
 26142 ;;		Nothing
 26143 ;; This function is called by:
 26144 ;;		_Tmr_TmrBPrSet
 26145 ;;		_SetUartBaudRate
 26146 ;;		_strtol
 26147 ;; This function uses a non-reentrant model
 26148 ;;
 26149                           
 26150                           	psect	text120
 26151  005396                     __ptext120:
 26152                           	opt stack 0
 26153  005396                     ___lmul:
 26154                           	opt stack 15
 26155                           
 26156                           ; BSR set to: 0
 26157                           ;incstack = 0
 26158  005396  0E00               	movlw	0
 26159  005398  0100               	movlb	0	; () banked
 26160  00539A  6F85               	movwf	___lmul@product& (0+255),b
 26161  00539C  0E00               	movlw	0
 26162  00539E  6F86               	movwf	(___lmul@product+1)& (0+255),b
 26163  0053A0  0E00               	movlw	0
 26164  0053A2  6F87               	movwf	(___lmul@product+2)& (0+255),b
 26165  0053A4  0E00               	movlw	0
 26166  0053A6  6F88               	movwf	(___lmul@product+3)& (0+255),b
 26167  0053A8                     
 26168                           ; BSR set to: 0
 26169                           
 26170                           ; BSR set to: 0
 26171  0053A8  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 26172  0053AA  D008               	goto	l2705
 26173                           
 26174                           ; BSR set to: 0
 26175  0053AC  5181               	movf	___lmul@multiplicand& (0+255),w,b
 26176  0053AE  2785               	addwf	___lmul@product& (0+255),f,b
 26177  0053B0  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 26178  0053B2  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 26179  0053B4  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 26180  0053B6  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 26181  0053B8  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 26182  0053BA  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 26183  0053BC                     l2705:
 26184                           
 26185                           ; BSR set to: 0
 26186                           
 26187                           ; BSR set to: 0
 26188  0053BC  90D8               	bcf	status,0,c
 26189  0053BE  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 26190  0053C0  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 26191  0053C2  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 26192  0053C4  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 26193                           
 26194                           ; BSR set to: 0
 26195  0053C6  90D8               	bcf	status,0,c
 26196  0053C8  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 26197  0053CA  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 26198  0053CC  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 26199  0053CE  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 26200  0053D0  517D               	movf	___lmul@multiplier& (0+255),w,b
 26201  0053D2  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 26202  0053D4  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 26203  0053D6  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 26204  0053D8  A4D8               	btfss	status,2,c
 26205  0053DA  D7E6               	goto	l2704
 26206                           
 26207                           ; BSR set to: 0
 26208  0053DC  C085  F07D         	movff	___lmul@product,?___lmul
 26209  0053E0  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 26210  0053E4  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 26211  0053E8  C088  F080         	movff	___lmul@product+3,?___lmul+3
 26212                           
 26213                           ; BSR set to: 0
 26214  0053EC  0012               	return		;funcret
 26215  0053EE                     __end_of___lmul:
 26216                           	opt stack 0
 26217                           tosu	equ	0xFFF
 26218                           tosh	equ	0xFFE
 26219                           tosl	equ	0xFFD
 26220                           pclath	equ	0xFFA
 26221                           tblptru	equ	0xFF8
 26222                           tblptrh	equ	0xFF7
 26223                           tblptrl	equ	0xFF6
 26224                           tablat	equ	0xFF5
 26225                           prodh	equ	0xFF4
 26226                           prodl	equ	0xFF3
 26227                           intcon	equ	0xFF2
 26228                           intcon2	equ	0xFF1
 26229                           intcon3	equ	0xFF0
 26230                           indf0	equ	0xFEF
 26231                           postinc0	equ	0xFEE
 26232                           plusw0	equ	0xFEB
 26233                           fsr0h	equ	0xFEA
 26234                           fsr0l	equ	0xFE9
 26235                           wreg	equ	0xFE8
 26236                           indf1	equ	0xFE7
 26237                           postinc1	equ	0xFE6
 26238                           postdec1	equ	0xFE5
 26239                           plusw1	equ	0xFE3
 26240                           fsr1h	equ	0xFE2
 26241                           fsr1l	equ	0xFE1
 26242                           indf2	equ	0xFDF
 26243                           postinc2	equ	0xFDE
 26244                           postdec2	equ	0xFDD
 26245                           plusw2	equ	0xFDB
 26246                           fsr2h	equ	0xFDA
 26247                           fsr2l	equ	0xFD9
 26248                           status	equ	0xFD8
 26249                           
 26250 ;; *************** function _UartSetConfigLow *****************
 26251 ;; Defined at:
 26252 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26253 ;; Parameters:    Size  Location     Type
 26254 ;;		None
 26255 ;; Auto vars:     Size  Location     Type
 26256 ;;		None
 26257 ;; Return value:  Size  Location     Type
 26258 ;;                  1    wreg      void 
 26259 ;; Registers used:
 26260 ;;		wreg, status,2
 26261 ;; Tracked objects:
 26262 ;;		On entry : 0/0
 26263 ;;		On exit  : 0/0
 26264 ;;		Unchanged: 0/0
 26265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26270 ;;Total ram usage:        0 bytes
 26271 ;; Hardware stack levels used:    1
 26272 ;; Hardware stack levels required when called:   11
 26273 ;; This function calls:
 26274 ;;		Nothing
 26275 ;; This function is called by:
 26276 ;;		_ConfigureModem
 26277 ;; This function uses a non-reentrant model
 26278 ;;
 26279                           
 26280                           	psect	text121
 26281  0053EE                     __ptext121:
 26282                           	opt stack 0
 26283  0053EE                     _UartSetConfigLow:
 26284                           	opt stack 15
 26285                           
 26286                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 26287                           
 26288                           ; BSR set to: 0
 26289                           ;incstack = 0
 26290  0053EE  0E01               	movlw	1
 26291  0053F0  0103               	movlb	3	; () banked
 26292  0053F2  6F26               	movwf	_UartConfig& (0+255),b
 26293                           
 26294                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 26295  0053F4  0E00               	movlw	0
 26296  0053F6  6F27               	movwf	(_UartConfig+1)& (0+255),b
 26297                           
 26298                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 26299  0053F8  0E00               	movlw	0
 26300  0053FA  6F28               	movwf	(_UartConfig+2)& (0+255),b
 26301                           
 26302                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 26303  0053FC  0E00               	movlw	0
 26304  0053FE  6F29               	movwf	(_UartConfig+3)& (0+255),b
 26305                           
 26306                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 26307  005400  0E00               	movlw	0
 26308  005402  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 26309                           
 26310                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 26311  005404  0E00               	movlw	0
 26312  005406  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 26313                           
 26314                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 26315  005408  0E01               	movlw	1
 26316  00540A  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 26317                           
 26318                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 26319  00540C  0E01               	movlw	1
 26320  00540E  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 26321                           
 26322                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 26323  005410  0E00               	movlw	0
 26324  005412  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 26325                           
 26326                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 26327  005414  0E00               	movlw	0
 26328  005416  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 26329                           
 26330                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 26331  005418  0E00               	movlw	0
 26332  00541A  6F30               	movwf	(_UartConfig+10)& (0+255),b
 26333                           
 26334                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26335  00541C  0E00               	movlw	0
 26336  00541E  6F31               	movwf	(_UartConfig+11)& (0+255),b
 26337                           
 26338                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26339  005420  0E01               	movlw	1
 26340  005422  6F32               	movwf	(_UartConfig+12)& (0+255),b
 26341                           
 26342                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 26343  005424  0E00               	movlw	0
 26344  005426  6F33               	movwf	(_UartConfig+13)& (0+255),b
 26345  005428  0E6C               	movlw	108
 26346  00542A  6F34               	movwf	(_UartConfig+14)& (0+255),b
 26347  00542C  0EDC               	movlw	220
 26348  00542E  6F35               	movwf	(_UartConfig+15)& (0+255),b
 26349  005430  0E02               	movlw	2
 26350  005432  6F36               	movwf	(_UartConfig+16)& (0+255),b
 26351                           
 26352                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26353  005434  0E80               	movlw	128
 26354  005436  6F37               	movwf	(_UartConfig+17)& (0+255),b
 26355  005438  0E25               	movlw	37
 26356  00543A  6F38               	movwf	(_UartConfig+18)& (0+255),b
 26357  00543C  0E00               	movlw	0
 26358  00543E  6F39               	movwf	(_UartConfig+19)& (0+255),b
 26359  005440  0E00               	movlw	0
 26360  005442  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 26361                           
 26362                           ; BSR set to: 3
 26363  005444  0012               	return		;funcret
 26364  005446                     __end_of_UartSetConfigLow:
 26365                           	opt stack 0
 26366                           tosu	equ	0xFFF
 26367                           tosh	equ	0xFFE
 26368                           tosl	equ	0xFFD
 26369                           pclath	equ	0xFFA
 26370                           tblptru	equ	0xFF8
 26371                           tblptrh	equ	0xFF7
 26372                           tblptrl	equ	0xFF6
 26373                           tablat	equ	0xFF5
 26374                           prodh	equ	0xFF4
 26375                           prodl	equ	0xFF3
 26376                           intcon	equ	0xFF2
 26377                           intcon2	equ	0xFF1
 26378                           intcon3	equ	0xFF0
 26379                           indf0	equ	0xFEF
 26380                           postinc0	equ	0xFEE
 26381                           plusw0	equ	0xFEB
 26382                           fsr0h	equ	0xFEA
 26383                           fsr0l	equ	0xFE9
 26384                           wreg	equ	0xFE8
 26385                           indf1	equ	0xFE7
 26386                           postinc1	equ	0xFE6
 26387                           postdec1	equ	0xFE5
 26388                           plusw1	equ	0xFE3
 26389                           fsr1h	equ	0xFE2
 26390                           fsr1l	equ	0xFE1
 26391                           indf2	equ	0xFDF
 26392                           postinc2	equ	0xFDE
 26393                           postdec2	equ	0xFDD
 26394                           plusw2	equ	0xFDB
 26395                           fsr2h	equ	0xFDA
 26396                           fsr2l	equ	0xFD9
 26397                           status	equ	0xFD8
 26398                           
 26399 ;; *************** function _CheckModem *****************
 26400 ;; Defined at:
 26401 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26402 ;; Parameters:    Size  Location     Type
 26403 ;;		None
 26404 ;; Auto vars:     Size  Location     Type
 26405 ;;		None
 26406 ;; Return value:  Size  Location     Type
 26407 ;;                  1    wreg      void 
 26408 ;; Registers used:
 26409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26410 ;; Tracked objects:
 26411 ;;		On entry : 0/0
 26412 ;;		On exit  : 0/0
 26413 ;;		Unchanged: 0/0
 26414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26419 ;;Total ram usage:        0 bytes
 26420 ;; Hardware stack levels used:    1
 26421 ;; Hardware stack levels required when called:   14
 26422 ;; This function calls:
 26423 ;;		_GenerateEvt
 26424 ;;		_OsTmr_GetTimerStatus
 26425 ;;		_OsTmr_StartTimer
 26426 ;;		_ReceiveEvt
 26427 ;;		_Uart_WriteConstString
 26428 ;; This function is called by:
 26429 ;;		_Mdm_MainTask
 26430 ;; This function uses a non-reentrant model
 26431 ;;
 26432                           
 26433                           	psect	text122
 26434  00242C                     __ptext122:
 26435                           	opt stack 0
 26436  00242C                     _CheckModem:
 26437                           	opt stack 13
 26438                           
 26439                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 26440                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26441                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 26442                           
 26443                           ; BSR set to: 3
 26444                           ;incstack = 0
 26445  00242C  D096               	goto	l982
 26446  00242E                     
 26447                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 26448  00242E  0EF1               	movlw	low CheckModem@Timeout
 26449  002430  0100               	movlb	0	; () banked
 26450  002432  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26451  002434  0E03               	movlw	high CheckModem@Timeout
 26452  002436  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26453  002438  0ED0               	movlw	208
 26454  00243A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26455  00243C  0E07               	movlw	7
 26456  00243E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26457  002440  0E00               	movlw	0
 26458  002442  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26459  002444  0E00               	movlw	0
 26460  002446  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26461  002448  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 26462                           
 26463                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 26464  00244C  0E01               	movlw	1
 26465  00244E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26466                           
 26467                           ;mdm_gsm_gprs.c: 295: break;
 26468  002450  0012               	return	
 26469  002452                     
 26470                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26471  002452  0EF1               	movlw	low CheckModem@Timeout
 26472  002454  0100               	movlb	0	; () banked
 26473  002456  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26474  002458  0E03               	movlw	high CheckModem@Timeout
 26475  00245A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26476  00245C  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26477  002460  06E8               	decf	wreg,f,c
 26478  002462  A4D8               	btfss	status,2,c
 26479  002464  0012               	return	
 26480                           
 26481                           ;mdm_gsm_gprs.c: 300: {
 26482                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 26483  002466  0E02               	movlw	2
 26484  002468  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26485                           
 26486                           ;mdm_gsm_gprs.c: 303: }
 26487                           ;mdm_gsm_gprs.c: 304: break;
 26488  00246A  0012               	return	
 26489  00246C                     
 26490                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 26491  00246C  0EE5               	movlw	low STR_1
 26492  00246E  0100               	movlb	0	; () banked
 26493  002470  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26494  002472  0EFF               	movlw	high STR_1
 26495  002474  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26496  002476  0E01               	movlw	1
 26497  002478  EC4C  F02D         	call	_Uart_WriteConstString
 26498                           
 26499                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 26500  00247C  0EF1               	movlw	low CheckModem@Timeout
 26501  00247E  0100               	movlb	0	; () banked
 26502  002480  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26503  002482  0E03               	movlw	high CheckModem@Timeout
 26504  002484  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26505  002486  0ED0               	movlw	208
 26506  002488  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26507  00248A  0E07               	movlw	7
 26508  00248C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26509  00248E  0E00               	movlw	0
 26510  002490  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26511  002492  0E00               	movlw	0
 26512  002494  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26513  002496  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 26514                           
 26515                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 26516  00249A  0E03               	movlw	3
 26517  00249C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26518                           
 26519                           ;mdm_gsm_gprs.c: 313: break;
 26520  00249E  0012               	return	
 26521  0024A0                     
 26522                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 26523  0024A0  0E3C               	movlw	low _NewStringReceived
 26524  0024A2  0100               	movlb	0	; () banked
 26525  0024A4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26526  0024A6  0E00               	movlw	high _NewStringReceived
 26527  0024A8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26528  0024AA  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 26529  0024AE  0900               	iorlw	0
 26530  0024B0  B4D8               	btfsc	status,2,c
 26531  0024B2  D02F               	goto	l989
 26532                           
 26533                           ;mdm_gsm_gprs.c: 318: {
 26534                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 26535  0024B4  CC58  FFE8         	movff	_RxBuffer,wreg
 26536  0024B8  0A4F               	xorlw	79
 26537  0024BA  A4D8               	btfss	status,2,c
 26538  0024BC  D005               	goto	u13660
 26539  0024BE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26540  0024C2  0A4B               	xorlw	75
 26541  0024C4  B4D8               	btfsc	status,2,c
 26542  0024C6  D00A               	goto	u13680
 26543  0024C8                     u13660:
 26544  0024C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26545  0024CC  0A4F               	xorlw	79
 26546  0024CE  A4D8               	btfss	status,2,c
 26547  0024D0  0012               	return	
 26548  0024D2  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26549  0024D6  0A4B               	xorlw	75
 26550  0024D8  A4D8               	btfss	status,2,c
 26551  0024DA  0012               	return	
 26552  0024DC                     u13680:
 26553                           
 26554                           ;mdm_gsm_gprs.c: 321: {
 26555                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 26556  0024DC  0E02               	movlw	2
 26557  0024DE  0100               	movlb	0	; () banked
 26558  0024E0  6FD2               	movwf	_MdmStatus& (0+255),b
 26559                           
 26560                           ; BSR set to: 0
 26561                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 26562  0024E2  0EE2               	movlw	low _MdmOnOffPulseRequest
 26563  0024E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26564  0024E6  0E00               	movlw	high _MdmOnOffPulseRequest
 26565  0024E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26566  0024EA  EC5E  F031         	call	_GenerateEvt	;wreg free
 26567                           
 26568                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 26569  0024EE  0EF1               	movlw	low CheckModem@Timeout
 26570  0024F0  0100               	movlb	0	; () banked
 26571  0024F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26572  0024F4  0E03               	movlw	high CheckModem@Timeout
 26573  0024F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26574  0024F8  0EE8               	movlw	232
 26575  0024FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26576  0024FC  0E03               	movlw	3
 26577  0024FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26578  002500  0E00               	movlw	0
 26579  002502  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26580  002504  0E00               	movlw	0
 26581  002506  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26582  002508  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 26583                           
 26584                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 26585  00250C  0E04               	movlw	4
 26586  00250E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26587                           
 26588                           ;mdm_gsm_gprs.c: 329: }
 26589                           ;mdm_gsm_gprs.c: 330: }
 26590  002510  0012               	return	
 26591  002512                     l989:
 26592                           
 26593                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26594  002512  0EF1               	movlw	low CheckModem@Timeout
 26595  002514  0100               	movlb	0	; () banked
 26596  002516  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26597  002518  0E03               	movlw	high CheckModem@Timeout
 26598  00251A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26599  00251C  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26600  002520  06E8               	decf	wreg,f,c
 26601  002522  A4D8               	btfss	status,2,c
 26602  002524  0012               	return	
 26603                           
 26604                           ;mdm_gsm_gprs.c: 332: {
 26605                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 26606  002526  0E00               	movlw	0
 26607  002528  0100               	movlb	0	; () banked
 26608  00252A  6FD2               	movwf	_MdmStatus& (0+255),b
 26609                           
 26610                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 26611  00252C  0E01               	movlw	1
 26612  00252E  6E2B               	movwf	_ComChecCompleted,c
 26613                           
 26614                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 26615  002530  0E05               	movlw	5
 26616  002532  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26617                           
 26618                           ; BSR set to: 0
 26619                           ;mdm_gsm_gprs.c: 343: }
 26620                           ;mdm_gsm_gprs.c: 344: break;
 26621                           
 26622                           ; BSR set to: 0
 26623                           
 26624                           ;mdm_gsm_gprs.c: 340: else
 26625                           ;mdm_gsm_gprs.c: 341: {
 26626                           
 26627                           ; BSR set to: 0
 26628                           
 26629                           ;mdm_gsm_gprs.c: 339: }
 26630  002534  0012               	return	
 26631  002536                     
 26632                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 26633                           
 26634                           ; BSR set to: 0
 26635  002536  0EF1               	movlw	low CheckModem@Timeout
 26636  002538  0100               	movlb	0	; () banked
 26637  00253A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26638  00253C  0E03               	movlw	high CheckModem@Timeout
 26639  00253E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26640  002540  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26641  002544  06E8               	decf	wreg,f,c
 26642  002546  A4D8               	btfss	status,2,c
 26643  002548  0012               	return	
 26644                           
 26645                           ;mdm_gsm_gprs.c: 349: {
 26646                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 26647  00254A  0E00               	movlw	0
 26648  00254C  0100               	movlb	0	; () banked
 26649  00254E  6FD2               	movwf	_MdmStatus& (0+255),b
 26650                           
 26651                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 26652  002550  0E01               	movlw	1
 26653  002552  6E2B               	movwf	_ComChecCompleted,c
 26654                           
 26655                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 26656  002554  0E05               	movlw	5
 26657  002556  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26658                           
 26659                           ; BSR set to: 0
 26660                           ;mdm_gsm_gprs.c: 365: }
 26661                           
 26662                           ; BSR set to: 0
 26663                           ;mdm_gsm_gprs.c: 364: break;
 26664                           
 26665                           ;mdm_gsm_gprs.c: 363: default:
 26666                           
 26667                           ; BSR set to: 0
 26668                           ;mdm_gsm_gprs.c: 361: break;
 26669                           
 26670                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 26671                           
 26672                           ; BSR set to: 0
 26673                           ;mdm_gsm_gprs.c: 356: }
 26674                           ;mdm_gsm_gprs.c: 357: break;
 26675  002558  0012               	return	
 26676  00255A                     l982:
 26677                           
 26678                           ; BSR set to: 0
 26679  00255A  502A               	movf	CheckModem@CheckMdmSts,w,c
 26680                           
 26681                           ; Switch size 1, requested type "space"
 26682                           ; Number of cases is 6, Range of values is 0 to 5
 26683                           ; switch strategies available:
 26684                           ; Name         Instructions Cycles
 26685                           ; simple_byte           19    10 (average)
 26686                           ;	Chosen strategy is simple_byte
 26687  00255C  0A00               	xorlw	0	; case 0
 26688  00255E  B4D8               	btfsc	status,2,c
 26689  002560  D766               	goto	l983
 26690  002562  0A01               	xorlw	1	; case 1
 26691  002564  B4D8               	btfsc	status,2,c
 26692  002566  D775               	goto	l985
 26693  002568  0A03               	xorlw	3	; case 2
 26694  00256A  B4D8               	btfsc	status,2,c
 26695  00256C  D77F               	goto	l987
 26696  00256E  0A01               	xorlw	1	; case 3
 26697  002570  B4D8               	btfsc	status,2,c
 26698  002572  D796               	goto	l988
 26699  002574  0A07               	xorlw	7	; case 4
 26700  002576  B4D8               	btfsc	status,2,c
 26701  002578  D7DE               	goto	l998
 26702  00257A  0A01               	xorlw	1	; case 5
 26703  00257C  0012               	return	
 26704  00257E                     __end_of_CheckModem:
 26705                           	opt stack 0
 26706                           tosu	equ	0xFFF
 26707                           tosh	equ	0xFFE
 26708                           tosl	equ	0xFFD
 26709                           pclath	equ	0xFFA
 26710                           tblptru	equ	0xFF8
 26711                           tblptrh	equ	0xFF7
 26712                           tblptrl	equ	0xFF6
 26713                           tablat	equ	0xFF5
 26714                           prodh	equ	0xFF4
 26715                           prodl	equ	0xFF3
 26716                           intcon	equ	0xFF2
 26717                           intcon2	equ	0xFF1
 26718                           intcon3	equ	0xFF0
 26719                           indf0	equ	0xFEF
 26720                           postinc0	equ	0xFEE
 26721                           plusw0	equ	0xFEB
 26722                           fsr0h	equ	0xFEA
 26723                           fsr0l	equ	0xFE9
 26724                           wreg	equ	0xFE8
 26725                           indf1	equ	0xFE7
 26726                           postinc1	equ	0xFE6
 26727                           postdec1	equ	0xFE5
 26728                           plusw1	equ	0xFE3
 26729                           fsr1h	equ	0xFE2
 26730                           fsr1l	equ	0xFE1
 26731                           indf2	equ	0xFDF
 26732                           postinc2	equ	0xFDE
 26733                           postdec2	equ	0xFDD
 26734                           plusw2	equ	0xFDB
 26735                           fsr2h	equ	0xFDA
 26736                           fsr2l	equ	0xFD9
 26737                           status	equ	0xFD8
 26738                           
 26739 ;; *************** function _MdmCntSm *****************
 26740 ;; Defined at:
 26741 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26742 ;; Parameters:    Size  Location     Type
 26743 ;;		None
 26744 ;; Auto vars:     Size  Location     Type
 26745 ;;		None
 26746 ;; Return value:  Size  Location     Type
 26747 ;;                  1    wreg      void 
 26748 ;; Registers used:
 26749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26750 ;; Tracked objects:
 26751 ;;		On entry : 0/0
 26752 ;;		On exit  : 0/0
 26753 ;;		Unchanged: 0/0
 26754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26759 ;;Total ram usage:        0 bytes
 26760 ;; Hardware stack levels used:    1
 26761 ;; Hardware stack levels required when called:   12
 26762 ;; This function calls:
 26763 ;;		_InitModemInterface
 26764 ;;		_ReceiveEvt
 26765 ;; This function is called by:
 26766 ;;		_Mdm_DrvMainFn
 26767 ;; This function uses a non-reentrant model
 26768 ;;
 26769                           
 26770                           	psect	text123
 26771  0043A0                     __ptext123:
 26772                           	opt stack 0
 26773  0043A0                     _MdmCntSm:
 26774                           	opt stack 15
 26775                           
 26776                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 26777                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 26778                           ;mdm_drv.c: 204: switch (MdmCntState)
 26779                           
 26780                           ;incstack = 0
 26781  0043A0  D045               	goto	l315
 26782  0043A2                     
 26783                           ;mdm_drv.c: 208: InitModemInterface();
 26784  0043A2  EC10  F032         	call	_InitModemInterface	;wreg free
 26785                           
 26786                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 26787  0043A6  0E01               	movlw	1
 26788  0043A8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26789                           
 26790                           ;mdm_drv.c: 211: break;
 26791  0043AA  0012               	return	
 26792  0043AC                     
 26793                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 26794  0043AC  0EE2               	movlw	low _MdmOnOffPulseRequest
 26795  0043AE  0100               	movlb	0	; () banked
 26796  0043B0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26797  0043B2  0E00               	movlw	high _MdmOnOffPulseRequest
 26798  0043B4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26799  0043B6  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 26800  0043BA  0900               	iorlw	0
 26801  0043BC  B4D8               	btfsc	status,2,c
 26802  0043BE  D009               	goto	l319
 26803                           
 26804                           ;mdm_drv.c: 216: {
 26805                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 26806  0043C0  0E02               	movlw	2
 26807  0043C2  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26808                           
 26809                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 26810  0043C4  8284               	bsf	3972,1,c	;volatile
 26811                           
 26812                           ;mdm_drv.c: 222: Counter = 0;
 26813  0043C6  0E00               	movlw	0
 26814  0043C8  0102               	movlb	2	; () banked
 26815  0043CA  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26816  0043CC  0E00               	movlw	0
 26817  0043CE  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 26818                           
 26819                           ;mdm_drv.c: 223: }
 26820  0043D0  0012               	return	
 26821  0043D2                     l319:
 26822                           
 26823                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 26824                           
 26825                           ; BSR set to: 2
 26826  0043D2  0E3D               	movlw	low _MdmResetRequest
 26827  0043D4  0100               	movlb	0	; () banked
 26828  0043D6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26829  0043D8  0E00               	movlw	high _MdmResetRequest
 26830  0043DA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26831  0043DC  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 26832  0043E0  0900               	iorlw	0
 26833  0043E2  B4D8               	btfsc	status,2,c
 26834  0043E4  0012               	return	
 26835                           
 26836                           ;mdm_drv.c: 225: {
 26837                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 26838  0043E6  0E03               	movlw	3
 26839  0043E8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26840                           
 26841                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 26842  0043EA  8084               	bsf	3972,0,c	;volatile
 26843                           
 26844                           ;mdm_drv.c: 231: Counter = 0;
 26845  0043EC  0E00               	movlw	0
 26846  0043EE  0102               	movlb	2	; () banked
 26847  0043F0  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26848  0043F2  0E00               	movlw	0
 26849  0043F4  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 26850                           
 26851                           ; BSR set to: 2
 26852                           ;mdm_drv.c: 236: }
 26853                           ;mdm_drv.c: 237: break;
 26854                           
 26855                           ; BSR set to: 2
 26856                           
 26857                           ;mdm_drv.c: 233: else
 26858                           ;mdm_drv.c: 234: {
 26859                           
 26860                           ; BSR set to: 2
 26861                           
 26862                           ;mdm_drv.c: 232: }
 26863  0043F6  0012               	return	
 26864  0043F8                     
 26865                           ;mdm_drv.c: 241: Counter++;
 26866                           
 26867                           ; BSR set to: 2
 26868  0043F8  0102               	movlb	2	; () banked
 26869  0043FA  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26870  0043FC  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26871                           
 26872                           ; BSR set to: 2
 26873                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 26874  0043FE  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26875  004400  E104               	bnz	u13580
 26876  004402  0E96               	movlw	150
 26877  004404  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 26878  004406  A0D8               	btfss	status,0,c
 26879  004408  0012               	return	
 26880  00440A                     u13580:
 26881                           
 26882                           ; BSR set to: 2
 26883                           ;mdm_drv.c: 244: {
 26884                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 26885  00440A  9284               	bcf	3972,1,c	;volatile
 26886                           
 26887                           ; BSR set to: 2
 26888                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 26889  00440C  0E01               	movlw	1
 26890  00440E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26891                           
 26892                           ; BSR set to: 2
 26893                           ;mdm_drv.c: 249: }
 26894                           ;mdm_drv.c: 250: break;
 26895  004410  0012               	return	
 26896  004412                     
 26897                           ;mdm_drv.c: 254: Counter++;
 26898                           
 26899                           ; BSR set to: 2
 26900  004412  0102               	movlb	2	; () banked
 26901  004414  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26902  004416  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26903                           
 26904                           ; BSR set to: 2
 26905                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 26906  004418  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26907  00441A  E104               	bnz	u13590
 26908  00441C  0E0A               	movlw	10
 26909  00441E  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 26910  004420  A0D8               	btfss	status,0,c
 26911  004422  0012               	return	
 26912  004424                     u13590:
 26913                           
 26914                           ; BSR set to: 2
 26915                           ;mdm_drv.c: 257: {
 26916                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 26917  004424  9084               	bcf	3972,0,c	;volatile
 26918                           
 26919                           ; BSR set to: 2
 26920                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 26921  004426  0E01               	movlw	1
 26922  004428  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26923                           
 26924                           ; BSR set to: 2
 26925                           ;mdm_drv.c: 267: }
 26926                           
 26927                           ; BSR set to: 2
 26928                           ;mdm_drv.c: 266: break;
 26929                           
 26930                           ;mdm_drv.c: 265: default:
 26931                           
 26932                           ; BSR set to: 2
 26933                           ;mdm_drv.c: 262: }
 26934                           ;mdm_drv.c: 263: break;
 26935  00442A  0012               	return	
 26936  00442C                     l315:
 26937                           
 26938                           ; BSR set to: 2
 26939  00442C  502E               	movf	MdmCntSm@MdmCntState,w,c
 26940                           
 26941                           ; Switch size 1, requested type "space"
 26942                           ; Number of cases is 4, Range of values is 0 to 3
 26943                           ; switch strategies available:
 26944                           ; Name         Instructions Cycles
 26945                           ; simple_byte           13     7 (average)
 26946                           ;	Chosen strategy is simple_byte
 26947  00442E  0A00               	xorlw	0	; case 0
 26948  004430  B4D8               	btfsc	status,2,c
 26949  004432  D7B7               	goto	l316
 26950  004434  0A01               	xorlw	1	; case 1
 26951  004436  B4D8               	btfsc	status,2,c
 26952  004438  D7B9               	goto	l318
 26953  00443A  0A03               	xorlw	3	; case 2
 26954  00443C  B4D8               	btfsc	status,2,c
 26955  00443E  D7DC               	goto	l323
 26956  004440  0A01               	xorlw	1	; case 3
 26957  004442  A4D8               	btfss	status,2,c
 26958  004444  0012               	return	
 26959  004446  D7E5               	goto	l325
 26960  004448                     __end_of_MdmCntSm:
 26961                           	opt stack 0
 26962                           tosu	equ	0xFFF
 26963                           tosh	equ	0xFFE
 26964                           tosl	equ	0xFFD
 26965                           pclath	equ	0xFFA
 26966                           tblptru	equ	0xFF8
 26967                           tblptrh	equ	0xFF7
 26968                           tblptrl	equ	0xFF6
 26969                           tablat	equ	0xFF5
 26970                           prodh	equ	0xFF4
 26971                           prodl	equ	0xFF3
 26972                           intcon	equ	0xFF2
 26973                           intcon2	equ	0xFF1
 26974                           intcon3	equ	0xFF0
 26975                           indf0	equ	0xFEF
 26976                           postinc0	equ	0xFEE
 26977                           plusw0	equ	0xFEB
 26978                           fsr0h	equ	0xFEA
 26979                           fsr0l	equ	0xFE9
 26980                           wreg	equ	0xFE8
 26981                           indf1	equ	0xFE7
 26982                           postinc1	equ	0xFE6
 26983                           postdec1	equ	0xFE5
 26984                           plusw1	equ	0xFE3
 26985                           fsr1h	equ	0xFE2
 26986                           fsr1l	equ	0xFE1
 26987                           indf2	equ	0xFDF
 26988                           postinc2	equ	0xFDE
 26989                           postdec2	equ	0xFDD
 26990                           plusw2	equ	0xFDB
 26991                           fsr2h	equ	0xFDA
 26992                           fsr2l	equ	0xFD9
 26993                           status	equ	0xFD8
 26994                           
 26995 ;; *************** function _InitModemInterface *****************
 26996 ;; Defined at:
 26997 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26998 ;; Parameters:    Size  Location     Type
 26999 ;;		None
 27000 ;; Auto vars:     Size  Location     Type
 27001 ;;		None
 27002 ;; Return value:  Size  Location     Type
 27003 ;;                  1    wreg      void 
 27004 ;; Registers used:
 27005 ;;		None
 27006 ;; Tracked objects:
 27007 ;;		On entry : 0/0
 27008 ;;		On exit  : 0/0
 27009 ;;		Unchanged: 0/0
 27010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27015 ;;Total ram usage:        0 bytes
 27016 ;; Hardware stack levels used:    1
 27017 ;; Hardware stack levels required when called:   11
 27018 ;; This function calls:
 27019 ;;		Nothing
 27020 ;; This function is called by:
 27021 ;;		_MdmCntSm
 27022 ;; This function uses a non-reentrant model
 27023 ;;
 27024                           
 27025                           	psect	text124
 27026  006420                     __ptext124:
 27027                           	opt stack 0
 27028  006420                     _InitModemInterface:
 27029                           	opt stack 15
 27030                           
 27031                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 27032                           
 27033                           ;incstack = 0
 27034  006420  9096               	bcf	3990,0,c	;volatile
 27035                           
 27036                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 27037  006422  9296               	bcf	3990,1,c	;volatile
 27038                           
 27039                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 27040  006424  8496               	bsf	3990,2,c	;volatile
 27041  006426  0012               	return		;funcret
 27042  006428                     __end_of_InitModemInterface:
 27043                           	opt stack 0
 27044                           tosu	equ	0xFFF
 27045                           tosh	equ	0xFFE
 27046                           tosl	equ	0xFFD
 27047                           pclath	equ	0xFFA
 27048                           tblptru	equ	0xFF8
 27049                           tblptrh	equ	0xFF7
 27050                           tblptrl	equ	0xFF6
 27051                           tablat	equ	0xFF5
 27052                           prodh	equ	0xFF4
 27053                           prodl	equ	0xFF3
 27054                           intcon	equ	0xFF2
 27055                           intcon2	equ	0xFF1
 27056                           intcon3	equ	0xFF0
 27057                           indf0	equ	0xFEF
 27058                           postinc0	equ	0xFEE
 27059                           plusw0	equ	0xFEB
 27060                           fsr0h	equ	0xFEA
 27061                           fsr0l	equ	0xFE9
 27062                           wreg	equ	0xFE8
 27063                           indf1	equ	0xFE7
 27064                           postinc1	equ	0xFE6
 27065                           postdec1	equ	0xFE5
 27066                           plusw1	equ	0xFE3
 27067                           fsr1h	equ	0xFE2
 27068                           fsr1l	equ	0xFE1
 27069                           indf2	equ	0xFDF
 27070                           postinc2	equ	0xFDE
 27071                           postdec2	equ	0xFDD
 27072                           plusw2	equ	0xFDB
 27073                           fsr2h	equ	0xFDA
 27074                           fsr2l	equ	0xFD9
 27075                           status	equ	0xFD8
 27076                           
 27077 ;; *************** function _InitGprsNetwork *****************
 27078 ;; Defined at:
 27079 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 27080 ;; Parameters:    Size  Location     Type
 27081 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 27082 ;;		 -> NULL(0), 
 27083 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 27084 ;; Auto vars:     Size  Location     Type
 27085 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 27086 ;;  Index           1   50[BANK1 ] unsigned char 
 27087 ;; Return value:  Size  Location     Type
 27088 ;;                  1    wreg      enum E8922
 27089 ;; Registers used:
 27090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27091 ;; Tracked objects:
 27092 ;;		On entry : 0/0
 27093 ;;		On exit  : 0/0
 27094 ;;		Unchanged: 0/0
 27095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27096 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27097 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27098 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27099 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27100 ;;Total ram usage:       56 bytes
 27101 ;; Hardware stack levels used:    1
 27102 ;; Hardware stack levels required when called:   14
 27103 ;; This function calls:
 27104 ;;		_ClearBuffer
 27105 ;;		_OsTmr_GetTimerStatus
 27106 ;;		_OsTmr_StartTimer
 27107 ;;		_ReceiveEvt
 27108 ;;		_StringCopy
 27109 ;;		_Uart_WriteConstString
 27110 ;;		_Uart_WriteString
 27111 ;; This function is called by:
 27112 ;;		_MdmHttp_MainTask
 27113 ;; This function uses a non-reentrant model
 27114 ;;
 27115                           
 27116                           	psect	text125
 27117  000DC8                     __ptext125:
 27118                           	opt stack 0
 27119  000DC8                     _InitGprsNetwork:
 27120                           	opt stack 13
 27121                           
 27122                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 27123                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 27124                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 27125                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 27126                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 27127                           
 27128                           ;incstack = 0
 27129  000DC8  0E00               	movlw	0
 27130  000DCA  0101               	movlb	1	; () banked
 27131  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 27132                           
 27133                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 27134  000DCE  D154               	goto	l1216
 27135  000DD0                     
 27136                           ; BSR set to: 1
 27137                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 27138                           
 27139                           ; BSR set to: 1
 27140  000DD0  0EDB               	movlw	low _InitNetwork
 27141  000DD2  0100               	movlb	0	; () banked
 27142  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27143  000DD6  0E00               	movlw	high _InitNetwork
 27144  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27145  000DDA  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 27146  000DDE  0900               	iorlw	0
 27147  000DE0  B4D8               	btfsc	status,2,c
 27148  000DE2  D166               	goto	l1219
 27149                           
 27150                           ;mdm_gsm_gprs_http.c: 137: {
 27151                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 27152  000DE4  0E01               	movlw	1
 27153  000DE6  D141               	goto	L79
 27154  000DE8                     
 27155                           ; BSR set to: 1
 27156                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 27157                           
 27158                           ; BSR set to: 1
 27159  000DE8  0E96               	movlw	low STR_8
 27160  000DEA  0100               	movlb	0	; () banked
 27161  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27162  000DEE  0EFE               	movlw	high STR_8
 27163  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27164  000DF2  0E01               	movlw	1
 27165  000DF4  EC4C  F02D         	call	_Uart_WriteConstString
 27166                           
 27167                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 27168  000DF8  0E07               	movlw	7
 27169  000DFA  0101               	movlb	1	; () banked
 27170  000DFC  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27171                           
 27172                           ; BSR set to: 1
 27173                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 27174  000DFE  0E02               	movlw	2
 27175  000E00  0100               	movlb	0	; () banked
 27176  000E02  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 27180  000E04  0EF5               	movlw	low _ConnTimeout
 27181  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27182  000E08  0E02               	movlw	high _ConnTimeout
 27183  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27184  000E0C  0E20               	movlw	32
 27185  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27186  000E10  0E4E               	movlw	78
 27187  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27188  000E14  0E00               	movlw	0
 27189  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27190  000E18  0E00               	movlw	0
 27191  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27192  000E1C  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 27193  000E20  D0C7               	goto	l14585
 27194  000E22                     
 27195                           ; BSR set to: 1
 27196                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 27197                           
 27198                           ; BSR set to: 1
 27199  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 27200  000E24  0100               	movlb	0	; () banked
 27201  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27202  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 27203  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27204  000E2C  0E00               	movlw	0
 27205  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27206  000E30  0E32               	movlw	50
 27207  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27208  000E34  ECBC  F02E         	call	_ClearBuffer	;wreg free
 27209                           
 27210                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 27211  000E38  0ECA               	movlw	low STR_9
 27212  000E3A  0100               	movlb	0	; () banked
 27213  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27214  000E3E  0EFE               	movlw	high STR_9
 27215  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27216  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 27217  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27218  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 27219  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27220  000E4A  0E00               	movlw	0
 27221  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27222  000E4E  0E14               	movlw	20
 27223  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 27224  000E52  ECE2  F028         	call	_StringCopy	;wreg free
 27225                           
 27226                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 27227  000E56  0E00               	movlw	0
 27228  000E58  0101               	movlb	1	; () banked
 27229  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 27230  000E5C  D01C               	goto	l1222
 27231  000E5E                     
 27232                           ; BSR set to: 1
 27233                           ;mdm_gsm_gprs_http.c: 161: {
 27234                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 27235                           
 27236                           ; BSR set to: 1
 27237  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27238  000E60  0D01               	mullw	1
 27239  000E62  50F3               	movf	prodl,w,c
 27240  000E64  0100               	movlb	0	; () banked
 27241  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 27242  000E68  6ED9               	movwf	fsr2l,c
 27243  000E6A  50F4               	movf	prodh,w,c
 27244  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 27245  000E6E  6EDA               	movwf	fsr2h,c
 27246  000E70  0101               	movlb	1	; () banked
 27247  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27248  000E74  0100               	movlb	0	; () banked
 27249  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27250  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27251  000E7A  0E14               	movlw	20
 27252  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27253  000E7E  0E00               	movlw	0
 27254  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27255  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 27256  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27257  000E86  6EE1               	movwf	fsr1l,c
 27258  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 27259  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27260  000E8C  6EE2               	movwf	fsr1h,c
 27261  000E8E  CFDF FFE7          	movff	indf2,indf1
 27262                           
 27263                           ; BSR set to: 0
 27264  000E92  0101               	movlb	1	; () banked
 27265  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 27266  000E96                     l1222:
 27267                           
 27268                           ; BSR set to: 1
 27269                           
 27270                           ; BSR set to: 1
 27271  000E96  0100               	movlb	0	; () banked
 27272  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 27273  000E9A  0101               	movlb	1	; () banked
 27274  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 27275  000E9E  A0D8               	btfss	status,0,c
 27276  000EA0  D7DE               	goto	l1223
 27277                           
 27278                           ; BSR set to: 1
 27279                           ;mdm_gsm_gprs_http.c: 163: }
 27280                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 27281                           
 27282                           ; BSR set to: 1
 27283  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27284  000EA4  0100               	movlb	0	; () banked
 27285  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27286  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27287  000EAA  0E14               	movlw	20
 27288  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27289  000EAE  0E00               	movlw	0
 27290  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27291  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 27292  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27293  000EB6  6ED9               	movwf	fsr2l,c
 27294  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 27295  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27296  000EBC  6EDA               	movwf	fsr2h,c
 27297  000EBE  0E22               	movlw	34
 27298  000EC0  6EDF               	movwf	indf2,c
 27299                           
 27300                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 27301  000EC2  0101               	movlb	1	; () banked
 27302  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27303  000EC6  0100               	movlb	0	; () banked
 27304  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27305  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27306  000ECC  0E15               	movlw	21
 27307  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27308  000ED0  0E00               	movlw	0
 27309  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27310  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 27311  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27312  000ED8  6ED9               	movwf	fsr2l,c
 27313  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 27314  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27315  000EDE  6EDA               	movwf	fsr2h,c
 27316  000EE0  0E0D               	movlw	13
 27317  000EE2  6EDF               	movwf	indf2,c
 27318                           
 27319                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 27320  000EE4  0101               	movlb	1	; () banked
 27321  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 27322  000EE8  0100               	movlb	0	; () banked
 27323  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 27324  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 27325  000EEE  0E16               	movlw	22
 27326  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 27327  000EF2  0E00               	movlw	0
 27328  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 27329  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 27330  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 27331  000EFA  6ED9               	movwf	fsr2l,c
 27332  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 27333  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 27334  000F00  6EDA               	movwf	fsr2h,c
 27335  000F02  0E00               	movlw	0
 27336  000F04  6EDF               	movwf	indf2,c
 27337                           
 27338                           ; BSR set to: 0
 27339                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 27340  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 27341  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27342  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 27343  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27344  000F0E  0E01               	movlw	1
 27345  000F10  EC0D  F02E         	call	_Uart_WriteString
 27346                           
 27347                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 27348  000F14  0E07               	movlw	7
 27349  000F16  0101               	movlb	1	; () banked
 27350  000F18  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27351                           
 27352                           ; BSR set to: 1
 27353                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 27354  000F1A  0E03               	movlw	3
 27355  000F1C  0100               	movlb	0	; () banked
 27356  000F1E  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27357                           
 27358                           ; BSR set to: 0
 27359                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 27360  000F20  0EF5               	movlw	low _ConnTimeout
 27361  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27362  000F24  0E02               	movlw	high _ConnTimeout
 27363  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27364  000F28  0E20               	movlw	32
 27365  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27366  000F2C  0E4E               	movlw	78
 27367  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27368  000F30  0E00               	movlw	0
 27369  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27370  000F34  0E00               	movlw	0
 27371  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27372  000F38  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 27373  000F3C  D039               	goto	l14585
 27374  000F3E                     
 27375                           ; BSR set to: 1
 27376                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 27377                           
 27378                           ; BSR set to: 1
 27379  000F3E  0E4A               	movlw	low STR_10
 27380  000F40  0100               	movlb	0	; () banked
 27381  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27382  000F44  0EFF               	movlw	high STR_10
 27383  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27384  000F48  0E01               	movlw	1
 27385  000F4A  EC4C  F02D         	call	_Uart_WriteConstString
 27386                           
 27387                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 27388  000F4E  0E07               	movlw	7
 27389  000F50  0101               	movlb	1	; () banked
 27390  000F52  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27391                           
 27392                           ; BSR set to: 1
 27393                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 27394  000F54  0E05               	movlw	5
 27395  000F56  0100               	movlb	0	; () banked
 27396  000F58  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27397                           
 27398                           ; BSR set to: 0
 27399                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 27400  000F5A  0EF5               	movlw	low _ConnTimeout
 27401  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27402  000F5E  0E02               	movlw	high _ConnTimeout
 27403  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27404  000F62  0E20               	movlw	32
 27405  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27406  000F66  0E4E               	movlw	78
 27407  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27408  000F6A  0E00               	movlw	0
 27409  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27410  000F6E  0E00               	movlw	0
 27411  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27412  000F72  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 27413  000F76  D01C               	goto	l14585
 27414  000F78                     
 27415                           ; BSR set to: 1
 27416                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 27417                           
 27418                           ; BSR set to: 1
 27419  000F78  0E58               	movlw	low STR_11
 27420  000F7A  0100               	movlb	0	; () banked
 27421  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27422  000F7E  0EFF               	movlw	high STR_11
 27423  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27424  000F82  0E01               	movlw	1
 27425  000F84  EC4C  F02D         	call	_Uart_WriteConstString
 27426                           
 27427                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 27428  000F88  0E08               	movlw	8
 27429  000F8A  0101               	movlb	1	; () banked
 27430  000F8C  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27431                           
 27432                           ; BSR set to: 1
 27433                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 27434  000F8E  0E05               	movlw	5
 27435  000F90  0100               	movlb	0	; () banked
 27436  000F92  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 27437                           
 27438                           ; BSR set to: 0
 27439                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 27440  000F94  0EF5               	movlw	low _ConnTimeout
 27441  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27442  000F98  0E02               	movlw	high _ConnTimeout
 27443  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27444  000F9C  0E20               	movlw	32
 27445  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27446  000FA0  0E4E               	movlw	78
 27447  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27448  000FA4  0E00               	movlw	0
 27449  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27450  000FA8  0E00               	movlw	0
 27451  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27452  000FAC  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 27453  000FB0                     l14585:
 27454                           
 27455                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 27456  000FB0  0E01               	movlw	1
 27457  000FB2  0101               	movlb	1	; () banked
 27458  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 27459                           
 27460                           ;mdm_gsm_gprs_http.c: 201: break;
 27461  000FB6  D07C               	goto	l1219
 27462  000FB8                     
 27463                           ; BSR set to: 1
 27464                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 27465                           
 27466                           ; BSR set to: 1
 27467  000FB8  0E02               	movlw	2
 27468  000FBA  D05A               	goto	L78
 27469  000FBC                     
 27470                           ; BSR set to: 1
 27471                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 27472                           
 27473                           ; BSR set to: 1
 27474  000FBC  0E3C               	movlw	low _NewStringReceived
 27475  000FBE  0100               	movlb	0	; () banked
 27476  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27477  000FC2  0E00               	movlw	high _NewStringReceived
 27478  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27479  000FC6  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 27480  000FCA  0900               	iorlw	0
 27481  000FCC  B4D8               	btfsc	status,2,c
 27482  000FCE  D018               	goto	l1229
 27483                           
 27484                           ;mdm_gsm_gprs_http.c: 212: {
 27485                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27486  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 27487  000FD4  0A4F               	xorlw	79
 27488  000FD6  A4D8               	btfss	status,2,c
 27489  000FD8  D06B               	goto	l1219
 27490  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27491  000FDE  0A4B               	xorlw	75
 27492  000FE0  A4D8               	btfss	status,2,c
 27493  000FE2  D066               	goto	l1219
 27494                           
 27495                           ;mdm_gsm_gprs_http.c: 215: {
 27496                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 27497  000FE4  C0D1  F1EC         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 27498                           
 27499                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 27500  000FE8  0E58               	movlw	low _RxBuffer
 27501  000FEA  0100               	movlb	0	; () banked
 27502  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27503  000FEE  0E0C               	movlw	high _RxBuffer
 27504  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27505  000FF2  0E01               	movlw	1
 27506  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27507  000FF6  0E90               	movlw	144
 27508  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27509  000FFA  ECBC  F02E         	call	_ClearBuffer	;wreg free
 27510                           
 27511                           ;mdm_gsm_gprs_http.c: 220: }
 27512                           ;mdm_gsm_gprs_http.c: 221: }
 27513  000FFE  D058               	goto	l1219
 27514  001000                     l1229:
 27515                           
 27516                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27517  001000  0EF5               	movlw	low _ConnTimeout
 27518  001002  0100               	movlb	0	; () banked
 27519  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27520  001006  0E02               	movlw	high _ConnTimeout
 27521  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27522  00100A  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27523  00100E  D029               	goto	L43
 27524  001010                     
 27525                           ; BSR set to: 1
 27526                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 27527                           
 27528                           ; BSR set to: 1
 27529  001010  0E3C               	movlw	low _NewStringReceived
 27530  001012  0100               	movlb	0	; () banked
 27531  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27532  001016  0E00               	movlw	high _NewStringReceived
 27533  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27534  00101A  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 27535  00101E  0900               	iorlw	0
 27536  001020  B4D8               	btfsc	status,2,c
 27537  001022  D018               	goto	l1234
 27538                           
 27539                           ;mdm_gsm_gprs_http.c: 232: {
 27540                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 27541  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 27542  001028  0A2B               	xorlw	43
 27543  00102A  A4D8               	btfss	status,2,c
 27544  00102C  D041               	goto	l1219
 27545  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27546  001032  0A53               	xorlw	83
 27547  001034  A4D8               	btfss	status,2,c
 27548  001036  D03C               	goto	l1219
 27549                           
 27550                           ;mdm_gsm_gprs_http.c: 235: {
 27551                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 27552  001038  C0D1  F1EC         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 27553                           
 27554                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 27555  00103C  0E58               	movlw	low _RxBuffer
 27556  00103E  0100               	movlb	0	; () banked
 27557  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27558  001042  0E0C               	movlw	high _RxBuffer
 27559  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27560  001046  0E01               	movlw	1
 27561  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27562  00104A  0E90               	movlw	144
 27563  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27564  00104E  ECBC  F02E         	call	_ClearBuffer	;wreg free
 27565                           
 27566                           ;mdm_gsm_gprs_http.c: 240: }
 27567                           ;mdm_gsm_gprs_http.c: 241: }
 27568  001052  D02E               	goto	l1219
 27569  001054                     l1234:
 27570                           
 27571                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27572  001054  0EF5               	movlw	low _ConnTimeout
 27573  001056  0100               	movlb	0	; () banked
 27574  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27575  00105A  0E02               	movlw	high _ConnTimeout
 27576  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27577  00105E  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27578  001062                     L43:
 27579  001062  06E8               	decf	wreg,f,c
 27580  001064  A4D8               	btfss	status,2,c
 27581  001066  D024               	goto	l1219
 27582                           
 27583                           ;mdm_gsm_gprs_http.c: 243: {
 27584                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 27585  001068  0E06               	movlw	6
 27586  00106A                     L79:
 27587  00106A  0101               	movlb	1	; () banked
 27588  00106C  D003               	goto	L42
 27589  00106E                     
 27590                           ; BSR set to: 1
 27591                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 27592                           
 27593                           ; BSR set to: 1
 27594  00106E  0E03               	movlw	3
 27595  001070                     L78:
 27596  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 27597                           
 27598                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 27599  001072  0E00               	movlw	0
 27600  001074                     L42:
 27601  001074  6FEC               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 27602                           
 27603                           ; BSR set to: 1
 27604                           ;mdm_gsm_gprs_http.c: 257: }
 27605                           
 27606                           ; BSR set to: 1
 27607                           ;mdm_gsm_gprs_http.c: 256: break;
 27608                           
 27609                           ;mdm_gsm_gprs_http.c: 255: default:
 27610                           
 27611                           ;mdm_gsm_gprs_http.c: 253: break;
 27612  001076  D01C               	goto	l1219
 27613  001078                     l1216:
 27614                           
 27615                           ; BSR set to: 1
 27616                           
 27617                           ; BSR set to: 1
 27618  001078  51EC               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 27619                           
 27620                           ; Switch size 1, requested type "space"
 27621                           ; Number of cases is 9, Range of values is 0 to 8
 27622                           ; switch strategies available:
 27623                           ; Name         Instructions Cycles
 27624                           ; simple_byte           28    15 (average)
 27625                           ;	Chosen strategy is simple_byte
 27626  00107A  0A00               	xorlw	0	; case 0
 27627  00107C  B4D8               	btfsc	status,2,c
 27628  00107E  D6A8               	goto	l1217
 27629  001080  0A01               	xorlw	1	; case 1
 27630  001082  B4D8               	btfsc	status,2,c
 27631  001084  D6B1               	goto	l1220
 27632  001086  0A03               	xorlw	3	; case 2
 27633  001088  B4D8               	btfsc	status,2,c
 27634  00108A  D6CB               	goto	l1221
 27635  00108C  0A01               	xorlw	1	; case 3
 27636  00108E  B4D8               	btfsc	status,2,c
 27637  001090  D756               	goto	l1225
 27638  001092  0A07               	xorlw	7	; case 4
 27639  001094  B4D8               	btfsc	status,2,c
 27640  001096  D770               	goto	l1226
 27641  001098  0A01               	xorlw	1	; case 5
 27642  00109A  B4D8               	btfsc	status,2,c
 27643  00109C  D78D               	goto	l1227
 27644  00109E  0A03               	xorlw	3	; case 6
 27645  0010A0  B4D8               	btfsc	status,2,c
 27646  0010A2  D7E5               	goto	l1238
 27647  0010A4  0A01               	xorlw	1	; case 7
 27648  0010A6  B4D8               	btfsc	status,2,c
 27649  0010A8  D789               	goto	l1228
 27650  0010AA  0A0F               	xorlw	15	; case 8
 27651  0010AC  B4D8               	btfsc	status,2,c
 27652  0010AE  D7B0               	goto	l1233
 27653  0010B0                     l1219:
 27654                           
 27655                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 27656                           
 27657                           ; BSR set to: 1
 27658  0010B0  0101               	movlb	1	; () banked
 27659  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 27660  0010B4  0012               	return	
 27661  0010B6                     __end_of_InitGprsNetwork:
 27662                           	opt stack 0
 27663                           tosu	equ	0xFFF
 27664                           tosh	equ	0xFFE
 27665                           tosl	equ	0xFFD
 27666                           pclath	equ	0xFFA
 27667                           tblptru	equ	0xFF8
 27668                           tblptrh	equ	0xFF7
 27669                           tblptrl	equ	0xFF6
 27670                           tablat	equ	0xFF5
 27671                           prodh	equ	0xFF4
 27672                           prodl	equ	0xFF3
 27673                           intcon	equ	0xFF2
 27674                           intcon2	equ	0xFF1
 27675                           intcon3	equ	0xFF0
 27676                           indf0	equ	0xFEF
 27677                           postinc0	equ	0xFEE
 27678                           plusw0	equ	0xFEB
 27679                           fsr0h	equ	0xFEA
 27680                           fsr0l	equ	0xFE9
 27681                           wreg	equ	0xFE8
 27682                           indf1	equ	0xFE7
 27683                           postinc1	equ	0xFE6
 27684                           postdec1	equ	0xFE5
 27685                           plusw1	equ	0xFE3
 27686                           fsr1h	equ	0xFE2
 27687                           fsr1l	equ	0xFE1
 27688                           indf2	equ	0xFDF
 27689                           postinc2	equ	0xFDE
 27690                           postdec2	equ	0xFDD
 27691                           plusw2	equ	0xFDB
 27692                           fsr2h	equ	0xFDA
 27693                           fsr2l	equ	0xFD9
 27694                           status	equ	0xFD8
 27695                           
 27696 ;; *************** function _HttpGetMethod *****************
 27697 ;; Defined at:
 27698 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 27699 ;; Parameters:    Size  Location     Type
 27700 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 27701 ;;		 -> HttpGetDataLocal(5), 
 27702 ;; Auto vars:     Size  Location     Type
 27703 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 27704 ;;  Index           1  200[BANK1 ] unsigned char 
 27705 ;; Return value:  Size  Location     Type
 27706 ;;                  1    wreg      enum E8922
 27707 ;; Registers used:
 27708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27709 ;; Tracked objects:
 27710 ;;		On entry : 0/0
 27711 ;;		On exit  : 0/0
 27712 ;;		Unchanged: 0/0
 27713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27714 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27715 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27717 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27718 ;;Total ram usage:      207 bytes
 27719 ;; Hardware stack levels used:    1
 27720 ;; Hardware stack levels required when called:   14
 27721 ;; This function calls:
 27722 ;;		_ClearBuffer
 27723 ;;		_OsTmr_GetTimerStatus
 27724 ;;		_OsTmr_StartTimer
 27725 ;;		_ReceiveEvt
 27726 ;;		_StringCopy
 27727 ;;		_Uart_WriteConstString
 27728 ;;		_Uart_WriteString
 27729 ;; This function is called by:
 27730 ;;		_MdmHttp_MainTask
 27731 ;; This function uses a non-reentrant model
 27732 ;;
 27733                           
 27734                           	psect	text126
 27735  0005EC                     __ptext126:
 27736                           	opt stack 0
 27737  0005EC                     _HttpGetMethod:
 27738                           	opt stack 13
 27739                           
 27740                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 27741                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 27742                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 27743                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 27744                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 27745                           
 27746                           ; BSR set to: 1
 27747                           ;incstack = 0
 27748  0005EC  0E00               	movlw	0
 27749  0005EE  0101               	movlb	1	; () banked
 27750  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27751                           
 27752                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 27753  0005F2  D230               	goto	l1249
 27754  0005F4                     
 27755                           ; BSR set to: 1
 27756                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 27757                           
 27758                           ; BSR set to: 1
 27759  0005F4  0EDA               	movlw	low _GetMethod
 27760  0005F6  0100               	movlb	0	; () banked
 27761  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27762  0005FA  0E00               	movlw	high _GetMethod
 27763  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27764  0005FE  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 27765  000602  0900               	iorlw	0
 27766  000604  B4D8               	btfsc	status,2,c
 27767  000606  D257               	goto	l1252
 27768                           
 27769                           ;mdm_gsm_gprs_http.c: 284: {
 27770                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 27771  000608  0E01               	movlw	1
 27772  00060A  D18C               	goto	L45
 27773  00060C                     
 27774                           ; BSR set to: 1
 27775                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 27776                           
 27777                           ; BSR set to: 1
 27778  00060C  0E9C               	movlw	low STR_12
 27779  00060E  0100               	movlb	0	; () banked
 27780  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27781  000612  0EFF               	movlw	high STR_12
 27782  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27783  000616  0E01               	movlw	1
 27784  000618  EC4C  F02D         	call	_Uart_WriteConstString
 27785                           
 27786                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 27787  00061C  0E0A               	movlw	10
 27788  00061E  0101               	movlb	1	; () banked
 27789  000620  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27790                           
 27791                           ; BSR set to: 1
 27792                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 27793  000622  0E02               	movlw	2
 27794  000624  0100               	movlb	0	; () banked
 27795  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27796                           
 27797                           ; BSR set to: 0
 27798                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 27799  000628  0EF5               	movlw	low _ConnTimeout
 27800  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27801  00062C  0E02               	movlw	high _ConnTimeout
 27802  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27803  000630  0E20               	movlw	32
 27804  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27805  000634  0E4E               	movlw	78
 27806  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27807  000638  0E00               	movlw	0
 27808  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27809  00063C  0E00               	movlw	0
 27810  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27811  000640  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 27812  000644  D1AF               	goto	l14751
 27813  000646                     
 27814                           ; BSR set to: 1
 27815                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 27816                           
 27817                           ; BSR set to: 1
 27818  000646  0E66               	movlw	low STR_13
 27819  000648  0100               	movlb	0	; () banked
 27820  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27821  00064C  0EFF               	movlw	high STR_13
 27822  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27823  000650  0E01               	movlw	1
 27824  000652  EC4C  F02D         	call	_Uart_WriteConstString
 27825                           
 27826                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 27827  000656  0E0A               	movlw	10
 27828  000658  0101               	movlb	1	; () banked
 27829  00065A  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27830                           
 27831                           ; BSR set to: 1
 27832                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 27833  00065C  0E03               	movlw	3
 27834  00065E  0100               	movlb	0	; () banked
 27835  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 27839  000662  0EF5               	movlw	low _ConnTimeout
 27840  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27841  000666  0E02               	movlw	high _ConnTimeout
 27842  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27843  00066A  0E20               	movlw	32
 27844  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27845  00066E  0E4E               	movlw	78
 27846  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27847  000672  0E00               	movlw	0
 27848  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27849  000676  0E00               	movlw	0
 27850  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27851  00067A  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 27852  00067E  D192               	goto	l14751
 27853  000680                     
 27854                           ; BSR set to: 1
 27855                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 27856                           
 27857                           ; BSR set to: 1
 27858  000680  0EB5               	movlw	low STR_14
 27859  000682  0100               	movlb	0	; () banked
 27860  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27861  000686  0EFE               	movlw	high STR_14
 27862  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27863  00068A  0E01               	movlw	1
 27864  00068C  EC4C  F02D         	call	_Uart_WriteConstString
 27865                           
 27866                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 27867  000690  0E0A               	movlw	10
 27868  000692  0101               	movlb	1	; () banked
 27869  000694  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27870                           
 27871                           ; BSR set to: 1
 27872                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 27873  000696  0E04               	movlw	4
 27874  000698  0100               	movlb	0	; () banked
 27875  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27876                           
 27877                           ; BSR set to: 0
 27878                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 27879  00069C  0EF5               	movlw	low _ConnTimeout
 27880  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27881  0006A0  0E02               	movlw	high _ConnTimeout
 27882  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27883  0006A4  0E20               	movlw	32
 27884  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27885  0006A8  0E4E               	movlw	78
 27886  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27887  0006AC  0E00               	movlw	0
 27888  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27889  0006B0  0E00               	movlw	0
 27890  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27891  0006B4  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 27892  0006B8  D175               	goto	l14751
 27893  0006BA                     
 27894                           ; BSR set to: 1
 27895                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 27896                           
 27897                           ; BSR set to: 1
 27898  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27899  0006BC  0100               	movlb	0	; () banked
 27900  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27901  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 27902  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27903  0006C4  0E00               	movlw	0
 27904  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27905  0006C8  0EC8               	movlw	200
 27906  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27907  0006CC  ECBC  F02E         	call	_ClearBuffer	;wreg free
 27908                           
 27909                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 27910  0006D0  0EF3               	movlw	low STR_15
 27911  0006D2  0100               	movlb	0	; () banked
 27912  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27913  0006D6  0EFE               	movlw	high STR_15
 27914  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27915  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 27916  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27917  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 27918  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27919  0006E2  0E00               	movlw	0
 27920  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27921  0006E6  0E13               	movlw	19
 27922  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 27923  0006EA  ECE2  F028         	call	_StringCopy	;wreg free
 27924                           
 27925                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 27926  0006EE  0E00               	movlw	0
 27927  0006F0  0101               	movlb	1	; () banked
 27928  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27929  0006F4  D024               	goto	l1257
 27930  0006F6                     
 27931                           ; BSR set to: 1
 27932                           ;mdm_gsm_gprs_http.c: 332: {
 27933                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 27934                           
 27935                           ; BSR set to: 1
 27936  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27937  0006F8  0D01               	mullw	1
 27938  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 27939  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 27940  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 27941  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 27942  00070A  50F3               	movf	prodl,w,c
 27943  00070C  0100               	movlb	0	; () banked
 27944  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27945  000710  6ED9               	movwf	fsr2l,c
 27946  000712  50F4               	movf	prodh,w,c
 27947  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27948  000716  6EDA               	movwf	fsr2h,c
 27949  000718  0101               	movlb	1	; () banked
 27950  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27951  00071C  0100               	movlb	0	; () banked
 27952  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 27953  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 27954  000722  0E13               	movlw	19
 27955  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 27956  000726  0E00               	movlw	0
 27957  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 27958  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 27959  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 27960  00072E  6EE1               	movwf	fsr1l,c
 27961  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 27962  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 27963  000734  6EE2               	movwf	fsr1h,c
 27964  000736  CFDF FFE7          	movff	indf2,indf1
 27965                           
 27966                           ; BSR set to: 0
 27967  00073A  0101               	movlb	1	; () banked
 27968  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 27969  00073E                     l1257:
 27970                           
 27971                           ; BSR set to: 1
 27972                           
 27973                           ; BSR set to: 1
 27974  00073E  0100               	movlb	0	; () banked
 27975  000740  EE20 F002          	lfsr	2,2
 27976  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27977  000746  26D9               	addwf	fsr2l,f,c
 27978  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27979  00074A  22DA               	addwfc	fsr2h,f,c
 27980  00074C  50DE               	movf	postinc2,w,c
 27981  00074E  0101               	movlb	1	; () banked
 27982  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 27983  000752  A0D8               	btfss	status,0,c
 27984  000754  D7D0               	goto	l1258
 27985                           
 27986                           ; BSR set to: 1
 27987                           ;mdm_gsm_gprs_http.c: 334: }
 27988                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 27989                           
 27990                           ; BSR set to: 1
 27991  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27992  000758  0100               	movlb	0	; () banked
 27993  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27994  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27995  00075E  0E13               	movlw	19
 27996  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27997  000762  0E00               	movlw	0
 27998  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27999  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 28000  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 28001  00076A  6ED9               	movwf	fsr2l,c
 28002  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 28003  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 28004  000770  6EDA               	movwf	fsr2h,c
 28005  000772  0E22               	movlw	34
 28006  000774  6EDF               	movwf	indf2,c
 28007                           
 28008                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 28009  000776  0101               	movlb	1	; () banked
 28010  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 28011  00077A  0100               	movlb	0	; () banked
 28012  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 28013  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 28014  000780  0E14               	movlw	20
 28015  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 28016  000784  0E00               	movlw	0
 28017  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 28018  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 28019  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 28020  00078C  6ED9               	movwf	fsr2l,c
 28021  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 28022  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 28023  000792  6EDA               	movwf	fsr2h,c
 28024  000794  0E0D               	movlw	13
 28025  000796  6EDF               	movwf	indf2,c
 28026                           
 28027                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 28028  000798  0101               	movlb	1	; () banked
 28029  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 28030  00079C  0100               	movlb	0	; () banked
 28031  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 28032  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 28033  0007A2  0E15               	movlw	21
 28034  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 28035  0007A6  0E00               	movlw	0
 28036  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 28037  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 28038  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 28039  0007AE  6ED9               	movwf	fsr2l,c
 28040  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 28041  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 28042  0007B4  6EDA               	movwf	fsr2h,c
 28043  0007B6  0E00               	movlw	0
 28044  0007B8  6EDF               	movwf	indf2,c
 28045                           
 28046                           ; BSR set to: 0
 28047                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 28048  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 28049  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 28050  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 28051  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 28052  0007C2  0E01               	movlw	1
 28053  0007C4  EC0D  F02E         	call	_Uart_WriteString
 28054                           
 28055                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 28056  0007C8  0E0A               	movlw	10
 28057  0007CA  0101               	movlb	1	; () banked
 28058  0007CC  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28059                           
 28060                           ; BSR set to: 1
 28061                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 28062  0007CE  0E05               	movlw	5
 28063  0007D0  0100               	movlb	0	; () banked
 28064  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28065                           
 28066                           ; BSR set to: 0
 28067                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 28068  0007D4  0EF5               	movlw	low _ConnTimeout
 28069  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28070  0007D8  0E02               	movlw	high _ConnTimeout
 28071  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28072  0007DC  0E20               	movlw	32
 28073  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28074  0007E0  0E4E               	movlw	78
 28075  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28076  0007E4  0E00               	movlw	0
 28077  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28078  0007E8  0E00               	movlw	0
 28079  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28080  0007EC  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 28081  0007F0  D0D9               	goto	l14751
 28082  0007F2                     
 28083                           ; BSR set to: 1
 28084                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 28085                           
 28086                           ; BSR set to: 1
 28087  0007F2  0E2B               	movlw	low STR_16
 28088  0007F4  0100               	movlb	0	; () banked
 28089  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28090  0007F8  0EFF               	movlw	high STR_16
 28091  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28092  0007FC  0E01               	movlw	1
 28093  0007FE  EC4C  F02D         	call	_Uart_WriteConstString
 28094                           
 28095                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 28096  000802  0E0A               	movlw	10
 28097  000804  0101               	movlb	1	; () banked
 28098  000806  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28099                           
 28100                           ; BSR set to: 1
 28101                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 28102  000808  0E06               	movlw	6
 28103  00080A  0100               	movlb	0	; () banked
 28104  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28105                           
 28106                           ; BSR set to: 0
 28107                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 28108  00080E  0EF5               	movlw	low _ConnTimeout
 28109  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28110  000812  0E02               	movlw	high _ConnTimeout
 28111  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28112  000816  0E20               	movlw	32
 28113  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28114  00081A  0E4E               	movlw	78
 28115  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28116  00081E  0E00               	movlw	0
 28117  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28118  000822  0E00               	movlw	0
 28119  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28120  000826  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 28121                           
 28122                           ;mdm_gsm_gprs_http.c: 358: break;
 28123  00082A  D145               	goto	l1252
 28124  00082C                     
 28125                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 28126  00082C  0E07               	movlw	7
 28127  00082E  0101               	movlb	1	; () banked
 28128  000830  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28129                           
 28130                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 28131  000832  0E09               	movlw	9
 28132  000834  0100               	movlb	0	; () banked
 28133  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28134                           
 28135                           ; BSR set to: 0
 28136                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 28137  000838  0EF5               	movlw	low _ConnTimeout
 28138  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28139  00083C  0E02               	movlw	high _ConnTimeout
 28140  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28141  000840  0E20               	movlw	32
 28142  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28143  000844  0E4E               	movlw	78
 28144  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28145  000848  0E00               	movlw	0
 28146  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28147  00084C  0E00               	movlw	0
 28148  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28149  000850  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 28150                           
 28151                           ;mdm_gsm_gprs_http.c: 371: break;
 28152  000854  D130               	goto	l1252
 28153  000856                     
 28154                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 28155  000856  0E82               	movlw	low STR_17
 28156  000858  0100               	movlb	0	; () banked
 28157  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28158  00085C  0EFF               	movlw	high STR_17
 28159  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28160  000860  0E01               	movlw	1
 28161  000862  EC4C  F02D         	call	_Uart_WriteConstString
 28162                           
 28163                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 28164  000866  0E0D               	movlw	13
 28165  000868  0101               	movlb	1	; () banked
 28166  00086A  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28167                           
 28168                           ; BSR set to: 1
 28169                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 28170  00086C  0E09               	movlw	9
 28171  00086E  0100               	movlb	0	; () banked
 28172  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28173                           
 28174                           ; BSR set to: 0
 28175                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 28176  000872  0EF5               	movlw	low _ConnTimeout
 28177  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28178  000876  0E02               	movlw	high _ConnTimeout
 28179  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28180  00087A  0E20               	movlw	32
 28181  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28182  00087E  0E4E               	movlw	78
 28183  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28184  000882  0E00               	movlw	0
 28185  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28186  000886  0E00               	movlw	0
 28187  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28188  00088A  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 28189  00088E  D08A               	goto	l14751
 28190  000890                     
 28191                           ; BSR set to: 1
 28192                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 28193                           
 28194                           ; BSR set to: 1
 28195  000890  0E8F               	movlw	low STR_18
 28196  000892  0100               	movlb	0	; () banked
 28197  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28198  000896  0EFF               	movlw	high STR_18
 28199  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28200  00089A  0E01               	movlw	1
 28201  00089C  EC4C  F02D         	call	_Uart_WriteConstString
 28202                           
 28203                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 28204  0008A0  0E0A               	movlw	10
 28205  0008A2  0101               	movlb	1	; () banked
 28206  0008A4  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28207                           
 28208                           ; BSR set to: 1
 28209                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 28210  0008A6  0E0E               	movlw	14
 28211  0008A8  0100               	movlb	0	; () banked
 28212  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28213                           
 28214                           ; BSR set to: 0
 28215                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 28216  0008AC  0EF5               	movlw	low _ConnTimeout
 28217  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28218  0008B0  0E02               	movlw	high _ConnTimeout
 28219  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28220  0008B4  0E20               	movlw	32
 28221  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28222  0008B8  0E4E               	movlw	78
 28223  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28224  0008BC  0E00               	movlw	0
 28225  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28226  0008C0  0E00               	movlw	0
 28227  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28228  0008C4  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 28229  0008C8  D06D               	goto	l14751
 28230  0008CA                     
 28231                           ; BSR set to: 1
 28232                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 28233                           
 28234                           ; BSR set to: 1
 28235  0008CA  0E3C               	movlw	low _NewStringReceived
 28236  0008CC  0100               	movlb	0	; () banked
 28237  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28238  0008D0  0E00               	movlw	high _NewStringReceived
 28239  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28240  0008D4  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 28241  0008D8  0900               	iorlw	0
 28242  0008DA  B4D8               	btfsc	status,2,c
 28243  0008DC  D018               	goto	l1265
 28244                           
 28245                           ;mdm_gsm_gprs_http.c: 400: {
 28246                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 28247  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 28248  0008E2  0A4F               	xorlw	79
 28249  0008E4  A4D8               	btfss	status,2,c
 28250  0008E6  D0E7               	goto	l1252
 28251  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28252  0008EC  0A4B               	xorlw	75
 28253  0008EE  A4D8               	btfss	status,2,c
 28254  0008F0  D0E2               	goto	l1252
 28255                           
 28256                           ;mdm_gsm_gprs_http.c: 403: {
 28257                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 28258  0008F2  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28259                           
 28260                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 28261  0008F6  0E58               	movlw	low _RxBuffer
 28262  0008F8  0100               	movlb	0	; () banked
 28263  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28264  0008FC  0E0C               	movlw	high _RxBuffer
 28265  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28266  000900  0E01               	movlw	1
 28267  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28268  000904  0E90               	movlw	144
 28269  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28270  000908  ECBC  F02E         	call	_ClearBuffer	;wreg free
 28271                           
 28272                           ;mdm_gsm_gprs_http.c: 408: }
 28273                           ;mdm_gsm_gprs_http.c: 409: }
 28274  00090C  D0D4               	goto	l1252
 28275  00090E                     l1265:
 28276                           
 28277                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28278  00090E  0EF5               	movlw	low _ConnTimeout
 28279  000910  0100               	movlb	0	; () banked
 28280  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28281  000914  0E02               	movlw	high _ConnTimeout
 28282  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28283  000918  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28284  00091C                     L46:
 28285  00091C  06E8               	decf	wreg,f,c
 28286  00091E  A4D8               	btfss	status,2,c
 28287  000920  D0CA               	goto	l1252
 28288                           
 28289                           ;mdm_gsm_gprs_http.c: 411: {
 28290                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 28291  000922  0E0F               	movlw	15
 28292  000924                     L45:
 28293  000924  0101               	movlb	1	; () banked
 28294  000926  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28295                           
 28296                           ; BSR set to: 1
 28297                           ;mdm_gsm_gprs_http.c: 414: }
 28298                           ;mdm_gsm_gprs_http.c: 415: break;
 28299                           
 28300                           ; BSR set to: 1
 28301  000928  D0C6               	goto	l1252
 28302  00092A                     
 28303                           ; BSR set to: 1
 28304                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 28305                           
 28306                           ; BSR set to: 1
 28307  00092A  0E3C               	movlw	low _NewStringReceived
 28308  00092C  0100               	movlb	0	; () banked
 28309  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28310  000930  0E00               	movlw	high _NewStringReceived
 28311  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28312  000934  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 28313  000938  0900               	iorlw	0
 28314  00093A  B4D8               	btfsc	status,2,c
 28315  00093C  D018               	goto	l1270
 28316                           
 28317                           ;mdm_gsm_gprs_http.c: 420: {
 28318                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 28319  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 28320  000942  0A2B               	xorlw	43
 28321  000944  A4D8               	btfss	status,2,c
 28322  000946  D0B7               	goto	l1252
 28323  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28324  00094C  0A48               	xorlw	72
 28325  00094E  A4D8               	btfss	status,2,c
 28326  000950  D0B2               	goto	l1252
 28327                           
 28328                           ;mdm_gsm_gprs_http.c: 423: {
 28329                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 28330  000952  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28331                           
 28332                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 28333  000956  0E58               	movlw	low _RxBuffer
 28334  000958  0100               	movlb	0	; () banked
 28335  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28336  00095C  0E0C               	movlw	high _RxBuffer
 28337  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28338  000960  0E01               	movlw	1
 28339  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28340  000964  0E90               	movlw	144
 28341  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28342  000968  ECBC  F02E         	call	_ClearBuffer	;wreg free
 28343                           
 28344                           ;mdm_gsm_gprs_http.c: 428: }
 28345                           ;mdm_gsm_gprs_http.c: 429: }
 28346  00096C  D0A4               	goto	l1252
 28347  00096E                     l1270:
 28348                           
 28349                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28350  00096E  0EF5               	movlw	low _ConnTimeout
 28351  000970  0100               	movlb	0	; () banked
 28352  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28353  000974  0E02               	movlw	high _ConnTimeout
 28354  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28355  000978  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28356  00097C  D7CF               	goto	L46
 28357  00097E                     
 28358                           ; BSR set to: 1
 28359                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 28360                           
 28361                           ; BSR set to: 1
 28362  00097E  0E0C               	movlw	12
 28363  000980  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28364                           
 28365                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 28366  000982  0E05               	movlw	5
 28367  000984  0100               	movlb	0	; () banked
 28368  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 28369                           
 28370                           ; BSR set to: 0
 28371                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 28372  000988  0EDB               	movlw	low _ConnWait
 28373  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28374  00098C  0E03               	movlw	high _ConnWait
 28375  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28376  000990  0EE8               	movlw	232
 28377  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28378  000994  0E03               	movlw	3
 28379  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28380  000998  0E00               	movlw	0
 28381  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28382  00099C  0E00               	movlw	0
 28383  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28384  0009A0  EC42  F029         	call	_OsTmr_StartTimer	;wreg free
 28385  0009A4                     l14751:
 28386                           
 28387                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 28388  0009A4  0E01               	movlw	1
 28389  0009A6  0101               	movlb	1	; () banked
 28390  0009A8  D053               	goto	L48
 28391  0009AA                     
 28392                           ; BSR set to: 1
 28393                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 28394                           
 28395                           ; BSR set to: 1
 28396  0009AA  0EDB               	movlw	low _ConnWait
 28397  0009AC  0100               	movlb	0	; () banked
 28398  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28399  0009B0  0E03               	movlw	high _ConnWait
 28400  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28401  0009B4  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28402  0009B8  06E8               	decf	wreg,f,c
 28403  0009BA  A4D8               	btfss	status,2,c
 28404  0009BC  D07C               	goto	l1252
 28405                           
 28406                           ;mdm_gsm_gprs_http.c: 450: {
 28407                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 28408  0009BE  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28409                           
 28410                           ;mdm_gsm_gprs_http.c: 453: }
 28411                           ;mdm_gsm_gprs_http.c: 454: break;
 28412  0009C2  D079               	goto	l1252
 28413  0009C4                     
 28414                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 28415  0009C4  0E3C               	movlw	low _NewStringReceived
 28416  0009C6  0100               	movlb	0	; () banked
 28417  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28418  0009CA  0E00               	movlw	high _NewStringReceived
 28419  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28420  0009CE  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 28421  0009D2  0900               	iorlw	0
 28422  0009D4  B4D8               	btfsc	status,2,c
 28423  0009D6  D02D               	goto	l1278
 28424                           
 28425                           ;mdm_gsm_gprs_http.c: 459: {
 28426                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 28427  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 28428  0009DC  0A2B               	xorlw	43
 28429  0009DE  A4D8               	btfss	status,2,c
 28430  0009E0  D06A               	goto	l1252
 28431  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28432  0009E6  0A48               	xorlw	72
 28433  0009E8  A4D8               	btfss	status,2,c
 28434  0009EA  D065               	goto	l1252
 28435                           
 28436                           ;mdm_gsm_gprs_http.c: 462: {
 28437                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 28438  0009EC  C0D0  F1EB         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 28439                           
 28440                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 28441  0009F0  0E58               	movlw	low _RxBuffer
 28442  0009F2  0100               	movlb	0	; () banked
 28443  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 28444  0009F6  0E0C               	movlw	high _RxBuffer
 28445  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 28446  0009FA  EE20 F003          	lfsr	2,3
 28447  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 28448  000A00  26D9               	addwf	fsr2l,f,c
 28449  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 28450  000A04  22DA               	addwfc	fsr2h,f,c
 28451  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 28452  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 28453  000A0E  0E01               	movlw	1
 28454  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 28455  000A12  0E90               	movlw	144
 28456  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 28457  000A16  ECE2  F028         	call	_StringCopy	;wreg free
 28458                           
 28459                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 28460  000A1A  0E58               	movlw	low _RxBuffer
 28461  000A1C  0100               	movlb	0	; () banked
 28462  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 28463  000A20  0E0C               	movlw	high _RxBuffer
 28464  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 28465  000A24  0E01               	movlw	1
 28466  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 28467  000A28  0E90               	movlw	144
 28468  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 28469  000A2C  ECBC  F02E         	call	_ClearBuffer	;wreg free
 28470                           
 28471                           ;mdm_gsm_gprs_http.c: 469: }
 28472                           ;mdm_gsm_gprs_http.c: 470: }
 28473  000A30  D042               	goto	l1252
 28474  000A32                     l1278:
 28475                           
 28476                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 28477  000A32  0EF5               	movlw	low _ConnTimeout
 28478  000A34  0100               	movlb	0	; () banked
 28479  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28480  000A38  0E02               	movlw	high _ConnTimeout
 28481  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28482  000A3C  ECC9  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 28483  000A40  D76D               	goto	L46
 28484  000A42                     
 28485                           ; BSR set to: 1
 28486                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 28487                           
 28488                           ; BSR set to: 1
 28489  000A42  0E00               	movlw	0
 28490  000A44  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28491                           
 28492                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 28493  000A46  0E02               	movlw	2
 28494  000A48  D003               	goto	L48
 28495  000A4A                     
 28496                           ; BSR set to: 1
 28497                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 28498                           
 28499                           ; BSR set to: 1
 28500  000A4A  0E00               	movlw	0
 28501  000A4C  6FEB               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 28502                           
 28503                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 28504  000A4E  0E03               	movlw	3
 28505  000A50                     L48:
 28506  000A50  6FEA               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 28507                           
 28508                           ; BSR set to: 1
 28509                           ;mdm_gsm_gprs_http.c: 494: }
 28510                           
 28511                           ; BSR set to: 1
 28512                           ;mdm_gsm_gprs_http.c: 493: break;
 28513                           
 28514                           ;mdm_gsm_gprs_http.c: 492: default:
 28515                           
 28516                           ;mdm_gsm_gprs_http.c: 490: break;
 28517  000A52  D031               	goto	l1252
 28518  000A54                     l1249:
 28519                           
 28520                           ; BSR set to: 1
 28521                           
 28522                           ; BSR set to: 1
 28523  000A54  51EB               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 28524                           
 28525                           ; Switch size 1, requested type "space"
 28526                           ; Number of cases is 16, Range of values is 0 to 15
 28527                           ; switch strategies available:
 28528                           ; Name         Instructions Cycles
 28529                           ; simple_byte           49    25 (average)
 28530                           ;	Chosen strategy is simple_byte
 28531  000A56  0A00               	xorlw	0	; case 0
 28532  000A58  B4D8               	btfsc	status,2,c
 28533  000A5A  D5CC               	goto	l1250
 28534  000A5C  0A01               	xorlw	1	; case 1
 28535  000A5E  B4D8               	btfsc	status,2,c
 28536  000A60  D5D5               	goto	l1253
 28537  000A62  0A03               	xorlw	3	; case 2
 28538  000A64  B4D8               	btfsc	status,2,c
 28539  000A66  D5EF               	goto	l1254
 28540  000A68  0A01               	xorlw	1	; case 3
 28541  000A6A  B4D8               	btfsc	status,2,c
 28542  000A6C  D609               	goto	l1255
 28543  000A6E  0A07               	xorlw	7	; case 4
 28544  000A70  B4D8               	btfsc	status,2,c
 28545  000A72  D623               	goto	l1256
 28546  000A74  0A01               	xorlw	1	; case 5
 28547  000A76  B4D8               	btfsc	status,2,c
 28548  000A78  D6BC               	goto	l1260
 28549  000A7A  0A03               	xorlw	3	; case 6
 28550  000A7C  B4D8               	btfsc	status,2,c
 28551  000A7E  D6D6               	goto	l1261
 28552  000A80  0A01               	xorlw	1	; case 7
 28553  000A82  B4D8               	btfsc	status,2,c
 28554  000A84  D752               	goto	l1269
 28555  000A86  0A0F               	xorlw	15	; case 8
 28556  000A88  B4D8               	btfsc	status,2,c
 28557  000A8A  D6E5               	goto	l1262
 28558  000A8C  0A01               	xorlw	1	; case 9
 28559  000A8E  B4D8               	btfsc	status,2,c
 28560  000A90  D6FF               	goto	l1263
 28561  000A92  0A03               	xorlw	3	; case 10
 28562  000A94  B4D8               	btfsc	status,2,c
 28563  000A96  D719               	goto	l1264
 28564  000A98  0A01               	xorlw	1	; case 11
 28565  000A9A  B4D8               	btfsc	status,2,c
 28566  000A9C  D770               	goto	l1274
 28567  000A9E  0A07               	xorlw	7	; case 12
 28568  000AA0  B4D8               	btfsc	status,2,c
 28569  000AA2  D783               	goto	l1275
 28570  000AA4  0A01               	xorlw	1	; case 13
 28571  000AA6  B4D8               	btfsc	status,2,c
 28572  000AA8  D78D               	goto	l1277
 28573  000AAA  0A03               	xorlw	3	; case 14
 28574  000AAC  B4D8               	btfsc	status,2,c
 28575  000AAE  D7C9               	goto	l1282
 28576  000AB0  0A01               	xorlw	1	; case 15
 28577  000AB2  B4D8               	btfsc	status,2,c
 28578  000AB4  D7CA               	goto	l1283
 28579  000AB6                     l1252:
 28580                           
 28581                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 28582                           
 28583                           ; BSR set to: 1
 28584  000AB6  0101               	movlb	1	; () banked
 28585  000AB8  51EA               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 28586  000ABA  0012               	return	
 28587  000ABC                     __end_of_HttpGetMethod:
 28588                           	opt stack 0
 28589                           tosu	equ	0xFFF
 28590                           tosh	equ	0xFFE
 28591                           tosl	equ	0xFFD
 28592                           pclath	equ	0xFFA
 28593                           tblptru	equ	0xFF8
 28594                           tblptrh	equ	0xFF7
 28595                           tblptrl	equ	0xFF6
 28596                           tablat	equ	0xFF5
 28597                           prodh	equ	0xFF4
 28598                           prodl	equ	0xFF3
 28599                           intcon	equ	0xFF2
 28600                           intcon2	equ	0xFF1
 28601                           intcon3	equ	0xFF0
 28602                           indf0	equ	0xFEF
 28603                           postinc0	equ	0xFEE
 28604                           plusw0	equ	0xFEB
 28605                           fsr0h	equ	0xFEA
 28606                           fsr0l	equ	0xFE9
 28607                           wreg	equ	0xFE8
 28608                           indf1	equ	0xFE7
 28609                           postinc1	equ	0xFE6
 28610                           postdec1	equ	0xFE5
 28611                           plusw1	equ	0xFE3
 28612                           fsr1h	equ	0xFE2
 28613                           fsr1l	equ	0xFE1
 28614                           indf2	equ	0xFDF
 28615                           postinc2	equ	0xFDE
 28616                           postdec2	equ	0xFDD
 28617                           plusw2	equ	0xFDB
 28618                           fsr2h	equ	0xFDA
 28619                           fsr2l	equ	0xFD9
 28620                           status	equ	0xFD8
 28621                           
 28622 ;; *************** function _Uart_WriteString *****************
 28623 ;; Defined at:
 28624 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28625 ;; Parameters:    Size  Location     Type
 28626 ;;  Module          1    wreg     unsigned char 
 28627 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 28628 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 28629 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 28630 ;; Auto vars:     Size  Location     Type
 28631 ;;  Module          1   34[BANK0 ] unsigned char 
 28632 ;; Return value:  Size  Location     Type
 28633 ;;                  1    wreg      void 
 28634 ;; Registers used:
 28635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28636 ;; Tracked objects:
 28637 ;;		On entry : 0/0
 28638 ;;		On exit  : 0/0
 28639 ;;		Unchanged: 0/0
 28640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28644 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28645 ;;Total ram usage:        3 bytes
 28646 ;; Hardware stack levels used:    1
 28647 ;; Hardware stack levels required when called:   12
 28648 ;; This function calls:
 28649 ;;		_UartTxBufferStatus
 28650 ;;		_UartWriteByte
 28651 ;; This function is called by:
 28652 ;;		_Mdm_SetSmsFormat
 28653 ;;		_InitGprsNetwork
 28654 ;;		_HttpGetMethod
 28655 ;;		_Mdm_PinUnlock
 28656 ;;		_Mdm_MakePhoneCall
 28657 ;; This function uses a non-reentrant model
 28658 ;;
 28659                           
 28660                           	psect	text127
 28661  005C1A                     __ptext127:
 28662                           	opt stack 0
 28663  005C1A                     _Uart_WriteString:
 28664                           	opt stack 12
 28665                           
 28666                           ; BSR set to: 1
 28667                           ;incstack = 0
 28668                           ;Uart_WriteString@Module stored from wreg
 28669  005C1A  0100               	movlb	0	; () banked
 28670  005C1C  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 28671                           
 28672                           ;uart_drv.c: 521: while (*StringToWrite)
 28673  005C1E  D014               	goto	u11310
 28674  005C20                     
 28675                           ;uart_drv.c: 522: {
 28676                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 28677  005C20  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28678  005C24  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28679  005C28  50DF               	movf	indf2,w,c
 28680  005C2A  0100               	movlb	0	; () banked
 28681  005C2C  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28682  005C2E  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28683  005C30  ECD6  F030         	call	_UartWriteByte
 28684                           
 28685                           ;uart_drv.c: 526: StringToWrite++;
 28686  005C34  0100               	movlb	0	; () banked
 28687  005C36  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 28688  005C38  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 28689  005C3A                     
 28690                           ; BSR set to: 0
 28691                           
 28692                           ; BSR set to: 0
 28693  005C3A  0100               	movlb	0	; () banked
 28694  005C3C  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28695  005C3E  ECC2  F02B         	call	_UartTxBufferStatus
 28696  005C42  06E8               	decf	wreg,f,c
 28697  005C44  B4D8               	btfsc	status,2,c
 28698  005C46  D7F9               	goto	l709
 28699  005C48                     u11310:
 28700  005C48  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28701  005C4C  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28702  005C50  50DF               	movf	indf2,w,c
 28703  005C52  B4D8               	btfsc	status,2,c
 28704  005C54  0012               	return	
 28705  005C56  D7E4               	goto	l707
 28706  005C58                     __end_of_Uart_WriteString:
 28707                           	opt stack 0
 28708                           tosu	equ	0xFFF
 28709                           tosh	equ	0xFFE
 28710                           tosl	equ	0xFFD
 28711                           pclath	equ	0xFFA
 28712                           tblptru	equ	0xFF8
 28713                           tblptrh	equ	0xFF7
 28714                           tblptrl	equ	0xFF6
 28715                           tablat	equ	0xFF5
 28716                           prodh	equ	0xFF4
 28717                           prodl	equ	0xFF3
 28718                           intcon	equ	0xFF2
 28719                           intcon2	equ	0xFF1
 28720                           intcon3	equ	0xFF0
 28721                           indf0	equ	0xFEF
 28722                           postinc0	equ	0xFEE
 28723                           plusw0	equ	0xFEB
 28724                           fsr0h	equ	0xFEA
 28725                           fsr0l	equ	0xFE9
 28726                           wreg	equ	0xFE8
 28727                           indf1	equ	0xFE7
 28728                           postinc1	equ	0xFE6
 28729                           postdec1	equ	0xFE5
 28730                           plusw1	equ	0xFE3
 28731                           fsr1h	equ	0xFE2
 28732                           fsr1l	equ	0xFE1
 28733                           indf2	equ	0xFDF
 28734                           postinc2	equ	0xFDE
 28735                           postdec2	equ	0xFDD
 28736                           plusw2	equ	0xFDB
 28737                           fsr2h	equ	0xFDA
 28738                           fsr2l	equ	0xFD9
 28739                           status	equ	0xFD8
 28740                           
 28741 ;; *************** function _Uart_WriteConstString *****************
 28742 ;; Defined at:
 28743 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28744 ;; Parameters:    Size  Location     Type
 28745 ;;  Module          1    wreg     unsigned char 
 28746 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 28747 ;;		 -> STR_30(12), STR_29(19), STR_20(14), STR_19(14), 
 28748 ;;		 -> STR_18(13), STR_17(13), STR_16(17), STR_14(21), 
 28749 ;;		 -> STR_13(14), STR_12(13), STR_11(14), STR_10(14), 
 28750 ;;		 -> STR_8(31), STR_7(5), STR_6(5), STR_4(12), 
 28751 ;;		 -> STR_3(7), STR_2(14), STR_1(5), 
 28752 ;; Auto vars:     Size  Location     Type
 28753 ;;  Module          1   34[BANK0 ] unsigned char 
 28754 ;; Return value:  Size  Location     Type
 28755 ;;                  1    wreg      void 
 28756 ;; Registers used:
 28757 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28758 ;; Tracked objects:
 28759 ;;		On entry : 0/0
 28760 ;;		On exit  : 0/0
 28761 ;;		Unchanged: 0/0
 28762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28763 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28766 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28767 ;;Total ram usage:        3 bytes
 28768 ;; Hardware stack levels used:    1
 28769 ;; Hardware stack levels required when called:   12
 28770 ;; This function calls:
 28771 ;;		_UartTxBufferStatus
 28772 ;;		_UartWriteByte
 28773 ;; This function is called by:
 28774 ;;		_CheckModem
 28775 ;;		_ConfigureModem
 28776 ;;		_GetSmsSm
 28777 ;;		_Mdm_HangPhoneCall
 28778 ;;		_InitGprsNetwork
 28779 ;;		_HttpGetMethod
 28780 ;;		_initGprsModem
 28781 ;;		_Mdm_GetPhoneCall
 28782 ;;		_MdmHttp_SetSsl
 28783 ;; This function uses a non-reentrant model
 28784 ;;
 28785                           
 28786                           	psect	text128
 28787  005A98                     __ptext128:
 28788                           	opt stack 0
 28789  005A98                     _Uart_WriteConstString:
 28790                           	opt stack 13
 28791                           
 28792                           ;incstack = 0
 28793                           ;Uart_WriteConstString@Module stored from wreg
 28794  005A98  0100               	movlb	0	; () banked
 28795  005A9A  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 28796                           
 28797                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 28798  005A9C  D015               	goto	u11830
 28799  005A9E                     
 28800                           ;uart_drv.c: 500: {
 28801                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 28802  005A9E  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28803  005AA2  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28804  005AA6                     	if	0	;tblptru may be non-zero
 28805  005AA6                     	endif
 28806  005AA6                     	if	0	;tblptru may be non-zero
 28807  005AA6                     	endif
 28808  005AA6  0008               	tblrd		*
 28809  005AA8  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 28810  005AAC  0100               	movlb	0	; () banked
 28811  005AAE  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28812  005AB0  ECD6  F030         	call	_UartWriteByte
 28813                           
 28814                           ;uart_drv.c: 504: ConstStringToWrite++;
 28815  005AB4  0100               	movlb	0	; () banked
 28816  005AB6  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 28817  005AB8  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 28818  005ABA                     
 28819                           ; BSR set to: 0
 28820                           
 28821                           ; BSR set to: 0
 28822  005ABA  0100               	movlb	0	; () banked
 28823  005ABC  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28824  005ABE  ECC2  F02B         	call	_UartTxBufferStatus
 28825  005AC2  06E8               	decf	wreg,f,c
 28826  005AC4  B4D8               	btfsc	status,2,c
 28827  005AC6  D7F9               	goto	l700
 28828  005AC8                     u11830:
 28829  005AC8  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28830  005ACC  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28831  005AD0                     	if	0	;tblptru may be non-zero
 28832  005AD0                     	endif
 28833  005AD0                     	if	0	;tblptru may be non-zero
 28834  005AD0                     	endif
 28835  005AD0  0008               	tblrd		*
 28836  005AD2  50F5               	movf	tablat,w,c
 28837  005AD4  0900               	iorlw	0
 28838  005AD6  B4D8               	btfsc	status,2,c
 28839  005AD8  0012               	return	
 28840  005ADA  D7E1               	goto	l698
 28841  005ADC                     __end_of_Uart_WriteConstString:
 28842                           	opt stack 0
 28843                           tosu	equ	0xFFF
 28844                           tosh	equ	0xFFE
 28845                           tosl	equ	0xFFD
 28846                           pclath	equ	0xFFA
 28847                           tblptru	equ	0xFF8
 28848                           tblptrh	equ	0xFF7
 28849                           tblptrl	equ	0xFF6
 28850                           tablat	equ	0xFF5
 28851                           prodh	equ	0xFF4
 28852                           prodl	equ	0xFF3
 28853                           intcon	equ	0xFF2
 28854                           intcon2	equ	0xFF1
 28855                           intcon3	equ	0xFF0
 28856                           indf0	equ	0xFEF
 28857                           postinc0	equ	0xFEE
 28858                           plusw0	equ	0xFEB
 28859                           fsr0h	equ	0xFEA
 28860                           fsr0l	equ	0xFE9
 28861                           wreg	equ	0xFE8
 28862                           indf1	equ	0xFE7
 28863                           postinc1	equ	0xFE6
 28864                           postdec1	equ	0xFE5
 28865                           plusw1	equ	0xFE3
 28866                           fsr1h	equ	0xFE2
 28867                           fsr1l	equ	0xFE1
 28868                           indf2	equ	0xFDF
 28869                           postinc2	equ	0xFDE
 28870                           postdec2	equ	0xFDD
 28871                           plusw2	equ	0xFDB
 28872                           fsr2h	equ	0xFDA
 28873                           fsr2l	equ	0xFD9
 28874                           status	equ	0xFD8
 28875                           
 28876 ;; *************** function _UartWriteByte *****************
 28877 ;; Defined at:
 28878 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28879 ;; Parameters:    Size  Location     Type
 28880 ;;  Module          1    wreg     unsigned char 
 28881 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 28882 ;; Auto vars:     Size  Location     Type
 28883 ;;  Module          1   30[BANK0 ] unsigned char 
 28884 ;; Return value:  Size  Location     Type
 28885 ;;                  1    wreg      void 
 28886 ;; Registers used:
 28887 ;;		wreg, status,2, status,0
 28888 ;; Tracked objects:
 28889 ;;		On entry : 0/0
 28890 ;;		On exit  : 0/0
 28891 ;;		Unchanged: 0/0
 28892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28893 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28897 ;;Total ram usage:        2 bytes
 28898 ;; Hardware stack levels used:    1
 28899 ;; Hardware stack levels required when called:   11
 28900 ;; This function calls:
 28901 ;;		Nothing
 28902 ;; This function is called by:
 28903 ;;		_Uart_WriteConstString
 28904 ;;		_Uart_WriteString
 28905 ;;		_Uart_WriteStringLen
 28906 ;; This function uses a non-reentrant model
 28907 ;;
 28908                           
 28909                           	psect	text129
 28910  0061AC                     __ptext129:
 28911                           	opt stack 0
 28912  0061AC                     _UartWriteByte:
 28913                           	opt stack 13
 28914                           
 28915                           ;incstack = 0
 28916                           ;UartWriteByte@Module stored from wreg
 28917  0061AC  0100               	movlb	0	; () banked
 28918  0061AE  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 28919                           
 28920                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 28921  0061B0  0100               	movlb	0	; () banked
 28922  0061B2  057E               	decf	UartWriteByte@Module& (0+255),w,b
 28923  0061B4  A4D8               	btfss	status,2,c
 28924  0061B6  D003               	goto	l639
 28925                           
 28926                           ; BSR set to: 0
 28927                           ;uart_drv.c: 176: {
 28928                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 28929  0061B8  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 28930                           
 28931                           ;uart_drv.c: 179: }
 28932  0061BC  0012               	return	
 28933  0061BE                     l639:
 28934                           
 28935                           ; BSR set to: 0
 28936                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 28937                           
 28938                           ; BSR set to: 0
 28939  0061BE  0E02               	movlw	2
 28940  0061C0  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 28941  0061C2  A4D8               	btfss	status,2,c
 28942  0061C4  0012               	return	
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;uart_drv.c: 181: {
 28946                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 28947  0061C6  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 28948                           
 28949                           ; BSR set to: 0
 28950  0061CA  0012               	return	
 28951  0061CC                     __end_of_UartWriteByte:
 28952                           	opt stack 0
 28953                           tosu	equ	0xFFF
 28954                           tosh	equ	0xFFE
 28955                           tosl	equ	0xFFD
 28956                           pclath	equ	0xFFA
 28957                           tblptru	equ	0xFF8
 28958                           tblptrh	equ	0xFF7
 28959                           tblptrl	equ	0xFF6
 28960                           tablat	equ	0xFF5
 28961                           prodh	equ	0xFF4
 28962                           prodl	equ	0xFF3
 28963                           intcon	equ	0xFF2
 28964                           intcon2	equ	0xFF1
 28965                           intcon3	equ	0xFF0
 28966                           indf0	equ	0xFEF
 28967                           postinc0	equ	0xFEE
 28968                           plusw0	equ	0xFEB
 28969                           fsr0h	equ	0xFEA
 28970                           fsr0l	equ	0xFE9
 28971                           wreg	equ	0xFE8
 28972                           indf1	equ	0xFE7
 28973                           postinc1	equ	0xFE6
 28974                           postdec1	equ	0xFE5
 28975                           plusw1	equ	0xFE3
 28976                           fsr1h	equ	0xFE2
 28977                           fsr1l	equ	0xFE1
 28978                           indf2	equ	0xFDF
 28979                           postinc2	equ	0xFDE
 28980                           postdec2	equ	0xFDD
 28981                           plusw2	equ	0xFDB
 28982                           fsr2h	equ	0xFDA
 28983                           fsr2l	equ	0xFD9
 28984                           status	equ	0xFD8
 28985                           
 28986 ;; *************** function _UartTxBufferStatus *****************
 28987 ;; Defined at:
 28988 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28989 ;; Parameters:    Size  Location     Type
 28990 ;;  Module          1    wreg     unsigned char 
 28991 ;; Auto vars:     Size  Location     Type
 28992 ;;  Module          1   30[BANK0 ] unsigned char 
 28993 ;;  TxBufferStat    1   31[BANK0 ] enum E9034
 28994 ;; Return value:  Size  Location     Type
 28995 ;;                  1    wreg      enum E9034
 28996 ;; Registers used:
 28997 ;;		wreg, status,2, status,0
 28998 ;; Tracked objects:
 28999 ;;		On entry : 0/0
 29000 ;;		On exit  : 0/0
 29001 ;;		Unchanged: 0/0
 29002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29006 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29007 ;;Total ram usage:        3 bytes
 29008 ;; Hardware stack levels used:    1
 29009 ;; Hardware stack levels required when called:   11
 29010 ;; This function calls:
 29011 ;;		Nothing
 29012 ;; This function is called by:
 29013 ;;		_Uart_WriteConstString
 29014 ;;		_Uart_WriteString
 29015 ;;		_Uart_WriteStringLen
 29016 ;; This function uses a non-reentrant model
 29017 ;;
 29018                           
 29019                           	psect	text130
 29020  005784                     __ptext130:
 29021                           	opt stack 0
 29022  005784                     _UartTxBufferStatus:
 29023                           	opt stack 13
 29024                           
 29025                           ; BSR set to: 0
 29026                           ;incstack = 0
 29027                           ;UartTxBufferStatus@Module stored from wreg
 29028  005784  0100               	movlb	0	; () banked
 29029  005786  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 29030                           
 29031                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 29032  005788  0E00               	movlw	0
 29033  00578A  0100               	movlb	0	; () banked
 29034  00578C  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 29035                           
 29036                           ; BSR set to: 0
 29037                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 29038  00578E  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 29039  005790  A4D8               	btfss	status,2,c
 29040  005792  D00B               	goto	l651
 29041                           
 29042                           ; BSR set to: 0
 29043                           ;uart_drv.c: 228: {
 29044                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 29045  005794  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 29046  005798  90D8               	bcf	status,0,c
 29047  00579A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 29048  00579C  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 29049  00579E  D002               	goto	l652
 29050  0057A0                     u10740:
 29051                           
 29052                           ; BSR set to: 0
 29053                           ;uart_drv.c: 231: {
 29054                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 29055  0057A0  0E01               	movlw	1
 29056  0057A2  D014               	goto	L51
 29057  0057A4                     l652:
 29058                           
 29059                           ; BSR set to: 0
 29060                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 29061                           
 29062                           ; BSR set to: 0
 29063  0057A4  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 29064  0057A8  D00C               	goto	L80
 29065  0057AA                     l651:
 29066                           
 29067                           ; BSR set to: 0
 29068                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 29069                           
 29070                           ; BSR set to: 0
 29071  0057AA  0E02               	movlw	2
 29072  0057AC  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 29073  0057AE  A4D8               	btfss	status,2,c
 29074  0057B0  D00E               	goto	l660
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;uart_drv.c: 244: {
 29078                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 29079  0057B2  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 29080  0057B6  90D8               	bcf	status,0,c
 29081  0057B8  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 29082  0057BA  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 29083  0057BC  D7F1               	goto	u10740
 29084                           
 29085                           ; BSR set to: 0
 29086                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 29087                           
 29088                           ; BSR set to: 0
 29089                           
 29090                           ;uart_drv.c: 249: }
 29091                           
 29092                           ; BSR set to: 0
 29093                           ;uart_drv.c: 247: {
 29094                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 29095  0057BE  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 29096  0057C2                     L80:
 29097  0057C2  90D8               	bcf	status,0,c
 29098  0057C4  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 29099  0057C6  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 29100  0057C8  D002               	goto	l660
 29101                           
 29102                           ; BSR set to: 0
 29103                           ;uart_drv.c: 251: {
 29104                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 29105  0057CA  0E02               	movlw	2
 29106  0057CC                     L51:
 29107  0057CC  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 29108  0057CE                     l660:
 29109                           
 29110                           ; BSR set to: 0
 29111                           ;uart_drv.c: 257: }
 29112                           ;uart_drv.c: 258: }
 29113                           ;uart_drv.c: 260: return TxBufferStatus;
 29114                           
 29115                           ; BSR set to: 0
 29116                           
 29117                           ; BSR set to: 0
 29118                           
 29119                           ; BSR set to: 0
 29120                           
 29121                           ; BSR set to: 0
 29122                           
 29123                           ;uart_drv.c: 254: else
 29124                           ;uart_drv.c: 255: {
 29125                           
 29126                           ; BSR set to: 0
 29127  0057CE  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 29128  0057D0  0012               	return	
 29129  0057D2                     __end_of_UartTxBufferStatus:
 29130                           	opt stack 0
 29131                           tosu	equ	0xFFF
 29132                           tosh	equ	0xFFE
 29133                           tosl	equ	0xFFD
 29134                           pclath	equ	0xFFA
 29135                           tblptru	equ	0xFF8
 29136                           tblptrh	equ	0xFF7
 29137                           tblptrl	equ	0xFF6
 29138                           tablat	equ	0xFF5
 29139                           prodh	equ	0xFF4
 29140                           prodl	equ	0xFF3
 29141                           intcon	equ	0xFF2
 29142                           intcon2	equ	0xFF1
 29143                           intcon3	equ	0xFF0
 29144                           indf0	equ	0xFEF
 29145                           postinc0	equ	0xFEE
 29146                           plusw0	equ	0xFEB
 29147                           fsr0h	equ	0xFEA
 29148                           fsr0l	equ	0xFE9
 29149                           wreg	equ	0xFE8
 29150                           indf1	equ	0xFE7
 29151                           postinc1	equ	0xFE6
 29152                           postdec1	equ	0xFE5
 29153                           plusw1	equ	0xFE3
 29154                           fsr1h	equ	0xFE2
 29155                           fsr1l	equ	0xFE1
 29156                           indf2	equ	0xFDF
 29157                           postinc2	equ	0xFDE
 29158                           postdec2	equ	0xFDD
 29159                           plusw2	equ	0xFDB
 29160                           fsr2h	equ	0xFDA
 29161                           fsr2l	equ	0xFD9
 29162                           status	equ	0xFD8
 29163                           
 29164 ;; *************** function _StringCopy *****************
 29165 ;; Defined at:
 29166 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29167 ;; Parameters:    Size  Location     Type
 29168 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 29169 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 29170 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), RxBuffer(400), 
 29171 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 29172 ;;		 -> EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), 
 29173 ;;		 -> PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), callerNumber(13), 
 29174 ;;  Len             2   33[BANK0 ] unsigned short 
 29175 ;; Auto vars:     Size  Location     Type
 29176 ;;  Index           2   37[BANK0 ] unsigned short 
 29177 ;; Return value:  Size  Location     Type
 29178 ;;                  1    wreg      void 
 29179 ;; Registers used:
 29180 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29181 ;; Tracked objects:
 29182 ;;		On entry : 0/0
 29183 ;;		On exit  : 0/0
 29184 ;;		Unchanged: 0/0
 29185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29186 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29187 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29188 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29189 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29190 ;;Total ram usage:       10 bytes
 29191 ;; Hardware stack levels used:    1
 29192 ;; Hardware stack levels required when called:   11
 29193 ;; This function calls:
 29194 ;;		Nothing
 29195 ;; This function is called by:
 29196 ;;		_ModemEvtParser
 29197 ;;		_GetSmsSm
 29198 ;;		_SendSmsSm
 29199 ;;		_InitGprsNetwork
 29200 ;;		_HttpGetMethod
 29201 ;;		_Mdm_GetSmsData
 29202 ;;		_Mdm_SendSmsData
 29203 ;;		_Eeprom_Write
 29204 ;; This function uses a non-reentrant model
 29205 ;;
 29206                           
 29207                           	psect	text131
 29208  0051C4                     __ptext131:
 29209                           	opt stack 0
 29210  0051C4                     _StringCopy:
 29211                           	opt stack 15
 29212                           
 29213                           ;sf.c: 106: UINT16 Index = 0;
 29214                           
 29215                           ; BSR set to: 0
 29216                           ;incstack = 0
 29217  0051C4  0E00               	movlw	0
 29218  0051C6  0100               	movlb	0	; () banked
 29219  0051C8  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 29220  0051CA  0E00               	movlw	0
 29221  0051CC  6F85               	movwf	StringCopy@Index& (0+255),b
 29222                           
 29223                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 29224  0051CE  0E00               	movlw	0
 29225  0051D0  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 29226  0051D2  0E00               	movlw	0
 29227  0051D4  6F85               	movwf	StringCopy@Index& (0+255),b
 29228  0051D6  D020               	goto	l2218
 29229  0051D8                     
 29230                           ; BSR set to: 0
 29231                           ;sf.c: 110: {
 29232                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 29233                           
 29234                           ; BSR set to: 0
 29235  0051D8  5185               	movf	StringCopy@Index& (0+255),w,b
 29236  0051DA  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 29237  0051DC  6F83               	movwf	??_StringCopy& (0+255),b
 29238  0051DE  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 29239  0051E0  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 29240  0051E2  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 29241  0051E4  C083  FFF6         	movff	??_StringCopy,tblptrl
 29242  0051E8  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 29243  0051EC  6AF8               	clrf	tblptru,c
 29244  0051EE  5185               	movf	StringCopy@Index& (0+255),w,b
 29245  0051F0  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 29246  0051F2  6ED9               	movwf	fsr2l,c
 29247  0051F4  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 29248  0051F6  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 29249  0051F8  6EDA               	movwf	fsr2h,c
 29250  0051FA  0E0E               	movlw	(high __ramtop+-1)
 29251  0051FC  64F7               	cpfsgt	tblptrh,c
 29252  0051FE  D003               	bra	u12747
 29253  005200  0008               	tblrd		*
 29254  005202  50F5               	movf	tablat,w,c
 29255  005204  D005               	bra	u12740
 29256  005206                     u12747:
 29257  005206  CFF6 FFE9          	movff	tblptrl,fsr0l
 29258  00520A  CFF7 FFEA          	movff	tblptrh,fsr0h
 29259  00520E  50EF               	movf	indf0,w,c
 29260  005210                     u12740:
 29261  005210  6EDF               	movwf	indf2,c
 29262  005212  0100               	movlb	0	; () banked
 29263  005214  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 29264  005216  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 29265  005218                     l2218:
 29266                           
 29267                           ; BSR set to: 0
 29268                           
 29269                           ; BSR set to: 0
 29270  005218  5181               	movf	StringCopy@Len& (0+255),w,b
 29271  00521A  5D85               	subwf	StringCopy@Index& (0+255),w,b
 29272  00521C  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 29273  00521E  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 29274  005220  B0D8               	btfsc	status,0,c
 29275  005222  0012               	return	
 29276  005224  D7D9               	goto	l2219
 29277  005226                     __end_of_StringCopy:
 29278                           	opt stack 0
 29279                           tosu	equ	0xFFF
 29280                           tosh	equ	0xFFE
 29281                           tosl	equ	0xFFD
 29282                           pclath	equ	0xFFA
 29283                           tblptru	equ	0xFF8
 29284                           tblptrh	equ	0xFF7
 29285                           tblptrl	equ	0xFF6
 29286                           tablat	equ	0xFF5
 29287                           prodh	equ	0xFF4
 29288                           prodl	equ	0xFF3
 29289                           intcon	equ	0xFF2
 29290                           intcon2	equ	0xFF1
 29291                           intcon3	equ	0xFF0
 29292                           indf0	equ	0xFEF
 29293                           postinc0	equ	0xFEE
 29294                           plusw0	equ	0xFEB
 29295                           fsr0h	equ	0xFEA
 29296                           fsr0l	equ	0xFE9
 29297                           wreg	equ	0xFE8
 29298                           indf1	equ	0xFE7
 29299                           postinc1	equ	0xFE6
 29300                           postdec1	equ	0xFE5
 29301                           plusw1	equ	0xFE3
 29302                           fsr1h	equ	0xFE2
 29303                           fsr1l	equ	0xFE1
 29304                           indf2	equ	0xFDF
 29305                           postinc2	equ	0xFDE
 29306                           postdec2	equ	0xFDD
 29307                           plusw2	equ	0xFDB
 29308                           fsr2h	equ	0xFDA
 29309                           fsr2l	equ	0xFD9
 29310                           status	equ	0xFD8
 29311                           
 29312 ;; *************** function _OsTmr_StartTimer *****************
 29313 ;; Defined at:
 29314 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29315 ;; Parameters:    Size  Location     Type
 29316 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 29317 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 29318 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 29319 ;;  Timeout         4   35[BANK0 ] unsigned long 
 29320 ;; Auto vars:     Size  Location     Type
 29321 ;;		None
 29322 ;; Return value:  Size  Location     Type
 29323 ;;                  1    wreg      void 
 29324 ;; Registers used:
 29325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29326 ;; Tracked objects:
 29327 ;;		On entry : 0/0
 29328 ;;		On exit  : 0/0
 29329 ;;		Unchanged: 0/0
 29330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29331 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29334 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29335 ;;Total ram usage:        6 bytes
 29336 ;; Hardware stack levels used:    1
 29337 ;; Hardware stack levels required when called:   12
 29338 ;; This function calls:
 29339 ;;		_GetOsTickCounter
 29340 ;; This function is called by:
 29341 ;;		_OsTmr_Wait
 29342 ;;		_CheckModem
 29343 ;;		_SendSmsSm
 29344 ;;		_InitGprsNetwork
 29345 ;;		_HttpGetMethod
 29346 ;;		_I2cSlv_QueryI2cData
 29347 ;;		_Term_MainSm
 29348 ;; This function uses a non-reentrant model
 29349 ;;
 29350                           
 29351                           	psect	text132
 29352  005284                     __ptext132:
 29353                           	opt stack 0
 29354  005284                     _OsTmr_StartTimer:
 29355                           	opt stack 12
 29356                           
 29357                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 29358                           
 29359                           ; BSR set to: 0
 29360                           ;incstack = 0
 29361  005284  0100               	movlb	0	; () banked
 29362  005286  EE20 F001          	lfsr	2,1
 29363  00528A  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29364  00528C  26D9               	addwf	fsr2l,f,c
 29365  00528E  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29366  005290  22DA               	addwfc	fsr2h,f,c
 29367  005292  0E00               	movlw	0
 29368  005294  6EDF               	movwf	indf2,c
 29369                           
 29370                           ; BSR set to: 0
 29371                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 29372  005296  ECB2  F031         	call	_GetOsTickCounter	;wreg free
 29373  00529A  0100               	movlb	0	; () banked
 29374  00529C  EE20 F002          	lfsr	2,2
 29375  0052A0  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29376  0052A2  26D9               	addwf	fsr2l,f,c
 29377  0052A4  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29378  0052A6  22DA               	addwfc	fsr2h,f,c
 29379  0052A8  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 29380  0052AC  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 29381  0052B0  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 29382  0052B4  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 29383                           
 29384                           ; BSR set to: 0
 29385                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 29386  0052B8  EE20 F006          	lfsr	2,6
 29387  0052BC  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 29388  0052BE  26D9               	addwf	fsr2l,f,c
 29389  0052C0  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 29390  0052C2  22DA               	addwfc	fsr2h,f,c
 29391  0052C4  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 29392  0052C8  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 29393  0052CC  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 29394  0052D0  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 29395                           
 29396                           ; BSR set to: 0
 29397                           ;os_timers.c: 127: Timer->Enabled = 1u;
 29398  0052D4  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 29399  0052D8  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 29400  0052DC  0E01               	movlw	1
 29401  0052DE  6EDF               	movwf	indf2,c
 29402                           
 29403                           ; BSR set to: 0
 29404  0052E0  0012               	return		;funcret
 29405  0052E2                     __end_of_OsTmr_StartTimer:
 29406                           	opt stack 0
 29407                           tosu	equ	0xFFF
 29408                           tosh	equ	0xFFE
 29409                           tosl	equ	0xFFD
 29410                           pclath	equ	0xFFA
 29411                           tblptru	equ	0xFF8
 29412                           tblptrh	equ	0xFF7
 29413                           tblptrl	equ	0xFF6
 29414                           tablat	equ	0xFF5
 29415                           prodh	equ	0xFF4
 29416                           prodl	equ	0xFF3
 29417                           intcon	equ	0xFF2
 29418                           intcon2	equ	0xFF1
 29419                           intcon3	equ	0xFF0
 29420                           indf0	equ	0xFEF
 29421                           postinc0	equ	0xFEE
 29422                           plusw0	equ	0xFEB
 29423                           fsr0h	equ	0xFEA
 29424                           fsr0l	equ	0xFE9
 29425                           wreg	equ	0xFE8
 29426                           indf1	equ	0xFE7
 29427                           postinc1	equ	0xFE6
 29428                           postdec1	equ	0xFE5
 29429                           plusw1	equ	0xFE3
 29430                           fsr1h	equ	0xFE2
 29431                           fsr1l	equ	0xFE1
 29432                           indf2	equ	0xFDF
 29433                           postinc2	equ	0xFDE
 29434                           postdec2	equ	0xFDD
 29435                           plusw2	equ	0xFDB
 29436                           fsr2h	equ	0xFDA
 29437                           fsr2l	equ	0xFD9
 29438                           status	equ	0xFD8
 29439                           
 29440 ;; *************** function _OsTmr_GetTimerStatus *****************
 29441 ;; Defined at:
 29442 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29443 ;; Parameters:    Size  Location     Type
 29444 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 29445 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 29446 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 29447 ;; Auto vars:     Size  Location     Type
 29448 ;;		None
 29449 ;; Return value:  Size  Location     Type
 29450 ;;                  1    wreg      enum E7740
 29451 ;; Registers used:
 29452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29453 ;; Tracked objects:
 29454 ;;		On entry : 0/0
 29455 ;;		On exit  : 0/0
 29456 ;;		Unchanged: 0/0
 29457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29460 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29461 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29462 ;;Total ram usage:        6 bytes
 29463 ;; Hardware stack levels used:    1
 29464 ;; Hardware stack levels required when called:   13
 29465 ;; This function calls:
 29466 ;;		_GetElapsedTime
 29467 ;; This function is called by:
 29468 ;;		_OsTmr_Wait
 29469 ;;		_CheckModem
 29470 ;;		_SendSmsSm
 29471 ;;		_InitGprsNetwork
 29472 ;;		_HttpGetMethod
 29473 ;;		_I2cSlv_QueryI2cData
 29474 ;;		_Term_MainSm
 29475 ;; This function uses a non-reentrant model
 29476 ;;
 29477                           
 29478                           	psect	text133
 29479  004B92                     __ptext133:
 29480                           	opt stack 0
 29481  004B92                     _OsTmr_GetTimerStatus:
 29482                           	opt stack 11
 29483                           
 29484                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 29485                           
 29486                           ; BSR set to: 0
 29487                           ;incstack = 0
 29488  004B92  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 29489  004B96  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 29490  004B9A  04DE               	decf	postinc2,w,c
 29491  004B9C  A4D8               	btfss	status,2,c
 29492  004B9E  D030               	goto	l864
 29493                           
 29494                           ;os_timers.c: 197: {
 29495                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 29496  004BA0  0100               	movlb	0	; () banked
 29497  004BA2  EE20 F006          	lfsr	2,6
 29498  004BA6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29499  004BA8  26D9               	addwf	fsr2l,f,c
 29500  004BAA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29501  004BAC  22DA               	addwfc	fsr2h,f,c
 29502  004BAE  EE10 F002          	lfsr	1,2
 29503  004BB2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29504  004BB4  26E1               	addwf	fsr1l,f,c
 29505  004BB6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29506  004BB8  22E2               	addwfc	fsr1h,f,c
 29507  004BBA  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 29508  004BBE  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 29509  004BC2  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 29510  004BC6  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 29511  004BCA  EC8A  F01E         	call	_GetElapsedTime	;wreg free
 29512  004BCE  50DE               	movf	postinc2,w,c
 29513  004BD0  0100               	movlb	0	; () banked
 29514  004BD2  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 29515  004BD4  50DE               	movf	postinc2,w,c
 29516  004BD6  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 29517  004BD8  50DE               	movf	postinc2,w,c
 29518  004BDA  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 29519  004BDC  50DE               	movf	postinc2,w,c
 29520  004BDE  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 29521  004BE0  A0D8               	btfss	status,0,c
 29522  004BE2  D017               	goto	l867
 29523                           
 29524                           ; BSR set to: 0
 29525                           ;os_timers.c: 200: {
 29526                           ;os_timers.c: 202: Timer->Enabled = 0u;
 29527  004BE4  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 29528  004BE8  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 29529  004BEC  0E00               	movlw	0
 29530  004BEE  6EDF               	movwf	indf2,c
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 29534  004BF0  EE20 F001          	lfsr	2,1
 29535  004BF4  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29536  004BF6  26D9               	addwf	fsr2l,f,c
 29537  004BF8  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29538  004BFA  22DA               	addwfc	fsr2h,f,c
 29539  004BFC  0E01               	movlw	1
 29540  004BFE  D008               	goto	L81
 29541  004C00                     l864:
 29542                           
 29543                           ;os_timers.c: 211: else
 29544                           ;os_timers.c: 212: {
 29545                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 29546                           
 29547                           ; BSR set to: 0
 29548  004C00  0100               	movlb	0	; () banked
 29549  004C02  EE20 F001          	lfsr	2,1
 29550  004C06  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29551  004C08  26D9               	addwf	fsr2l,f,c
 29552  004C0A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29553  004C0C  22DA               	addwfc	fsr2h,f,c
 29554  004C0E  0E02               	movlw	2
 29555  004C10                     L81:
 29556  004C10  6EDF               	movwf	indf2,c
 29557  004C12                     l867:
 29558                           
 29559                           ; BSR set to: 0
 29560                           ;os_timers.c: 215: }
 29561                           ;os_timers.c: 218: return Timer->Status;
 29562  004C12  EE20 F001          	lfsr	2,1
 29563  004C16  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 29564  004C18  26D9               	addwf	fsr2l,f,c
 29565  004C1A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 29566  004C1C  22DA               	addwfc	fsr2h,f,c
 29567  004C1E  50DF               	movf	indf2,w,c
 29568  004C20  0012               	return	
 29569  004C22                     __end_of_OsTmr_GetTimerStatus:
 29570                           	opt stack 0
 29571                           tosu	equ	0xFFF
 29572                           tosh	equ	0xFFE
 29573                           tosl	equ	0xFFD
 29574                           pclath	equ	0xFFA
 29575                           tblptru	equ	0xFF8
 29576                           tblptrh	equ	0xFF7
 29577                           tblptrl	equ	0xFF6
 29578                           tablat	equ	0xFF5
 29579                           prodh	equ	0xFF4
 29580                           prodl	equ	0xFF3
 29581                           intcon	equ	0xFF2
 29582                           intcon2	equ	0xFF1
 29583                           intcon3	equ	0xFF0
 29584                           indf0	equ	0xFEF
 29585                           postinc0	equ	0xFEE
 29586                           plusw0	equ	0xFEB
 29587                           fsr0h	equ	0xFEA
 29588                           fsr0l	equ	0xFE9
 29589                           wreg	equ	0xFE8
 29590                           indf1	equ	0xFE7
 29591                           postinc1	equ	0xFE6
 29592                           postdec1	equ	0xFE5
 29593                           plusw1	equ	0xFE3
 29594                           fsr1h	equ	0xFE2
 29595                           fsr1l	equ	0xFE1
 29596                           indf2	equ	0xFDF
 29597                           postinc2	equ	0xFDE
 29598                           postdec2	equ	0xFDD
 29599                           plusw2	equ	0xFDB
 29600                           fsr2h	equ	0xFDA
 29601                           fsr2l	equ	0xFD9
 29602                           status	equ	0xFD8
 29603                           
 29604 ;; *************** function _GetElapsedTime *****************
 29605 ;; Defined at:
 29606 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29607 ;; Parameters:    Size  Location     Type
 29608 ;;  StartTime       4   33[BANK0 ] unsigned long 
 29609 ;; Auto vars:     Size  Location     Type
 29610 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 29611 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 29612 ;; Return value:  Size  Location     Type
 29613 ;;                  4   33[BANK0 ] unsigned long 
 29614 ;; Registers used:
 29615 ;;		wreg, status,2, status,0, cstack
 29616 ;; Tracked objects:
 29617 ;;		On entry : 0/0
 29618 ;;		On exit  : 0/0
 29619 ;;		Unchanged: 0/0
 29620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29622 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29623 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29624 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29625 ;;Total ram usage:       20 bytes
 29626 ;; Hardware stack levels used:    1
 29627 ;; Hardware stack levels required when called:   12
 29628 ;; This function calls:
 29629 ;;		_GetOsTickCounter
 29630 ;; This function is called by:
 29631 ;;		_OsTmr_GetTimerStatus
 29632 ;;		_OsTmr_GetRemainingTime
 29633 ;; This function uses a non-reentrant model
 29634 ;;
 29635                           
 29636                           	psect	text134
 29637  003D14                     __ptext134:
 29638                           	opt stack 0
 29639  003D14                     _GetElapsedTime:
 29640                           	opt stack 11
 29641                           
 29642                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 29643                           ;os_timers.c: 87: UINT32 TimeValue;
 29644                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 29645                           
 29646                           ; BSR set to: 0
 29647                           ;incstack = 0
 29648  003D14  ECB2  F031         	call	_GetOsTickCounter	;wreg free
 29649  003D18  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 29650  003D1C  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 29651  003D20  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 29652  003D24  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 29653                           
 29654                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 29655  003D28  0100               	movlb	0	; () banked
 29656  003D2A  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 29657  003D2C  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29658  003D2E  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 29659  003D30  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29660  003D32  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 29661  003D34  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29662  003D36  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 29663  003D38  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29664  003D3A  A0D8               	btfss	status,0,c
 29665  003D3C  D01D               	goto	l844
 29666                           
 29667                           ; BSR set to: 0
 29668                           ;os_timers.c: 94: {
 29669                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 29670  003D3E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29671  003D42  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29672  003D46  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29673  003D4A  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29674  003D4E  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29675  003D50  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29676  003D52  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29677  003D54  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29678  003D56  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29679  003D58  0E00               	movlw	0
 29680  003D5A  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29681  003D5C  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29682  003D5E  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29683  003D60  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29684  003D62  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29685  003D64  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29686  003D66  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29687  003D68  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29688  003D6A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29689  003D6C  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29690  003D6E  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29691  003D70  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29692  003D72  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29693  003D74  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29694  003D76  D028               	goto	L52
 29695  003D78                     l844:
 29696                           
 29697                           ; BSR set to: 0
 29698                           ;os_timers.c: 97: else
 29699                           ;os_timers.c: 98: {
 29700                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 29701                           
 29702                           ; BSR set to: 0
 29703  003D78  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29704  003D7C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29705  003D80  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29706  003D84  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29707  003D88  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29708  003D8A  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29709  003D8C  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29710  003D8E  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29711  003D90  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29712  003D92  0E00               	movlw	0
 29713  003D94  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29714  003D96  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29715  003D98  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29716  003D9A  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29717  003D9C  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29718  003D9E  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 29719  003DA0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29720  003DA2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29721  003DA4  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 29722  003DA6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29723  003DA8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29724  003DAA  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 29725  003DAC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29726  003DAE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29727  003DB0  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 29728  003DB2  0EFF               	movlw	255
 29729  003DB4  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 29730  003DB6  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29731  003DB8  0EFF               	movlw	255
 29732  003DBA  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 29733  003DBC  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29734  003DBE  0EFF               	movlw	255
 29735  003DC0  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 29736  003DC2  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29737  003DC4  0EFF               	movlw	255
 29738  003DC6  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 29739  003DC8                     L52:
 29740  003DC8  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 29741                           
 29742                           ; BSR set to: 0
 29743                           ;os_timers.c: 100: }
 29744                           ;os_timers.c: 102: return TimeValue;
 29745                           
 29746                           ; BSR set to: 0
 29747  003DCA  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 29748  003DCE  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 29749  003DD2  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 29750  003DD6  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 29751  003DDA  0012               	return	
 29752  003DDC                     __end_of_GetElapsedTime:
 29753                           	opt stack 0
 29754                           tosu	equ	0xFFF
 29755                           tosh	equ	0xFFE
 29756                           tosl	equ	0xFFD
 29757                           pclath	equ	0xFFA
 29758                           tblptru	equ	0xFF8
 29759                           tblptrh	equ	0xFF7
 29760                           tblptrl	equ	0xFF6
 29761                           tablat	equ	0xFF5
 29762                           prodh	equ	0xFF4
 29763                           prodl	equ	0xFF3
 29764                           intcon	equ	0xFF2
 29765                           intcon2	equ	0xFF1
 29766                           intcon3	equ	0xFF0
 29767                           indf0	equ	0xFEF
 29768                           postinc0	equ	0xFEE
 29769                           plusw0	equ	0xFEB
 29770                           fsr0h	equ	0xFEA
 29771                           fsr0l	equ	0xFE9
 29772                           wreg	equ	0xFE8
 29773                           indf1	equ	0xFE7
 29774                           postinc1	equ	0xFE6
 29775                           postdec1	equ	0xFE5
 29776                           plusw1	equ	0xFE3
 29777                           fsr1h	equ	0xFE2
 29778                           fsr1l	equ	0xFE1
 29779                           indf2	equ	0xFDF
 29780                           postinc2	equ	0xFDE
 29781                           postdec2	equ	0xFDD
 29782                           plusw2	equ	0xFDB
 29783                           fsr2h	equ	0xFDA
 29784                           fsr2l	equ	0xFD9
 29785                           status	equ	0xFD8
 29786                           
 29787 ;; *************** function _GetOsTickCounter *****************
 29788 ;; Defined at:
 29789 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29790 ;; Parameters:    Size  Location     Type
 29791 ;;		None
 29792 ;; Auto vars:     Size  Location     Type
 29793 ;;		None
 29794 ;; Return value:  Size  Location     Type
 29795 ;;                  4   29[BANK0 ] unsigned long 
 29796 ;; Registers used:
 29797 ;;		None
 29798 ;; Tracked objects:
 29799 ;;		On entry : 0/0
 29800 ;;		On exit  : 0/0
 29801 ;;		Unchanged: 0/0
 29802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29806 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29807 ;;Total ram usage:        4 bytes
 29808 ;; Hardware stack levels used:    1
 29809 ;; Hardware stack levels required when called:   11
 29810 ;; This function calls:
 29811 ;;		Nothing
 29812 ;; This function is called by:
 29813 ;;		_GetElapsedTime
 29814 ;;		_OsTmr_StartTimer
 29815 ;;		_OsTmr_GetElapsedTime
 29816 ;; This function uses a non-reentrant model
 29817 ;;
 29818                           
 29819                           	psect	text135
 29820  006364                     __ptext135:
 29821                           	opt stack 0
 29822  006364                     _GetOsTickCounter:
 29823                           	opt stack 12
 29824                           
 29825                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 29826                           
 29827                           ; BSR set to: 0
 29828                           ;incstack = 0
 29829  006364  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 29830  006368  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 29831  00636C  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 29832  006370  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 29833  006374  0012               	return		;funcret
 29834  006376                     __end_of_GetOsTickCounter:
 29835                           	opt stack 0
 29836                           tosu	equ	0xFFF
 29837                           tosh	equ	0xFFE
 29838                           tosl	equ	0xFFD
 29839                           pclath	equ	0xFFA
 29840                           tblptru	equ	0xFF8
 29841                           tblptrh	equ	0xFF7
 29842                           tblptrl	equ	0xFF6
 29843                           tablat	equ	0xFF5
 29844                           prodh	equ	0xFF4
 29845                           prodl	equ	0xFF3
 29846                           intcon	equ	0xFF2
 29847                           intcon2	equ	0xFF1
 29848                           intcon3	equ	0xFF0
 29849                           indf0	equ	0xFEF
 29850                           postinc0	equ	0xFEE
 29851                           plusw0	equ	0xFEB
 29852                           fsr0h	equ	0xFEA
 29853                           fsr0l	equ	0xFE9
 29854                           wreg	equ	0xFE8
 29855                           indf1	equ	0xFE7
 29856                           postinc1	equ	0xFE6
 29857                           postdec1	equ	0xFE5
 29858                           plusw1	equ	0xFE3
 29859                           fsr1h	equ	0xFE2
 29860                           fsr1l	equ	0xFE1
 29861                           indf2	equ	0xFDF
 29862                           postinc2	equ	0xFDE
 29863                           postdec2	equ	0xFDD
 29864                           plusw2	equ	0xFDB
 29865                           fsr2h	equ	0xFDA
 29866                           fsr2l	equ	0xFD9
 29867                           status	equ	0xFD8
 29868                           
 29869 ;; *************** function _ClearBuffer *****************
 29870 ;; Defined at:
 29871 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29872 ;; Parameters:    Size  Location     Type
 29873 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 29874 ;;		 -> MyApp_Task@phone(14), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessa
      +ge(50), 
 29875 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 29876 ;;  Len             2   31[BANK0 ] unsigned short 
 29877 ;; Auto vars:     Size  Location     Type
 29878 ;;  Index           2   33[BANK0 ] unsigned short 
 29879 ;; Return value:  Size  Location     Type
 29880 ;;                  1    wreg      void 
 29881 ;; Registers used:
 29882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29883 ;; Tracked objects:
 29884 ;;		On entry : 0/0
 29885 ;;		On exit  : 0/0
 29886 ;;		Unchanged: 0/0
 29887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29888 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29889 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29891 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29892 ;;Total ram usage:        6 bytes
 29893 ;; Hardware stack levels used:    1
 29894 ;; Hardware stack levels required when called:   11
 29895 ;; This function calls:
 29896 ;;		Nothing
 29897 ;; This function is called by:
 29898 ;;		_GetSmsSm
 29899 ;;		_GetCallerNumber
 29900 ;;		_InitGprsNetwork
 29901 ;;		_HttpGetMethod
 29902 ;;		_MyApp_Task
 29903 ;;		_GsmGprsTerminal
 29904 ;; This function uses a non-reentrant model
 29905 ;;
 29906                           
 29907                           	psect	text136
 29908  005D78                     __ptext136:
 29909                           	opt stack 0
 29910  005D78                     _ClearBuffer:
 29911                           	opt stack 15
 29912                           
 29913                           ;sf.c: 126: UINT16 Index = 0;
 29914                           
 29915                           ;incstack = 0
 29916  005D78  0E00               	movlw	0
 29917  005D7A  0100               	movlb	0	; () banked
 29918  005D7C  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29919  005D7E  0E00               	movlw	0
 29920  005D80  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29921                           
 29922                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 29923  005D82  0E00               	movlw	0
 29924  005D84  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29925  005D86  0E00               	movlw	0
 29926  005D88  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29927  005D8A  D00A               	goto	l2224
 29928  005D8C                     
 29929                           ; BSR set to: 0
 29930                           ;sf.c: 130: {
 29931                           ;sf.c: 131: *(Buffer + Index) = 0;
 29932                           
 29933                           ; BSR set to: 0
 29934  005D8C  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29935  005D8E  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 29936  005D90  6ED9               	movwf	fsr2l,c
 29937  005D92  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29938  005D94  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 29939  005D96  6EDA               	movwf	fsr2h,c
 29940  005D98  0E00               	movlw	0
 29941  005D9A  6EDF               	movwf	indf2,c
 29942                           
 29943                           ; BSR set to: 0
 29944  005D9C  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 29945  005D9E  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 29946  005DA0                     l2224:
 29947                           
 29948                           ; BSR set to: 0
 29949                           
 29950                           ; BSR set to: 0
 29951  005DA0  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29952  005DA2  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 29953  005DA4  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29954  005DA6  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 29955  005DA8  A0D8               	btfss	status,0,c
 29956  005DAA  0012               	return	
 29957  005DAC  D7EF               	goto	l2225
 29958  005DAE                     __end_of_ClearBuffer:
 29959                           	opt stack 0
 29960                           tosu	equ	0xFFF
 29961                           tosh	equ	0xFFE
 29962                           tosl	equ	0xFFD
 29963                           pclath	equ	0xFFA
 29964                           tblptru	equ	0xFF8
 29965                           tblptrh	equ	0xFF7
 29966                           tblptrl	equ	0xFF6
 29967                           tablat	equ	0xFF5
 29968                           prodh	equ	0xFF4
 29969                           prodl	equ	0xFF3
 29970                           intcon	equ	0xFF2
 29971                           intcon2	equ	0xFF1
 29972                           intcon3	equ	0xFF0
 29973                           indf0	equ	0xFEF
 29974                           postinc0	equ	0xFEE
 29975                           plusw0	equ	0xFEB
 29976                           fsr0h	equ	0xFEA
 29977                           fsr0l	equ	0xFE9
 29978                           wreg	equ	0xFE8
 29979                           indf1	equ	0xFE7
 29980                           postinc1	equ	0xFE6
 29981                           postdec1	equ	0xFE5
 29982                           plusw1	equ	0xFE3
 29983                           fsr1h	equ	0xFE2
 29984                           fsr1l	equ	0xFE1
 29985                           indf2	equ	0xFDF
 29986                           postinc2	equ	0xFDE
 29987                           postdec2	equ	0xFDD
 29988                           plusw2	equ	0xFDB
 29989                           fsr2h	equ	0xFDA
 29990                           fsr2l	equ	0xFD9
 29991                           status	equ	0xFD8
 29992                           
 29993 ;; *************** function _LedStateMachine *****************
 29994 ;; Defined at:
 29995 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29996 ;; Parameters:    Size  Location     Type
 29997 ;;  Led             1    wreg     unsigned char 
 29998 ;;  LedSts          2   47[BANK0 ] PTR enum E8951
 29999 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 30000 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 30001 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 30002 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 30003 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 30004 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 30005 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 30006 ;; Auto vars:     Size  Location     Type
 30007 ;;  Led             1   57[BANK0 ] unsigned char 
 30008 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 30009 ;; Return value:  Size  Location     Type
 30010 ;;                  1    wreg      unsigned char 
 30011 ;; Registers used:
 30012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30013 ;; Tracked objects:
 30014 ;;		On entry : 0/0
 30015 ;;		On exit  : 0/0
 30016 ;;		Unchanged: 0/0
 30017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30018 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30019 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30020 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30021 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30022 ;;Total ram usage:       11 bytes
 30023 ;; Hardware stack levels used:    1
 30024 ;; Hardware stack levels required when called:   13
 30025 ;; This function calls:
 30026 ;;		_LedBlinkStateMachine
 30027 ;;		_LedPulseStateMachine
 30028 ;;		_Led_SetLedStatus
 30029 ;; This function is called by:
 30030 ;;		_Led_MainTask
 30031 ;; This function uses a non-reentrant model
 30032 ;;
 30033                           
 30034                           	psect	text137
 30035  004448                     __ptext137:
 30036                           	opt stack 0
 30037  004448                     _LedStateMachine:
 30038                           	opt stack 14
 30039                           
 30040                           ; BSR set to: 0
 30041                           ;incstack = 0
 30042                           ;LedStateMachine@Led stored from wreg
 30043  004448  0100               	movlb	0	; () banked
 30044  00444A  6F99               	movwf	LedStateMachine@Led& (0+255),b
 30045                           
 30046                           ;led.c: 238: UINT8 LedOutSts = 0u;
 30047  00444C  0E00               	movlw	0
 30048  00444E  0100               	movlb	0	; () banked
 30049  004450  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30050                           
 30051                           ;led.c: 241: switch (*LedSts)
 30052  004452  D037               	goto	l2083
 30053  004454                     
 30054                           ; BSR set to: 0
 30055                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 30056                           
 30057                           ; BSR set to: 0
 30058  004454  0E00               	movlw	0
 30059  004456  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30060                           
 30061                           ; BSR set to: 0
 30062                           ;led.c: 246: *LedOut = ((UINT8)(0));
 30063  004458  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 30064  00445C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 30065  004460  0E00               	movlw	0
 30066  004462  D007               	goto	L53
 30067  004464                     
 30068                           ; BSR set to: 0
 30069                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 30070                           
 30071                           ; BSR set to: 0
 30072  004464  0E01               	movlw	1
 30073  004466  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30074                           
 30075                           ; BSR set to: 0
 30076                           ;led.c: 252: *LedOut = ((UINT8)(1));
 30077  004468  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 30078  00446C  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 30079  004470  0E01               	movlw	1
 30080  004472                     L53:
 30081  004472  6EDF               	movwf	indf2,c
 30082                           
 30083                           ;led.c: 253: break;
 30084  004474  D03A               	goto	l2085
 30085  004476                     
 30086                           ; BSR set to: 0
 30087                           ;led.c: 257: if (*LedOut == 1)
 30088                           
 30089                           ; BSR set to: 0
 30090  004476  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 30091  00447A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 30092  00447E  04DE               	decf	postinc2,w,c
 30093  004480  A4D8               	btfss	status,2,c
 30094  004482  D006               	goto	l2088
 30095                           
 30096                           ; BSR set to: 0
 30097                           ;led.c: 258: {
 30098                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 30099  004484  0E00               	movlw	0
 30100  004486  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 30101  004488  5199               	movf	LedStateMachine@Led& (0+255),w,b
 30102  00448A  EC6B  F02F         	call	_Led_SetLedStatus
 30103                           
 30104                           ;led.c: 261: }
 30105  00448E  D02D               	goto	l2085
 30106  004490                     l2088:
 30107                           
 30108                           ;led.c: 262: else
 30109                           ;led.c: 263: {
 30110                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 30111  004490  0E01               	movlw	1
 30112  004492  0100               	movlb	0	; () banked
 30113  004494  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 30114  004496  5199               	movf	LedStateMachine@Led& (0+255),w,b
 30115  004498  EC6B  F02F         	call	_Led_SetLedStatus
 30116                           
 30117                           ;led.c: 266: }
 30118                           ;led.c: 267: break;
 30119  00449C  D026               	goto	l2085
 30120  00449E                     
 30121                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 30122  00449E  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 30123  0044A2  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 30124  0044A6  ECBF  F012         	call	_LedBlinkStateMachine	;wreg free
 30125  0044AA  D008               	goto	L54
 30126  0044AC                     
 30127                           ; BSR set to: 0
 30128                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 30129                           
 30130                           ; BSR set to: 0
 30131  0044AC  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 30132  0044B0  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 30133  0044B4  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 30134  0044B8  EC1A  F019         	call	_LedPulseStateMachine	;wreg free
 30135  0044BC                     L54:
 30136  0044BC  0100               	movlb	0	; () banked
 30137  0044BE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 30138                           
 30139                           ; BSR set to: 0
 30140                           ;led.c: 281: }
 30141                           
 30142                           ; BSR set to: 0
 30143                           ;led.c: 280: break;
 30144                           
 30145                           ;led.c: 279: default:
 30146                           
 30147                           ;led.c: 277: break;
 30148  0044C0  D014               	goto	l2085
 30149  0044C2                     l2083:
 30150                           
 30151                           ; BSR set to: 0
 30152                           
 30153                           ; BSR set to: 0
 30154  0044C2  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 30155  0044C6  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 30156  0044CA  50DF               	movf	indf2,w,c
 30157                           
 30158                           ; Switch size 1, requested type "space"
 30159                           ; Number of cases is 5, Range of values is 0 to 4
 30160                           ; switch strategies available:
 30161                           ; Name         Instructions Cycles
 30162                           ; simple_byte           16     9 (average)
 30163                           ;	Chosen strategy is simple_byte
 30164  0044CC  0A00               	xorlw	0	; case 0
 30165  0044CE  B4D8               	btfsc	status,2,c
 30166  0044D0  D7C1               	goto	l2084
 30167  0044D2  0A01               	xorlw	1	; case 1
 30168  0044D4  B4D8               	btfsc	status,2,c
 30169  0044D6  D7C6               	goto	l2086
 30170  0044D8  0A03               	xorlw	3	; case 2
 30171  0044DA  B4D8               	btfsc	status,2,c
 30172  0044DC  D7CC               	goto	l2087
 30173  0044DE  0A01               	xorlw	1	; case 3
 30174  0044E0  B4D8               	btfsc	status,2,c
 30175  0044E2  D7DD               	goto	l2090
 30176  0044E4  0A07               	xorlw	7	; case 4
 30177  0044E6  B4D8               	btfsc	status,2,c
 30178  0044E8  D7E1               	goto	l2091
 30179  0044EA                     l2085:
 30180                           
 30181                           ;led.c: 283: return LedOutSts;
 30182                           
 30183                           ; BSR set to: 0
 30184  0044EA  0100               	movlb	0	; () banked
 30185  0044EC  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 30186  0044EE  0012               	return	
 30187  0044F0                     __end_of_LedStateMachine:
 30188                           	opt stack 0
 30189                           tosu	equ	0xFFF
 30190                           tosh	equ	0xFFE
 30191                           tosl	equ	0xFFD
 30192                           pclath	equ	0xFFA
 30193                           tblptru	equ	0xFF8
 30194                           tblptrh	equ	0xFF7
 30195                           tblptrl	equ	0xFF6
 30196                           tablat	equ	0xFF5
 30197                           prodh	equ	0xFF4
 30198                           prodl	equ	0xFF3
 30199                           intcon	equ	0xFF2
 30200                           intcon2	equ	0xFF1
 30201                           intcon3	equ	0xFF0
 30202                           indf0	equ	0xFEF
 30203                           postinc0	equ	0xFEE
 30204                           plusw0	equ	0xFEB
 30205                           fsr0h	equ	0xFEA
 30206                           fsr0l	equ	0xFE9
 30207                           wreg	equ	0xFE8
 30208                           indf1	equ	0xFE7
 30209                           postinc1	equ	0xFE6
 30210                           postdec1	equ	0xFE5
 30211                           plusw1	equ	0xFE3
 30212                           fsr1h	equ	0xFE2
 30213                           fsr1l	equ	0xFE1
 30214                           indf2	equ	0xFDF
 30215                           postinc2	equ	0xFDE
 30216                           postdec2	equ	0xFDD
 30217                           plusw2	equ	0xFDB
 30218                           fsr2h	equ	0xFDA
 30219                           fsr2l	equ	0xFD9
 30220                           status	equ	0xFD8
 30221                           
 30222 ;; *************** function _LedPulseStateMachine *****************
 30223 ;; Defined at:
 30224 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30225 ;; Parameters:    Size  Location     Type
 30226 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 30227 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 30228 ;;  Led             1   44[BANK0 ] unsigned char 
 30229 ;; Auto vars:     Size  Location     Type
 30230 ;;		None
 30231 ;; Return value:  Size  Location     Type
 30232 ;;                  1    wreg      unsigned char 
 30233 ;; Registers used:
 30234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30235 ;; Tracked objects:
 30236 ;;		On entry : 0/0
 30237 ;;		On exit  : 0/0
 30238 ;;		Unchanged: 0/0
 30239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30240 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30242 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30243 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30244 ;;Total ram usage:        5 bytes
 30245 ;; Hardware stack levels used:    1
 30246 ;; Hardware stack levels required when called:   12
 30247 ;; This function calls:
 30248 ;;		_Led_SetLedStatus
 30249 ;;		___lwdiv
 30250 ;; This function is called by:
 30251 ;;		_LedStateMachine
 30252 ;; This function uses a non-reentrant model
 30253 ;;
 30254                           
 30255                           	psect	text138
 30256  003234                     __ptext138:
 30257                           	opt stack 0
 30258  003234                     _LedPulseStateMachine:
 30259                           	opt stack 14
 30260                           
 30261                           ;led.c: 185: switch (LedPulse->LedPulseState)
 30262                           
 30263                           ; BSR set to: 0
 30264                           ;incstack = 0
 30265  003234  D05C               	goto	l2073
 30266  003236                     
 30267                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 30268  003236  0100               	movlb	0	; () banked
 30269  003238  EE20 F001          	lfsr	2,1
 30270  00323C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30271  00323E  26D9               	addwf	fsr2l,f,c
 30272  003240  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30273  003242  22DA               	addwfc	fsr2h,f,c
 30274  003244  0E01               	movlw	1
 30275  003246  6EDF               	movwf	indf2,c
 30276                           
 30277                           ; BSR set to: 0
 30278                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 30279  003248  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30280  00324C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30281  003250  0E01               	movlw	1
 30282  003252  D036               	goto	L55
 30283  003254                     
 30284                           ;led.c: 196: LedPulse->LedPulseCounter++;
 30285                           
 30286                           ; BSR set to: 0
 30287  003254  0100               	movlb	0	; () banked
 30288  003256  EE20 F002          	lfsr	2,2
 30289  00325A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30290  00325C  26D9               	addwf	fsr2l,f,c
 30291  00325E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30292  003260  22DA               	addwfc	fsr2h,f,c
 30293  003262  2ADE               	incf	postinc2,f,c
 30294  003264  0E00               	movlw	0
 30295  003266  22DD               	addwfc	postdec2,f,c
 30296                           
 30297                           ; BSR set to: 0
 30298                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 30299  003268  EE20 F004          	lfsr	2,4
 30300  00326C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30301  00326E  26D9               	addwf	fsr2l,f,c
 30302  003270  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30303  003272  22DA               	addwfc	fsr2h,f,c
 30304  003274  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30305  003278  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30306  00327C  0E00               	movlw	0
 30307  00327E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30308  003280  0E32               	movlw	50
 30309  003282  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30310  003284  ECF7  F02A         	call	___lwdiv	;wreg free
 30311  003288  0100               	movlb	0	; () banked
 30312  00328A  EE20 F002          	lfsr	2,2
 30313  00328E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30314  003290  26D9               	addwf	fsr2l,f,c
 30315  003292  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30316  003294  22DA               	addwfc	fsr2h,f,c
 30317  003296  5183               	movf	?___lwdiv& (0+255),w,b
 30318  003298  5CDE               	subwf	postinc2,w,c
 30319  00329A  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30320  00329C  58DE               	subwfb	postinc2,w,c
 30321  00329E  A0D8               	btfss	status,0,c
 30322  0032A0  D034               	goto	l2075
 30323                           
 30324                           ; BSR set to: 0
 30325                           ;led.c: 199: {
 30326                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 30327  0032A2  EE20 F002          	lfsr	2,2
 30328  0032A6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30329  0032A8  26D9               	addwf	fsr2l,f,c
 30330  0032AA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30331  0032AC  22DA               	addwfc	fsr2h,f,c
 30332  0032AE  0E00               	movlw	0
 30333  0032B0  6EDE               	movwf	postinc2,c
 30334  0032B2  0E00               	movlw	0
 30335  0032B4  6EDD               	movwf	postdec2,c
 30336                           
 30337                           ; BSR set to: 0
 30338                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 30339  0032B6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30340  0032BA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30341  0032BE  0E02               	movlw	2
 30342  0032C0                     L55:
 30343  0032C0  6EDF               	movwf	indf2,c
 30344                           
 30345                           ; BSR set to: 0
 30346                           ;led.c: 204: }
 30347                           ;led.c: 205: break;
 30348  0032C2  D023               	goto	l2075
 30349  0032C4                     
 30350                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 30351                           
 30352                           ; BSR set to: 0
 30353  0032C4  0100               	movlb	0	; () banked
 30354  0032C6  EE20 F001          	lfsr	2,1
 30355  0032CA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30356  0032CC  26D9               	addwf	fsr2l,f,c
 30357  0032CE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30358  0032D0  22DA               	addwfc	fsr2h,f,c
 30359  0032D2  0E00               	movlw	0
 30360  0032D4  6EDF               	movwf	indf2,c
 30361                           
 30362                           ; BSR set to: 0
 30363                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 30364  0032D6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30365  0032DA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30366  0032DE  0E00               	movlw	0
 30367  0032E0  6EDF               	movwf	indf2,c
 30368                           
 30369                           ; BSR set to: 0
 30370                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 30371  0032E2  0E00               	movlw	0
 30372  0032E4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 30373  0032E6  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 30374  0032E8  EC6B  F02F         	call	_Led_SetLedStatus
 30375                           
 30376                           ;led.c: 218: }
 30377                           
 30378                           ;led.c: 217: break;
 30379                           
 30380                           ;led.c: 216: default:
 30381                           
 30382                           ;led.c: 214: break;
 30383  0032EC  D00E               	goto	l2075
 30384  0032EE                     l2073:
 30385  0032EE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 30386  0032F2  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 30387  0032F6  50DF               	movf	indf2,w,c
 30388                           
 30389                           ; Switch size 1, requested type "space"
 30390                           ; Number of cases is 3, Range of values is 0 to 2
 30391                           ; switch strategies available:
 30392                           ; Name         Instructions Cycles
 30393                           ; simple_byte           10     6 (average)
 30394                           ;	Chosen strategy is simple_byte
 30395  0032F8  0A00               	xorlw	0	; case 0
 30396  0032FA  B4D8               	btfsc	status,2,c
 30397  0032FC  D79C               	goto	l2074
 30398  0032FE  0A01               	xorlw	1	; case 1
 30399  003300  B4D8               	btfsc	status,2,c
 30400  003302  D7A8               	goto	l2076
 30401  003304  0A03               	xorlw	3	; case 2
 30402  003306  B4D8               	btfsc	status,2,c
 30403  003308  D7DD               	goto	l2078
 30404  00330A                     l2075:
 30405                           
 30406                           ;led.c: 221: return (LedPulse->LedOutState);
 30407  00330A  0100               	movlb	0	; () banked
 30408  00330C  EE20 F001          	lfsr	2,1
 30409  003310  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 30410  003312  26D9               	addwf	fsr2l,f,c
 30411  003314  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 30412  003316  22DA               	addwfc	fsr2h,f,c
 30413  003318  50DF               	movf	indf2,w,c
 30414  00331A  0012               	return	
 30415  00331C                     __end_of_LedPulseStateMachine:
 30416                           	opt stack 0
 30417                           tosu	equ	0xFFF
 30418                           tosh	equ	0xFFE
 30419                           tosl	equ	0xFFD
 30420                           pclath	equ	0xFFA
 30421                           tblptru	equ	0xFF8
 30422                           tblptrh	equ	0xFF7
 30423                           tblptrl	equ	0xFF6
 30424                           tablat	equ	0xFF5
 30425                           prodh	equ	0xFF4
 30426                           prodl	equ	0xFF3
 30427                           intcon	equ	0xFF2
 30428                           intcon2	equ	0xFF1
 30429                           intcon3	equ	0xFF0
 30430                           indf0	equ	0xFEF
 30431                           postinc0	equ	0xFEE
 30432                           plusw0	equ	0xFEB
 30433                           fsr0h	equ	0xFEA
 30434                           fsr0l	equ	0xFE9
 30435                           wreg	equ	0xFE8
 30436                           indf1	equ	0xFE7
 30437                           postinc1	equ	0xFE6
 30438                           postdec1	equ	0xFE5
 30439                           plusw1	equ	0xFE3
 30440                           fsr1h	equ	0xFE2
 30441                           fsr1l	equ	0xFE1
 30442                           indf2	equ	0xFDF
 30443                           postinc2	equ	0xFDE
 30444                           postdec2	equ	0xFDD
 30445                           plusw2	equ	0xFDB
 30446                           fsr2h	equ	0xFDA
 30447                           fsr2l	equ	0xFD9
 30448                           status	equ	0xFD8
 30449                           
 30450 ;; *************** function _Led_SetLedStatus *****************
 30451 ;; Defined at:
 30452 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30453 ;; Parameters:    Size  Location     Type
 30454 ;;  Led             1    wreg     unsigned char 
 30455 ;;  LedSts          1   29[BANK0 ] enum E8951
 30456 ;; Auto vars:     Size  Location     Type
 30457 ;;  Led             1   30[BANK0 ] unsigned char 
 30458 ;; Return value:  Size  Location     Type
 30459 ;;                  1    wreg      void 
 30460 ;; Registers used:
 30461 ;;		wreg, status,2, status,0
 30462 ;; Tracked objects:
 30463 ;;		On entry : 0/0
 30464 ;;		On exit  : 0/0
 30465 ;;		Unchanged: 0/0
 30466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30467 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30470 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30471 ;;Total ram usage:        2 bytes
 30472 ;; Hardware stack levels used:    1
 30473 ;; Hardware stack levels required when called:   11
 30474 ;; This function calls:
 30475 ;;		Nothing
 30476 ;; This function is called by:
 30477 ;;		_LedPulseStateMachine
 30478 ;;		_LedStateMachine
 30479 ;;		_blinkForSeconds
 30480 ;;		_initEeprom
 30481 ;; This function uses a non-reentrant model
 30482 ;;
 30483                           
 30484                           	psect	text139
 30485  005ED6                     __ptext139:
 30486                           	opt stack 0
 30487  005ED6                     _Led_SetLedStatus:
 30488                           	opt stack 14
 30489                           
 30490                           ; BSR set to: 0
 30491                           ;incstack = 0
 30492                           ;Led_SetLedStatus@Led stored from wreg
 30493  005ED6  0100               	movlb	0	; () banked
 30494  005ED8  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 30495                           
 30496                           ;led.c: 341: switch (Led)
 30497  005EDA  D009               	goto	l2104
 30498  005EDC                     l2105:
 30499                           
 30500                           ; BSR set to: 0
 30501                           ;led.c: 344: Led1Sts = LedSts;
 30502  005EDC  C07D  F1FC         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 30503                           
 30504                           ;led.c: 345: break;
 30505  005EE0  0012               	return	
 30506  005EE2                     l2107:
 30507                           
 30508                           ; BSR set to: 0
 30509                           ;led.c: 348: Led2Sts = LedSts;
 30510  005EE2  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 30511                           
 30512                           ;led.c: 349: break;
 30513  005EE6  0012               	return	
 30514  005EE8                     l2108:
 30515                           
 30516                           ; BSR set to: 0
 30517                           ;led.c: 352: Led3Sts = LedSts;
 30518  005EE8  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 30519                           
 30520                           ; BSR set to: 0
 30521                           ;led.c: 357: }
 30522                           
 30523                           ; BSR set to: 0
 30524                           ;led.c: 356: break;
 30525                           
 30526                           ;led.c: 355: default:
 30527                           
 30528                           ;led.c: 353: break;
 30529  005EEC  0012               	return	
 30530  005EEE                     l2104:
 30531                           
 30532                           ; BSR set to: 0
 30533  005EEE  0100               	movlb	0	; () banked
 30534  005EF0  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 30535                           
 30536                           ; Switch size 1, requested type "space"
 30537                           ; Number of cases is 3, Range of values is 1 to 3
 30538                           ; switch strategies available:
 30539                           ; Name         Instructions Cycles
 30540                           ; simple_byte           10     6 (average)
 30541                           ;	Chosen strategy is simple_byte
 30542  005EF2  0A01               	xorlw	1	; case 1
 30543  005EF4  B4D8               	btfsc	status,2,c
 30544  005EF6  D7F2               	goto	l2105
 30545  005EF8  0A03               	xorlw	3	; case 2
 30546  005EFA  B4D8               	btfsc	status,2,c
 30547  005EFC  D7F2               	goto	l2107
 30548  005EFE  0A01               	xorlw	1	; case 3
 30549  005F00  A4D8               	btfss	status,2,c
 30550  005F02  0012               	return	
 30551  005F04  D7F1               	goto	l2108
 30552  005F06                     __end_of_Led_SetLedStatus:
 30553                           	opt stack 0
 30554                           tosu	equ	0xFFF
 30555                           tosh	equ	0xFFE
 30556                           tosl	equ	0xFFD
 30557                           pclath	equ	0xFFA
 30558                           tblptru	equ	0xFF8
 30559                           tblptrh	equ	0xFF7
 30560                           tblptrl	equ	0xFF6
 30561                           tablat	equ	0xFF5
 30562                           prodh	equ	0xFF4
 30563                           prodl	equ	0xFF3
 30564                           intcon	equ	0xFF2
 30565                           intcon2	equ	0xFF1
 30566                           intcon3	equ	0xFF0
 30567                           indf0	equ	0xFEF
 30568                           postinc0	equ	0xFEE
 30569                           plusw0	equ	0xFEB
 30570                           fsr0h	equ	0xFEA
 30571                           fsr0l	equ	0xFE9
 30572                           wreg	equ	0xFE8
 30573                           indf1	equ	0xFE7
 30574                           postinc1	equ	0xFE6
 30575                           postdec1	equ	0xFE5
 30576                           plusw1	equ	0xFE3
 30577                           fsr1h	equ	0xFE2
 30578                           fsr1l	equ	0xFE1
 30579                           indf2	equ	0xFDF
 30580                           postinc2	equ	0xFDE
 30581                           postdec2	equ	0xFDD
 30582                           plusw2	equ	0xFDB
 30583                           fsr2h	equ	0xFDA
 30584                           fsr2l	equ	0xFD9
 30585                           status	equ	0xFD8
 30586                           
 30587 ;; *************** function _LedBlinkStateMachine *****************
 30588 ;; Defined at:
 30589 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 30590 ;; Parameters:    Size  Location     Type
 30591 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 30592 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 30593 ;; Auto vars:     Size  Location     Type
 30594 ;;		None
 30595 ;; Return value:  Size  Location     Type
 30596 ;;                  1    wreg      unsigned char 
 30597 ;; Registers used:
 30598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30599 ;; Tracked objects:
 30600 ;;		On entry : 0/0
 30601 ;;		On exit  : 0/0
 30602 ;;		Unchanged: 0/0
 30603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30606 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30607 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30608 ;;Total ram usage:        4 bytes
 30609 ;; Hardware stack levels used:    1
 30610 ;; Hardware stack levels required when called:   12
 30611 ;; This function calls:
 30612 ;;		___lwdiv
 30613 ;; This function is called by:
 30614 ;;		_LedStateMachine
 30615 ;; This function uses a non-reentrant model
 30616 ;;
 30617                           
 30618                           	psect	text140
 30619  00257E                     __ptext140:
 30620                           	opt stack 0
 30621  00257E                     _LedBlinkStateMachine:
 30622                           	opt stack 14
 30623                           
 30624                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 30625                           
 30626                           ; BSR set to: 0
 30627                           ;incstack = 0
 30628  00257E  D08F               	goto	l2060
 30629  002580                     
 30630                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 30631  002580  0100               	movlb	0	; () banked
 30632  002582  EE20 F008          	lfsr	2,8
 30633  002586  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30634  002588  26D9               	addwf	fsr2l,f,c
 30635  00258A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30636  00258C  22DA               	addwfc	fsr2h,f,c
 30637  00258E  EE10 F001          	lfsr	1,1
 30638  002592  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30639  002594  26E1               	addwf	fsr1l,f,c
 30640  002596  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30641  002598  22E2               	addwfc	fsr1h,f,c
 30642  00259A  CFDF FFE7          	movff	indf2,indf1
 30643                           
 30644                           ; BSR set to: 0
 30645                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 30646  00259E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30647  0025A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30648  0025A6  D040               	goto	L56
 30649  0025A8                     
 30650                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 30651                           
 30652                           ; BSR set to: 0
 30653  0025A8  0100               	movlb	0	; () banked
 30654  0025AA  EE20 F002          	lfsr	2,2
 30655  0025AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30656  0025B0  26D9               	addwf	fsr2l,f,c
 30657  0025B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30658  0025B4  22DA               	addwfc	fsr2h,f,c
 30659  0025B6  2ADE               	incf	postinc2,f,c
 30660  0025B8  0E00               	movlw	0
 30661  0025BA  22DD               	addwfc	postdec2,f,c
 30662                           
 30663                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 30664  0025BC  EE20 F001          	lfsr	2,1
 30665  0025C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30666  0025C2  26D9               	addwf	fsr2l,f,c
 30667  0025C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30668  0025C6  22DA               	addwfc	fsr2h,f,c
 30669  0025C8  50DF               	movf	indf2,w,c
 30670  0025CA  A4D8               	btfss	status,2,c
 30671  0025CC  D02F               	goto	l2064
 30672                           
 30673                           ; BSR set to: 0
 30674                           ;led.c: 142: {
 30675                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 30676  0025CE  EE20 F006          	lfsr	2,6
 30677  0025D2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30678  0025D4  26D9               	addwf	fsr2l,f,c
 30679  0025D6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30680  0025D8  22DA               	addwfc	fsr2h,f,c
 30681  0025DA  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30682  0025DE  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30683  0025E2  0E00               	movlw	0
 30684  0025E4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30685  0025E6  0E32               	movlw	50
 30686  0025E8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30687  0025EA  ECF7  F02A         	call	___lwdiv	;wreg free
 30688  0025EE  0100               	movlb	0	; () banked
 30689  0025F0  EE20 F002          	lfsr	2,2
 30690  0025F4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30691  0025F6  26D9               	addwf	fsr2l,f,c
 30692  0025F8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30693  0025FA  22DA               	addwfc	fsr2h,f,c
 30694  0025FC  5183               	movf	?___lwdiv& (0+255),w,b
 30695  0025FE  5CDE               	subwf	postinc2,w,c
 30696  002600  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30697  002602  58DE               	subwfb	postinc2,w,c
 30698  002604  A0D8               	btfss	status,0,c
 30699  002606  D056               	goto	l2062
 30700                           
 30701                           ; BSR set to: 0
 30702                           ;led.c: 145: {
 30703                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 30704  002608  EE20 F002          	lfsr	2,2
 30705  00260C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30706  00260E  26D9               	addwf	fsr2l,f,c
 30707  002610  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30708  002612  22DA               	addwfc	fsr2h,f,c
 30709  002614  0E00               	movlw	0
 30710  002616  6EDE               	movwf	postinc2,c
 30711  002618  0E00               	movlw	0
 30712  00261A  6EDD               	movwf	postdec2,c
 30713                           
 30714                           ;led.c: 149: LedBlink->LedOutState = OnState;
 30715  00261C  EE20 F001          	lfsr	2,1
 30716  002620  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30717  002622  26D9               	addwf	fsr2l,f,c
 30718  002624  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30719  002626  22DA               	addwfc	fsr2h,f,c
 30720  002628                     L56:
 30721  002628  0E01               	movlw	1
 30722  00262A  D037               	goto	L57
 30723  00262C                     l2064:
 30724                           
 30725                           ; BSR set to: 0
 30726                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 30727                           
 30728                           ; BSR set to: 0
 30729  00262C  EE20 F001          	lfsr	2,1
 30730  002630  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30731  002632  26D9               	addwf	fsr2l,f,c
 30732  002634  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30733  002636  22DA               	addwfc	fsr2h,f,c
 30734  002638  04DE               	decf	postinc2,w,c
 30735  00263A  A4D8               	btfss	status,2,c
 30736  00263C  D03B               	goto	l2062
 30737                           
 30738                           ; BSR set to: 0
 30739                           ;led.c: 153: {
 30740                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 30741  00263E  EE20 F004          	lfsr	2,4
 30742  002642  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30743  002644  26D9               	addwf	fsr2l,f,c
 30744  002646  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30745  002648  22DA               	addwfc	fsr2h,f,c
 30746  00264A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30747  00264E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30748  002652  0E00               	movlw	0
 30749  002654  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30750  002656  0E32               	movlw	50
 30751  002658  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30752  00265A  ECF7  F02A         	call	___lwdiv	;wreg free
 30753  00265E  0100               	movlb	0	; () banked
 30754  002660  EE20 F002          	lfsr	2,2
 30755  002664  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30756  002666  26D9               	addwf	fsr2l,f,c
 30757  002668  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30758  00266A  22DA               	addwfc	fsr2h,f,c
 30759  00266C  5183               	movf	?___lwdiv& (0+255),w,b
 30760  00266E  5CDE               	subwf	postinc2,w,c
 30761  002670  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30762  002672  58DE               	subwfb	postinc2,w,c
 30763  002674  A0D8               	btfss	status,0,c
 30764  002676  D01E               	goto	l2062
 30765                           
 30766                           ; BSR set to: 0
 30767                           ;led.c: 156: {
 30768                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 30769  002678  EE20 F002          	lfsr	2,2
 30770  00267C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30771  00267E  26D9               	addwf	fsr2l,f,c
 30772  002680  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30773  002682  22DA               	addwfc	fsr2h,f,c
 30774  002684  0E00               	movlw	0
 30775  002686  6EDE               	movwf	postinc2,c
 30776  002688  0E00               	movlw	0
 30777  00268A  6EDD               	movwf	postdec2,c
 30778                           
 30779                           ;led.c: 160: LedBlink->LedOutState = OffState;
 30780  00268C  EE20 F001          	lfsr	2,1
 30781  002690  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30782  002692  26D9               	addwf	fsr2l,f,c
 30783  002694  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30784  002696  22DA               	addwfc	fsr2h,f,c
 30785  002698  0E00               	movlw	0
 30786  00269A                     L57:
 30787  00269A  6EDF               	movwf	indf2,c
 30788                           
 30789                           ; BSR set to: 0
 30790                           ;led.c: 167: }
 30791                           
 30792                           ; BSR set to: 0
 30793                           ;led.c: 166: break;
 30794                           
 30795                           ;led.c: 165: default:
 30796                           
 30797                           ; BSR set to: 0
 30798                           ;led.c: 161: }
 30799                           ;led.c: 162: }
 30800                           ;led.c: 163: break;
 30801                           
 30802                           ; BSR set to: 0
 30803                           
 30804                           ; BSR set to: 0
 30805  00269C  D00B               	goto	l2062
 30806  00269E                     l2060:
 30807                           
 30808                           ; BSR set to: 0
 30809  00269E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30810  0026A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30811  0026A6  50DF               	movf	indf2,w,c
 30812                           
 30813                           ; Switch size 1, requested type "space"
 30814                           ; Number of cases is 2, Range of values is 0 to 1
 30815                           ; switch strategies available:
 30816                           ; Name         Instructions Cycles
 30817                           ; simple_byte            7     4 (average)
 30818                           ;	Chosen strategy is simple_byte
 30819  0026A8  0A00               	xorlw	0	; case 0
 30820  0026AA  B4D8               	btfsc	status,2,c
 30821  0026AC  D769               	goto	l2061
 30822  0026AE  0A01               	xorlw	1	; case 1
 30823  0026B0  B4D8               	btfsc	status,2,c
 30824  0026B2  D77A               	goto	l2063
 30825  0026B4                     l2062:
 30826                           
 30827                           ;led.c: 170: return (LedBlink->LedOutState);
 30828  0026B4  0100               	movlb	0	; () banked
 30829  0026B6  EE20 F001          	lfsr	2,1
 30830  0026BA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30831  0026BC  26D9               	addwf	fsr2l,f,c
 30832  0026BE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30833  0026C0  22DA               	addwfc	fsr2h,f,c
 30834  0026C2  50DF               	movf	indf2,w,c
 30835  0026C4  0012               	return	
 30836  0026C6                     __end_of_LedBlinkStateMachine:
 30837                           	opt stack 0
 30838                           tosu	equ	0xFFF
 30839                           tosh	equ	0xFFE
 30840                           tosl	equ	0xFFD
 30841                           pclath	equ	0xFFA
 30842                           tblptru	equ	0xFF8
 30843                           tblptrh	equ	0xFF7
 30844                           tblptrl	equ	0xFF6
 30845                           tablat	equ	0xFF5
 30846                           prodh	equ	0xFF4
 30847                           prodl	equ	0xFF3
 30848                           intcon	equ	0xFF2
 30849                           intcon2	equ	0xFF1
 30850                           intcon3	equ	0xFF0
 30851                           indf0	equ	0xFEF
 30852                           postinc0	equ	0xFEE
 30853                           plusw0	equ	0xFEB
 30854                           fsr0h	equ	0xFEA
 30855                           fsr0l	equ	0xFE9
 30856                           wreg	equ	0xFE8
 30857                           indf1	equ	0xFE7
 30858                           postinc1	equ	0xFE6
 30859                           postdec1	equ	0xFE5
 30860                           plusw1	equ	0xFE3
 30861                           fsr1h	equ	0xFE2
 30862                           fsr1l	equ	0xFE1
 30863                           indf2	equ	0xFDF
 30864                           postinc2	equ	0xFDE
 30865                           postdec2	equ	0xFDD
 30866                           plusw2	equ	0xFDB
 30867                           fsr2h	equ	0xFDA
 30868                           fsr2l	equ	0xFD9
 30869                           status	equ	0xFD8
 30870                           
 30871 ;; *************** function ___lwdiv *****************
 30872 ;; Defined at:
 30873 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 30874 ;; Parameters:    Size  Location     Type
 30875 ;;  dividend        2   35[BANK0 ] unsigned int 
 30876 ;;  divisor         2   37[BANK0 ] unsigned int 
 30877 ;; Auto vars:     Size  Location     Type
 30878 ;;  quotient        2   40[BANK0 ] unsigned int 
 30879 ;;  counter         1   39[BANK0 ] unsigned char 
 30880 ;; Return value:  Size  Location     Type
 30881 ;;                  2   35[BANK0 ] unsigned int 
 30882 ;; Registers used:
 30883 ;;		wreg, status,2, status,0
 30884 ;; Tracked objects:
 30885 ;;		On entry : 0/0
 30886 ;;		On exit  : 0/0
 30887 ;;		Unchanged: 0/0
 30888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30890 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30892 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30893 ;;Total ram usage:        7 bytes
 30894 ;; Hardware stack levels used:    1
 30895 ;; Hardware stack levels required when called:   11
 30896 ;; This function calls:
 30897 ;;		Nothing
 30898 ;; This function is called by:
 30899 ;;		_LedBlinkStateMachine
 30900 ;;		_LedPulseStateMachine
 30901 ;;		_secondsAppTimer
 30902 ;;		_secondsAppTimer2
 30903 ;;		_utoa
 30904 ;; This function uses a non-reentrant model
 30905 ;;
 30906                           
 30907                           	psect	text141
 30908  0055EE                     __ptext141:
 30909                           	opt stack 0
 30910  0055EE                     ___lwdiv:
 30911                           	opt stack 14
 30912                           
 30913                           ; BSR set to: 0
 30914                           ;incstack = 0
 30915  0055EE  0E00               	movlw	0
 30916  0055F0  0100               	movlb	0	; () banked
 30917  0055F2  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30918  0055F4  0E00               	movlw	0
 30919  0055F6  6F88               	movwf	___lwdiv@quotient& (0+255),b
 30920                           
 30921                           ; BSR set to: 0
 30922  0055F8  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30923  0055FA  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30924  0055FC  B4D8               	btfsc	status,2,c
 30925  0055FE  D01C               	goto	l3135
 30926                           
 30927                           ; BSR set to: 0
 30928  005600  0E01               	movlw	1
 30929  005602  6F87               	movwf	___lwdiv@counter& (0+255),b
 30930  005604  D004               	goto	l3130
 30931  005606                     
 30932                           ; BSR set to: 0
 30933                           
 30934                           ; BSR set to: 0
 30935  005606  90D8               	bcf	status,0,c
 30936  005608  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 30937  00560A  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30938  00560C  2B87               	incf	___lwdiv@counter& (0+255),f,b
 30939  00560E                     l3130:
 30940                           
 30941                           ; BSR set to: 0
 30942                           
 30943                           ; BSR set to: 0
 30944  00560E  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30945  005610  D7FA               	goto	l3131
 30946  005612                     u11240:
 30947                           
 30948                           ; BSR set to: 0
 30949                           
 30950                           ; BSR set to: 0
 30951                           
 30952                           ; BSR set to: 0
 30953  005612  90D8               	bcf	status,0,c
 30954  005614  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 30955  005616  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30956                           
 30957                           ; BSR set to: 0
 30958  005618  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30959  00561A  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 30960  00561C  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30961  00561E  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30962  005620  A0D8               	btfss	status,0,c
 30963  005622  D005               	goto	l3134
 30964                           
 30965                           ; BSR set to: 0
 30966  005624  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30967  005626  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 30968  005628  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30969  00562A  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30970                           
 30971                           ; BSR set to: 0
 30972  00562C  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 30973  00562E                     l3134:
 30974                           
 30975                           ; BSR set to: 0
 30976                           
 30977                           ; BSR set to: 0
 30978  00562E  90D8               	bcf	status,0,c
 30979  005630  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30980  005632  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 30981                           
 30982                           ; BSR set to: 0
 30983  005634  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 30984  005636  D7ED               	goto	u11240
 30985  005638                     l3135:
 30986                           
 30987                           ; BSR set to: 0
 30988                           
 30989                           ; BSR set to: 0
 30990  005638  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 30991  00563C  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30992                           
 30993                           ; BSR set to: 0
 30994  005640  0012               	return		;funcret
 30995  005642                     __end_of___lwdiv:
 30996                           	opt stack 0
 30997                           tosu	equ	0xFFF
 30998                           tosh	equ	0xFFE
 30999                           tosl	equ	0xFFD
 31000                           pclath	equ	0xFFA
 31001                           tblptru	equ	0xFF8
 31002                           tblptrh	equ	0xFF7
 31003                           tblptrl	equ	0xFF6
 31004                           tablat	equ	0xFF5
 31005                           prodh	equ	0xFF4
 31006                           prodl	equ	0xFF3
 31007                           intcon	equ	0xFF2
 31008                           intcon2	equ	0xFF1
 31009                           intcon3	equ	0xFF0
 31010                           indf0	equ	0xFEF
 31011                           postinc0	equ	0xFEE
 31012                           plusw0	equ	0xFEB
 31013                           fsr0h	equ	0xFEA
 31014                           fsr0l	equ	0xFE9
 31015                           wreg	equ	0xFE8
 31016                           indf1	equ	0xFE7
 31017                           postinc1	equ	0xFE6
 31018                           postdec1	equ	0xFE5
 31019                           plusw1	equ	0xFE3
 31020                           fsr1h	equ	0xFE2
 31021                           fsr1l	equ	0xFE1
 31022                           indf2	equ	0xFDF
 31023                           postinc2	equ	0xFDE
 31024                           postdec2	equ	0xFDD
 31025                           plusw2	equ	0xFDB
 31026                           fsr2h	equ	0xFDA
 31027                           fsr2l	equ	0xFD9
 31028                           status	equ	0xFD8
 31029                           
 31030 ;; *************** function _OsAlrm_SetOsAlarm *****************
 31031 ;; Defined at:
 31032 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 31033 ;; Parameters:    Size  Location     Type
 31034 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 31035 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 31036 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 31037 ;;		 -> I2cDummyTx(1), 
 31038 ;; Auto vars:     Size  Location     Type
 31039 ;;		None
 31040 ;; Return value:  Size  Location     Type
 31041 ;;                  1    wreg      void 
 31042 ;; Registers used:
 31043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31044 ;; Tracked objects:
 31045 ;;		On entry : 0/0
 31046 ;;		On exit  : 0/0
 31047 ;;		Unchanged: 0/0
 31048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31049 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31052 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31053 ;;Total ram usage:        8 bytes
 31054 ;; Hardware stack levels used:    1
 31055 ;; Hardware stack levels required when called:   12
 31056 ;; This function calls:
 31057 ;;		___wmul
 31058 ;; This function is called by:
 31059 ;;		_I2cSlv_MainTask
 31060 ;; This function uses a non-reentrant model
 31061 ;;
 31062                           
 31063                           	psect	text142
 31064  003DDC                     __ptext142:
 31065                           	opt stack 0
 31066  003DDC                     _OsAlrm_SetOsAlarm:
 31067                           	opt stack 15
 31068                           
 31069                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 31070                           
 31071                           ; BSR set to: 0
 31072                           ;incstack = 0
 31073  003DDC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31074  003DE0  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31075  003DE4  0E00               	movlw	0
 31076  003DE6  0100               	movlb	0	; () banked
 31077  003DE8  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31078  003DEA  0E0B               	movlw	11
 31079  003DEC  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31080  003DEE  ECF1  F02F         	call	___wmul	;wreg free
 31081  003DF2  0E00               	movlw	low _OsAlarms
 31082  003DF4  0100               	movlb	0	; () banked
 31083  003DF6  257D               	addwf	?___wmul& (0+255),w,b
 31084  003DF8  6ED9               	movwf	fsr2l,c
 31085  003DFA  0E06               	movlw	high _OsAlarms
 31086  003DFC  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31087  003DFE  6EDA               	movwf	fsr2h,c
 31088  003E00  0E01               	movlw	1
 31089  003E02  6EDF               	movwf	indf2,c
 31090                           
 31091                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 31092  003E04  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31093  003E08  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31094  003E0C  0E00               	movlw	0
 31095  003E0E  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31096  003E10  0E0B               	movlw	11
 31097  003E12  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31098  003E14  ECF1  F02F         	call	___wmul	;wreg free
 31099  003E18  0E01               	movlw	1
 31100  003E1A  0100               	movlb	0	; () banked
 31101  003E1C  277D               	addwf	?___wmul& (0+255),f,b
 31102  003E1E  0E00               	movlw	0
 31103  003E20  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 31104  003E22  0E00               	movlw	low _OsAlarms
 31105  003E24  257D               	addwf	?___wmul& (0+255),w,b
 31106  003E26  6ED9               	movwf	fsr2l,c
 31107  003E28  0E06               	movlw	high _OsAlarms
 31108  003E2A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31109  003E2C  6EDA               	movwf	fsr2h,c
 31110  003E2E  6ADE               	clrf	postinc2,c
 31111  003E30  6ADE               	clrf	postinc2,c
 31112  003E32  6ADE               	clrf	postinc2,c
 31113  003E34  6ADD               	clrf	postdec2,c
 31114                           
 31115                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 31116  003E36  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31117  003E3A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31118  003E3E  0E00               	movlw	0
 31119  003E40  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31120  003E42  0E0B               	movlw	11
 31121  003E44  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31122  003E46  ECF1  F02F         	call	___wmul	;wreg free
 31123  003E4A  0E05               	movlw	5
 31124  003E4C  0100               	movlb	0	; () banked
 31125  003E4E  277D               	addwf	?___wmul& (0+255),f,b
 31126  003E50  0E00               	movlw	0
 31127  003E52  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 31128  003E54  0E00               	movlw	low _OsAlarms
 31129  003E56  257D               	addwf	?___wmul& (0+255),w,b
 31130  003E58  6ED9               	movwf	fsr2l,c
 31131  003E5A  0E06               	movlw	high _OsAlarms
 31132  003E5C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31133  003E5E  6EDA               	movwf	fsr2h,c
 31134  003E60  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 31135  003E64  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 31136  003E68  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 31137  003E6C  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 31138                           
 31139                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 31140  003E70  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 31141  003E74  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 31142  003E78  0E00               	movlw	0
 31143  003E7A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 31144  003E7C  0E0B               	movlw	11
 31145  003E7E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 31146  003E80  ECF1  F02F         	call	___wmul	;wreg free
 31147  003E84  0E09               	movlw	9
 31148  003E86  0100               	movlb	0	; () banked
 31149  003E88  277D               	addwf	?___wmul& (0+255),f,b
 31150  003E8A  0E00               	movlw	0
 31151  003E8C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 31152  003E8E  0E00               	movlw	low _OsAlarms
 31153  003E90  257D               	addwf	?___wmul& (0+255),w,b
 31154  003E92  6ED9               	movwf	fsr2l,c
 31155  003E94  0E06               	movlw	high _OsAlarms
 31156  003E96  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 31157  003E98  6EDA               	movwf	fsr2h,c
 31158  003E9A  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 31159  003E9E  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 31160                           
 31161                           ; BSR set to: 0
 31162  003EA2  0012               	return		;funcret
 31163  003EA4                     __end_of_OsAlrm_SetOsAlarm:
 31164                           	opt stack 0
 31165                           tosu	equ	0xFFF
 31166                           tosh	equ	0xFFE
 31167                           tosl	equ	0xFFD
 31168                           pclath	equ	0xFFA
 31169                           tblptru	equ	0xFF8
 31170                           tblptrh	equ	0xFF7
 31171                           tblptrl	equ	0xFF6
 31172                           tablat	equ	0xFF5
 31173                           prodh	equ	0xFF4
 31174                           prodl	equ	0xFF3
 31175                           intcon	equ	0xFF2
 31176                           intcon2	equ	0xFF1
 31177                           intcon3	equ	0xFF0
 31178                           indf0	equ	0xFEF
 31179                           postinc0	equ	0xFEE
 31180                           plusw0	equ	0xFEB
 31181                           fsr0h	equ	0xFEA
 31182                           fsr0l	equ	0xFE9
 31183                           wreg	equ	0xFE8
 31184                           indf1	equ	0xFE7
 31185                           postinc1	equ	0xFE6
 31186                           postdec1	equ	0xFE5
 31187                           plusw1	equ	0xFE3
 31188                           fsr1h	equ	0xFE2
 31189                           fsr1l	equ	0xFE1
 31190                           indf2	equ	0xFDF
 31191                           postinc2	equ	0xFDE
 31192                           postdec2	equ	0xFDD
 31193                           plusw2	equ	0xFDB
 31194                           fsr2h	equ	0xFDA
 31195                           fsr2l	equ	0xFD9
 31196                           status	equ	0xFD8
 31197                           
 31198 ;; *************** function ___wmul *****************
 31199 ;; Defined at:
 31200 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 31201 ;; Parameters:    Size  Location     Type
 31202 ;;  multiplier      2   29[BANK0 ] unsigned int 
 31203 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 31204 ;; Auto vars:     Size  Location     Type
 31205 ;;  product         2   33[BANK0 ] unsigned int 
 31206 ;; Return value:  Size  Location     Type
 31207 ;;                  2   29[BANK0 ] unsigned int 
 31208 ;; Registers used:
 31209 ;;		wreg, status,2, status,0, prodl, prodh
 31210 ;; Tracked objects:
 31211 ;;		On entry : 0/0
 31212 ;;		On exit  : 0/0
 31213 ;;		Unchanged: 0/0
 31214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31218 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31219 ;;Total ram usage:        6 bytes
 31220 ;; Hardware stack levels used:    1
 31221 ;; Hardware stack levels required when called:   11
 31222 ;; This function calls:
 31223 ;;		Nothing
 31224 ;; This function is called by:
 31225 ;;		_OsAlrm_SetOsAlarm
 31226 ;;		_secondsAppTimer
 31227 ;;		_secondsAppTimer2
 31228 ;;		_atoi
 31229 ;; This function uses a non-reentrant model
 31230 ;;
 31231                           
 31232                           	psect	text143
 31233  005FE2                     __ptext143:
 31234                           	opt stack 0
 31235  005FE2                     ___wmul:
 31236                           	opt stack 13
 31237                           
 31238                           ; BSR set to: 0
 31239                           ;incstack = 0
 31240  005FE2  0100               	movlb	0	; () banked
 31241  005FE4  517D               	movf	___wmul@multiplier& (0+255),w,b
 31242  005FE6  037F               	mulwf	___wmul@multiplicand& (0+255),b
 31243  005FE8  CFF3 F081          	movff	prodl,___wmul@product
 31244  005FEC  CFF4 F082          	movff	prodh,___wmul@product+1
 31245  005FF0  517D               	movf	___wmul@multiplier& (0+255),w,b
 31246  005FF2  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 31247  005FF4  50F3               	movf	prodl,w,c
 31248  005FF6  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 31249  005FF8  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 31250  005FFA  037F               	mulwf	___wmul@multiplicand& (0+255),b
 31251  005FFC  50F3               	movf	prodl,w,c
 31252  005FFE  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 31253                           
 31254                           ; BSR set to: 0
 31255  006000  C081  F07D         	movff	___wmul@product,?___wmul
 31256  006004  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 31257  006008  0012               	return	
 31258  00600A                     __end_of___wmul:
 31259                           	opt stack 0
 31260                           tosu	equ	0xFFF
 31261                           tosh	equ	0xFFE
 31262                           tosl	equ	0xFFD
 31263                           pclath	equ	0xFFA
 31264                           tblptru	equ	0xFF8
 31265                           tblptrh	equ	0xFF7
 31266                           tblptrl	equ	0xFF6
 31267                           tablat	equ	0xFF5
 31268                           prodh	equ	0xFF4
 31269                           prodl	equ	0xFF3
 31270                           intcon	equ	0xFF2
 31271                           intcon2	equ	0xFF1
 31272                           intcon3	equ	0xFF0
 31273                           indf0	equ	0xFEF
 31274                           postinc0	equ	0xFEE
 31275                           plusw0	equ	0xFEB
 31276                           fsr0h	equ	0xFEA
 31277                           fsr0l	equ	0xFE9
 31278                           wreg	equ	0xFE8
 31279                           indf1	equ	0xFE7
 31280                           postinc1	equ	0xFE6
 31281                           postdec1	equ	0xFE5
 31282                           plusw1	equ	0xFE3
 31283                           fsr1h	equ	0xFE2
 31284                           fsr1l	equ	0xFE1
 31285                           indf2	equ	0xFDF
 31286                           postinc2	equ	0xFDE
 31287                           postdec2	equ	0xFDD
 31288                           plusw2	equ	0xFDB
 31289                           fsr2h	equ	0xFDA
 31290                           fsr2l	equ	0xFD9
 31291                           status	equ	0xFD8
 31292                           
 31293 ;; *************** function _I2c_InitI2cModule *****************
 31294 ;; Defined at:
 31295 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31296 ;; Parameters:    Size  Location     Type
 31297 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 31298 ;;		 -> I2cConfig(10), 
 31299 ;; Auto vars:     Size  Location     Type
 31300 ;;		None
 31301 ;; Return value:  Size  Location     Type
 31302 ;;                  1    wreg      void 
 31303 ;; Registers used:
 31304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31305 ;; Tracked objects:
 31306 ;;		On entry : 0/0
 31307 ;;		On exit  : 0/0
 31308 ;;		Unchanged: 0/0
 31309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31313 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31314 ;;Total ram usage:        4 bytes
 31315 ;; Hardware stack levels used:    1
 31316 ;; Hardware stack levels required when called:   13
 31317 ;; This function calls:
 31318 ;;		_SetBaudRate
 31319 ;; This function is called by:
 31320 ;;		_I2cSlv_MainTask
 31321 ;; This function uses a non-reentrant model
 31322 ;;
 31323                           
 31324                           	psect	text144
 31325  004FAE                     __ptext144:
 31326                           	opt stack 0
 31327  004FAE                     _I2c_InitI2cModule:
 31328                           	opt stack 14
 31329                           
 31330                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 31331                           
 31332                           ; BSR set to: 0
 31333                           ;incstack = 0
 31334  004FAE  8295               	bsf	3989,1,c	;volatile
 31335                           
 31336                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 31337  004FB0  8095               	bsf	3989,0,c	;volatile
 31338                           
 31339                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 31340  004FB2  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 31341  004FB6  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 31342  004FBA  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 31343  004FBE  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 31344  004FC2  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 31345  004FC6  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 31346  004FCA  0100               	movlb	0	; () banked
 31347  004FCC  EE20 F004          	lfsr	2,4
 31348  004FD0  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31349  004FD2  26D9               	addwf	fsr2l,f,c
 31350  004FD4  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31351  004FD6  22DA               	addwfc	fsr2h,f,c
 31352  004FD8  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 31353  004FDC  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 31354  004FE0  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 31355  004FE4  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 31356  004FE8  ECE9  F02B         	call	_SetBaudRate	;wreg free
 31357                           
 31358                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 31359  004FEC  0100               	movlb	0	; () banked
 31360  004FEE  EE20 F008          	lfsr	2,8
 31361  004FF2  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31362  004FF4  26D9               	addwf	fsr2l,f,c
 31363  004FF6  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31364  004FF8  22DA               	addwfc	fsr2h,f,c
 31365  004FFA  50DF               	movf	indf2,w,c
 31366  004FFC  1272               	iorwf	3954,f,c	;volatile
 31367                           
 31368                           ; BSR set to: 0
 31369                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 31370  004FFE  EE20 F009          	lfsr	2,9
 31371  005002  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 31372  005004  26D9               	addwf	fsr2l,f,c
 31373  005006  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 31374  005008  22DA               	addwfc	fsr2h,f,c
 31375  00500A  50DF               	movf	indf2,w,c
 31376  00500C  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 31377  00500E  0E05               	movlw	5
 31378  005010  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 31379  005012                     u13545:
 31380  005012  90D8               	bcf	status,0,c
 31381  005014  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 31382  005016  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 31383  005018  D7FC               	goto	u13545
 31384  00501A  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 31385  00501C  1272               	iorwf	3954,f,c	;volatile
 31386                           
 31387                           ; BSR set to: 0
 31388  00501E  0012               	return		;funcret
 31389  005020                     __end_of_I2c_InitI2cModule:
 31390                           	opt stack 0
 31391                           tosu	equ	0xFFF
 31392                           tosh	equ	0xFFE
 31393                           tosl	equ	0xFFD
 31394                           pclath	equ	0xFFA
 31395                           tblptru	equ	0xFF8
 31396                           tblptrh	equ	0xFF7
 31397                           tblptrl	equ	0xFF6
 31398                           tablat	equ	0xFF5
 31399                           prodh	equ	0xFF4
 31400                           prodl	equ	0xFF3
 31401                           intcon	equ	0xFF2
 31402                           intcon2	equ	0xFF1
 31403                           intcon3	equ	0xFF0
 31404                           indf0	equ	0xFEF
 31405                           postinc0	equ	0xFEE
 31406                           plusw0	equ	0xFEB
 31407                           fsr0h	equ	0xFEA
 31408                           fsr0l	equ	0xFE9
 31409                           wreg	equ	0xFE8
 31410                           indf1	equ	0xFE7
 31411                           postinc1	equ	0xFE6
 31412                           postdec1	equ	0xFE5
 31413                           plusw1	equ	0xFE3
 31414                           fsr1h	equ	0xFE2
 31415                           fsr1l	equ	0xFE1
 31416                           indf2	equ	0xFDF
 31417                           postinc2	equ	0xFDE
 31418                           postdec2	equ	0xFDD
 31419                           plusw2	equ	0xFDB
 31420                           fsr2h	equ	0xFDA
 31421                           fsr2l	equ	0xFD9
 31422                           status	equ	0xFD8
 31423                           
 31424 ;; *************** function _SetBaudRate *****************
 31425 ;; Defined at:
 31426 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31427 ;; Parameters:    Size  Location     Type
 31428 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 31429 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 31430 ;; Auto vars:     Size  Location     Type
 31431 ;;		None
 31432 ;; Return value:  Size  Location     Type
 31433 ;;                  1    wreg      void 
 31434 ;; Registers used:
 31435 ;;		wreg, status,2, status,0, cstack
 31436 ;; Tracked objects:
 31437 ;;		On entry : 0/0
 31438 ;;		On exit  : 0/0
 31439 ;;		Unchanged: 0/0
 31440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31441 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31444 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31445 ;;Total ram usage:       12 bytes
 31446 ;; Hardware stack levels used:    1
 31447 ;; Hardware stack levels required when called:   12
 31448 ;; This function calls:
 31449 ;;		___lldiv
 31450 ;; This function is called by:
 31451 ;;		_I2c_InitI2cModule
 31452 ;; This function uses a non-reentrant model
 31453 ;;
 31454                           
 31455                           	psect	text145
 31456  0057D2                     __ptext145:
 31457                           	opt stack 0
 31458  0057D2                     _SetBaudRate:
 31459                           	opt stack 14
 31460                           
 31461                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 31462                           
 31463                           ; BSR set to: 0
 31464                           ;incstack = 0
 31465  0057D2  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 31466  0057D6  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 31467  0057DA  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 31468  0057DE  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 31469  0057E2  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 31470  0057E6  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 31471  0057EA  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 31472  0057EE  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 31473  0057F2  0E02               	movlw	2
 31474  0057F4                     u12475:
 31475  0057F4  90D8               	bcf	status,0,c
 31476  0057F6  0100               	movlb	0	; () banked
 31477  0057F8  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 31478  0057FA  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 31479  0057FC  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 31480  0057FE  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 31481  005800  2EE8               	decfsz	wreg,f,c
 31482  005802  D7F8               	goto	u12475
 31483  005804  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 31484  005808  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 31485  00580C  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 31486  005810  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 31487  005814  ECE1  F026         	call	___lldiv	;wreg free
 31488  005818  0100               	movlb	0	; () banked
 31489  00581A  0589               	decf	?___lldiv& (0+255),w,b
 31490  00581C  6E74               	movwf	3956,c	;volatile
 31491                           
 31492                           ; BSR set to: 0
 31493  00581E  0012               	return		;funcret
 31494  005820                     __end_of_SetBaudRate:
 31495                           	opt stack 0
 31496                           tosu	equ	0xFFF
 31497                           tosh	equ	0xFFE
 31498                           tosl	equ	0xFFD
 31499                           pclath	equ	0xFFA
 31500                           tblptru	equ	0xFF8
 31501                           tblptrh	equ	0xFF7
 31502                           tblptrl	equ	0xFF6
 31503                           tablat	equ	0xFF5
 31504                           prodh	equ	0xFF4
 31505                           prodl	equ	0xFF3
 31506                           intcon	equ	0xFF2
 31507                           intcon2	equ	0xFF1
 31508                           intcon3	equ	0xFF0
 31509                           indf0	equ	0xFEF
 31510                           postinc0	equ	0xFEE
 31511                           plusw0	equ	0xFEB
 31512                           fsr0h	equ	0xFEA
 31513                           fsr0l	equ	0xFE9
 31514                           wreg	equ	0xFE8
 31515                           indf1	equ	0xFE7
 31516                           postinc1	equ	0xFE6
 31517                           postdec1	equ	0xFE5
 31518                           plusw1	equ	0xFE3
 31519                           fsr1h	equ	0xFE2
 31520                           fsr1l	equ	0xFE1
 31521                           indf2	equ	0xFDF
 31522                           postinc2	equ	0xFDE
 31523                           postdec2	equ	0xFDD
 31524                           plusw2	equ	0xFDB
 31525                           fsr2h	equ	0xFDA
 31526                           fsr2l	equ	0xFD9
 31527                           status	equ	0xFD8
 31528                           
 31529 ;; *************** function ___lldiv *****************
 31530 ;; Defined at:
 31531 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 31532 ;; Parameters:    Size  Location     Type
 31533 ;;  dividend        4   41[BANK0 ] unsigned long 
 31534 ;;  divisor         4   45[BANK0 ] unsigned long 
 31535 ;; Auto vars:     Size  Location     Type
 31536 ;;  quotient        4   49[BANK0 ] unsigned long 
 31537 ;;  counter         1   53[BANK0 ] unsigned char 
 31538 ;; Return value:  Size  Location     Type
 31539 ;;                  4   41[BANK0 ] unsigned long 
 31540 ;; Registers used:
 31541 ;;		wreg, status,2, status,0
 31542 ;; Tracked objects:
 31543 ;;		On entry : 0/0
 31544 ;;		On exit  : 0/0
 31545 ;;		Unchanged: 0/0
 31546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31547 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31548 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31550 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31551 ;;Total ram usage:       13 bytes
 31552 ;; Hardware stack levels used:    1
 31553 ;; Hardware stack levels required when called:   11
 31554 ;; This function calls:
 31555 ;;		Nothing
 31556 ;; This function is called by:
 31557 ;;		_SetBaudRate
 31558 ;;		_Tmr_TmrBPrSet
 31559 ;;		_SetUartBaudRate
 31560 ;; This function uses a non-reentrant model
 31561 ;;
 31562                           
 31563                           	psect	text146
 31564  004DC2                     __ptext146:
 31565                           	opt stack 0
 31566  004DC2                     ___lldiv:
 31567                           	opt stack 15
 31568                           
 31569                           ; BSR set to: 0
 31570                           ;incstack = 0
 31571  004DC2  0E00               	movlw	0
 31572  004DC4  0100               	movlb	0	; () banked
 31573  004DC6  6F91               	movwf	___lldiv@quotient& (0+255),b
 31574  004DC8  0E00               	movlw	0
 31575  004DCA  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 31576  004DCC  0E00               	movlw	0
 31577  004DCE  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 31578  004DD0  0E00               	movlw	0
 31579  004DD2  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 31580                           
 31581                           ; BSR set to: 0
 31582  004DD4  518D               	movf	___lldiv@divisor& (0+255),w,b
 31583  004DD6  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 31584  004DD8  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 31585  004DDA  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 31586  004DDC  B4D8               	btfsc	status,2,c
 31587  004DDE  D02A               	goto	l3082
 31588                           
 31589                           ; BSR set to: 0
 31590  004DE0  0E01               	movlw	1
 31591  004DE2  6F95               	movwf	___lldiv@counter& (0+255),b
 31592  004DE4  D006               	goto	l3077
 31593  004DE6                     
 31594                           ; BSR set to: 0
 31595                           
 31596                           ; BSR set to: 0
 31597  004DE6  90D8               	bcf	status,0,c
 31598  004DE8  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 31599  004DEA  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 31600  004DEC  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 31601  004DEE  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 31602  004DF0  2B95               	incf	___lldiv@counter& (0+255),f,b
 31603  004DF2                     l3077:
 31604                           
 31605                           ; BSR set to: 0
 31606                           
 31607                           ; BSR set to: 0
 31608  004DF2  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 31609  004DF4  D7F8               	goto	l3078
 31610  004DF6                     u11550:
 31611                           
 31612                           ; BSR set to: 0
 31613                           
 31614                           ; BSR set to: 0
 31615                           
 31616                           ; BSR set to: 0
 31617  004DF6  90D8               	bcf	status,0,c
 31618  004DF8  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 31619  004DFA  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 31620  004DFC  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 31621  004DFE  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 31622                           
 31623                           ; BSR set to: 0
 31624  004E00  518D               	movf	___lldiv@divisor& (0+255),w,b
 31625  004E02  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 31626  004E04  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31627  004E06  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 31628  004E08  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31629  004E0A  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 31630  004E0C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31631  004E0E  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 31632  004E10  A0D8               	btfss	status,0,c
 31633  004E12  D009               	goto	l3081
 31634                           
 31635                           ; BSR set to: 0
 31636  004E14  518D               	movf	___lldiv@divisor& (0+255),w,b
 31637  004E16  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 31638  004E18  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 31639  004E1A  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 31640  004E1C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 31641  004E1E  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 31642  004E20  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 31643  004E22  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 31644                           
 31645                           ; BSR set to: 0
 31646  004E24  8191               	bsf	___lldiv@quotient& (0+255),0,b
 31647  004E26                     l3081:
 31648                           
 31649                           ; BSR set to: 0
 31650                           
 31651                           ; BSR set to: 0
 31652  004E26  90D8               	bcf	status,0,c
 31653  004E28  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 31654  004E2A  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 31655  004E2C  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 31656  004E2E  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 31657                           
 31658                           ; BSR set to: 0
 31659  004E30  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 31660  004E32  D7E1               	goto	u11550
 31661  004E34                     l3082:
 31662                           
 31663                           ; BSR set to: 0
 31664                           
 31665                           ; BSR set to: 0
 31666  004E34  C091  F089         	movff	___lldiv@quotient,?___lldiv
 31667  004E38  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 31668  004E3C  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 31669  004E40  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 31670                           
 31671                           ; BSR set to: 0
 31672  004E44  0012               	return		;funcret
 31673  004E46                     __end_of___lldiv:
 31674                           	opt stack 0
 31675                           tosu	equ	0xFFF
 31676                           tosh	equ	0xFFE
 31677                           tosl	equ	0xFFD
 31678                           pclath	equ	0xFFA
 31679                           tblptru	equ	0xFF8
 31680                           tblptrh	equ	0xFF7
 31681                           tblptrl	equ	0xFF6
 31682                           tablat	equ	0xFF5
 31683                           prodh	equ	0xFF4
 31684                           prodl	equ	0xFF3
 31685                           intcon	equ	0xFF2
 31686                           intcon2	equ	0xFF1
 31687                           intcon3	equ	0xFF0
 31688                           indf0	equ	0xFEF
 31689                           postinc0	equ	0xFEE
 31690                           plusw0	equ	0xFEB
 31691                           fsr0h	equ	0xFEA
 31692                           fsr0l	equ	0xFE9
 31693                           wreg	equ	0xFE8
 31694                           indf1	equ	0xFE7
 31695                           postinc1	equ	0xFE6
 31696                           postdec1	equ	0xFE5
 31697                           plusw1	equ	0xFE3
 31698                           fsr1h	equ	0xFE2
 31699                           fsr1l	equ	0xFE1
 31700                           indf2	equ	0xFDF
 31701                           postinc2	equ	0xFDE
 31702                           postdec2	equ	0xFDD
 31703                           plusw2	equ	0xFDB
 31704                           fsr2h	equ	0xFDA
 31705                           fsr2l	equ	0xFD9
 31706                           status	equ	0xFD8
 31707                           
 31708 ;; *************** function _I2cSetConfig *****************
 31709 ;; Defined at:
 31710 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31711 ;; Parameters:    Size  Location     Type
 31712 ;;		None
 31713 ;; Auto vars:     Size  Location     Type
 31714 ;;		None
 31715 ;; Return value:  Size  Location     Type
 31716 ;;                  1    wreg      void 
 31717 ;; Registers used:
 31718 ;;		wreg, status,2
 31719 ;; Tracked objects:
 31720 ;;		On entry : 0/0
 31721 ;;		On exit  : 0/0
 31722 ;;		Unchanged: 0/0
 31723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31728 ;;Total ram usage:        0 bytes
 31729 ;; Hardware stack levels used:    1
 31730 ;; Hardware stack levels required when called:   11
 31731 ;; This function calls:
 31732 ;;		Nothing
 31733 ;; This function is called by:
 31734 ;;		_I2cSlv_MainTask
 31735 ;; This function uses a non-reentrant model
 31736 ;;
 31737                           
 31738                           	psect	text147
 31739  005F62                     __ptext147:
 31740                           	opt stack 0
 31741  005F62                     _I2cSetConfig:
 31742                           	opt stack 16
 31743                           
 31744                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 31745                           
 31746                           ; BSR set to: 0
 31747                           ;incstack = 0
 31748  005F62  0E80               	movlw	128
 31749  005F64  0103               	movlb	3	; () banked
 31750  005F66  6F51               	movwf	_I2cConfig& (0+255),b
 31751  005F68  0E1A               	movlw	26
 31752  005F6A  6F52               	movwf	(_I2cConfig+1)& (0+255),b
 31753  005F6C  0E06               	movlw	6
 31754  005F6E  6F53               	movwf	(_I2cConfig+2)& (0+255),b
 31755  005F70  0E00               	movlw	0
 31756  005F72  6F54               	movwf	(_I2cConfig+3)& (0+255),b
 31757                           
 31758                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 31759  005F74  0E00               	movlw	0
 31760  005F76  6F55               	movwf	(_I2cConfig+4)& (0+255),b
 31761  005F78  0E6C               	movlw	108
 31762  005F7A  6F56               	movwf	(_I2cConfig+5)& (0+255),b
 31763  005F7C  0EDC               	movlw	220
 31764  005F7E  6F57               	movwf	(_I2cConfig+6)& (0+255),b
 31765  005F80  0E02               	movlw	2
 31766  005F82  6F58               	movwf	(_I2cConfig+7)& (0+255),b
 31767                           
 31768                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 31769  005F84  0E08               	movlw	8
 31770  005F86  6F59               	movwf	(_I2cConfig+8)& (0+255),b
 31771                           
 31772                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 31773  005F88  0E01               	movlw	1
 31774  005F8A  6F5A               	movwf	(_I2cConfig+9)& (0+255),b
 31775                           
 31776                           ; BSR set to: 3
 31777  005F8C  0012               	return		;funcret
 31778  005F8E                     __end_of_I2cSetConfig:
 31779                           	opt stack 0
 31780                           tosu	equ	0xFFF
 31781                           tosh	equ	0xFFE
 31782                           tosl	equ	0xFFD
 31783                           pclath	equ	0xFFA
 31784                           tblptru	equ	0xFF8
 31785                           tblptrh	equ	0xFF7
 31786                           tblptrl	equ	0xFF6
 31787                           tablat	equ	0xFF5
 31788                           prodh	equ	0xFF4
 31789                           prodl	equ	0xFF3
 31790                           intcon	equ	0xFF2
 31791                           intcon2	equ	0xFF1
 31792                           intcon3	equ	0xFF0
 31793                           indf0	equ	0xFEF
 31794                           postinc0	equ	0xFEE
 31795                           plusw0	equ	0xFEB
 31796                           fsr0h	equ	0xFEA
 31797                           fsr0l	equ	0xFE9
 31798                           wreg	equ	0xFE8
 31799                           indf1	equ	0xFE7
 31800                           postinc1	equ	0xFE6
 31801                           postdec1	equ	0xFE5
 31802                           plusw1	equ	0xFE3
 31803                           fsr1h	equ	0xFE2
 31804                           fsr1l	equ	0xFE1
 31805                           indf2	equ	0xFDF
 31806                           postinc2	equ	0xFDE
 31807                           postdec2	equ	0xFDD
 31808                           plusw2	equ	0xFDB
 31809                           fsr2h	equ	0xFDA
 31810                           fsr2l	equ	0xFD9
 31811                           status	equ	0xFD8
 31812                           
 31813 ;; *************** function _I2cSendMsgSm *****************
 31814 ;; Defined at:
 31815 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31816 ;; Parameters:    Size  Location     Type
 31817 ;;		None
 31818 ;; Auto vars:     Size  Location     Type
 31819 ;;		None
 31820 ;; Return value:  Size  Location     Type
 31821 ;;                  1    wreg      void 
 31822 ;; Registers used:
 31823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31824 ;; Tracked objects:
 31825 ;;		On entry : 0/0
 31826 ;;		On exit  : 0/0
 31827 ;;		Unchanged: 0/0
 31828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31833 ;;Total ram usage:        0 bytes
 31834 ;; Hardware stack levels used:    1
 31835 ;; Hardware stack levels required when called:   13
 31836 ;; This function calls:
 31837 ;;		_I2c_ReadData
 31838 ;;		_I2c_WriteData
 31839 ;;		_ReceiveEvt
 31840 ;; This function is called by:
 31841 ;;		_I2cSlv_MainTask
 31842 ;; This function uses a non-reentrant model
 31843 ;;
 31844                           
 31845                           	psect	text148
 31846  003EA4                     __ptext148:
 31847                           	opt stack 0
 31848  003EA4                     _I2cSendMsgSm:
 31849                           	opt stack 14
 31850                           
 31851                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 31852                           ;i2c_slv.c: 122: switch(I2cComState)
 31853                           
 31854                           ; BSR set to: 3
 31855                           ;incstack = 0
 31856  003EA4  D04F               	goto	l1379
 31857  003EA6                     
 31858                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 31859  003EA6  0ED9               	movlw	low _I2cWriteDataEvt
 31860  003EA8  0100               	movlb	0	; () banked
 31861  003EAA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31862  003EAC  0E00               	movlw	high _I2cWriteDataEvt
 31863  003EAE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31864  003EB0  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 31865  003EB4  0900               	iorlw	0
 31866  003EB6  B4D8               	btfsc	status,2,c
 31867  003EB8  D007               	goto	l1381
 31868                           
 31869                           ;i2c_slv.c: 127: {
 31870                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 31871  003EBA  0E01               	movlw	1
 31872  003EBC  0101               	movlb	1	; () banked
 31873  003EBE  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31874                           
 31875                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 31876  003EC0  0E01               	movlw	1
 31877  003EC2  0100               	movlb	0	; () banked
 31878  003EC4  6FCF               	movwf	_I2cComSts& (0+255),b
 31879                           
 31880                           ;i2c_slv.c: 132: }
 31881  003EC6  0012               	return	
 31882  003EC8                     l1381:
 31883                           
 31884                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 31885                           
 31886                           ; BSR set to: 0
 31887  003EC8  0ED8               	movlw	low _I2cReadDataEvt
 31888  003ECA  0100               	movlb	0	; () banked
 31889  003ECC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31890  003ECE  0E00               	movlw	high _I2cReadDataEvt
 31891  003ED0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31892  003ED2  EC9A  F02F         	call	_ReceiveEvt	;wreg free
 31893  003ED6  0900               	iorlw	0
 31894  003ED8  B4D8               	btfsc	status,2,c
 31895  003EDA  D007               	goto	l1383
 31896                           
 31897                           ;i2c_slv.c: 134: {
 31898                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 31899  003EDC  0E02               	movlw	2
 31900  003EDE  0101               	movlb	1	; () banked
 31901  003EE0  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31902                           
 31903                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 31904  003EE2  0E02               	movlw	2
 31905  003EE4  0100               	movlb	0	; () banked
 31906  003EE6  6FCF               	movwf	_I2cComSts& (0+255),b
 31907                           
 31908                           ;i2c_slv.c: 139: }
 31909  003EE8  0012               	return	
 31910  003EEA                     l1383:
 31911                           
 31912                           ;i2c_slv.c: 140: else
 31913                           ;i2c_slv.c: 141: {
 31914                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 31915                           
 31916                           ; BSR set to: 0
 31917  003EEA  0E00               	movlw	0
 31918  003EEC  0100               	movlb	0	; () banked
 31919  003EEE  6FCF               	movwf	_I2cComSts& (0+255),b
 31920                           
 31921                           ; BSR set to: 0
 31922                           ;i2c_slv.c: 144: }
 31923                           ;i2c_slv.c: 145: break;
 31924                           
 31925                           ; BSR set to: 0
 31926  003EF0  0012               	return	
 31927  003EF2                     
 31928                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 31929                           
 31930                           ; BSR set to: 0
 31931  003EF2  0E9D               	movlw	low _I2cTxPacket
 31932  003EF4  0100               	movlb	0	; () banked
 31933  003EF6  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 31934  003EF8  0E03               	movlw	high _I2cTxPacket
 31935  003EFA  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 31936  003EFC  EC5A  F00F         	call	_I2c_WriteData	;wreg free
 31937  003F00  0900               	iorlw	0
 31938  003F02  B4D8               	btfsc	status,2,c
 31939  003F04  0012               	return	
 31940                           
 31941                           ;i2c_slv.c: 150: {
 31942                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 31943  003F06  0E03               	movlw	3
 31944  003F08  0101               	movlb	1	; () banked
 31945  003F0A  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31946                           
 31947                           ; BSR set to: 1
 31948                           ;i2c_slv.c: 153: }
 31949                           ;i2c_slv.c: 154: break;
 31950  003F0C  0012               	return	
 31951  003F0E                     
 31952                           ; BSR set to: 1
 31953                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 31954                           
 31955                           ; BSR set to: 1
 31956  003F0E  0E97               	movlw	low _I2cRxPacket
 31957  003F10  0100               	movlb	0	; () banked
 31958  003F12  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 31959  003F14  0E03               	movlw	high _I2cRxPacket
 31960  003F16  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 31961  003F18  EC11  F010         	call	_I2c_ReadData	;wreg free
 31962  003F1C  0900               	iorlw	0
 31963  003F1E  B4D8               	btfsc	status,2,c
 31964  003F20  0012               	return	
 31965                           
 31966                           ;i2c_slv.c: 159: {
 31967                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 31968  003F22  0E04               	movlw	4
 31969  003F24  0101               	movlb	1	; () banked
 31970  003F26  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31971                           
 31972                           ; BSR set to: 1
 31973                           ;i2c_slv.c: 162: }
 31974                           ;i2c_slv.c: 164: break;
 31975  003F28  0012               	return	
 31976  003F2A                     
 31977                           ; BSR set to: 1
 31978                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 31979                           
 31980                           ; BSR set to: 1
 31981  003F2A  0E00               	movlw	0
 31982  003F2C  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31983                           
 31984                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 31985  003F2E  0E00               	movlw	0
 31986  003F30  0100               	movlb	0	; () banked
 31987  003F32  6FCF               	movwf	_I2cComSts& (0+255),b
 31988                           
 31989                           ;i2c_slv.c: 171: break;
 31990  003F34  0012               	return	
 31991  003F36                     
 31992                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 31993                           
 31994                           ; BSR set to: 0
 31995  003F36  0E00               	movlw	0
 31996  003F38  0101               	movlb	1	; () banked
 31997  003F3A  6FE8               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31998                           
 31999                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 32000  003F3C  0E00               	movlw	0
 32001  003F3E  0100               	movlb	0	; () banked
 32002  003F40  6FCF               	movwf	_I2cComSts& (0+255),b
 32003                           
 32004                           ; BSR set to: 0
 32005                           ;i2c_slv.c: 182: }
 32006                           
 32007                           ; BSR set to: 0
 32008                           ;i2c_slv.c: 181: break;
 32009                           
 32010                           ;i2c_slv.c: 180: default:
 32011                           
 32012                           ;i2c_slv.c: 178: break;
 32013  003F42  0012               	return	
 32014  003F44                     l1379:
 32015                           
 32016                           ; BSR set to: 0
 32017  003F44  0101               	movlb	1	; () banked
 32018  003F46  51E8               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 32019                           
 32020                           ; Switch size 1, requested type "space"
 32021                           ; Number of cases is 5, Range of values is 0 to 4
 32022                           ; switch strategies available:
 32023                           ; Name         Instructions Cycles
 32024                           ; simple_byte           16     9 (average)
 32025                           ;	Chosen strategy is simple_byte
 32026  003F48  0A00               	xorlw	0	; case 0
 32027  003F4A  B4D8               	btfsc	status,2,c
 32028  003F4C  D7AC               	goto	l1380
 32029  003F4E  0A01               	xorlw	1	; case 1
 32030  003F50  B4D8               	btfsc	status,2,c
 32031  003F52  D7CF               	goto	l1386
 32032  003F54  0A03               	xorlw	3	; case 2
 32033  003F56  B4D8               	btfsc	status,2,c
 32034  003F58  D7DA               	goto	l1388
 32035  003F5A  0A01               	xorlw	1	; case 3
 32036  003F5C  B4D8               	btfsc	status,2,c
 32037  003F5E  D7E5               	goto	l1390
 32038  003F60  0A07               	xorlw	7	; case 4
 32039  003F62  A4D8               	btfss	status,2,c
 32040  003F64  0012               	return	
 32041  003F66  D7E7               	goto	l1391
 32042  003F68                     __end_of_I2cSendMsgSm:
 32043                           	opt stack 0
 32044                           tosu	equ	0xFFF
 32045                           tosh	equ	0xFFE
 32046                           tosl	equ	0xFFD
 32047                           pclath	equ	0xFFA
 32048                           tblptru	equ	0xFF8
 32049                           tblptrh	equ	0xFF7
 32050                           tblptrl	equ	0xFF6
 32051                           tablat	equ	0xFF5
 32052                           prodh	equ	0xFF4
 32053                           prodl	equ	0xFF3
 32054                           intcon	equ	0xFF2
 32055                           intcon2	equ	0xFF1
 32056                           intcon3	equ	0xFF0
 32057                           indf0	equ	0xFEF
 32058                           postinc0	equ	0xFEE
 32059                           plusw0	equ	0xFEB
 32060                           fsr0h	equ	0xFEA
 32061                           fsr0l	equ	0xFE9
 32062                           wreg	equ	0xFE8
 32063                           indf1	equ	0xFE7
 32064                           postinc1	equ	0xFE6
 32065                           postdec1	equ	0xFE5
 32066                           plusw1	equ	0xFE3
 32067                           fsr1h	equ	0xFE2
 32068                           fsr1l	equ	0xFE1
 32069                           indf2	equ	0xFDF
 32070                           postinc2	equ	0xFDE
 32071                           postdec2	equ	0xFDD
 32072                           plusw2	equ	0xFDB
 32073                           fsr2h	equ	0xFDA
 32074                           fsr2l	equ	0xFD9
 32075                           status	equ	0xFD8
 32076                           
 32077 ;; *************** function _ReceiveEvt *****************
 32078 ;; Defined at:
 32079 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32080 ;; Parameters:    Size  Location     Type
 32081 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32082 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 32083 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 32084 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 32085 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 32086 ;;		 -> ActivateRiDetection(1), 
 32087 ;; Auto vars:     Size  Location     Type
 32088 ;;  EventStatus     1   32[BANK0 ] enum E7727
 32089 ;; Return value:  Size  Location     Type
 32090 ;;                  1    wreg      enum E7699
 32091 ;; Registers used:
 32092 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32093 ;; Tracked objects:
 32094 ;;		On entry : 0/0
 32095 ;;		On exit  : 0/0
 32096 ;;		Unchanged: 0/0
 32097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32101 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32102 ;;Total ram usage:        4 bytes
 32103 ;; Hardware stack levels used:    1
 32104 ;; Hardware stack levels required when called:   11
 32105 ;; This function calls:
 32106 ;;		Nothing
 32107 ;; This function is called by:
 32108 ;;		_MdmCntSm
 32109 ;;		_CheckModem
 32110 ;;		_ModemEvtParser
 32111 ;;		_GetSmsSm
 32112 ;;		_SendSmsSm
 32113 ;;		_Mdm_IsSmsReceived
 32114 ;;		_Mdm_IsRinging
 32115 ;;		_GetCallerNumber
 32116 ;;		_InitGprsNetwork
 32117 ;;		_HttpGetMethod
 32118 ;;		_I2cSendMsgSm
 32119 ;;		_I2cSlv_I2cReadMsgSts
 32120 ;;		_RiSm
 32121 ;;		_Mdm_GetSmsData
 32122 ;;		_GsmGprsTerminal
 32123 ;; This function uses a non-reentrant model
 32124 ;;
 32125                           
 32126                           	psect	text149
 32127  005F34                     __ptext149:
 32128                           	opt stack 0
 32129  005F34                     _ReceiveEvt:
 32130                           	opt stack 13
 32131                           
 32132                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 32133                           
 32134                           ;incstack = 0
 32135  005F34  0E00               	movlw	0
 32136  005F36  0100               	movlb	0	; () banked
 32137  005F38  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 32138                           
 32139                           ; BSR set to: 0
 32140                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 32141  005F3A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 32142  005F3E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 32143  005F42  0E02               	movlw	2
 32144  005F44  18DE               	xorwf	postinc2,w,c
 32145  005F46  A4D8               	btfss	status,2,c
 32146  005F48  D008               	goto	l832
 32147                           
 32148                           ; BSR set to: 0
 32149                           ;os_ser.c: 106: {
 32150                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 32151  005F4A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 32152  005F4E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 32153  005F52  0E01               	movlw	1
 32154  005F54  6EDF               	movwf	indf2,c
 32155                           
 32156                           ; BSR set to: 0
 32157                           ;os_ser.c: 110: EventStatus = EventReceived;
 32158  005F56  0E01               	movlw	1
 32159  005F58  D001               	goto	L58
 32160  005F5A                     l832:
 32161                           
 32162                           ; BSR set to: 0
 32163                           ;os_ser.c: 112: else
 32164                           ;os_ser.c: 113: {
 32165                           ;os_ser.c: 115: EventStatus = EventIdle;
 32166                           
 32167                           ; BSR set to: 0
 32168  005F5A  0E00               	movlw	0
 32169  005F5C                     L58:
 32170  005F5C  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 32171                           
 32172                           ; BSR set to: 0
 32173                           ;os_ser.c: 116: }
 32174                           ;os_ser.c: 119: return(EventStatus);
 32175  005F5E  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 32176  005F60  0012               	return	
 32177  005F62                     __end_of_ReceiveEvt:
 32178                           	opt stack 0
 32179                           tosu	equ	0xFFF
 32180                           tosh	equ	0xFFE
 32181                           tosl	equ	0xFFD
 32182                           pclath	equ	0xFFA
 32183                           tblptru	equ	0xFF8
 32184                           tblptrh	equ	0xFF7
 32185                           tblptrl	equ	0xFF6
 32186                           tablat	equ	0xFF5
 32187                           prodh	equ	0xFF4
 32188                           prodl	equ	0xFF3
 32189                           intcon	equ	0xFF2
 32190                           intcon2	equ	0xFF1
 32191                           intcon3	equ	0xFF0
 32192                           indf0	equ	0xFEF
 32193                           postinc0	equ	0xFEE
 32194                           plusw0	equ	0xFEB
 32195                           fsr0h	equ	0xFEA
 32196                           fsr0l	equ	0xFE9
 32197                           wreg	equ	0xFE8
 32198                           indf1	equ	0xFE7
 32199                           postinc1	equ	0xFE6
 32200                           postdec1	equ	0xFE5
 32201                           plusw1	equ	0xFE3
 32202                           fsr1h	equ	0xFE2
 32203                           fsr1l	equ	0xFE1
 32204                           indf2	equ	0xFDF
 32205                           postinc2	equ	0xFDE
 32206                           postdec2	equ	0xFDD
 32207                           plusw2	equ	0xFDB
 32208                           fsr2h	equ	0xFDA
 32209                           fsr2l	equ	0xFD9
 32210                           status	equ	0xFD8
 32211                           
 32212 ;; *************** function _I2c_WriteData *****************
 32213 ;; Defined at:
 32214 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32215 ;; Parameters:    Size  Location     Type
 32216 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 32217 ;;		 -> I2cTxPacket(5), 
 32218 ;; Auto vars:     Size  Location     Type
 32219 ;;		None
 32220 ;; Return value:  Size  Location     Type
 32221 ;;                  1    wreg      enum E7740
 32222 ;; Registers used:
 32223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32224 ;; Tracked objects:
 32225 ;;		On entry : 0/0
 32226 ;;		On exit  : 0/0
 32227 ;;		Unchanged: 0/0
 32228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32232 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32233 ;;Total ram usage:        4 bytes
 32234 ;; Hardware stack levels used:    1
 32235 ;; Hardware stack levels required when called:   12
 32236 ;; This function calls:
 32237 ;;		_CheckAckStatus
 32238 ;;		_CheckTxStatus
 32239 ;;		_StartCondition
 32240 ;;		_StopCondition
 32241 ;;		_WriteByte
 32242 ;; This function is called by:
 32243 ;;		_I2cSendMsgSm
 32244 ;; This function uses a non-reentrant model
 32245 ;;
 32246                           
 32247                           	psect	text150
 32248  001EB4                     __ptext150:
 32249                           	opt stack 0
 32250  001EB4                     _I2c_WriteData:
 32251                           	opt stack 14
 32252                           
 32253                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 32254                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 32255                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 32256                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 32257                           ;i2c_drv.c: 260: switch (I2cWriteState)
 32258                           
 32259                           ; BSR set to: 0
 32260                           ;incstack = 0
 32261  001EB4  D095               	goto	l160
 32262  001EB6                     
 32263                           ;i2c_drv.c: 264: StartCondition();
 32264  001EB6  EC1E  F032         	call	_StartCondition	;wreg free
 32265                           
 32266                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 32267  001EBA  0E00               	movlw	0
 32268  001EBC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 32269                           
 32270                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 32271  001EBE  0E01               	movlw	1
 32272  001EC0  D084               	goto	L65
 32273  001EC2                     
 32274                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 32275  001EC2  0100               	movlb	0	; () banked
 32276  001EC4  EE20 F001          	lfsr	2,1
 32277  001EC8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32278  001ECA  26D9               	addwf	fsr2l,f,c
 32279  001ECC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32280  001ECE  22DA               	addwfc	fsr2h,f,c
 32281  001ED0  50DF               	movf	indf2,w,c
 32282  001ED2  6F80               	movwf	??_I2c_WriteData& (0+255),b
 32283  001ED4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32284  001ED8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32285  001EDC  50DF               	movf	indf2,w,c
 32286  001EDE  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 32287  001EE0  90D8               	bcf	status,0,c
 32288  001EE2  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 32289  001EE4  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 32290  001EE6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32291  001EEA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32292  001EEE  6EDF               	movwf	indf2,c
 32293                           
 32294                           ; BSR set to: 0
 32295                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 32296  001EF0  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 32297  001EF4  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 32298  001EF8  50DF               	movf	indf2,w,c
 32299  001EFA  ECFC  F031         	call	_WriteByte
 32300                           
 32301                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 32302  001EFE  0E02               	movlw	2
 32303  001F00  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32304  001F02                     
 32305                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 32306  001F02  EC06  F032         	call	_CheckTxStatus	;wreg free
 32307  001F06  0900               	iorlw	0
 32308  001F08  A4D8               	btfss	status,2,c
 32309  001F0A  D089               	goto	l162
 32310                           
 32311                           ;i2c_drv.c: 282: {
 32312                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 32313  001F0C  0E03               	movlw	3
 32314  001F0E  D01A               	goto	L67
 32315  001F10                     
 32316                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 32317  001F10  0100               	movlb	0	; () banked
 32318  001F12  EE20 F002          	lfsr	2,2
 32319  001F16  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32320  001F18  26D9               	addwf	fsr2l,f,c
 32321  001F1A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32322  001F1C  22DA               	addwfc	fsr2h,f,c
 32323  001F1E  CFDE F080          	movff	postinc2,??_I2c_WriteData
 32324  001F22  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 32325  001F26  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 32326  001F2A  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 32327  001F2E  50DF               	movf	indf2,w,c
 32328  001F30  ECFC  F031         	call	_WriteByte
 32329                           
 32330                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 32331  001F34  0E04               	movlw	4
 32332  001F36  D049               	goto	L65
 32333  001F38                     
 32334                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 32335  001F38  EC06  F032         	call	_CheckTxStatus	;wreg free
 32336  001F3C  0900               	iorlw	0
 32337  001F3E  A4D8               	btfss	status,2,c
 32338  001F40  D06E               	goto	l162
 32339                           
 32340                           ;i2c_drv.c: 300: {
 32341                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 32342  001F42  0E05               	movlw	5
 32343  001F44                     L67:
 32344  001F44  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32345                           
 32346                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 32347  001F46  0E08               	movlw	8
 32348  001F48  D040               	goto	L65
 32349  001F4A                     
 32350                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 32351  001F4A  0100               	movlb	0	; () banked
 32352  001F4C  EE20 F004          	lfsr	2,4
 32353  001F50  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32354  001F52  26D9               	addwf	fsr2l,f,c
 32355  001F54  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32356  001F56  22DA               	addwfc	fsr2h,f,c
 32357  001F58  50DF               	movf	indf2,w,c
 32358  001F5A  B4D8               	btfsc	status,2,c
 32359  001F5C  D010               	goto	l170
 32360                           
 32361                           ; BSR set to: 0
 32362                           ;i2c_drv.c: 310: {
 32363                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 32364  001F5E  EE20 F004          	lfsr	2,4
 32365  001F62  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32366  001F64  26D9               	addwf	fsr2l,f,c
 32367  001F66  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32368  001F68  22DA               	addwfc	fsr2h,f,c
 32369  001F6A  06DF               	decf	indf2,f,c
 32370                           
 32371                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 32372  001F6C  EE20 F002          	lfsr	2,2
 32373  001F70  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32374  001F72  26D9               	addwf	fsr2l,f,c
 32375  001F74  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32376  001F76  22DA               	addwfc	fsr2h,f,c
 32377  001F78  2ADE               	incf	postinc2,f,c
 32378  001F7A  0E00               	movlw	0
 32379  001F7C  22DD               	addwfc	postdec2,f,c
 32380  001F7E                     l170:
 32381                           
 32382                           ; BSR set to: 0
 32383                           ;i2c_drv.c: 315: }
 32384                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 32385  001F7E  EE20 F004          	lfsr	2,4
 32386  001F82  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 32387  001F84  26D9               	addwf	fsr2l,f,c
 32388  001F86  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 32389  001F88  22DA               	addwfc	fsr2h,f,c
 32390  001F8A  50DF               	movf	indf2,w,c
 32391  001F8C  A4D8               	btfss	status,2,c
 32392  001F8E  D002               	goto	l171
 32393                           
 32394                           ; BSR set to: 0
 32395                           ;i2c_drv.c: 319: {
 32396                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 32397  001F90  0E06               	movlw	6
 32398  001F92  D01B               	goto	L65
 32399  001F94                     l171:
 32400                           
 32401                           ; BSR set to: 0
 32402                           ;i2c_drv.c: 323: else
 32403                           ;i2c_drv.c: 324: {
 32404                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 32405                           
 32406                           ; BSR set to: 0
 32407  001F94  0E03               	movlw	3
 32408  001F96  D019               	goto	L65
 32409  001F98                     
 32410                           ;i2c_drv.c: 332: StopCondition();
 32411                           
 32412                           ; BSR set to: 0
 32413  001F98  EC1C  F032         	call	_StopCondition	;wreg free
 32414                           
 32415                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 32416  001F9C  0E07               	movlw	7
 32417  001F9E  D015               	goto	L65
 32418  001FA0                     
 32419                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 32420  001FA0  0E00               	movlw	0
 32421  001FA2  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32422                           
 32423                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 32424  001FA4  0E00               	movlw	0
 32425  001FA6  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32426                           
 32427                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 32428  001FA8  0E02               	movlw	2
 32429  001FAA  D018               	goto	L66
 32430  001FAC                     
 32431                           ;i2c_drv.c: 347: TentativeCounter++;
 32432  001FAC  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 32433                           
 32434                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 32435  001FAE  EC0B  F032         	call	_CheckAckStatus	;wreg free
 32436  001FB2  0900               	iorlw	0
 32437  001FB4  A4D8               	btfss	status,2,c
 32438  001FB6  D005               	goto	l176
 32439                           
 32440                           ;i2c_drv.c: 350: {
 32441                           ;i2c_drv.c: 352: TentativeCounter = 0;
 32442  001FB8  0E00               	movlw	0
 32443  001FBA  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 32444                           
 32445                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 32446  001FBC  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 32447                           
 32448                           ;i2c_drv.c: 355: }
 32449  001FC0  D02E               	goto	l162
 32450  001FC2                     l176:
 32451                           
 32452                           ;i2c_drv.c: 356: else
 32453                           ;i2c_drv.c: 357: {
 32454                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 32455  001FC2  0E02               	movlw	2
 32456  001FC4  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 32457  001FC6  D02B               	goto	l162
 32458                           
 32459                           ;i2c_drv.c: 360: {
 32460                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 32461  001FC8  0E09               	movlw	9
 32462  001FCA                     L65:
 32463  001FCA  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32464                           
 32465                           ;i2c_drv.c: 363: }
 32466                           ;i2c_drv.c: 364: }
 32467                           ;i2c_drv.c: 365: break;
 32468  001FCC  D028               	goto	l162
 32469  001FCE                     
 32470                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 32471  001FCE  0E00               	movlw	0
 32472  001FD0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 32473                           
 32474                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 32475  001FD2  0E00               	movlw	0
 32476  001FD4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 32477                           
 32478                           ;i2c_drv.c: 372: TentativeCounter = 0;
 32479  001FD6  0E00               	movlw	0
 32480  001FD8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 32481                           
 32482                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 32483  001FDA  0E01               	movlw	1
 32484  001FDC                     L66:
 32485  001FDC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 32486                           
 32487                           ;i2c_drv.c: 379: }
 32488                           
 32489                           ;i2c_drv.c: 378: break;
 32490                           
 32491                           ;i2c_drv.c: 377: default:
 32492                           
 32493                           ;i2c_drv.c: 375: break;
 32494  001FDE  D01F               	goto	l162
 32495  001FE0                     l160:
 32496  001FE0  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 32497                           
 32498                           ; Switch size 1, requested type "space"
 32499                           ; Number of cases is 10, Range of values is 0 to 9
 32500                           ; switch strategies available:
 32501                           ; Name         Instructions Cycles
 32502                           ; simple_byte           31    16 (average)
 32503                           ;	Chosen strategy is simple_byte
 32504  001FE2  0A00               	xorlw	0	; case 0
 32505  001FE4  B4D8               	btfsc	status,2,c
 32506  001FE6  D767               	goto	l161
 32507  001FE8  0A01               	xorlw	1	; case 1
 32508  001FEA  B4D8               	btfsc	status,2,c
 32509  001FEC  D76A               	goto	l163
 32510  001FEE  0A03               	xorlw	3	; case 2
 32511  001FF0  B4D8               	btfsc	status,2,c
 32512  001FF2  D787               	goto	l164
 32513  001FF4  0A01               	xorlw	1	; case 3
 32514  001FF6  B4D8               	btfsc	status,2,c
 32515  001FF8  D78B               	goto	l166
 32516  001FFA  0A07               	xorlw	7	; case 4
 32517  001FFC  B4D8               	btfsc	status,2,c
 32518  001FFE  D79C               	goto	l167
 32519  002000  0A01               	xorlw	1	; case 5
 32520  002002  B4D8               	btfsc	status,2,c
 32521  002004  D7A2               	goto	l169
 32522  002006  0A03               	xorlw	3	; case 6
 32523  002008  B4D8               	btfsc	status,2,c
 32524  00200A  D7C6               	goto	l173
 32525  00200C  0A01               	xorlw	1	; case 7
 32526  00200E  B4D8               	btfsc	status,2,c
 32527  002010  D7C7               	goto	l174
 32528  002012  0A0F               	xorlw	15	; case 8
 32529  002014  B4D8               	btfsc	status,2,c
 32530  002016  D7CA               	goto	l175
 32531  002018  0A01               	xorlw	1	; case 9
 32532  00201A  B4D8               	btfsc	status,2,c
 32533  00201C  D7D8               	goto	l179
 32534  00201E                     l162:
 32535                           
 32536                           ;i2c_drv.c: 382: return WriteStatus;
 32537  00201E  5035               	movf	I2c_WriteData@WriteStatus,w,c
 32538  002020  0012               	return	
 32539  002022                     __end_of_I2c_WriteData:
 32540                           	opt stack 0
 32541                           tosu	equ	0xFFF
 32542                           tosh	equ	0xFFE
 32543                           tosl	equ	0xFFD
 32544                           pclath	equ	0xFFA
 32545                           tblptru	equ	0xFF8
 32546                           tblptrh	equ	0xFF7
 32547                           tblptrl	equ	0xFF6
 32548                           tablat	equ	0xFF5
 32549                           prodh	equ	0xFF4
 32550                           prodl	equ	0xFF3
 32551                           intcon	equ	0xFF2
 32552                           intcon2	equ	0xFF1
 32553                           intcon3	equ	0xFF0
 32554                           indf0	equ	0xFEF
 32555                           postinc0	equ	0xFEE
 32556                           plusw0	equ	0xFEB
 32557                           fsr0h	equ	0xFEA
 32558                           fsr0l	equ	0xFE9
 32559                           wreg	equ	0xFE8
 32560                           indf1	equ	0xFE7
 32561                           postinc1	equ	0xFE6
 32562                           postdec1	equ	0xFE5
 32563                           plusw1	equ	0xFE3
 32564                           fsr1h	equ	0xFE2
 32565                           fsr1l	equ	0xFE1
 32566                           indf2	equ	0xFDF
 32567                           postinc2	equ	0xFDE
 32568                           postdec2	equ	0xFDD
 32569                           plusw2	equ	0xFDB
 32570                           fsr2h	equ	0xFDA
 32571                           fsr2l	equ	0xFD9
 32572                           status	equ	0xFD8
 32573                           
 32574 ;; *************** function _I2c_ReadData *****************
 32575 ;; Defined at:
 32576 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32577 ;; Parameters:    Size  Location     Type
 32578 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 32579 ;;		 -> I2cRxPacket(6), 
 32580 ;; Auto vars:     Size  Location     Type
 32581 ;;		None
 32582 ;; Return value:  Size  Location     Type
 32583 ;;                  1    wreg      enum E7787
 32584 ;; Registers used:
 32585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32586 ;; Tracked objects:
 32587 ;;		On entry : 0/0
 32588 ;;		On exit  : 0/0
 32589 ;;		Unchanged: 0/0
 32590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32594 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32595 ;;Total ram usage:        4 bytes
 32596 ;; Hardware stack levels used:    1
 32597 ;; Hardware stack levels required when called:   12
 32598 ;; This function calls:
 32599 ;;		_CheckAckStatus
 32600 ;;		_CheckTxStatus
 32601 ;;		_EnableReceiver
 32602 ;;		_GenerateEvt
 32603 ;;		_ReadByte
 32604 ;;		_SetAckStatus
 32605 ;;		_StartCondition
 32606 ;;		_StopCondition
 32607 ;;		_WriteByte
 32608 ;; This function is called by:
 32609 ;;		_I2cSendMsgSm
 32610 ;; This function uses a non-reentrant model
 32611 ;;
 32612                           
 32613                           	psect	text151
 32614  002022                     __ptext151:
 32615                           	opt stack 0
 32616  002022                     _I2c_ReadData:
 32617                           	opt stack 14
 32618                           
 32619                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 32620                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 32621                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 32622                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 32623                           ;i2c_drv.c: 402: switch (I2cReadState)
 32624                           
 32625                           ;incstack = 0
 32626  002022  D090               	goto	l192
 32627  002024                     
 32628                           ;i2c_drv.c: 406: StartCondition();
 32629  002024  EC1E  F032         	call	_StartCondition	;wreg free
 32630                           
 32631                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 32632  002028  0E00               	movlw	0
 32633  00202A  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32634                           
 32635                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 32636  00202C  0E01               	movlw	1
 32637  00202E  D083               	goto	L75
 32638  002030                     
 32639                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 32640  002030  0100               	movlb	0	; () banked
 32641  002032  EE20 F001          	lfsr	2,1
 32642  002036  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32643  002038  26D9               	addwf	fsr2l,f,c
 32644  00203A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32645  00203C  22DA               	addwfc	fsr2h,f,c
 32646  00203E  50DF               	movf	indf2,w,c
 32647  002040  6F82               	movwf	??_I2c_ReadData& (0+255),b
 32648  002042  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32649  002046  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32650  00204A  50DF               	movf	indf2,w,c
 32651  00204C  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 32652  00204E  90D8               	bcf	status,0,c
 32653  002050  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 32654  002052  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 32655  002054  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32656  002058  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32657  00205C  6EDF               	movwf	indf2,c
 32658                           
 32659                           ; BSR set to: 0
 32660                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 32661  00205E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32662  002062  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32663  002066  50DF               	movf	indf2,w,c
 32664  002068  ECFC  F031         	call	_WriteByte
 32665                           
 32666                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 32667  00206C  0E02               	movlw	2
 32668  00206E  D063               	goto	L75
 32669  002070                     
 32670                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 32671  002070  EC06  F032         	call	_CheckTxStatus	;wreg free
 32672  002074  0900               	iorlw	0
 32673  002076  A4D8               	btfss	status,2,c
 32674  002078  D081               	goto	l194
 32675                           
 32676                           ;i2c_drv.c: 425: {
 32677                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 32678  00207A  0E03               	movlw	3
 32679  00207C  D05C               	goto	L75
 32680  00207E                     
 32681                           ;i2c_drv.c: 433: TentativeCounter++;
 32682  00207E  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 32683                           
 32684                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 32685  002080  EC0B  F032         	call	_CheckAckStatus	;wreg free
 32686  002084  0900               	iorlw	0
 32687  002086  A4D8               	btfss	status,2,c
 32688  002088  D004               	goto	l199
 32689                           
 32690                           ;i2c_drv.c: 436: {
 32691                           ;i2c_drv.c: 438: TentativeCounter = 0;
 32692  00208A  0E00               	movlw	0
 32693  00208C  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 32694  00208E                     
 32695                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 32696  00208E  0E04               	movlw	4
 32697  002090  D052               	goto	L75
 32698  002092                     l199:
 32699                           
 32700                           ;i2c_drv.c: 442: else
 32701                           ;i2c_drv.c: 443: {
 32702                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 32703  002092  0E02               	movlw	2
 32704  002094  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 32705  002096  D072               	goto	l194
 32706                           
 32707                           ;i2c_drv.c: 446: {
 32708                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 32709  002098  0E08               	movlw	8
 32710  00209A  D04D               	goto	L75
 32711  00209C                     
 32712                           ;i2c_drv.c: 455: EnableReceiver();
 32713  00209C  EC20  F032         	call	_EnableReceiver	;wreg free
 32714                           
 32715                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 32716  0020A0  0E05               	movlw	5
 32717  0020A2  D049               	goto	L75
 32718  0020A4                     
 32719                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 32720  0020A4  EC06  F032         	call	_CheckTxStatus	;wreg free
 32721  0020A8  0900               	iorlw	0
 32722  0020AA  A4D8               	btfss	status,2,c
 32723  0020AC  D067               	goto	l194
 32724                           
 32725                           ;i2c_drv.c: 463: {
 32726                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 32727  0020AE  0100               	movlb	0	; () banked
 32728  0020B0  EE20 F002          	lfsr	2,2
 32729  0020B4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32730  0020B6  26D9               	addwf	fsr2l,f,c
 32731  0020B8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32732  0020BA  22DA               	addwfc	fsr2h,f,c
 32733  0020BC  CFDE F082          	movff	postinc2,??_I2c_ReadData
 32734  0020C0  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 32735  0020C4  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 32736  0020C8  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 32737  0020CC  EC01  F032         	call	_ReadByte	;wreg free
 32738  0020D0  6EDF               	movwf	indf2,c
 32739                           
 32740                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 32741  0020D2  0100               	movlb	0	; () banked
 32742  0020D4  EE20 F002          	lfsr	2,2
 32743  0020D8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32744  0020DA  26D9               	addwf	fsr2l,f,c
 32745  0020DC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32746  0020DE  22DA               	addwfc	fsr2h,f,c
 32747  0020E0  2ADE               	incf	postinc2,f,c
 32748  0020E2  0E00               	movlw	0
 32749  0020E4  22DD               	addwfc	postdec2,f,c
 32750                           
 32751                           ; BSR set to: 0
 32752                           ;i2c_drv.c: 469: DataCounter++;
 32753  0020E6  2A33               	incf	I2c_ReadData@DataCounter,f,c
 32754                           
 32755                           ; BSR set to: 0
 32756                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 32757  0020E8  0E06               	movlw	6
 32758  0020EA  D025               	goto	L75
 32759  0020EC                     
 32760                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 32761                           
 32762                           ; BSR set to: 0
 32763  0020EC  0100               	movlb	0	; () banked
 32764  0020EE  EE20 F004          	lfsr	2,4
 32765  0020F2  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32766  0020F4  26D9               	addwf	fsr2l,f,c
 32767  0020F6  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32768  0020F8  22DA               	addwfc	fsr2h,f,c
 32769  0020FA  50DE               	movf	postinc2,w,c
 32770  0020FC  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 32771  0020FE  A0D8               	btfss	status,0,c
 32772  002100  D008               	goto	l206
 32773                           
 32774                           ; BSR set to: 0
 32775                           ;i2c_drv.c: 478: {
 32776                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 32777  002102  0E01               	movlw	1
 32778  002104  EC96  F031         	call	_SetAckStatus
 32779                           
 32780                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 32781  002108  0E07               	movlw	7
 32782  00210A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32783                           
 32784                           ;i2c_drv.c: 484: DataCounter = 0;
 32785  00210C  0E00               	movlw	0
 32786  00210E  6E33               	movwf	I2c_ReadData@DataCounter,c
 32787                           
 32788                           ;i2c_drv.c: 485: }
 32789  002110  D035               	goto	l194
 32790  002112                     l206:
 32791                           
 32792                           ;i2c_drv.c: 486: else
 32793                           ;i2c_drv.c: 487: {
 32794                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 32795  002112  0E00               	movlw	0
 32796  002114  EC96  F031         	call	_SetAckStatus
 32797  002118  D7BA               	goto	L76
 32798  00211A                     
 32799                           ;i2c_drv.c: 497: StopCondition();
 32800  00211A  EC1C  F032         	call	_StopCondition	;wreg free
 32801                           
 32802                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 32803  00211E  0E02               	movlw	2
 32804  002120  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32805                           
 32806                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 32807  002122  0E05               	movlw	5
 32808  002124  0100               	movlb	0	; () banked
 32809  002126  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 32810  002128  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 32811  00212A  0E00               	movlw	0
 32812  00212C  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32813  00212E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 32814  002130  EC5E  F031         	call	_GenerateEvt	;wreg free
 32815                           
 32816                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 32817  002134  0E00               	movlw	0
 32818  002136                     L75:
 32819  002136  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32820                           
 32821                           ;i2c_drv.c: 504: break;
 32822  002138  D021               	goto	l194
 32823  00213A                     
 32824                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 32825  00213A  0E00               	movlw	0
 32826  00213C  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32827                           
 32828                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 32829  00213E  0E01               	movlw	1
 32830  002140  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32831                           
 32832                           ;i2c_drv.c: 515: }
 32833                           
 32834                           ;i2c_drv.c: 514: break;
 32835                           
 32836                           ;i2c_drv.c: 513: default:
 32837                           
 32838                           ;i2c_drv.c: 511: break;
 32839  002142  D01C               	goto	l194
 32840  002144                     l192:
 32841  002144  5034               	movf	I2c_ReadData@I2cReadState,w,c
 32842                           
 32843                           ; Switch size 1, requested type "space"
 32844                           ; Number of cases is 9, Range of values is 0 to 8
 32845                           ; switch strategies available:
 32846                           ; Name         Instructions Cycles
 32847                           ; simple_byte           28    15 (average)
 32848                           ;	Chosen strategy is simple_byte
 32849  002146  0A00               	xorlw	0	; case 0
 32850  002148  B4D8               	btfsc	status,2,c
 32851  00214A  D76C               	goto	l193
 32852  00214C  0A01               	xorlw	1	; case 1
 32853  00214E  B4D8               	btfsc	status,2,c
 32854  002150  D76F               	goto	l195
 32855  002152  0A03               	xorlw	3	; case 2
 32856  002154  B4D8               	btfsc	status,2,c
 32857  002156  D78C               	goto	l196
 32858  002158  0A01               	xorlw	1	; case 3
 32859  00215A  B4D8               	btfsc	status,2,c
 32860  00215C  D790               	goto	l198
 32861  00215E  0A07               	xorlw	7	; case 4
 32862  002160  B4D8               	btfsc	status,2,c
 32863  002162  D79C               	goto	l202
 32864  002164  0A01               	xorlw	1	; case 5
 32865  002166  B4D8               	btfsc	status,2,c
 32866  002168  D79D               	goto	l203
 32867  00216A  0A03               	xorlw	3	; case 6
 32868  00216C  B4D8               	btfsc	status,2,c
 32869  00216E  D7BE               	goto	l205
 32870  002170  0A01               	xorlw	1	; case 7
 32871  002172  B4D8               	btfsc	status,2,c
 32872  002174  D7D2               	goto	l208
 32873  002176  0A0F               	xorlw	15	; case 8
 32874  002178  B4D8               	btfsc	status,2,c
 32875  00217A  D7DF               	goto	l209
 32876  00217C                     l194:
 32877                           
 32878                           ;i2c_drv.c: 518: return ReadStatus;
 32879  00217C  5031               	movf	I2c_ReadData@ReadStatus,w,c
 32880  00217E  0012               	return	
 32881  002180                     __end_of_I2c_ReadData:
 32882                           	opt stack 0
 32883                           tosu	equ	0xFFF
 32884                           tosh	equ	0xFFE
 32885                           tosl	equ	0xFFD
 32886                           pclath	equ	0xFFA
 32887                           tblptru	equ	0xFF8
 32888                           tblptrh	equ	0xFF7
 32889                           tblptrl	equ	0xFF6
 32890                           tablat	equ	0xFF5
 32891                           prodh	equ	0xFF4
 32892                           prodl	equ	0xFF3
 32893                           intcon	equ	0xFF2
 32894                           intcon2	equ	0xFF1
 32895                           intcon3	equ	0xFF0
 32896                           indf0	equ	0xFEF
 32897                           postinc0	equ	0xFEE
 32898                           plusw0	equ	0xFEB
 32899                           fsr0h	equ	0xFEA
 32900                           fsr0l	equ	0xFE9
 32901                           wreg	equ	0xFE8
 32902                           indf1	equ	0xFE7
 32903                           postinc1	equ	0xFE6
 32904                           postdec1	equ	0xFE5
 32905                           plusw1	equ	0xFE3
 32906                           fsr1h	equ	0xFE2
 32907                           fsr1l	equ	0xFE1
 32908                           indf2	equ	0xFDF
 32909                           postinc2	equ	0xFDE
 32910                           postdec2	equ	0xFDD
 32911                           plusw2	equ	0xFDB
 32912                           fsr2h	equ	0xFDA
 32913                           fsr2l	equ	0xFD9
 32914                           status	equ	0xFD8
 32915                           
 32916 ;; *************** function _WriteByte *****************
 32917 ;; Defined at:
 32918 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32919 ;; Parameters:    Size  Location     Type
 32920 ;;  Byte            1    wreg     unsigned char 
 32921 ;; Auto vars:     Size  Location     Type
 32922 ;;  Byte            1   29[BANK0 ] unsigned char 
 32923 ;; Return value:  Size  Location     Type
 32924 ;;                  1    wreg      void 
 32925 ;; Registers used:
 32926 ;;		wreg
 32927 ;; Tracked objects:
 32928 ;;		On entry : 0/0
 32929 ;;		On exit  : 0/0
 32930 ;;		Unchanged: 0/0
 32931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32936 ;;Total ram usage:        1 bytes
 32937 ;; Hardware stack levels used:    1
 32938 ;; Hardware stack levels required when called:   11
 32939 ;; This function calls:
 32940 ;;		Nothing
 32941 ;; This function is called by:
 32942 ;;		_I2c_WriteData
 32943 ;;		_I2c_ReadData
 32944 ;; This function uses a non-reentrant model
 32945 ;;
 32946                           
 32947                           	psect	text152
 32948  0063F8                     __ptext152:
 32949                           	opt stack 0
 32950  0063F8                     _WriteByte:
 32951                           	opt stack 14
 32952                           
 32953                           ;incstack = 0
 32954                           ;WriteByte@Byte stored from wreg
 32955  0063F8  0100               	movlb	0	; () banked
 32956  0063FA  6F7D               	movwf	WriteByte@Byte& (0+255),b
 32957                           
 32958                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 32959  0063FC  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 32960  006400  0012               	return		;funcret
 32961  006402                     __end_of_WriteByte:
 32962                           	opt stack 0
 32963                           tosu	equ	0xFFF
 32964                           tosh	equ	0xFFE
 32965                           tosl	equ	0xFFD
 32966                           pclath	equ	0xFFA
 32967                           tblptru	equ	0xFF8
 32968                           tblptrh	equ	0xFF7
 32969                           tblptrl	equ	0xFF6
 32970                           tablat	equ	0xFF5
 32971                           prodh	equ	0xFF4
 32972                           prodl	equ	0xFF3
 32973                           intcon	equ	0xFF2
 32974                           intcon2	equ	0xFF1
 32975                           intcon3	equ	0xFF0
 32976                           indf0	equ	0xFEF
 32977                           postinc0	equ	0xFEE
 32978                           plusw0	equ	0xFEB
 32979                           fsr0h	equ	0xFEA
 32980                           fsr0l	equ	0xFE9
 32981                           wreg	equ	0xFE8
 32982                           indf1	equ	0xFE7
 32983                           postinc1	equ	0xFE6
 32984                           postdec1	equ	0xFE5
 32985                           plusw1	equ	0xFE3
 32986                           fsr1h	equ	0xFE2
 32987                           fsr1l	equ	0xFE1
 32988                           indf2	equ	0xFDF
 32989                           postinc2	equ	0xFDE
 32990                           postdec2	equ	0xFDD
 32991                           plusw2	equ	0xFDB
 32992                           fsr2h	equ	0xFDA
 32993                           fsr2l	equ	0xFD9
 32994                           status	equ	0xFD8
 32995                           
 32996 ;; *************** function _StopCondition *****************
 32997 ;; Defined at:
 32998 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32999 ;; Parameters:    Size  Location     Type
 33000 ;;		None
 33001 ;; Auto vars:     Size  Location     Type
 33002 ;;		None
 33003 ;; Return value:  Size  Location     Type
 33004 ;;                  1    wreg      void 
 33005 ;; Registers used:
 33006 ;;		status,2, status,0
 33007 ;; Tracked objects:
 33008 ;;		On entry : 0/0
 33009 ;;		On exit  : 0/0
 33010 ;;		Unchanged: 0/0
 33011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33016 ;;Total ram usage:        0 bytes
 33017 ;; Hardware stack levels used:    1
 33018 ;; Hardware stack levels required when called:   11
 33019 ;; This function calls:
 33020 ;;		Nothing
 33021 ;; This function is called by:
 33022 ;;		_I2c_WriteData
 33023 ;;		_I2c_ReadData
 33024 ;; This function uses a non-reentrant model
 33025 ;;
 33026                           
 33027                           	psect	text153
 33028  006438                     __ptext153:
 33029                           	opt stack 0
 33030  006438                     _StopCondition:
 33031                           	opt stack 14
 33032                           
 33033                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 33034                           
 33035                           ;incstack = 0
 33036  006438  8471               	bsf	3953,2,c	;volatile
 33037  00643A  0012               	return		;funcret
 33038  00643C                     __end_of_StopCondition:
 33039                           	opt stack 0
 33040                           tosu	equ	0xFFF
 33041                           tosh	equ	0xFFE
 33042                           tosl	equ	0xFFD
 33043                           pclath	equ	0xFFA
 33044                           tblptru	equ	0xFF8
 33045                           tblptrh	equ	0xFF7
 33046                           tblptrl	equ	0xFF6
 33047                           tablat	equ	0xFF5
 33048                           prodh	equ	0xFF4
 33049                           prodl	equ	0xFF3
 33050                           intcon	equ	0xFF2
 33051                           intcon2	equ	0xFF1
 33052                           intcon3	equ	0xFF0
 33053                           indf0	equ	0xFEF
 33054                           postinc0	equ	0xFEE
 33055                           plusw0	equ	0xFEB
 33056                           fsr0h	equ	0xFEA
 33057                           fsr0l	equ	0xFE9
 33058                           wreg	equ	0xFE8
 33059                           indf1	equ	0xFE7
 33060                           postinc1	equ	0xFE6
 33061                           postdec1	equ	0xFE5
 33062                           plusw1	equ	0xFE3
 33063                           fsr1h	equ	0xFE2
 33064                           fsr1l	equ	0xFE1
 33065                           indf2	equ	0xFDF
 33066                           postinc2	equ	0xFDE
 33067                           postdec2	equ	0xFDD
 33068                           plusw2	equ	0xFDB
 33069                           fsr2h	equ	0xFDA
 33070                           fsr2l	equ	0xFD9
 33071                           status	equ	0xFD8
 33072                           
 33073 ;; *************** function _StartCondition *****************
 33074 ;; Defined at:
 33075 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33076 ;; Parameters:    Size  Location     Type
 33077 ;;		None
 33078 ;; Auto vars:     Size  Location     Type
 33079 ;;		None
 33080 ;; Return value:  Size  Location     Type
 33081 ;;                  1    wreg      void 
 33082 ;; Registers used:
 33083 ;;		status,2, status,0
 33084 ;; Tracked objects:
 33085 ;;		On entry : 0/0
 33086 ;;		On exit  : 0/0
 33087 ;;		Unchanged: 0/0
 33088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33093 ;;Total ram usage:        0 bytes
 33094 ;; Hardware stack levels used:    1
 33095 ;; Hardware stack levels required when called:   11
 33096 ;; This function calls:
 33097 ;;		Nothing
 33098 ;; This function is called by:
 33099 ;;		_I2c_WriteData
 33100 ;;		_I2c_ReadData
 33101 ;; This function uses a non-reentrant model
 33102 ;;
 33103                           
 33104                           	psect	text154
 33105  00643C                     __ptext154:
 33106                           	opt stack 0
 33107  00643C                     _StartCondition:
 33108                           	opt stack 14
 33109                           
 33110                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 33111                           
 33112                           ;incstack = 0
 33113  00643C  8071               	bsf	3953,0,c	;volatile
 33114  00643E  0012               	return		;funcret
 33115  006440                     __end_of_StartCondition:
 33116                           	opt stack 0
 33117                           tosu	equ	0xFFF
 33118                           tosh	equ	0xFFE
 33119                           tosl	equ	0xFFD
 33120                           pclath	equ	0xFFA
 33121                           tblptru	equ	0xFF8
 33122                           tblptrh	equ	0xFF7
 33123                           tblptrl	equ	0xFF6
 33124                           tablat	equ	0xFF5
 33125                           prodh	equ	0xFF4
 33126                           prodl	equ	0xFF3
 33127                           intcon	equ	0xFF2
 33128                           intcon2	equ	0xFF1
 33129                           intcon3	equ	0xFF0
 33130                           indf0	equ	0xFEF
 33131                           postinc0	equ	0xFEE
 33132                           plusw0	equ	0xFEB
 33133                           fsr0h	equ	0xFEA
 33134                           fsr0l	equ	0xFE9
 33135                           wreg	equ	0xFE8
 33136                           indf1	equ	0xFE7
 33137                           postinc1	equ	0xFE6
 33138                           postdec1	equ	0xFE5
 33139                           plusw1	equ	0xFE3
 33140                           fsr1h	equ	0xFE2
 33141                           fsr1l	equ	0xFE1
 33142                           indf2	equ	0xFDF
 33143                           postinc2	equ	0xFDE
 33144                           postdec2	equ	0xFDD
 33145                           plusw2	equ	0xFDB
 33146                           fsr2h	equ	0xFDA
 33147                           fsr2l	equ	0xFD9
 33148                           status	equ	0xFD8
 33149                           
 33150 ;; *************** function _SetAckStatus *****************
 33151 ;; Defined at:
 33152 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33153 ;; Parameters:    Size  Location     Type
 33154 ;;  AckSts          1    wreg     unsigned char 
 33155 ;; Auto vars:     Size  Location     Type
 33156 ;;  AckSts          1   29[BANK0 ] unsigned char 
 33157 ;; Return value:  Size  Location     Type
 33158 ;;                  1    wreg      void 
 33159 ;; Registers used:
 33160 ;;		wreg
 33161 ;; Tracked objects:
 33162 ;;		On entry : 0/0
 33163 ;;		On exit  : 0/0
 33164 ;;		Unchanged: 0/0
 33165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33169 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33170 ;;Total ram usage:        1 bytes
 33171 ;; Hardware stack levels used:    1
 33172 ;; Hardware stack levels required when called:   11
 33173 ;; This function calls:
 33174 ;;		Nothing
 33175 ;; This function is called by:
 33176 ;;		_I2c_ReadData
 33177 ;; This function uses a non-reentrant model
 33178 ;;
 33179                           
 33180                           	psect	text155
 33181  00632C                     __ptext155:
 33182                           	opt stack 0
 33183  00632C                     _SetAckStatus:
 33184                           	opt stack 14
 33185                           
 33186                           ;incstack = 0
 33187                           ;SetAckStatus@AckSts stored from wreg
 33188  00632C  0100               	movlb	0	; () banked
 33189  00632E  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 33190                           
 33191                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 33192  006330  0100               	movlb	0	; () banked
 33193  006332  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 33194  006334  D002               	bra	u11725
 33195  006336  9A71               	bcf	3953,5,c	;volatile
 33196  006338  D001               	bra	u11726
 33197  00633A                     u11725:
 33198  00633A  8A71               	bsf	3953,5,c	;volatile
 33199  00633C                     u11726:
 33200                           
 33201                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 33202  00633C  8871               	bsf	3953,4,c	;volatile
 33203  00633E  0012               	return		;funcret
 33204  006340                     __end_of_SetAckStatus:
 33205                           	opt stack 0
 33206                           tosu	equ	0xFFF
 33207                           tosh	equ	0xFFE
 33208                           tosl	equ	0xFFD
 33209                           pclath	equ	0xFFA
 33210                           tblptru	equ	0xFF8
 33211                           tblptrh	equ	0xFF7
 33212                           tblptrl	equ	0xFF6
 33213                           tablat	equ	0xFF5
 33214                           prodh	equ	0xFF4
 33215                           prodl	equ	0xFF3
 33216                           intcon	equ	0xFF2
 33217                           intcon2	equ	0xFF1
 33218                           intcon3	equ	0xFF0
 33219                           indf0	equ	0xFEF
 33220                           postinc0	equ	0xFEE
 33221                           plusw0	equ	0xFEB
 33222                           fsr0h	equ	0xFEA
 33223                           fsr0l	equ	0xFE9
 33224                           wreg	equ	0xFE8
 33225                           indf1	equ	0xFE7
 33226                           postinc1	equ	0xFE6
 33227                           postdec1	equ	0xFE5
 33228                           plusw1	equ	0xFE3
 33229                           fsr1h	equ	0xFE2
 33230                           fsr1l	equ	0xFE1
 33231                           indf2	equ	0xFDF
 33232                           postinc2	equ	0xFDE
 33233                           postdec2	equ	0xFDD
 33234                           plusw2	equ	0xFDB
 33235                           fsr2h	equ	0xFDA
 33236                           fsr2l	equ	0xFD9
 33237                           status	equ	0xFD8
 33238                           
 33239 ;; *************** function _ReadByte *****************
 33240 ;; Defined at:
 33241 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33242 ;; Parameters:    Size  Location     Type
 33243 ;;		None
 33244 ;; Auto vars:     Size  Location     Type
 33245 ;;  Byte            1   29[BANK0 ] unsigned char 
 33246 ;; Return value:  Size  Location     Type
 33247 ;;                  1    wreg      unsigned char 
 33248 ;; Registers used:
 33249 ;;		wreg, status,2
 33250 ;; Tracked objects:
 33251 ;;		On entry : 0/0
 33252 ;;		On exit  : 0/0
 33253 ;;		Unchanged: 0/0
 33254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33258 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33259 ;;Total ram usage:        1 bytes
 33260 ;; Hardware stack levels used:    1
 33261 ;; Hardware stack levels required when called:   11
 33262 ;; This function calls:
 33263 ;;		Nothing
 33264 ;; This function is called by:
 33265 ;;		_I2c_ReadData
 33266 ;; This function uses a non-reentrant model
 33267 ;;
 33268                           
 33269                           	psect	text156
 33270  006402                     __ptext156:
 33271                           	opt stack 0
 33272  006402                     _ReadByte:
 33273                           	opt stack 14
 33274                           
 33275                           ;i2c_drv.c: 207: UINT8 Byte;
 33276                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 33277                           
 33278                           ;incstack = 0
 33279  006402  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 33280                           
 33281                           ;i2c_drv.c: 213: return Byte;
 33282  006406  0100               	movlb	0	; () banked
 33283  006408  517D               	movf	ReadByte@Byte& (0+255),w,b
 33284  00640A  0012               	return	
 33285  00640C                     __end_of_ReadByte:
 33286                           	opt stack 0
 33287                           tosu	equ	0xFFF
 33288                           tosh	equ	0xFFE
 33289                           tosl	equ	0xFFD
 33290                           pclath	equ	0xFFA
 33291                           tblptru	equ	0xFF8
 33292                           tblptrh	equ	0xFF7
 33293                           tblptrl	equ	0xFF6
 33294                           tablat	equ	0xFF5
 33295                           prodh	equ	0xFF4
 33296                           prodl	equ	0xFF3
 33297                           intcon	equ	0xFF2
 33298                           intcon2	equ	0xFF1
 33299                           intcon3	equ	0xFF0
 33300                           indf0	equ	0xFEF
 33301                           postinc0	equ	0xFEE
 33302                           plusw0	equ	0xFEB
 33303                           fsr0h	equ	0xFEA
 33304                           fsr0l	equ	0xFE9
 33305                           wreg	equ	0xFE8
 33306                           indf1	equ	0xFE7
 33307                           postinc1	equ	0xFE6
 33308                           postdec1	equ	0xFE5
 33309                           plusw1	equ	0xFE3
 33310                           fsr1h	equ	0xFE2
 33311                           fsr1l	equ	0xFE1
 33312                           indf2	equ	0xFDF
 33313                           postinc2	equ	0xFDE
 33314                           postdec2	equ	0xFDD
 33315                           plusw2	equ	0xFDB
 33316                           fsr2h	equ	0xFDA
 33317                           fsr2l	equ	0xFD9
 33318                           status	equ	0xFD8
 33319                           
 33320 ;; *************** function _GenerateEvt *****************
 33321 ;; Defined at:
 33322 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33323 ;; Parameters:    Size  Location     Type
 33324 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 33325 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33326 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33327 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 33328 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 33329 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33330 ;; Auto vars:     Size  Location     Type
 33331 ;;  EventStatus     1   31[BANK0 ] enum E7727
 33332 ;; Return value:  Size  Location     Type
 33333 ;;                  1    wreg      enum E7699
 33334 ;; Registers used:
 33335 ;;		wreg, fsr2l, fsr2h, status,2
 33336 ;; Tracked objects:
 33337 ;;		On entry : 0/0
 33338 ;;		On exit  : 0/0
 33339 ;;		Unchanged: 0/0
 33340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33344 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33345 ;;Total ram usage:        3 bytes
 33346 ;; Hardware stack levels used:    1
 33347 ;; Hardware stack levels required when called:   11
 33348 ;; This function calls:
 33349 ;;		Nothing
 33350 ;; This function is called by:
 33351 ;;		_I2c_ReadData
 33352 ;;		_CheckModem
 33353 ;;		_TurnOnModem
 33354 ;;		_ConfigureModem
 33355 ;;		_ModemEvtParser
 33356 ;;		_GetSmsSm
 33357 ;;		_Mdm_RequestSmsData
 33358 ;;		_I2cSlv_SendI2cMsg
 33359 ;;		_I2cSlv_ReceiveI2cMsg
 33360 ;;		_RiSm
 33361 ;;		_Mdm_SendSmsData
 33362 ;;		_MdmHttp_InitGprsNetwork
 33363 ;;		_MdmHttp_GetMethod
 33364 ;;		_Alarm
 33365 ;; This function uses a non-reentrant model
 33366 ;;
 33367                           
 33368                           	psect	text157
 33369  0062BC                     __ptext157:
 33370                           	opt stack 0
 33371  0062BC                     _GenerateEvt:
 33372                           	opt stack 13
 33373                           
 33374                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33375                           
 33376                           ; BSR set to: 0
 33377                           ;incstack = 0
 33378  0062BC  0E00               	movlw	0
 33379  0062BE  0100               	movlb	0	; () banked
 33380  0062C0  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 33381                           
 33382                           ; BSR set to: 0
 33383                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33384  0062C2  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 33385  0062C6  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 33386  0062CA  0E02               	movlw	2
 33387  0062CC  6EDF               	movwf	indf2,c
 33388                           
 33389                           ; BSR set to: 0
 33390                           ;os_ser.c: 83: EventStatus = EventSent;
 33391  0062CE  0E02               	movlw	2
 33392  0062D0  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 33393  0062D2  0012               	return	
 33394  0062D4                     __end_of_GenerateEvt:
 33395                           	opt stack 0
 33396                           tosu	equ	0xFFF
 33397                           tosh	equ	0xFFE
 33398                           tosl	equ	0xFFD
 33399                           pclath	equ	0xFFA
 33400                           tblptru	equ	0xFF8
 33401                           tblptrh	equ	0xFF7
 33402                           tblptrl	equ	0xFF6
 33403                           tablat	equ	0xFF5
 33404                           prodh	equ	0xFF4
 33405                           prodl	equ	0xFF3
 33406                           intcon	equ	0xFF2
 33407                           intcon2	equ	0xFF1
 33408                           intcon3	equ	0xFF0
 33409                           indf0	equ	0xFEF
 33410                           postinc0	equ	0xFEE
 33411                           plusw0	equ	0xFEB
 33412                           fsr0h	equ	0xFEA
 33413                           fsr0l	equ	0xFE9
 33414                           wreg	equ	0xFE8
 33415                           indf1	equ	0xFE7
 33416                           postinc1	equ	0xFE6
 33417                           postdec1	equ	0xFE5
 33418                           plusw1	equ	0xFE3
 33419                           fsr1h	equ	0xFE2
 33420                           fsr1l	equ	0xFE1
 33421                           indf2	equ	0xFDF
 33422                           postinc2	equ	0xFDE
 33423                           postdec2	equ	0xFDD
 33424                           plusw2	equ	0xFDB
 33425                           fsr2h	equ	0xFDA
 33426                           fsr2l	equ	0xFD9
 33427                           status	equ	0xFD8
 33428                           
 33429 ;; *************** function _EnableReceiver *****************
 33430 ;; Defined at:
 33431 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33432 ;; Parameters:    Size  Location     Type
 33433 ;;		None
 33434 ;; Auto vars:     Size  Location     Type
 33435 ;;		None
 33436 ;; Return value:  Size  Location     Type
 33437 ;;                  1    wreg      void 
 33438 ;; Registers used:
 33439 ;;		status,2, status,0
 33440 ;; Tracked objects:
 33441 ;;		On entry : 0/0
 33442 ;;		On exit  : 0/0
 33443 ;;		Unchanged: 0/0
 33444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33449 ;;Total ram usage:        0 bytes
 33450 ;; Hardware stack levels used:    1
 33451 ;; Hardware stack levels required when called:   11
 33452 ;; This function calls:
 33453 ;;		Nothing
 33454 ;; This function is called by:
 33455 ;;		_I2c_ReadData
 33456 ;; This function uses a non-reentrant model
 33457 ;;
 33458                           
 33459                           	psect	text158
 33460  006440                     __ptext158:
 33461                           	opt stack 0
 33462  006440                     _EnableReceiver:
 33463                           	opt stack 14
 33464                           
 33465                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 33466                           
 33467                           ; BSR set to: 0
 33468                           ;incstack = 0
 33469  006440  8671               	bsf	3953,3,c	;volatile
 33470  006442  0012               	return		;funcret
 33471  006444                     __end_of_EnableReceiver:
 33472                           	opt stack 0
 33473                           tosu	equ	0xFFF
 33474                           tosh	equ	0xFFE
 33475                           tosl	equ	0xFFD
 33476                           pclath	equ	0xFFA
 33477                           tblptru	equ	0xFF8
 33478                           tblptrh	equ	0xFF7
 33479                           tblptrl	equ	0xFF6
 33480                           tablat	equ	0xFF5
 33481                           prodh	equ	0xFF4
 33482                           prodl	equ	0xFF3
 33483                           intcon	equ	0xFF2
 33484                           intcon2	equ	0xFF1
 33485                           intcon3	equ	0xFF0
 33486                           indf0	equ	0xFEF
 33487                           postinc0	equ	0xFEE
 33488                           plusw0	equ	0xFEB
 33489                           fsr0h	equ	0xFEA
 33490                           fsr0l	equ	0xFE9
 33491                           wreg	equ	0xFE8
 33492                           indf1	equ	0xFE7
 33493                           postinc1	equ	0xFE6
 33494                           postdec1	equ	0xFE5
 33495                           plusw1	equ	0xFE3
 33496                           fsr1h	equ	0xFE2
 33497                           fsr1l	equ	0xFE1
 33498                           indf2	equ	0xFDF
 33499                           postinc2	equ	0xFDE
 33500                           postdec2	equ	0xFDD
 33501                           plusw2	equ	0xFDB
 33502                           fsr2h	equ	0xFDA
 33503                           fsr2l	equ	0xFD9
 33504                           status	equ	0xFD8
 33505                           
 33506 ;; *************** function _CheckTxStatus *****************
 33507 ;; Defined at:
 33508 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33509 ;; Parameters:    Size  Location     Type
 33510 ;;		None
 33511 ;; Auto vars:     Size  Location     Type
 33512 ;;		None
 33513 ;; Return value:  Size  Location     Type
 33514 ;;                  1    wreg      unsigned char 
 33515 ;; Registers used:
 33516 ;;		wreg, status,2, status,0
 33517 ;; Tracked objects:
 33518 ;;		On entry : 0/0
 33519 ;;		On exit  : 0/0
 33520 ;;		Unchanged: 0/0
 33521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33526 ;;Total ram usage:        0 bytes
 33527 ;; Hardware stack levels used:    1
 33528 ;; Hardware stack levels required when called:   11
 33529 ;; This function calls:
 33530 ;;		Nothing
 33531 ;; This function is called by:
 33532 ;;		_I2c_WriteData
 33533 ;;		_I2c_ReadData
 33534 ;; This function uses a non-reentrant model
 33535 ;;
 33536                           
 33537                           	psect	text159
 33538  00640C                     __ptext159:
 33539                           	opt stack 0
 33540  00640C                     _CheckTxStatus:
 33541                           	opt stack 14
 33542                           
 33543                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 33544                           
 33545                           ;incstack = 0
 33546  00640C  4073               	rrncf	3955,w,c	;volatile
 33547  00640E  42E8               	rrncf	wreg,f,c
 33548  006410  0B3F               	andlw	63
 33549  006412  0B01               	andlw	1
 33550  006414  0012               	return	
 33551  006416                     __end_of_CheckTxStatus:
 33552                           	opt stack 0
 33553                           tosu	equ	0xFFF
 33554                           tosh	equ	0xFFE
 33555                           tosl	equ	0xFFD
 33556                           pclath	equ	0xFFA
 33557                           tblptru	equ	0xFF8
 33558                           tblptrh	equ	0xFF7
 33559                           tblptrl	equ	0xFF6
 33560                           tablat	equ	0xFF5
 33561                           prodh	equ	0xFF4
 33562                           prodl	equ	0xFF3
 33563                           intcon	equ	0xFF2
 33564                           intcon2	equ	0xFF1
 33565                           intcon3	equ	0xFF0
 33566                           indf0	equ	0xFEF
 33567                           postinc0	equ	0xFEE
 33568                           plusw0	equ	0xFEB
 33569                           fsr0h	equ	0xFEA
 33570                           fsr0l	equ	0xFE9
 33571                           wreg	equ	0xFE8
 33572                           indf1	equ	0xFE7
 33573                           postinc1	equ	0xFE6
 33574                           postdec1	equ	0xFE5
 33575                           plusw1	equ	0xFE3
 33576                           fsr1h	equ	0xFE2
 33577                           fsr1l	equ	0xFE1
 33578                           indf2	equ	0xFDF
 33579                           postinc2	equ	0xFDE
 33580                           postdec2	equ	0xFDD
 33581                           plusw2	equ	0xFDB
 33582                           fsr2h	equ	0xFDA
 33583                           fsr2l	equ	0xFD9
 33584                           status	equ	0xFD8
 33585                           
 33586 ;; *************** function _CheckAckStatus *****************
 33587 ;; Defined at:
 33588 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33589 ;; Parameters:    Size  Location     Type
 33590 ;;		None
 33591 ;; Auto vars:     Size  Location     Type
 33592 ;;		None
 33593 ;; Return value:  Size  Location     Type
 33594 ;;                  1    wreg      unsigned char 
 33595 ;; Registers used:
 33596 ;;		wreg, status,2, status,0
 33597 ;; Tracked objects:
 33598 ;;		On entry : 0/0
 33599 ;;		On exit  : 0/0
 33600 ;;		Unchanged: 0/0
 33601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33606 ;;Total ram usage:        0 bytes
 33607 ;; Hardware stack levels used:    1
 33608 ;; Hardware stack levels required when called:   11
 33609 ;; This function calls:
 33610 ;;		Nothing
 33611 ;; This function is called by:
 33612 ;;		_I2c_WriteData
 33613 ;;		_I2c_ReadData
 33614 ;; This function uses a non-reentrant model
 33615 ;;
 33616                           
 33617                           	psect	text160
 33618  006416                     __ptext160:
 33619                           	opt stack 0
 33620  006416                     _CheckAckStatus:
 33621                           	opt stack 14
 33622                           
 33623                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 33624                           
 33625                           ;incstack = 0
 33626  006416  4471               	rlncf	3953,w,c	;volatile
 33627  006418  46E8               	rlncf	wreg,f,c
 33628  00641A  0B03               	andlw	3
 33629  00641C  0B01               	andlw	1
 33630  00641E  0012               	return	
 33631  006420                     __end_of_CheckAckStatus:
 33632                           	opt stack 0
 33633                           tosu	equ	0xFFF
 33634                           tosh	equ	0xFFE
 33635                           tosl	equ	0xFFD
 33636                           pclath	equ	0xFFA
 33637                           tblptru	equ	0xFF8
 33638                           tblptrh	equ	0xFF7
 33639                           tblptrl	equ	0xFF6
 33640                           tablat	equ	0xFF5
 33641                           prodh	equ	0xFF4
 33642                           prodl	equ	0xFF3
 33643                           intcon	equ	0xFF2
 33644                           intcon2	equ	0xFF1
 33645                           intcon3	equ	0xFF0
 33646                           indf0	equ	0xFEF
 33647                           postinc0	equ	0xFEE
 33648                           plusw0	equ	0xFEB
 33649                           fsr0h	equ	0xFEA
 33650                           fsr0l	equ	0xFE9
 33651                           wreg	equ	0xFE8
 33652                           indf1	equ	0xFE7
 33653                           postinc1	equ	0xFE6
 33654                           postdec1	equ	0xFE5
 33655                           plusw1	equ	0xFE3
 33656                           fsr1h	equ	0xFE2
 33657                           fsr1l	equ	0xFE1
 33658                           indf2	equ	0xFDF
 33659                           postinc2	equ	0xFDE
 33660                           postdec2	equ	0xFDD
 33661                           plusw2	equ	0xFDB
 33662                           fsr2h	equ	0xFDA
 33663                           fsr2l	equ	0xFD9
 33664                           status	equ	0xFD8
 33665                           
 33666 ;; *************** function _LowPriorityIsr *****************
 33667 ;; Defined at:
 33668 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33669 ;; Parameters:    Size  Location     Type
 33670 ;;		None
 33671 ;; Auto vars:     Size  Location     Type
 33672 ;;		None
 33673 ;; Return value:  Size  Location     Type
 33674 ;;                  1    wreg      void 
 33675 ;; Registers used:
 33676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33677 ;; Tracked objects:
 33678 ;;		On entry : 0/0
 33679 ;;		On exit  : 0/0
 33680 ;;		Unchanged: 0/0
 33681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33684 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33685 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33686 ;;Total ram usage:       21 bytes
 33687 ;; Hardware stack levels used:    1
 33688 ;; Hardware stack levels required when called:   10
 33689 ;; This function calls:
 33690 ;;		_Tmr_Tmr2Isr
 33691 ;; This function is called by:
 33692 ;;		Interrupt level 1
 33693 ;; This function uses a non-reentrant model
 33694 ;;
 33695                           
 33696                           	psect	intcodelo
 33697  000018                     __pintcodelo:
 33698                           	opt stack 0
 33699  000018                     _LowPriorityIsr:
 33700                           	opt stack 8
 33701                           
 33702                           ;incstack = 0
 33703  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 33704  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 33705  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 33706  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 33707  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 33708  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 33709  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 33710  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 33711  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 33712  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 33713  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 33714  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 33715  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 33716  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 33717  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 33718  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 33719  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 33720  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 33721  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 33722  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 33723  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 33724  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 33725                           
 33726                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 33727  00006E  B29E               	btfsc	3998,1,c	;volatile
 33728                           
 33729                           ;irq.c: 259: {
 33730                           ;irq.c: 261: Tmr_Tmr2Isr();
 33731  000070  EC4E  F030         	call	_Tmr_Tmr2Isr	;wreg free
 33732  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 33733  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 33734  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 33735  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 33736  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 33737  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 33738  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 33739  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 33740  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 33741  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 33742  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 33743  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 33744  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 33745  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 33746  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 33747  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 33748  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 33749  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 33750  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 33751  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 33752  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 33753  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 33754  0000CA  0010               	retfie	
 33755  0000CC                     __end_of_LowPriorityIsr:
 33756                           	opt stack 0
 33757                           tosu	equ	0xFFF
 33758                           tosh	equ	0xFFE
 33759                           tosl	equ	0xFFD
 33760                           pclatu	equ	0xFFB
 33761                           pclath	equ	0xFFA
 33762                           tblptru	equ	0xFF8
 33763                           tblptrh	equ	0xFF7
 33764                           tblptrl	equ	0xFF6
 33765                           tablat	equ	0xFF5
 33766                           prodh	equ	0xFF4
 33767                           prodl	equ	0xFF3
 33768                           intcon	equ	0xFF2
 33769                           intcon2	equ	0xFF1
 33770                           intcon3	equ	0xFF0
 33771                           indf0	equ	0xFEF
 33772                           postinc0	equ	0xFEE
 33773                           plusw0	equ	0xFEB
 33774                           fsr0h	equ	0xFEA
 33775                           fsr0l	equ	0xFE9
 33776                           wreg	equ	0xFE8
 33777                           indf1	equ	0xFE7
 33778                           postinc1	equ	0xFE6
 33779                           postdec1	equ	0xFE5
 33780                           plusw1	equ	0xFE3
 33781                           fsr1h	equ	0xFE2
 33782                           fsr1l	equ	0xFE1
 33783                           bsr	equ	0xFE0
 33784                           indf2	equ	0xFDF
 33785                           postinc2	equ	0xFDE
 33786                           postdec2	equ	0xFDD
 33787                           plusw2	equ	0xFDB
 33788                           fsr2h	equ	0xFDA
 33789                           fsr2l	equ	0xFD9
 33790                           status	equ	0xFD8
 33791                           
 33792 ;; *************** function _Tmr_Tmr2Isr *****************
 33793 ;; Defined at:
 33794 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 33795 ;; Parameters:    Size  Location     Type
 33796 ;;		None
 33797 ;; Auto vars:     Size  Location     Type
 33798 ;;		None
 33799 ;; Return value:  Size  Location     Type
 33800 ;;                  1    wreg      void 
 33801 ;; Registers used:
 33802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33803 ;; Tracked objects:
 33804 ;;		On entry : 0/0
 33805 ;;		On exit  : 0/0
 33806 ;;		Unchanged: 0/0
 33807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33812 ;;Total ram usage:        0 bytes
 33813 ;; Hardware stack levels used:    1
 33814 ;; Hardware stack levels required when called:    9
 33815 ;; This function calls:
 33816 ;;		Absolute function
 33817 ;;		_Sch_SchmIntService
 33818 ;; This function is called by:
 33819 ;;		_LowPriorityIsr
 33820 ;; This function uses a non-reentrant model
 33821 ;;
 33822                           
 33823                           	psect	text162
 33824  00609C                     __ptext162:
 33825                           	opt stack 0
 33826  00609C                     _Tmr_Tmr2Isr:
 33827                           	opt stack 8
 33828                           
 33829                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 33830                           
 33831                           ;incstack = 0
 33832  00609C  929E               	bcf	3998,1,c	;volatile
 33833                           
 33834                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 33835  00609E  0102               	movlb	2	; () banked
 33836  0060A0  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 33837  0060A2  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33838  0060A4  B4D8               	btfsc	status,2,c
 33839  0060A6  0012               	return	
 33840                           
 33841                           ; BSR set to: 2
 33842                           ;tmr_drv.c: 315: {
 33843                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 33844  0060A8  D801               	call	i1u1513_28
 33845  0060AA  0012               	return	
 33846  0060AC                     i1u1513_28:
 33847  0060AC  0005               	push	
 33848  0060AE  6EFA               	movwf	pclath,c
 33849  0060B0  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 33850  0060B2  6EFD               	movwf	tosl,c
 33851  0060B4  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33852  0060B6  6EFE               	movwf	tosh,c
 33853  0060B8  50F8               	movf	tblptru,w,c
 33854  0060BA  6EFF               	movwf	tosu,c
 33855  0060BC  50FA               	movf	pclath,w,c
 33856  0060BE  0012               	return		;indir
 33857  0060C0                     __end_of_Tmr_Tmr2Isr:
 33858                           	opt stack 0
 33859                           tosu	equ	0xFFF
 33860                           tosh	equ	0xFFE
 33861                           tosl	equ	0xFFD
 33862                           pclatu	equ	0xFFB
 33863                           pclath	equ	0xFFA
 33864                           tblptru	equ	0xFF8
 33865                           tblptrh	equ	0xFF7
 33866                           tblptrl	equ	0xFF6
 33867                           tablat	equ	0xFF5
 33868                           prodh	equ	0xFF4
 33869                           prodl	equ	0xFF3
 33870                           intcon	equ	0xFF2
 33871                           intcon2	equ	0xFF1
 33872                           intcon3	equ	0xFF0
 33873                           indf0	equ	0xFEF
 33874                           postinc0	equ	0xFEE
 33875                           plusw0	equ	0xFEB
 33876                           fsr0h	equ	0xFEA
 33877                           fsr0l	equ	0xFE9
 33878                           wreg	equ	0xFE8
 33879                           indf1	equ	0xFE7
 33880                           postinc1	equ	0xFE6
 33881                           postdec1	equ	0xFE5
 33882                           plusw1	equ	0xFE3
 33883                           fsr1h	equ	0xFE2
 33884                           fsr1l	equ	0xFE1
 33885                           bsr	equ	0xFE0
 33886                           indf2	equ	0xFDF
 33887                           postinc2	equ	0xFDE
 33888                           postdec2	equ	0xFDD
 33889                           plusw2	equ	0xFDB
 33890                           fsr2h	equ	0xFDA
 33891                           fsr2l	equ	0xFD9
 33892                           status	equ	0xFD8
 33893                           
 33894 ;; *************** function _Sch_SchmIntService *****************
 33895 ;; Defined at:
 33896 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33897 ;; Parameters:    Size  Location     Type
 33898 ;;		None
 33899 ;; Auto vars:     Size  Location     Type
 33900 ;;		None
 33901 ;; Return value:  Size  Location     Type
 33902 ;;                  1    wreg      void 
 33903 ;; Registers used:
 33904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33905 ;; Tracked objects:
 33906 ;;		On entry : 0/0
 33907 ;;		On exit  : 0/0
 33908 ;;		Unchanged: 0/0
 33909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33914 ;;Total ram usage:        0 bytes
 33915 ;; Hardware stack levels used:    1
 33916 ;; Hardware stack levels required when called:    8
 33917 ;; This function calls:
 33918 ;;		_OsAlrm_ProcessOsAlarms
 33919 ;;		_UpdateOsCounters
 33920 ;;		_UpdateSchFlag
 33921 ;; This function is called by:
 33922 ;;		_SystemInit
 33923 ;;		_Tmr_Tmr2Isr
 33924 ;; This function uses a non-reentrant model
 33925 ;;
 33926                           
 33927                           	psect	text163
 33928  0063C6                     __ptext163:
 33929                           	opt stack 0
 33930  0063C6                     _Sch_SchmIntService:
 33931                           	opt stack 8
 33932                           
 33933                           ;os_sched.c: 217: UpdateSchFlag();
 33934                           
 33935                           ;incstack = 0
 33936  0063C6  EC04  F031         	call	_UpdateSchFlag	;wreg free
 33937                           
 33938                           ;os_sched.c: 219: UpdateOsCounters();
 33939  0063CA  ECD3  F031         	call	_UpdateOsCounters	;wreg free
 33940                           
 33941                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 33942  0063CE  EC6B  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 33943  0063D2  0012               	return		;funcret
 33944  0063D4                     __end_of_Sch_SchmIntService:
 33945                           	opt stack 0
 33946                           tosu	equ	0xFFF
 33947                           tosh	equ	0xFFE
 33948                           tosl	equ	0xFFD
 33949                           pclatu	equ	0xFFB
 33950                           pclath	equ	0xFFA
 33951                           tblptru	equ	0xFF8
 33952                           tblptrh	equ	0xFF7
 33953                           tblptrl	equ	0xFF6
 33954                           tablat	equ	0xFF5
 33955                           prodh	equ	0xFF4
 33956                           prodl	equ	0xFF3
 33957                           intcon	equ	0xFF2
 33958                           intcon2	equ	0xFF1
 33959                           intcon3	equ	0xFF0
 33960                           indf0	equ	0xFEF
 33961                           postinc0	equ	0xFEE
 33962                           plusw0	equ	0xFEB
 33963                           fsr0h	equ	0xFEA
 33964                           fsr0l	equ	0xFE9
 33965                           wreg	equ	0xFE8
 33966                           indf1	equ	0xFE7
 33967                           postinc1	equ	0xFE6
 33968                           postdec1	equ	0xFE5
 33969                           plusw1	equ	0xFE3
 33970                           fsr1h	equ	0xFE2
 33971                           fsr1l	equ	0xFE1
 33972                           bsr	equ	0xFE0
 33973                           indf2	equ	0xFDF
 33974                           postinc2	equ	0xFDE
 33975                           postdec2	equ	0xFDD
 33976                           plusw2	equ	0xFDB
 33977                           fsr2h	equ	0xFDA
 33978                           fsr2l	equ	0xFD9
 33979                           status	equ	0xFD8
 33980                           
 33981 ;; *************** function _UpdateSchFlag *****************
 33982 ;; Defined at:
 33983 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33984 ;; Parameters:    Size  Location     Type
 33985 ;;		None
 33986 ;; Auto vars:     Size  Location     Type
 33987 ;;		None
 33988 ;; Return value:  Size  Location     Type
 33989 ;;                  1    wreg      void 
 33990 ;; Registers used:
 33991 ;;		wreg, status,2, status,0
 33992 ;; Tracked objects:
 33993 ;;		On entry : 0/0
 33994 ;;		On exit  : 0/0
 33995 ;;		Unchanged: 0/0
 33996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34001 ;;Total ram usage:        0 bytes
 34002 ;; Hardware stack levels used:    1
 34003 ;; Hardware stack levels required when called:    4
 34004 ;; This function calls:
 34005 ;;		Nothing
 34006 ;; This function is called by:
 34007 ;;		_Sch_SchmIntService
 34008 ;; This function uses a non-reentrant model
 34009 ;;
 34010                           
 34011                           	psect	text164
 34012  006208                     __ptext164:
 34013                           	opt stack 0
 34014  006208                     _UpdateSchFlag:
 34015                           	opt stack 11
 34016                           
 34017                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 34018                           ;os_sched.c: 138: InterruptCounter++;
 34019                           
 34020                           ;incstack = 0
 34021  006208  0102               	movlb	2	; () banked
 34022  00620A  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 34023  00620C  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 34024                           
 34025                           ; BSR set to: 2
 34026                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 34027  00620E  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 34028  006210  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 34029  006212  B4D8               	btfsc	status,2,c
 34030  006214  0012               	return	
 34031                           
 34032                           ; BSR set to: 2
 34033                           ;os_sched.c: 141: {
 34034                           ;os_sched.c: 143: InterruptCounter = 0;
 34035  006216  0E00               	movlw	0
 34036  006218  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 34037  00621A  0E00               	movlw	0
 34038  00621C  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 34039                           
 34040                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 34041  00621E  0E00               	movlw	0
 34042  006220  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 34043  006222  0012               	return	
 34044  006224                     __end_of_UpdateSchFlag:
 34045                           	opt stack 0
 34046                           tosu	equ	0xFFF
 34047                           tosh	equ	0xFFE
 34048                           tosl	equ	0xFFD
 34049                           pclatu	equ	0xFFB
 34050                           pclath	equ	0xFFA
 34051                           tblptru	equ	0xFF8
 34052                           tblptrh	equ	0xFF7
 34053                           tblptrl	equ	0xFF6
 34054                           tablat	equ	0xFF5
 34055                           prodh	equ	0xFF4
 34056                           prodl	equ	0xFF3
 34057                           intcon	equ	0xFF2
 34058                           intcon2	equ	0xFF1
 34059                           intcon3	equ	0xFF0
 34060                           indf0	equ	0xFEF
 34061                           postinc0	equ	0xFEE
 34062                           plusw0	equ	0xFEB
 34063                           fsr0h	equ	0xFEA
 34064                           fsr0l	equ	0xFE9
 34065                           wreg	equ	0xFE8
 34066                           indf1	equ	0xFE7
 34067                           postinc1	equ	0xFE6
 34068                           postdec1	equ	0xFE5
 34069                           plusw1	equ	0xFE3
 34070                           fsr1h	equ	0xFE2
 34071                           fsr1l	equ	0xFE1
 34072                           bsr	equ	0xFE0
 34073                           indf2	equ	0xFDF
 34074                           postinc2	equ	0xFDE
 34075                           postdec2	equ	0xFDD
 34076                           plusw2	equ	0xFDB
 34077                           fsr2h	equ	0xFDA
 34078                           fsr2l	equ	0xFD9
 34079                           status	equ	0xFD8
 34080                           
 34081 ;; *************** function _UpdateOsCounters *****************
 34082 ;; Defined at:
 34083 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 34084 ;; Parameters:    Size  Location     Type
 34085 ;;		None
 34086 ;; Auto vars:     Size  Location     Type
 34087 ;;		None
 34088 ;; Return value:  Size  Location     Type
 34089 ;;                  1    wreg      void 
 34090 ;; Registers used:
 34091 ;;		wreg, status,2, status,0
 34092 ;; Tracked objects:
 34093 ;;		On entry : 0/0
 34094 ;;		On exit  : 0/0
 34095 ;;		Unchanged: 0/0
 34096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34101 ;;Total ram usage:        0 bytes
 34102 ;; Hardware stack levels used:    1
 34103 ;; Hardware stack levels required when called:    4
 34104 ;; This function calls:
 34105 ;;		Nothing
 34106 ;; This function is called by:
 34107 ;;		_Sch_SchmIntService
 34108 ;; This function uses a non-reentrant model
 34109 ;;
 34110                           
 34111                           	psect	text165
 34112  0063A6                     __ptext165:
 34113                           	opt stack 0
 34114  0063A6                     _UpdateOsCounters:
 34115                           	opt stack 11
 34116                           
 34117                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 34118                           
 34119                           ; BSR set to: 2
 34120                           ;incstack = 0
 34121  0063A6  0E01               	movlw	1
 34122  0063A8  0103               	movlb	3	; () banked
 34123  0063AA  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 34124  0063AC  0E00               	movlw	0
 34125  0063AE  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 34126  0063B0  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 34127  0063B2  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 34128                           
 34129                           ; BSR set to: 3
 34130  0063B4  0012               	return		;funcret
 34131  0063B6                     __end_of_UpdateOsCounters:
 34132                           	opt stack 0
 34133                           tosu	equ	0xFFF
 34134                           tosh	equ	0xFFE
 34135                           tosl	equ	0xFFD
 34136                           pclatu	equ	0xFFB
 34137                           pclath	equ	0xFFA
 34138                           tblptru	equ	0xFF8
 34139                           tblptrh	equ	0xFF7
 34140                           tblptrl	equ	0xFF6
 34141                           tablat	equ	0xFF5
 34142                           prodh	equ	0xFF4
 34143                           prodl	equ	0xFF3
 34144                           intcon	equ	0xFF2
 34145                           intcon2	equ	0xFF1
 34146                           intcon3	equ	0xFF0
 34147                           indf0	equ	0xFEF
 34148                           postinc0	equ	0xFEE
 34149                           plusw0	equ	0xFEB
 34150                           fsr0h	equ	0xFEA
 34151                           fsr0l	equ	0xFE9
 34152                           wreg	equ	0xFE8
 34153                           indf1	equ	0xFE7
 34154                           postinc1	equ	0xFE6
 34155                           postdec1	equ	0xFE5
 34156                           plusw1	equ	0xFE3
 34157                           fsr1h	equ	0xFE2
 34158                           fsr1l	equ	0xFE1
 34159                           bsr	equ	0xFE0
 34160                           indf2	equ	0xFDF
 34161                           postinc2	equ	0xFDE
 34162                           postdec2	equ	0xFDD
 34163                           plusw2	equ	0xFDB
 34164                           fsr2h	equ	0xFDA
 34165                           fsr2l	equ	0xFD9
 34166                           status	equ	0xFD8
 34167                           
 34168 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 34169 ;; Defined at:
 34170 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34171 ;; Parameters:    Size  Location     Type
 34172 ;;		None
 34173 ;; Auto vars:     Size  Location     Type
 34174 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 34175 ;; Return value:  Size  Location     Type
 34176 ;;                  1    wreg      void 
 34177 ;; Registers used:
 34178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 34179 ;; Tracked objects:
 34180 ;;		On entry : 0/0
 34181 ;;		On exit  : 0/0
 34182 ;;		Unchanged: 0/0
 34183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34186 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34187 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34188 ;;Total ram usage:       10 bytes
 34189 ;; Hardware stack levels used:    1
 34190 ;; Hardware stack levels required when called:    7
 34191 ;; This function calls:
 34192 ;;		_I2cDummyTx
 34193 ;;		_OsAlrm_ClearOsAlarm
 34194 ;;		i1___wmul
 34195 ;; This function is called by:
 34196 ;;		_Sch_SchmIntService
 34197 ;; This function uses a non-reentrant model
 34198 ;;
 34199                           
 34200                           	psect	text166
 34201  0022D6                     __ptext166:
 34202                           	opt stack 0
 34203  0022D6                     _OsAlrm_ProcessOsAlarms:
 34204                           	opt stack 8
 34205                           
 34206                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 34207                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 34208                           
 34209                           ; BSR set to: 3
 34210                           ;incstack = 0
 34211  0022D6  0E00               	movlw	0
 34212  0022D8  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 34213  0022DA  0E00               	movlw	0
 34214  0022DC  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 34215  0022DE  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 34216  0022E0  E105               	bnz	i1u1484_20
 34217  0022E2  0E14               	movlw	20
 34218  0022E4  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 34219  0022E6  B0D8               	btfsc	status,0,c
 34220  0022E8  0012               	return	
 34221  0022EA  D001               	goto	i1l742
 34222  0022EC                     i1u1484_20:
 34223  0022EC  0012               	return	
 34224  0022EE                     i1l742:
 34225                           
 34226                           ;os_alarms.c: 121: {
 34227                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 34228  0022EE  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34229  0022F2  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34230  0022F6  0E00               	movlw	0
 34231  0022F8  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34232  0022FA  0E0B               	movlw	11
 34233  0022FC  6E1B               	movwf	i1___wmul@multiplicand,c
 34234  0022FE  EC05  F030         	call	i1___wmul	;wreg free
 34235  002302  0E00               	movlw	low _OsAlarms
 34236  002304  2419               	addwf	?i1___wmul,w,c
 34237  002306  6ED9               	movwf	fsr2l,c
 34238  002308  0E06               	movlw	high _OsAlarms
 34239  00230A  201A               	addwfc	?i1___wmul+1,w,c
 34240  00230C  6EDA               	movwf	fsr2h,c
 34241  00230E  04DE               	decf	postinc2,w,c
 34242  002310  A4D8               	btfss	status,2,c
 34243  002312  D086               	goto	i1u1488_29
 34244                           
 34245                           ;os_alarms.c: 124: {
 34246                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 34247  002314  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34248  002318  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34249  00231C  0E00               	movlw	0
 34250  00231E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34251  002320  0E0B               	movlw	11
 34252  002322  6E1B               	movwf	i1___wmul@multiplicand,c
 34253  002324  EC05  F030         	call	i1___wmul	;wreg free
 34254  002328  0E01               	movlw	1
 34255  00232A  2619               	addwf	?i1___wmul,f,c
 34256  00232C  0E00               	movlw	0
 34257  00232E  221A               	addwfc	?i1___wmul+1,f,c
 34258  002330  0E00               	movlw	low _OsAlarms
 34259  002332  2419               	addwf	?i1___wmul,w,c
 34260  002334  6ED9               	movwf	fsr2l,c
 34261  002336  0E06               	movlw	high _OsAlarms
 34262  002338  201A               	addwfc	?i1___wmul+1,w,c
 34263  00233A  6EDA               	movwf	fsr2h,c
 34264  00233C  2ADE               	incf	postinc2,f,c
 34265  00233E  0E00               	movlw	0
 34266  002340  22DE               	addwfc	postinc2,f,c
 34267  002342  22DE               	addwfc	postinc2,f,c
 34268  002344  22DE               	addwfc	postinc2,f,c
 34269                           
 34270                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 34271  002346  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34272  00234A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34273  00234E  0E00               	movlw	0
 34274  002350  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34275  002352  0E0B               	movlw	11
 34276  002354  6E1B               	movwf	i1___wmul@multiplicand,c
 34277  002356  EC05  F030         	call	i1___wmul	;wreg free
 34278  00235A  0E05               	movlw	5
 34279  00235C  2619               	addwf	?i1___wmul,f,c
 34280  00235E  0E00               	movlw	0
 34281  002360  221A               	addwfc	?i1___wmul+1,f,c
 34282  002362  0E00               	movlw	low _OsAlarms
 34283  002364  2419               	addwf	?i1___wmul,w,c
 34284  002366  6ED9               	movwf	fsr2l,c
 34285  002368  0E06               	movlw	high _OsAlarms
 34286  00236A  201A               	addwfc	?i1___wmul+1,w,c
 34287  00236C  6EDA               	movwf	fsr2h,c
 34288  00236E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34289  002372  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34290  002376  0E00               	movlw	0
 34291  002378  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34292  00237A  0E0B               	movlw	11
 34293  00237C  6E1B               	movwf	i1___wmul@multiplicand,c
 34294  00237E  EC05  F030         	call	i1___wmul	;wreg free
 34295  002382  0E01               	movlw	1
 34296  002384  2619               	addwf	?i1___wmul,f,c
 34297  002386  0E00               	movlw	0
 34298  002388  221A               	addwfc	?i1___wmul+1,f,c
 34299  00238A  0E00               	movlw	low _OsAlarms
 34300  00238C  2419               	addwf	?i1___wmul,w,c
 34301  00238E  6EE1               	movwf	fsr1l,c
 34302  002390  0E06               	movlw	high _OsAlarms
 34303  002392  201A               	addwfc	?i1___wmul+1,w,c
 34304  002394  6EE2               	movwf	fsr1h,c
 34305  002396  50DE               	movf	postinc2,w,c
 34306  002398  5CE6               	subwf	postinc1,w,c
 34307  00239A  50DE               	movf	postinc2,w,c
 34308  00239C  58E6               	subwfb	postinc1,w,c
 34309  00239E  50DE               	movf	postinc2,w,c
 34310  0023A0  58E6               	subwfb	postinc1,w,c
 34311  0023A2  50DE               	movf	postinc2,w,c
 34312  0023A4  58E6               	subwfb	postinc1,w,c
 34313  0023A6  A0D8               	btfss	status,0,c
 34314  0023A8  D03B               	goto	i1u1488_29
 34315                           
 34316                           ;os_alarms.c: 129: {
 34317                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 34318  0023AA  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 34319  0023AC  EC23  F02A         	call	_OsAlrm_ClearOsAlarm
 34320                           
 34321                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 34322  0023B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34323  0023B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34324  0023B8  0E00               	movlw	0
 34325  0023BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34326  0023BC  0E0B               	movlw	11
 34327  0023BE  6E1B               	movwf	i1___wmul@multiplicand,c
 34328  0023C0  EC05  F030         	call	i1___wmul	;wreg free
 34329  0023C4  0E09               	movlw	9
 34330  0023C6  2619               	addwf	?i1___wmul,f,c
 34331  0023C8  0E00               	movlw	0
 34332  0023CA  221A               	addwfc	?i1___wmul+1,f,c
 34333  0023CC  0E00               	movlw	low _OsAlarms
 34334  0023CE  2419               	addwf	?i1___wmul,w,c
 34335  0023D0  6ED9               	movwf	fsr2l,c
 34336  0023D2  0E06               	movlw	high _OsAlarms
 34337  0023D4  201A               	addwfc	?i1___wmul+1,w,c
 34338  0023D6  6EDA               	movwf	fsr2h,c
 34339  0023D8  50DE               	movf	postinc2,w,c
 34340  0023DA  10DE               	iorwf	postinc2,w,c
 34341  0023DC  B4D8               	btfsc	status,2,c
 34342  0023DE  D020               	goto	i1u1488_29
 34343                           
 34344                           ;os_alarms.c: 134: {
 34345                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 34346  0023E0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 34347  0023E4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 34348  0023E8  0E00               	movlw	0
 34349  0023EA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 34350  0023EC  0E0B               	movlw	11
 34351  0023EE  6E1B               	movwf	i1___wmul@multiplicand,c
 34352  0023F0  EC05  F030         	call	i1___wmul	;wreg free
 34353  0023F4  0E09               	movlw	9
 34354  0023F6  2619               	addwf	?i1___wmul,f,c
 34355  0023F8  0E00               	movlw	0
 34356  0023FA  221A               	addwfc	?i1___wmul+1,f,c
 34357  0023FC  0E00               	movlw	low _OsAlarms
 34358  0023FE  2419               	addwf	?i1___wmul,w,c
 34359  002400  6ED9               	movwf	fsr2l,c
 34360  002402  0E06               	movlw	high _OsAlarms
 34361  002404  201A               	addwfc	?i1___wmul+1,w,c
 34362  002406  6EDA               	movwf	fsr2h,c
 34363  002408  D801               	call	i1u1488_28
 34364  00240A  D00A               	goto	i1u1488_29
 34365  00240C                     i1u1488_28:
 34366  00240C  0005               	push	
 34367  00240E  6EFA               	movwf	pclath,c
 34368  002410  50DE               	movf	postinc2,w,c
 34369  002412  6EFD               	movwf	tosl,c
 34370  002414  50DE               	movf	postinc2,w,c
 34371  002416  6EFE               	movwf	tosh,c
 34372  002418  50F8               	movf	tblptru,w,c
 34373  00241A  6EFF               	movwf	tosu,c
 34374  00241C  50FA               	movf	pclath,w,c
 34375  00241E  0012               	return		;indir
 34376  002420                     i1u1488_29:
 34377  002420  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 34378  002422  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 34379  002424  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 34380  002426  E101               	bnz	i1l747
 34381  002428  D75C               	goto	L77
 34382  00242A                     i1l747:
 34383  00242A  0012               	return		;funcret
 34384  00242C                     __end_of_OsAlrm_ProcessOsAlarms:
 34385                           	opt stack 0
 34386                           tosu	equ	0xFFF
 34387                           tosh	equ	0xFFE
 34388                           tosl	equ	0xFFD
 34389                           pclatu	equ	0xFFB
 34390                           pclath	equ	0xFFA
 34391                           tblptru	equ	0xFF8
 34392                           tblptrh	equ	0xFF7
 34393                           tblptrl	equ	0xFF6
 34394                           tablat	equ	0xFF5
 34395                           prodh	equ	0xFF4
 34396                           prodl	equ	0xFF3
 34397                           intcon	equ	0xFF2
 34398                           intcon2	equ	0xFF1
 34399                           intcon3	equ	0xFF0
 34400                           indf0	equ	0xFEF
 34401                           postinc0	equ	0xFEE
 34402                           plusw0	equ	0xFEB
 34403                           fsr0h	equ	0xFEA
 34404                           fsr0l	equ	0xFE9
 34405                           wreg	equ	0xFE8
 34406                           indf1	equ	0xFE7
 34407                           postinc1	equ	0xFE6
 34408                           postdec1	equ	0xFE5
 34409                           plusw1	equ	0xFE3
 34410                           fsr1h	equ	0xFE2
 34411                           fsr1l	equ	0xFE1
 34412                           bsr	equ	0xFE0
 34413                           indf2	equ	0xFDF
 34414                           postinc2	equ	0xFDE
 34415                           postdec2	equ	0xFDD
 34416                           plusw2	equ	0xFDB
 34417                           fsr2h	equ	0xFDA
 34418                           fsr2l	equ	0xFD9
 34419                           status	equ	0xFD8
 34420                           
 34421 ;; *************** function i1___wmul *****************
 34422 ;; Defined at:
 34423 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34424 ;; Parameters:    Size  Location     Type
 34425 ;;  multiplier      2   24[COMRAM] unsigned int 
 34426 ;;  multiplicand    2   26[COMRAM] unsigned int 
 34427 ;; Auto vars:     Size  Location     Type
 34428 ;;  __wmul          2   28[COMRAM] unsigned int 
 34429 ;; Return value:  Size  Location     Type
 34430 ;;                  2   24[COMRAM] unsigned int 
 34431 ;; Registers used:
 34432 ;;		wreg, status,2, status,0, prodl, prodh
 34433 ;; Tracked objects:
 34434 ;;		On entry : 0/0
 34435 ;;		On exit  : 0/0
 34436 ;;		Unchanged: 0/0
 34437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34442 ;;Total ram usage:        6 bytes
 34443 ;; Hardware stack levels used:    1
 34444 ;; Hardware stack levels required when called:    4
 34445 ;; This function calls:
 34446 ;;		Nothing
 34447 ;; This function is called by:
 34448 ;;		_OsAlrm_ProcessOsAlarms
 34449 ;; This function uses a non-reentrant model
 34450 ;;
 34451                           
 34452                           	psect	text167
 34453  00600A                     __ptext167:
 34454                           	opt stack 0
 34455  00600A                     i1___wmul:
 34456                           	opt stack 10
 34457                           
 34458                           ;incstack = 0
 34459  00600A  5019               	movf	i1___wmul@multiplier,w,c
 34460  00600C  021B               	mulwf	i1___wmul@multiplicand,c
 34461  00600E  CFF3 F01D          	movff	prodl,i1___wmul@product
 34462  006012  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 34463  006016  5019               	movf	i1___wmul@multiplier,w,c
 34464  006018  021C               	mulwf	i1___wmul@multiplicand+1,c
 34465  00601A  50F3               	movf	prodl,w,c
 34466  00601C  261E               	addwf	i1___wmul@product+1,f,c
 34467  00601E  501A               	movf	i1___wmul@multiplier+1,w,c
 34468  006020  021B               	mulwf	i1___wmul@multiplicand,c
 34469  006022  50F3               	movf	prodl,w,c
 34470  006024  261E               	addwf	i1___wmul@product+1,f,c
 34471  006026  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 34472  00602A  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 34473  00602E  0012               	return	
 34474  006030                     __end_ofi1___wmul:
 34475                           	opt stack 0
 34476                           tosu	equ	0xFFF
 34477                           tosh	equ	0xFFE
 34478                           tosl	equ	0xFFD
 34479                           pclatu	equ	0xFFB
 34480                           pclath	equ	0xFFA
 34481                           tblptru	equ	0xFF8
 34482                           tblptrh	equ	0xFF7
 34483                           tblptrl	equ	0xFF6
 34484                           tablat	equ	0xFF5
 34485                           prodh	equ	0xFF4
 34486                           prodl	equ	0xFF3
 34487                           intcon	equ	0xFF2
 34488                           intcon2	equ	0xFF1
 34489                           intcon3	equ	0xFF0
 34490                           indf0	equ	0xFEF
 34491                           postinc0	equ	0xFEE
 34492                           plusw0	equ	0xFEB
 34493                           fsr0h	equ	0xFEA
 34494                           fsr0l	equ	0xFE9
 34495                           wreg	equ	0xFE8
 34496                           indf1	equ	0xFE7
 34497                           postinc1	equ	0xFE6
 34498                           postdec1	equ	0xFE5
 34499                           plusw1	equ	0xFE3
 34500                           fsr1h	equ	0xFE2
 34501                           fsr1l	equ	0xFE1
 34502                           bsr	equ	0xFE0
 34503                           indf2	equ	0xFDF
 34504                           postinc2	equ	0xFDE
 34505                           postdec2	equ	0xFDD
 34506                           plusw2	equ	0xFDB
 34507                           fsr2h	equ	0xFDA
 34508                           fsr2l	equ	0xFD9
 34509                           status	equ	0xFD8
 34510                           
 34511 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 34512 ;; Defined at:
 34513 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34514 ;; Parameters:    Size  Location     Type
 34515 ;;  OsAlarmId       1    wreg     unsigned char 
 34516 ;; Auto vars:     Size  Location     Type
 34517 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 34518 ;; Return value:  Size  Location     Type
 34519 ;;                  1    wreg      void 
 34520 ;; Registers used:
 34521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34522 ;; Tracked objects:
 34523 ;;		On entry : 0/0
 34524 ;;		On exit  : 0/0
 34525 ;;		Unchanged: 0/0
 34526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34531 ;;Total ram usage:        1 bytes
 34532 ;; Hardware stack levels used:    1
 34533 ;; Hardware stack levels required when called:    4
 34534 ;; This function calls:
 34535 ;;		Nothing
 34536 ;; This function is called by:
 34537 ;;		_OsAlrm_ProcessOsAlarms
 34538 ;; This function uses a non-reentrant model
 34539 ;;
 34540                           
 34541                           	psect	text168
 34542  005446                     __ptext168:
 34543                           	opt stack 0
 34544  005446                     _OsAlrm_ClearOsAlarm:
 34545                           	opt stack 10
 34546                           
 34547                           ;incstack = 0
 34548                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 34549  005446  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 34550                           
 34551                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 34552  005448  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 34553  00544A  0D0B               	mullw	11
 34554  00544C  0E00               	movlw	low _OsAlarms
 34555  00544E  24F3               	addwf	prodl,w,c
 34556  005450  6ED9               	movwf	fsr2l,c
 34557  005452  0E06               	movlw	high _OsAlarms
 34558  005454  20F4               	addwfc	prodh,w,c
 34559  005456  6EDA               	movwf	fsr2h,c
 34560  005458  0E00               	movlw	0
 34561  00545A  6EDF               	movwf	indf2,c
 34562                           
 34563                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 34564  00545C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 34565  00545E  0D0B               	mullw	11
 34566  005460  0E01               	movlw	1
 34567  005462  26F3               	addwf	prodl,f,c
 34568  005464  0E00               	movlw	0
 34569  005466  22F4               	addwfc	prodh,f,c
 34570  005468  0E00               	movlw	low _OsAlarms
 34571  00546A  24F3               	addwf	prodl,w,c
 34572  00546C  6ED9               	movwf	fsr2l,c
 34573  00546E  0E06               	movlw	high _OsAlarms
 34574  005470  20F4               	addwfc	prodh,w,c
 34575  005472  6EDA               	movwf	fsr2h,c
 34576  005474  6ADE               	clrf	postinc2,c
 34577  005476  6ADE               	clrf	postinc2,c
 34578  005478  6ADE               	clrf	postinc2,c
 34579  00547A  6ADD               	clrf	postdec2,c
 34580                           
 34581                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 34582  00547C  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 34583  00547E  0D0B               	mullw	11
 34584  005480  0E05               	movlw	5
 34585  005482  26F3               	addwf	prodl,f,c
 34586  005484  0E00               	movlw	0
 34587  005486  22F4               	addwfc	prodh,f,c
 34588  005488  0E00               	movlw	low _OsAlarms
 34589  00548A  24F3               	addwf	prodl,w,c
 34590  00548C  6ED9               	movwf	fsr2l,c
 34591  00548E  0E06               	movlw	high _OsAlarms
 34592  005490  20F4               	addwfc	prodh,w,c
 34593  005492  6EDA               	movwf	fsr2h,c
 34594  005494  6ADE               	clrf	postinc2,c
 34595  005496  6ADE               	clrf	postinc2,c
 34596  005498  6ADE               	clrf	postinc2,c
 34597  00549A  6ADD               	clrf	postdec2,c
 34598  00549C  0012               	return		;funcret
 34599  00549E                     __end_of_OsAlrm_ClearOsAlarm:
 34600                           	opt stack 0
 34601                           tosu	equ	0xFFF
 34602                           tosh	equ	0xFFE
 34603                           tosl	equ	0xFFD
 34604                           pclatu	equ	0xFFB
 34605                           pclath	equ	0xFFA
 34606                           tblptru	equ	0xFF8
 34607                           tblptrh	equ	0xFF7
 34608                           tblptrl	equ	0xFF6
 34609                           tablat	equ	0xFF5
 34610                           prodh	equ	0xFF4
 34611                           prodl	equ	0xFF3
 34612                           intcon	equ	0xFF2
 34613                           intcon2	equ	0xFF1
 34614                           intcon3	equ	0xFF0
 34615                           indf0	equ	0xFEF
 34616                           postinc0	equ	0xFEE
 34617                           plusw0	equ	0xFEB
 34618                           fsr0h	equ	0xFEA
 34619                           fsr0l	equ	0xFE9
 34620                           wreg	equ	0xFE8
 34621                           indf1	equ	0xFE7
 34622                           postinc1	equ	0xFE6
 34623                           postdec1	equ	0xFE5
 34624                           plusw1	equ	0xFE3
 34625                           fsr1h	equ	0xFE2
 34626                           fsr1l	equ	0xFE1
 34627                           bsr	equ	0xFE0
 34628                           indf2	equ	0xFDF
 34629                           postinc2	equ	0xFDE
 34630                           postdec2	equ	0xFDD
 34631                           plusw2	equ	0xFDB
 34632                           fsr2h	equ	0xFDA
 34633                           fsr2l	equ	0xFD9
 34634                           status	equ	0xFD8
 34635                           
 34636 ;; *************** function _I2cDummyTx *****************
 34637 ;; Defined at:
 34638 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34639 ;; Parameters:    Size  Location     Type
 34640 ;;		None
 34641 ;; Auto vars:     Size  Location     Type
 34642 ;;		None
 34643 ;; Return value:  Size  Location     Type
 34644 ;;                  1    wreg      void 
 34645 ;; Registers used:
 34646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34647 ;; Tracked objects:
 34648 ;;		On entry : 0/0
 34649 ;;		On exit  : 0/0
 34650 ;;		Unchanged: 0/0
 34651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34656 ;;Total ram usage:        0 bytes
 34657 ;; Hardware stack levels used:    1
 34658 ;; Hardware stack levels required when called:    6
 34659 ;; This function calls:
 34660 ;;		i1_I2cSlv_SendI2cMsg
 34661 ;; This function is called by:
 34662 ;;		_I2cSlv_MainTask
 34663 ;;		_OsAlrm_ProcessOsAlarms
 34664 ;; This function uses a non-reentrant model
 34665 ;;
 34666                           
 34667                           	psect	text169
 34668  006224                     __ptext169:
 34669                           	opt stack 0
 34670  006224                     _I2cDummyTx:
 34671                           	opt stack 8
 34672                           
 34673                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 34674                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 34675                           
 34676                           ;incstack = 0
 34677  006224  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 34678  006226  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 34679  006228  0E01               	movlw	high I2cDummyTx@DummyBuffer
 34680  00622A  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 34681  00622C  0E00               	movlw	0
 34682  00622E  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 34683  006230  0E01               	movlw	1
 34684  006232  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 34685  006234  EC84  F02E         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 34686                           
 34687                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 34688  006238  0E01               	movlw	1
 34689  00623A  0101               	movlb	1	; () banked
 34690  00623C  6FE9               	movwf	_I2cBusStatus& (0+255),b
 34691                           
 34692                           ; BSR set to: 1
 34693  00623E  0012               	return		;funcret
 34694  006240                     __end_of_I2cDummyTx:
 34695                           	opt stack 0
 34696                           tosu	equ	0xFFF
 34697                           tosh	equ	0xFFE
 34698                           tosl	equ	0xFFD
 34699                           pclatu	equ	0xFFB
 34700                           pclath	equ	0xFFA
 34701                           tblptru	equ	0xFF8
 34702                           tblptrh	equ	0xFF7
 34703                           tblptrl	equ	0xFF6
 34704                           tablat	equ	0xFF5
 34705                           prodh	equ	0xFF4
 34706                           prodl	equ	0xFF3
 34707                           intcon	equ	0xFF2
 34708                           intcon2	equ	0xFF1
 34709                           intcon3	equ	0xFF0
 34710                           indf0	equ	0xFEF
 34711                           postinc0	equ	0xFEE
 34712                           plusw0	equ	0xFEB
 34713                           fsr0h	equ	0xFEA
 34714                           fsr0l	equ	0xFE9
 34715                           wreg	equ	0xFE8
 34716                           indf1	equ	0xFE7
 34717                           postinc1	equ	0xFE6
 34718                           postdec1	equ	0xFE5
 34719                           plusw1	equ	0xFE3
 34720                           fsr1h	equ	0xFE2
 34721                           fsr1l	equ	0xFE1
 34722                           bsr	equ	0xFE0
 34723                           indf2	equ	0xFDF
 34724                           postinc2	equ	0xFDE
 34725                           postdec2	equ	0xFDD
 34726                           plusw2	equ	0xFDB
 34727                           fsr2h	equ	0xFDA
 34728                           fsr2l	equ	0xFD9
 34729                           status	equ	0xFD8
 34730                           
 34731 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 34732 ;; Defined at:
 34733 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34734 ;; Parameters:    Size  Location     Type
 34735 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 34736 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 34737 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 34738 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 34739 ;;  DataLenght      1   30[COMRAM] unsigned char 
 34740 ;; Auto vars:     Size  Location     Type
 34741 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 34742 ;; Return value:  Size  Location     Type
 34743 ;;                  1    wreg      unsigned char 
 34744 ;; Registers used:
 34745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34746 ;; Tracked objects:
 34747 ;;		On entry : 0/0
 34748 ;;		On exit  : 0/0
 34749 ;;		Unchanged: 0/0
 34750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34754 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34755 ;;Total ram usage:        5 bytes
 34756 ;; Hardware stack levels used:    1
 34757 ;; Hardware stack levels required when called:    5
 34758 ;; This function calls:
 34759 ;;		i1_GenerateEvt
 34760 ;; This function is called by:
 34761 ;;		_I2cDummyTx
 34762 ;; This function uses a non-reentrant model
 34763 ;;
 34764                           
 34765                           	psect	text170
 34766  005D08                     __ptext170:
 34767                           	opt stack 0
 34768  005D08                     i1_I2cSlv_SendI2cMsg:
 34769                           	opt stack 8
 34770                           
 34771                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 34772                           
 34773                           ; BSR set to: 1
 34774                           ;incstack = 0
 34775  005D08  0E00               	movlw	0
 34776  005D0A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34777                           
 34778                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 34779  005D0C  0100               	movlb	0	; () banked
 34780  005D0E  05CF               	decf	_I2cComSts& (0+255),w,b
 34781  005D10  B4D8               	btfsc	status,2,c
 34782  005D12  D014               	goto	i1l1409
 34783                           
 34784                           ; BSR set to: 0
 34785                           ;i2c_slv.c: 257: {
 34786                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 34787  005D14  C01E  F39D         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 34788                           
 34789                           ; BSR set to: 0
 34790                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 34791  005D18  0E00               	movlw	0
 34792  005D1A  0103               	movlb	3	; () banked
 34793  005D1C  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 34794                           
 34795                           ; BSR set to: 3
 34796                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 34797  005D1E  C01F  F3A1         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 34798                           
 34799                           ; BSR set to: 3
 34800                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 34801  005D22  C01C  F39F         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 34802  005D26  C01D  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 34803                           
 34804                           ; BSR set to: 3
 34805                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 34806  005D2A  0ED9               	movlw	low _I2cWriteDataEvt
 34807  005D2C  6E19               	movwf	i1GenerateEvt@Event,c
 34808  005D2E  0E00               	movlw	high _I2cWriteDataEvt
 34809  005D30  6E1A               	movwf	i1GenerateEvt@Event+1,c
 34810  005D32  EC80  F031         	call	i1_GenerateEvt	;wreg free
 34811                           
 34812                           ;i2c_slv.c: 267: TxSts = 1u;
 34813  005D36  0E01               	movlw	1
 34814  005D38  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34815                           
 34816                           ;i2c_slv.c: 268: }
 34817  005D3A  0012               	return	
 34818  005D3C                     i1l1409:
 34819                           
 34820                           ;i2c_slv.c: 269: else
 34821                           ;i2c_slv.c: 270: {
 34822                           ;i2c_slv.c: 272: TxSts = 0u;
 34823  005D3C  0E00               	movlw	0
 34824  005D3E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34825  005D40  0012               	return	
 34826  005D42                     __end_ofi1_I2cSlv_SendI2cMsg:
 34827                           	opt stack 0
 34828                           tosu	equ	0xFFF
 34829                           tosh	equ	0xFFE
 34830                           tosl	equ	0xFFD
 34831                           pclatu	equ	0xFFB
 34832                           pclath	equ	0xFFA
 34833                           tblptru	equ	0xFF8
 34834                           tblptrh	equ	0xFF7
 34835                           tblptrl	equ	0xFF6
 34836                           tablat	equ	0xFF5
 34837                           prodh	equ	0xFF4
 34838                           prodl	equ	0xFF3
 34839                           intcon	equ	0xFF2
 34840                           intcon2	equ	0xFF1
 34841                           intcon3	equ	0xFF0
 34842                           indf0	equ	0xFEF
 34843                           postinc0	equ	0xFEE
 34844                           plusw0	equ	0xFEB
 34845                           fsr0h	equ	0xFEA
 34846                           fsr0l	equ	0xFE9
 34847                           wreg	equ	0xFE8
 34848                           indf1	equ	0xFE7
 34849                           postinc1	equ	0xFE6
 34850                           postdec1	equ	0xFE5
 34851                           plusw1	equ	0xFE3
 34852                           fsr1h	equ	0xFE2
 34853                           fsr1l	equ	0xFE1
 34854                           bsr	equ	0xFE0
 34855                           indf2	equ	0xFDF
 34856                           postinc2	equ	0xFDE
 34857                           postdec2	equ	0xFDD
 34858                           plusw2	equ	0xFDB
 34859                           fsr2h	equ	0xFDA
 34860                           fsr2l	equ	0xFD9
 34861                           status	equ	0xFD8
 34862                           
 34863 ;; *************** function i1_GenerateEvt *****************
 34864 ;; Defined at:
 34865 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34866 ;; Parameters:    Size  Location     Type
 34867 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 34868 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34869 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34870 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34871 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34872 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34873 ;; Auto vars:     Size  Location     Type
 34874 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 34875 ;; Return value:  Size  Location     Type
 34876 ;;                  1    wreg      enum E7699
 34877 ;; Registers used:
 34878 ;;		wreg, fsr2l, fsr2h, status,2
 34879 ;; Tracked objects:
 34880 ;;		On entry : 0/0
 34881 ;;		On exit  : 0/0
 34882 ;;		Unchanged: 0/0
 34883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34887 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34888 ;;Total ram usage:        3 bytes
 34889 ;; Hardware stack levels used:    1
 34890 ;; Hardware stack levels required when called:    4
 34891 ;; This function calls:
 34892 ;;		Nothing
 34893 ;; This function is called by:
 34894 ;;		i1_I2cSlv_SendI2cMsg
 34895 ;; This function uses a non-reentrant model
 34896 ;;
 34897                           
 34898                           	psect	text171
 34899  006300                     __ptext171:
 34900                           	opt stack 0
 34901  006300                     i1_GenerateEvt:
 34902                           	opt stack 8
 34903                           
 34904                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34905                           
 34906                           ;incstack = 0
 34907  006300  0E00               	movlw	0
 34908  006302  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34909                           
 34910                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34911  006304  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 34912  006308  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 34913  00630C  0E02               	movlw	2
 34914  00630E  6EDF               	movwf	indf2,c
 34915                           
 34916                           ;os_ser.c: 83: EventStatus = EventSent;
 34917  006310  0E02               	movlw	2
 34918  006312  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34919  006314  0012               	return	
 34920  006316                     __end_ofi1_GenerateEvt:
 34921                           	opt stack 0
 34922                           tosu	equ	0xFFF
 34923                           tosh	equ	0xFFE
 34924                           tosl	equ	0xFFD
 34925                           pclatu	equ	0xFFB
 34926                           pclath	equ	0xFFA
 34927                           tblptru	equ	0xFF8
 34928                           tblptrh	equ	0xFF7
 34929                           tblptrl	equ	0xFF6
 34930                           tablat	equ	0xFF5
 34931                           prodh	equ	0xFF4
 34932                           prodl	equ	0xFF3
 34933                           intcon	equ	0xFF2
 34934                           intcon2	equ	0xFF1
 34935                           intcon3	equ	0xFF0
 34936                           indf0	equ	0xFEF
 34937                           postinc0	equ	0xFEE
 34938                           plusw0	equ	0xFEB
 34939                           fsr0h	equ	0xFEA
 34940                           fsr0l	equ	0xFE9
 34941                           wreg	equ	0xFE8
 34942                           indf1	equ	0xFE7
 34943                           postinc1	equ	0xFE6
 34944                           postdec1	equ	0xFE5
 34945                           plusw1	equ	0xFE3
 34946                           fsr1h	equ	0xFE2
 34947                           fsr1l	equ	0xFE1
 34948                           bsr	equ	0xFE0
 34949                           indf2	equ	0xFDF
 34950                           postinc2	equ	0xFDE
 34951                           postdec2	equ	0xFDD
 34952                           plusw2	equ	0xFDB
 34953                           fsr2h	equ	0xFDA
 34954                           fsr2l	equ	0xFD9
 34955                           status	equ	0xFD8
 34956                           
 34957 ;; *************** function _HighPriorityIsr *****************
 34958 ;; Defined at:
 34959 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34960 ;; Parameters:    Size  Location     Type
 34961 ;;		None
 34962 ;; Auto vars:     Size  Location     Type
 34963 ;;		None
 34964 ;; Return value:  Size  Location     Type
 34965 ;;                  1    wreg      void 
 34966 ;; Registers used:
 34967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34968 ;; Tracked objects:
 34969 ;;		On entry : 0/0
 34970 ;;		On exit  : 0/0
 34971 ;;		Unchanged: 0/0
 34972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34975 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34976 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34977 ;;Total ram usage:       18 bytes
 34978 ;; Hardware stack levels used:    1
 34979 ;; Hardware stack levels required when called:    3
 34980 ;; This function calls:
 34981 ;;		_Mcu_Int0Isr
 34982 ;;		_Mcu_Int1Isr
 34983 ;;		_Rtcc_RtcIsr
 34984 ;;		_Uart_Uart1RxIsr
 34985 ;; This function is called by:
 34986 ;;		Interrupt level 2
 34987 ;; This function uses a non-reentrant model
 34988 ;;
 34989                           
 34990                           	psect	intcode
 34991  000008                     __pintcode:
 34992                           	opt stack 0
 34993  000008                     _HighPriorityIsr:
 34994                           	opt stack 8
 34995                           
 34996                           ;incstack = 0
 34997  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34998  00000A  EF25  F021         	goto	int_func
 34999                           tosu	equ	0xFFF
 35000                           tosh	equ	0xFFE
 35001                           tosl	equ	0xFFD
 35002                           pclatu	equ	0xFFB
 35003                           pclath	equ	0xFFA
 35004                           tblptru	equ	0xFF8
 35005                           tblptrh	equ	0xFF7
 35006                           tblptrl	equ	0xFF6
 35007                           tablat	equ	0xFF5
 35008                           prodh	equ	0xFF4
 35009                           prodl	equ	0xFF3
 35010                           intcon	equ	0xFF2
 35011                           intcon2	equ	0xFF1
 35012                           intcon3	equ	0xFF0
 35013                           indf0	equ	0xFEF
 35014                           postinc0	equ	0xFEE
 35015                           plusw0	equ	0xFEB
 35016                           fsr0h	equ	0xFEA
 35017                           fsr0l	equ	0xFE9
 35018                           wreg	equ	0xFE8
 35019                           indf1	equ	0xFE7
 35020                           postinc1	equ	0xFE6
 35021                           postdec1	equ	0xFE5
 35022                           plusw1	equ	0xFE3
 35023                           fsr1h	equ	0xFE2
 35024                           fsr1l	equ	0xFE1
 35025                           bsr	equ	0xFE0
 35026                           indf2	equ	0xFDF
 35027                           postinc2	equ	0xFDE
 35028                           postdec2	equ	0xFDD
 35029                           plusw2	equ	0xFDB
 35030                           fsr2h	equ	0xFDA
 35031                           fsr2l	equ	0xFD9
 35032                           status	equ	0xFD8
 35033                           
 35034                           	psect	intcode_body
 35035  00424A                     __pintcode_body:
 35036                           	opt stack 8
 35037  00424A                     int_func:
 35038                           	opt stack 8
 35039  00424A  CFFA F007          	movff	pclath,??_HighPriorityIsr
 35040  00424E  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 35041  004252  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 35042  004256  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 35043  00425A  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 35044  00425E  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 35045  004262  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 35046  004266  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 35047  00426A  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 35048  00426E  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 35049  004272  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 35050  004276  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 35051  00427A  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 35052  00427E  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 35053  004282  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 35054  004286  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 35055  00428A  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 35056  00428E  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 35057                           
 35058                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 35059  004292  B2F2               	btfsc	intcon,1,c	;volatile
 35060                           
 35061                           ;irq.c: 158: {
 35062                           ;irq.c: 160: Mcu_Int0Isr();
 35063  004294  EC26  F032         	call	_Mcu_Int0Isr	;wreg free
 35064                           
 35065                           ;irq.c: 161: }
 35066                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 35067  004298  B0F0               	btfsc	intcon3,0,c	;volatile
 35068                           
 35069                           ;irq.c: 167: {
 35070                           ;irq.c: 169: Mcu_Int1Isr();
 35071  00429A  EC24  F032         	call	_Mcu_Int1Isr	;wreg free
 35072                           
 35073                           ;irq.c: 170: }
 35074                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 35075  00429E  B0A4               	btfsc	4004,0,c	;volatile
 35076                           
 35077                           ;irq.c: 203: {
 35078                           ;irq.c: 205: Rtcc_RtcIsr();
 35079  0042A0  EC22  F032         	call	_Rtcc_RtcIsr	;wreg free
 35080                           
 35081                           ;irq.c: 206: }
 35082                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 35083  0042A4  BA9E               	btfsc	3998,5,c	;volatile
 35084                           
 35085                           ;irq.c: 212: {
 35086                           ;irq.c: 214: Uart_Uart1RxIsr();
 35087  0042A6  ECDB  F031         	call	_Uart_Uart1RxIsr	;wreg free
 35088  0042AA  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 35089  0042AE  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 35090  0042B2  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 35091  0042B6  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 35092  0042BA  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 35093  0042BE  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 35094  0042C2  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 35095  0042C6  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 35096  0042CA  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 35097  0042CE  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 35098  0042D2  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 35099  0042D6  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 35100  0042DA  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 35101  0042DE  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 35102  0042E2  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 35103  0042E6  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 35104  0042EA  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 35105  0042EE  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 35106  0042F2  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 35107  0042F4  0011               	retfie		f
 35108  0042F6                     __end_of_HighPriorityIsr:
 35109                           	opt stack 0
 35110                           tosu	equ	0xFFF
 35111                           tosh	equ	0xFFE
 35112                           tosl	equ	0xFFD
 35113                           pclatu	equ	0xFFB
 35114                           pclath	equ	0xFFA
 35115                           tblptru	equ	0xFF8
 35116                           tblptrh	equ	0xFF7
 35117                           tblptrl	equ	0xFF6
 35118                           tablat	equ	0xFF5
 35119                           prodh	equ	0xFF4
 35120                           prodl	equ	0xFF3
 35121                           intcon	equ	0xFF2
 35122                           intcon2	equ	0xFF1
 35123                           intcon3	equ	0xFF0
 35124                           indf0	equ	0xFEF
 35125                           postinc0	equ	0xFEE
 35126                           plusw0	equ	0xFEB
 35127                           fsr0h	equ	0xFEA
 35128                           fsr0l	equ	0xFE9
 35129                           wreg	equ	0xFE8
 35130                           indf1	equ	0xFE7
 35131                           postinc1	equ	0xFE6
 35132                           postdec1	equ	0xFE5
 35133                           plusw1	equ	0xFE3
 35134                           fsr1h	equ	0xFE2
 35135                           fsr1l	equ	0xFE1
 35136                           bsr	equ	0xFE0
 35137                           indf2	equ	0xFDF
 35138                           postinc2	equ	0xFDE
 35139                           postdec2	equ	0xFDD
 35140                           plusw2	equ	0xFDB
 35141                           fsr2h	equ	0xFDA
 35142                           fsr2l	equ	0xFD9
 35143                           status	equ	0xFD8
 35144                           
 35145 ;; *************** function _Uart_Uart1RxIsr *****************
 35146 ;; Defined at:
 35147 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 35148 ;; Parameters:    Size  Location     Type
 35149 ;;		None
 35150 ;; Auto vars:     Size  Location     Type
 35151 ;;		None
 35152 ;; Return value:  Size  Location     Type
 35153 ;;                  1    wreg      void 
 35154 ;; Registers used:
 35155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35156 ;; Tracked objects:
 35157 ;;		On entry : 0/0
 35158 ;;		On exit  : 0/0
 35159 ;;		Unchanged: 0/0
 35160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35165 ;;Total ram usage:        0 bytes
 35166 ;; Hardware stack levels used:    1
 35167 ;; Hardware stack levels required when called:    2
 35168 ;; This function calls:
 35169 ;;		_Uart_MdmGsmGprsReadService
 35170 ;; This function is called by:
 35171 ;;		_HighPriorityIsr
 35172 ;; This function uses a non-reentrant model
 35173 ;;
 35174                           
 35175                           	psect	text173
 35176  0063B6                     __ptext173:
 35177                           	opt stack 0
 35178  0063B6                     _Uart_Uart1RxIsr:
 35179                           	opt stack 8
 35180                           
 35181                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 35182                           ;uart_drv.c: 590: UartRxData = RCREG1;
 35183                           
 35184                           ;incstack = 0
 35185  0063B6  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 35186                           
 35187                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 35188  0063BA  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 35189  0063BE  0E01               	movlw	1
 35190  0063C0  ECC1  F01D         	call	_Uart_MdmGsmGprsReadService
 35191  0063C4  0012               	return		;funcret
 35192  0063C6                     __end_of_Uart_Uart1RxIsr:
 35193                           	opt stack 0
 35194                           tosu	equ	0xFFF
 35195                           tosh	equ	0xFFE
 35196                           tosl	equ	0xFFD
 35197                           pclatu	equ	0xFFB
 35198                           pclath	equ	0xFFA
 35199                           tblptru	equ	0xFF8
 35200                           tblptrh	equ	0xFF7
 35201                           tblptrl	equ	0xFF6
 35202                           tablat	equ	0xFF5
 35203                           prodh	equ	0xFF4
 35204                           prodl	equ	0xFF3
 35205                           intcon	equ	0xFF2
 35206                           intcon2	equ	0xFF1
 35207                           intcon3	equ	0xFF0
 35208                           indf0	equ	0xFEF
 35209                           postinc0	equ	0xFEE
 35210                           plusw0	equ	0xFEB
 35211                           fsr0h	equ	0xFEA
 35212                           fsr0l	equ	0xFE9
 35213                           wreg	equ	0xFE8
 35214                           indf1	equ	0xFE7
 35215                           postinc1	equ	0xFE6
 35216                           postdec1	equ	0xFE5
 35217                           plusw1	equ	0xFE3
 35218                           fsr1h	equ	0xFE2
 35219                           fsr1l	equ	0xFE1
 35220                           bsr	equ	0xFE0
 35221                           indf2	equ	0xFDF
 35222                           postinc2	equ	0xFDE
 35223                           postdec2	equ	0xFDD
 35224                           plusw2	equ	0xFDB
 35225                           fsr2h	equ	0xFDA
 35226                           fsr2l	equ	0xFD9
 35227                           status	equ	0xFD8
 35228                           
 35229 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 35230 ;; Defined at:
 35231 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 35232 ;; Parameters:    Size  Location     Type
 35233 ;;  Module          1    wreg     unsigned char 
 35234 ;;  UartData        1    3[COMRAM] unsigned char 
 35235 ;; Auto vars:     Size  Location     Type
 35236 ;;  Module          1    0[COMRAM] unsigned char 
 35237 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 35238 ;; Return value:  Size  Location     Type
 35239 ;;                  1    wreg      void 
 35240 ;; Registers used:
 35241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 35242 ;; Tracked objects:
 35243 ;;		On entry : 0/0
 35244 ;;		On exit  : 0/0
 35245 ;;		Unchanged: 0/0
 35246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35247 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35250 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35251 ;;Total ram usage:        3 bytes
 35252 ;; Hardware stack levels used:    1
 35253 ;; Hardware stack levels required when called:    1
 35254 ;; This function calls:
 35255 ;;		i2_GenerateEvt
 35256 ;; This function is called by:
 35257 ;;		_Uart_Uart1RxIsr
 35258 ;; This function uses a non-reentrant model
 35259 ;;
 35260                           
 35261                           	psect	text174
 35262  003B82                     __ptext174:
 35263                           	opt stack 0
 35264  003B82                     _Uart_MdmGsmGprsReadService:
 35265                           	opt stack 8
 35266                           
 35267                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 35268                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 35269                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 35270                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 35271                           
 35272                           ;incstack = 0
 35273  003B82  0E00               	movlw	0
 35274  003B84  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 35275  003B86  0E00               	movlw	0
 35276  003B88  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 35277                           
 35278                           ;uart_drv.c: 383: switch (RxState)
 35279  003B8A  D058               	goto	i2l680
 35280  003B8C                     
 35281                           ;uart_drv.c: 387: if (UartData == '\r')
 35282  003B8C  0E0D               	movlw	13
 35283  003B8E  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 35284  003B90  A4D8               	btfss	status,2,c
 35285  003B92  D003               	goto	i2l682
 35286                           
 35287                           ;uart_drv.c: 388: {
 35288                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 35289  003B94  0E01               	movlw	1
 35290  003B96  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 35291                           
 35292                           ;uart_drv.c: 391: }
 35293  003B98  0012               	return	
 35294  003B9A                     i2l682:
 35295                           
 35296                           ;uart_drv.c: 392: else
 35297                           ;uart_drv.c: 393: {
 35298                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 35299  003B9A  0E90               	movlw	144
 35300  003B9C  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35301  003B9E  0E01               	movlw	1
 35302  003BA0  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35303  003BA2  B0D8               	btfsc	status,0,c
 35304  003BA4  0012               	return	
 35305                           
 35306                           ;uart_drv.c: 395: {
 35307                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 35308  003BA6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 35309  003BA8  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35310  003BAA  6ED9               	movwf	fsr2l,c
 35311  003BAC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 35312  003BAE  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35313  003BB0  6EDA               	movwf	fsr2h,c
 35314  003BB2  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 35315                           
 35316                           ;uart_drv.c: 399: RxCounter++;
 35317  003BB6  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 35318  003BB8  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 35319                           
 35320                           ;uart_drv.c: 400: }
 35321                           ;uart_drv.c: 401: }
 35322                           ;uart_drv.c: 402: break;
 35323  003BBA  0012               	return	
 35324  003BBC                     
 35325                           ;uart_drv.c: 406: if (UartData == '\n')
 35326  003BBC  0E0A               	movlw	10
 35327  003BBE  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 35328  003BC0  A4D8               	btfss	status,2,c
 35329  003BC2  D035               	goto	i2l688
 35330                           
 35331                           ;uart_drv.c: 407: {
 35332                           ;uart_drv.c: 409: if (RxCounter > 0)
 35333  003BC4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35334  003BC6  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35335  003BC8  B4D8               	btfsc	status,2,c
 35336  003BCA  D031               	goto	i2l688
 35337                           
 35338                           ;uart_drv.c: 410: {
 35339                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 35340  003BCC  0E00               	movlw	0
 35341  003BCE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 35342  003BD0  0E00               	movlw	0
 35343  003BD2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 35344  003BD4  D010               	goto	i2l689
 35345  003BD6                     
 35346                           ;uart_drv.c: 413: {
 35347                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 35348  003BD6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 35349  003BD8  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35350  003BDA  6ED9               	movwf	fsr2l,c
 35351  003BDC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 35352  003BDE  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35353  003BE0  6EDA               	movwf	fsr2h,c
 35354  003BE2  0E58               	movlw	low _RxBuffer
 35355  003BE4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35356  003BE6  6EE1               	movwf	fsr1l,c
 35357  003BE8  0E0C               	movlw	high _RxBuffer
 35358  003BEA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35359  003BEC  6EE2               	movwf	fsr1h,c
 35360  003BEE  CFDF FFE7          	movff	indf2,indf1
 35361  003BF2  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 35362  003BF4  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 35363  003BF6                     i2l689:
 35364  003BF6  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 35365  003BF8  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 35366  003BFA  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 35367  003BFC  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 35368  003BFE  A0D8               	btfss	status,0,c
 35369  003C00  D7EA               	goto	i2l690
 35370                           
 35371                           ;uart_drv.c: 415: }
 35372                           ;uart_drv.c: 417: RxLen = RxCounter;
 35373  003C02  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 35374  003C06  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 35375                           
 35376                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 35377  003C0A  0E3C               	movlw	low _NewStringReceived
 35378  003C0C  6E01               	movwf	i2GenerateEvt@Event,c
 35379  003C0E  0E00               	movlw	high _NewStringReceived
 35380  003C10  6E02               	movwf	i2GenerateEvt@Event+1,c
 35381  003C12  EC8B  F031         	call	i2_GenerateEvt	;wreg free
 35382                           
 35383                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 35384  003C16  0E3B               	movlw	low _NewMdmEvtParserRequest
 35385  003C18  6E01               	movwf	i2GenerateEvt@Event,c
 35386  003C1A  0E00               	movlw	high _NewMdmEvtParserRequest
 35387  003C1C  6E02               	movwf	i2GenerateEvt@Event+1,c
 35388  003C1E  EC8B  F031         	call	i2_GenerateEvt	;wreg free
 35389                           
 35390                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 35391  003C22  0E3A               	movlw	low _NewStringMdmTerminal
 35392  003C24  6E01               	movwf	i2GenerateEvt@Event,c
 35393  003C26  0E00               	movlw	high _NewStringMdmTerminal
 35394  003C28  6E02               	movwf	i2GenerateEvt@Event+1,c
 35395  003C2A  EC8B  F031         	call	i2_GenerateEvt	;wreg free
 35396  003C2E                     i2l688:
 35397                           
 35398                           ;uart_drv.c: 427: }
 35399                           ;uart_drv.c: 429: RxState = ReadData;
 35400                           
 35401                           ;uart_drv.c: 424: else
 35402                           ;uart_drv.c: 425: {
 35403                           
 35404                           ;uart_drv.c: 422: }
 35405                           ;uart_drv.c: 423: }
 35406  003C2E  0E00               	movlw	0
 35407  003C30  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 35408                           
 35409                           ;uart_drv.c: 431: RxCounter = 0;
 35410  003C32  0E00               	movlw	0
 35411  003C34  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 35412  003C36  0E00               	movlw	0
 35413  003C38  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 35414                           
 35415                           ;uart_drv.c: 436: }
 35416                           
 35417                           ;uart_drv.c: 435: break;
 35418                           
 35419                           ;uart_drv.c: 434: default:
 35420                           
 35421                           ;uart_drv.c: 432: break;
 35422  003C3A  0012               	return	
 35423  003C3C                     i2l680:
 35424  003C3C  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 35425                           
 35426                           ; Switch size 1, requested type "space"
 35427                           ; Number of cases is 2, Range of values is 0 to 1
 35428                           ; switch strategies available:
 35429                           ; Name         Instructions Cycles
 35430                           ; simple_byte            7     4 (average)
 35431                           ;	Chosen strategy is simple_byte
 35432  003C3E  0A00               	xorlw	0	; case 0
 35433  003C40  B4D8               	btfsc	status,2,c
 35434  003C42  D7A4               	goto	i2l681
 35435  003C44  0A01               	xorlw	1	; case 1
 35436  003C46  A4D8               	btfss	status,2,c
 35437  003C48  0012               	return	
 35438  003C4A  D7B8               	goto	i2l686
 35439  003C4C                     __end_of_Uart_MdmGsmGprsReadService:
 35440                           	opt stack 0
 35441                           tosu	equ	0xFFF
 35442                           tosh	equ	0xFFE
 35443                           tosl	equ	0xFFD
 35444                           pclatu	equ	0xFFB
 35445                           pclath	equ	0xFFA
 35446                           tblptru	equ	0xFF8
 35447                           tblptrh	equ	0xFF7
 35448                           tblptrl	equ	0xFF6
 35449                           tablat	equ	0xFF5
 35450                           prodh	equ	0xFF4
 35451                           prodl	equ	0xFF3
 35452                           intcon	equ	0xFF2
 35453                           intcon2	equ	0xFF1
 35454                           intcon3	equ	0xFF0
 35455                           indf0	equ	0xFEF
 35456                           postinc0	equ	0xFEE
 35457                           plusw0	equ	0xFEB
 35458                           fsr0h	equ	0xFEA
 35459                           fsr0l	equ	0xFE9
 35460                           wreg	equ	0xFE8
 35461                           indf1	equ	0xFE7
 35462                           postinc1	equ	0xFE6
 35463                           postdec1	equ	0xFE5
 35464                           plusw1	equ	0xFE3
 35465                           fsr1h	equ	0xFE2
 35466                           fsr1l	equ	0xFE1
 35467                           bsr	equ	0xFE0
 35468                           indf2	equ	0xFDF
 35469                           postinc2	equ	0xFDE
 35470                           postdec2	equ	0xFDD
 35471                           plusw2	equ	0xFDB
 35472                           fsr2h	equ	0xFDA
 35473                           fsr2l	equ	0xFD9
 35474                           status	equ	0xFD8
 35475                           
 35476 ;; *************** function i2_GenerateEvt *****************
 35477 ;; Defined at:
 35478 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35479 ;; Parameters:    Size  Location     Type
 35480 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 35481 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 35482 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 35483 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 35484 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 35485 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 35486 ;; Auto vars:     Size  Location     Type
 35487 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 35488 ;; Return value:  Size  Location     Type
 35489 ;;                  1    wreg      enum E7699
 35490 ;; Registers used:
 35491 ;;		wreg, fsr2l, fsr2h, status,2
 35492 ;; Tracked objects:
 35493 ;;		On entry : 0/0
 35494 ;;		On exit  : 0/0
 35495 ;;		Unchanged: 0/0
 35496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35500 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35501 ;;Total ram usage:        3 bytes
 35502 ;; Hardware stack levels used:    1
 35503 ;; This function calls:
 35504 ;;		Nothing
 35505 ;; This function is called by:
 35506 ;;		_Uart_MdmGsmGprsReadService
 35507 ;; This function uses a non-reentrant model
 35508 ;;
 35509                           
 35510                           	psect	text175
 35511  006316                     __ptext175:
 35512                           	opt stack 0
 35513  006316                     i2_GenerateEvt:
 35514                           	opt stack 8
 35515                           
 35516                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 35517                           
 35518                           ;incstack = 0
 35519  006316  0E00               	movlw	0
 35520  006318  6E03               	movwf	i2GenerateEvt@EventStatus,c
 35521                           
 35522                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 35523  00631A  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 35524  00631E  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 35525  006322  0E02               	movlw	2
 35526  006324  6EDF               	movwf	indf2,c
 35527                           
 35528                           ;os_ser.c: 83: EventStatus = EventSent;
 35529  006326  0E02               	movlw	2
 35530  006328  6E03               	movwf	i2GenerateEvt@EventStatus,c
 35531  00632A  0012               	return	
 35532  00632C                     __end_ofi2_GenerateEvt:
 35533                           	opt stack 0
 35534                           tosu	equ	0xFFF
 35535                           tosh	equ	0xFFE
 35536                           tosl	equ	0xFFD
 35537                           pclatu	equ	0xFFB
 35538                           pclath	equ	0xFFA
 35539                           tblptru	equ	0xFF8
 35540                           tblptrh	equ	0xFF7
 35541                           tblptrl	equ	0xFF6
 35542                           tablat	equ	0xFF5
 35543                           prodh	equ	0xFF4
 35544                           prodl	equ	0xFF3
 35545                           intcon	equ	0xFF2
 35546                           intcon2	equ	0xFF1
 35547                           intcon3	equ	0xFF0
 35548                           indf0	equ	0xFEF
 35549                           postinc0	equ	0xFEE
 35550                           plusw0	equ	0xFEB
 35551                           fsr0h	equ	0xFEA
 35552                           fsr0l	equ	0xFE9
 35553                           wreg	equ	0xFE8
 35554                           indf1	equ	0xFE7
 35555                           postinc1	equ	0xFE6
 35556                           postdec1	equ	0xFE5
 35557                           plusw1	equ	0xFE3
 35558                           fsr1h	equ	0xFE2
 35559                           fsr1l	equ	0xFE1
 35560                           bsr	equ	0xFE0
 35561                           indf2	equ	0xFDF
 35562                           postinc2	equ	0xFDE
 35563                           postdec2	equ	0xFDD
 35564                           plusw2	equ	0xFDB
 35565                           fsr2h	equ	0xFDA
 35566                           fsr2l	equ	0xFD9
 35567                           status	equ	0xFD8
 35568                           
 35569 ;; *************** function _Rtcc_RtcIsr *****************
 35570 ;; Defined at:
 35571 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 35572 ;; Parameters:    Size  Location     Type
 35573 ;;		None
 35574 ;; Auto vars:     Size  Location     Type
 35575 ;;		None
 35576 ;; Return value:  Size  Location     Type
 35577 ;;                  1    wreg      void 
 35578 ;; Registers used:
 35579 ;;		wreg, status,2, status,0
 35580 ;; Tracked objects:
 35581 ;;		On entry : 0/0
 35582 ;;		On exit  : 0/0
 35583 ;;		Unchanged: 0/0
 35584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35589 ;;Total ram usage:        0 bytes
 35590 ;; Hardware stack levels used:    1
 35591 ;; This function calls:
 35592 ;;		Nothing
 35593 ;; This function is called by:
 35594 ;;		_HighPriorityIsr
 35595 ;; This function uses a non-reentrant model
 35596 ;;
 35597                           
 35598                           	psect	text176
 35599  006444                     __ptext176:
 35600                           	opt stack 0
 35601  006444                     _Rtcc_RtcIsr:
 35602                           	opt stack 10
 35603                           
 35604                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 35605                           
 35606                           ;incstack = 0
 35607  006444  90A4               	bcf	4004,0,c	;volatile
 35608  006446  0012               	return	
 35609  006448                     __end_of_Rtcc_RtcIsr:
 35610                           	opt stack 0
 35611                           tosu	equ	0xFFF
 35612                           tosh	equ	0xFFE
 35613                           tosl	equ	0xFFD
 35614                           pclatu	equ	0xFFB
 35615                           pclath	equ	0xFFA
 35616                           tblptru	equ	0xFF8
 35617                           tblptrh	equ	0xFF7
 35618                           tblptrl	equ	0xFF6
 35619                           tablat	equ	0xFF5
 35620                           prodh	equ	0xFF4
 35621                           prodl	equ	0xFF3
 35622                           intcon	equ	0xFF2
 35623                           intcon2	equ	0xFF1
 35624                           intcon3	equ	0xFF0
 35625                           indf0	equ	0xFEF
 35626                           postinc0	equ	0xFEE
 35627                           plusw0	equ	0xFEB
 35628                           fsr0h	equ	0xFEA
 35629                           fsr0l	equ	0xFE9
 35630                           wreg	equ	0xFE8
 35631                           indf1	equ	0xFE7
 35632                           postinc1	equ	0xFE6
 35633                           postdec1	equ	0xFE5
 35634                           plusw1	equ	0xFE3
 35635                           fsr1h	equ	0xFE2
 35636                           fsr1l	equ	0xFE1
 35637                           bsr	equ	0xFE0
 35638                           indf2	equ	0xFDF
 35639                           postinc2	equ	0xFDE
 35640                           postdec2	equ	0xFDD
 35641                           plusw2	equ	0xFDB
 35642                           fsr2h	equ	0xFDA
 35643                           fsr2l	equ	0xFD9
 35644                           status	equ	0xFD8
 35645                           
 35646 ;; *************** function _Mcu_Int1Isr *****************
 35647 ;; Defined at:
 35648 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35649 ;; Parameters:    Size  Location     Type
 35650 ;;		None
 35651 ;; Auto vars:     Size  Location     Type
 35652 ;;		None
 35653 ;; Return value:  Size  Location     Type
 35654 ;;                  1    wreg      void 
 35655 ;; Registers used:
 35656 ;;		wreg, status,2, status,0
 35657 ;; Tracked objects:
 35658 ;;		On entry : 0/0
 35659 ;;		On exit  : 0/0
 35660 ;;		Unchanged: 0/0
 35661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35666 ;;Total ram usage:        0 bytes
 35667 ;; Hardware stack levels used:    1
 35668 ;; This function calls:
 35669 ;;		Nothing
 35670 ;; This function is called by:
 35671 ;;		_HighPriorityIsr
 35672 ;; This function uses a non-reentrant model
 35673 ;;
 35674                           
 35675                           	psect	text177
 35676  006448                     __ptext177:
 35677                           	opt stack 0
 35678  006448                     _Mcu_Int1Isr:
 35679                           	opt stack 10
 35680                           
 35681                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 35682                           
 35683                           ;incstack = 0
 35684  006448  90F0               	bcf	intcon3,0,c	;volatile
 35685  00644A  0012               	return	
 35686  00644C                     __end_of_Mcu_Int1Isr:
 35687                           	opt stack 0
 35688                           tosu	equ	0xFFF
 35689                           tosh	equ	0xFFE
 35690                           tosl	equ	0xFFD
 35691                           pclatu	equ	0xFFB
 35692                           pclath	equ	0xFFA
 35693                           tblptru	equ	0xFF8
 35694                           tblptrh	equ	0xFF7
 35695                           tblptrl	equ	0xFF6
 35696                           tablat	equ	0xFF5
 35697                           prodh	equ	0xFF4
 35698                           prodl	equ	0xFF3
 35699                           intcon	equ	0xFF2
 35700                           intcon2	equ	0xFF1
 35701                           intcon3	equ	0xFF0
 35702                           indf0	equ	0xFEF
 35703                           postinc0	equ	0xFEE
 35704                           plusw0	equ	0xFEB
 35705                           fsr0h	equ	0xFEA
 35706                           fsr0l	equ	0xFE9
 35707                           wreg	equ	0xFE8
 35708                           indf1	equ	0xFE7
 35709                           postinc1	equ	0xFE6
 35710                           postdec1	equ	0xFE5
 35711                           plusw1	equ	0xFE3
 35712                           fsr1h	equ	0xFE2
 35713                           fsr1l	equ	0xFE1
 35714                           bsr	equ	0xFE0
 35715                           indf2	equ	0xFDF
 35716                           postinc2	equ	0xFDE
 35717                           postdec2	equ	0xFDD
 35718                           plusw2	equ	0xFDB
 35719                           fsr2h	equ	0xFDA
 35720                           fsr2l	equ	0xFD9
 35721                           status	equ	0xFD8
 35722                           
 35723 ;; *************** function _Mcu_Int0Isr *****************
 35724 ;; Defined at:
 35725 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35726 ;; Parameters:    Size  Location     Type
 35727 ;;		None
 35728 ;; Auto vars:     Size  Location     Type
 35729 ;;		None
 35730 ;; Return value:  Size  Location     Type
 35731 ;;                  1    wreg      void 
 35732 ;; Registers used:
 35733 ;;		wreg, status,2, status,0
 35734 ;; Tracked objects:
 35735 ;;		On entry : 0/0
 35736 ;;		On exit  : 0/0
 35737 ;;		Unchanged: 0/0
 35738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35743 ;;Total ram usage:        0 bytes
 35744 ;; Hardware stack levels used:    1
 35745 ;; This function calls:
 35746 ;;		Nothing
 35747 ;; This function is called by:
 35748 ;;		_HighPriorityIsr
 35749 ;; This function uses a non-reentrant model
 35750 ;;
 35751                           
 35752                           	psect	text178
 35753  00644C                     __ptext178:
 35754                           	opt stack 0
 35755  00644C                     _Mcu_Int0Isr:
 35756                           	opt stack 10
 35757                           
 35758                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 35759                           
 35760                           ;incstack = 0
 35761  00644C  92F2               	bcf	intcon,1,c	;volatile
 35762  00644E  0012               	return	
 35763  006450                     __end_of_Mcu_Int0Isr:
 35764                           	opt stack 0
 35765                           tosu	equ	0xFFF
 35766                           tosh	equ	0xFFE
 35767                           tosl	equ	0xFFD
 35768                           pclatu	equ	0xFFB
 35769                           pclath	equ	0xFFA
 35770                           tblptru	equ	0xFF8
 35771                           tblptrh	equ	0xFF7
 35772                           tblptrl	equ	0xFF6
 35773                           tablat	equ	0xFF5
 35774                           prodh	equ	0xFF4
 35775                           prodl	equ	0xFF3
 35776                           intcon	equ	0xFF2
 35777                           intcon2	equ	0xFF1
 35778                           intcon3	equ	0xFF0
 35779                           indf0	equ	0xFEF
 35780                           postinc0	equ	0xFEE
 35781                           plusw0	equ	0xFEB
 35782                           fsr0h	equ	0xFEA
 35783                           fsr0l	equ	0xFE9
 35784                           wreg	equ	0xFE8
 35785                           indf1	equ	0xFE7
 35786                           postinc1	equ	0xFE6
 35787                           postdec1	equ	0xFE5
 35788                           plusw1	equ	0xFE3
 35789                           fsr1h	equ	0xFE2
 35790                           fsr1l	equ	0xFE1
 35791                           bsr	equ	0xFE0
 35792                           indf2	equ	0xFDF
 35793                           postinc2	equ	0xFDE
 35794                           postdec2	equ	0xFDD
 35795                           plusw2	equ	0xFDB
 35796                           fsr2h	equ	0xFDA
 35797                           fsr2l	equ	0xFD9
 35798                           status	equ	0xFD8
 35799                           tosu	equ	0xFFF
 35800                           tosh	equ	0xFFE
 35801                           tosl	equ	0xFFD
 35802                           pclatu	equ	0xFFB
 35803                           pclath	equ	0xFFA
 35804                           tblptru	equ	0xFF8
 35805                           tblptrh	equ	0xFF7
 35806                           tblptrl	equ	0xFF6
 35807                           tablat	equ	0xFF5
 35808                           prodh	equ	0xFF4
 35809                           prodl	equ	0xFF3
 35810                           intcon	equ	0xFF2
 35811                           intcon2	equ	0xFF1
 35812                           intcon3	equ	0xFF0
 35813                           indf0	equ	0xFEF
 35814                           postinc0	equ	0xFEE
 35815                           plusw0	equ	0xFEB
 35816                           fsr0h	equ	0xFEA
 35817                           fsr0l	equ	0xFE9
 35818                           wreg	equ	0xFE8
 35819                           indf1	equ	0xFE7
 35820                           postinc1	equ	0xFE6
 35821                           postdec1	equ	0xFE5
 35822                           plusw1	equ	0xFE3
 35823                           fsr1h	equ	0xFE2
 35824                           fsr1l	equ	0xFE1
 35825                           bsr	equ	0xFE0
 35826                           indf2	equ	0xFDF
 35827                           postinc2	equ	0xFDE
 35828                           postdec2	equ	0xFDD
 35829                           plusw2	equ	0xFDB
 35830                           fsr2h	equ	0xFDA
 35831                           fsr2l	equ	0xFD9
 35832                           status	equ	0xFD8
 35833                           
 35834                           	psect	text179
 35835  000000                     __ptext179:
 35836                           	opt stack 0
 35837                           tosu	equ	0xFFF
 35838                           tosh	equ	0xFFE
 35839                           tosl	equ	0xFFD
 35840                           pclatu	equ	0xFFB
 35841                           pclath	equ	0xFFA
 35842                           tblptru	equ	0xFF8
 35843                           tblptrh	equ	0xFF7
 35844                           tblptrl	equ	0xFF6
 35845                           tablat	equ	0xFF5
 35846                           prodh	equ	0xFF4
 35847                           prodl	equ	0xFF3
 35848                           intcon	equ	0xFF2
 35849                           intcon2	equ	0xFF1
 35850                           intcon3	equ	0xFF0
 35851                           indf0	equ	0xFEF
 35852                           postinc0	equ	0xFEE
 35853                           plusw0	equ	0xFEB
 35854                           fsr0h	equ	0xFEA
 35855                           fsr0l	equ	0xFE9
 35856                           wreg	equ	0xFE8
 35857                           indf1	equ	0xFE7
 35858                           postinc1	equ	0xFE6
 35859                           postdec1	equ	0xFE5
 35860                           plusw1	equ	0xFE3
 35861                           fsr1h	equ	0xFE2
 35862                           fsr1l	equ	0xFE1
 35863                           bsr	equ	0xFE0
 35864                           indf2	equ	0xFDF
 35865                           postinc2	equ	0xFDE
 35866                           postdec2	equ	0xFDD
 35867                           plusw2	equ	0xFDB
 35868                           fsr2h	equ	0xFDA
 35869                           fsr2l	equ	0xFD9
 35870                           status	equ	0xFD8
 35871                           
 35872                           	psect	rparam
 35873  0000                     tosu	equ	0xFFF
 35874                           tosh	equ	0xFFE
 35875                           tosl	equ	0xFFD
 35876                           pclatu	equ	0xFFB
 35877                           pclath	equ	0xFFA
 35878                           tblptru	equ	0xFF8
 35879                           tblptrh	equ	0xFF7
 35880                           tblptrl	equ	0xFF6
 35881                           tablat	equ	0xFF5
 35882                           prodh	equ	0xFF4
 35883                           prodl	equ	0xFF3
 35884                           intcon	equ	0xFF2
 35885                           intcon2	equ	0xFF1
 35886                           intcon3	equ	0xFF0
 35887                           indf0	equ	0xFEF
 35888                           postinc0	equ	0xFEE
 35889                           plusw0	equ	0xFEB
 35890                           fsr0h	equ	0xFEA
 35891                           fsr0l	equ	0xFE9
 35892                           wreg	equ	0xFE8
 35893                           indf1	equ	0xFE7
 35894                           postinc1	equ	0xFE6
 35895                           postdec1	equ	0xFE5
 35896                           plusw1	equ	0xFE3
 35897                           fsr1h	equ	0xFE2
 35898                           fsr1l	equ	0xFE1
 35899                           bsr	equ	0xFE0
 35900                           indf2	equ	0xFDF
 35901                           postinc2	equ	0xFDE
 35902                           postdec2	equ	0xFDD
 35903                           plusw2	equ	0xFDB
 35904                           fsr2h	equ	0xFDA
 35905                           fsr2l	equ	0xFD9
 35906                           status	equ	0xFD8
 35907                           
 35908                           	psect	temp
 35909  000042                     btemp:
 35910                           	opt stack 0
 35911  000042                     	ds	1
 35912  0000                     int$flags	set	btemp
 35913  0000                     wtemp6	set	btemp+1
 35914                           tosu	equ	0xFFF
 35915                           tosh	equ	0xFFE
 35916                           tosl	equ	0xFFD
 35917                           pclatu	equ	0xFFB
 35918                           pclath	equ	0xFFA
 35919                           tblptru	equ	0xFF8
 35920                           tblptrh	equ	0xFF7
 35921                           tblptrl	equ	0xFF6
 35922                           tablat	equ	0xFF5
 35923                           prodh	equ	0xFF4
 35924                           prodl	equ	0xFF3
 35925                           intcon	equ	0xFF2
 35926                           intcon2	equ	0xFF1
 35927                           intcon3	equ	0xFF0
 35928                           indf0	equ	0xFEF
 35929                           postinc0	equ	0xFEE
 35930                           plusw0	equ	0xFEB
 35931                           fsr0h	equ	0xFEA
 35932                           fsr0l	equ	0xFE9
 35933                           wreg	equ	0xFE8
 35934                           indf1	equ	0xFE7
 35935                           postinc1	equ	0xFE6
 35936                           postdec1	equ	0xFE5
 35937                           plusw1	equ	0xFE3
 35938                           fsr1h	equ	0xFE2
 35939                           fsr1l	equ	0xFE1
 35940                           bsr	equ	0xFE0
 35941                           indf2	equ	0xFDF
 35942                           postinc2	equ	0xFDE
 35943                           postdec2	equ	0xFDD
 35944                           plusw2	equ	0xFDB
 35945                           fsr2h	equ	0xFDA
 35946                           fsr2l	equ	0xFD9
 35947                           status	equ	0xFD8


Data Sizes:
    Strings     394
    Constant    567
    Data        184
    BSS         2341
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      2     256
    BANK4           192      4     172
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    secondsAppTimer2@counter	PTR unsigned int  size(2) Largest target is 2
		 -> initGprsModem@modemCounter(BANK3[2]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), 

    blinkForSeconds@blinkTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@phone(BANK4[14]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), 
		 -> PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8951 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4613$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4613$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3066$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3056$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3056$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3032$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3032$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3032$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3032$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2533_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2533_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_30(CODE[12]), STR_29(CODE[19]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), 
		 -> STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> memoryPreamble(BANK3[4]), MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_Eeprom_Read
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer2->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _StringCompare->_GetCallerNumber
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_initFsm
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_InitializeTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  722737
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  718106
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  359146
                                              0 BANK3      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  358960
                                              0 BANK3      2     2      0
                                              0 BANK4      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59666
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59666
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42248
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    4118
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3573
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9891
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          25    25      0   97336
                                              4 BANK1      4     4      0
                        _ClearBuffer
                        _Eeprom_Read
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                    _blinkForSeconds
                            _initFsm
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   40589
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15474
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                   _secondsAppTimer2
 ---------------------------------------------------------------------------------
 (6) _secondsAppTimer2                                     9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   25078
                                              0 BANK1      3     3      0
                        _Eeprom_Read
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24146
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   12136
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_HangPhoneCall                                    0     0      0    2647
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70348
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11578
                                             48 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             37 BANK0     11     5      6
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8643
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13894
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteConstString                                3     1      2    2647
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    2045
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1445
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   17026
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9644
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9146
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _Led_SetLedStatus
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer2
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _Led_SetLedStatus
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer2
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      2     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      AC      14       89.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     98E       8        0.0%
DATA                 0      0     CAE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 20 09:44:36 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5446  
                              _USB_SD_Ptr FC35                 __size_of_Mdm_SetSmsFormat 0050  
                    __size_of_TurnOnModem 0046                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 61CC               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 2180  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 209C                                       l203 20A4  
                                     l205 20EC                                       l206 2112  
                                     l208 211A                                       l160 1FE0  
                                     l209 213A                                       l161 1EB6  
                                     l162 201E                                       l170 1F7E  
                                     l171 1F94                                       l163 1EC2  
                                     l315 442C                                       l323 43F8  
                                     l164 1F02                                       l316 43A2  
                                     l420 4A82                                       l500 4932  
                                     l173 1F98                                       l325 4412  
                                     l421 4AA2                                       l237 61D8  
                                     l174 1FA0                                       l166 1F10  
                                     l318 43AC                                       l422 4AAE  
             __end_of_USBStdGetDscHandler 2CE2                                       l510 4904  
                                     l502 48C4                                       l175 1FAC  
                                     l167 1F38                                       l319 43D2  
                                     l423 4ABA                                       l511 48F4  
                                     l503 48B4                                       l192 2144  
                                     l176 1FC2                                       l416 4ACE  
                                     l424 4AC6                                       l512 4918  
                                     l504 48DA                                       l520 585A  
                                     l193 2024                                       l169 1F4A  
                                     l417 4A74                                       l441 17EC  
                                     l513 48F8                                       l505 48B8  
                                     l521 5826                                       l194 217C  
                                     l418 4AFC                                       l442 15F4  
                                     l514 48FE                                       l506 48BE  
                                     l530 31C2                                       l195 2030  
                                     l179 1FCE                                       l419 4A7C  
                                     l523 5840                                       l531 3228  
                                     l196 2070                                       l700 5ABA  
                                     l444 163C                                       l532 31EE  
                                     l445 1684                                       l541 6196  
                                     l198 207E                                       l446 16CC  
                                     l199 2092                                       l631 29F8  
                                     l447 1714                                       l448 175C  
                                     l528 322E                                       l633 2A70  
                                     l625 2984                                       l449 17A4  
                                     l529 321A                                       l538 619A  
                                     l546 3CA4                                       l651 57AA  
                                     l707 5C20                                       l627 29A8  
                                     l715 5B94                                       l539 6192  
                                     l547 3CC0                                       l660 57CE  
                                     l652 57A4                                       l716 5B6A  
                                     l709 5C3A                                       l629 29D0  
                                     l718 5B82                                       l639 61BE  
                                     l832 5F5A                                       l844 3D78  
                                     l668 0C44                                       _BDT 000400  
                                     l790 61F4                                       l855 4EA8  
                                     l775 2E04                                       l864 4C00  
                                     l856 4E4E                                       l857 4EC2  
                                     l698 5A9E                                       l858 4E7E  
                                     l867 4C12                                       l982 255A  
                                     l983 242E                                       l985 2452  
                                     l987 246C                                       l988 24A0  
                                     l989 2512                                       l998 2536  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 42F6  
                          ??_Mdm_MainTask 00AA                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5DE2                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5B5E  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 242C  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 5944  
         InitGprsNetwork@GprsNetInitState 01EC                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 595C  
                                    l1110 56FC                               RiSm@Counter 02E0  
                                    l1031 392E                                      l1111 5710  
                                    l1032 3968                                      l1033 398E  
                                    l1009 5976                                      l1121 5768  
                                    l1027 39C6                                      l1035 39AE  
                                    l2003 5228                                      l1107 5722  
                                    l1220 0DE8                                      l1028 391E  
                                    l1052 1E88                                      l1060 1E5A  
                                    l1108 56E6                                      l1221 0E22  
                                    l1053 1DA2                                      l2005 522E  
                                    l1222 0E96                                      l1070 2B96  
                                    l1223 0E5E                                      l1071 2A8E  
                                    l1055 1EA2                                      l2104 5EEE  
                                    l1216 1078                                      l1056 1DD4  
                                    l1152 6096                                      l1136 6072  
                                    l2105 5EDC                                      l1233 1010  
                                    l1225 0F3E                                      l1217 0DD0  
                                    l2113 55D6                                      l1401 54E0  
                                    l1250 05F4                                      l1234 1054  
                                    l1226 0F78                                      l1074 2AAA  
                                    l1058 1E24                                      l2114 55A0  
                                    l1402 54A0                                      l2107 5EE2  
                                    l1219 10B0                                      l1227 0FB8  
                                    l1075 2AC2                                      l2211 5684  
                                    l1091 1B80                                      l2060 269E  
                                    l2108 5EE8                                      l1252 0AB6  
                                    l1260 07F2                                      l1228 0FBC  
                                    l2212 565A                                      l1092 19FE  
                                    l1156 5D6C                                      l2116 55B2  
                                    l1404 54DA                                      l2061 2580  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l2213 5680  
                                    l2117 55C4                                      l2062 26B4  
                                    l1270 096E                                      l1262 0856  
                                    l1254 0646                                      l1238 106E  
                                    l1078 2B34                                      l1414 5B58  
                                    l2063 25A8                                      l1263 0890  
                                    l1255 0680                                      l1095 1A1A  
                                    l2064 262C                                      l2224 5DA0  
                                    l1264 08CA                                      l1256 06BA  
                                    l1096 1AD0                                      l1440 379C  
                                    l2073 32EE                                      l2225 5D8C  
                                    l1249 0A54                                      l1265 090E  
                                    l1257 073E                                      l1097 1AF4  
                                    l1409 5C12                                      l1601 21CA  
                                    l3130 560E                                      l2074 3236  
                                    l2090 449E                                      l2218 5218  
                                    l1282 0A42                                      l1274 097E  
                                    l1258 06F6                                      l1442 37FA  
                                    l3050 437C                                      l3131 5606  
                                    l2075 330A                                      l2083 44C2  
                                    l2091 44AC                                      l2219 51D8  
                                    l1283 0A4A                                      l1275 09AA  
                                    l1419 6182                                      l1443 380E  
                                    l3043 5A36                                      l2403 041E  
                                    l1603 21F2                                      l1291 58FE  
                                    l1380 3EA6                                      l2076 3254  
                                    l2084 4454                                      l3140 5A6C  
                                    l2412 0524                                      l1700 3620  
                                    l1620 1C20                                      l1612 1BD6  
                                    l1381 3EC8                                      l2085 44EA  
                                    l1277 09C4                                      l1269 092A  
                                    l1437 3834                                      l1445 382C  
                                    l3037 6162                                      l3141 5A64  
                                    l2413 0570                                      l2405 045E  
                                    l3301 5BAE                                      l1605 2232  
                                    l1621 1C2C                                      l1613 1BCC  
                                    l1390 3F2A                                      l3134 562E  
                                    l2078 32C4                                      l2086 4464  
                                    l1278 0A32                                      l1438 377E  
                                    l2406 0578                                      l3302 5BA8  
                                    l2430 10DE                                      l1710 2E64  
                                    l1630 1CC0                                      l1614 1BCA  
                                    l2182 4C9E                                      l1391 3F36  
                                    l1383 3EEA                                      l3135 5638  
                                    l2087 4476                                      l1439 384A  
                                    l3047 42FE                                      l1703 369C  
                                    l1711 2E3E                                      l1623 1C54  
                                    l2183 4C24                                      l2088 4490  
                                    l3144 5A84                                      l2408 04B4  
                                    l3160 5E92                                      l2432 10FA  
                                    l1704 3662                                      l1640 59E0  
                                    l1288 5930                                      l2096 3AA4  
                                    l3081 4E26                                      l3145 5A8E  
                                    l3049 433A                                      l3321 18C8  
                                    l2409 0478                                      l3161 5E80  
                                    l2441 114E                                      l1713 2EDC  
                                    l1641 59F0                                      l1633 1CE6  
                                    l1625 1C6A                                      l1617 1BF2  
                                    l2097 39EC                                      l2185 4C8A  
                                    l1386 3EF2                                      l3082 4E34  
                                    l3330 1902                                      l3410 5C8A  
                                    l1714 2EC2                                      l1730 2CCA  
                                    l1722 336A                                      l1810 350E  
                                    l3154 58A0                                      l1626 1C76  
                                    l1618 1C02                                      l1379 3F44  
                                    l3403 611E                                      l2371 0152  
                                    l2427 131E                                      l2443 128E  
                                    l1731 2BC6                                      l1811 3522  
                                    l3155 587E                                      l1635 1D0A  
                                    l1627 1CA0                                      l1619 1C0A  
                                    l2099 39FA                                      l1388 3F0E  
                                    l2372 01E2                                      l2380 01D0  
                                    l2428 10B8                                      l1900 41C0  
                                    l1724 33DE                                      l1812 3528  
                                    l1628 1CAC                                      l2452 6262  
              USBConfigureEndpoint@handle 0083                                      l3077 4DF2  
                                    l1645 4044                                      l3341 62B8  
                                    l3333 1914                                      l3317 185C  
                                    l2445 12F8                                      l2437 110E  
                                    l1733 2BDA                                      l1805 3588  
                                    l1637 1D28                                      l3078 4DE6  
                                    l2622 45F6                                      l3334 1980  
                                    l3414 62A0                                      l2390 0304  
                                    l2374 01AE                                      l1902 41D8  
                                    l1822 137E                                      l1734 2C62  
                                    l1750 412C                                      l1814 352E  
                                    l1806 34F8                                      l1670 47C8  
                                    l2543 5CFA                                      l1647 406E  
                                    l3327 18D8                                      l3319 1874  
                                    l2367 05D2                                      l2391 02C6  
                                    l2375 019C                                      l2447 1318  
                                    l2439 112E                                      l1903 41E6  
                                    l1831 14EA                                      l1823 1384  
                                    l1743 416E                                      l1815 354C  
                                    l2455 625C                                      l2704 53A8  
                                    l2536 4698                                      l2624 4622  
                                    l2640 4B3C                                      l3336 19A6  
                                    l3328 18E8                                      l2368 00E2  
                                    l1664 3AFE                                      l1904 4204  
                                    l1736 2C6A                                      l1744 40F4  
                                    l1816 3568                                      l1808 3502  
                                    l1672 47E2                                      l2472 60D0  
                                    l2705 53BC                                      l2625 4632  
                                    l2633 4B70                                      l2641 4B50  
                                    l1649 40CA                                      l1921 49D4  
                                    l3337 19E0                                      l3361 34A0  
                                    l2385 0392                                      l1905 421C  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2CBA  
                                    l1809 3508                                      l1681 30C6  
                                    l2473 60C2                                      l2561 2F5A  
                                    l2538 46C4                                      l2650 4500  
                                    l2642 4B68                                      l2634 4B0A  
                                    l3362 3458                                      l2386 0326  
                                    l3290 5302                                      l1834 14D0  
                                    l1682 306E                                      l2539 46D4  
                                    l3363 3470                                      l3355 3418  
                                    l2387 02B4                                      l1843 15C6  
                                    l1827 143E                                      l1739 2CC2  
                                    l1747 4184                                      l1771 4A5C  
                                    l2475 60CA                                      l2563 2FB8  
                                    l2652 4546                                      l1924 4982  
                                    l3364 3480                                      l3356 3412  
                                    l2388 0250                                      l1676 487C  
                                    l1836 1532                                      l1828 1440  
                                    l1748 4106                                      l1772 4A56  
                                    l2564 2FA8                                      l1925 49AE  
                                    l2397 0402                                      l1837 153E  
                                    l1829 145C                                      l1749 410C  
                                    l1757 59C8                                      l1765 5CC2  
                                    l2654 458E                                      l1926 4988  
                                    l3358 3440                                      l2398 03D2  
                                    l3286 52F2                                      l1790 3F9A  
                                    l1782 5108                                      l1838 15BA  
                                    l1686 30F0                                      l1758 59C6  
                                    l1766 5CC0                                      l2558 3034  
                                    l2566 2FF8                                      l2655 454E  
                                    l2639 4B8C                                      l2663 58E2  
                                    l3295 5E28                                      l3367 34DE  
                                    l3287 52EC                                      l1951 26EA  
                                    l1695 35EC                                      l1791 3FA0  
                                    l2559 2F40                                      l2656 4560  
                                    l2664 58BC                                      l3296 5E1E  
                                    l2680 3874                                      l1960 2754  
                                    l1792 401C                                      l1784 5156  
                                    l2649 4578                                      l3393 5ECC  
                                    l2681 38D6                                      l3289 530C  
                                    l1953 271E                                      l1697 35F6  
                                    l1793 3FE2                                      l2569 3030  
                                    l2666 58F6                                      l2690 38F6  
                                    l2667 58CA                                      l1963 27CE  
                                    l1699 365A                                      l1795 4002  
                                    l2596 558A                                      l2684 387A  
                                    l1964 2796                                      l1956 2730  
                                    l2669 58DC                                      l1957 2734  
                                    l1949 26DC                                      l2598 5596  
                                    l2862 373E                                      l3398 5FDA  
                                    l2686 38C2                                      l1990 6032  
                                    l2863 3700                                      l2687 38A4  
                                    l2679 385A                                      l1967 27E8  
                                    l1959 278C                __size_of_Mdm_IsSmsReceived 0024  
                                    l2856 36AC                                      l1968 27EC  
                                    l1992 6038                                _Led1OutSts 01FB  
                                    l2865 3772                                      l2857 36A6  
                                    l2882 4DA0                                      l2883 4DAA  
                                    l2875 4D52                                      l2891 4F74  
                                    l2859 36EE                                      l1899 4226  
                                    l2884 4DB8                                      l2876 4D62  
                                    l2892 4F6C                                      l1997 5234  
                                    l1989 6042                                      l2878 4D80  
                                    l2879 4D78                                      l2895 4F8C  
                                    l2896 4F96                                      l2888 4F52  
                                    l2897 4FA4                                      l2889 4F5E  
                                    STR_1 FFE5                                      STR_2 FF74  
                                    STR_3 FFDE                                      STR_4 FFC1  
                                    STR_5 FFCD                                      STR_6 FFEF  
                                    STR_7 FFEA                                      STR_8 FE96  
                                    STR_9 FECA                                _Led2OutSts 01F9  
                              _Led3OutSts 01F7                     ??_USBCtrlTrfTxService 007D  
                                    u8415 5830                                      _UCFG 000F39  
                                    u8416 5832                                      u8425 583C  
                                    u8426 583E                                      u8435 584A  
                                    u8436 584C                                      _UEP0 000F26  
                                    u8445 5856                                      _UEP1 000F27  
                                    u8446 5858                                      _UEIE 000F37  
                __size_of_Uart_Uart1RxIsr 0010                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9905 5FB4  
                                    u9906 5FB6                                      u9885 5F9C  
                              _AlarmEvent 01F6                                      u9886 5F9E  
                                    u9895 5FA8                                      u9896 5FAA  
                          ?_StopCondition 0001                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 031C                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6420                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0032  
             Led_SetLedBlinkTime@OnTimeMs 007D    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 36A4                                      _main 63E2  
                         ??_Mdm_IsRinging 0081                                      _itoa 5A10  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 5D78  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0314                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 42F6  
                                    _xtoi 3402                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6428               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4A6E               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 5B9E  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 559A  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 62D4                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D                __end_of_USBCheckStdRequest 35CC  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 6376                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 008E  
                          _GetElapsedTime 3D14             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 007D               __end_of_OsAlrm_ClearOsAlarm 549E  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                       __size_of_I2cDummyTx 001C  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 5C1A                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDB8                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DD  
                                   l12055 5E80                                     l11327 61D8  
                                   l12093 35F6                                     l13073 373A  
                                   l13239 4632                                     l12289 3362  
                                   l13603 5DC0                                     l14095 46D4  
                                   l14239 322E                                     l12923 587E  
                                   l14365 1D9A                                     l13477 4A88  
                                   l15361 2CEC                                     l14387 1E54  
                                   l13659 21C2                                     l15349 4ED2  
                                   l14751 09A4                                     l15711 524E  
                                   l13687 222A                                     l14903 1CB8  
                                   l14585 0FB0                                     l15713 527E  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4DC2  
                                   STR_10 FF4A                                     STR_11 FF58  
                                   STR_12 FF9C                                     STR_20 FF3C  
                                   STR_13 FF66                                     STR_21 FE6C  
                                   STR_30 FFA9                                     STR_14 FEB5  
                                   STR_31 FFD7                                     STR_15 FEF3  
                                   STR_23 FEDF                                     STR_24 FFF4  
                                   STR_16 FF2B                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE93  
                                   STR_18 FF8F                                     STR_27 FF1A  
                                   STR_28 FFB5                           __end_of___awmod 4FAE  
                                   STR_29 FF07         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4E46                                     ?_utoa 008A  
                                   u11310 5C48                                     u11240 5612  
                                   u12200 18AE                           ___awdiv@divisor 007F  
                                   u11270 5A70                                     u12150 1864  
                                   u11190 1554                                     u11610 5EBC  
                  __end_of_USBDeviceTasks 1D32                                     u10740 57A0  
                                   u12180 189E                                     u11700 5C7A  
                                   u13300 04BE                                     u10900 3396  
                                   u11550 4DF6                                     u10670 3648  
                                   ?_xtoi 0083                                     u12440 4F78  
                                   u10690 368A                                     u12380 4D84  
                                   u13420 390E                                     u10940 2C2C  
                                   u11725 633A                                     u10677 363E  
                                   u11726 633C                                     u11830 5AC8  
                                   u11590 5FD6                                     u10950 2C5C  
                                   u12615 0AF4                                     u11680 5C6E  
                                   u13360 5334                                     u12625 0B14  
                                   u10697 3680                                     u12730 5690  
                                   u10970 2CAE                                     u12810 228E  
                                   u12475 57F4                                     u12635 0B9E  
                                   u10947 2C22                                     u12740 5210  
                                   u11780 29CC                                     u10957 2C52  
                                   u13470 4B1A                                     u12655 0C78  
                                   u13615 62E4                                     u13367 532A  
                                   u13616 62E8                                     u11960 495E  
                                   u13545 5012                                     u12665 0C98  
                                   u10977 2CA4                                     u15058 4F08  
               ?_USBCtrlEPServiceComplete 0001                                     u12747 5206  
                                   u12675 0D22                                     u12595 62FA  
                                   u13555 634E                                     u15059 4F36  
                                   u13580 440A                                     u13660 24C8  
                                   u12596 62FC                                     u12780 21E6  
                                   u14540 1D2E                                     u13556 6350  
                                   u13741 1D4C                                     u14701 51BA  
                                   u13590 4424                                     u13830 1EA8  
                                   u14630 277C                                     u13751 1D5E  
                                   u13680 24DC                                     u13761 1D70  
                                   u14650 27BE                                     u15098 2DB8  
                                   u15099 2DE6                                     u14660 27D6  
                                   u14637 2772                                     u14657 27B4  
                                   u14931 4C7C                                     u14941 4C94  
                         __end_of___lwdiv 5642                           __end_of___lwmod 5A98  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 22EE                                     i1l747 242A  
                                   i2l680 3C3C                                     i2l681 3B8C  
                                   i2l690 3BD6                                     i2l682 3B9A  
                                   i2l686 3BBC                                     i2l688 3C2E  
                                   i2l689 3BF6                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B3  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E8  
                                   _USTAT 000F64                   __end_of_LedStateMachine 44F0  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 4816                             _StringCompare 5642  
                                   _sd000 FE68                                     _sd001 FE21  
                                   _sd002 FDFB            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3AB6  
                             _ApnLenLocal 01F0                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 58FC  
                         __end_of_isalpha 5ED6                           __end_of_isdigit 616A  
                                   atoi@a 0088                                     atoi@s 0083  
                             _ClearBuffer 5D78                           __end_of_isspace 5FE2  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 6126                                     pclath 000FFA  
               secondsAppTimer2@isExpired 0090                                     tablat 000FF5  
                        __end_ofi1___wmul 6030                         ?_secondsAppTimer2 008A  
               __end_of_Rtcc_GetRtccValue 4B02               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 508C  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 549E                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 391C                           __end_of_tolower 62A4  
                     __end_of_Mcu_Int0Isr 6450                       __end_of_Mcu_Int1Isr 644C  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 62BC                        ??_secondsAppTimer2 008D  
                  __end_of_GetElapsedTime 3DDC                     __end_of_UartSetConfig 5396  
                  __size_of_initGprsModem 0090               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 6274  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BB4  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 5F8E                            _InitSchedTimer 5F06  
                         __initialization 280C                          __end_of_MdmCntSm 4448  
                    __end_of_I2c_ReadData 2180                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 3F68                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 2F2C                              __end_of_atoi 377C  
                            __end_of_main 63EE                       StringCompare@Result 008D  
                            __end_of_itoa 5A54                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01E0                              __end_of_utoa 43A0  
                            __end_of_xtoi 34E8                  __end_of_Rtcm_SetRtccDate 5546  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 640C              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D0                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE56                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4944                                _ReceiveEvt 5F34  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 6396                            ?_StringCompare 0085  
                        __end_of_Terminal 05EC                      initFsm@isInitialized 0103  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4E46                              _cdc_mem_type 01E1  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F1  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3C4C                _Uart_MdmGsmGprsReadService 3B82  
              __end_of_UsbDevice_MainTask 6054                           getsUSBUSART@len 0086  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 61CC  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 5546  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1409 5D3C                               _GenerateEvt 62BC  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC3D  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 50F8                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5F34                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6440  
                              _UartConfig 0326                      __end_of_Mdm_MainTask 5734  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CD  
                           ??_Term_MainSm 00A7                                    _Relay1 01DB  
                                  _Relay2 01DA                                    _Relay3 01D9  
                                  _Relay4 01D8                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5942  
                                  _SmsLen 00D4                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5820                                    ___lmul 5396  
                    _I2cSlv_ReceiveI2cMsg 5B1E                        TurnOnModem@Counter 02DA  
                            ?_putUSBUSART 0083                                    ___wmul 5FE2  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5734  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 559A  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 49DA  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 59CC           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 586C                    __size_of_HttpGetMethod 04D0  
                                  _memset 5E76                                    clear_0 28AC  
                                  clear_1 28BE                                    clear_2 28CA  
                                  clear_3 28D6                                    clear_4 28E2  
                                  clear_5 28EE                                    clear_6 28FA  
                                  clear_7 2906                                    clear_8 2912  
                                  clear_9 291E                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E4                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01ED                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F3  
                      ?_USBEnableEndpoint 0085                                    _strcat 52E2  
                                  _strcpy 5E14                                    _strlen 5B9E  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5C94  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 4B02                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                     ModemEvtParser@F9111 03BD                       ModemEvtParser@F9113 04D0  
                     ModemEvtParser@F9107 03C7                       ModemEvtParser@F9109 03C2  
                            _CDCTxService 26C6                       MdmCntSm@MdmCntState 002E  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC34                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 04B8  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 6438                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 0039                   __end_of_I2cSlv_MainTask 54F2  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 644C                               _Mcu_Int1Isr 6448  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                    __size_of_ScheduleTasks 0126  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A8                      _controlTransferState 00CC  
                   __end_ofi1_GenerateEvt 6316                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 4CB0                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 02E2                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 293C  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                    __end_of_EnableReceiver 6444  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01F5  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 57D2           I2cSlv_QueryI2cData@TimeoutTimer 033B  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 51C4                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FD                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                       initFsm@currentState 01D3  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02DE  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5A10                               _InitNetwork 00DB  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE6C                             __end_of_sd001 FE3F  
                           __end_of_sd002 FE21                              __pidataBANK1 6450  
                            __pidataBANK2 63D4                              __pidataBANK3 5ADC  
                            __pidataBANK4 6274                              __pidataBANK5 5694  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 5A98                       __size_of_CheckModem 0152  
              __end_of_Uart_ClearRxBuffer 5DE2             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 6240  
             __end_of_USBCtrlTrfInHandler 402A                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 0085                      StringCompare@String2 0087  
                      ??_UartSetConfigLow 007D                       __end_of_Term_MainSm 135A  
               initGprsModem@currentState 01D5                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 6300                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 008B             I2cSlv_QueryI2cData@I2cOpState 01E7  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 5E46                                _cdc_notice 0459  
                   __end_of_Tmr_TmrBPrSet 3234                       __end_of_Rtcc_RtcIsr 6448  
                              _cdc_rx_len 00C7                         __end_of_MsgFormat FD2F  
                              _cdc_tx_len 00C5                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 5D42                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E2                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4636                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5F8E                    _USBStdGetStatusHandler 40E8  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01EF                            _Rtcc_RtcConfig 46D8  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 632C                  __end_of_Uart_WriteString 5C58  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 60C0                               _SetBaudRate 57D2  
               initGprsModem@modemCounter 03BB               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F1                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 3146  
                               ?_TmrBInit 007D                             _CheckTxStatus 640C  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                       MyApp_Task@cmpString 0104  
                               ?_Terminal 0001                                   ?___lmul 007D  
                            _Led_MainTask 39EA                            _Rtcc_UnlockRtc 6376  
                            _I2cBusStatus 01E9                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2CE2  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2022  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE56                   __size_of_CheckAckStatus 000A  
        secondsAppTimer2@destinationTicks 0091                          _USBCtrlEPService 49DA  
                   __end_of_UpdateSchFlag 6224                              _EepromBuffer 04A9  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D9  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2F2C  
                       __end_of_WriteByte 6402                        _USBCheckStdRequest 34E8  
                       _configDescriptor1 FDB8                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0495               __end_of_USBCtrlTrfTxService 36A4  
                     _USBStdSetCfgHandler 331C                         triggerRelay@F8986 03CE  
                 __size_of_ConfigureModem 00CE                    I2cSlv_QueryI2cData@Ret 01E6  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 5F62  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 4778                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 2022                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3EA4  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DE  
          __end_of_Pm_DsReleasePinControl 642E                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 011A  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E2  
                __size_of_blinkForSeconds 003A                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 002A                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FC                       _I2cSlv_QueryI2cData 377C  
                                 _Led2Sts 01FA                                   _Led3Sts 01F8  
              __end_of_Sch_SchmIntService 63D4                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 0090                             _cdc_trf_state 00C6  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 6434                    initEeprom@currentState 01D4  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   __end_of_Mdm_IsRinging 609C                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CB                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DD                                   _RelayB2 01DC  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 00D8                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 5020  
                  __end_of_Rtcc_UnlockRtc 6386                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 6340  
                              _initEeprom 44F0                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD2F  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 61EA  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 62EA  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4D3C  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4F3C  
                                 ___lldiv 4DC2                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 55EE  
                       ??_USBStallHandler 007D                                   ___lwmod 5A54  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
               __size_of_secondsAppTimer2 00A2                        ?_Sch_MainScheduler 0001  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6444                      __size_of_putUSBUSART 0022  
                                 __pcinit 280C                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CF  
                     __end_of_TurnOnModem 5988                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 0351  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDFB  
                                 __ramtop 0F00                               Terminal@Len 03AF  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 63E2  
                                 __ptext1 5E46                                   __ptext2 63EE  
                                 __ptext3 6428                                   __ptext4 61CC  
                                 __ptext5 6240                                   __ptext6 5F8E  
                                 __ptext7 5F06                                   __ptext8 3C4C  
                                 __ptext9 3146                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 46D8                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 58B4  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5EA6                                   _isdigit 6148  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 292A  
                                 clear_11 2936                          ___awmod@dividend 007D  
                       ??_InitializeTasks 03FE                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02EA       __end_of_Tmr_RegisterTmr2IsrCallback 63F8  
             _Tmr_RegisterTmr2IsrCallback 63EE                                   _isspace 5FB8  
                            _Mdm_MainTask 56E4                                   _isupper 6104  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 22D6  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC3D  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 609C  
                                 _sprintf 384E                                   _tolower 628C  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 63B6  
                        _HttpGetDataLocal 03A2                  __end_of_Mdm_SetSmsFormat 5784  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 424A  
                                 _toupper 62A4           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 293C  
                            _getsUSBUSART 4944                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DC  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC3B  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC34  
                          _ModemEvtParser 1D32                                   int_func 424A  
                               i1u1513_28 60AC                           _USB1msTickCount 0318  
         _dummy_encapsulated_cmd_response 0376                                 i1u1484_20 22EC  
                               i1u1488_28 240C                                 i1u1488_29 2420  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 6208  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 62D4  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 5E14  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 4778  
                      _UsbDevice_MainTask 6030                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 6434                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                   ??_I2cSlv_QueryI2cData 00A9                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 3046  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01EA  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 257E  
                         _RtccIsrCallback 02E6          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C8  
              _USBStatusStageEnabledFlag2 0027                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 60E2                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                       _Mdm_HangPhoneCall 6352                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 618C                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                      ?_Mdm_HangPhoneCall 0001                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02E8                          _HttpGetMethodSts 01EE  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E3                           ??_HttpGetMethod 009D  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1EB4                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D6  
                   __end_of_StopCondition 643C                  __size_of_HighPriorityIsr 42EE  
                     ??_Mdm_HangPhoneCall 0083                 Tmr_TmrBPrSet@TmrBPrCfgSts 009A  
               __size_of_OsTmr_StartTimer 005E                    secondsAppTimer@counter 008A  
                               _Led1Blink 036D                                 _Led2Blink 0364  
                    ??_UsbDevice_MainTask 0099                                 _Led3Blink 035B  
            __end_of_USBTransferOnePacket 40E8                           ??_CheckTxStatus 007D  
                               _Led1Pulse 0391                    secondsAppTimer@seconds 008F  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 181C  
               __end_of_Rtcc_SetRtcStatus 62EA                                 _Led2Pulse 038B  
                               _Led3Pulse 0385                         _I2cSlv_SendI2cMsg 5BDC  
         SetBaudRate@DesiredI2cBusClockHz 0096                       Eeprom_Read@QuerySts 00AF  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 04E8  
                          _Tmr_TmrBConfig 3C4C                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6352                         _OsAlrm_SetOsAlarm 3DDC  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5820  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5942                                 _ClipEvent 00DF  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
                               _GetMethod 00DA                    _USBCtrlTrfSetupHandler 4CB0  
                      ?_OsAlrm_SetOsAlarm 0083                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 22D6     __end_of_USBIncrement1msInternalTimers 6104  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 60E2  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 53EE  
                          _CheckAckStatus 6416                            __end_of___wmul 600A  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 6364  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 58B4  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002D  
                          __end_of_memset 5EA6                        _UartTxBufferStatus 5784  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E4  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 63C6  
                               _MdmStatus 00D2                            __end_of_strcat 533E  
                          __end_of_strcpy 5E46                            __end_of_strlen 5BDC  
                          __end_of_strtol 19F2                       start_initialization 280C  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 391C                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 5DAE                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0500  
                             _cdc_data_tx 07B6              __end_of_USBConfigureEndpoint 48AE  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC3F  
                      __end_of_MyApp_Task 3046                          _UpdateOsCounters 63A6  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3B82  
               __end_of_I2cSlv_SendI2cMsg 5C1A                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 4A6E  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 6396                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3D14  
                               _SendSmsSm 19F2                 __end_of_OsAlrm_SetOsAlarm 3EA4  
                  __end_of_Tmr_TmrBIrqSet 586C                                 _TaskTable 05A4  
                               _RingEvent 00E0                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D5  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B7  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 533E                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 5F62                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 625A                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6420                                  ??___lmul 0085  
                           _isxdigit$6521 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2BB4  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 4EC8  
                      HttpGetMethod@Index 01C8                          _secondsAppTimer2 4594  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03BD                               __pdataBANK4 04D0  
                             __pdataBANK5 05A4                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 55EE                    __end_of_ConfigureModem 39EA  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D7  
          __end_of_USBStdGetStatusHandler 419A                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC3F                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 5694  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
                           __pcstackBANK3 03FE              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04E8                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D6                              _SetAckStatus 632C  
                            _isalpha$6511 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 63F8                       __size_of_initEeprom 00A4  
                            _isdigit$6245 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02DC                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 5B5E       InitGprsNetwork@GprsNetInitNextState 00D1  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 61AC  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 5CCE  
            __end_of_LedBlinkStateMachine 26C6                               sprintf@flag 0083  
                    __size_of_Eeprom_Read 0054                           _USBStallHandler 5988  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 030E  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 6240                __end_of_USBCheckCDCRequest 424A  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 5446  
                         ?_Tmr_TmrBIrqSet 007D                      MyApp_Task@blinkTicks 03FC  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 61AC                              ??_StringCopy 0083  
                        _Led_SetLedStatus 5ED6                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 616A  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC34  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 616A  
                               __ptext101 5CCE                                 __ptext110 5942  
                               __ptext102 4636                                 __ptext111 19F2  
                               __ptext103 6396                                 __ptext120 5396  
                               __ptext112 5B5E                                 __ptext104 6054  
                               __ptext121 53EE                                 __ptext113 1D32  
                               __ptext105 6078                                 __ptext130 5784  
                               __ptext122 242C                                 __ptext114 5DAE  
                               __ptext106 6352                             Terminal@Index 00A6  
                               __ptext131 51C4                                 __ptext123 43A0  
                               __ptext115 5642                                 __ptext107 559A  
                               __ptext140 257E                                 __ptext132 5284  
                               __ptext124 6420                                 __ptext116 2A82  
                               __ptext108 5D42                                 __ptext141 55EE  
                               __ptext133 4B92                                 __ptext125 0DC8  
                               __ptext117 391C                                 __ptext109 533E  
                               __ptext150 1EB4                                 __ptext142 3DDC  
                               __ptext134 3D14                                 __ptext126 05EC  
                               __ptext118 0ABC                                 __ptext151 2022  
                               __ptext143 5FE2                                 __ptext135 6364  
                               __ptext127 5C1A                                 __ptext119 294A  
                               __ptext160 6416                                 __ptext152 63F8  
                               __ptext144 4FAE                                 __ptext136 5D78  
                               __ptext128 5A98                                 __ptext153 6438  
                               __ptext145 57D2                                 __ptext137 4448  
                               __ptext129 61AC                                 __ptext170 5D08  
                               __ptext162 609C                                 __ptext154 643C  
                               __ptext146 4DC2                                 __ptext138 3234  
                               __ptext171 6300                                 __ptext163 63C6  
                               __ptext155 632C                                 __ptext147 5F62  
                               __ptext139 5ED6                                 __ptext164 6208  
                               __ptext156 6402                                 __ptext148 3EA4  
                               __ptext173 63B6                                 __ptext165 63A6  
                               __ptext157 62BC                                 __ptext149 5F34  
                               __ptext174 3B82                                 __ptext166 22D6  
                               __ptext158 6440                                 __ptext175 6316  
                               __ptext167 600A                                 __ptext159 640C  
                               __ptext176 6444                                 __ptext168 5446  
                               __ptext177 6448                                 __ptext169 6224  
                               __ptext178 644C                                 __ptext179 0000  
                                ?___awmod 007D                        _Sch_SchmIntService 63C6  
                         _InitializeTasks 4EC8                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 0346                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0397  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 402A                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 044F                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 039D            InitializeTasks@ActiveTaskIndex 04E8  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                           Terminal@Payload 0766  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 515E  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 515E                ConfigureModem@DelayCounter 02D6  
                      __end_of_StringCopy 5226                               _ep_data_out 02CE  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00E1                           Terminal@SwTimer 04C5  
                initEeprom@memoryOpResult 0101                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 01D7  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02D8  
                        _OsTmr_StartTimer 5284                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6300  
              __end_of_Mcu_StartSystemPll 61EA                              _PhoneNumbLen 00D3  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 60C0  
                           _Rtcm_MainTask 4C22                            ___wmul@product 0081  
                ModemEvtParser@ClipString 009A                          SendSmsSm@SwTimer 03E6  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 0028  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 4FAE                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 5E76                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      MyApp_Task@memoryFlag 00C4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4C22  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A9                      _USBConfigureEndpoint 4816  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 242C  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 600A  
                   __end_of_initGprsModem 4B92                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6428  
                secondsAppTimer2@isCyclic 008C                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E5                                  _ApnLocal 0324  
                          _StartCondition 643C                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0089               HttpGetMethod@GetMethodState 01EB  
                           _Tmr_TmrBPrSet 3146                         _NewStringReceived 003C  
                            _isspace$6514 007E                          _UartSetConfigLow 53EE  
                                _GetSmsSm 2A82                   __end_of_USBStallHandler 59CC  
                    Mdm_DrvMainFn@Options 0001                           _blinkForSeconds 5CCE  
                          _memoryPreamble 03A7                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DB                                  _MdmCntSm 43A0  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 2820                                 copy_data1 2840  
                               copy_data2 2860                                 copy_data3 2898  
            __end_of_LedPulseStateMachine 331C                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3402  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6402                             i2_GenerateEvt 6316  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE68                 __end_of_I2c_InitI2cModule 5020  
                                _MsgReady FE3F                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 4F3C                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001               __end_of_I2cSlv_QueryI2cData 384E  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 48AE                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                              ?_TurnOnModem 0001  
                                _TxBuffer 0320                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DE  
                         _SetUartBaudRate 294A              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB4                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                           MyApp_Task@F9007 03CB  
                __end_of_UpdateOsCounters 63B6                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                             _UpdateSchFlag 6208  
                     __end_of_putUSBUSART 6148                               _line_coding 037E  
                            _Rtcc_LockRtc 6386              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 257E                    __end_of_StartCondition 6440  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F2                 Rtcm_GetRtccDate@LocalDate 008A  
                I2c_WriteData@WriteStatus 0035                              _isupper$6517 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          __size_of_initFsm 0048  
                        ??_ModemEvtParser 0090                          _GetOsTickCounter 6364  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AB                  ModemEvtParser@RingString 00A4  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                           MyApp_Task@phone 04DA  
                                __ptext10 5820                                  __ptext11 618C  
                                __ptext20 6030                                  __ptext12 48AE  
                                __ptext21 58FC                                  __ptext13 61EA  
                         ??_UartWriteByte 007E                                  __ptext30 5DE2  
                                __ptext22 56E4                                  __ptext14 2CE2  
                                __ptext31 5988                                  __ptext23 549E  
                                __ptext15 4EC8                                  __ptext40 331C  
                                __ptext32 60E2                                  __ptext24 642E  
                                __ptext16 2F2C                                  __ptext41 40E8  
                                __ptext33 2180                                  __ptext25 60C0  
                                __ptext17 625A                                  __ptext50 2E08  
                                __ptext42 2BB4                                  __ptext34 49DA  
                                __ptext26 6340                                  __ptext18 4C22  
                                __ptext51 3AB6                                  __ptext43 135A  
                                __ptext35 586C                                  __ptext27 6434  
                                __ptext19 39EA                                  __ptext60 00D0  
                                __ptext52 3F68                                  __ptext44 5226  
                                __ptext36 4CB0                                  __ptext28 1BAA  
                                __ptext61 3402                                  __ptext53 35CC  
                                __ptext45 419A                                  __ptext37 3046  
                                __ptext29 5C94                                  __ptext70 6126  
                                __ptext62 628C                                  __ptext54 26C6  
                                __ptext46 5020                                  __ptext38 4778  
                                __ptext71 5A10                                  __ptext63 5C58  
                                __ptext55 10B6                                  __ptext47 59CC  
                                __ptext39 34E8                                  __ptext80 15EE  
                                __ptext72 42F6                                  __ptext64 181C  
                                __ptext56 5B9E                                  __ptext48 4816  
                                __ptext81 4F3C                                  __ptext73 5A54  
                                __ptext65 62A4                                  __ptext57 52E2  
                                __ptext49 50F8                                  __ptext90 58B4  
                                __ptext82 4D3C                                  __ptext74 4944  
                                __ptext66 5FB8                                  __ptext58 384E  
                                __ptext91 4B02                                  __ptext83 6386  
                                __ptext75 402A                                  __ptext67 5EA6  
                                __ptext59 5E76                                  __ptext92 4594  
                                __ptext84 515E                                  __ptext76 36A4  
                                __ptext68 6104                                  __ptext93 5734  
                                __ptext85 4A6E                                  __ptext77 6148  
                                __ptext69 5E14                                  __ptext94 44F0  
                                __ptext86 62D4                                  __ptext78 54F2  
                                __ptext95 5546                                  __ptext87 46D8  
                                __ptext79 6376                                  __ptext96 377C  
                                __ptext88 62EA                                  __ptext97 4E46  
                                __ptext89 508C                                  __ptext98 5BDC  
                                __ptext99 5B1E                          __size_of_isupper 0022  
                 initEeprom@addressToRead 0100                                _I2cDummyTx 6224  
                  Tmr_TmrBIrqSet@Priority 007D                        __end_of_initEeprom 4594  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                __end_of_secondsAppTimer2 4636                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 6054  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4D3C  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6416                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 642E                        ??_USBCtrlEPService 0097  
                                _isxdigit 5C58                             _Mdm_IsRinging 6078  
                     _USBCtrlTrfInHandler 3F68                  I2c_ReadData@I2cReadState 0034  
              __end_of_Mdm_RequestSmsData 63A6                     __end_of_ScheduleTasks 2E08  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 50F8  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3AB6  
                     ??_Mdm_IsSmsReceived 0081                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 03FE                                strtol@sign 0093  
                         Term_MainSm@Data 0463                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
               blinkForSeconds@blinkTicks 0093                   secondsAppTimer2@counter 008A  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5D08  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5D08  
                __end_of_Mcu_ConfigExtInt 625A                   secondsAppTimer2@seconds 008F  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C9  
                CDCTxService@byte_to_send 0085             I2c_WriteData@TentativeCounter 0036  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 618C  
                __end_of_Led_SetLedStatus 5F06                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 54F2                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 6078                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 4B92  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5284  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 5226                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2A82  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                    blinkForSeconds@seconds 0095  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009F  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 5ADC  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 5D42                  __end_of_Rtcm_GetRtccDate 51C4  
                             _putUSBUSART 6126                       _USBCtrlTrfRxService 2E08  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 5C94                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 52E2                      _LedPulseStateMachine 3234  
                      _USBCheckCDCRequest 419A                       _USBCtrlTrfTxService 35CC  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                          _Rtcc_AlarmConfig 508C  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DF  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 58FC  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5FB8                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 0107                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 4448  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 6438  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00CA                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 5DAE  
                    __end_of_CDCTxService 280C                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC3B  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F4                   _UsbMasterPhoneNumberLen 0322  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 6340  
