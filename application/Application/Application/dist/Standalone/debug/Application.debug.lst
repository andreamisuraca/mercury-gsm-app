

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 16 10:56:07 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	text0,global,reloc=2,class=CODE,delta=1
    36                           	psect	text1,global,reloc=2,class=CODE,delta=1
    37                           	psect	text2,global,reloc=2,class=CODE,delta=1
    38                           	psect	text3,global,reloc=2,class=CODE,delta=1
    39                           	psect	text4,global,reloc=2,class=CODE,delta=1
    40                           	psect	text5,global,reloc=2,class=CODE,delta=1
    41                           	psect	text6,global,reloc=2,class=CODE,delta=1
    42                           	psect	text7,global,reloc=2,class=CODE,delta=1
    43                           	psect	text8,global,reloc=2,class=CODE,delta=1
    44                           	psect	text9,global,reloc=2,class=CODE,delta=1
    45                           	psect	text10,global,reloc=2,class=CODE,delta=1
    46                           	psect	text11,global,reloc=2,class=CODE,delta=1
    47                           	psect	text12,global,reloc=2,class=CODE,delta=1
    48                           	psect	text13,global,reloc=2,class=CODE,delta=1
    49                           	psect	text14,global,reloc=2,class=CODE,delta=1
    50                           	psect	text15,global,reloc=2,class=CODE,delta=1
    51                           	psect	text16,global,reloc=2,class=CODE,delta=1
    52                           	psect	text17,global,reloc=2,class=CODE,delta=1
    53                           	psect	text18,global,reloc=2,class=CODE,delta=1
    54                           	psect	text19,global,reloc=2,class=CODE,delta=1
    55                           	psect	text20,global,reloc=2,class=CODE,delta=1
    56                           	psect	text21,global,reloc=2,class=CODE,delta=1
    57                           	psect	text22,global,reloc=2,class=CODE,delta=1
    58                           	psect	text23,global,reloc=2,class=CODE,delta=1
    59                           	psect	text24,global,reloc=2,class=CODE,delta=1
    60                           	psect	text25,global,reloc=2,class=CODE,delta=1
    61                           	psect	text26,global,reloc=2,class=CODE,delta=1
    62                           	psect	text27,global,reloc=2,class=CODE,delta=1
    63                           	psect	text28,global,reloc=2,class=CODE,delta=1
    64                           	psect	text29,global,reloc=2,class=CODE,delta=1
    65                           	psect	text30,global,reloc=2,class=CODE,delta=1
    66                           	psect	text31,global,reloc=2,class=CODE,delta=1
    67                           	psect	text32,global,reloc=2,class=CODE,delta=1
    68                           	psect	text33,global,reloc=2,class=CODE,delta=1
    69                           	psect	text34,global,reloc=2,class=CODE,delta=1
    70                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text36,global,reloc=2,class=CODE,delta=1
    72                           	psect	text37,global,reloc=2,class=CODE,delta=1
    73                           	psect	text38,global,reloc=2,class=CODE,delta=1
    74                           	psect	text39,global,reloc=2,class=CODE,delta=1
    75                           	psect	text40,global,reloc=2,class=CODE,delta=1
    76                           	psect	text41,global,reloc=2,class=CODE,delta=1
    77                           	psect	text42,global,reloc=2,class=CODE,delta=1
    78                           	psect	text43,global,reloc=2,class=CODE,delta=1
    79                           	psect	text44,global,reloc=2,class=CODE,delta=1
    80                           	psect	text45,global,reloc=2,class=CODE,delta=1
    81                           	psect	text46,global,reloc=2,class=CODE,delta=1
    82                           	psect	text47,global,reloc=2,class=CODE,delta=1
    83                           	psect	text48,global,reloc=2,class=CODE,delta=1
    84                           	psect	text49,global,reloc=2,class=CODE,delta=1
    85                           	psect	text50,global,reloc=2,class=CODE,delta=1
    86                           	psect	text51,global,reloc=2,class=CODE,delta=1
    87                           	psect	text52,global,reloc=2,class=CODE,delta=1
    88                           	psect	text53,global,reloc=2,class=CODE,delta=1
    89                           	psect	text54,global,reloc=2,class=CODE,delta=1
    90                           	psect	text55,global,reloc=2,class=CODE,delta=1
    91                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text58,global,reloc=2,class=CODE,delta=1
    94                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text60,global,reloc=2,class=CODE,delta=1
    96                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text70,global,reloc=2,class=CODE,delta=1
   106                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text74,global,reloc=2,class=CODE,delta=1
   110                           	psect	text75,global,reloc=2,class=CODE,delta=1
   111                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text78,global,reloc=2,class=CODE,delta=1
   114                           	psect	text79,global,reloc=2,class=CODE,delta=1
   115                           	psect	text80,global,reloc=2,class=CODE,delta=1
   116                           	psect	text81,global,reloc=2,class=CODE,delta=1
   117                           	psect	text82,global,reloc=2,class=CODE,delta=1
   118                           	psect	text83,global,reloc=2,class=CODE,delta=1
   119                           	psect	text84,global,reloc=2,class=CODE,delta=1
   120                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text87,global,reloc=2,class=CODE,delta=1
   123                           	psect	text88,global,reloc=2,class=CODE,delta=1
   124                           	psect	text89,global,reloc=2,class=CODE,delta=1
   125                           	psect	text90,global,reloc=2,class=CODE,delta=1
   126                           	psect	text91,global,reloc=2,class=CODE,delta=1
   127                           	psect	text92,global,reloc=2,class=CODE,delta=1
   128                           	psect	text93,global,reloc=2,class=CODE,delta=1
   129                           	psect	text94,global,reloc=2,class=CODE,delta=1
   130                           	psect	text95,global,reloc=2,class=CODE,delta=1
   131                           	psect	text96,global,reloc=2,class=CODE,delta=1
   132                           	psect	text97,global,reloc=2,class=CODE,delta=1
   133                           	psect	text98,global,reloc=2,class=CODE,delta=1
   134                           	psect	text99,global,reloc=2,class=CODE,delta=1
   135                           	psect	text100,global,reloc=2,class=CODE,delta=1
   136                           	psect	text101,global,reloc=2,class=CODE,delta=1
   137                           	psect	text102,global,reloc=2,class=CODE,delta=1
   138                           	psect	text103,global,reloc=2,class=CODE,delta=1
   139                           	psect	text104,global,reloc=2,class=CODE,delta=1
   140                           	psect	text105,global,reloc=2,class=CODE,delta=1
   141                           	psect	text106,global,reloc=2,class=CODE,delta=1
   142                           	psect	text107,global,reloc=2,class=CODE,delta=1
   143                           	psect	text108,global,reloc=2,class=CODE,delta=1
   144                           	psect	text109,global,reloc=2,class=CODE,delta=1
   145                           	psect	text110,global,reloc=2,class=CODE,delta=1
   146                           	psect	text111,global,reloc=2,class=CODE,delta=1
   147                           	psect	text112,global,reloc=2,class=CODE,delta=1
   148                           	psect	text113,global,reloc=2,class=CODE,delta=1
   149                           	psect	text114,global,reloc=2,class=CODE,delta=1
   150                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text116,global,reloc=2,class=CODE,delta=1
   152                           	psect	text117,global,reloc=2,class=CODE,delta=1
   153                           	psect	text118,global,reloc=2,class=CODE,delta=1
   154                           	psect	text119,global,reloc=2,class=CODE,delta=1
   155                           	psect	text120,global,reloc=2,class=CODE,delta=1
   156                           	psect	text121,global,reloc=2,class=CODE,delta=1
   157                           	psect	text122,global,reloc=2,class=CODE,delta=1
   158                           	psect	text123,global,reloc=2,class=CODE,delta=1
   159                           	psect	text124,global,reloc=2,class=CODE,delta=1
   160                           	psect	text125,global,reloc=2,class=CODE,delta=1
   161                           	psect	text126,global,reloc=2,class=CODE,delta=1
   162                           	psect	text127,global,reloc=2,class=CODE,delta=1
   163                           	psect	text128,global,reloc=2,class=CODE,delta=1
   164                           	psect	text129,global,reloc=2,class=CODE,delta=1
   165                           	psect	text130,global,reloc=2,class=CODE,delta=1
   166                           	psect	text131,global,reloc=2,class=CODE,delta=1
   167                           	psect	text132,global,reloc=2,class=CODE,delta=1
   168                           	psect	text133,global,reloc=2,class=CODE,delta=1
   169                           	psect	text134,global,reloc=2,class=CODE,delta=1
   170                           	psect	text135,global,reloc=2,class=CODE,delta=1
   171                           	psect	text136,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text137,global,reloc=2,class=CODE,delta=1
   173                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text139,global,reloc=2,class=CODE,delta=1
   175                           	psect	text140,global,reloc=2,class=CODE,delta=1
   176                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text142,global,reloc=2,class=CODE,delta=1
   178                           	psect	text143,global,reloc=2,class=CODE,delta=1
   179                           	psect	text144,global,reloc=2,class=CODE,delta=1
   180                           	psect	text145,global,reloc=2,class=CODE,delta=1
   181                           	psect	text146,global,reloc=2,class=CODE,delta=1
   182                           	psect	text147,global,reloc=2,class=CODE,delta=1
   183                           	psect	text148,global,reloc=2,class=CODE,delta=1
   184                           	psect	text149,global,reloc=2,class=CODE,delta=1
   185                           	psect	text150,global,reloc=2,class=CODE,delta=1
   186                           	psect	text151,global,reloc=2,class=CODE,delta=1
   187                           	psect	text152,global,reloc=2,class=CODE,delta=1
   188                           	psect	text153,global,reloc=2,class=CODE,delta=1
   189                           	psect	text154,global,reloc=2,class=CODE,delta=1
   190                           	psect	text155,global,reloc=2,class=CODE,delta=1
   191                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   192                           	psect	text157,global,reloc=2,class=CODE,delta=1
   193                           	psect	text158,global,reloc=2,class=CODE,delta=1
   194                           	psect	text159,global,reloc=2,class=CODE,delta=1
   195                           	psect	text160,global,reloc=2,class=CODE,delta=1
   196                           	psect	text161,global,reloc=2,class=CODE,delta=1
   197                           	psect	text162,global,reloc=2,class=CODE,delta=1
   198                           	psect	text163,global,reloc=2,class=CODE,delta=1
   199                           	psect	text164,global,reloc=2,class=CODE,delta=1
   200                           	psect	text165,global,reloc=2,class=CODE,delta=1
   201                           	psect	text166,global,reloc=2,class=CODE,delta=1
   202                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   203                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   204                           	psect	text168,global,reloc=2,class=CODE,delta=1
   205                           	psect	text169,global,reloc=2,class=CODE,delta=1
   206                           	psect	text170,global,reloc=2,class=CODE,delta=1
   207                           	psect	text171,global,reloc=2,class=CODE,delta=1
   208                           	psect	text172,global,reloc=2,class=CODE,delta=1
   209                           	psect	text173,global,reloc=2,class=CODE,delta=1
   210                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   213                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   214                           	dabs	1,0x400,48,_BDT
   215                           	dabs	1,0x438,8,_CtrlTrfData
   216                           	dabs	1,0x430,8,_SetupPkt
   217  0000                     
   218                           ; Version 1.45
   219                           ; Generated 16/11/2017 GMT
   220                           ; 
   221                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   222                           ; All rights reserved.
   223                           ; 
   224                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   225                           ; 
   226                           ; Redistribution and use in source and binary forms, with or without modification, are
   227                           ; permitted provided that the following conditions are met:
   228                           ; 
   229                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   230                           ;        conditions and the following disclaimer.
   231                           ; 
   232                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   233                           ;        of conditions and the following disclaimer in the documentation and/or other
   234                           ;        materials provided with the distribution.
   235                           ; 
   236                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   237                           ;        software without specific prior written permission.
   238                           ; 
   239                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   240                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   241                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   242                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   243                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   244                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   245                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   246                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   247                           ; 
   248                           ; 
   249                           ; Code-generator required, PIC18F46J50 Definitions
   250                           ; 
   251                           ; SFR Addresses
   252  0000                     
   253                           	psect	idataBANK1
   254  006280                     __pidataBANK1:
   255                           	opt stack 0
   256                           
   257                           ;initializer for InitGprsNetwork@GprsInitSts
   258  006280  01                 	db	1
   259                           
   260                           	psect	idataBANK2
   261  006204                     __pidataBANK2:
   262                           	opt stack 0
   263                           
   264                           ;initializer for Terminal@EchoOption
   265  006204  01                 	db	1
   266                           
   267                           ;initializer for _MainSystemTimebaseFlag
   268  006205  01                 	db	1
   269                           
   270                           ;initializer for _ConnTimeout
   271  006206  00                 	db	0
   272  006207  01                 	db	1
   273  006208  0000               	dw	0
   274  00620A  0000               	dw	0
   275  00620C  0000               	dw	0
   276  00620E  0000               	dw	0
   277  006210  00                 	db	0
   278                           
   279                           	psect	idataBANK3
   280  00591E                     __pidataBANK3:
   281                           	opt stack 0
   282                           
   283                           ;initializer for ModemEvtParser@F9095
   284  00591E  2B                 	db	43
   285  00591F  43                 	db	67
   286  005920  4D                 	db	77
   287  005921  54                 	db	84
   288  005922  49                 	db	73
   289                           
   290                           ;initializer for ModemEvtParser@F9093
   291  005923  2B                 	db	43
   292  005924  43                 	db	67
   293  005925  4C                 	db	76
   294  005926  49                 	db	73
   295  005927  50                 	db	80
   296                           
   297                           ;initializer for ModemEvtParser@F9091
   298  005928  52                 	db	82
   299  005929  49                 	db	73
   300  00592A  4E                 	db	78
   301  00592B  47                 	db	71
   302                           
   303                           ;initializer for MyApp_Task@F8996
   304  00592C  63                 	db	99
   305  00592D  61                 	db	97
   306  00592E  74                 	db	116
   307                           
   308                           ;initializer for triggerRelay@F8969
   309  00592F  50                 	db	80
   310  005930  00                 	db	0
   311                           
   312                           ;initializer for Term_MainSm@TermDelay
   313  005931  01                 	db	1
   314  005932  01                 	db	1
   315  005933  0000               	dw	0
   316  005935  0000               	dw	0
   317  005937  0000               	dw	0
   318  005939  0000               	dw	0
   319  00593B  00                 	db	0
   320                           
   321                           ;initializer for _ConnWait
   322  00593C  00                 	db	0
   323  00593D  01                 	db	1
   324  00593E  0000               	dw	0
   325  005940  0000               	dw	0
   326  005942  0000               	dw	0
   327  005944  0000               	dw	0
   328  005946  00                 	db	0
   329                           
   330                           ;initializer for SendSmsSm@SwTimer
   331  005947  01                 	db	1
   332  005948  01                 	db	1
   333  005949  0000               	dw	0
   334  00594B  0000               	dw	0
   335  00594D  0000               	dw	0
   336  00594F  0000               	dw	0
   337  005951  00                 	db	0
   338                           
   339                           ;initializer for CheckModem@Timeout
   340  005952  00                 	db	0
   341  005953  01                 	db	1
   342  005954  0000               	dw	0
   343  005956  0000               	dw	0
   344  005958  0000               	dw	0
   345  00595A  0000               	dw	0
   346  00595C  00                 	db	0
   347                           
   348                           ;initializer for MyApp_Task@blickTicks
   349  00595D  FFFF               	dw	65535
   350                           
   351                           	psect	idataBANK4
   352  0060B6                     __pidataBANK4:
   353                           	opt stack 0
   354                           
   355                           ;initializer for MyApp_Task@F8989
   356  0060B6  2B                 	db	43
   357  0060B7  33                 	db	51
   358  0060B8  39                 	db	57
   359  0060B9  33                 	db	51
   360  0060BA  32                 	db	50
   361  0060BB  30                 	db	48
   362  0060BC  30                 	db	48
   363  0060BD  32                 	db	50
   364  0060BE  37                 	db	55
   365  0060BF  36                 	db	54
   366  0060C0  33                 	db	51
   367  0060C1  31                 	db	49
   368  0060C2  38                 	db	56
   369  0060C3  00                 	db	0
   370                           
   371                           ;initializer for ModemEvtParser@F9097
   372  0060C4  43                 	db	67
   373  0060C5  61                 	db	97
   374  0060C6  6C                 	db	108
   375  0060C7  6C                 	db	108
   376  0060C8  20                 	db	32
   377  0060C9  52                 	db	82
   378  0060CA  65                 	db	101
   379  0060CB  61                 	db	97
   380  0060CC  64                 	db	100
   381  0060CD  79                 	db	121
   382                           
   383                           	psect	idataBANK5
   384  005518                     __pidataBANK5:
   385                           	opt stack 0
   386                           
   387                           ;initializer for _TaskTable
   388  005518  5E                 	db	low _Mdm_DrvMainFn
   389  005519  62                 	db	high _Mdm_DrvMainFn
   390  00551A  00                 	db	0
   391  00551B  0000               	dw	0
   392  00551D  000A               	dw	10
   393  00551F  00                 	db	0
   394  005520  76                 	db	low _I2cSlv_MainTask
   395  005521  53                 	db	high _I2cSlv_MainTask
   396  005522  00                 	db	0
   397  005523  0000               	dw	0
   398  005525  0001               	dw	1
   399  005527  00                 	db	0
   400  005528  68                 	db	low _Mdm_MainTask
   401  005529  55                 	db	high _Mdm_MainTask
   402  00552A  00                 	db	0
   403  00552B  0000               	dw	0
   404  00552D  0001               	dw	1
   405  00552F  00                 	db	0
   406  005530  84                 	db	low _MdmHttp_MainTask
   407  005531  57                 	db	high _MdmHttp_MainTask
   408  005532  00                 	db	0
   409  005533  0000               	dw	0
   410  005535  0001               	dw	1
   411  005537  00                 	db	0
   412  005538  72                 	db	low _UsbDevice_MainTask
   413  005539  5E                 	db	high _UsbDevice_MainTask
   414  00553A  00                 	db	0
   415  00553B  0000               	dw	0
   416  00553D  0001               	dw	1
   417  00553F  00                 	db	0
   418  005540  02                 	db	low _Wdg_MainTask
   419  005541  5F                 	db	high _Wdg_MainTask
   420  005542  00                 	db	0
   421  005543  0000               	dw	0
   422  005545  0064               	dw	100
   423  005547  00                 	db	0
   424  005548  82                 	db	low _Led_MainTask
   425  005549  39                 	db	high _Led_MainTask
   426  00554A  00                 	db	0
   427  00554B  0000               	dw	0
   428  00554D  0032               	dw	50
   429  00554F  00                 	db	0
   430  005550  82                 	db	low _Rtcm_MainTask
   431  005551  4A                 	db	high _Rtcm_MainTask
   432  005552  00                 	db	0
   433  005553  0000               	dw	0
   434  005555  0064               	dw	100
   435  005557  00                 	db	0
   436  005558  9C                 	db	low _Term_MainTask
   437  005559  60                 	db	high _Term_MainTask
   438  00555A  00                 	db	0
   439  00555B  0000               	dw	0
   440  00555D  0001               	dw	1
   441  00555F  00                 	db	0
   442  005560  B8                 	db	low _MyApp_Task
   443  005561  1E                 	db	high _MyApp_Task
   444  005562  00                 	db	0
   445  005563  0000               	dw	0
   446  005565  0064               	dw	100
   447  005567  00                 	db	0
   448                           
   449                           	psect	mediumconst
   450  00FC26                     __pmediumconst:
   451                           	opt stack 0
   452  00FC26  00                 	db	0
   453  00FC27                     _USB_SD_Ptr:
   454                           	opt stack 0
   455  00FC27  5A                 	db	low _sd000
   456  00FC28  FE                 	db	high _sd000
   457  00FC29  13                 	db	low _sd001
   458  00FC2A  FE                 	db	high _sd001
   459  00FC2B  ED                 	db	low _sd002
   460  00FC2C  FD                 	db	high _sd002
   461  00FC2D                     __end_of_USB_SD_Ptr:
   462                           	opt stack 0
   463  00FC2D                     _USB_CD_Ptr:
   464                           	opt stack 0
   465  00FC2D  AA                 	db	low _configDescriptor1
   466  00FC2E  FD                 	db	high _configDescriptor1
   467  00FC2F                     __end_of_USB_CD_Ptr:
   468                           	opt stack 0
   469  00FC2F                     _TaskNumber:
   470                           	opt stack 0
   471  00FC2F  000A               	dw	10
   472  00FC31                     __end_of_TaskNumber:
   473                           	opt stack 0
   474  00FC31                     _MsgFormat:
   475                           	opt stack 0
   476  00FC31  48                 	db	72
   477  00FC32  6F                 	db	111
   478  00FC33  73                 	db	115
   479  00FC34  74                 	db	116
   480  00FC35  20                 	db	32
   481  00FC36  6D                 	db	109
   482  00FC37  65                 	db	101
   483  00FC38  73                 	db	115
   484  00FC39  73                 	db	115
   485  00FC3A  61                 	db	97
   486  00FC3B  67                 	db	103
   487  00FC3C  65                 	db	101
   488  00FC3D  20                 	db	32
   489  00FC3E  66                 	db	102
   490  00FC3F  6F                 	db	111
   491  00FC40  72                 	db	114
   492  00FC41  6D                 	db	109
   493  00FC42  61                 	db	97
   494  00FC43  74                 	db	116
   495  00FC44  3A                 	db	58
   496  00FC45  20                 	db	32
   497  00FC46  0D                 	db	13
   498  00FC47  0A                 	db	10
   499  00FC48  5B                 	db	91
   500  00FC49  6F                 	db	111
   501  00FC4A  70                 	db	112
   502  00FC4B  5F                 	db	95
   503  00FC4C  74                 	db	116
   504  00FC4D  79                 	db	121
   505  00FC4E  70                 	db	112
   506  00FC4F  65                 	db	101
   507  00FC50  5D                 	db	93
   508  00FC51  3A                 	db	58
   509  00FC52  5B                 	db	91
   510  00FC53  6F                 	db	111
   511  00FC54  70                 	db	112
   512  00FC55  5D                 	db	93
   513  00FC56  3A                 	db	58
   514  00FC57  5B                 	db	91
   515  00FC58  6C                 	db	108
   516  00FC59  65                 	db	101
   517  00FC5A  6E                 	db	110
   518  00FC5B  5D                 	db	93
   519  00FC5C  3A                 	db	58
   520  00FC5D  5B                 	db	91
   521  00FC5E  61                 	db	97
   522  00FC5F  64                 	db	100
   523  00FC60  64                 	db	100
   524  00FC61  72                 	db	114
   525  00FC62  5D                 	db	93
   526  00FC63  3A                 	db	58
   527  00FC64  5B                 	db	91
   528  00FC65  70                 	db	112
   529  00FC66  61                 	db	97
   530  00FC67  79                 	db	121
   531  00FC68  6C                 	db	108
   532  00FC69  6F                 	db	111
   533  00FC6A  61                 	db	97
   534  00FC6B  64                 	db	100
   535  00FC6C  5D                 	db	93
   536  00FC6D  0D                 	db	13
   537  00FC6E  0A                 	db	10
   538  00FC6F  0D                 	db	13
   539  00FC70  0A                 	db	10
   540  00FC71  5B                 	db	91
   541  00FC72  6F                 	db	111
   542  00FC73  70                 	db	112
   543  00FC74  5F                 	db	95
   544  00FC75  74                 	db	116
   545  00FC76  79                 	db	121
   546  00FC77  70                 	db	112
   547  00FC78  65                 	db	101
   548  00FC79  5D                 	db	93
   549  00FC7A  20                 	db	32
   550  00FC7B  3D                 	db	61
   551  00FC7C  20                 	db	32
   552  00FC7D  53                 	db	83
   553  00FC7E  4F                 	db	79
   554  00FC7F  2C                 	db	44
   555  00FC80  53                 	db	83
   556  00FC81  42                 	db	66
   557  00FC82  0D                 	db	13
   558  00FC83  0A                 	db	10
   559  00FC84  5B                 	db	91
   560  00FC85  6F                 	db	111
   561  00FC86  70                 	db	112
   562  00FC87  5D                 	db	93
   563  00FC88  20                 	db	32
   564  00FC89  3D                 	db	61
   565  00FC8A  20                 	db	32
   566  00FC8B  52                 	db	82
   567  00FC8C  3A                 	db	58
   568  00FC8D  20                 	db	32
   569  00FC8E  72                 	db	114
   570  00FC8F  65                 	db	101
   571  00FC90  61                 	db	97
   572  00FC91  64                 	db	100
   573  00FC92  2C                 	db	44
   574  00FC93  57                 	db	87
   575  00FC94  3A                 	db	58
   576  00FC95  20                 	db	32
   577  00FC96  77                 	db	119
   578  00FC97  72                 	db	114
   579  00FC98  69                 	db	105
   580  00FC99  74                 	db	116
   581  00FC9A  65                 	db	101
   582  00FC9B  0D                 	db	13
   583  00FC9C  0A                 	db	10
   584  00FC9D  5B                 	db	91
   585  00FC9E  6C                 	db	108
   586  00FC9F  65                 	db	101
   587  00FCA0  6E                 	db	110
   588  00FCA1  5D                 	db	93
   589  00FCA2  20                 	db	32
   590  00FCA3  3D                 	db	61
   591  00FCA4  20                 	db	32
   592  00FCA5  32                 	db	50
   593  00FCA6  20                 	db	32
   594  00FCA7  62                 	db	98
   595  00FCA8  79                 	db	121
   596  00FCA9  74                 	db	116
   597  00FCAA  65                 	db	101
   598  00FCAB  20                 	db	32
   599  00FCAC  41                 	db	65
   600  00FCAD  53                 	db	83
   601  00FCAE  43                 	db	67
   602  00FCAF  49                 	db	73
   603  00FCB0  49                 	db	73
   604  00FCB1  0D                 	db	13
   605  00FCB2  0A                 	db	10
   606  00FCB3  5B                 	db	91
   607  00FCB4  61                 	db	97
   608  00FCB5  64                 	db	100
   609  00FCB6  64                 	db	100
   610  00FCB7  72                 	db	114
   611  00FCB8  5D                 	db	93
   612  00FCB9  20                 	db	32
   613  00FCBA  3D                 	db	61
   614  00FCBB  20                 	db	32
   615  00FCBC  32                 	db	50
   616  00FCBD  20                 	db	32
   617  00FCBE  62                 	db	98
   618  00FCBF  79                 	db	121
   619  00FCC0  74                 	db	116
   620  00FCC1  65                 	db	101
   621  00FCC2  20                 	db	32
   622  00FCC3  41                 	db	65
   623  00FCC4  53                 	db	83
   624  00FCC5  43                 	db	67
   625  00FCC6  49                 	db	73
   626  00FCC7  49                 	db	73
   627  00FCC8  0D                 	db	13
   628  00FCC9  0A                 	db	10
   629  00FCCA  5B                 	db	91
   630  00FCCB  70                 	db	112
   631  00FCCC  61                 	db	97
   632  00FCCD  79                 	db	121
   633  00FCCE  6C                 	db	108
   634  00FCCF  6F                 	db	111
   635  00FCD0  61                 	db	97
   636  00FCD1  64                 	db	100
   637  00FCD2  5D                 	db	93
   638  00FCD3  20                 	db	32
   639  00FCD4  3D                 	db	61
   640  00FCD5  20                 	db	32
   641  00FCD6  6D                 	db	109
   642  00FCD7  61                 	db	97
   643  00FCD8  78                 	db	120
   644  00FCD9  20                 	db	32
   645  00FCDA  32                 	db	50
   646  00FCDB  30                 	db	48
   647  00FCDC  20                 	db	32
   648  00FCDD  62                 	db	98
   649  00FCDE  79                 	db	121
   650  00FCDF  74                 	db	116
   651  00FCE0  65                 	db	101
   652  00FCE1  20                 	db	32
   653  00FCE2  41                 	db	65
   654  00FCE3  53                 	db	83
   655  00FCE4  43                 	db	67
   656  00FCE5  49                 	db	73
   657  00FCE6  49                 	db	73
   658  00FCE7  0D                 	db	13
   659  00FCE8  0A                 	db	10
   660  00FCE9  0D                 	db	13
   661  00FCEA  0A                 	db	10
   662  00FCEB  54                 	db	84
   663  00FCEC  65                 	db	101
   664  00FCED  72                 	db	114
   665  00FCEE  6D                 	db	109
   666  00FCEF  69                 	db	105
   667  00FCF0  6E                 	db	110
   668  00FCF1  61                 	db	97
   669  00FCF2  6C                 	db	108
   670  00FCF3  20                 	db	32
   671  00FCF4  4D                 	db	77
   672  00FCF5  6F                 	db	111
   673  00FCF6  64                 	db	100
   674  00FCF7  65                 	db	101
   675  00FCF8  3A                 	db	58
   676  00FCF9  20                 	db	32
   677  00FCFA  43                 	db	67
   678  00FCFB  4F                 	db	79
   679  00FCFC  4D                 	db	77
   680  00FCFD  4D                 	db	77
   681  00FCFE  41                 	db	65
   682  00FCFF  4E                 	db	78
   683  00FD00  44                 	db	68
   684  00FD01  20                 	db	32
   685  00FD02  4D                 	db	77
   686  00FD03  4F                 	db	79
   687  00FD04  44                 	db	68
   688  00FD05  45                 	db	69
   689  00FD06  0D                 	db	13
   690  00FD07  0A                 	db	10
   691  00FD08  4D                 	db	77
   692  00FD09  6F                 	db	111
   693  00FD0A  64                 	db	100
   694  00FD0B  65                 	db	101
   695  00FD0C  6D                 	db	109
   696  00FD0D  20                 	db	32
   697  00FD0E  54                 	db	84
   698  00FD0F  79                 	db	121
   699  00FD10  70                 	db	112
   700  00FD11  65                 	db	101
   701  00FD12  3A                 	db	58
   702  00FD13  20                 	db	32
   703  00FD14  47                 	db	71
   704  00FD15  53                 	db	83
   705  00FD16  4D                 	db	77
   706  00FD17  2F                 	db	47
   707  00FD18  47                 	db	71
   708  00FD19  50                 	db	80
   709  00FD1A  52                 	db	82
   710  00FD1B  53                 	db	83
   711  00FD1C  0D                 	db	13
   712  00FD1D  0A                 	db	10
   713  00FD1E  0D                 	db	13
   714  00FD1F  0A                 	db	10
   715  00FD20  00                 	db	0
   716  00FD21                     __end_of_MsgFormat:
   717                           	opt stack 0
   718  00FD21                     _Welcome:
   719                           	opt stack 0
   720  00FD21  2A                 	db	42
   721  00FD22  2A                 	db	42
   722  00FD23  2A                 	db	42
   723  00FD24  2A                 	db	42
   724  00FD25  2A                 	db	42
   725  00FD26  2A                 	db	42
   726  00FD27  2A                 	db	42
   727  00FD28  2A                 	db	42
   728  00FD29  2A                 	db	42
   729  00FD2A  2A                 	db	42
   730  00FD2B  2A                 	db	42
   731  00FD2C  2A                 	db	42
   732  00FD2D  2A                 	db	42
   733  00FD2E  2A                 	db	42
   734  00FD2F  2A                 	db	42
   735  00FD30  2A                 	db	42
   736  00FD31  2A                 	db	42
   737  00FD32  2A                 	db	42
   738  00FD33  2A                 	db	42
   739  00FD34  2A                 	db	42
   740  00FD35  2A                 	db	42
   741  00FD36  2A                 	db	42
   742  00FD37  2A                 	db	42
   743  00FD38  2A                 	db	42
   744  00FD39  2A                 	db	42
   745  00FD3A  2A                 	db	42
   746  00FD3B  2A                 	db	42
   747  00FD3C  2A                 	db	42
   748  00FD3D  2A                 	db	42
   749  00FD3E  2A                 	db	42
   750  00FD3F  2A                 	db	42
   751  00FD40  2A                 	db	42
   752  00FD41  2A                 	db	42
   753  00FD42  2A                 	db	42
   754  00FD43  2A                 	db	42
   755  00FD44  2A                 	db	42
   756  00FD45  2A                 	db	42
   757  00FD46  2A                 	db	42
   758  00FD47  2A                 	db	42
   759  00FD48  2A                 	db	42
   760  00FD49  2A                 	db	42
   761  00FD4A  2A                 	db	42
   762  00FD4B  2A                 	db	42
   763  00FD4C  2A                 	db	42
   764  00FD4D  2A                 	db	42
   765  00FD4E  2A                 	db	42
   766  00FD4F  2A                 	db	42
   767  00FD50  2A                 	db	42
   768  00FD51  2A                 	db	42
   769  00FD52  0D                 	db	13
   770  00FD53  0A                 	db	10
   771  00FD54  20                 	db	32
   772  00FD55  20                 	db	32
   773  00FD56  20                 	db	32
   774  00FD57  20                 	db	32
   775  00FD58  20                 	db	32
   776  00FD59  20                 	db	32
   777  00FD5A  20                 	db	32
   778  00FD5B  20                 	db	32
   779  00FD5C  20                 	db	32
   780  00FD5D  20                 	db	32
   781  00FD5E  20                 	db	32
   782  00FD5F  20                 	db	32
   783  00FD60  20                 	db	32
   784  00FD61  20                 	db	32
   785  00FD62  20                 	db	32
   786  00FD63  20                 	db	32
   787  00FD64  20                 	db	32
   788  00FD65  20                 	db	32
   789  00FD66  4D                 	db	77
   790  00FD67  45                 	db	69
   791  00FD68  52                 	db	82
   792  00FD69  43                 	db	67
   793  00FD6A  55                 	db	85
   794  00FD6B  52                 	db	82
   795  00FD6C  59                 	db	89
   796  00FD6D  20                 	db	32
   797  00FD6E  53                 	db	83
   798  00FD6F  59                 	db	89
   799  00FD70  53                 	db	83
   800  00FD71  54                 	db	84
   801  00FD72  45                 	db	69
   802  00FD73  4D                 	db	77
   803  00FD74  0D                 	db	13
   804  00FD75  0A                 	db	10
   805  00FD76  2A                 	db	42
   806  00FD77  2A                 	db	42
   807  00FD78  2A                 	db	42
   808  00FD79  2A                 	db	42
   809  00FD7A  2A                 	db	42
   810  00FD7B  2A                 	db	42
   811  00FD7C  2A                 	db	42
   812  00FD7D  2A                 	db	42
   813  00FD7E  2A                 	db	42
   814  00FD7F  2A                 	db	42
   815  00FD80  2A                 	db	42
   816  00FD81  2A                 	db	42
   817  00FD82  2A                 	db	42
   818  00FD83  2A                 	db	42
   819  00FD84  2A                 	db	42
   820  00FD85  2A                 	db	42
   821  00FD86  2A                 	db	42
   822  00FD87  2A                 	db	42
   823  00FD88  2A                 	db	42
   824  00FD89  2A                 	db	42
   825  00FD8A  2A                 	db	42
   826  00FD8B  2A                 	db	42
   827  00FD8C  2A                 	db	42
   828  00FD8D  2A                 	db	42
   829  00FD8E  2A                 	db	42
   830  00FD8F  2A                 	db	42
   831  00FD90  2A                 	db	42
   832  00FD91  2A                 	db	42
   833  00FD92  2A                 	db	42
   834  00FD93  2A                 	db	42
   835  00FD94  2A                 	db	42
   836  00FD95  2A                 	db	42
   837  00FD96  2A                 	db	42
   838  00FD97  2A                 	db	42
   839  00FD98  2A                 	db	42
   840  00FD99  2A                 	db	42
   841  00FD9A  2A                 	db	42
   842  00FD9B  2A                 	db	42
   843  00FD9C  2A                 	db	42
   844  00FD9D  2A                 	db	42
   845  00FD9E  2A                 	db	42
   846  00FD9F  2A                 	db	42
   847  00FDA0  2A                 	db	42
   848  00FDA1  2A                 	db	42
   849  00FDA2  2A                 	db	42
   850  00FDA3  2A                 	db	42
   851  00FDA4  2A                 	db	42
   852  00FDA5  2A                 	db	42
   853  00FDA6  2A                 	db	42
   854  00FDA7  0D                 	db	13
   855  00FDA8  0A                 	db	10
   856  00FDA9  00                 	db	0
   857  00FDAA                     __end_of_Welcome:
   858                           	opt stack 0
   859  00FDAA                     _configDescriptor1:
   860                           	opt stack 0
   861  00FDAA  09                 	db	9
   862  00FDAB  02                 	db	2
   863  00FDAC  43                 	db	67
   864  00FDAD  00                 	db	0
   865  00FDAE  02                 	db	2
   866  00FDAF  01                 	db	1
   867  00FDB0  00                 	db	0
   868  00FDB1  C0                 	db	192
   869  00FDB2  32                 	db	50
   870  00FDB3  09                 	db	9
   871  00FDB4  04                 	db	4
   872  00FDB5  00                 	db	0
   873  00FDB6  00                 	db	0
   874  00FDB7  01                 	db	1
   875  00FDB8  02                 	db	2
   876  00FDB9  02                 	db	2
   877  00FDBA  01                 	db	1
   878  00FDBB  00                 	db	0
   879  00FDBC  05                 	db	5
   880  00FDBD  24                 	db	36
   881  00FDBE  00                 	db	0
   882  00FDBF  10                 	db	16
   883  00FDC0  01                 	db	1
   884  00FDC1  04                 	db	4
   885  00FDC2  24                 	db	36
   886  00FDC3  02                 	db	2
   887  00FDC4  02                 	db	2
   888  00FDC5  05                 	db	5
   889  00FDC6  24                 	db	36
   890  00FDC7  06                 	db	6
   891  00FDC8  00                 	db	0
   892  00FDC9  01                 	db	1
   893  00FDCA  05                 	db	5
   894  00FDCB  24                 	db	36
   895  00FDCC  01                 	db	1
   896  00FDCD  00                 	db	0
   897  00FDCE  01                 	db	1
   898  00FDCF  07                 	db	7
   899  00FDD0  05                 	db	5
   900  00FDD1  81                 	db	129
   901  00FDD2  03                 	db	3
   902  00FDD3  08                 	db	8
   903  00FDD4  00                 	db	0
   904  00FDD5  02                 	db	2
   905  00FDD6  09                 	db	9
   906  00FDD7  04                 	db	4
   907  00FDD8  01                 	db	1
   908  00FDD9  00                 	db	0
   909  00FDDA  02                 	db	2
   910  00FDDB  0A                 	db	10
   911  00FDDC  00                 	db	0
   912  00FDDD  00                 	db	0
   913  00FDDE  00                 	db	0
   914  00FDDF  07                 	db	7
   915  00FDE0  05                 	db	5
   916  00FDE1  02                 	db	2
   917  00FDE2  02                 	db	2
   918  00FDE3  40                 	db	64
   919  00FDE4  00                 	db	0
   920  00FDE5  00                 	db	0
   921  00FDE6  07                 	db	7
   922  00FDE7  05                 	db	5
   923  00FDE8  82                 	db	130
   924  00FDE9  02                 	db	2
   925  00FDEA  40                 	db	64
   926  00FDEB  00                 	db	0
   927  00FDEC  00                 	db	0
   928  00FDED                     __end_of_configDescriptor1:
   929                           	opt stack 0
   930  00FDED                     _sd002:
   931                           	opt stack 0
   932  00FDED  26                 	db	38
   933  00FDEE  03                 	db	3
   934  00FDEF  0054               	dw	84
   935  00FDF1  0065               	dw	101
   936  00FDF3  0072               	dw	114
   937  00FDF5  006D               	dw	109
   938  00FDF7  0069               	dw	105
   939  00FDF9  006E               	dw	110
   940  00FDFB  0061               	dw	97
   941  00FDFD  006C               	dw	108
   942  00FDFF  0020               	dw	32
   943  00FE01  0049               	dw	73
   944  00FE03  006E               	dw	110
   945  00FE05  0074               	dw	116
   946  00FE07  0065               	dw	101
   947  00FE09  0072               	dw	114
   948  00FE0B  0066               	dw	102
   949  00FE0D  0061               	dw	97
   950  00FE0F  0063               	dw	99
   951  00FE11  0065               	dw	101
   952  00FE13                     __end_of_sd002:
   953                           	opt stack 0
   954  00FE13                     _sd001:
   955                           	opt stack 0
   956  00FE13  1E                 	db	30
   957  00FE14  03                 	db	3
   958  00FE15  004D               	dw	77
   959  00FE17  0065               	dw	101
   960  00FE19  0072               	dw	114
   961  00FE1B  0063               	dw	99
   962  00FE1D  0075               	dw	117
   963  00FE1F  0072               	dw	114
   964  00FE21  0079               	dw	121
   965  00FE23  0020               	dw	32
   966  00FE25  0053               	dw	83
   967  00FE27  0079               	dw	121
   968  00FE29  0073               	dw	115
   969  00FE2B  0074               	dw	116
   970  00FE2D  0065               	dw	101
   971  00FE2F  006D               	dw	109
   972  00FE31                     __end_of_sd001:
   973                           	opt stack 0
   974  00FE31                     _MsgReady:
   975                           	opt stack 0
   976  00FE31  0D                 	db	13
   977  00FE32  0A                 	db	10
   978  00FE33  53                 	db	83
   979  00FE34  79                 	db	121
   980  00FE35  73                 	db	115
   981  00FE36  74                 	db	116
   982  00FE37  65                 	db	101
   983  00FE38  6D                 	db	109
   984  00FE39  20                 	db	32
   985  00FE3A  52                 	db	82
   986  00FE3B  65                 	db	101
   987  00FE3C  61                 	db	97
   988  00FE3D  64                 	db	100
   989  00FE3E  79                 	db	121
   990  00FE3F  2E                 	db	46
   991  00FE40  2E                 	db	46
   992  00FE41  2E                 	db	46
   993  00FE42  20                 	db	32
   994  00FE43  0D                 	db	13
   995  00FE44  0A                 	db	10
   996  00FE45  0D                 	db	13
   997  00FE46  0A                 	db	10
   998  00FE47  00                 	db	0
   999  00FE48                     __end_of_MsgReady:
  1000                           	opt stack 0
  1001  00FE48                     _device_dsc:
  1002                           	opt stack 0
  1003  00FE48  12                 	db	18
  1004  00FE49  01                 	db	1
  1005  00FE4A  0200               	dw	512
  1006  00FE4C  02                 	db	2
  1007  00FE4D  00                 	db	0
  1008  00FE4E  00                 	db	0
  1009  00FE4F  08                 	db	8
  1010  00FE50  04D8               	dw	1240
  1011  00FE52  000A               	dw	10
  1012  00FE54  0100               	dw	256
  1013  00FE56  01                 	db	1
  1014  00FE57  02                 	db	2
  1015  00FE58  00                 	db	0
  1016  00FE59  01                 	db	1
  1017  00FE5A                     __end_of_device_dsc:
  1018                           	opt stack 0
  1019  00FE5A                     _sd000:
  1020                           	opt stack 0
  1021  00FE5A  04                 	db	4
  1022  00FE5B  03                 	db	3
  1023  00FE5C  0409               	dw	1033
  1024  00FE5E                     __end_of_sd000:
  1025                           	opt stack 0
  1026  0000                     _RPINR1	set	3815
  1027  0000                     _UEP0bits	set	3878
  1028  0000                     _UIEbits	set	3894
  1029  0000                     _UADDR	set	3896
  1030  0000                     _UIE	set	3894
  1031  0000                     _UEIE	set	3895
  1032  0000                     _UCFG	set	3897
  1033  0000                     _RTCCAL	set	3902
  1034  0000                     _PADCFG1bits	set	3900
  1035  0000                     _RTCCFGbits	set	3903
  1036  0000                     _DSCONLbits	set	3916
  1037  0000                     _DSGPR1	set	3919
  1038  0000                     _DSGPR0	set	3918
  1039  0000                     _DSCONHbits	set	3917
  1040  0000                     _ANCON1bits	set	3913
  1041  0000                     _UEP1	set	3879
  1042  0000                     _UEP0	set	3878
  1043  0000                     _T1CONbits	set	4045
  1044  0000                     _PORTDbits	set	3971
  1045  0000                     _USTAT	set	3940
  1046  0000                     _PIR2bits	set	4001
  1047  0000                     _UCON	set	3941
  1048  0000                     _UIRbits	set	3938
  1049  0000                     _UCONbits	set	3941
  1050  0000                     _UIR	set	3938
  1051  0000                     _UEIR	set	3939
  1052  0000                     _PIE2bits	set	4000
  1053  0000                     _BAUDCON2	set	3964
  1054  0000                     _RCSTA2	set	3996
  1055  0000                     _BAUDCON1	set	3966
  1056  0000                     _RCSTA1	set	4012
  1057  0000                     _TRISCbits	set	3988
  1058  0000                     _TXSTA2	set	4008
  1059  0000                     _TXSTA1	set	4013
  1060  0000                     _RCREG2	set	4010
  1061  0000                     _RCREG1	set	4015
  1062  0000                     _TXREG2	set	4009
  1063  0000                     _TXREG1	set	4014
  1064  0000                     _SPBRG2	set	4011
  1065  0000                     _SPBRGH2	set	3965
  1066  0000                     _SPBRG1	set	4016
  1067  0000                     _SPBRGH1	set	3967
  1068  0000                     _PR4	set	3959
  1069  0000                     _PR2	set	4043
  1070  0000                     _PIE1bits	set	3997
  1071  0000                     _IPR1bits	set	3999
  1072  0000                     _T4CONbits	set	3958
  1073  0000                     _T2CONbits	set	4042
  1074  0000                     _ALRMVALL	set	3982
  1075  0000                     _ALRMVALH	set	3983
  1076  0000                     _RTCVALH	set	3993
  1077  0000                     _RTCVALL	set	3992
  1078  0000                     _ALRMRPTbits	set	3984
  1079  0000                     _ALRMCFGbits	set	3985
  1080  0000                     _PIE3bits	set	4003
  1081  0000                     _IPR3bits	set	4005
  1082  0000                     _OSCCONbits	set	4051
  1083  0000                     _PORTEbits	set	3972
  1084  0000                     _TRISEbits	set	3990
  1085  0000                     _WDTCONbits	set	4032
  1086  0000                     _INTCON2bits	set	4081
  1087  0000                     _TRISBbits	set	3987
  1088  0000                     _OSCTUNEbits	set	3995
  1089  0000                     _SSP2CON1	set	3954
  1090  0000                     _TRISDbits	set	3989
  1091  0000                     _SSP2BUF	set	3957
  1092  0000                     _SSP2CON2bits	set	3953
  1093  0000                     _SSP2STAT	set	3955
  1094  0000                     _SSP2CON2	set	3953
  1095  0000                     _SSP2ADD	set	3956
  1096  0000                     _PIR1bits	set	3998
  1097  0000                     _PIR3bits	set	4004
  1098  0000                     _INTCON3bits	set	4080
  1099  0000                     _INTCONbits	set	4082
  1100  0000                     _RCONbits	set	4048
  1101  00FE5E                     STR_21:
  1102  00FE5E  20                 	db	32
  1103  00FE5F  4C                 	db	76	;'L'
  1104  00FE60  61                 	db	97	;'a'
  1105  00FE61  7A                 	db	122	;'z'
  1106  00FE62  79                 	db	121	;'y'
  1107  00FE63  20                 	db	32
  1108  00FE64  64                 	db	100	;'d'
  1109  00FE65  65                 	db	101	;'e'
  1110  00FE66  76                 	db	118	;'v'
  1111  00FE67  69                 	db	105	;'i'
  1112  00FE68  63                 	db	99	;'c'
  1113  00FE69  65                 	db	101	;'e'
  1114  00FE6A  2E                 	db	46
  1115  00FE6B  2E                 	db	46
  1116  00FE6C  2E                 	db	46
  1117  00FE6D  79                 	db	121	;'y'
  1118  00FE6E  6F                 	db	111	;'o'
  1119  00FE6F  75                 	db	117	;'u'
  1120  00FE70  27                 	db	39
  1121  00FE71  76                 	db	118	;'v'
  1122  00FE72  65                 	db	101	;'e'
  1123  00FE73  20                 	db	32
  1124  00FE74  62                 	db	98	;'b'
  1125  00FE75  65                 	db	101	;'e'
  1126  00FE76  65                 	db	101	;'e'
  1127  00FE77  6E                 	db	110	;'n'
  1128  00FE78  20                 	db	32
  1129  00FE79  74                 	db	116	;'t'
  1130  00FE7A  69                 	db	105	;'i'
  1131  00FE7B  6D                 	db	109	;'m'
  1132  00FE7C  65                 	db	101	;'e'
  1133  00FE7D  64                 	db	100	;'d'
  1134  00FE7E  2D                 	db	45
  1135  00FE7F  6F                 	db	111	;'o'
  1136  00FE80  75                 	db	117	;'u'
  1137  00FE81  74                 	db	116	;'t'
  1138  00FE82  21                 	db	33
  1139  00FE83  21                 	db	33
  1140  00FE84  21                 	db	33
  1141  00FE85  0D                 	db	13
  1142  00FE86  0A                 	db	10
  1143  00FE87  00                 	db	0
  1144  00FE88                     STR_8:
  1145  00FE88  41                 	db	65	;'A'
  1146  00FE89  54                 	db	84	;'T'
  1147  00FE8A  2B                 	db	43
  1148  00FE8B  53                 	db	83	;'S'
  1149  00FE8C  41                 	db	65	;'A'
  1150  00FE8D  50                 	db	80	;'P'
  1151  00FE8E  42                 	db	66	;'B'
  1152  00FE8F  52                 	db	82	;'R'
  1153  00FE90  3D                 	db	61	;'='
  1154  00FE91  33                 	db	51	;'3'
  1155  00FE92  2C                 	db	44
  1156  00FE93  31                 	db	49	;'1'
  1157  00FE94  2C                 	db	44
  1158  00FE95  22                 	db	34
  1159  00FE96  43                 	db	67	;'C'
  1160  00FE97  6F                 	db	111	;'o'
  1161  00FE98  6E                 	db	110	;'n'
  1162  00FE99  74                 	db	116	;'t'
  1163  00FE9A  79                 	db	121	;'y'
  1164  00FE9B  70                 	db	112	;'p'
  1165  00FE9C  65                 	db	101	;'e'
  1166  00FE9D  22                 	db	34
  1167  00FE9E  2C                 	db	44
  1168  00FE9F  22                 	db	34
  1169  00FEA0  47                 	db	71	;'G'
  1170  00FEA1  50                 	db	80	;'P'
  1171  00FEA2  52                 	db	82	;'R'
  1172  00FEA3  53                 	db	83	;'S'
  1173  00FEA4  22                 	db	34
  1174  00FEA5  0D                 	db	13
  1175  00FEA6  00                 	db	0
  1176  00FEA7                     STR_14:
  1177  00FEA7  41                 	db	65	;'A'
  1178  00FEA8  54                 	db	84	;'T'
  1179  00FEA9  2B                 	db	43
  1180  00FEAA  48                 	db	72	;'H'
  1181  00FEAB  54                 	db	84	;'T'
  1182  00FEAC  54                 	db	84	;'T'
  1183  00FEAD  50                 	db	80	;'P'
  1184  00FEAE  50                 	db	80	;'P'
  1185  00FEAF  41                 	db	65	;'A'
  1186  00FEB0  52                 	db	82	;'R'
  1187  00FEB1  41                 	db	65	;'A'
  1188  00FEB2  3D                 	db	61	;'='
  1189  00FEB3  22                 	db	34
  1190  00FEB4  43                 	db	67	;'C'
  1191  00FEB5  49                 	db	73	;'I'
  1192  00FEB6  44                 	db	68	;'D'
  1193  00FEB7  22                 	db	34
  1194  00FEB8  2C                 	db	44
  1195  00FEB9  31                 	db	49	;'1'
  1196  00FEBA  0D                 	db	13
  1197  00FEBB  00                 	db	0
  1198  00FEBC                     STR_9:
  1199  00FEBC  41                 	db	65	;'A'
  1200  00FEBD  54                 	db	84	;'T'
  1201  00FEBE  2B                 	db	43
  1202  00FEBF  53                 	db	83	;'S'
  1203  00FEC0  41                 	db	65	;'A'
  1204  00FEC1  50                 	db	80	;'P'
  1205  00FEC2  42                 	db	66	;'B'
  1206  00FEC3  52                 	db	82	;'R'
  1207  00FEC4  3D                 	db	61	;'='
  1208  00FEC5  33                 	db	51	;'3'
  1209  00FEC6  2C                 	db	44
  1210  00FEC7  31                 	db	49	;'1'
  1211  00FEC8  2C                 	db	44
  1212  00FEC9  22                 	db	34
  1213  00FECA  41                 	db	65	;'A'
  1214  00FECB  50                 	db	80	;'P'
  1215  00FECC  4E                 	db	78	;'N'
  1216  00FECD  22                 	db	34
  1217  00FECE  2C                 	db	44
  1218  00FECF  22                 	db	34
  1219  00FED0  00                 	db	0
  1220  00FED1                     STR_23:
  1221  00FED1  46                 	db	70	;'F'
  1222  00FED2  72                 	db	114	;'r'
  1223  00FED3  61                 	db	97	;'a'
  1224  00FED4  6D                 	db	109	;'m'
  1225  00FED5  65                 	db	101	;'e'
  1226  00FED6  77                 	db	119	;'w'
  1227  00FED7  6F                 	db	111	;'o'
  1228  00FED8  72                 	db	114	;'r'
  1229  00FED9  6B                 	db	107	;'k'
  1230  00FEDA  20                 	db	32
  1231  00FEDB  56                 	db	86	;'V'
  1232  00FEDC  65                 	db	101	;'e'
  1233  00FEDD  72                 	db	114	;'r'
  1234  00FEDE  73                 	db	115	;'s'
  1235  00FEDF  69                 	db	105	;'i'
  1236  00FEE0  6F                 	db	111	;'o'
  1237  00FEE1  6E                 	db	110	;'n'
  1238  00FEE2  3A                 	db	58	;':'
  1239  00FEE3  20                 	db	32
  1240  00FEE4  00                 	db	0
  1241  00FEE5                     STR_15:
  1242  00FEE5  41                 	db	65	;'A'
  1243  00FEE6  54                 	db	84	;'T'
  1244  00FEE7  2B                 	db	43
  1245  00FEE8  48                 	db	72	;'H'
  1246  00FEE9  54                 	db	84	;'T'
  1247  00FEEA  54                 	db	84	;'T'
  1248  00FEEB  50                 	db	80	;'P'
  1249  00FEEC  50                 	db	80	;'P'
  1250  00FEED  41                 	db	65	;'A'
  1251  00FEEE  52                 	db	82	;'R'
  1252  00FEEF  41                 	db	65	;'A'
  1253  00FEF0  3D                 	db	61	;'='
  1254  00FEF1  22                 	db	34
  1255  00FEF2  55                 	db	85	;'U'
  1256  00FEF3  52                 	db	82	;'R'
  1257  00FEF4  4C                 	db	76	;'L'
  1258  00FEF5  22                 	db	34
  1259  00FEF6  2C                 	db	44
  1260  00FEF7  22                 	db	34
  1261  00FEF8  00                 	db	0
  1262  00FEF9                     STR_29:
  1263  00FEF9  41                 	db	65	;'A'
  1264  00FEFA  54                 	db	84	;'T'
  1265  00FEFB  2B                 	db	43
  1266  00FEFC  43                 	db	67	;'C'
  1267  00FEFD  4D                 	db	77	;'M'
  1268  00FEFE  47                 	db	71	;'G'
  1269  00FEFF  44                 	db	68	;'D'
  1270  00FF00  41                 	db	65	;'A'
  1271  00FF01  3D                 	db	61	;'='
  1272  00FF02  44                 	db	68	;'D'
  1273  00FF03  45                 	db	69	;'E'
  1274  00FF04  4C                 	db	76	;'L'
  1275  00FF05  20                 	db	32
  1276  00FF06  41                 	db	65	;'A'
  1277  00FF07  4C                 	db	76	;'L'
  1278  00FF08  4C                 	db	76	;'L'
  1279  00FF09  0D                 	db	13
  1280  00FF0A  0A                 	db	10
  1281  00FF0B  00                 	db	0
  1282  00FF0C                     STR_27:
  1283  00FF0C  42                 	db	66	;'B'
  1284  00FF0D  75                 	db	117	;'u'
  1285  00FF0E  69                 	db	105	;'i'
  1286  00FF0F  6C                 	db	108	;'l'
  1287  00FF10  64                 	db	100	;'d'
  1288  00FF11  20                 	db	32
  1289  00FF12  44                 	db	68	;'D'
  1290  00FF13  61                 	db	97	;'a'
  1291  00FF14  74                 	db	116	;'t'
  1292  00FF15  65                 	db	101	;'e'
  1293  00FF16  3A                 	db	58	;':'
  1294  00FF17  20                 	db	32
  1295  00FF18  25                 	db	37
  1296  00FF19  73                 	db	115	;'s'
  1297  00FF1A  0D                 	db	13
  1298  00FF1B  0A                 	db	10
  1299  00FF1C  00                 	db	0
  1300  00FF1D                     STR_16:
  1301  00FF1D  41                 	db	65	;'A'
  1302  00FF1E  54                 	db	84	;'T'
  1303  00FF1F  2B                 	db	43
  1304  00FF20  48                 	db	72	;'H'
  1305  00FF21  54                 	db	84	;'T'
  1306  00FF22  54                 	db	84	;'T'
  1307  00FF23  50                 	db	80	;'P'
  1308  00FF24  41                 	db	65	;'A'
  1309  00FF25  43                 	db	67	;'C'
  1310  00FF26  54                 	db	84	;'T'
  1311  00FF27  49                 	db	73	;'I'
  1312  00FF28  4F                 	db	79	;'O'
  1313  00FF29  4E                 	db	78	;'N'
  1314  00FF2A  3D                 	db	61	;'='
  1315  00FF2B  30                 	db	48	;'0'
  1316  00FF2C  0D                 	db	13
  1317  00FF2D  00                 	db	0
  1318  00FF2E                     STR_31:
  1319  00FF2E  41                 	db	65	;'A'
  1320  00FF2F  54                 	db	84	;'T'
  1321  00FF30  2B                 	db	43
  1322  00FF31  43                 	db	67	;'C'
  1323  00FF32  4D                 	db	77	;'M'
  1324  00FF33  47                 	db	71	;'G'
  1325  00FF34  44                 	db	68	;'D'
  1326  00FF35  3D                 	db	61	;'='
  1327  00FF36  31                 	db	49	;'1'
  1328  00FF37  2C                 	db	44
  1329  00FF38  30                 	db	48	;'0'
  1330  00FF39  0D                 	db	13
  1331  00FF3A  0A                 	db	10
  1332  00FF3B  00                 	db	0
  1333  00FF3C  41                 	db	65	;'A'
  1334  00FF3D  54                 	db	84	;'T'
  1335  00FF3E  2B                 	db	43
  1336  00FF3F  48                 	db	72	;'H'
  1337  00FF40  54                 	db	84	;'T'
  1338  00FF41  54                 	db	84	;'T'
  1339  00FF42  50                 	db	80	;'P'
  1340  00FF43  53                 	db	83	;'S'
  1341  00FF44  53                 	db	83	;'S'
  1342  00FF45  4C                 	db	76	;'L'
  1343  00FF46  3D                 	db	61	;'='
  1344  00FF47  30                 	db	48	;'0'
  1345  00FF48  0D                 	db	13
  1346  00FF49  00                 	db	0
  1347  00FF4A                     STR_10:
  1348  00FF4A  41                 	db	65	;'A'
  1349  00FF4B  54                 	db	84	;'T'
  1350  00FF4C  2B                 	db	43
  1351  00FF4D  53                 	db	83	;'S'
  1352  00FF4E  41                 	db	65	;'A'
  1353  00FF4F  50                 	db	80	;'P'
  1354  00FF50  42                 	db	66	;'B'
  1355  00FF51  52                 	db	82	;'R'
  1356  00FF52  3D                 	db	61	;'='
  1357  00FF53  31                 	db	49	;'1'
  1358  00FF54  2C                 	db	44
  1359  00FF55  31                 	db	49	;'1'
  1360  00FF56  0D                 	db	13
  1361  00FF57  00                 	db	0
  1362  00FF58                     STR_11:
  1363  00FF58  41                 	db	65	;'A'
  1364  00FF59  54                 	db	84	;'T'
  1365  00FF5A  2B                 	db	43
  1366  00FF5B  53                 	db	83	;'S'
  1367  00FF5C  41                 	db	65	;'A'
  1368  00FF5D  50                 	db	80	;'P'
  1369  00FF5E  42                 	db	66	;'B'
  1370  00FF5F  52                 	db	82	;'R'
  1371  00FF60  3D                 	db	61	;'='
  1372  00FF61  32                 	db	50	;'2'
  1373  00FF62  2C                 	db	44
  1374  00FF63  31                 	db	49	;'1'
  1375  00FF64  0D                 	db	13
  1376  00FF65  00                 	db	0
  1377  00FF66                     STR_13:
  1378  00FF66  41                 	db	65	;'A'
  1379  00FF67  54                 	db	84	;'T'
  1380  00FF68  2B                 	db	43
  1381  00FF69  48                 	db	72	;'H'
  1382  00FF6A  54                 	db	84	;'T'
  1383  00FF6B  54                 	db	84	;'T'
  1384  00FF6C  50                 	db	80	;'P'
  1385  00FF6D  53                 	db	83	;'S'
  1386  00FF6E  53                 	db	83	;'S'
  1387  00FF6F  4C                 	db	76	;'L'
  1388  00FF70  3D                 	db	61	;'='
  1389  00FF71  31                 	db	49	;'1'
  1390  00FF72  0D                 	db	13
  1391  00FF73  00                 	db	0
  1392  00FF74                     STR_2:
  1393  00FF74  41                 	db	65	;'A'
  1394  00FF75  54                 	db	84	;'T'
  1395  00FF76  2B                 	db	43
  1396  00FF77  49                 	db	73	;'I'
  1397  00FF78  50                 	db	80	;'P'
  1398  00FF79  52                 	db	82	;'R'
  1399  00FF7A  3D                 	db	61	;'='
  1400  00FF7B  39                 	db	57	;'9'
  1401  00FF7C  36                 	db	54	;'6'
  1402  00FF7D  30                 	db	48	;'0'
  1403  00FF7E  30                 	db	48	;'0'
  1404  00FF7F  0D                 	db	13
  1405  00FF80  0A                 	db	10
  1406  00FF81  00                 	db	0
  1407  00FF82                     STR_17:
  1408  00FF82  41                 	db	65	;'A'
  1409  00FF83  54                 	db	84	;'T'
  1410  00FF84  2B                 	db	43
  1411  00FF85  48                 	db	72	;'H'
  1412  00FF86  54                 	db	84	;'T'
  1413  00FF87  54                 	db	84	;'T'
  1414  00FF88  50                 	db	80	;'P'
  1415  00FF89  52                 	db	82	;'R'
  1416  00FF8A  45                 	db	69	;'E'
  1417  00FF8B  41                 	db	65	;'A'
  1418  00FF8C  44                 	db	68	;'D'
  1419  00FF8D  0D                 	db	13
  1420  00FF8E  00                 	db	0
  1421  00FF8F                     STR_18:
  1422  00FF8F  41                 	db	65	;'A'
  1423  00FF90  54                 	db	84	;'T'
  1424  00FF91  2B                 	db	43
  1425  00FF92  48                 	db	72	;'H'
  1426  00FF93  54                 	db	84	;'T'
  1427  00FF94  54                 	db	84	;'T'
  1428  00FF95  50                 	db	80	;'P'
  1429  00FF96  54                 	db	84	;'T'
  1430  00FF97  45                 	db	69	;'E'
  1431  00FF98  52                 	db	82	;'R'
  1432  00FF99  4D                 	db	77	;'M'
  1433  00FF9A  0D                 	db	13
  1434  00FF9B  00                 	db	0
  1435  00FF9C                     STR_12:
  1436  00FF9C  41                 	db	65	;'A'
  1437  00FF9D  54                 	db	84	;'T'
  1438  00FF9E  2B                 	db	43
  1439  00FF9F  48                 	db	72	;'H'
  1440  00FFA0  54                 	db	84	;'T'
  1441  00FFA1  54                 	db	84	;'T'
  1442  00FFA2  50                 	db	80	;'P'
  1443  00FFA3  49                 	db	73	;'I'
  1444  00FFA4  4E                 	db	78	;'N'
  1445  00FFA5  49                 	db	73	;'I'
  1446  00FFA6  54                 	db	84	;'T'
  1447  00FFA7  0D                 	db	13
  1448  00FFA8  00                 	db	0
  1449  00FFA9                     STR_30:
  1450  00FFA9  41                 	db	65	;'A'
  1451  00FFAA  54                 	db	84	;'T'
  1452  00FFAB  2B                 	db	43
  1453  00FFAC  43                 	db	67	;'C'
  1454  00FFAD  4C                 	db	76	;'L'
  1455  00FFAE  49                 	db	73	;'I'
  1456  00FFAF  50                 	db	80	;'P'
  1457  00FFB0  3D                 	db	61	;'='
  1458  00FFB1  31                 	db	49	;'1'
  1459  00FFB2  0D                 	db	13
  1460  00FFB3  0A                 	db	10
  1461  00FFB4  00                 	db	0
  1462  00FFB5                     STR_28:
  1463  00FFB5  4D                 	db	77	;'M'
  1464  00FFB6  61                 	db	97	;'a'
  1465  00FFB7  72                 	db	114	;'r'
  1466  00FFB8  20                 	db	32
  1467  00FFB9  31                 	db	49	;'1'
  1468  00FFBA  36                 	db	54	;'6'
  1469  00FFBB  20                 	db	32
  1470  00FFBC  32                 	db	50	;'2'
  1471  00FFBD  30                 	db	48	;'0'
  1472  00FFBE  32                 	db	50	;'2'
  1473  00FFBF  32                 	db	50	;'2'
  1474  00FFC0  00                 	db	0
  1475  00FFC1                     STR_4:
  1476  00FFC1  41                 	db	65	;'A'
  1477  00FFC2  54                 	db	84	;'T'
  1478  00FFC3  2B                 	db	43
  1479  00FFC4  43                 	db	67	;'C'
  1480  00FFC5  4D                 	db	77	;'M'
  1481  00FFC6  47                 	db	71	;'G'
  1482  00FFC7  52                 	db	82	;'R'
  1483  00FFC8  3D                 	db	61	;'='
  1484  00FFC9  31                 	db	49	;'1'
  1485  00FFCA  0D                 	db	13
  1486  00FFCB  0A                 	db	10
  1487  00FFCC  00                 	db	0
  1488  00FFCD                     STR_5:
  1489  00FFCD  41                 	db	65	;'A'
  1490  00FFCE  54                 	db	84	;'T'
  1491  00FFCF  2B                 	db	43
  1492  00FFD0  43                 	db	67	;'C'
  1493  00FFD1  4D                 	db	77	;'M'
  1494  00FFD2  47                 	db	71	;'G'
  1495  00FFD3  53                 	db	83	;'S'
  1496  00FFD4  3D                 	db	61	;'='
  1497  00FFD5  22                 	db	34
  1498  00FFD6  00                 	db	0
  1499  00FFD7                     STR_32:
  1500  00FFD7  28                 	db	40
  1501  00FFD8  6E                 	db	110	;'n'
  1502  00FFD9  75                 	db	117	;'u'
  1503  00FFDA  6C                 	db	108	;'l'
  1504  00FFDB  6C                 	db	108	;'l'
  1505  00FFDC  29                 	db	41
  1506  00FFDD  00                 	db	0
  1507  00FFDE                     STR_3:
  1508  00FFDE  41                 	db	65	;'A'
  1509  00FFDF  54                 	db	84	;'T'
  1510  00FFE0  45                 	db	69	;'E'
  1511  00FFE1  30                 	db	48	;'0'
  1512  00FFE2  0D                 	db	13
  1513  00FFE3  0A                 	db	10
  1514  00FFE4  00                 	db	0
  1515  00FFE5                     STR_1:
  1516  00FFE5  41                 	db	65	;'A'
  1517  00FFE6  54                 	db	84	;'T'
  1518  00FFE7  0D                 	db	13
  1519  00FFE8  0A                 	db	10
  1520  00FFE9  00                 	db	0
  1521  00FFEA  41                 	db	65	;'A'
  1522  00FFEB  54                 	db	84	;'T'
  1523  00FFEC  41                 	db	65	;'A'
  1524  00FFED  0D                 	db	13
  1525  00FFEE  00                 	db	0
  1526  00FFEF  41                 	db	65	;'A'
  1527  00FFF0  54                 	db	84	;'T'
  1528  00FFF1  48                 	db	72	;'H'
  1529  00FFF2  0D                 	db	13
  1530  00FFF3  00                 	db	0
  1531  00FFF4                     STR_24:
  1532  00FFF4  2E                 	db	46
  1533  00FFF5  00                 	db	0
  1534  0000                     
  1535                           ; #config settings
  1536  00FFF6  00                 	db	0	; dummy byte at the end
  1537  0000                     
  1538                           	psect	cinit
  1539  00298A                     __pcinit:
  1540                           	opt stack 0
  1541  00298A                     start_initialization:
  1542                           	opt stack 0
  1543  00298A                     __initialization:
  1544                           	opt stack 0
  1545                           
  1546                           ; Initialize objects allocated to BANK5 (80 bytes)
  1547                           ; load TBLPTR registers with __pidataBANK5
  1548  00298A  0E18               	movlw	low __pidataBANK5
  1549  00298C  6EF6               	movwf	tblptrl,c
  1550  00298E  0E55               	movlw	high __pidataBANK5
  1551  002990  6EF7               	movwf	tblptrh,c
  1552  002992  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1553  002994  6EF8               	movwf	tblptru,c
  1554  002996  EE05  F090         	lfsr	0,__pdataBANK5
  1555  00299A  EE10 F050          	lfsr	1,80
  1556  00299E                     copy_data0:
  1557  00299E  0009               	tblrd		*+
  1558  0029A0  CFF5 FFEE          	movff	tablat,postinc0
  1559  0029A4  50E5               	movf	postdec1,w,c
  1560  0029A6  50E1               	movf	fsr1l,w,c
  1561  0029A8  E1FA               	bnz	copy_data0
  1562                           
  1563                           ; Initialize objects allocated to BANK3 (65 bytes)
  1564                           ; load TBLPTR registers with __pidataBANK3
  1565  0029AA  0E1E               	movlw	low __pidataBANK3
  1566  0029AC  6EF6               	movwf	tblptrl,c
  1567  0029AE  0E59               	movlw	high __pidataBANK3
  1568  0029B0  6EF7               	movwf	tblptrh,c
  1569  0029B2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1570  0029B4  6EF8               	movwf	tblptru,c
  1571  0029B6  EE03  F0BE         	lfsr	0,__pdataBANK3
  1572  0029BA  EE10 F041          	lfsr	1,65
  1573  0029BE                     copy_data1:
  1574  0029BE  0009               	tblrd		*+
  1575  0029C0  CFF5 FFEE          	movff	tablat,postinc0
  1576  0029C4  50E5               	movf	postdec1,w,c
  1577  0029C6  50E1               	movf	fsr1l,w,c
  1578  0029C8  E1FA               	bnz	copy_data1
  1579                           
  1580                           ; Initialize objects allocated to BANK2 (13 bytes)
  1581                           ; load TBLPTR registers with __pidataBANK2
  1582  0029CA  0E04               	movlw	low __pidataBANK2
  1583  0029CC  6EF6               	movwf	tblptrl,c
  1584  0029CE  0E62               	movlw	high __pidataBANK2
  1585  0029D0  6EF7               	movwf	tblptrh,c
  1586  0029D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1587  0029D4  6EF8               	movwf	tblptru,c
  1588  0029D6  EE02  F0F3         	lfsr	0,__pdataBANK2
  1589  0029DA  EE10 F00D          	lfsr	1,13
  1590  0029DE                     copy_data2:
  1591  0029DE  0009               	tblrd		*+
  1592  0029E0  CFF5 FFEE          	movff	tablat,postinc0
  1593  0029E4  50E5               	movf	postdec1,w,c
  1594  0029E6  50E1               	movf	fsr1l,w,c
  1595  0029E8  E1FA               	bnz	copy_data2
  1596                           
  1597                           ; Initialize objects allocated to BANK1 (1 bytes)
  1598                           ; load TBLPTR registers with __pidataBANK1
  1599  0029EA  0E80               	movlw	low __pidataBANK1
  1600  0029EC  6EF6               	movwf	tblptrl,c
  1601  0029EE  0E62               	movlw	high __pidataBANK1
  1602  0029F0  6EF7               	movwf	tblptrh,c
  1603  0029F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1604  0029F4  6EF8               	movwf	tblptru,c
  1605  0029F6  0009               	tblrd		*+	;fetch initializer
  1606  0029F8  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1607                           
  1608                           ; Initialize objects allocated to BANK4 (24 bytes)
  1609                           ; load TBLPTR registers with __pidataBANK4
  1610  0029FC  0EB6               	movlw	low __pidataBANK4
  1611  0029FE  6EF6               	movwf	tblptrl,c
  1612  002A00  0E60               	movlw	high __pidataBANK4
  1613  002A02  6EF7               	movwf	tblptrh,c
  1614  002A04  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1615  002A06  6EF8               	movwf	tblptru,c
  1616  002A08  EE04  F0E2         	lfsr	0,__pdataBANK4
  1617  002A0C  EE10 F018          	lfsr	1,24
  1618  002A10                     copy_data3:
  1619  002A10  0009               	tblrd		*+
  1620  002A12  CFF5 FFEE          	movff	tablat,postinc0
  1621  002A16  50E5               	movf	postdec1,w,c
  1622  002A18  50E1               	movf	fsr1l,w,c
  1623  002A1A  E1FA               	bnz	copy_data3
  1624                           
  1625                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1626  002A1C  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1627  002A20  EE13 F020          	lfsr	1,800
  1628  002A24                     clear_0:
  1629  002A24  6AEE               	clrf	postinc0,c
  1630  002A26  50E5               	movf	postdec1,w,c
  1631  002A28  50E1               	movf	fsr1l,w,c
  1632  002A2A  E1FC               	bnz	clear_0
  1633  002A2C  50E2               	movf	fsr1h,w,c
  1634  002A2E  E1FA               	bnz	clear_0
  1635                           
  1636                           ; Clear objects allocated to BANK9 (200 bytes)
  1637  002A30  EE09  F000         	lfsr	0,__pbssBANK9
  1638  002A34  0EC8               	movlw	200
  1639  002A36                     clear_1:
  1640  002A36  6AEE               	clrf	postinc0,c
  1641  002A38  06E8               	decf	wreg,f,c
  1642  002A3A  E1FD               	bnz	clear_1
  1643                           
  1644                           ; Clear objects allocated to BANK8 (200 bytes)
  1645  002A3C  EE08  F000         	lfsr	0,__pbssBANK8
  1646  002A40  0EC8               	movlw	200
  1647  002A42                     clear_2:
  1648  002A42  6AEE               	clrf	postinc0,c
  1649  002A44  06E8               	decf	wreg,f,c
  1650  002A46  E1FD               	bnz	clear_2
  1651                           
  1652                           ; Clear objects allocated to BANK7 (246 bytes)
  1653  002A48  EE07  F000         	lfsr	0,__pbssBANK7
  1654  002A4C  0EF6               	movlw	246
  1655  002A4E                     clear_3:
  1656  002A4E  6AEE               	clrf	postinc0,c
  1657  002A50  06E8               	decf	wreg,f,c
  1658  002A52  E1FD               	bnz	clear_3
  1659                           
  1660                           ; Clear objects allocated to BANK6 (220 bytes)
  1661  002A54  EE06  F000         	lfsr	0,__pbssBANK6
  1662  002A58  0EDC               	movlw	220
  1663  002A5A                     clear_4:
  1664  002A5A  6AEE               	clrf	postinc0,c
  1665  002A5C  06E8               	decf	wreg,f,c
  1666  002A5E  E1FD               	bnz	clear_4
  1667                           
  1668                           ; Clear objects allocated to BANK5 (144 bytes)
  1669  002A60  EE05  F000         	lfsr	0,__pbssBANK5
  1670  002A64  0E90               	movlw	144
  1671  002A66                     clear_5:
  1672  002A66  6AEE               	clrf	postinc0,c
  1673  002A68  06E8               	decf	wreg,f,c
  1674  002A6A  E1FD               	bnz	clear_5
  1675                           
  1676                           ; Clear objects allocated to BANK3 (190 bytes)
  1677  002A6C  EE03  F000         	lfsr	0,__pbssBANK3
  1678  002A70  0EBE               	movlw	190
  1679  002A72                     clear_6:
  1680  002A72  6AEE               	clrf	postinc0,c
  1681  002A74  06E8               	decf	wreg,f,c
  1682  002A76  E1FD               	bnz	clear_6
  1683                           
  1684                           ; Clear objects allocated to BANK2 (42 bytes)
  1685  002A78  EE02  F0C9         	lfsr	0,__pbssBANK2
  1686  002A7C  0E2A               	movlw	42
  1687  002A7E                     clear_7:
  1688  002A7E  6AEE               	clrf	postinc0,c
  1689  002A80  06E8               	decf	wreg,f,c
  1690  002A82  E1FD               	bnz	clear_7
  1691                           
  1692                           ; Clear objects allocated to BANK1 (54 bytes)
  1693  002A84  EE01  F0C9         	lfsr	0,__pbssBANK1
  1694  002A88  0E36               	movlw	54
  1695  002A8A                     clear_8:
  1696  002A8A  6AEE               	clrf	postinc0,c
  1697  002A8C  06E8               	decf	wreg,f,c
  1698  002A8E  E1FD               	bnz	clear_8
  1699                           
  1700                           ; Clear objects allocated to BANK4 (162 bytes)
  1701  002A90  EE04  F040         	lfsr	0,__pbssBANK4
  1702  002A94  0EA2               	movlw	162
  1703  002A96                     clear_9:
  1704  002A96  6AEE               	clrf	postinc0,c
  1705  002A98  06E8               	decf	wreg,f,c
  1706  002A9A  E1FD               	bnz	clear_9
  1707                           
  1708                           ; Clear objects allocated to BANK0 (46 bytes)
  1709  002A9C  EE00  F0B5         	lfsr	0,__pbssBANK0
  1710  002AA0  0E2E               	movlw	46
  1711  002AA2                     clear_10:
  1712  002AA2  6AEE               	clrf	postinc0,c
  1713  002AA4  06E8               	decf	wreg,f,c
  1714  002AA6  E1FD               	bnz	clear_10
  1715                           
  1716                           ; Clear objects allocated to COMRAM (31 bytes)
  1717  002AA8  EE00  F023         	lfsr	0,__pbssCOMRAM
  1718  002AAC  0E1F               	movlw	31
  1719  002AAE                     clear_11:
  1720  002AAE  6AEE               	clrf	postinc0,c
  1721  002AB0  06E8               	decf	wreg,f,c
  1722  002AB2  E1FD               	bnz	clear_11
  1723  002AB4                     end_of_initialization:
  1724                           	opt stack 0
  1725  002AB4                     __end_of__initialization:
  1726                           	opt stack 0
  1727  002AB4  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1728  002AB6  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1729  002AB8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1730  002ABA  6EF8               	movwf	tblptru,c
  1731  002ABC  0100               	movlb	0
  1732  002ABE  EF09  F031         	goto	_main	;jump to C main() function
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           postdec1	equ	0xFE5
  1740                           fsr1h	equ	0xFE2
  1741                           fsr1l	equ	0xFE1
  1742                           
  1743                           	psect	bssCOMRAM
  1744  000023                     __pbssCOMRAM:
  1745                           	opt stack 0
  1746  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1747                           	opt stack 0
  1748  000023                     	ds	2
  1749  000025                     _USBDeferOUTDataStagePackets:
  1750                           	opt stack 0
  1751  000025                     	ds	1
  1752  000026                     _USBDeferINDataStagePackets:
  1753                           	opt stack 0
  1754  000026                     	ds	1
  1755  000027                     _USBStatusStageEnabledFlag2:
  1756                           	opt stack 0
  1757  000027                     	ds	1
  1758  000028                     _USBStatusStageEnabledFlag1:
  1759                           	opt stack 0
  1760  000028                     	ds	1
  1761  000029                     _USBStatusStageTimeoutCounter:
  1762                           	opt stack 0
  1763  000029                     	ds	1
  1764  00002A                     InitGprsNetwork@GprsNetInitNextState:
  1765                           	opt stack 0
  1766  00002A                     	ds	1
  1767  00002B                     _ComChecCompleted:
  1768                           	opt stack 0
  1769  00002B                     	ds	1
  1770  00002C                     Uart_Uart1RxIsr@UartRxData:
  1771                           	opt stack 0
  1772  00002C                     	ds	1
  1773  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1774                           	opt stack 0
  1775  00002D                     	ds	1
  1776  00002E                     MdmCntSm@MdmCntState:
  1777                           	opt stack 0
  1778  00002E                     	ds	1
  1779  00002F                     RiSm@MdmDrvState:
  1780                           	opt stack 0
  1781  00002F                     	ds	1
  1782  000030                     _Mmd_RingIndicator:
  1783                           	opt stack 0
  1784  000030                     	ds	1
  1785  000031                     I2c_ReadData@ReadStatus:
  1786                           	opt stack 0
  1787  000031                     	ds	1
  1788  000032                     I2c_ReadData@TentativeCounter:
  1789                           	opt stack 0
  1790  000032                     	ds	1
  1791  000033                     I2c_ReadData@DataCounter:
  1792                           	opt stack 0
  1793  000033                     	ds	1
  1794  000034                     I2c_ReadData@I2cReadState:
  1795                           	opt stack 0
  1796  000034                     	ds	1
  1797  000035                     I2c_WriteData@WriteStatus:
  1798                           	opt stack 0
  1799  000035                     	ds	1
  1800  000036                     I2c_WriteData@TentativeCounter:
  1801                           	opt stack 0
  1802  000036                     	ds	1
  1803  000037                     I2c_WriteData@I2cNextState:
  1804                           	opt stack 0
  1805  000037                     	ds	1
  1806  000038                     I2c_WriteData@I2cWriteState:
  1807                           	opt stack 0
  1808  000038                     	ds	1
  1809  000039                     _I2cReadDataEvt:
  1810                           	opt stack 0
  1811  000039                     	ds	1
  1812  00003A                     _NewStringMdmTerminal:
  1813                           	opt stack 0
  1814  00003A                     	ds	1
  1815  00003B                     _NewMdmEvtParserRequest:
  1816                           	opt stack 0
  1817  00003B                     	ds	1
  1818  00003C                     _NewStringReceived:
  1819                           	opt stack 0
  1820  00003C                     	ds	1
  1821  00003D                     _MdmResetRequest:
  1822                           	opt stack 0
  1823  00003D                     	ds	1
  1824  00003E                     _CallClosedEvent:
  1825                           	opt stack 0
  1826  00003E                     	ds	1
  1827  00003F                     _IncomingCallEvent:
  1828                           	opt stack 0
  1829  00003F                     	ds	1
  1830  000040                     _NewSmsEvent:
  1831                           	opt stack 0
  1832  000040                     	ds	1
  1833  000041                     _ActivateRiDetection:
  1834                           	opt stack 0
  1835  000041                     	ds	1
  1836                           tblptru	equ	0xFF8
  1837                           tblptrh	equ	0xFF7
  1838                           tblptrl	equ	0xFF6
  1839                           tablat	equ	0xFF5
  1840                           postinc0	equ	0xFEE
  1841                           wreg	equ	0xFE8
  1842                           postdec1	equ	0xFE5
  1843                           fsr1h	equ	0xFE2
  1844                           fsr1l	equ	0xFE1
  1845                           
  1846                           	psect	bssBANK0
  1847  0000B5                     __pbssBANK0:
  1848                           	opt stack 0
  1849  0000B5                     _inPipes:
  1850                           	opt stack 0
  1851  0000B5                     	ds	6
  1852  0000BB                     _pBDTEntryIn:
  1853                           	opt stack 0
  1854  0000BB                     	ds	6
  1855  0000C1                     _CDCDataOutHandle:
  1856                           	opt stack 0
  1857  0000C1                     	ds	2
  1858  0000C3                     _pBDTEntryEP0OutNext:
  1859                           	opt stack 0
  1860  0000C3                     	ds	2
  1861  0000C5                     _pBDTEntryEP0OutCurrent:
  1862                           	opt stack 0
  1863  0000C5                     	ds	2
  1864  0000C7                     _RxLen:
  1865                           	opt stack 0
  1866  0000C7                     	ds	2
  1867  0000C9                     _cdc_tx_len:
  1868                           	opt stack 0
  1869  0000C9                     	ds	1
  1870  0000CA                     _cdc_trf_state:
  1871                           	opt stack 0
  1872  0000CA                     	ds	1
  1873  0000CB                     _cdc_rx_len:
  1874                           	opt stack 0
  1875  0000CB                     	ds	1
  1876  0000CC                     _USBDeferStatusStagePacket:
  1877                           	opt stack 0
  1878  0000CC                     	ds	1
  1879  0000CD                     _endpoint_number:
  1880                           	opt stack 0
  1881  0000CD                     	ds	1
  1882  0000CE                     _controlTransferState:
  1883                           	opt stack 0
  1884  0000CE                     	ds	1
  1885  0000CF                     _shortPacketStatus:
  1886                           	opt stack 0
  1887  0000CF                     	ds	1
  1888  0000D0                     _USBDeviceState:
  1889                           	opt stack 0
  1890  0000D0                     	ds	1
  1891  0000D1                     _I2cComSts:
  1892                           	opt stack 0
  1893  0000D1                     	ds	1
  1894  0000D2                     HttpGetMethod@GetMethodNextState:
  1895                           	opt stack 0
  1896  0000D2                     	ds	1
  1897  0000D3                     _MdmStatus:
  1898                           	opt stack 0
  1899  0000D3                     	ds	1
  1900  0000D4                     _PhoneNumbLen:
  1901                           	opt stack 0
  1902  0000D4                     	ds	1
  1903  0000D5                     _SmsLen:
  1904                           	opt stack 0
  1905  0000D5                     	ds	1
  1906  0000D6                     _SystemState:
  1907                           	opt stack 0
  1908  0000D6                     	ds	1
  1909  0000D7                     _USTATcopy:
  1910                           	opt stack 0
  1911  0000D7                     	ds	1
  1912  0000D8                     _USBActiveConfiguration:
  1913                           	opt stack 0
  1914  0000D8                     	ds	1
  1915  0000D9                     _I2cWriteDataEvt:
  1916                           	opt stack 0
  1917  0000D9                     	ds	1
  1918  0000DA                     _GetMethod:
  1919                           	opt stack 0
  1920  0000DA                     	ds	1
  1921  0000DB                     _InitNetwork:
  1922                           	opt stack 0
  1923  0000DB                     	ds	1
  1924  0000DC                     _SmsTxtReady:
  1925                           	opt stack 0
  1926  0000DC                     	ds	1
  1927  0000DD                     _GetSmsText:
  1928                           	opt stack 0
  1929  0000DD                     	ds	1
  1930  0000DE                     _SmsEvent:
  1931                           	opt stack 0
  1932  0000DE                     	ds	1
  1933  0000DF                     _ClipEvent:
  1934                           	opt stack 0
  1935  0000DF                     	ds	1
  1936  0000E0                     _RingEvent:
  1937                           	opt stack 0
  1938  0000E0                     	ds	1
  1939  0000E1                     _SendSmsEvent:
  1940                           	opt stack 0
  1941  0000E1                     	ds	1
  1942  0000E2                     _MdmOnOffPulseRequest:
  1943                           	opt stack 0
  1944  0000E2                     	ds	1
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           postdec1	equ	0xFE5
  1952                           fsr1h	equ	0xFE2
  1953                           fsr1l	equ	0xFE1
  1954                           
  1955                           	psect	bssBANK1
  1956  0001C9                     __pbssBANK1:
  1957                           	opt stack 0
  1958  0001C9                     _outPipes:
  1959                           	opt stack 0
  1960  0001C9                     	ds	8
  1961  0001D1                     _CDCDataInHandle:
  1962                           	opt stack 0
  1963  0001D1                     	ds	2
  1964  0001D3                     MyApp_Task@blinkSeconds:
  1965                           	opt stack 0
  1966  0001D3                     	ds	1
  1967  0001D4                     initGprsModem@initMdm:
  1968                           	opt stack 0
  1969  0001D4                     	ds	1
  1970  0001D5                     initGprsModem@isInitialized:
  1971                           	opt stack 0
  1972  0001D5                     	ds	1
  1973  0001D6                     	ds	1
  1974  0001D7                     	ds	1
  1975  0001D8                     	ds	1
  1976  0001D9                     	ds	1
  1977  0001DA                     	ds	1
  1978  0001DB                     	ds	1
  1979  0001DC                     GsmGprsTerminal@SMS:
  1980                           	opt stack 0
  1981  0001DC                     	ds	1
  1982  0001DD                     	ds	1
  1983  0001DE                     _control_signal_bitmap:
  1984                           	opt stack 0
  1985  0001DE                     	ds	1
  1986  0001DF                     _cdc_mem_type:
  1987                           	opt stack 0
  1988  0001DF                     	ds	1
  1989  0001E0                     _USBTicksSinceSuspendEnd:
  1990                           	opt stack 0
  1991  0001E0                     	ds	1
  1992  0001E1                     _BothEP0OutUOWNsSet:
  1993                           	opt stack 0
  1994  0001E1                     	ds	1
  1995  0001E2                     _USBBusIsSuspended:
  1996                           	opt stack 0
  1997  0001E2                     	ds	1
  1998  0001E3                     _RemoteWakeup:
  1999                           	opt stack 0
  2000  0001E3                     	ds	1
  2001  0001E4                     I2cSlv_QueryI2cData@Ret:
  2002                           	opt stack 0
  2003  0001E4                     	ds	1
  2004  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2005                           	opt stack 0
  2006  0001E5                     	ds	1
  2007  0001E6                     I2cSendMsgSm@I2cComState:
  2008                           	opt stack 0
  2009  0001E6                     	ds	1
  2010  0001E7                     _I2cBusStatus:
  2011                           	opt stack 0
  2012  0001E7                     	ds	1
  2013  0001E8                     HttpGetMethod@GetMOutSts:
  2014                           	opt stack 0
  2015  0001E8                     	ds	1
  2016  0001E9                     HttpGetMethod@GetMethodState:
  2017                           	opt stack 0
  2018  0001E9                     	ds	1
  2019  0001EA                     InitGprsNetwork@GprsNetInitState:
  2020                           	opt stack 0
  2021  0001EA                     	ds	1
  2022  0001EB                     _PostMethod:
  2023                           	opt stack 0
  2024  0001EB                     	ds	1
  2025  0001EC                     _HttpGetMethodSts:
  2026                           	opt stack 0
  2027  0001EC                     	ds	1
  2028  0001ED                     _GprsNetworkSts:
  2029                           	opt stack 0
  2030  0001ED                     	ds	1
  2031  0001EE                     _ApnLenLocal:
  2032                           	opt stack 0
  2033  0001EE                     	ds	1
  2034  0001EF                     SendSmsSm@SendSms_NextState:
  2035                           	opt stack 0
  2036  0001EF                     	ds	1
  2037  0001F0                     SendSmsSm@SendSms_State:
  2038                           	opt stack 0
  2039  0001F0                     	ds	1
  2040  0001F1                     GetSmsSm@GetSmsState:
  2041                           	opt stack 0
  2042  0001F1                     	ds	1
  2043  0001F2                     ConfigureModem@NextState:
  2044                           	opt stack 0
  2045  0001F2                     	ds	1
  2046  0001F3                     ConfigureModem@MdmConfigState:
  2047                           	opt stack 0
  2048  0001F3                     	ds	1
  2049  0001F4                     TurnOnModem@TurnOnMdmState:
  2050                           	opt stack 0
  2051  0001F4                     	ds	1
  2052  0001F5                     CheckModem@CheckMdmSts:
  2053                           	opt stack 0
  2054  0001F5                     	ds	1
  2055  0001F6                     _AlarmEvent:
  2056                           	opt stack 0
  2057  0001F6                     	ds	1
  2058  0001F7                     _Led3OutSts:
  2059                           	opt stack 0
  2060  0001F7                     	ds	1
  2061  0001F8                     _Led3Sts:
  2062                           	opt stack 0
  2063  0001F8                     	ds	1
  2064  0001F9                     _Led2OutSts:
  2065                           	opt stack 0
  2066  0001F9                     	ds	1
  2067  0001FA                     _Led2Sts:
  2068                           	opt stack 0
  2069  0001FA                     	ds	1
  2070  0001FB                     _Led1OutSts:
  2071                           	opt stack 0
  2072  0001FB                     	ds	1
  2073  0001FC                     _Led1Sts:
  2074                           	opt stack 0
  2075  0001FC                     	ds	1
  2076  0001FD                     I2cDummyTx@DummyBuffer:
  2077                           	opt stack 0
  2078  0001FD                     	ds	1
  2079  0001FE                     _MdmStsReady:
  2080                           	opt stack 0
  2081  0001FE                     	ds	1
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           postinc0	equ	0xFEE
  2087                           wreg	equ	0xFE8
  2088                           postdec1	equ	0xFE5
  2089                           fsr1h	equ	0xFE2
  2090                           fsr1l	equ	0xFE1
  2091                           
  2092                           	psect	dataBANK1
  2093  0001FF                     __pdataBANK1:
  2094                           	opt stack 0
  2095  0001FF                     InitGprsNetwork@GprsInitSts:
  2096                           	opt stack 0
  2097  0001FF                     	ds	1
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postdec1	equ	0xFE5
  2105                           fsr1h	equ	0xFE2
  2106                           fsr1l	equ	0xFE1
  2107                           
  2108                           	psect	bssBANK2
  2109  0002C9                     __pbssBANK2:
  2110                           	opt stack 0
  2111  0002C9                     _pCDCDst:
  2112                           	opt stack 0
  2113  0002C9                     	ds	3
  2114  0002CC                     _pCDCSrc:
  2115                           	opt stack 0
  2116  0002CC                     	ds	3
  2117  0002CF                     _ep_data_out:
  2118                           	opt stack 0
  2119  0002CF                     	ds	3
  2120  0002D2                     _ep_data_in:
  2121                           	opt stack 0
  2122  0002D2                     	ds	3
  2123  0002D5                     _pDst:
  2124                           	opt stack 0
  2125  0002D5                     	ds	2
  2126  0002D7                     ConfigureModem@DelayValueMs:
  2127                           	opt stack 0
  2128  0002D7                     	ds	2
  2129  0002D9                     TurnOnModem@Counter:
  2130                           	opt stack 0
  2131  0002D9                     	ds	2
  2132  0002DB                     UpdateSchFlag@InterruptCounter:
  2133                           	opt stack 0
  2134  0002DB                     	ds	2
  2135  0002DD                     MdmCntSm@Counter:
  2136                           	opt stack 0
  2137  0002DD                     	ds	2
  2138  0002DF                     RiSm@Counter:
  2139                           	opt stack 0
  2140  0002DF                     	ds	2
  2141  0002E1                     _ExtInt1IsrCallback:
  2142                           	opt stack 0
  2143  0002E1                     	ds	2
  2144  0002E3                     _ExtInt0IsrCallback:
  2145                           	opt stack 0
  2146  0002E3                     	ds	2
  2147  0002E5                     _RtccIsrCallback:
  2148                           	opt stack 0
  2149  0002E5                     	ds	2
  2150  0002E7                     _Tmr4IsrCallback:
  2151                           	opt stack 0
  2152  0002E7                     	ds	2
  2153  0002E9                     _Tmr2IsrCallback:
  2154                           	opt stack 0
  2155  0002E9                     	ds	2
  2156  0002EB                     	ds	1
  2157  0002EC                     Term_MainSm@TermMainSmState:
  2158                           	opt stack 0
  2159  0002EC                     	ds	1
  2160  0002ED                     Terminal@FormatOption:
  2161                           	opt stack 0
  2162  0002ED                     	ds	1
  2163  0002EE                     Terminal@SlaveAddr:
  2164                           	opt stack 0
  2165  0002EE                     	ds	1
  2166  0002EF                     Terminal@PackageLen:
  2167                           	opt stack 0
  2168  0002EF                     	ds	1
  2169  0002F0                     Terminal@TermState:
  2170                           	opt stack 0
  2171  0002F0                     	ds	1
  2172  0002F1                     _USBAlternateInterface:
  2173                           	opt stack 0
  2174  0002F1                     	ds	2
  2175                           tblptru	equ	0xFF8
  2176                           tblptrh	equ	0xFF7
  2177                           tblptrl	equ	0xFF6
  2178                           tablat	equ	0xFF5
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           postdec1	equ	0xFE5
  2182                           fsr1h	equ	0xFE2
  2183                           fsr1l	equ	0xFE1
  2184                           
  2185                           	psect	dataBANK2
  2186  0002F3                     __pdataBANK2:
  2187                           	opt stack 0
  2188  0002F3                     Terminal@EchoOption:
  2189                           	opt stack 0
  2190  0002F3                     	ds	1
  2191  0002F4                     _MainSystemTimebaseFlag:
  2192                           	opt stack 0
  2193  0002F4                     	ds	1
  2194  0002F5                     _ConnTimeout:
  2195                           	opt stack 0
  2196  0002F5                     	ds	11
  2197                           tblptru	equ	0xFF8
  2198                           tblptrh	equ	0xFF7
  2199                           tblptrl	equ	0xFF6
  2200                           tablat	equ	0xFF5
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           postdec1	equ	0xFE5
  2204                           fsr1h	equ	0xFE2
  2205                           fsr1l	equ	0xFE1
  2206                           
  2207                           	psect	bssBANK3
  2208  000300                     __pbssBANK3:
  2209                           	opt stack 0
  2210  000300                     _Rtcm_SystemDate:
  2211                           	opt stack 0
  2212  000300                     	ds	8
  2213  000308                     _Rtcm_RtccAlarm:
  2214                           	opt stack 0
  2215  000308                     	ds	6
  2216  00030E                     _pBDTEntryOut:
  2217                           	opt stack 0
  2218  00030E                     	ds	6
  2219  000314                     _BaudRateGen:
  2220                           	opt stack 0
  2221  000314                     	ds	4
  2222  000318                     _USB1msTickCount:
  2223                           	opt stack 0
  2224  000318                     	ds	4
  2225  00031C                     _OsTmr_OsTickCounter:
  2226                           	opt stack 0
  2227  00031C                     	ds	4
  2228  000320                     	ds	2
  2229  000322                     _PhoneNumberLen:
  2230                           	opt stack 0
  2231  000322                     	ds	2
  2232  000324                     _ApnLocal:
  2233                           	opt stack 0
  2234  000324                     	ds	2
  2235  000326                     ConfigureModem@DelayCounter:
  2236                           	opt stack 0
  2237  000326                     	ds	2
  2238  000328                     _UartConfig:
  2239                           	opt stack 0
  2240  000328                     	ds	21
  2241  00033D                     _callerNumber:
  2242                           	opt stack 0
  2243  00033D                     	ds	14
  2244  00034B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2245                           	opt stack 0
  2246  00034B                     	ds	11
  2247  000356                     _I2cConfig:
  2248                           	opt stack 0
  2249  000356                     	ds	10
  2250  000360                     _Led3Blink:
  2251                           	opt stack 0
  2252  000360                     	ds	9
  2253  000369                     _Led2Blink:
  2254                           	opt stack 0
  2255  000369                     	ds	9
  2256  000372                     _Led1Blink:
  2257                           	opt stack 0
  2258  000372                     	ds	9
  2259  00037B                     _dummy_encapsulated_cmd_response:
  2260                           	opt stack 0
  2261  00037B                     	ds	8
  2262  000383                     _line_coding:
  2263                           	opt stack 0
  2264  000383                     	ds	7
  2265  00038A                     _Led3Pulse:
  2266                           	opt stack 0
  2267  00038A                     	ds	6
  2268  000390                     _Led2Pulse:
  2269                           	opt stack 0
  2270  000390                     	ds	6
  2271  000396                     _Led1Pulse:
  2272                           	opt stack 0
  2273  000396                     	ds	6
  2274  00039C                     _I2cRxPacket:
  2275                           	opt stack 0
  2276  00039C                     	ds	6
  2277  0003A2                     _I2cTxPacket:
  2278                           	opt stack 0
  2279  0003A2                     	ds	5
  2280  0003A7                     _HttpGetDataLocal:
  2281                           	opt stack 0
  2282  0003A7                     	ds	5
  2283  0003AC                     Terminal@Addr:
  2284                           	opt stack 0
  2285  0003AC                     	ds	4
  2286  0003B0                     Terminal@Len:
  2287                           	opt stack 0
  2288  0003B0                     	ds	4
  2289  0003B4                     _AlCfg:
  2290                           	opt stack 0
  2291  0003B4                     	ds	4
  2292  0003B8                     _RtcConfig:
  2293                           	opt stack 0
  2294  0003B8                     	ds	4
  2295  0003BC                     initGprsModem@modemCounter:
  2296                           	opt stack 0
  2297  0003BC                     	ds	2
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           postinc0	equ	0xFEE
  2303                           wreg	equ	0xFE8
  2304                           postdec1	equ	0xFE5
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           
  2308                           	psect	dataBANK3
  2309  0003BE                     __pdataBANK3:
  2310                           	opt stack 0
  2311  0003BE                     ModemEvtParser@F9095:
  2312                           	opt stack 0
  2313  0003BE                     	ds	5
  2314  0003C3                     ModemEvtParser@F9093:
  2315                           	opt stack 0
  2316  0003C3                     	ds	5
  2317  0003C8                     ModemEvtParser@F9091:
  2318                           	opt stack 0
  2319  0003C8                     	ds	4
  2320  0003CC                     MyApp_Task@F8996:
  2321                           	opt stack 0
  2322  0003CC                     	ds	3
  2323  0003CF                     triggerRelay@F8969:
  2324                           	opt stack 0
  2325  0003CF                     	ds	2
  2326  0003D1                     Term_MainSm@TermDelay:
  2327                           	opt stack 0
  2328  0003D1                     	ds	11
  2329  0003DC                     _ConnWait:
  2330                           	opt stack 0
  2331  0003DC                     	ds	11
  2332  0003E7                     SendSmsSm@SwTimer:
  2333                           	opt stack 0
  2334  0003E7                     	ds	11
  2335  0003F2                     CheckModem@Timeout:
  2336                           	opt stack 0
  2337  0003F2                     	ds	11
  2338  0003FD                     MyApp_Task@blickTicks:
  2339                           	opt stack 0
  2340  0003FD                     	ds	2
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           
  2351                           	psect	bssBANK4
  2352  000440                     __pbssBANK4:
  2353                           	opt stack 0
  2354  000440                     	ds	10
  2355  00044A                     _cdc_notice:
  2356                           	opt stack 0
  2357  00044A                     	ds	10
  2358  000454                     Term_MainSm@Data:
  2359                           	opt stack 0
  2360  000454                     	ds	50
  2361  000486                     Terminal@TermRxBuffer:
  2362                           	opt stack 0
  2363  000486                     	ds	50
  2364  0004B8                     _PhoneNumber:
  2365                           	opt stack 0
  2366  0004B8                     	ds	20
  2367  0004CC                     Terminal@SwTimer:
  2368                           	opt stack 0
  2369  0004CC                     	ds	11
  2370  0004D7                     I2cSlv_QueryI2cData@QueryTimer:
  2371                           	opt stack 0
  2372  0004D7                     	ds	11
  2373                           tblptru	equ	0xFF8
  2374                           tblptrh	equ	0xFF7
  2375                           tblptrl	equ	0xFF6
  2376                           tablat	equ	0xFF5
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           postdec1	equ	0xFE5
  2380                           fsr1h	equ	0xFE2
  2381                           fsr1l	equ	0xFE1
  2382                           
  2383                           	psect	dataBANK4
  2384  0004E2                     __pdataBANK4:
  2385                           	opt stack 0
  2386  0004E2                     MyApp_Task@F8989:
  2387                           	opt stack 0
  2388  0004E2                     	ds	14
  2389  0004F0                     ModemEvtParser@F9097:
  2390                           	opt stack 0
  2391  0004F0                     	ds	10
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           
  2402                           	psect	bssBANK5
  2403  000500                     __pbssBANK5:
  2404                           	opt stack 0
  2405  000500                     Terminal@Payload:
  2406                           	opt stack 0
  2407  000500                     	ds	80
  2408  000550                     _cdc_data_rx:
  2409                           	opt stack 0
  2410  000550                     	ds	64
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           
  2421                           	psect	dataBANK5
  2422  000590                     __pdataBANK5:
  2423                           	opt stack 0
  2424  000590                     _TaskTable:
  2425                           	opt stack 0
  2426  000590                     	ds	80
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           
  2437                           	psect	bssBANK6
  2438  000600                     __pbssBANK6:
  2439                           	opt stack 0
  2440  000600                     _OsAlarms:
  2441                           	opt stack 0
  2442  000600                     	ds	220
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           postdec1	equ	0xFE5
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           
  2453                           	psect	bssBANK7
  2454  000700                     __pbssBANK7:
  2455                           	opt stack 0
  2456  000700                     _Mdm_SmsRx:
  2457                           	opt stack 0
  2458  000700                     	ds	132
  2459  000784                     _cdc_data_tx:
  2460                           	opt stack 0
  2461  000784                     	ds	64
  2462  0007C4                     _MessageText:
  2463                           	opt stack 0
  2464  0007C4                     	ds	50
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           
  2475                           	psect	bssBANK8
  2476  000800                     __pbssBANK8:
  2477                           	opt stack 0
  2478  000800                     GsmGprsTerminal@UsbBuffer:
  2479                           	opt stack 0
  2480  000800                     	ds	200
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           postdec1	equ	0xFE5
  2488                           fsr1h	equ	0xFE2
  2489                           fsr1l	equ	0xFE1
  2490                           
  2491                           	psect	bssBANK9
  2492  000900                     __pbssBANK9:
  2493                           	opt stack 0
  2494  000900                     GsmGprsTerminal@UartBuffer:
  2495                           	opt stack 0
  2496  000900                     	ds	200
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           
  2507                           	psect	bssBIGRAMl
  2508  000AC8                     __pbssBIGRAMl:
  2509                           	opt stack 0
  2510  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2511                           	opt stack 0
  2512  000AC8                     	ds	400
  2513  000C58                     _RxBuffer:
  2514                           	opt stack 0
  2515  000C58                     	ds	400
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           postdec1	equ	0xFE5
  2523                           fsr1h	equ	0xFE2
  2524                           fsr1l	equ	0xFE1
  2525                           
  2526                           	psect	cstackBANK10
  2527  000A00                     __pcstackBANK10:
  2528                           	opt stack 0
  2529  000A00                     Terminal@UsbRxBuffer:
  2530                           	opt stack 0
  2531                           
  2532                           ; 200 bytes @ 0x0
  2533  000A00                     	ds	200
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           
  2544                           	psect	cstackBANK4
  2545  0004FA                     __pcstackBANK4:
  2546                           	opt stack 0
  2547  0004FA                     ??_ScheduleTasks:
  2548                           
  2549                           ; 1 bytes @ 0x0
  2550  0004FA                     	ds	4
  2551                           tblptru	equ	0xFF8
  2552                           tblptrh	equ	0xFF7
  2553                           tblptrl	equ	0xFF6
  2554                           tablat	equ	0xFF5
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           postdec1	equ	0xFE5
  2558                           fsr1h	equ	0xFE2
  2559                           fsr1l	equ	0xFE1
  2560                           
  2561                           	psect	cstackBANK2
  2562  000200                     __pcstackBANK2:
  2563                           	opt stack 0
  2564  000200                     Terminal@UsbTxBuffer:
  2565                           	opt stack 0
  2566                           
  2567                           ; 200 bytes @ 0x0
  2568  000200                     	ds	200
  2569  0002C8                     InitializeTasks@ActiveTaskIndex:
  2570                           	opt stack 0
  2571                           
  2572                           ; 1 bytes @ 0xC8
  2573  0002C8                     	ds	1
  2574                           tblptru	equ	0xFF8
  2575                           tblptrh	equ	0xFF7
  2576                           tblptrl	equ	0xFF6
  2577                           tablat	equ	0xFF5
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           postdec1	equ	0xFE5
  2581                           fsr1h	equ	0xFE2
  2582                           fsr1l	equ	0xFE1
  2583                           
  2584                           	psect	cstackBANK1
  2585  000100                     __pcstackBANK1:
  2586                           	opt stack 0
  2587  000100                     SendSmsSm@UartMessage:
  2588                           	opt stack 0
  2589  000100                     InitGprsNetwork@UartMessage:
  2590                           	opt stack 0
  2591  000100                     Terminal@TermTxBuffer:
  2592                           	opt stack 0
  2593  000100                     MyApp_Task@smsText:
  2594                           	opt stack 0
  2595  000100                     HttpGetMethod@UartMessage:
  2596                           	opt stack 0
  2597                           
  2598                           ; 200 bytes @ 0x0
  2599  000100                     	ds	50
  2600  000132                     InitGprsNetwork@Index:
  2601                           	opt stack 0
  2602  000132                     MyApp_Task@phone:
  2603                           	opt stack 0
  2604                           
  2605                           ; 14 bytes @ 0x32
  2606  000132                     	ds	14
  2607  000140                     MyApp_Task@smsNumber:
  2608                           	opt stack 0
  2609                           
  2610                           ; 14 bytes @ 0x40
  2611  000140                     	ds	14
  2612  00014E                     MyApp_Task@cmpString:
  2613                           	opt stack 0
  2614                           
  2615                           ; 3 bytes @ 0x4E
  2616  00014E                     	ds	122
  2617  0001C8                     HttpGetMethod@Index:
  2618                           	opt stack 0
  2619                           
  2620                           ; 1 bytes @ 0xC8
  2621  0001C8                     	ds	1
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           postinc0	equ	0xFEE
  2627                           wreg	equ	0xFE8
  2628                           postdec1	equ	0xFE5
  2629                           fsr1h	equ	0xFE2
  2630                           fsr1l	equ	0xFE1
  2631                           
  2632                           	psect	cstackBANK0
  2633  000060                     __pcstackBANK0:
  2634                           	opt stack 0
  2635  000060                     
  2636                           ; 1 bytes @ 0x0
  2637  000060                     	ds	8
  2638  000068                     ??_LowPriorityIsr:
  2639                           
  2640                           ; 1 bytes @ 0x8
  2641  000068                     	ds	21
  2642  00007D                     ??_isdigit:
  2643  00007D                     ??_isspace:
  2644  00007D                     ??_isupper:
  2645  00007D                     ??_Rtcc_GetRtccValue:
  2646  00007D                     ??_UartTxBufferStatus:
  2647  00007D                     ??_USBStdGetDscHandler:
  2648  00007D                     ??_USBStdGetStatusHandler:
  2649  00007D                     ?_USBTransferOnePacket:
  2650                           	opt stack 0
  2651  00007D                     ?_strlen:
  2652                           	opt stack 0
  2653  00007D                     ?_sprintf:
  2654                           	opt stack 0
  2655  00007D                     ?___wmul:
  2656                           	opt stack 0
  2657  00007D                     ?___awdiv:
  2658                           	opt stack 0
  2659  00007D                     ?___awmod:
  2660                           	opt stack 0
  2661  00007D                     ?___lwmod:
  2662                           	opt stack 0
  2663  00007D                     ?_GetOsTickCounter:
  2664                           	opt stack 0
  2665  00007D                     ?___lmul:
  2666                           	opt stack 0
  2667  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2668                           	opt stack 0
  2669  00007D                     SetAckStatus@AckSts:
  2670                           	opt stack 0
  2671  00007D                     WriteByte@Byte:
  2672                           	opt stack 0
  2673  00007D                     ReadByte@Byte:
  2674                           	opt stack 0
  2675  00007D                     Mcu_SetWdgSts@WdgSts:
  2676                           	opt stack 0
  2677  00007D                     RtccIrqInit@Priority:
  2678                           	opt stack 0
  2679  00007D                     Rtcc_SetRtcStatus@Status:
  2680                           	opt stack 0
  2681  00007D                     TmrBInit@Prescaler:
  2682                           	opt stack 0
  2683  00007D                     Tmr_TmrBIrqSet@Priority:
  2684                           	opt stack 0
  2685  00007D                     Tmr_StartTmr@TmrNumb:
  2686                           	opt stack 0
  2687  00007D                     UartWriteByte@ByteToWrite:
  2688                           	opt stack 0
  2689  00007D                     USBTransferOnePacket@dir:
  2690                           	opt stack 0
  2691  00007D                     USBConfigureEndpoint@direction:
  2692                           	opt stack 0
  2693  00007D                     USBCtrlTrfTxService@byteToSend:
  2694                           	opt stack 0
  2695  00007D                     USBCtrlTrfRxService@i:
  2696                           	opt stack 0
  2697  00007D                     Led_SetLedStatus@LedSts:
  2698                           	opt stack 0
  2699  00007D                     toupper@c:
  2700                           	opt stack 0
  2701  00007D                     tolower@c:
  2702                           	opt stack 0
  2703  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2704                           	opt stack 0
  2705  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2706                           	opt stack 0
  2707  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2708                           	opt stack 0
  2709  00007D                     Uart_ClearRxBuffer@Index:
  2710                           	opt stack 0
  2711  00007D                     GenerateEvt@Event:
  2712                           	opt stack 0
  2713  00007D                     ReceiveEvt@Event:
  2714                           	opt stack 0
  2715  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2716                           	opt stack 0
  2717  00007D                     StringCopy@SourceStr:
  2718                           	opt stack 0
  2719  00007D                     ClearBuffer@Buffer:
  2720                           	opt stack 0
  2721  00007D                     sprintf@sp:
  2722                           	opt stack 0
  2723  00007D                     ___wmul@multiplier:
  2724                           	opt stack 0
  2725  00007D                     ___awdiv@dividend:
  2726                           	opt stack 0
  2727  00007D                     ___awmod@dividend:
  2728                           	opt stack 0
  2729  00007D                     ___lwmod@dividend:
  2730                           	opt stack 0
  2731  00007D                     memcpy@d1:
  2732                           	opt stack 0
  2733  00007D                     memset@p1:
  2734                           	opt stack 0
  2735  00007D                     strcat@to:
  2736                           	opt stack 0
  2737  00007D                     strcpy@to:
  2738                           	opt stack 0
  2739  00007D                     strlen@s:
  2740                           	opt stack 0
  2741  00007D                     ___lmul@multiplier:
  2742                           	opt stack 0
  2743                           
  2744                           ; 4 bytes @ 0x1D
  2745  00007D                     	ds	1
  2746  00007E                     ??_USBConfigureEndpoint:
  2747  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2748                           	opt stack 0
  2749  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2750                           	opt stack 0
  2751  00007E                     TmrBInit@Postscaler:
  2752                           	opt stack 0
  2753  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2754                           	opt stack 0
  2755  00007E                     UartWriteByte@Module:
  2756                           	opt stack 0
  2757  00007E                     UartTxBufferStatus@Module:
  2758                           	opt stack 0
  2759  00007E                     USBCtrlTrfRxService@byteToRead:
  2760                           	opt stack 0
  2761  00007E                     USBCtrlTrfInHandler@lastDTS:
  2762                           	opt stack 0
  2763  00007E                     Led_SetLedStatus@Led:
  2764                           	opt stack 0
  2765  00007E                     _isdigit$6149:
  2766                           	opt stack 0
  2767  00007E                     _isspace$6418:
  2768                           	opt stack 0
  2769  00007E                     _isupper$6421:
  2770                           	opt stack 0
  2771  00007E                     I2c_WriteData@WritePacket:
  2772                           	opt stack 0
  2773  00007E                     Rtcc_RtcConfig@RtcConfig:
  2774                           	opt stack 0
  2775  00007E                     USBTransferOnePacket@data:
  2776                           	opt stack 0
  2777  00007E                     USBStdGetStatusHandler@p:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0x1E
  2781  00007E                     	ds	1
  2782  00007F                     ??_strlen:
  2783  00007F                     ??_Rtcc_AlarmConfig:
  2784  00007F                     ??_TmrBInit:
  2785  00007F                     Irq_InitIntController@IntPriorityEn:
  2786                           	opt stack 0
  2787  00007F                     Rtcc_GetRtccValue@RetValue:
  2788                           	opt stack 0
  2789  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2790                           	opt stack 0
  2791  00007F                     UartTxBufferStatus@TxBufferStatus:
  2792                           	opt stack 0
  2793  00007F                     GenerateEvt@EventStatus:
  2794                           	opt stack 0
  2795  00007F                     isdigit@c:
  2796                           	opt stack 0
  2797  00007F                     isspace@c:
  2798                           	opt stack 0
  2799  00007F                     isupper@c:
  2800                           	opt stack 0
  2801  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2802                           	opt stack 0
  2803  00007F                     StringCopy@DestStr:
  2804                           	opt stack 0
  2805  00007F                     ClearBuffer@Len:
  2806                           	opt stack 0
  2807  00007F                     sprintf@f:
  2808                           	opt stack 0
  2809  00007F                     ___wmul@multiplicand:
  2810                           	opt stack 0
  2811  00007F                     ___awdiv@divisor:
  2812                           	opt stack 0
  2813  00007F                     ___awmod@divisor:
  2814                           	opt stack 0
  2815  00007F                     ___lwmod@divisor:
  2816                           	opt stack 0
  2817  00007F                     memcpy@s1:
  2818                           	opt stack 0
  2819  00007F                     memset@c:
  2820                           	opt stack 0
  2821  00007F                     strcat@from:
  2822                           	opt stack 0
  2823  00007F                     strcpy@from:
  2824                           	opt stack 0
  2825                           
  2826                           ; 2 bytes @ 0x1F
  2827  00007F                     	ds	1
  2828  000080                     ??_isalpha:
  2829  000080                     ??_isxdigit:
  2830  000080                     ??_I2c_WriteData:
  2831  000080                     ??_Rtcc_RtcConfig:
  2832  000080                     Rtcc_GetRtccValue@RegValue:
  2833                           	opt stack 0
  2834  000080                     TmrBInit@TmrNumb:
  2835                           	opt stack 0
  2836  000080                     ReceiveEvt@EventStatus:
  2837                           	opt stack 0
  2838  000080                     USBTransferOnePacket@len:
  2839                           	opt stack 0
  2840  000080                     I2c_ReadData@ReadPacket:
  2841                           	opt stack 0
  2842  000080                     Uart_WriteConstString@ConstStringToWrite:
  2843                           	opt stack 0
  2844  000080                     Uart_WriteString@StringToWrite:
  2845                           	opt stack 0
  2846  000080                     Uart_WriteStringLen@StringToWrite:
  2847                           	opt stack 0
  2848  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2849                           	opt stack 0
  2850  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2851                           	opt stack 0
  2852                           
  2853                           ; 2 bytes @ 0x20
  2854  000080                     	ds	1
  2855  000081                     ?_GetElapsedTime:
  2856                           	opt stack 0
  2857  000081                     ?_Rtcm_GetRtccDate:
  2858                           	opt stack 0
  2859  000081                     Mdm_IsSmsReceived@Ret:
  2860                           	opt stack 0
  2861  000081                     Mdm_IsRinging@Ret:
  2862                           	opt stack 0
  2863  000081                     I2cSlv_I2cReadMsgSts@Result:
  2864                           	opt stack 0
  2865  000081                     USBTransferOnePacket@ep:
  2866                           	opt stack 0
  2867  000081                     Led_SetLedBlinkTime@Led:
  2868                           	opt stack 0
  2869  000081                     ___awdiv@counter:
  2870                           	opt stack 0
  2871  000081                     ___awmod@counter:
  2872                           	opt stack 0
  2873  000081                     ___lwmod@counter:
  2874                           	opt stack 0
  2875  000081                     _isalpha$6415:
  2876                           	opt stack 0
  2877  000081                     _isxdigit$6425:
  2878                           	opt stack 0
  2879  000081                     OsTmr_StartTimer@Timer:
  2880                           	opt stack 0
  2881  000081                     StringCopy@Len:
  2882                           	opt stack 0
  2883  000081                     ClearBuffer@Index:
  2884                           	opt stack 0
  2885  000081                     ___wmul@product:
  2886                           	opt stack 0
  2887  000081                     memcpy@n:
  2888                           	opt stack 0
  2889  000081                     memset@n:
  2890                           	opt stack 0
  2891  000081                     strcat@cp:
  2892                           	opt stack 0
  2893  000081                     strcpy@cp:
  2894                           	opt stack 0
  2895  000081                     strlen@cp:
  2896                           	opt stack 0
  2897  000081                     GetElapsedTime@StartTime:
  2898                           	opt stack 0
  2899  000081                     ___lmul@multiplicand:
  2900                           	opt stack 0
  2901                           
  2902                           ; 4 bytes @ 0x21
  2903  000081                     	ds	1
  2904  000082                     ??_I2c_ReadData:
  2905  000082                     Uart_WriteConstString@Module:
  2906                           	opt stack 0
  2907  000082                     Uart_WriteString@Module:
  2908                           	opt stack 0
  2909  000082                     Uart_WriteStringLen@Len:
  2910                           	opt stack 0
  2911  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2912                           	opt stack 0
  2913  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2914                           	opt stack 0
  2915  000082                     USBConfigureEndpoint@EPNum:
  2916                           	opt stack 0
  2917  000082                     ___awdiv@sign:
  2918                           	opt stack 0
  2919  000082                     ___awmod@sign:
  2920                           	opt stack 0
  2921  000082                     isalpha@c:
  2922                           	opt stack 0
  2923  000082                     isxdigit@c:
  2924                           	opt stack 0
  2925  000082                     USBTransferOnePacket@handle:
  2926                           	opt stack 0
  2927                           
  2928                           ; 2 bytes @ 0x22
  2929  000082                     	ds	1
  2930  000083                     ??_StringCopy:
  2931  000083                     ?_GetCallerNumber:
  2932                           	opt stack 0
  2933  000083                     ?_atoi:
  2934                           	opt stack 0
  2935  000083                     ?_xtoi:
  2936                           	opt stack 0
  2937  000083                     ?___lwdiv:
  2938                           	opt stack 0
  2939  000083                     Uart_WriteStringLen@Index:
  2940                           	opt stack 0
  2941  000083                     Mdm_SetSmsFormat@Index:
  2942                           	opt stack 0
  2943  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2944                           	opt stack 0
  2945  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2946                           	opt stack 0
  2947  000083                     sprintf@flag:
  2948                           	opt stack 0
  2949  000083                     memcpy@tmp:
  2950                           	opt stack 0
  2951  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2952                           	opt stack 0
  2953  000083                     USBConfigureEndpoint@handle:
  2954                           	opt stack 0
  2955  000083                     putUSBUSART@data:
  2956                           	opt stack 0
  2957  000083                     atoi@s:
  2958                           	opt stack 0
  2959  000083                     ___awdiv@quotient:
  2960                           	opt stack 0
  2961  000083                     ___lwdiv@dividend:
  2962                           	opt stack 0
  2963  000083                     memset@p:
  2964                           	opt stack 0
  2965  000083                     xtoi@s:
  2966                           	opt stack 0
  2967  000083                     OsTmr_StartTimer@Timeout:
  2968                           	opt stack 0
  2969                           
  2970                           ; 4 bytes @ 0x23
  2971  000083                     	ds	1
  2972  000084                     Uart_WriteStringLen@Module:
  2973                           	opt stack 0
  2974  000084                     I2cSlv_SendI2cMsg@TxSts:
  2975                           	opt stack 0
  2976  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2977                           	opt stack 0
  2978  000084                     CDCTxService@i:
  2979                           	opt stack 0
  2980  000084                     getsUSBUSART@buffer:
  2981                           	opt stack 0
  2982  000084                     sprintf@ap:
  2983                           	opt stack 0
  2984  000084                     memcpy@d:
  2985                           	opt stack 0
  2986  000084                     Mdm_SetSmsFormat@UartMessage:
  2987                           	opt stack 0
  2988                           
  2989                           ; 20 bytes @ 0x24
  2990  000084                     	ds	1
  2991  000085                     ??_atoi:
  2992  000085                     ??_xtoi:
  2993  000085                     ??_GetElapsedTime:
  2994  000085                     Rtcc_SetRtccValue@Value:
  2995                           	opt stack 0
  2996  000085                     USBDeviceInit@i:
  2997                           	opt stack 0
  2998  000085                     USBEnableEndpoint@options:
  2999                           	opt stack 0
  3000  000085                     putUSBUSART@length:
  3001                           	opt stack 0
  3002  000085                     CDCTxService@byte_to_send:
  3003                           	opt stack 0
  3004  000085                     StringCompare@String1:
  3005                           	opt stack 0
  3006  000085                     StringCopy@Index:
  3007                           	opt stack 0
  3008  000085                     ___lwdiv@divisor:
  3009                           	opt stack 0
  3010  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3011                           	opt stack 0
  3012  000085                     ___lmul@product:
  3013                           	opt stack 0
  3014                           
  3015                           ; 4 bytes @ 0x25
  3016  000085                     	ds	1
  3017  000086                     ??_Rtcc_SetRtccValue:
  3018  000086                     getsUSBUSART@len:
  3019                           	opt stack 0
  3020  000086                     sprintf@c:
  3021                           	opt stack 0
  3022  000086                     USBEnableEndpoint@p:
  3023                           	opt stack 0
  3024  000086                     memcpy@s:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x26
  3028  000086                     	ds	1
  3029  000087                     atoi@sign:
  3030                           	opt stack 0
  3031  000087                     ___lwdiv@counter:
  3032                           	opt stack 0
  3033  000087                     xtoi@sign:
  3034                           	opt stack 0
  3035  000087                     Mdm_GetSmsData@MessageText:
  3036                           	opt stack 0
  3037  000087                     StringCompare@String2:
  3038                           	opt stack 0
  3039  000087                     sprintf@cp:
  3040                           	opt stack 0
  3041                           
  3042                           ; 2 bytes @ 0x27
  3043  000087                     	ds	1
  3044  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3045                           	opt stack 0
  3046  000088                     USBEnableEndpoint@ep:
  3047                           	opt stack 0
  3048  000088                     atoi@a:
  3049                           	opt stack 0
  3050  000088                     ___lwdiv@quotient:
  3051                           	opt stack 0
  3052  000088                     xtoi@val:
  3053                           	opt stack 0
  3054                           
  3055                           ; 2 bytes @ 0x28
  3056  000088                     	ds	1
  3057  000089                     ??_Rtcm_GetRtccDate:
  3058  000089                     ?_strtol:
  3059                           	opt stack 0
  3060  000089                     ?___lldiv:
  3061                           	opt stack 0
  3062  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3063                           	opt stack 0
  3064  000089                     Mdm_GetSmsData@MessageHeader:
  3065                           	opt stack 0
  3066  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3067                           	opt stack 0
  3068  000089                     StringCompare@Len:
  3069                           	opt stack 0
  3070  000089                     strtol@s:
  3071                           	opt stack 0
  3072  000089                     ___lldiv@dividend:
  3073                           	opt stack 0
  3074  000089                     Rtcm_SetRtccDate@Date:
  3075                           	opt stack 0
  3076                           
  3077                           ; 8 bytes @ 0x29
  3078  000089                     	ds	1
  3079  00008A                     xtoi@c:
  3080                           	opt stack 0
  3081  00008A                     LedBlinkStateMachine@LedBlink:
  3082                           	opt stack 0
  3083  00008A                     LedPulseStateMachine@LedPulse:
  3084                           	opt stack 0
  3085  00008A                     secondsAppTimer@counter:
  3086                           	opt stack 0
  3087  00008A                     utoa@buf:
  3088                           	opt stack 0
  3089  00008A                     Rtcm_GetRtccDate@LocalDate:
  3090                           	opt stack 0
  3091                           
  3092                           ; 8 bytes @ 0x2A
  3093  00008A                     	ds	1
  3094  00008B                     Mdm_GetSmsData@GetSmsStatus:
  3095                           	opt stack 0
  3096  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3097                           	opt stack 0
  3098  00008B                     strtol@endptr:
  3099                           	opt stack 0
  3100                           
  3101                           ; 2 bytes @ 0x2B
  3102  00008B                     	ds	1
  3103  00008C                     LedPulseStateMachine@Led:
  3104                           	opt stack 0
  3105  00008C                     secondsAppTimer@isCyclic:
  3106                           	opt stack 0
  3107  00008C                     utoa@val:
  3108                           	opt stack 0
  3109                           
  3110                           ; 2 bytes @ 0x2C
  3111  00008C                     	ds	1
  3112  00008D                     StringCompare@Result:
  3113                           	opt stack 0
  3114  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3115                           	opt stack 0
  3116  00008D                     strtol@base:
  3117                           	opt stack 0
  3118  00008D                     GetElapsedTime@TimeValue:
  3119                           	opt stack 0
  3120  00008D                     ___lldiv@divisor:
  3121                           	opt stack 0
  3122                           
  3123                           ; 4 bytes @ 0x2D
  3124  00008D                     	ds	1
  3125  00008E                     StringCompare@Index:
  3126                           	opt stack 0
  3127  00008E                     utoa@base:
  3128                           	opt stack 0
  3129                           
  3130                           ; 2 bytes @ 0x2E
  3131  00008E                     	ds	1
  3132  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3133  00008F                     ??_strtol:
  3134  00008F                     secondsAppTimer@seconds:
  3135                           	opt stack 0
  3136  00008F                     LedStateMachine@LedSts:
  3137                           	opt stack 0
  3138                           
  3139                           ; 2 bytes @ 0x2F
  3140  00008F                     	ds	1
  3141  000090                     secondsAppTimer@isExpired:
  3142                           	opt stack 0
  3143  000090                     utoa@v:
  3144                           	opt stack 0
  3145  000090                     ModemEvtParser@CallReadyString:
  3146                           	opt stack 0
  3147                           
  3148                           ; 10 bytes @ 0x30
  3149  000090                     	ds	1
  3150  000091                     ??_USBStdFeatureReqHandler:
  3151  000091                     USBStdSetCfgHandler@i:
  3152                           	opt stack 0
  3153  000091                     LedStateMachine@LedOut:
  3154                           	opt stack 0
  3155  000091                     secondsAppTimer@destinationTicks:
  3156                           	opt stack 0
  3157  000091                     GetElapsedTime@CurrentTimestamp:
  3158                           	opt stack 0
  3159  000091                     ___lldiv@quotient:
  3160                           	opt stack 0
  3161                           
  3162                           ; 4 bytes @ 0x31
  3163  000091                     	ds	1
  3164  000092                     utoa@c:
  3165                           	opt stack 0
  3166  000092                     USBStdFeatureReqHandler@pUEP:
  3167                           	opt stack 0
  3168                           
  3169                           ; 2 bytes @ 0x32
  3170  000092                     	ds	1
  3171  000093                     strtol@sign:
  3172                           	opt stack 0
  3173  000093                     LedStateMachine@LedBlink:
  3174                           	opt stack 0
  3175  000093                     blinkForSeconds@blickTicks:
  3176                           	opt stack 0
  3177  000093                     itoa@buf:
  3178                           	opt stack 0
  3179                           
  3180                           ; 2 bytes @ 0x33
  3181  000093                     	ds	1
  3182  000094                     USBStdFeatureReqHandler@current_ep_data:
  3183                           	opt stack 0
  3184  000094                     strtol@a:
  3185                           	opt stack 0
  3186                           
  3187                           ; 4 bytes @ 0x34
  3188  000094                     	ds	1
  3189  000095                     blinkForSeconds@seconds:
  3190                           	opt stack 0
  3191  000095                     ___lldiv@counter:
  3192                           	opt stack 0
  3193  000095                     OsTmr_GetTimerStatus@Timer:
  3194                           	opt stack 0
  3195  000095                     USBStdFeatureReqHandler@p:
  3196                           	opt stack 0
  3197  000095                     LedStateMachine@LedPulse:
  3198                           	opt stack 0
  3199  000095                     itoa@val:
  3200                           	opt stack 0
  3201                           
  3202                           ; 2 bytes @ 0x35
  3203  000095                     	ds	1
  3204  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3205                           	opt stack 0
  3206  000096                     SetUartBaudRate@UartConfig:
  3207                           	opt stack 0
  3208  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3209                           	opt stack 0
  3210                           
  3211                           ; 4 bytes @ 0x36
  3212  000096                     	ds	1
  3213  000097                     ??_USBCtrlEPService:
  3214  000097                     itoa@base:
  3215                           	opt stack 0
  3216                           
  3217                           ; 2 bytes @ 0x37
  3218  000097                     	ds	1
  3219  000098                     Tmr_TmrBPrSet@Prescaler:
  3220                           	opt stack 0
  3221  000098                     Mdm_SetSmsFormat@TextFormat:
  3222                           	opt stack 0
  3223  000098                     USBDeviceTasks@i:
  3224                           	opt stack 0
  3225  000098                     LedStateMachine@LedOutSts:
  3226                           	opt stack 0
  3227  000098                     strtol@c:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x38
  3231  000098                     	ds	1
  3232  000099                     Tmr_TmrBPrSet@Postscaler:
  3233                           	opt stack 0
  3234  000099                     SetUartBaudRate@Module:
  3235                           	opt stack 0
  3236  000099                     LedStateMachine@Led:
  3237                           	opt stack 0
  3238  000099                     itoa@cp:
  3239                           	opt stack 0
  3240                           
  3241                           ; 2 bytes @ 0x39
  3242  000099                     	ds	1
  3243  00009A                     ??_Led_MainTask:
  3244  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3245                           	opt stack 0
  3246  00009A                     SetUartBaudRate@BaudRateRegister:
  3247                           	opt stack 0
  3248  00009A                     SetBaudRate@McuClockHz:
  3249                           	opt stack 0
  3250  00009A                     ModemEvtParser@ClipString:
  3251                           	opt stack 0
  3252                           
  3253                           ; 5 bytes @ 0x3A
  3254  00009A                     	ds	1
  3255  00009B                     ??_SendSmsSm:
  3256  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3257                           	opt stack 0
  3258  00009B                     OsTmr_Wait@WaitTimer:
  3259                           	opt stack 0
  3260  00009B                     InitGprsNetwork@Apn:
  3261                           	opt stack 0
  3262  00009B                     HttpGetMethod@GetData:
  3263                           	opt stack 0
  3264                           
  3265                           ; 2 bytes @ 0x3B
  3266  00009B                     	ds	1
  3267  00009C                     SetUartBaudRate@DivisionFactor:
  3268                           	opt stack 0
  3269  00009C                     Tmr_TmrBPrSet@Divisor:
  3270                           	opt stack 0
  3271                           
  3272                           ; 4 bytes @ 0x3C
  3273  00009C                     	ds	1
  3274  00009D                     ??_HttpGetMethod:
  3275  00009D                     InitGprsNetwork@ApnLen:
  3276                           	opt stack 0
  3277  00009D                     Uart_InitUartModule@UartConfig:
  3278                           	opt stack 0
  3279  00009D                     OsTmr_Wait@DelayMs:
  3280                           	opt stack 0
  3281                           
  3282                           ; 4 bytes @ 0x3D
  3283  00009D                     	ds	1
  3284  00009E                     ??_SetBaudRate:
  3285  00009E                     ??_InitGprsNetwork:
  3286                           
  3287                           ; 1 bytes @ 0x3E
  3288  00009E                     	ds	1
  3289  00009F                     ??_Uart_InitUartModule:
  3290  00009F                     ModemEvtParser@SmsString:
  3291                           	opt stack 0
  3292                           
  3293                           ; 5 bytes @ 0x3F
  3294  00009F                     	ds	1
  3295  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3296                           	opt stack 0
  3297                           
  3298                           ; 2 bytes @ 0x40
  3299  0000A0                     	ds	1
  3300  0000A1                     Uart_InitUartModule@Module:
  3301                           	opt stack 0
  3302  0000A1                     OsTmr_Wait@Ret:
  3303                           	opt stack 0
  3304                           
  3305                           ; 1 bytes @ 0x41
  3306  0000A1                     	ds	1
  3307  0000A2                     ??_Terminal:
  3308  0000A2                     I2c_InitI2cModule@I2cConfig:
  3309                           	opt stack 0
  3310                           
  3311                           ; 2 bytes @ 0x42
  3312  0000A2                     	ds	1
  3313  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3314                           	opt stack 0
  3315                           
  3316                           ; 1 bytes @ 0x43
  3317  0000A3                     	ds	1
  3318  0000A4                     ??_I2c_InitI2cModule:
  3319  0000A4                     Terminal@i:
  3320                           	opt stack 0
  3321  0000A4                     ModemEvtParser@RingString:
  3322                           	opt stack 0
  3323  0000A4                     InitSchedTimer@TmrBConfig:
  3324                           	opt stack 0
  3325                           
  3326                           ; 7 bytes @ 0x44
  3327  0000A4                     	ds	1
  3328  0000A5                     Terminal@ReceivedBytes:
  3329                           	opt stack 0
  3330                           
  3331                           ; 1 bytes @ 0x45
  3332  0000A5                     	ds	1
  3333  0000A6                     Terminal@Index:
  3334                           	opt stack 0
  3335                           
  3336                           ; 1 bytes @ 0x46
  3337  0000A6                     	ds	1
  3338  0000A7                     Term_MainSm@FwkMajorStr:
  3339                           	opt stack 0
  3340                           
  3341                           ; 4 bytes @ 0x47
  3342  0000A7                     	ds	1
  3343  0000A8                     ModemEvtParser@Match:
  3344                           	opt stack 0
  3345                           
  3346                           ; 1 bytes @ 0x48
  3347  0000A8                     	ds	1
  3348  0000A9                     ModemEvtParser@CompareIdx:
  3349                           	opt stack 0
  3350                           
  3351                           ; 1 bytes @ 0x49
  3352  0000A9                     	ds	1
  3353  0000AA                     
  3354                           ; 1 bytes @ 0x4A
  3355  0000AA                     	ds	1
  3356  0000AB                     Term_MainSm@FwkMinorStr:
  3357                           	opt stack 0
  3358                           
  3359                           ; 4 bytes @ 0x4B
  3360  0000AB                     	ds	4
  3361  0000AF                     Term_MainSm@FwkBuildStr:
  3362                           	opt stack 0
  3363                           
  3364                           ; 4 bytes @ 0x4F
  3365  0000AF                     	ds	4
  3366  0000B3                     ??_InitializeTasks:
  3367  0000B3                     ScheduleTasks@ActiveTaskIndex:
  3368                           	opt stack 0
  3369                           
  3370                           ; 1 bytes @ 0x53
  3371  0000B3                     	ds	2
  3372  0000B5                     tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           postinc0	equ	0xFEE
  3377                           wreg	equ	0xFE8
  3378                           postdec1	equ	0xFE5
  3379                           fsr1h	equ	0xFE2
  3380                           fsr1l	equ	0xFE1
  3381                           
  3382                           ; 1 bytes @ 0x55
  3383                           
  3384                           	psect	cstackCOMRAM
  3385  000001                     __pcstackCOMRAM:
  3386                           	opt stack 0
  3387  000001                     i2GenerateEvt@Event:
  3388                           	opt stack 0
  3389                           
  3390                           ; 2 bytes @ 0x0
  3391  000001                     	ds	2
  3392  000003                     i2GenerateEvt@EventStatus:
  3393                           	opt stack 0
  3394                           
  3395                           ; 1 bytes @ 0x2
  3396  000003                     	ds	1
  3397  000004                     Uart_MdmGsmGprsReadService@UartData:
  3398                           	opt stack 0
  3399                           
  3400                           ; 1 bytes @ 0x3
  3401  000004                     	ds	1
  3402  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3403                           	opt stack 0
  3404                           
  3405                           ; 2 bytes @ 0x4
  3406  000005                     	ds	2
  3407  000007                     ??_HighPriorityIsr:
  3408                           
  3409                           ; 1 bytes @ 0x6
  3410  000007                     	ds	18
  3411  000019                     ?i1___wmul:
  3412                           	opt stack 0
  3413  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3414                           	opt stack 0
  3415  000019                     i1GenerateEvt@Event:
  3416                           	opt stack 0
  3417  000019                     i1___wmul@multiplier:
  3418                           	opt stack 0
  3419                           
  3420                           ; 2 bytes @ 0x18
  3421  000019                     	ds	2
  3422  00001B                     i1GenerateEvt@EventStatus:
  3423                           	opt stack 0
  3424  00001B                     i1___wmul@multiplicand:
  3425                           	opt stack 0
  3426                           
  3427                           ; 2 bytes @ 0x1A
  3428  00001B                     	ds	1
  3429  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3430                           	opt stack 0
  3431                           
  3432                           ; 2 bytes @ 0x1B
  3433  00001C                     	ds	1
  3434  00001D                     i1___wmul@product:
  3435                           	opt stack 0
  3436                           
  3437                           ; 2 bytes @ 0x1C
  3438  00001D                     	ds	1
  3439  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3440                           	opt stack 0
  3441                           
  3442                           ; 1 bytes @ 0x1D
  3443  00001E                     	ds	1
  3444  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3445                           	opt stack 0
  3446                           
  3447                           ; 1 bytes @ 0x1E
  3448  00001F                     	ds	1
  3449  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3450                           	opt stack 0
  3451                           
  3452                           ; 1 bytes @ 0x1F
  3453  000020                     	ds	1
  3454  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3455                           	opt stack 0
  3456                           
  3457                           ; 2 bytes @ 0x20
  3458  000021                     	ds	2
  3459  000023                     tblptru	equ	0xFF8
  3460                           tblptrh	equ	0xFF7
  3461                           tblptrl	equ	0xFF6
  3462                           tablat	equ	0xFF5
  3463                           postinc0	equ	0xFEE
  3464                           wreg	equ	0xFE8
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           
  3469                           ; 1 bytes @ 0x22
  3470 ;;
  3471 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3472 ;;
  3473 ;; *************** function _main *****************
  3474 ;; Defined at:
  3475 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  2   14[None  ] short 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels required when called:   23
  3495 ;; This function calls:
  3496 ;;		_Sch_MainScheduler
  3497 ;;		_SystemInit
  3498 ;; This function is called by:
  3499 ;;		Startup code after reset
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text0
  3504  006212                     __ptext0:
  3505                           	opt stack 0
  3506  006212                     _main:
  3507                           	opt stack 8
  3508                           
  3509                           ;main.c: 61: SystemInit();
  3510                           
  3511                           ;incstack = 0
  3512  006212  EC44  F02E         	call	_SystemInit	;wreg free
  3513                           
  3514                           ;main.c: 64: Sch_MainScheduler();
  3515  006216  EC16  F030         	call	_Sch_MainScheduler	;wreg free
  3516                           
  3517                           ;main.c: 67: return 0;
  3518                           ;	Return value of _main is never used
  3519  00621A  EF66  F000         	goto	start
  3520  00621E                     __end_of_main:
  3521                           	opt stack 0
  3522                           tblptru	equ	0xFF8
  3523                           tblptrh	equ	0xFF7
  3524                           tblptrl	equ	0xFF6
  3525                           tablat	equ	0xFF5
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           postdec1	equ	0xFE5
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           
  3532 ;; *************** function _SystemInit *****************
  3533 ;; Defined at:
  3534 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:   15
  3555 ;; This function calls:
  3556 ;;		_InitSchedTimer
  3557 ;;		_Irq_InitIntController
  3558 ;;		_Mcu_ConfigExtInt
  3559 ;;		_Mcu_StartSystemPll
  3560 ;;		_Pm_DsReleasePinControl
  3561 ;;		_Tmr_RegisterTmr2IsrCallback
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text1
  3568  005C88                     __ptext1:
  3569                           	opt stack 0
  3570  005C88                     _SystemInit:
  3571                           	opt stack 15
  3572                           
  3573                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3574                           
  3575                           ;incstack = 0
  3576  005C88  EC2C  F031         	call	_Pm_DsReleasePinControl	;wreg free
  3577                           
  3578                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3579  005C8C  EC07  F030         	call	_Mcu_StartSystemPll	;wreg free
  3580                           
  3581                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3582  005C90  0E01               	movlw	1
  3583  005C92  0100               	movlb	0	; () banked
  3584  005C94  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3585  005C96  0E01               	movlw	1
  3586  005C98  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3587  005C9A  0E01               	movlw	1
  3588  005C9C  ECE8  F02E         	call	_Irq_InitIntController
  3589                           
  3590                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3591  005CA0  0EF6               	movlw	low _Sch_SchmIntService
  3592  005CA2  0100               	movlb	0	; () banked
  3593  005CA4  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3594  005CA6  0E61               	movlw	high _Sch_SchmIntService
  3595  005CA8  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3596  005CAA  EC0F  F031         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3597                           
  3598                           ;sys_init.c: 132: InitSchedTimer();
  3599  005CAE  ECA4  F02E         	call	_InitSchedTimer	;wreg free
  3600                           
  3601                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3602  005CB2  EC41  F030         	call	_Mcu_ConfigExtInt	;wreg free
  3603  005CB6  0012               	return		;funcret
  3604  005CB8                     __end_of_SystemInit:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postdec1	equ	0xFE5
  3613                           fsr1h	equ	0xFE2
  3614                           fsr1l	equ	0xFE1
  3615                           
  3616 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3617 ;; Defined at:
  3618 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3621 ;;		 -> Sch_SchmIntService(1), 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3633 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3637 ;;Total ram usage:        2 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:   11
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_SystemInit
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text2
  3648  00621E                     __ptext2:
  3649                           	opt stack 0
  3650  00621E                     _Tmr_RegisterTmr2IsrCallback:
  3651                           	opt stack 18
  3652                           
  3653                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3654                           
  3655                           ;incstack = 0
  3656  00621E  C07D  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3657  006222  C07E  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3658  006226  0012               	return		;funcret
  3659  006228                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3660                           	opt stack 0
  3661                           tblptru	equ	0xFF8
  3662                           tblptrh	equ	0xFF7
  3663                           tblptrl	equ	0xFF6
  3664                           tablat	equ	0xFF5
  3665                           postinc0	equ	0xFEE
  3666                           wreg	equ	0xFE8
  3667                           postdec1	equ	0xFE5
  3668                           fsr1h	equ	0xFE2
  3669                           fsr1l	equ	0xFE1
  3670                           
  3671 ;; *************** function _Pm_DsReleasePinControl *****************
  3672 ;; Defined at:
  3673 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		None
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:   11
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_SystemInit
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text3
  3702  006258                     __ptext3:
  3703                           	opt stack 0
  3704  006258                     _Pm_DsReleasePinControl:
  3705                           	opt stack 18
  3706                           
  3707                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3708                           
  3709                           ;incstack = 0
  3710  006258  010F               	movlb	15	; () banked
  3711  00625A  914C               	bcf	76,0,b	;volatile
  3712                           
  3713                           ; BSR set to: 15
  3714  00625C  0012               	return		;funcret
  3715  00625E                     __end_of_Pm_DsReleasePinControl:
  3716                           	opt stack 0
  3717                           tblptru	equ	0xFF8
  3718                           tblptrh	equ	0xFF7
  3719                           tblptrl	equ	0xFF6
  3720                           tablat	equ	0xFF5
  3721                           postinc0	equ	0xFEE
  3722                           wreg	equ	0xFE8
  3723                           postdec1	equ	0xFE5
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           
  3727 ;; *************** function _Mcu_StartSystemPll *****************
  3728 ;; Defined at:
  3729 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:   11
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_SystemInit
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text4
  3758  00600E                     __ptext4:
  3759                           	opt stack 0
  3760  00600E                     _Mcu_StartSystemPll:
  3761                           	opt stack 18
  3762                           
  3763                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3764                           
  3765                           ; BSR set to: 15
  3766                           ;incstack = 0
  3767  00600E  0E03               	movlw	3
  3768  006010  0100               	movlb	0	; () banked
  3769  006012  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3770  006014  0EE8               	movlw	232
  3771  006016  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3775  006018  8C9B               	bsf	3995,6,c	;volatile
  3776  00601A                     l11019:
  3777                           
  3778                           ; BSR set to: 0
  3779  00601A  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3780  00601C  A0D8               	btfss	status,0,c
  3781  00601E  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3782  006020  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3783  006022  E1FB               	bnz	l11019
  3784  006024  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3785  006026  B4D8               	btfsc	status,2,c
  3786  006028  0012               	return	
  3787  00602A  D7F7               	goto	l237
  3788  00602C                     __end_of_Mcu_StartSystemPll:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           postinc0	equ	0xFEE
  3795                           wreg	equ	0xFE8
  3796                           postdec1	equ	0xFE5
  3797                           fsr1h	equ	0xFE2
  3798                           fsr1l	equ	0xFE1
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _Mcu_ConfigExtInt *****************
  3802 ;; Defined at:
  3803 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:   11
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_SystemInit
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text5
  3832  006082                     __ptext5:
  3833                           	opt stack 0
  3834  006082                     _Mcu_ConfigExtInt:
  3835                           	opt stack 18
  3836                           
  3837                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;incstack = 0
  3841  006082  8093               	bsf	3987,0,c	;volatile
  3842                           
  3843                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3844  006084  8695               	bsf	3989,3,c	;volatile
  3845                           
  3846                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3847  006086  010F               	movlb	15	; () banked
  3848  006088  8949               	bsf	73,4,b	;volatile
  3849                           
  3850                           ; BSR set to: 15
  3851                           ;mcu_drv.c: 108: RPINR1 = 20;
  3852  00608A  0E14               	movlw	20
  3853  00608C  010E               	movlb	14	; () banked
  3854  00608E  6FE7               	movwf	231,b	;volatile
  3855                           
  3856                           ; BSR set to: 14
  3857                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3858  006090  88F2               	bsf	intcon,4,c	;volatile
  3859                           
  3860                           ; BSR set to: 14
  3861                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3862  006092  86F0               	bsf	intcon3,3,c	;volatile
  3863                           
  3864                           ; BSR set to: 14
  3865                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3866  006094  8CF0               	bsf	intcon3,6,c	;volatile
  3867                           
  3868                           ; BSR set to: 14
  3869                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3870  006096  9CF1               	bcf	intcon2,6,c	;volatile
  3871                           
  3872                           ; BSR set to: 14
  3873                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3874  006098  9AF1               	bcf	intcon2,5,c	;volatile
  3875                           
  3876                           ; BSR set to: 14
  3877  00609A  0012               	return		;funcret
  3878  00609C                     __end_of_Mcu_ConfigExtInt:
  3879                           	opt stack 0
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           intcon	equ	0xFF2
  3885                           intcon2	equ	0xFF1
  3886                           intcon3	equ	0xFF0
  3887                           postinc0	equ	0xFEE
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           status	equ	0xFD8
  3893                           
  3894 ;; *************** function _Irq_InitIntController *****************
  3895 ;; Defined at:
  3896 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  IntPriorityE    1    wreg     enum E7720
  3899 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3900 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;Total ram usage:        3 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:   11
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_SystemInit
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text6
  3927  005DD0                     __ptext6:
  3928                           	opt stack 0
  3929  005DD0                     _Irq_InitIntController:
  3930                           	opt stack 18
  3931                           
  3932                           ; BSR set to: 14
  3933                           ;incstack = 0
  3934                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3935  005DD0  0100               	movlb	0	; () banked
  3936  005DD2  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3937                           
  3938                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3939  005DD4  0100               	movlb	0	; () banked
  3940  005DD6  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3941  005DD8  D002               	bra	u9595
  3942  005DDA  9ED0               	bcf	4048,7,c	;volatile
  3943  005DDC  D001               	bra	u9596
  3944  005DDE                     u9595:
  3945  005DDE  8ED0               	bsf	4048,7,c	;volatile
  3946  005DE0                     u9596:
  3947                           
  3948                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3949  005DE0  0100               	movlb	0	; () banked
  3950  005DE2  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3951  005DE4  D002               	bra	u9605
  3952  005DE6  9EF2               	bcf	intcon,7,c	;volatile
  3953  005DE8  D001               	bra	u9606
  3954  005DEA                     u9605:
  3955  005DEA  8EF2               	bsf	intcon,7,c	;volatile
  3956  005DEC                     u9606:
  3957                           
  3958                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3959  005DEC  0100               	movlb	0	; () banked
  3960  005DEE  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3961  005DF0  D002               	bra	u9615
  3962  005DF2  9CF2               	bcf	intcon,6,c	;volatile
  3963  005DF4  D001               	bra	u9616
  3964  005DF6                     u9615:
  3965  005DF6  8CF2               	bsf	intcon,6,c	;volatile
  3966  005DF8                     u9616:
  3967  005DF8  0012               	return		;funcret
  3968  005DFA                     __end_of_Irq_InitIntController:
  3969                           	opt stack 0
  3970                           tblptru	equ	0xFF8
  3971                           tblptrh	equ	0xFF7
  3972                           tblptrl	equ	0xFF6
  3973                           tablat	equ	0xFF5
  3974                           intcon	equ	0xFF2
  3975                           intcon2	equ	0xFF1
  3976                           intcon3	equ	0xFF0
  3977                           postinc0	equ	0xFEE
  3978                           wreg	equ	0xFE8
  3979                           postdec1	equ	0xFE5
  3980                           fsr1h	equ	0xFE2
  3981                           fsr1l	equ	0xFE1
  3982                           status	equ	0xFD8
  3983                           
  3984 ;; *************** function _InitSchedTimer *****************
  3985 ;; Defined at:
  3986 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4001 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4003 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4004 ;;Total ram usage:        7 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:   14
  4007 ;; This function calls:
  4008 ;;		_Tmr_TmrBConfig
  4009 ;; This function is called by:
  4010 ;;		_SystemInit
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text7
  4015  005D48                     __ptext7:
  4016                           	opt stack 0
  4017  005D48                     _InitSchedTimer:
  4018                           	opt stack 15
  4019                           
  4020                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4021                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4022                           
  4023                           ;incstack = 0
  4024  005D48  0E04               	movlw	4
  4025  005D4A  0100               	movlb	0	; () banked
  4026  005D4C  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4027                           
  4028                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4029  005D4E  0E0C               	movlw	12
  4030  005D50  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4031                           
  4032                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4033  005D52  0E00               	movlw	0
  4034  005D54  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4035                           
  4036                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4037  005D56  0E01               	movlw	1
  4038  005D58  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4039                           
  4040                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4041  005D5A  0E03               	movlw	3
  4042  005D5C  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4043  005D5E  0EE8               	movlw	232
  4044  005D60  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4045                           
  4046                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4047  005D62  0E01               	movlw	1
  4048  005D64  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4052  005D66  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4053  005D68  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4054  005D6A  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4055  005D6C  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4056  005D6E  0E02               	movlw	2
  4057  005D70  ECF2  F01D         	call	_Tmr_TmrBConfig
  4058  005D74  0012               	return		;funcret
  4059  005D76                     __end_of_InitSchedTimer:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           intcon	equ	0xFF2
  4066                           intcon2	equ	0xFF1
  4067                           intcon3	equ	0xFF0
  4068                           postinc0	equ	0xFEE
  4069                           wreg	equ	0xFE8
  4070                           postdec1	equ	0xFE5
  4071                           fsr1h	equ	0xFE2
  4072                           fsr1l	equ	0xFE1
  4073                           status	equ	0xFD8
  4074                           
  4075 ;; *************** function _Tmr_TmrBConfig *****************
  4076 ;; Defined at:
  4077 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  TmrNumb         1    wreg     unsigned char 
  4080 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4081 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4093 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;Total ram usage:        4 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:   13
  4100 ;; This function calls:
  4101 ;;		_TmrBInit
  4102 ;;		_Tmr_StartTmr
  4103 ;;		_Tmr_TmrBIrqSet
  4104 ;;		_Tmr_TmrBPrSet
  4105 ;; This function is called by:
  4106 ;;		_InitSchedTimer
  4107 ;;		_InitAuxTimer
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text8
  4112  003BE4                     __ptext8:
  4113                           	opt stack 0
  4114  003BE4                     _Tmr_TmrBConfig:
  4115                           	opt stack 15
  4116                           
  4117                           ;incstack = 0
  4118                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4119  003BE4  0100               	movlb	0	; () banked
  4120  003BE6  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4121                           
  4122                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4123  003BE8  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4124  003BEC  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4125  003BF0  50DF               	movf	indf2,w,c
  4126  003BF2  0100               	movlb	0	; () banked
  4127  003BF4  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4128  003BF6  EE20 F001          	lfsr	2,1
  4129  003BFA  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4130  003BFC  26D9               	addwf	fsr2l,f,c
  4131  003BFE  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4132  003C00  22DA               	addwfc	fsr2h,f,c
  4133  003C02  50DF               	movf	indf2,w,c
  4134  003C04  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4135  003C06  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4136  003C08  ECCF  F023         	call	_TmrBInit
  4137                           
  4138                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4139  003C0C  0100               	movlb	0	; () banked
  4140  003C0E  EE20 F002          	lfsr	2,2
  4141  003C12  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4142  003C14  26D9               	addwf	fsr2l,f,c
  4143  003C16  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4144  003C18  22DA               	addwfc	fsr2h,f,c
  4145  003C1A  04DE               	decf	postinc2,w,c
  4146  003C1C  A4D8               	btfss	status,2,c
  4147  003C1E  D00E               	goto	l546
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;tmr_drv.c: 277: {
  4151                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4152  003C20  EE20 F003          	lfsr	2,3
  4153  003C24  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4154  003C26  26D9               	addwf	fsr2l,f,c
  4155  003C28  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4156  003C2A  22DA               	addwfc	fsr2h,f,c
  4157  003C2C  50DF               	movf	indf2,w,c
  4158  003C2E  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4159  003C30  0E01               	movlw	1
  4160  003C32  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4161  003C34  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4162  003C36  EC52  F02B         	call	_Tmr_TmrBIrqSet
  4163                           
  4164                           ;tmr_drv.c: 280: }
  4165  003C3A  D00E               	goto	l547
  4166  003C3C                     l546:
  4167                           
  4168                           ;tmr_drv.c: 281: else
  4169                           ;tmr_drv.c: 282: {
  4170                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4171  003C3C  0100               	movlb	0	; () banked
  4172  003C3E  EE20 F003          	lfsr	2,3
  4173  003C42  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4174  003C44  26D9               	addwf	fsr2l,f,c
  4175  003C46  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4176  003C48  22DA               	addwfc	fsr2h,f,c
  4177  003C4A  50DF               	movf	indf2,w,c
  4178  003C4C  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4179  003C4E  0E00               	movlw	0
  4180  003C50  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4181  003C52  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4182  003C54  EC52  F02B         	call	_Tmr_TmrBIrqSet
  4183  003C58                     l547:
  4184                           
  4185                           ;tmr_drv.c: 285: }
  4186                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4187  003C58  0100               	movlb	0	; () banked
  4188  003C5A  EE20 F004          	lfsr	2,4
  4189  003C5E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4190  003C60  26D9               	addwf	fsr2l,f,c
  4191  003C62  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4192  003C64  22DA               	addwfc	fsr2h,f,c
  4193  003C66  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4194  003C6A  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4195  003C6E  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4196  003C72  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4197  003C76  50DF               	movf	indf2,w,c
  4198  003C78  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4199  003C7A  EE20 F001          	lfsr	2,1
  4200  003C7E  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4201  003C80  26D9               	addwf	fsr2l,f,c
  4202  003C82  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4203  003C84  22DA               	addwfc	fsr2h,f,c
  4204  003C86  50DF               	movf	indf2,w,c
  4205  003C88  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4206  003C8A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4207  003C8C  ECD1  F018         	call	_Tmr_TmrBPrSet
  4208                           
  4209                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4210  003C90  0100               	movlb	0	; () banked
  4211  003C92  EE20 F006          	lfsr	2,6
  4212  003C96  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4213  003C98  26D9               	addwf	fsr2l,f,c
  4214  003C9A  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4215  003C9C  22DA               	addwfc	fsr2h,f,c
  4216  003C9E  04DE               	decf	postinc2,w,c
  4217  003CA0  A4D8               	btfss	status,2,c
  4218  003CA2  0012               	return	
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;tmr_drv.c: 290: {
  4222                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4223  003CA4  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4224  003CA6  ECE7  F02F         	call	_Tmr_StartTmr
  4225                           
  4226                           ;tmr_drv.c: 293: }
  4227  003CAA  0012               	return	
  4228  003CAC                     __end_of_Tmr_TmrBConfig:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           intcon	equ	0xFF2
  4235                           intcon2	equ	0xFF1
  4236                           intcon3	equ	0xFF0
  4237                           postinc0	equ	0xFEE
  4238                           wreg	equ	0xFE8
  4239                           postdec1	equ	0xFE5
  4240                           fsr1h	equ	0xFE2
  4241                           fsr1l	equ	0xFE1
  4242                           indf2	equ	0xFDF
  4243                           postinc2	equ	0xFDE
  4244                           postdec2	equ	0xFDD
  4245                           fsr2h	equ	0xFDA
  4246                           fsr2l	equ	0xFD9
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function _Tmr_TmrBPrSet *****************
  4250 ;; Defined at:
  4251 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  TmrNumb         1    wreg     unsigned char 
  4254 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4255 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4256 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4259 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4260 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      enum E7736
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;Total ram usage:       10 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:   12
  4277 ;; This function calls:
  4278 ;;		___lldiv
  4279 ;;		___lmul
  4280 ;; This function is called by:
  4281 ;;		_Tmr_TmrBConfig
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text9
  4286  0031A2                     __ptext9:
  4287                           	opt stack 0
  4288  0031A2                     _Tmr_TmrBPrSet:
  4289                           	opt stack 15
  4290                           
  4291                           ;incstack = 0
  4292                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4293  0031A2  0100               	movlb	0	; () banked
  4294  0031A4  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4295                           
  4296                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4297                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4298  0031A6  0E00               	movlw	0
  4299  0031A8  0100               	movlb	0	; () banked
  4300  0031AA  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4301  0031AC  0E00               	movlw	0
  4302  0031AE  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4303  0031B0  0E00               	movlw	0
  4304  0031B2  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4305  0031B4  0E00               	movlw	0
  4306  0031B6  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4310  0031B8  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4311  0031BA  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4312  0031BC  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4313  0031C0  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4314  0031C4  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4315  0031C6  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4316  0031C8  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4317  0031CC  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4318  0031D0  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4319  0031D2  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4320  0031D4  EC37  F029         	call	___lmul	;wreg free
  4321  0031D8  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4322  0031DC  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4323  0031E0  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4324  0031E4  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4325                           
  4326                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4327  0031E8  0E00               	movlw	0
  4328  0031EA  0100               	movlb	0	; () banked
  4329  0031EC  6F89               	movwf	___lldiv@dividend& (0+255),b
  4330  0031EE  0E1B               	movlw	27
  4331  0031F0  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4332  0031F2  0EB7               	movlw	183
  4333  0031F4  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4334  0031F6  0E00               	movlw	0
  4335  0031F8  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4336  0031FA  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4337  0031FE  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4338  003202  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4339  003206  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4340  00320A  EC11  F026         	call	___lldiv	;wreg free
  4341  00320E  0100               	movlb	0	; () banked
  4342  003210  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4343  003212  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4344  003214  E13A               	bnz	l13801
  4345  003216  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4346  003218  A0D8               	btfss	status,0,c
  4347  00321A  D02D               	goto	l529
  4348  00321C  D036               	goto	l528
  4349  00321E                     
  4350                           ; BSR set to: 0
  4351                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4352                           
  4353                           ; BSR set to: 0
  4354  00321E  0E00               	movlw	0
  4355  003220  6F89               	movwf	___lldiv@dividend& (0+255),b
  4356  003222  0E1B               	movlw	27
  4357  003224  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4358  003226  0EB7               	movlw	183
  4359  003228  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4360  00322A  0E00               	movlw	0
  4361  00322C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4362  00322E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4363  003232  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4364  003236  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4365  00323A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4366  00323E  EC11  F026         	call	___lldiv	;wreg free
  4367  003242  0100               	movlb	0	; () banked
  4368  003244  5189               	movf	?___lldiv& (0+255),w,b
  4369  003246  6ECB               	movwf	4043,c	;volatile
  4370                           
  4371                           ;tmr_drv.c: 210: break;
  4372  003248  D01D               	goto	l531
  4373  00324A                     
  4374                           ; BSR set to: 0
  4375                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4376                           
  4377                           ; BSR set to: 0
  4378  00324A  0E00               	movlw	0
  4379  00324C  6F89               	movwf	___lldiv@dividend& (0+255),b
  4380  00324E  0E1B               	movlw	27
  4381  003250  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4382  003252  0EB7               	movlw	183
  4383  003254  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4384  003256  0E00               	movlw	0
  4385  003258  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4386  00325A  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4387  00325E  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4388  003262  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4389  003266  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4390  00326A  EC11  F026         	call	___lldiv	;wreg free
  4391  00326E  0100               	movlb	0	; () banked
  4392  003270  5189               	movf	?___lldiv& (0+255),w,b
  4393  003272  6E77               	movwf	3959,c	;volatile
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;tmr_drv.c: 219: }
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;tmr_drv.c: 218: break;
  4400                           
  4401                           ;tmr_drv.c: 217: default:
  4402                           
  4403                           ;tmr_drv.c: 215: break;
  4404  003274  D007               	goto	l531
  4405  003276                     l529:
  4406                           
  4407                           ; BSR set to: 0
  4408                           
  4409                           ; BSR set to: 0
  4410  003276  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4411                           
  4412                           ; Switch size 1, requested type "space"
  4413                           ; Number of cases is 2, Range of values is 2 to 4
  4414                           ; switch strategies available:
  4415                           ; Name         Instructions Cycles
  4416                           ; simple_byte            7     4 (average)
  4417                           ;	Chosen strategy is simple_byte
  4418  003278  0A02               	xorlw	2	; case 2
  4419  00327A  B4D8               	btfsc	status,2,c
  4420  00327C  D7D0               	goto	l530
  4421  00327E  0A06               	xorlw	6	; case 4
  4422  003280  B4D8               	btfsc	status,2,c
  4423  003282  D7E3               	goto	l532
  4424  003284                     l531:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4428                           
  4429                           ; BSR set to: 0
  4430  003284  0E00               	movlw	0
  4431  003286  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4432                           
  4433                           ;tmr_drv.c: 223: }
  4434  003288  0012               	return	
  4435  00328A                     l528:
  4436  00328A                     l13801:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;tmr_drv.c: 224: else
  4440                           ;tmr_drv.c: 225: {
  4441                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4442  00328A  0E01               	movlw	1
  4443  00328C  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4444                           
  4445                           ; BSR set to: 0
  4446  00328E  0012               	return	
  4447  003290                     __end_of_Tmr_TmrBPrSet:
  4448                           	opt stack 0
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           intcon2	equ	0xFF1
  4457                           intcon3	equ	0xFF0
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           postinc2	equ	0xFDE
  4465                           postdec2	equ	0xFDD
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function _Tmr_TmrBIrqSet *****************
  4471 ;; Defined at:
  4472 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  TmrNumb         1    wreg     unsigned char 
  4475 ;;  Priority        1   29[BANK0 ] enum E7716
  4476 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;Total ram usage:        3 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:   11
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_Tmr_TmrBConfig
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text10
  4503  0056A4                     __ptext10:
  4504                           	opt stack 0
  4505  0056A4                     _Tmr_TmrBIrqSet:
  4506                           	opt stack 16
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;incstack = 0
  4510                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4511  0056A4  0100               	movlb	0	; () banked
  4512  0056A6  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4513                           
  4514                           ;tmr_drv.c: 156: switch (TmrNumb)
  4515  0056A8  D01A               	goto	l520
  4516  0056AA                     l521:
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4520  0056AA  929E               	bcf	3998,1,c	;volatile
  4521                           
  4522                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4523  0056AC  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4524  0056AE  D002               	bra	u8115
  4525  0056B0  929F               	bcf	3999,1,c	;volatile
  4526  0056B2  D001               	bra	u8116
  4527  0056B4                     u8115:
  4528  0056B4  829F               	bsf	3999,1,c	;volatile
  4529  0056B6                     u8116:
  4530                           
  4531                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4532  0056B6  0100               	movlb	0	; () banked
  4533  0056B8  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4534  0056BA  D002               	bra	u8125
  4535  0056BC  929D               	bcf	3997,1,c	;volatile
  4536  0056BE  D001               	bra	u8126
  4537  0056C0                     u8125:
  4538  0056C0  829D               	bsf	3997,1,c	;volatile
  4539  0056C2                     u8126:
  4540                           
  4541                           ;tmr_drv.c: 165: break;
  4542  0056C2  0012               	return	
  4543  0056C4                     l523:
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4547  0056C4  96A4               	bcf	4004,3,c	;volatile
  4548                           
  4549                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4550  0056C6  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4551  0056C8  D002               	bra	u8135
  4552  0056CA  96A5               	bcf	4005,3,c	;volatile
  4553  0056CC  D001               	bra	u8136
  4554  0056CE                     u8135:
  4555  0056CE  86A5               	bsf	4005,3,c	;volatile
  4556  0056D0                     u8136:
  4557                           
  4558                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4559  0056D0  0100               	movlb	0	; () banked
  4560  0056D2  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4561  0056D4  D002               	bra	u8145
  4562  0056D6  96A3               	bcf	4003,3,c	;volatile
  4563  0056D8  D001               	bra	u8146
  4564  0056DA                     u8145:
  4565  0056DA  86A3               	bsf	4003,3,c	;volatile
  4566  0056DC                     u8146:
  4567                           
  4568                           ;tmr_drv.c: 178: }
  4569                           
  4570                           ;tmr_drv.c: 177: break;
  4571                           
  4572                           ;tmr_drv.c: 176: default:
  4573                           
  4574                           ;tmr_drv.c: 174: break;
  4575  0056DC  0012               	return	
  4576  0056DE                     l520:
  4577  0056DE  0100               	movlb	0	; () banked
  4578  0056E0  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4579                           
  4580                           ; Switch size 1, requested type "space"
  4581                           ; Number of cases is 2, Range of values is 2 to 4
  4582                           ; switch strategies available:
  4583                           ; Name         Instructions Cycles
  4584                           ; simple_byte            7     4 (average)
  4585                           ;	Chosen strategy is simple_byte
  4586  0056E2  0A02               	xorlw	2	; case 2
  4587  0056E4  B4D8               	btfsc	status,2,c
  4588  0056E6  D7E1               	goto	l521
  4589  0056E8  0A06               	xorlw	6	; case 4
  4590  0056EA  A4D8               	btfss	status,2,c
  4591  0056EC  0012               	return	
  4592  0056EE  D7EA               	goto	l523
  4593  0056F0                     __end_of_Tmr_TmrBIrqSet:
  4594                           	opt stack 0
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           prodh	equ	0xFF4
  4600                           prodl	equ	0xFF3
  4601                           intcon	equ	0xFF2
  4602                           intcon2	equ	0xFF1
  4603                           intcon3	equ	0xFF0
  4604                           postinc0	equ	0xFEE
  4605                           wreg	equ	0xFE8
  4606                           postdec1	equ	0xFE5
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           indf2	equ	0xFDF
  4610                           postinc2	equ	0xFDE
  4611                           postdec2	equ	0xFDD
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _Tmr_StartTmr *****************
  4617 ;; Defined at:
  4618 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  TmrNumb         1    wreg     unsigned char 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;Total ram usage:        1 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   11
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_Tmr_TmrBConfig
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text11
  4647  005FCE                     __ptext11:
  4648                           	opt stack 0
  4649  005FCE                     _Tmr_StartTmr:
  4650                           	opt stack 16
  4651                           
  4652                           ;incstack = 0
  4653                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4654  005FCE  0100               	movlb	0	; () banked
  4655  005FD0  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4656                           
  4657                           ;tmr_drv.c: 245: switch (TmrNumb)
  4658  005FD2  D004               	goto	l538
  4659  005FD4                     l539:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4663  005FD4  84CA               	bsf	4042,2,c	;volatile
  4664                           
  4665                           ;tmr_drv.c: 250: break;
  4666  005FD6  0012               	return	
  4667  005FD8                     l541:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4671  005FD8  8476               	bsf	3958,2,c	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;tmr_drv.c: 259: }
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;tmr_drv.c: 258: break;
  4678                           
  4679                           ;tmr_drv.c: 257: default:
  4680                           
  4681                           ;tmr_drv.c: 255: break;
  4682  005FDA  0012               	return	
  4683  005FDC                     l538:
  4684                           
  4685                           ; BSR set to: 0
  4686  005FDC  0100               	movlb	0	; () banked
  4687  005FDE  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4688                           
  4689                           ; Switch size 1, requested type "space"
  4690                           ; Number of cases is 2, Range of values is 2 to 4
  4691                           ; switch strategies available:
  4692                           ; Name         Instructions Cycles
  4693                           ; simple_byte            7     4 (average)
  4694                           ;	Chosen strategy is simple_byte
  4695  005FE0  0A02               	xorlw	2	; case 2
  4696  005FE2  B4D8               	btfsc	status,2,c
  4697  005FE4  D7F7               	goto	l539
  4698  005FE6  0A06               	xorlw	6	; case 4
  4699  005FE8  A4D8               	btfss	status,2,c
  4700  005FEA  0012               	return	
  4701  005FEC  D7F5               	goto	l541
  4702  005FEE                     __end_of_Tmr_StartTmr:
  4703                           	opt stack 0
  4704                           tblptru	equ	0xFF8
  4705                           tblptrh	equ	0xFF7
  4706                           tblptrl	equ	0xFF6
  4707                           tablat	equ	0xFF5
  4708                           prodh	equ	0xFF4
  4709                           prodl	equ	0xFF3
  4710                           intcon	equ	0xFF2
  4711                           intcon2	equ	0xFF1
  4712                           intcon3	equ	0xFF0
  4713                           postinc0	equ	0xFEE
  4714                           wreg	equ	0xFE8
  4715                           postdec1	equ	0xFE5
  4716                           fsr1h	equ	0xFE2
  4717                           fsr1l	equ	0xFE1
  4718                           indf2	equ	0xFDF
  4719                           postinc2	equ	0xFDE
  4720                           postdec2	equ	0xFDD
  4721                           fsr2h	equ	0xFDA
  4722                           fsr2l	equ	0xFD9
  4723                           status	equ	0xFD8
  4724                           
  4725 ;; *************** function _TmrBInit *****************
  4726 ;; Defined at:
  4727 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  TmrNumb         1    wreg     unsigned char 
  4730 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4731 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4746 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4747 ;;Total ram usage:        4 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:   11
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_Tmr_TmrBConfig
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text12
  4758  00479E                     __ptext12:
  4759                           	opt stack 0
  4760  00479E                     _TmrBInit:
  4761                           	opt stack 16
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;incstack = 0
  4765                           ;TmrBInit@TmrNumb stored from wreg
  4766  00479E  0100               	movlb	0	; () banked
  4767  0047A0  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4768                           
  4769                           ;tmr_drv.c: 75: switch (TmrNumb)
  4770  0047A2  D03F               	goto	l500
  4771  0047A4                     l503:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4775  0047A4  90CA               	bcf	4042,0,c	;volatile
  4776  0047A6  D001               	goto	L1
  4777  0047A8                     l505:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4781  0047A8  80CA               	bsf	4042,0,c	;volatile
  4782  0047AA                     L1:
  4783                           
  4784                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4785  0047AA  92CA               	bcf	4042,1,c	;volatile
  4786                           
  4787                           ;tmr_drv.c: 91: break;
  4788  0047AC  D00E               	goto	l504
  4789  0047AE                     l506:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4793  0047AE  80CA               	bsf	4042,0,c	;volatile
  4794                           
  4795                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4796  0047B0  82CA               	bsf	4042,1,c	;volatile
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;tmr_drv.c: 100: }
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;tmr_drv.c: 99: break;
  4803                           
  4804                           ;tmr_drv.c: 98: default:
  4805                           
  4806                           ;tmr_drv.c: 96: break;
  4807  0047B2  D00B               	goto	l504
  4808  0047B4                     
  4809                           ; BSR set to: 0
  4810  0047B4  0100               	movlb	0	; () banked
  4811  0047B6  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4812                           
  4813                           ; Switch size 1, requested type "space"
  4814                           ; Number of cases is 3, Range of values is 1 to 16
  4815                           ; switch strategies available:
  4816                           ; Name         Instructions Cycles
  4817                           ; simple_byte           10     6 (average)
  4818                           ;	Chosen strategy is simple_byte
  4819  0047B8  0A01               	xorlw	1	; case 1
  4820  0047BA  B4D8               	btfsc	status,2,c
  4821  0047BC  D7F3               	goto	l503
  4822  0047BE  0A05               	xorlw	5	; case 4
  4823  0047C0  B4D8               	btfsc	status,2,c
  4824  0047C2  D7F2               	goto	l505
  4825  0047C4  0A14               	xorlw	20	; case 16
  4826  0047C6  B4D8               	btfsc	status,2,c
  4827  0047C8  D7F2               	goto	l506
  4828  0047CA                     l504:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4832                           
  4833                           ; BSR set to: 0
  4834  0047CA  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4835  0047CE  0EFF               	movlw	255
  4836  0047D0  277F               	addwf	??_TmrBInit& (0+255),f,b
  4837  0047D2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4838  0047D4  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4839  0047D6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4840  0047D8  50CA               	movf	4042,w,c	;volatile
  4841  0047DA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4842  0047DC  0B87               	andlw	-121
  4843  0047DE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4844  0047E0  6ECA               	movwf	4042,c	;volatile
  4845                           
  4846                           ;tmr_drv.c: 104: break;
  4847  0047E2  0012               	return	
  4848  0047E4                     l511:
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4852  0047E4  9076               	bcf	3958,0,c	;volatile
  4853  0047E6  D001               	goto	L2
  4854  0047E8                     l513:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4858  0047E8  8076               	bsf	3958,0,c	;volatile
  4859  0047EA                     L2:
  4860                           
  4861                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4862  0047EA  9276               	bcf	3958,1,c	;volatile
  4863                           
  4864                           ;tmr_drv.c: 120: break;
  4865  0047EC  D00D               	goto	l512
  4866  0047EE                     l514:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4870  0047EE  8076               	bsf	3958,0,c	;volatile
  4871                           
  4872                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4873  0047F0  8276               	bsf	3958,1,c	;volatile
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;tmr_drv.c: 129: }
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;tmr_drv.c: 128: break;
  4880                           
  4881                           ;tmr_drv.c: 127: default:
  4882                           
  4883                           ;tmr_drv.c: 125: break;
  4884  0047F2  D00A               	goto	l512
  4885  0047F4                     
  4886                           ; BSR set to: 0
  4887                           
  4888                           ; BSR set to: 0
  4889  0047F4  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4890                           
  4891                           ; Switch size 1, requested type "space"
  4892                           ; Number of cases is 3, Range of values is 1 to 16
  4893                           ; switch strategies available:
  4894                           ; Name         Instructions Cycles
  4895                           ; simple_byte           10     6 (average)
  4896                           ;	Chosen strategy is simple_byte
  4897  0047F6  0A01               	xorlw	1	; case 1
  4898  0047F8  B4D8               	btfsc	status,2,c
  4899  0047FA  D7F4               	goto	l511
  4900  0047FC  0A05               	xorlw	5	; case 4
  4901  0047FE  B4D8               	btfsc	status,2,c
  4902  004800  D7F3               	goto	l513
  4903  004802  0A14               	xorlw	20	; case 16
  4904  004804  B4D8               	btfsc	status,2,c
  4905  004806  D7F3               	goto	l514
  4906  004808                     l512:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4910                           
  4911                           ; BSR set to: 0
  4912  004808  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4913  00480C  0EFF               	movlw	255
  4914  00480E  277F               	addwf	??_TmrBInit& (0+255),f,b
  4915  004810  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4916  004812  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4917  004814  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4918  004816  5076               	movf	3958,w,c	;volatile
  4919  004818  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4920  00481A  0B87               	andlw	-121
  4921  00481C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4922  00481E  6E76               	movwf	3958,c	;volatile
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;tmr_drv.c: 137: }
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;tmr_drv.c: 136: break;
  4929                           
  4930                           ;tmr_drv.c: 135: default:
  4931                           
  4932                           ;tmr_drv.c: 133: break;
  4933  004820  0012               	return	
  4934  004822                     l500:
  4935                           
  4936                           ; BSR set to: 0
  4937  004822  0100               	movlb	0	; () banked
  4938  004824  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4939                           
  4940                           ; Switch size 1, requested type "space"
  4941                           ; Number of cases is 2, Range of values is 2 to 4
  4942                           ; switch strategies available:
  4943                           ; Name         Instructions Cycles
  4944                           ; simple_byte            7     4 (average)
  4945                           ;	Chosen strategy is simple_byte
  4946  004826  0A02               	xorlw	2	; case 2
  4947  004828  B4D8               	btfsc	status,2,c
  4948  00482A  D7C4               	goto	l502
  4949  00482C  0A06               	xorlw	6	; case 4
  4950  00482E  A4D8               	btfss	status,2,c
  4951  004830  0012               	return	
  4952  004832  D7E0               	goto	l510
  4953  004834                     __end_of_TmrBInit:
  4954                           	opt stack 0
  4955                           tblptru	equ	0xFF8
  4956                           tblptrh	equ	0xFF7
  4957                           tblptrl	equ	0xFF6
  4958                           tablat	equ	0xFF5
  4959                           prodh	equ	0xFF4
  4960                           prodl	equ	0xFF3
  4961                           intcon	equ	0xFF2
  4962                           intcon2	equ	0xFF1
  4963                           intcon3	equ	0xFF0
  4964                           postinc0	equ	0xFEE
  4965                           wreg	equ	0xFE8
  4966                           postdec1	equ	0xFE5
  4967                           fsr1h	equ	0xFE2
  4968                           fsr1l	equ	0xFE1
  4969                           indf2	equ	0xFDF
  4970                           postinc2	equ	0xFDE
  4971                           postdec2	equ	0xFDD
  4972                           fsr2h	equ	0xFDA
  4973                           fsr2l	equ	0xFD9
  4974                           status	equ	0xFD8
  4975                           
  4976 ;; *************** function _Sch_MainScheduler *****************
  4977 ;; Defined at:
  4978 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;		None
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;		None
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;Total ram usage:        0 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:   22
  4999 ;; This function calls:
  5000 ;;		_InitializeTasks
  5001 ;;		_ScheduleTasks
  5002 ;; This function is called by:
  5003 ;;		_main
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text13
  5008  00602C                     __ptext13:
  5009                           	opt stack 0
  5010  00602C                     _Sch_MainScheduler:
  5011                           	opt stack 8
  5012                           
  5013                           ;os_sched.c: 178: InitializeTasks();
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;incstack = 0
  5017  00602C  ECD0  F026         	call	_InitializeTasks	;wreg free
  5018                           
  5019                           ;os_sched.c: 180: SystemState = RunningState;
  5020  006030  0E01               	movlw	1
  5021  006032  0100               	movlb	0	; () banked
  5022  006034  6FD6               	movwf	_SystemState& (0+255),b
  5023  006036                     
  5024                           ;os_sched.c: 188: {
  5025                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5026                           
  5027                           ; BSR set to: 0
  5028  006036  0102               	movlb	2	; () banked
  5029  006038  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5030  00603A  A4D8               	btfss	status,2,c
  5031  00603C  D7FC               	goto	l790
  5032                           
  5033                           ; BSR set to: 2
  5034                           ;os_sched.c: 191: {
  5035                           ;os_sched.c: 196: ScheduleTasks();
  5036  00603E  EC2D  F017         	call	_ScheduleTasks	;wreg free
  5037                           
  5038                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5039  006042  0E01               	movlw	1
  5040  006044  0102               	movlb	2	; () banked
  5041  006046  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5042                           
  5043                           ; BSR set to: 2
  5044                           
  5045                           ; BSR set to: 2
  5046  006048  D7F6               	goto	l790
  5047  00604A                     __end_of_Sch_MainScheduler:
  5048                           	opt stack 0
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           intcon2	equ	0xFF1
  5057                           intcon3	equ	0xFF0
  5058                           postinc0	equ	0xFEE
  5059                           wreg	equ	0xFE8
  5060                           postdec1	equ	0xFE5
  5061                           fsr1h	equ	0xFE2
  5062                           fsr1l	equ	0xFE1
  5063                           indf2	equ	0xFDF
  5064                           postinc2	equ	0xFDE
  5065                           postdec2	equ	0xFDD
  5066                           fsr2h	equ	0xFDA
  5067                           fsr2l	equ	0xFD9
  5068                           status	equ	0xFD8
  5069                           
  5070 ;; *************** function _ScheduleTasks *****************
  5071 ;; Defined at:
  5072 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  ActiveTaskIn    1   83[BANK0 ] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Totals:         0       1       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;Total ram usage:        5 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:   21
  5093 ;; This function calls:
  5094 ;;		_I2cSlv_MainTask
  5095 ;;		_Led_MainTask
  5096 ;;		_MdmHttp_MainTask
  5097 ;;		_Mdm_DrvMainFn
  5098 ;;		_Mdm_MainTask
  5099 ;;		_MyApp_Task
  5100 ;;		_Rtcm_MainTask
  5101 ;;		_Term_MainTask
  5102 ;;		_UsbDevice_MainTask
  5103 ;;		_Wdg_MainTask
  5104 ;; This function is called by:
  5105 ;;		_Sch_MainScheduler
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text14
  5110  002E5A                     __ptext14:
  5111                           	opt stack 0
  5112  002E5A                     _ScheduleTasks:
  5113                           	opt stack 8
  5114                           
  5115                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5116                           
  5117                           ; BSR set to: 2
  5118                           ;incstack = 0
  5119  002E5A  0E00               	movlw	0
  5120  002E5C  0100               	movlb	0	; () banked
  5121  002E5E  6FB3               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5122                           
  5123                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5124  002E60  0E00               	movlw	0
  5125  002E62  6FB3               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5126  002E64                     l14943:
  5127                           
  5128                           ; BSR set to: 0
  5129  002E64  0E2F               	movlw	low _TaskNumber
  5130  002E66  6EF6               	movwf	tblptrl,c
  5131  002E68                     	if	1	;There is more than 1 active tblptr byte
  5132  002E68  0EFC               	movlw	high _TaskNumber
  5133  002E6A  6EF7               	movwf	tblptrh,c
  5134  002E6C                     	endif
  5135  002E6C                     	if	0	;There are less than 3 active tblptr bytes
  5136  002E6C                     	endif
  5137  002E6C  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5138  002E6E  0104               	movlb	4	; () banked
  5139  002E70  6FFA               	movwf	??_ScheduleTasks& (0+255),b
  5140  002E72  6BFB               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5141  002E74  0009               	tblrd		*+
  5142  002E76  50F5               	movf	tablat,w,c
  5143  002E78  5DFA               	subwf	??_ScheduleTasks& (0+255),w,b
  5144  002E7A  0009               	tblrd		*+
  5145  002E7C  50F5               	movf	tablat,w,c
  5146  002E7E  59FB               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5147  002E80  B0D8               	btfsc	status,0,c
  5148  002E82  0012               	return	
  5149                           
  5150                           ; BSR set to: 4
  5151                           ;os_sched.c: 106: {
  5152                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5153                           
  5154                           ; BSR set to: 4
  5155                           
  5156                           ; BSR set to: 4
  5157  002E84  0100               	movlb	0	; () banked
  5158  002E86  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5159  002E88  0D08               	mullw	8
  5160  002E8A  0E03               	movlw	3
  5161  002E8C  26F3               	addwf	prodl,f,c
  5162  002E8E  0E00               	movlw	0
  5163  002E90  22F4               	addwfc	prodh,f,c
  5164  002E92  0E90               	movlw	low _TaskTable
  5165  002E94  24F3               	addwf	prodl,w,c
  5166  002E96  6ED9               	movwf	fsr2l,c
  5167  002E98  0E05               	movlw	high _TaskTable
  5168  002E9A  20F4               	addwfc	prodh,w,c
  5169  002E9C  6EDA               	movwf	fsr2h,c
  5170  002E9E  2ADE               	incf	postinc2,f,c
  5171  002EA0  0E00               	movlw	0
  5172  002EA2  22DD               	addwfc	postdec2,f,c
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5176  002EA4  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5177  002EA6  0D08               	mullw	8
  5178  002EA8  0E05               	movlw	5
  5179  002EAA  26F3               	addwf	prodl,f,c
  5180  002EAC  0E00               	movlw	0
  5181  002EAE  22F4               	addwfc	prodh,f,c
  5182  002EB0  0E90               	movlw	low _TaskTable
  5183  002EB2  24F3               	addwf	prodl,w,c
  5184  002EB4  6ED9               	movwf	fsr2l,c
  5185  002EB6  0E05               	movlw	high _TaskTable
  5186  002EB8  20F4               	addwfc	prodh,w,c
  5187  002EBA  6EDA               	movwf	fsr2h,c
  5188  002EBC  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5189  002EBE  0D08               	mullw	8
  5190  002EC0  0E03               	movlw	3
  5191  002EC2  26F3               	addwf	prodl,f,c
  5192  002EC4  0E00               	movlw	0
  5193  002EC6  22F4               	addwfc	prodh,f,c
  5194  002EC8  0E90               	movlw	low _TaskTable
  5195  002ECA  24F3               	addwf	prodl,w,c
  5196  002ECC  6EE1               	movwf	fsr1l,c
  5197  002ECE  0E05               	movlw	high _TaskTable
  5198  002ED0  20F4               	addwfc	prodh,w,c
  5199  002ED2  6EE2               	movwf	fsr1h,c
  5200  002ED4  50DE               	movf	postinc2,w,c
  5201  002ED6  5CE6               	subwf	postinc1,w,c
  5202  002ED8  50DE               	movf	postinc2,w,c
  5203  002EDA  58E6               	subwfb	postinc1,w,c
  5204  002EDC  A0D8               	btfss	status,0,c
  5205  002EDE  D04E               	goto	l775
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;os_sched.c: 111: {
  5209                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5210  002EE0  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5211  002EE2  0D08               	mullw	8
  5212  002EE4  0E03               	movlw	3
  5213  002EE6  26F3               	addwf	prodl,f,c
  5214  002EE8  0E00               	movlw	0
  5215  002EEA  22F4               	addwfc	prodh,f,c
  5216  002EEC  0E90               	movlw	low _TaskTable
  5217  002EEE  24F3               	addwf	prodl,w,c
  5218  002EF0  6ED9               	movwf	fsr2l,c
  5219  002EF2  0E05               	movlw	high _TaskTable
  5220  002EF4  20F4               	addwfc	prodh,w,c
  5221  002EF6  6EDA               	movwf	fsr2h,c
  5222  002EF8  0E00               	movlw	0
  5223  002EFA  6EDE               	movwf	postinc2,c
  5224  002EFC  0E00               	movlw	0
  5225  002EFE  6EDD               	movwf	postdec2,c
  5226                           
  5227                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5228  002F00  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5229  002F02  0D08               	mullw	8
  5230  002F04  0E02               	movlw	2
  5231  002F06  26F3               	addwf	prodl,f,c
  5232  002F08  0E00               	movlw	0
  5233  002F0A  22F4               	addwfc	prodh,f,c
  5234  002F0C  0E90               	movlw	low _TaskTable
  5235  002F0E  24F3               	addwf	prodl,w,c
  5236  002F10  6ED9               	movwf	fsr2l,c
  5237  002F12  0E05               	movlw	high _TaskTable
  5238  002F14  20F4               	addwfc	prodh,w,c
  5239  002F16  6EDA               	movwf	fsr2h,c
  5240  002F18  0E01               	movlw	1
  5241  002F1A  6EDF               	movwf	indf2,c
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5245  002F1C  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5246  002F1E  0D08               	mullw	8
  5247  002F20  0E90               	movlw	low _TaskTable
  5248  002F22  24F3               	addwf	prodl,w,c
  5249  002F24  6ED9               	movwf	fsr2l,c
  5250  002F26  0E05               	movlw	high _TaskTable
  5251  002F28  20F4               	addwfc	prodh,w,c
  5252  002F2A  6EDA               	movwf	fsr2h,c
  5253  002F2C  D801               	call	u14668
  5254  002F2E  D017               	goto	u14669
  5255  002F30                     u14668:
  5256  002F30  0005               	push	
  5257  002F32  6EFA               	movwf	pclath,c
  5258  002F34  50DE               	movf	postinc2,w,c
  5259  002F36  6EFD               	movwf	tosl,c
  5260  002F38  50DE               	movf	postinc2,w,c
  5261  002F3A  6EFE               	movwf	tosh,c
  5262  002F3C  50F8               	movf	tblptru,w,c
  5263  002F3E  6EFF               	movwf	tosu,c
  5264  002F40  50FA               	movf	pclath,w,c
  5265  002F42  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5266  002F44  0D08               	mullw	8
  5267  002F46  0E07               	movlw	7
  5268  002F48  26F3               	addwf	prodl,f,c
  5269  002F4A  0E00               	movlw	0
  5270  002F4C  22F4               	addwfc	prodh,f,c
  5271  002F4E  0E90               	movlw	low _TaskTable
  5272  002F50  24F3               	addwf	prodl,w,c
  5273  002F52  6ED9               	movwf	fsr2l,c
  5274  002F54  0E05               	movlw	high _TaskTable
  5275  002F56  20F4               	addwfc	prodh,w,c
  5276  002F58  6EDA               	movwf	fsr2h,c
  5277  002F5A  50DF               	movf	indf2,w,c
  5278  002F5C  0012               	return		;indir
  5279  002F5E                     u14669:
  5280                           
  5281                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5282  002F5E  0100               	movlb	0	; () banked
  5283  002F60  51B3               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5284  002F62  0D08               	mullw	8
  5285  002F64  0E02               	movlw	2
  5286  002F66  26F3               	addwf	prodl,f,c
  5287  002F68  0E00               	movlw	0
  5288  002F6A  22F4               	addwfc	prodh,f,c
  5289  002F6C  0E90               	movlw	low _TaskTable
  5290  002F6E  24F3               	addwf	prodl,w,c
  5291  002F70  6ED9               	movwf	fsr2l,c
  5292  002F72  0E05               	movlw	high _TaskTable
  5293  002F74  20F4               	addwfc	prodh,w,c
  5294  002F76  6EDA               	movwf	fsr2h,c
  5295  002F78  0E00               	movlw	0
  5296  002F7A  6EDF               	movwf	indf2,c
  5297  002F7C                     l775:
  5298                           
  5299                           ; BSR set to: 0
  5300                           
  5301                           ; BSR set to: 0
  5302                           
  5303                           ;os_sched.c: 117: else
  5304                           ;os_sched.c: 118: {
  5305                           
  5306                           ; BSR set to: 0
  5307  002F7C  2BB3               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5308  002F7E  D772               	goto	l14943
  5309  002F80                     __end_of_ScheduleTasks:
  5310                           	opt stack 0
  5311                           tosu	equ	0xFFF
  5312                           tosh	equ	0xFFE
  5313                           tosl	equ	0xFFD
  5314                           pclath	equ	0xFFA
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           intcon2	equ	0xFF1
  5323                           intcon3	equ	0xFF0
  5324                           postinc0	equ	0xFEE
  5325                           wreg	equ	0xFE8
  5326                           postinc1	equ	0xFE6
  5327                           postdec1	equ	0xFE5
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _InitializeTasks *****************
  5338 ;; Defined at:
  5339 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  ActiveTaskIn    1  200[BANK2 ] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Totals:         0       2       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;Total ram usage:        3 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:   21
  5360 ;; This function calls:
  5361 ;;		_I2cSlv_MainTask
  5362 ;;		_Led_MainTask
  5363 ;;		_MdmHttp_MainTask
  5364 ;;		_Mdm_DrvMainFn
  5365 ;;		_Mdm_MainTask
  5366 ;;		_MyApp_Task
  5367 ;;		_Rtcm_MainTask
  5368 ;;		_Term_MainTask
  5369 ;;		_UsbDevice_MainTask
  5370 ;;		_Wdg_MainTask
  5371 ;; This function is called by:
  5372 ;;		_Sch_MainScheduler
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text15
  5377  004DA0                     __ptext15:
  5378                           	opt stack 0
  5379  004DA0                     _InitializeTasks:
  5380                           	opt stack 8
  5381                           
  5382                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5383                           
  5384                           ; BSR set to: 4
  5385                           ;incstack = 0
  5386  004DA0  0E00               	movlw	0
  5387  004DA2  0102               	movlb	2	; () banked
  5388  004DA4  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5389                           
  5390                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5391  004DA6  0E00               	movlw	0
  5392  004DA8  6FC8               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5393  004DAA                     l14931:
  5394                           
  5395                           ; BSR set to: 2
  5396  004DAA  0E2F               	movlw	low _TaskNumber
  5397  004DAC  6EF6               	movwf	tblptrl,c
  5398  004DAE                     	if	1	;There is more than 1 active tblptr byte
  5399  004DAE  0EFC               	movlw	high _TaskNumber
  5400  004DB0  6EF7               	movwf	tblptrh,c
  5401  004DB2                     	endif
  5402  004DB2                     	if	0	;There are less than 3 active tblptr bytes
  5403  004DB2                     	endif
  5404  004DB2  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5405  004DB4  0100               	movlb	0	; () banked
  5406  004DB6  6FB3               	movwf	??_InitializeTasks& (0+255),b
  5407  004DB8  6BB4               	clrf	(??_InitializeTasks+1)& (0+255),b
  5408  004DBA  0009               	tblrd		*+
  5409  004DBC  50F5               	movf	tablat,w,c
  5410  004DBE  5DB3               	subwf	??_InitializeTasks& (0+255),w,b
  5411  004DC0  0009               	tblrd		*+
  5412  004DC2  50F5               	movf	tablat,w,c
  5413  004DC4  59B4               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5414  004DC6  B0D8               	btfsc	status,0,c
  5415  004DC8  0012               	return	
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;os_sched.c: 86: {
  5419                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5420                           
  5421                           ; BSR set to: 0
  5422                           
  5423                           ; BSR set to: 0
  5424  004DCA  0102               	movlb	2	; () banked
  5425  004DCC  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5426  004DCE  0D08               	mullw	8
  5427  004DD0  0E90               	movlw	low _TaskTable
  5428  004DD2  24F3               	addwf	prodl,w,c
  5429  004DD4  6ED9               	movwf	fsr2l,c
  5430  004DD6  0E05               	movlw	high _TaskTable
  5431  004DD8  20F4               	addwfc	prodh,w,c
  5432  004DDA  6EDA               	movwf	fsr2h,c
  5433  004DDC  D801               	call	u14628
  5434  004DDE  D017               	goto	u14629
  5435  004DE0                     u14628:
  5436  004DE0  0005               	push	
  5437  004DE2  6EFA               	movwf	pclath,c
  5438  004DE4  50DE               	movf	postinc2,w,c
  5439  004DE6  6EFD               	movwf	tosl,c
  5440  004DE8  50DE               	movf	postinc2,w,c
  5441  004DEA  6EFE               	movwf	tosh,c
  5442  004DEC  50F8               	movf	tblptru,w,c
  5443  004DEE  6EFF               	movwf	tosu,c
  5444  004DF0  50FA               	movf	pclath,w,c
  5445  004DF2  51C8               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5446  004DF4  0D08               	mullw	8
  5447  004DF6  0E07               	movlw	7
  5448  004DF8  26F3               	addwf	prodl,f,c
  5449  004DFA  0E00               	movlw	0
  5450  004DFC  22F4               	addwfc	prodh,f,c
  5451  004DFE  0E90               	movlw	low _TaskTable
  5452  004E00  24F3               	addwf	prodl,w,c
  5453  004E02  6ED9               	movwf	fsr2l,c
  5454  004E04  0E05               	movlw	high _TaskTable
  5455  004E06  20F4               	addwfc	prodh,w,c
  5456  004E08  6EDA               	movwf	fsr2h,c
  5457  004E0A  50DF               	movf	indf2,w,c
  5458  004E0C  0012               	return		;indir
  5459  004E0E                     u14629:
  5460  004E0E  0102               	movlb	2	; () banked
  5461  004E10  2BC8               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5462  004E12  D7CB               	goto	l14931
  5463  004E14                     __end_of_InitializeTasks:
  5464                           	opt stack 0
  5465                           tosu	equ	0xFFF
  5466                           tosh	equ	0xFFE
  5467                           tosl	equ	0xFFD
  5468                           pclath	equ	0xFFA
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           intcon	equ	0xFF2
  5476                           intcon2	equ	0xFF1
  5477                           intcon3	equ	0xFF0
  5478                           postinc0	equ	0xFEE
  5479                           wreg	equ	0xFE8
  5480                           postinc1	equ	0xFE6
  5481                           postdec1	equ	0xFE5
  5482                           fsr1h	equ	0xFE2
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function _MyApp_Task *****************
  5492 ;; Defined at:
  5493 ;;		line 167 in file "../Source/c/04_App/app.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  Options         1    wreg     unsigned char 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  Options         1    0[COMRAM] unsigned char 
  5498 ;;  smsText        50    0[BANK1 ] unsigned char [50]
  5499 ;;  smsNumber      14   64[BANK1 ] unsigned char [14]
  5500 ;;  phone          14   50[BANK1 ] unsigned char [14]
  5501 ;;  cmpString       3   78[BANK1 ] unsigned char [3]
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5512 ;;      Locals:         0       0      81       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5514 ;;      Totals:         0       0      81       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5515 ;;Total ram usage:       81 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:   15
  5518 ;; This function calls:
  5519 ;;		_ClearBuffer
  5520 ;;		_GetCallerNumber
  5521 ;;		_Led_SetLedBlinkTime
  5522 ;;		_Mdm_GetSmsData
  5523 ;;		_Mdm_IsRinging
  5524 ;;		_Mdm_IsSmsReceived
  5525 ;;		_Mdm_RequestSmsData
  5526 ;;		_StringCompare
  5527 ;;		_Uart_WriteConstString
  5528 ;;		_blinkForSeconds
  5529 ;;		_initGprsModem
  5530 ;; This function is called by:
  5531 ;;		_InitializeTasks
  5532 ;;		_ScheduleTasks
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text16
  5537  001EB8                     __ptext16:
  5538                           	opt stack 0
  5539  001EB8                     _MyApp_Task:
  5540                           	opt stack 13
  5541                           
  5542                           ;app.c: 169: UINT8 phone[] = {'+', '3', '9', '3', '2', '0', '0', '2', '7', '6', '3', '1'
      +                          , '8', '\0'};
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;incstack = 0
  5546  001EB8  EE24  F0E2         	lfsr	2,MyApp_Task@F8989
  5547  001EBC  EE11  F032         	lfsr	1,MyApp_Task@phone
  5548  001EC0  0E0D               	movlw	13
  5549  001EC2                     u14531:
  5550  001EC2  CFDB FFE3          	movff	plusw2,plusw1
  5551  001EC6  06E8               	decf	wreg,f,c
  5552  001EC8  E2FC               	bc	u14531
  5553                           
  5554                           ;app.c: 171: static uint16_t blickTicks = 0xFFFF;
  5555                           ;app.c: 172: static uint8_t blinkSeconds = 0;
  5556                           ;app.c: 174: uint8_t smsText[((UINT8)(50))];
  5557                           ;app.c: 175: uint8_t smsNumber[14];
  5558                           ;app.c: 176: uint8_t cmpString[] = {'c', 'a', 't'};
  5559  001ECA  C3CC  F14E         	movff	MyApp_Task@F8996,MyApp_Task@cmpString
  5560  001ECE  C3CD  F14F         	movff	MyApp_Task@F8996+1,MyApp_Task@cmpString+1
  5561  001ED2  C3CE  F150         	movff	MyApp_Task@F8996+2,MyApp_Task@cmpString+2
  5562                           
  5563                           ;app.c: 178: switch (SystemState)
  5564  001ED6  D09F               	goto	l2577
  5565  001ED8                     
  5566                           ;app.c: 183: Led_SetLedBlinkTime(1u,100,900);
  5567  001ED8  0E00               	movlw	0
  5568  001EDA  0100               	movlb	0	; () banked
  5569  001EDC  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5570  001EDE  0E64               	movlw	100
  5571  001EE0  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5572  001EE2  0E03               	movlw	3
  5573  001EE4  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5574  001EE6  0E84               	movlw	132
  5575  001EE8  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5576  001EEA  0E01               	movlw	1
  5577  001EEC  EC0F  F02A         	call	_Led_SetLedBlinkTime
  5578                           
  5579                           ;app.c: 184: break;
  5580  001EF0  0012               	return	
  5581  001EF2                     
  5582                           ;app.c: 188: if (initGprsModem())
  5583  001EF2  EC34  F023         	call	_initGprsModem	;wreg free
  5584  001EF6  0900               	iorlw	0
  5585  001EF8  B4D8               	btfsc	status,2,c
  5586  001EFA  0012               	return	
  5587                           
  5588                           ;app.c: 189: {
  5589                           ;app.c: 191: if (Mdm_IsRinging())
  5590  001EFC  EC5D  F02F         	call	_Mdm_IsRinging	;wreg free
  5591  001F00  0900               	iorlw	0
  5592  001F02  B4D8               	btfsc	status,2,c
  5593  001F04  D01D               	goto	l2583
  5594                           
  5595                           ;app.c: 192: {
  5596                           ;app.c: 193: blickTicks = 0;
  5597  001F06  0E00               	movlw	0
  5598  001F08  0103               	movlb	3	; () banked
  5599  001F0A  6FFE               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5600  001F0C  0E00               	movlw	0
  5601  001F0E  6FFD               	movwf	MyApp_Task@blickTicks& (0+255),b
  5602                           
  5603                           ; BSR set to: 3
  5604                           ;app.c: 194: if (StringCompare(phone, GetCallerNumber(), 14))
  5605  001F10  0E32               	movlw	low MyApp_Task@phone
  5606  001F12  0100               	movlb	0	; () banked
  5607  001F14  6F85               	movwf	StringCompare@String1& (0+255),b
  5608  001F16  0E01               	movlw	high MyApp_Task@phone
  5609  001F18  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5610  001F1A  ECC2  F02D         	call	_GetCallerNumber	;wreg free
  5611  001F1E  C083  F087         	movff	?_GetCallerNumber,StringCompare@String2
  5612  001F22  C084  F088         	movff	?_GetCallerNumber+1,StringCompare@String2+1
  5613  001F26  0E00               	movlw	0
  5614  001F28  0100               	movlb	0	; () banked
  5615  001F2A  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5616  001F2C  0E0E               	movlw	14
  5617  001F2E  6F89               	movwf	StringCompare@Len& (0+255),b
  5618  001F30  EC63  F02A         	call	_StringCompare	;wreg free
  5619  001F34  0900               	iorlw	0
  5620  001F36  B4D8               	btfsc	status,2,c
  5621  001F38  D003               	goto	l2583
  5622                           
  5623                           ;app.c: 195: {
  5624                           ;app.c: 196: blinkSeconds = 5;
  5625  001F3A  0E05               	movlw	5
  5626  001F3C  0101               	movlb	1	; () banked
  5627  001F3E  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5628  001F40                     l2583:
  5629                           
  5630                           ;app.c: 197: }
  5631                           ;app.c: 198: }
  5632                           ;app.c: 199: if (Mdm_IsSmsReceived())
  5633                           
  5634                           ; BSR set to: 1
  5635                           
  5636                           ; BSR set to: 1
  5637  001F40  EC4B  F02F         	call	_Mdm_IsSmsReceived	;wreg free
  5638  001F44  0900               	iorlw	0
  5639  001F46  A4D8               	btfss	status,2,c
  5640                           
  5641                           ;app.c: 200: {
  5642                           ;app.c: 201: Mdm_RequestSmsData();
  5643  001F48  ECE3  F030         	call	_Mdm_RequestSmsData	;wreg free
  5644                           
  5645                           ;app.c: 202: }
  5646                           ;app.c: 203: if (Mdm_GetSmsData(smsText, smsNumber) == SmsDataReady)
  5647  001F4C  0E00               	movlw	low MyApp_Task@smsText
  5648  001F4E  0100               	movlb	0	; () banked
  5649  001F50  6F87               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5650  001F52  0E01               	movlw	high MyApp_Task@smsText
  5651  001F54  6F88               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5652  001F56  0E40               	movlw	low MyApp_Task@smsNumber
  5653  001F58  6F89               	movwf	Mdm_GetSmsData@MessageHeader& (0+255),b
  5654  001F5A  0E01               	movlw	high MyApp_Task@smsNumber
  5655  001F5C  6F8A               	movwf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),b
  5656  001F5E  EC94  F026         	call	_Mdm_GetSmsData	;wreg free
  5657  001F62  06E8               	decf	wreg,f,c
  5658  001F64  A4D8               	btfss	status,2,c
  5659  001F66  D04D               	goto	l2585
  5660                           
  5661                           ;app.c: 204: {
  5662                           ;app.c: 205: blickTicks = 0;
  5663  001F68  0E00               	movlw	0
  5664  001F6A  0103               	movlb	3	; () banked
  5665  001F6C  6FFE               	movwf	(MyApp_Task@blickTicks+1)& (0+255),b
  5666  001F6E  0E00               	movlw	0
  5667  001F70  6FFD               	movwf	MyApp_Task@blickTicks& (0+255),b
  5668                           
  5669                           ;app.c: 206: blinkSeconds = 3;
  5670  001F72  0E03               	movlw	3
  5671  001F74  0101               	movlb	1	; () banked
  5672  001F76  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5673                           
  5674                           ; BSR set to: 1
  5675                           ;app.c: 207: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5676  001F78  0E2E               	movlw	low STR_31
  5677  001F7A  0100               	movlb	0	; () banked
  5678  001F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5679  001F7E  0EFF               	movlw	high STR_31
  5680  001F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5681  001F82  0E01               	movlw	1
  5682  001F84  EC6D  F02C         	call	_Uart_WriteConstString
  5683                           
  5684                           ;app.c: 209: if (StringCompare(smsNumber, phone, 14))
  5685  001F88  0E40               	movlw	low MyApp_Task@smsNumber
  5686  001F8A  0100               	movlb	0	; () banked
  5687  001F8C  6F85               	movwf	StringCompare@String1& (0+255),b
  5688  001F8E  0E01               	movlw	high MyApp_Task@smsNumber
  5689  001F90  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5690  001F92  0E32               	movlw	low MyApp_Task@phone
  5691  001F94  6F87               	movwf	StringCompare@String2& (0+255),b
  5692  001F96  0E01               	movlw	high MyApp_Task@phone
  5693  001F98  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
  5694  001F9A  0E00               	movlw	0
  5695  001F9C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5696  001F9E  0E0E               	movlw	14
  5697  001FA0  6F89               	movwf	StringCompare@Len& (0+255),b
  5698  001FA2  EC63  F02A         	call	_StringCompare	;wreg free
  5699  001FA6  0900               	iorlw	0
  5700  001FA8  B4D8               	btfsc	status,2,c
  5701  001FAA  D015               	goto	l2587
  5702                           
  5703                           ;app.c: 210: {
  5704                           ;app.c: 211: if (StringCompare(smsText, cmpString, sizeof(cmpString)))
  5705  001FAC  0E00               	movlw	low MyApp_Task@smsText
  5706  001FAE  0100               	movlb	0	; () banked
  5707  001FB0  6F85               	movwf	StringCompare@String1& (0+255),b
  5708  001FB2  0E01               	movlw	high MyApp_Task@smsText
  5709  001FB4  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5710  001FB6  0E4E               	movlw	low MyApp_Task@cmpString
  5711  001FB8  6F87               	movwf	StringCompare@String2& (0+255),b
  5712  001FBA  0E01               	movlw	high MyApp_Task@cmpString
  5713  001FBC  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
  5714  001FBE  0E00               	movlw	0
  5715  001FC0  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5716  001FC2  0E03               	movlw	3
  5717  001FC4  6F89               	movwf	StringCompare@Len& (0+255),b
  5718  001FC6  EC63  F02A         	call	_StringCompare	;wreg free
  5719  001FCA  0900               	iorlw	0
  5720  001FCC  B4D8               	btfsc	status,2,c
  5721  001FCE  D003               	goto	l2587
  5722                           
  5723                           ;app.c: 212: {
  5724                           ;app.c: 213: blinkSeconds = 6;
  5725  001FD0  0E06               	movlw	6
  5726  001FD2  0101               	movlb	1	; () banked
  5727  001FD4  6FD3               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5728  001FD6                     l2587:
  5729                           
  5730                           ;app.c: 214: }
  5731                           ;app.c: 215: }
  5732                           ;app.c: 216: ClearBuffer(smsText, sizeof(smsText));
  5733                           
  5734                           ; BSR set to: 1
  5735                           
  5736                           ; BSR set to: 1
  5737  001FD6  0E00               	movlw	low MyApp_Task@smsText
  5738  001FD8  0100               	movlb	0	; () banked
  5739  001FDA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5740  001FDC  0E01               	movlw	high MyApp_Task@smsText
  5741  001FDE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5742  001FE0  0E00               	movlw	0
  5743  001FE2  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5744  001FE4  0E32               	movlw	50
  5745  001FE6  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5746  001FE8  ECDD  F02D         	call	_ClearBuffer	;wreg free
  5747                           
  5748                           ;app.c: 217: ClearBuffer(smsNumber, 14);
  5749  001FEC  0E40               	movlw	low MyApp_Task@smsNumber
  5750  001FEE  0100               	movlb	0	; () banked
  5751  001FF0  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5752  001FF2  0E01               	movlw	high MyApp_Task@smsNumber
  5753  001FF4  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5754  001FF6  0E00               	movlw	0
  5755  001FF8  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5756  001FFA  0E0E               	movlw	14
  5757  001FFC  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5758  001FFE  ECDD  F02D         	call	_ClearBuffer	;wreg free
  5759  002002                     l2585:
  5760                           
  5761                           ;app.c: 218: }
  5762                           ;app.c: 219: blinkForSeconds(blinkSeconds, &blickTicks);
  5763  002002  0EFD               	movlw	low MyApp_Task@blickTicks
  5764  002004  0100               	movlb	0	; () banked
  5765  002006  6F93               	movwf	blinkForSeconds@blickTicks& (0+255),b
  5766  002008  0E03               	movlw	high MyApp_Task@blickTicks
  5767  00200A  6F94               	movwf	(blinkForSeconds@blickTicks+1)& (0+255),b
  5768  00200C  0101               	movlb	1	; () banked
  5769  00200E  51D3               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5770  002010  EC88  F02D         	call	_blinkForSeconds
  5771                           
  5772                           ;app.c: 226: }
  5773                           
  5774                           ;app.c: 225: break;
  5775                           
  5776                           ;app.c: 224: default:
  5777                           
  5778                           ;app.c: 220: }
  5779                           ;app.c: 221: break;
  5780  002014  0012               	return	
  5781  002016                     l2577:
  5782  002016  0100               	movlb	0	; () banked
  5783  002018  51D6               	movf	_SystemState& (0+255),w,b
  5784                           
  5785                           ; Switch size 1, requested type "space"
  5786                           ; Number of cases is 2, Range of values is 0 to 1
  5787                           ; switch strategies available:
  5788                           ; Name         Instructions Cycles
  5789                           ; simple_byte            7     4 (average)
  5790                           ;	Chosen strategy is simple_byte
  5791  00201A  0A00               	xorlw	0	; case 0
  5792  00201C  B4D8               	btfsc	status,2,c
  5793  00201E  D75C               	goto	l2578
  5794  002020  0A01               	xorlw	1	; case 1
  5795  002022  A4D8               	btfss	status,2,c
  5796  002024  0012               	return	
  5797  002026  D765               	goto	l2580
  5798  002028                     __end_of_MyApp_Task:
  5799                           	opt stack 0
  5800                           tosu	equ	0xFFF
  5801                           tosh	equ	0xFFE
  5802                           tosl	equ	0xFFD
  5803                           pclath	equ	0xFFA
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           intcon	equ	0xFF2
  5811                           intcon2	equ	0xFF1
  5812                           intcon3	equ	0xFF0
  5813                           postinc0	equ	0xFEE
  5814                           wreg	equ	0xFE8
  5815                           postinc1	equ	0xFE6
  5816                           postdec1	equ	0xFE5
  5817                           plusw1	equ	0xFE3
  5818                           fsr1h	equ	0xFE2
  5819                           fsr1l	equ	0xFE1
  5820                           indf2	equ	0xFDF
  5821                           postinc2	equ	0xFDE
  5822                           postdec2	equ	0xFDD
  5823                           plusw2	equ	0xFDB
  5824                           fsr2h	equ	0xFDA
  5825                           fsr2l	equ	0xFD9
  5826                           status	equ	0xFD8
  5827                           
  5828 ;; *************** function _Term_MainTask *****************
  5829 ;; Defined at:
  5830 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  Options         1    wreg     unsigned char 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  Options         1    0[COMRAM] unsigned char 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      void 
  5837 ;; Registers used:
  5838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5848 ;;Total ram usage:        0 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:   17
  5851 ;; This function calls:
  5852 ;;		_Term_MainSm
  5853 ;; This function is called by:
  5854 ;;		_InitializeTasks
  5855 ;;		_ScheduleTasks
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text17
  5860  00609C                     __ptext17:
  5861                           	opt stack 0
  5862  00609C                     _Term_MainTask:
  5863                           	opt stack 11
  5864                           
  5865                           ;term.c: 847: switch (SystemState)
  5866                           
  5867                           ;incstack = 0
  5868  00609C  D003               	goto	l2452
  5869  00609E                     
  5870                           ;term.c: 858: Term_MainSm();
  5871  00609E  EC5B  F008         	call	_Term_MainSm	;wreg free
  5872                           
  5873                           ;term.c: 865: }
  5874                           
  5875                           ;term.c: 864: break;
  5876                           
  5877                           ;term.c: 863: default:
  5878                           
  5879                           ;term.c: 860: break;
  5880  0060A2  0012               	return	
  5881  0060A4                     l2452:
  5882  0060A4  0100               	movlb	0	; () banked
  5883  0060A6  51D6               	movf	_SystemState& (0+255),w,b
  5884                           
  5885                           ; Switch size 1, requested type "space"
  5886                           ; Number of cases is 2, Range of values is 0 to 1
  5887                           ; switch strategies available:
  5888                           ; Name         Instructions Cycles
  5889                           ; simple_byte            7     4 (average)
  5890                           ;	Chosen strategy is simple_byte
  5891  0060A8  0A00               	xorlw	0	; case 0
  5892  0060AA  B4D8               	btfsc	status,2,c
  5893  0060AC  0012               	return	
  5894  0060AE  0A01               	xorlw	1	; case 1
  5895  0060B0  A4D8               	btfss	status,2,c
  5896  0060B2  0012               	return	
  5897  0060B4  D7F4               	goto	l2455
  5898  0060B6                     __end_of_Term_MainTask:
  5899                           	opt stack 0
  5900                           tosu	equ	0xFFF
  5901                           tosh	equ	0xFFE
  5902                           tosl	equ	0xFFD
  5903                           pclath	equ	0xFFA
  5904                           tblptru	equ	0xFF8
  5905                           tblptrh	equ	0xFF7
  5906                           tblptrl	equ	0xFF6
  5907                           tablat	equ	0xFF5
  5908                           prodh	equ	0xFF4
  5909                           prodl	equ	0xFF3
  5910                           intcon	equ	0xFF2
  5911                           intcon2	equ	0xFF1
  5912                           intcon3	equ	0xFF0
  5913                           postinc0	equ	0xFEE
  5914                           wreg	equ	0xFE8
  5915                           postinc1	equ	0xFE6
  5916                           postdec1	equ	0xFE5
  5917                           plusw1	equ	0xFE3
  5918                           fsr1h	equ	0xFE2
  5919                           fsr1l	equ	0xFE1
  5920                           indf2	equ	0xFDF
  5921                           postinc2	equ	0xFDE
  5922                           postdec2	equ	0xFDD
  5923                           plusw2	equ	0xFDB
  5924                           fsr2h	equ	0xFDA
  5925                           fsr2l	equ	0xFD9
  5926                           status	equ	0xFD8
  5927                           
  5928 ;; *************** function _Rtcm_MainTask *****************
  5929 ;; Defined at:
  5930 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  Options         1    wreg     unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  Options         1    0[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5948 ;;Total ram usage:        0 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:   14
  5951 ;; This function calls:
  5952 ;;		_Rtcc_AlarmConfig
  5953 ;;		_Rtcc_LockRtc
  5954 ;;		_Rtcc_RtcConfig
  5955 ;;		_Rtcc_SetRtcStatus
  5956 ;;		_Rtcc_UnlockRtc
  5957 ;;		_Rtcm_GetRtccDate
  5958 ;;		_Rtcm_SetRtccDate
  5959 ;; This function is called by:
  5960 ;;		_InitializeTasks
  5961 ;;		_ScheduleTasks
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text18
  5966  004A82                     __ptext18:
  5967                           	opt stack 0
  5968  004A82                     _Rtcm_MainTask:
  5969                           	opt stack 14
  5970                           
  5971                           ;rtcm.c: 101: switch (SystemState)
  5972                           
  5973                           ;incstack = 0
  5974  004A82  D03D               	goto	l2182
  5975  004A84                     l2183:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5979  004A84  86CD               	bsf	4045,3,c	;volatile
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5983  004A86  0E00               	movlw	0
  5984  004A88  0103               	movlb	3	; () banked
  5985  004A8A  6FB8               	movwf	_RtcConfig& (0+255),b
  5986                           
  5987                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5988  004A8C  0E00               	movlw	0
  5989  004A8E  6FB9               	movwf	(_RtcConfig+1)& (0+255),b
  5990                           
  5991                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5992  004A90  0E01               	movlw	1
  5993  004A92  6FBA               	movwf	(_RtcConfig+2)& (0+255),b
  5994                           
  5995                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5996  004A94  0E01               	movlw	1
  5997  004A96  6FBB               	movwf	(_RtcConfig+3)& (0+255),b
  5998                           
  5999                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6000  004A98  0E01               	movlw	1
  6001  004A9A  6FB4               	movwf	_AlCfg& (0+255),b
  6002                           
  6003                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6004  004A9C  0E01               	movlw	1
  6005  004A9E  6FB5               	movwf	(_AlCfg+1)& (0+255),b
  6006                           
  6007                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6008  004AA0  0E01               	movlw	1
  6009  004AA2  6FB6               	movwf	(_AlCfg+2)& (0+255),b
  6010                           
  6011                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6012  004AA4  0E00               	movlw	0
  6013  004AA6  6FB7               	movwf	(_AlCfg+3)& (0+255),b
  6014                           
  6015                           ; BSR set to: 3
  6016                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6017  004AA8  ECD3  F030         	call	_Rtcc_UnlockRtc	;wreg free
  6018                           
  6019                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6020  004AAC  0EB8               	movlw	low _RtcConfig
  6021  004AAE  0100               	movlb	0	; () banked
  6022  004AB0  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6023  004AB2  0E03               	movlw	high _RtcConfig
  6024  004AB4  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6025  004AB6  EC95  F022         	call	_Rtcc_RtcConfig	;wreg free
  6026                           
  6027                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6028  004ABA  0EB4               	movlw	low _AlCfg
  6029  004ABC  0100               	movlb	0	; () banked
  6030  004ABE  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6031  004AC0  0E03               	movlw	high _AlCfg
  6032  004AC2  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6033  004AC4  ECB2  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6034                           
  6035                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6036  004AC8  0E01               	movlw	1
  6037  004ACA  EC8B  F030         	call	_Rtcc_SetRtcStatus
  6038                           
  6039                           ;rtcm.c: 127: Rtcc_LockRtc();
  6040  004ACE  ECDB  F030         	call	_Rtcc_LockRtc	;wreg free
  6041                           
  6042                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6043  004AD2  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6044  004AD6  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6045  004ADA  0E07               	movlw	7
  6046  004ADC                     u14511:
  6047  004ADC  CFDB FFEB          	movff	plusw2,plusw0
  6048  004AE0  06E8               	decf	wreg,f,c
  6049  004AE2  E2FC               	bc	u14511
  6050  004AE4  ECE5  F029         	call	_Rtcm_SetRtccDate	;wreg free
  6051                           
  6052                           ;rtcm.c: 154: break;
  6053  004AE8  0012               	return	
  6054  004AEA                     
  6055                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6056  004AEA  EC1B  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6057  004AEE  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6058  004AF2  0E07               	movlw	7
  6059  004AF4                     u14521:
  6060  004AF4  CFEB FFDB          	movff	plusw0,plusw2
  6061  004AF8  06E8               	decf	wreg,f,c
  6062  004AFA  E2FC               	bc	u14521
  6063                           
  6064                           ;rtcm.c: 165: }
  6065                           
  6066                           ;rtcm.c: 164: break;
  6067                           
  6068                           ;rtcm.c: 163: default:
  6069                           
  6070                           ;rtcm.c: 160: break;
  6071  004AFC  0012               	return	
  6072  004AFE                     l2182:
  6073  004AFE  0100               	movlb	0	; () banked
  6074  004B00  51D6               	movf	_SystemState& (0+255),w,b
  6075                           
  6076                           ; Switch size 1, requested type "space"
  6077                           ; Number of cases is 2, Range of values is 0 to 1
  6078                           ; switch strategies available:
  6079                           ; Name         Instructions Cycles
  6080                           ; simple_byte            7     4 (average)
  6081                           ;	Chosen strategy is simple_byte
  6082  004B02  0A00               	xorlw	0	; case 0
  6083  004B04  B4D8               	btfsc	status,2,c
  6084  004B06  D7BE               	goto	l2183
  6085  004B08  0A01               	xorlw	1	; case 1
  6086  004B0A  A4D8               	btfss	status,2,c
  6087  004B0C  0012               	return	
  6088  004B0E  D7ED               	goto	l2185
  6089  004B10                     __end_of_Rtcm_MainTask:
  6090                           	opt stack 0
  6091                           tosu	equ	0xFFF
  6092                           tosh	equ	0xFFE
  6093                           tosl	equ	0xFFD
  6094                           pclath	equ	0xFFA
  6095                           tblptru	equ	0xFF8
  6096                           tblptrh	equ	0xFF7
  6097                           tblptrl	equ	0xFF6
  6098                           tablat	equ	0xFF5
  6099                           prodh	equ	0xFF4
  6100                           prodl	equ	0xFF3
  6101                           intcon	equ	0xFF2
  6102                           intcon2	equ	0xFF1
  6103                           intcon3	equ	0xFF0
  6104                           postinc0	equ	0xFEE
  6105                           plusw0	equ	0xFEB
  6106                           wreg	equ	0xFE8
  6107                           postinc1	equ	0xFE6
  6108                           postdec1	equ	0xFE5
  6109                           plusw1	equ	0xFE3
  6110                           fsr1h	equ	0xFE2
  6111                           fsr1l	equ	0xFE1
  6112                           indf2	equ	0xFDF
  6113                           postinc2	equ	0xFDE
  6114                           postdec2	equ	0xFDD
  6115                           plusw2	equ	0xFDB
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _Led_MainTask *****************
  6121 ;; Defined at:
  6122 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  Options         1    wreg     unsigned char 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  Options         1    0[COMRAM] unsigned char 
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6140 ;;Total ram usage:        1 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; Hardware stack levels required when called:   14
  6143 ;; This function calls:
  6144 ;;		_LedStateMachine
  6145 ;; This function is called by:
  6146 ;;		_InitializeTasks
  6147 ;;		_ScheduleTasks
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text19
  6152  003982                     __ptext19:
  6153                           	opt stack 0
  6154  003982                     _Led_MainTask:
  6155                           	opt stack 14
  6156                           
  6157                           ;led.c: 300: switch (SystemState)
  6158                           
  6159                           ;incstack = 0
  6160  003982  D05C               	goto	l2096
  6161  003984                     l2097:
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6165  003984  9895               	bcf	3989,4,c	;volatile
  6166                           
  6167                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6168  003986  9A95               	bcf	3989,5,c	;volatile
  6169                           
  6170                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6171  003988  9C95               	bcf	3989,6,c	;volatile
  6172                           
  6173                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6174  00398A  9883               	bcf	3971,4,c	;volatile
  6175                           
  6176                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6177  00398C  9A83               	bcf	3971,5,c	;volatile
  6178                           
  6179                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6180  00398E  9C83               	bcf	3971,6,c	;volatile
  6181                           
  6182                           ;led.c: 311: break;
  6183  003990  0012               	return	
  6184  003992                     
  6185                           ; BSR set to: 0
  6186                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6187                           
  6188                           ; BSR set to: 0
  6189  003992  0EFC               	movlw	low _Led1Sts
  6190  003994  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6191  003996  0E01               	movlw	high _Led1Sts
  6192  003998  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6193  00399A  0EFB               	movlw	low _Led1OutSts
  6194  00399C  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6195  00399E  0E01               	movlw	high _Led1OutSts
  6196  0039A0  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6197  0039A2  0E72               	movlw	low _Led1Blink
  6198  0039A4  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6199  0039A6  0E03               	movlw	high _Led1Blink
  6200  0039A8  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6201  0039AA  0E96               	movlw	low _Led1Pulse
  6202  0039AC  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6203  0039AE  0E03               	movlw	high _Led1Pulse
  6204  0039B0  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6205  0039B2  0E01               	movlw	1
  6206  0039B4  ECF0  F021         	call	_LedStateMachine
  6207  0039B8  0100               	movlb	0	; () banked
  6208  0039BA  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6209  0039BC  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6210  0039BE  5083               	movf	3971,w,c	;volatile
  6211  0039C0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6212  0039C2  0BEF               	andlw	-17
  6213  0039C4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6214  0039C6  6E83               	movwf	3971,c	;volatile
  6215                           
  6216                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6217  0039C8  0EFA               	movlw	low _Led2Sts
  6218  0039CA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6219  0039CC  0E01               	movlw	high _Led2Sts
  6220  0039CE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6221  0039D0  0EF9               	movlw	low _Led2OutSts
  6222  0039D2  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6223  0039D4  0E01               	movlw	high _Led2OutSts
  6224  0039D6  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6225  0039D8  0E69               	movlw	low _Led2Blink
  6226  0039DA  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6227  0039DC  0E03               	movlw	high _Led2Blink
  6228  0039DE  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6229  0039E0  0E90               	movlw	low _Led2Pulse
  6230  0039E2  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6231  0039E4  0E03               	movlw	high _Led2Pulse
  6232  0039E6  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6233  0039E8  0E02               	movlw	2
  6234  0039EA  ECF0  F021         	call	_LedStateMachine
  6235  0039EE  0100               	movlb	0	; () banked
  6236  0039F0  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6237  0039F2  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6238  0039F4  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6239  0039F6  5083               	movf	3971,w,c	;volatile
  6240  0039F8  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6241  0039FA  0BDF               	andlw	-33
  6242  0039FC  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6243  0039FE  6E83               	movwf	3971,c	;volatile
  6244                           
  6245                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6246  003A00  0EF8               	movlw	low _Led3Sts
  6247  003A02  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6248  003A04  0E01               	movlw	high _Led3Sts
  6249  003A06  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6250  003A08  0EF7               	movlw	low _Led3OutSts
  6251  003A0A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6252  003A0C  0E01               	movlw	high _Led3OutSts
  6253  003A0E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6254  003A10  0E60               	movlw	low _Led3Blink
  6255  003A12  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6256  003A14  0E03               	movlw	high _Led3Blink
  6257  003A16  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6258  003A18  0E8A               	movlw	low _Led3Pulse
  6259  003A1A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6260  003A1C  0E03               	movlw	high _Led3Pulse
  6261  003A1E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6262  003A20  0E03               	movlw	3
  6263  003A22  ECF0  F021         	call	_LedStateMachine
  6264  003A26  0100               	movlb	0	; () banked
  6265  003A28  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6266  003A2A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6267  003A2C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6268  003A2E  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6269  003A30  5083               	movf	3971,w,c	;volatile
  6270  003A32  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6271  003A34  0BBF               	andlw	-65
  6272  003A36  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6273  003A38  6E83               	movwf	3971,c	;volatile
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;led.c: 326: }
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;led.c: 325: break;
  6280                           
  6281                           ;led.c: 324: default:
  6282                           
  6283                           ;led.c: 321: break;
  6284  003A3A  0012               	return	
  6285  003A3C                     l2096:
  6286                           
  6287                           ; BSR set to: 0
  6288  003A3C  0100               	movlb	0	; () banked
  6289  003A3E  51D6               	movf	_SystemState& (0+255),w,b
  6290                           
  6291                           ; Switch size 1, requested type "space"
  6292                           ; Number of cases is 2, Range of values is 0 to 1
  6293                           ; switch strategies available:
  6294                           ; Name         Instructions Cycles
  6295                           ; simple_byte            7     4 (average)
  6296                           ;	Chosen strategy is simple_byte
  6297  003A40  0A00               	xorlw	0	; case 0
  6298  003A42  B4D8               	btfsc	status,2,c
  6299  003A44  D79F               	goto	l2097
  6300  003A46  0A01               	xorlw	1	; case 1
  6301  003A48  A4D8               	btfss	status,2,c
  6302  003A4A  0012               	return	
  6303  003A4C  D7A2               	goto	l2099
  6304  003A4E                     __end_of_Led_MainTask:
  6305                           	opt stack 0
  6306                           tosu	equ	0xFFF
  6307                           tosh	equ	0xFFE
  6308                           tosl	equ	0xFFD
  6309                           pclath	equ	0xFFA
  6310                           tblptru	equ	0xFF8
  6311                           tblptrh	equ	0xFF7
  6312                           tblptrl	equ	0xFF6
  6313                           tablat	equ	0xFF5
  6314                           prodh	equ	0xFF4
  6315                           prodl	equ	0xFF3
  6316                           intcon	equ	0xFF2
  6317                           intcon2	equ	0xFF1
  6318                           intcon3	equ	0xFF0
  6319                           postinc0	equ	0xFEE
  6320                           plusw0	equ	0xFEB
  6321                           wreg	equ	0xFE8
  6322                           postinc1	equ	0xFE6
  6323                           postdec1	equ	0xFE5
  6324                           plusw1	equ	0xFE3
  6325                           fsr1h	equ	0xFE2
  6326                           fsr1l	equ	0xFE1
  6327                           indf2	equ	0xFDF
  6328                           postinc2	equ	0xFDE
  6329                           postdec2	equ	0xFDD
  6330                           plusw2	equ	0xFDB
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _UsbDevice_MainTask *****************
  6336 ;; Defined at:
  6337 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  Options         1    wreg     unsigned char 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  Options         1    0[COMRAM] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   20
  6358 ;; This function calls:
  6359 ;;		_CDCTxService
  6360 ;;		_USBDeviceInit
  6361 ;;		_USBDeviceTasks
  6362 ;; This function is called by:
  6363 ;;		_InitializeTasks
  6364 ;;		_ScheduleTasks
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text20
  6369  005E72                     __ptext20:
  6370                           	opt stack 0
  6371  005E72                     _UsbDevice_MainTask:
  6372                           	opt stack 8
  6373                           
  6374                           ;usb_device_mgr.c: 74: switch (SystemState)
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;incstack = 0
  6378  005E72  D008               	goto	l1989
  6379  005E74                     
  6380                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6381  005E74  ECD5  F012         	call	_USBDeviceInit	;wreg free
  6382                           
  6383                           ;usb_device_mgr.c: 80: ;
  6384                           ;usb_device_mgr.c: 81: break;
  6385  005E78  0012               	return	
  6386  005E7A                     
  6387                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6388  005E7A  EC99  F00E         	call	_USBDeviceTasks	;wreg free
  6389                           
  6390                           ;usb_device_mgr.c: 90: CDCTxService();
  6391  005E7E  EC22  F014         	call	_CDCTxService	;wreg free
  6392                           
  6393                           ;usb_device_mgr.c: 101: }
  6394                           
  6395                           ;usb_device_mgr.c: 100: break;
  6396                           
  6397                           ;usb_device_mgr.c: 99: default:
  6398                           
  6399                           ;usb_device_mgr.c: 96: break;
  6400  005E82  0012               	return	
  6401  005E84                     l1989:
  6402  005E84  0100               	movlb	0	; () banked
  6403  005E86  51D6               	movf	_SystemState& (0+255),w,b
  6404                           
  6405                           ; Switch size 1, requested type "space"
  6406                           ; Number of cases is 2, Range of values is 0 to 1
  6407                           ; switch strategies available:
  6408                           ; Name         Instructions Cycles
  6409                           ; simple_byte            7     4 (average)
  6410                           ;	Chosen strategy is simple_byte
  6411  005E88  0A00               	xorlw	0	; case 0
  6412  005E8A  B4D8               	btfsc	status,2,c
  6413  005E8C  D7F3               	goto	l1990
  6414  005E8E  0A01               	xorlw	1	; case 1
  6415  005E90  A4D8               	btfss	status,2,c
  6416  005E92  0012               	return	
  6417  005E94  D7F2               	goto	l1992
  6418  005E96                     __end_of_UsbDevice_MainTask:
  6419                           	opt stack 0
  6420                           tosu	equ	0xFFF
  6421                           tosh	equ	0xFFE
  6422                           tosl	equ	0xFFD
  6423                           pclath	equ	0xFFA
  6424                           tblptru	equ	0xFF8
  6425                           tblptrh	equ	0xFF7
  6426                           tblptrl	equ	0xFF6
  6427                           tablat	equ	0xFF5
  6428                           prodh	equ	0xFF4
  6429                           prodl	equ	0xFF3
  6430                           intcon	equ	0xFF2
  6431                           intcon2	equ	0xFF1
  6432                           intcon3	equ	0xFF0
  6433                           postinc0	equ	0xFEE
  6434                           plusw0	equ	0xFEB
  6435                           wreg	equ	0xFE8
  6436                           postinc1	equ	0xFE6
  6437                           postdec1	equ	0xFE5
  6438                           plusw1	equ	0xFE3
  6439                           fsr1h	equ	0xFE2
  6440                           fsr1l	equ	0xFE1
  6441                           indf2	equ	0xFDF
  6442                           postinc2	equ	0xFDE
  6443                           postdec2	equ	0xFDD
  6444                           plusw2	equ	0xFDB
  6445                           fsr2h	equ	0xFDA
  6446                           fsr2l	equ	0xFD9
  6447                           status	equ	0xFD8
  6448                           
  6449 ;; *************** function _MdmHttp_MainTask *****************
  6450 ;; Defined at:
  6451 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  Options         1    wreg     unsigned char 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  Options         1    0[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:   15
  6472 ;; This function calls:
  6473 ;;		_HttpGetMethod
  6474 ;;		_InitGprsNetwork
  6475 ;; This function is called by:
  6476 ;;		_InitializeTasks
  6477 ;;		_ScheduleTasks
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text21
  6482  005784                     __ptext21:
  6483                           	opt stack 0
  6484  005784                     _MdmHttp_MainTask:
  6485                           	opt stack 13
  6486                           
  6487                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6488                           
  6489                           ;incstack = 0
  6490  005784  D019               	goto	l1288
  6491  005786                     
  6492                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6493  005786  0E03               	movlw	3
  6494  005788  0100               	movlb	0	; () banked
  6495  00578A  19D3               	xorwf	_MdmStatus& (0+255),w,b
  6496  00578C  A4D8               	btfss	status,2,c
  6497  00578E  0012               	return	
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;mdm_gsm_gprs_http.c: 570: {
  6501                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6502  005790  C324  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6503  005794  C325  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6504  005798  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6505  00579C  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6506  0057A0  0101               	movlb	1	; () banked
  6507  0057A2  6FED               	movwf	_GprsNetworkSts& (0+255),b
  6508                           
  6509                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6510  0057A4  0EA7               	movlw	low _HttpGetDataLocal
  6511  0057A6  0100               	movlb	0	; () banked
  6512  0057A8  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6513  0057AA  0E03               	movlw	high _HttpGetDataLocal
  6514  0057AC  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6515  0057AE  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6516  0057B2  0101               	movlb	1	; () banked
  6517  0057B4  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  6518                           
  6519                           ; BSR set to: 1
  6520                           ;mdm_gsm_gprs_http.c: 581: }
  6521                           
  6522                           ; BSR set to: 1
  6523                           ;mdm_gsm_gprs_http.c: 580: break;
  6524                           
  6525                           ;mdm_gsm_gprs_http.c: 579: default:
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;mdm_gsm_gprs_http.c: 575: }
  6529                           ;mdm_gsm_gprs_http.c: 576: break;
  6530  0057B6  0012               	return	
  6531  0057B8                     l1288:
  6532                           
  6533                           ; BSR set to: 1
  6534  0057B8  0100               	movlb	0	; () banked
  6535  0057BA  51D6               	movf	_SystemState& (0+255),w,b
  6536                           
  6537                           ; Switch size 1, requested type "space"
  6538                           ; Number of cases is 2, Range of values is 0 to 1
  6539                           ; switch strategies available:
  6540                           ; Name         Instructions Cycles
  6541                           ; simple_byte            7     4 (average)
  6542                           ;	Chosen strategy is simple_byte
  6543  0057BC  0A00               	xorlw	0	; case 0
  6544  0057BE  B4D8               	btfsc	status,2,c
  6545  0057C0  0012               	return	
  6546  0057C2  0A01               	xorlw	1	; case 1
  6547  0057C4  A4D8               	btfss	status,2,c
  6548  0057C6  0012               	return	
  6549  0057C8  D7DE               	goto	l1291
  6550  0057CA                     __end_of_MdmHttp_MainTask:
  6551                           	opt stack 0
  6552                           tosu	equ	0xFFF
  6553                           tosh	equ	0xFFE
  6554                           tosl	equ	0xFFD
  6555                           pclath	equ	0xFFA
  6556                           tblptru	equ	0xFF8
  6557                           tblptrh	equ	0xFF7
  6558                           tblptrl	equ	0xFF6
  6559                           tablat	equ	0xFF5
  6560                           prodh	equ	0xFF4
  6561                           prodl	equ	0xFF3
  6562                           intcon	equ	0xFF2
  6563                           intcon2	equ	0xFF1
  6564                           intcon3	equ	0xFF0
  6565                           postinc0	equ	0xFEE
  6566                           plusw0	equ	0xFEB
  6567                           wreg	equ	0xFE8
  6568                           postinc1	equ	0xFE6
  6569                           postdec1	equ	0xFE5
  6570                           plusw1	equ	0xFE3
  6571                           fsr1h	equ	0xFE2
  6572                           fsr1l	equ	0xFE1
  6573                           indf2	equ	0xFDF
  6574                           postinc2	equ	0xFDE
  6575                           postdec2	equ	0xFDD
  6576                           plusw2	equ	0xFDB
  6577                           fsr2h	equ	0xFDA
  6578                           fsr2l	equ	0xFD9
  6579                           status	equ	0xFD8
  6580                           
  6581 ;; *************** function _Mdm_MainTask *****************
  6582 ;; Defined at:
  6583 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  Options         1    wreg     unsigned char 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  Options         1    0[COMRAM] unsigned char 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:   15
  6604 ;; This function calls:
  6605 ;;		_CheckModem
  6606 ;;		_ConfigureModem
  6607 ;;		_GetSmsSm
  6608 ;;		_ModemEvtParser
  6609 ;;		_SendSmsSm
  6610 ;;		_TurnOnModem
  6611 ;;		_UartSetConfig
  6612 ;;		_Uart_InitUartModule
  6613 ;; This function is called by:
  6614 ;;		_InitializeTasks
  6615 ;;		_ScheduleTasks
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text22
  6620  005568                     __ptext22:
  6621                           	opt stack 0
  6622  005568                     _Mdm_MainTask:
  6623                           	opt stack 13
  6624                           
  6625                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6626                           
  6627                           ;incstack = 0
  6628  005568  D01E               	goto	l1107
  6629  00556A                     
  6630                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6631  00556A  EC0B  F029         	call	_UartSetConfig	;wreg free
  6632                           
  6633                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6634  00556E  0E28               	movlw	low _UartConfig
  6635  005570  0100               	movlb	0	; () banked
  6636  005572  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6637  005574  0E03               	movlw	high _UartConfig
  6638  005576  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6639  005578  0E01               	movlw	1
  6640  00557A  EC5E  F005         	call	_Uart_InitUartModule
  6641                           
  6642                           ;mdm_gsm_gprs.c: 764: break;
  6643  00557E  0012               	return	
  6644  005580                     
  6645                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6646  005580  ECCB  F010         	call	_CheckModem	;wreg free
  6647                           
  6648                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6649  005584  042B               	decf	_ComChecCompleted,w,c
  6650  005586  A4D8               	btfss	status,2,c
  6651  005588  D005               	goto	l1111
  6652  00558A  0100               	movlb	0	; () banked
  6653  00558C  51D3               	movf	_MdmStatus& (0+255),w,b
  6654  00558E  B4D8               	btfsc	status,2,c
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;mdm_gsm_gprs.c: 772: {
  6658                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6659  005590  EC78  F02B         	call	_TurnOnModem	;wreg free
  6660  005594                     l1111:
  6661                           
  6662                           ;mdm_gsm_gprs.c: 775: }
  6663                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6664  005594  EC14  F01B         	call	_ConfigureModem	;wreg free
  6665                           
  6666                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6667  005598  ECD5  F00D         	call	_ModemEvtParser	;wreg free
  6668                           
  6669                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6670  00559C  ECFD  F015         	call	_GetSmsSm	;wreg free
  6671                           
  6672                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6673  0055A0  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6674                           
  6675                           ;mdm_gsm_gprs.c: 789: }
  6676                           
  6677                           ;mdm_gsm_gprs.c: 788: break;
  6678                           
  6679                           ;mdm_gsm_gprs.c: 787: default:
  6680                           
  6681                           ;mdm_gsm_gprs.c: 784: break;
  6682  0055A4  0012               	return	
  6683  0055A6                     l1107:
  6684  0055A6  0100               	movlb	0	; () banked
  6685  0055A8  51D6               	movf	_SystemState& (0+255),w,b
  6686                           
  6687                           ; Switch size 1, requested type "space"
  6688                           ; Number of cases is 2, Range of values is 0 to 1
  6689                           ; switch strategies available:
  6690                           ; Name         Instructions Cycles
  6691                           ; simple_byte            7     4 (average)
  6692                           ;	Chosen strategy is simple_byte
  6693  0055AA  0A00               	xorlw	0	; case 0
  6694  0055AC  B4D8               	btfsc	status,2,c
  6695  0055AE  D7DD               	goto	l1108
  6696  0055B0  0A01               	xorlw	1	; case 1
  6697  0055B2  A4D8               	btfss	status,2,c
  6698  0055B4  0012               	return	
  6699  0055B6  D7E4               	goto	l1110
  6700  0055B8                     __end_of_Mdm_MainTask:
  6701                           	opt stack 0
  6702                           tosu	equ	0xFFF
  6703                           tosh	equ	0xFFE
  6704                           tosl	equ	0xFFD
  6705                           pclath	equ	0xFFA
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           prodh	equ	0xFF4
  6711                           prodl	equ	0xFF3
  6712                           intcon	equ	0xFF2
  6713                           intcon2	equ	0xFF1
  6714                           intcon3	equ	0xFF0
  6715                           postinc0	equ	0xFEE
  6716                           plusw0	equ	0xFEB
  6717                           wreg	equ	0xFE8
  6718                           postinc1	equ	0xFE6
  6719                           postdec1	equ	0xFE5
  6720                           plusw1	equ	0xFE3
  6721                           fsr1h	equ	0xFE2
  6722                           fsr1l	equ	0xFE1
  6723                           indf2	equ	0xFDF
  6724                           postinc2	equ	0xFDE
  6725                           postdec2	equ	0xFDD
  6726                           plusw2	equ	0xFDB
  6727                           fsr2h	equ	0xFDA
  6728                           fsr2l	equ	0xFD9
  6729                           status	equ	0xFD8
  6730                           
  6731 ;; *************** function _I2cSlv_MainTask *****************
  6732 ;; Defined at:
  6733 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  Options         1    wreg     unsigned char 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  Options         1    0[COMRAM] unsigned char 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6751 ;;Total ram usage:        0 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:   14
  6754 ;; This function calls:
  6755 ;;		_I2cSendMsgSm
  6756 ;;		_I2cSetConfig
  6757 ;;		_I2c_InitI2cModule
  6758 ;;		_OsAlrm_SetOsAlarm
  6759 ;; This function is called by:
  6760 ;;		_InitializeTasks
  6761 ;;		_ScheduleTasks
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text23
  6766  005376                     __ptext23:
  6767                           	opt stack 0
  6768  005376                     _I2cSlv_MainTask:
  6769                           	opt stack 14
  6770                           
  6771                           ;i2c_slv.c: 217: switch (SystemState)
  6772                           
  6773                           ;incstack = 0
  6774  005376  D020               	goto	l1401
  6775  005378                     
  6776                           ;i2c_slv.c: 222: I2cSetConfig();
  6777  005378  ECD2  F02E         	call	_I2cSetConfig	;wreg free
  6778                           
  6779                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6780  00537C  0E56               	movlw	low _I2cConfig
  6781  00537E  0100               	movlb	0	; () banked
  6782  005380  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6783  005382  0E03               	movlw	high _I2cConfig
  6784  005384  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6785  005386  EC43  F027         	call	_I2c_InitI2cModule	;wreg free
  6786                           
  6787                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6788  00538A  0E00               	movlw	0
  6789  00538C  0100               	movlb	0	; () banked
  6790  00538E  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6791  005390  0E00               	movlw	0
  6792  005392  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6793  005394  0E32               	movlw	50
  6794  005396  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6795  005398  0E00               	movlw	0
  6796  00539A  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6797  00539C  0E00               	movlw	0
  6798  00539E  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6799  0053A0  0E00               	movlw	0
  6800  0053A2  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6801  0053A4  0E66               	movlw	low _I2cDummyTx
  6802  0053A6  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6803  0053A8  0E60               	movlw	high _I2cDummyTx
  6804  0053AA  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6805  0053AC  ECBA  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6806                           
  6807                           ;i2c_slv.c: 227: break;
  6808  0053B0  0012               	return	
  6809  0053B2                     
  6810                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6811  0053B2  EC1E  F01F         	call	_I2cSendMsgSm	;wreg free
  6812                           
  6813                           ;i2c_slv.c: 238: }
  6814                           
  6815                           ;i2c_slv.c: 237: break;
  6816                           
  6817                           ;i2c_slv.c: 236: default:
  6818                           
  6819                           ;i2c_slv.c: 233: break;
  6820  0053B6  0012               	return	
  6821  0053B8                     l1401:
  6822  0053B8  0100               	movlb	0	; () banked
  6823  0053BA  51D6               	movf	_SystemState& (0+255),w,b
  6824                           
  6825                           ; Switch size 1, requested type "space"
  6826                           ; Number of cases is 2, Range of values is 0 to 1
  6827                           ; switch strategies available:
  6828                           ; Name         Instructions Cycles
  6829                           ; simple_byte            7     4 (average)
  6830                           ;	Chosen strategy is simple_byte
  6831  0053BC  0A00               	xorlw	0	; case 0
  6832  0053BE  B4D8               	btfsc	status,2,c
  6833  0053C0  D7DB               	goto	l1402
  6834  0053C2  0A01               	xorlw	1	; case 1
  6835  0053C4  A4D8               	btfss	status,2,c
  6836  0053C6  0012               	return	
  6837  0053C8  D7F4               	goto	l1404
  6838  0053CA                     __end_of_I2cSlv_MainTask:
  6839                           	opt stack 0
  6840                           tosu	equ	0xFFF
  6841                           tosh	equ	0xFFE
  6842                           tosl	equ	0xFFD
  6843                           pclath	equ	0xFFA
  6844                           tblptru	equ	0xFF8
  6845                           tblptrh	equ	0xFF7
  6846                           tblptrl	equ	0xFF6
  6847                           tablat	equ	0xFF5
  6848                           prodh	equ	0xFF4
  6849                           prodl	equ	0xFF3
  6850                           intcon	equ	0xFF2
  6851                           intcon2	equ	0xFF1
  6852                           intcon3	equ	0xFF0
  6853                           postinc0	equ	0xFEE
  6854                           plusw0	equ	0xFEB
  6855                           wreg	equ	0xFE8
  6856                           postinc1	equ	0xFE6
  6857                           postdec1	equ	0xFE5
  6858                           plusw1	equ	0xFE3
  6859                           fsr1h	equ	0xFE2
  6860                           fsr1l	equ	0xFE1
  6861                           indf2	equ	0xFDF
  6862                           postinc2	equ	0xFDE
  6863                           postdec2	equ	0xFDD
  6864                           plusw2	equ	0xFDB
  6865                           fsr2h	equ	0xFDA
  6866                           fsr2l	equ	0xFD9
  6867                           status	equ	0xFD8
  6868                           
  6869 ;; *************** function _Mdm_DrvMainFn *****************
  6870 ;; Defined at:
  6871 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  Options         1    wreg     unsigned char 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  Options         1    0[COMRAM] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:   13
  6892 ;; This function calls:
  6893 ;;		_MdmCntSm
  6894 ;; This function is called by:
  6895 ;;		_InitializeTasks
  6896 ;;		_ScheduleTasks
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text24
  6901  00625E                     __ptext24:
  6902                           	opt stack 0
  6903  00625E                     _Mdm_DrvMainFn:
  6904                           	opt stack 15
  6905                           
  6906                           ;mdm_drv.c: 307: MdmCntSm();
  6907                           
  6908                           ;incstack = 0
  6909  00625E  EC9C  F021         	call	_MdmCntSm	;wreg free
  6910  006262  0012               	return		;funcret
  6911  006264                     __end_of_Mdm_DrvMainFn:
  6912                           	opt stack 0
  6913                           tosu	equ	0xFFF
  6914                           tosh	equ	0xFFE
  6915                           tosl	equ	0xFFD
  6916                           pclath	equ	0xFFA
  6917                           tblptru	equ	0xFF8
  6918                           tblptrh	equ	0xFF7
  6919                           tblptrl	equ	0xFF6
  6920                           tablat	equ	0xFF5
  6921                           prodh	equ	0xFF4
  6922                           prodl	equ	0xFF3
  6923                           intcon	equ	0xFF2
  6924                           intcon2	equ	0xFF1
  6925                           intcon3	equ	0xFF0
  6926                           postinc0	equ	0xFEE
  6927                           plusw0	equ	0xFEB
  6928                           wreg	equ	0xFE8
  6929                           postinc1	equ	0xFE6
  6930                           postdec1	equ	0xFE5
  6931                           plusw1	equ	0xFE3
  6932                           fsr1h	equ	0xFE2
  6933                           fsr1l	equ	0xFE1
  6934                           indf2	equ	0xFDF
  6935                           postinc2	equ	0xFDE
  6936                           postdec2	equ	0xFDD
  6937                           plusw2	equ	0xFDB
  6938                           fsr2h	equ	0xFDA
  6939                           fsr2l	equ	0xFD9
  6940                           status	equ	0xFD8
  6941                           
  6942 ;; *************** function _Wdg_MainTask *****************
  6943 ;; Defined at:
  6944 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  Options         1    wreg     unsigned char 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  Options         1    0[COMRAM] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:   12
  6965 ;; This function calls:
  6966 ;;		_Mcu_ClearWdg
  6967 ;;		_Mcu_SetWdgSts
  6968 ;; This function is called by:
  6969 ;;		_InitializeTasks
  6970 ;;		_ScheduleTasks
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text25
  6975  005F02                     __ptext25:
  6976                           	opt stack 0
  6977  005F02                     _Wdg_MainTask:
  6978                           	opt stack 16
  6979                           
  6980                           ;wdg.c: 75: switch (SystemState)
  6981                           
  6982                           ;incstack = 0
  6983  005F02  D007               	goto	l2472
  6984  005F04                     
  6985                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6986  005F04  0E01               	movlw	1
  6987  005F06  ECC1  F030         	call	_Mcu_SetWdgSts
  6988                           
  6989                           ;wdg.c: 81: break;
  6990  005F0A  0012               	return	
  6991  005F0C                     
  6992                           ;wdg.c: 86: Mcu_ClearWdg();
  6993  005F0C  EC32  F031         	call	_Mcu_ClearWdg	;wreg free
  6994                           
  6995                           ;wdg.c: 92: }
  6996                           
  6997                           ;wdg.c: 91: break;
  6998                           
  6999                           ;wdg.c: 90: default:
  7000                           
  7001                           ;wdg.c: 87: break;
  7002  005F10  0012               	return	
  7003  005F12                     l2472:
  7004  005F12  0100               	movlb	0	; () banked
  7005  005F14  51D6               	movf	_SystemState& (0+255),w,b
  7006                           
  7007                           ; Switch size 1, requested type "space"
  7008                           ; Number of cases is 2, Range of values is 0 to 1
  7009                           ; switch strategies available:
  7010                           ; Name         Instructions Cycles
  7011                           ; simple_byte            7     4 (average)
  7012                           ;	Chosen strategy is simple_byte
  7013  005F16  0A00               	xorlw	0	; case 0
  7014  005F18  B4D8               	btfsc	status,2,c
  7015  005F1A  D7F4               	goto	l2473
  7016  005F1C  0A01               	xorlw	1	; case 1
  7017  005F1E  A4D8               	btfss	status,2,c
  7018  005F20  0012               	return	
  7019  005F22  D7F4               	goto	l2475
  7020  005F24                     __end_of_Wdg_MainTask:
  7021                           	opt stack 0
  7022                           tosu	equ	0xFFF
  7023                           tosh	equ	0xFFE
  7024                           tosl	equ	0xFFD
  7025                           pclath	equ	0xFFA
  7026                           tblptru	equ	0xFF8
  7027                           tblptrh	equ	0xFF7
  7028                           tblptrl	equ	0xFF6
  7029                           tablat	equ	0xFF5
  7030                           prodh	equ	0xFF4
  7031                           prodl	equ	0xFF3
  7032                           intcon	equ	0xFF2
  7033                           intcon2	equ	0xFF1
  7034                           intcon3	equ	0xFF0
  7035                           postinc0	equ	0xFEE
  7036                           plusw0	equ	0xFEB
  7037                           wreg	equ	0xFE8
  7038                           postinc1	equ	0xFE6
  7039                           postdec1	equ	0xFE5
  7040                           plusw1	equ	0xFE3
  7041                           fsr1h	equ	0xFE2
  7042                           fsr1l	equ	0xFE1
  7043                           indf2	equ	0xFDF
  7044                           postinc2	equ	0xFDE
  7045                           postdec2	equ	0xFDD
  7046                           plusw2	equ	0xFDB
  7047                           fsr2h	equ	0xFDA
  7048                           fsr2l	equ	0xFD9
  7049                           status	equ	0xFD8
  7050                           
  7051 ;; *************** function _Mcu_SetWdgSts *****************
  7052 ;; Defined at:
  7053 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  WdgSts          1    wreg     unsigned char 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		wreg
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7071 ;;Total ram usage:        1 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:   11
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_Wdg_MainTask
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text26
  7082  006182                     __ptext26:
  7083                           	opt stack 0
  7084  006182                     _Mcu_SetWdgSts:
  7085                           	opt stack 16
  7086                           
  7087                           ;incstack = 0
  7088                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7089  006182  0100               	movlb	0	; () banked
  7090  006184  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7091                           
  7092                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7093  006186  0100               	movlb	0	; () banked
  7094  006188  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7095  00618A  D002               	bra	u13115
  7096  00618C  90C0               	bcf	4032,0,c	;volatile
  7097  00618E  D001               	bra	u13116
  7098  006190                     u13115:
  7099  006190  80C0               	bsf	4032,0,c	;volatile
  7100  006192                     u13116:
  7101  006192  0012               	return		;funcret
  7102  006194                     __end_of_Mcu_SetWdgSts:
  7103                           	opt stack 0
  7104                           tosu	equ	0xFFF
  7105                           tosh	equ	0xFFE
  7106                           tosl	equ	0xFFD
  7107                           pclath	equ	0xFFA
  7108                           tblptru	equ	0xFF8
  7109                           tblptrh	equ	0xFF7
  7110                           tblptrl	equ	0xFF6
  7111                           tablat	equ	0xFF5
  7112                           prodh	equ	0xFF4
  7113                           prodl	equ	0xFF3
  7114                           intcon	equ	0xFF2
  7115                           intcon2	equ	0xFF1
  7116                           intcon3	equ	0xFF0
  7117                           postinc0	equ	0xFEE
  7118                           plusw0	equ	0xFEB
  7119                           wreg	equ	0xFE8
  7120                           postinc1	equ	0xFE6
  7121                           postdec1	equ	0xFE5
  7122                           plusw1	equ	0xFE3
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           indf2	equ	0xFDF
  7126                           postinc2	equ	0xFDE
  7127                           postdec2	equ	0xFDD
  7128                           plusw2	equ	0xFDB
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function _Mcu_ClearWdg *****************
  7134 ;; Defined at:
  7135 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      void 
  7142 ;; Registers used:
  7143 ;;		None
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;Total ram usage:        0 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:   11
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_Wdg_MainTask
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text27
  7164  006264                     __ptext27:
  7165                           	opt stack 0
  7166  006264                     _Mcu_ClearWdg:
  7167                           	opt stack 16
  7168                           
  7169                           ;incstack = 0
  7170  006264  0004               	clrwdt		;# 
  7171  006266  0012               	return		;funcret
  7172  006268                     __end_of_Mcu_ClearWdg:
  7173                           	opt stack 0
  7174                           tosu	equ	0xFFF
  7175                           tosh	equ	0xFFE
  7176                           tosl	equ	0xFFD
  7177                           pclath	equ	0xFFA
  7178                           tblptru	equ	0xFF8
  7179                           tblptrh	equ	0xFF7
  7180                           tblptrl	equ	0xFF6
  7181                           tablat	equ	0xFF5
  7182                           prodh	equ	0xFF4
  7183                           prodl	equ	0xFF3
  7184                           intcon	equ	0xFF2
  7185                           intcon2	equ	0xFF1
  7186                           intcon3	equ	0xFF0
  7187                           postinc0	equ	0xFEE
  7188                           plusw0	equ	0xFEB
  7189                           wreg	equ	0xFE8
  7190                           postinc1	equ	0xFE6
  7191                           postdec1	equ	0xFE5
  7192                           plusw1	equ	0xFE3
  7193                           fsr1h	equ	0xFE2
  7194                           fsr1l	equ	0xFE1
  7195                           indf2	equ	0xFDF
  7196                           postinc2	equ	0xFDE
  7197                           postdec2	equ	0xFDD
  7198                           plusw2	equ	0xFDB
  7199                           fsr2h	equ	0xFDA
  7200                           fsr2l	equ	0xFD9
  7201                           status	equ	0xFD8
  7202                           
  7203 ;; *************** function _USBDeviceTasks *****************
  7204 ;; Defined at:
  7205 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  i               1   56[BANK0 ] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;Total ram usage:        1 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:   19
  7226 ;; This function calls:
  7227 ;;		_USBCtrlEPAllowStatusStage
  7228 ;;		_USBCtrlEPService
  7229 ;;		_USBDeviceInit
  7230 ;;		_USBIncrement1msInternalTimers
  7231 ;;		_USBStallHandler
  7232 ;;		_USBSuspend
  7233 ;;		_USBWakeFromSuspend
  7234 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7235 ;; This function is called by:
  7236 ;;		_UsbDevice_MainTask
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text28
  7241  001D32                     __ptext28:
  7242                           	opt stack 0
  7243  001D32                     _USBDeviceTasks:
  7244                           	opt stack 8
  7245                           
  7246                           ;usb_device.c: 562: }
  7247                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7248                           
  7249                           ; BSR set to: 0
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;usb_device.c: 561: return;
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7256                           
  7257                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7258                           
  7259                           ;usb_device.c: 529: UIE = 0;
  7260                           
  7261                           ;usb_device.c: 524: {
  7262                           ;usb_device.c: 526: UCON = 0;
  7263                           
  7264                           ;usb_device.c: 497: uint8_t i;
  7265                           ;usb_device.c: 523: if (1 != 1)
  7266                           
  7267                           ;incstack = 0
  7268  001D32  0100               	movlb	0	; () banked
  7269  001D34  51D0               	movf	_USBDeviceState& (0+255),w,b
  7270  001D36  A4D8               	btfss	status,2,c
  7271  001D38  D012               	goto	l1612
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;usb_device.c: 585: {
  7275                           ;usb_device.c: 587: UCON = 0;
  7276  001D3A  0E00               	movlw	0
  7277  001D3C  6E65               	movwf	3941,c	;volatile
  7278                           
  7279                           ;usb_device.c: 590: UIE = 0;
  7280  001D3E  0E00               	movlw	0
  7281  001D40  010F               	movlb	15	; () banked
  7282  001D42  6F36               	movwf	54,b	;volatile
  7283                           
  7284                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7285  001D44  0E16               	movlw	22
  7286  001D46  6F39               	movwf	57,b	;volatile
  7287  001D48  0E9F               	movlw	159
  7288  001D4A  6F37               	movwf	55,b	;volatile
  7289  001D4C  0E7B               	movlw	123
  7290  001D4E  6F36               	movwf	54,b	;volatile
  7291                           
  7292                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7293  001D50  D001               	goto	l1613
  7294  001D52                     l1614:
  7295  001D52  8665               	bsf	3941,3,c	;volatile
  7296  001D54                     l1613:
  7297  001D54  A665               	btfss	3941,3,c	;volatile
  7298  001D56  D7FD               	goto	l1614
  7299                           
  7300                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7301  001D58  0E01               	movlw	1
  7302  001D5A  0100               	movlb	0	; () banked
  7303  001D5C  6FD0               	movwf	_USBDeviceState& (0+255),b
  7304  001D5E                     l1612:
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;usb_device.c: 605: }
  7308                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7309                           
  7310                           ; BSR set to: 0
  7311  001D5E  05D0               	decf	_USBDeviceState& (0+255),w,b
  7312  001D60  B4D8               	btfsc	status,2,c
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;usb_device.c: 609: {
  7316                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7317  001D62  BA65               	btfsc	3941,5,c	;volatile
  7318  001D64  D00A               	goto	l1617
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;usb_device.c: 620: {
  7322                           ;usb_device.c: 626: {UIR = 0;};
  7323  001D66  0E00               	movlw	0
  7324  001D68  6E62               	movwf	3938,c	;volatile
  7325                           
  7326                           ;usb_device.c: 630: UIE=0;
  7327  001D6A  0E00               	movlw	0
  7328  001D6C  010F               	movlb	15	; () banked
  7329  001D6E  6F36               	movwf	54,b	;volatile
  7330                           
  7331                           ; BSR set to: 15
  7332                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7333  001D70  8136               	bsf	54,0,b	;volatile
  7334                           
  7335                           ; BSR set to: 15
  7336                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7337  001D72  8936               	bsf	54,4,b	;volatile
  7338                           
  7339                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7340  001D74  0E02               	movlw	2
  7341  001D76  0100               	movlb	0	; () banked
  7342  001D78  6FD0               	movwf	_USBDeviceState& (0+255),b
  7343  001D7A                     l1617:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;usb_device.c: 635: }
  7347                           ;usb_device.c: 636: }
  7348                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7349                           
  7350                           ; BSR set to: 0
  7351                           
  7352                           ; BSR set to: 0
  7353  001D7A  A462               	btfss	3938,2,c	;volatile
  7354  001D7C  D006               	goto	l1618
  7355                           
  7356                           ; BSR set to: 0
  7357  001D7E  010F               	movlb	15	; () banked
  7358  001D80  A536               	btfss	54,2,b	;volatile
  7359  001D82  D003               	goto	l1618
  7360                           
  7361                           ; BSR set to: 15
  7362                           ;usb_device.c: 653: {
  7363                           ;usb_device.c: 654: (UIR &= 0xFB);
  7364  001D84  9462               	bcf	3938,2,c	;volatile
  7365                           
  7366                           ; BSR set to: 15
  7367                           ;usb_device.c: 658: USBWakeFromSuspend();
  7368  001D86  EC6B  F02D         	call	_USBWakeFromSuspend	;wreg free
  7369  001D8A                     l1618:
  7370                           
  7371                           ;usb_device.c: 660: }
  7372                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7373  001D8A  A265               	btfss	3941,1,c	;volatile
  7374  001D8C  D002               	goto	l1619
  7375                           
  7376                           ;usb_device.c: 666: {
  7377                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7378  001D8E  98A1               	bcf	4001,4,c	;volatile
  7379                           
  7380                           ;usb_device.c: 668: return;
  7381  001D90  0012               	return	
  7382  001D92                     l1619:
  7383                           
  7384                           ;usb_device.c: 669: }
  7385                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7386  001D92  A062               	btfss	3938,0,c	;volatile
  7387  001D94  D009               	goto	l1620
  7388  001D96  010F               	movlb	15	; () banked
  7389  001D98  A136               	btfss	54,0,b	;volatile
  7390  001D9A  D006               	goto	l1620
  7391                           
  7392                           ; BSR set to: 15
  7393                           ;usb_device.c: 682: {
  7394                           ;usb_device.c: 683: USBDeviceInit();
  7395  001D9C  ECD5  F012         	call	_USBDeviceInit	;wreg free
  7396                           
  7397                           ;usb_device.c: 687: ;
  7398                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7399  001DA0  0E04               	movlw	4
  7400  001DA2  0100               	movlb	0	; () banked
  7401  001DA4  6FD0               	movwf	_USBDeviceState& (0+255),b
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;usb_device.c: 699: (UIR &= 0xFE);
  7405  001DA6  9062               	bcf	3938,0,c	;volatile
  7406  001DA8                     l1620:
  7407                           
  7408                           ;usb_device.c: 700: }
  7409                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7410                           
  7411                           ; BSR set to: 0
  7412  001DA8  A862               	btfss	3938,4,c	;volatile
  7413  001DAA  D004               	goto	l1621
  7414  001DAC  010F               	movlb	15	; () banked
  7415  001DAE  B936               	btfsc	54,4,b	;volatile
  7416                           
  7417                           ; BSR set to: 15
  7418                           ;usb_device.c: 706: {
  7419                           ;usb_device.c: 712: USBSuspend();
  7420  001DB0  EC12  F02E         	call	_USBSuspend	;wreg free
  7421  001DB4                     l1621:
  7422                           
  7423                           ;usb_device.c: 714: }
  7424                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7425  001DB4  AC62               	btfss	3938,6,c	;volatile
  7426  001DB6  D01C               	goto	l1625
  7427                           
  7428                           ;usb_device.c: 727: {
  7429                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7430  001DB8  010F               	movlb	15	; () banked
  7431  001DBA  AD36               	btfss	54,6,b	;volatile
  7432  001DBC  D00F               	goto	l1623
  7433                           
  7434                           ; BSR set to: 15
  7435                           ;usb_device.c: 730: {
  7436                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7437  001DBE  0E00               	movlw	0
  7438  001DC0  0100               	movlb	0	; () banked
  7439  001DC2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7440  001DC4  0E73               	movlw	115
  7441  001DC6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7442  001DC8  0E00               	movlw	0
  7443  001DCA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7444  001DCC  0E00               	movlw	0
  7445  001DCE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7446  001DD0  0E00               	movlw	0
  7447  001DD2  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7448  001DD4  0E01               	movlw	1
  7449  001DD6  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7450  001DD8  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7451  001DDC                     l1623:
  7452                           
  7453                           ;usb_device.c: 732: }
  7454                           ;usb_device.c: 733: (UIR &= 0xBF);
  7455  001DDC  9C62               	bcf	3938,6,c	;volatile
  7456                           
  7457                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7458  001DDE  EC92  F02F         	call	_USBIncrement1msInternalTimers	;wreg free
  7459                           
  7460                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7461  001DE2  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7462  001DE4  A4D8               	btfss	status,2,c
  7463                           
  7464                           ;usb_device.c: 754: {
  7465                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7466  001DE6  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7467                           
  7468                           ;usb_device.c: 756: }
  7469                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7470  001DE8  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7471  001DEA  B4D8               	btfsc	status,2,c
  7472                           
  7473                           ;usb_device.c: 763: {
  7474                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7475  001DEC  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7476  001DF0                     l1625:
  7477                           
  7478                           ;usb_device.c: 765: }
  7479                           ;usb_device.c: 767: }
  7480                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7481  001DF0  AA62               	btfss	3938,5,c	;volatile
  7482  001DF2  D004               	goto	l1626
  7483  001DF4  010F               	movlb	15	; () banked
  7484  001DF6  BB36               	btfsc	54,5,b	;volatile
  7485                           
  7486                           ; BSR set to: 15
  7487                           ;usb_device.c: 770: {
  7488                           ;usb_device.c: 771: USBStallHandler();
  7489  001DF8  ECE5  F02B         	call	_USBStallHandler	;wreg free
  7490  001DFC                     l1626:
  7491                           
  7492                           ;usb_device.c: 772: }
  7493                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7494  001DFC  A262               	btfss	3938,1,c	;volatile
  7495  001DFE  D013               	goto	l1627
  7496  001E00  010F               	movlb	15	; () banked
  7497  001E02  A336               	btfss	54,1,b	;volatile
  7498  001E04  D010               	goto	l1627
  7499                           
  7500                           ; BSR set to: 15
  7501                           ;usb_device.c: 775: {
  7502                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7503  001E06  0E7F               	movlw	127
  7504  001E08  0100               	movlb	0	; () banked
  7505  001E0A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7506  001E0C  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7507  001E0E  0E00               	movlw	0
  7508  001E10  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7509  001E12  0E00               	movlw	0
  7510  001E14  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7511  001E16  0E00               	movlw	0
  7512  001E18  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7513  001E1A  0E01               	movlw	1
  7514  001E1C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7515  001E1E  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7516                           
  7517                           ;usb_device.c: 777: {UEIR = 0;};
  7518  001E22  0E00               	movlw	0
  7519  001E24  6E63               	movwf	3939,c	;volatile
  7520  001E26                     l1627:
  7521                           
  7522                           ;usb_device.c: 785: }
  7523                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7524  001E26  0E04               	movlw	4
  7525  001E28  0100               	movlb	0	; () banked
  7526  001E2A  61D0               	cpfslt	_USBDeviceState& (0+255),b
  7527  001E2C  D002               	goto	l1628
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;usb_device.c: 793: {
  7531                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7532  001E2E  98A1               	bcf	4001,4,c	;volatile
  7533                           
  7534                           ;usb_device.c: 795: return;
  7535  001E30  0012               	return	
  7536  001E32                     l1628:
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;usb_device.c: 796: }
  7540                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7541  001E32  010F               	movlb	15	; () banked
  7542  001E34  A736               	btfss	54,3,b	;volatile
  7543  001E36  D03E               	goto	u14110
  7544                           
  7545                           ; BSR set to: 15
  7546                           ;usb_device.c: 802: {
  7547                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7548  001E38  0E00               	movlw	0
  7549  001E3A  0100               	movlb	0	; () banked
  7550  001E3C  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7551  001E3E                     l14479:
  7552                           
  7553                           ; BSR set to: 0
  7554  001E3E  0E03               	movlw	3
  7555  001E40  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7556  001E42  D001               	goto	l1630
  7557  001E44  D037               	goto	u14110
  7558  001E46                     l1630:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;usb_device.c: 804: {
  7562                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7563  001E46  A662               	btfss	3938,3,c	;volatile
  7564  001E48  D035               	goto	u14110
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;usb_device.c: 806: {
  7568                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7569  001E4A  CF64 F0D7          	movff	3940,_USTATcopy	;volatile
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7573  001E4E  31D7               	rrcf	_USTATcopy& (0+255),w,b
  7574  001E50  32E8               	rrcf	wreg,f,c
  7575  001E52  32E8               	rrcf	wreg,f,c
  7576  001E54  0B0F               	andlw	15
  7577  001E56  6FCD               	movwf	_endpoint_number& (0+255),b
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;usb_device.c: 811: (UIR &= 0xF7);
  7581  001E58  9662               	bcf	3938,3,c	;volatile
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7585  001E5A  B5D7               	btfsc	_USTATcopy& (0+255),2,b
  7586  001E5C  D007               	goto	l1633
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;usb_device.c: 817: {
  7590                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7591  001E5E  51CD               	movf	_endpoint_number& (0+255),w,b
  7592  001E60  0D01               	mullw	1
  7593  001E62  0ECF               	movlw	low _ep_data_out
  7594  001E64  24F3               	addwf	prodl,w,c
  7595  001E66  6ED9               	movwf	fsr2l,c
  7596  001E68  0E02               	movlw	high _ep_data_out
  7597  001E6A  D007               	goto	L3
  7598  001E6C                     l1633:
  7599                           
  7600                           ;usb_device.c: 820: else
  7601                           ;usb_device.c: 821: {
  7602                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7603                           
  7604                           ; BSR set to: 2
  7605  001E6C  0100               	movlb	0	; () banked
  7606  001E6E  51CD               	movf	_endpoint_number& (0+255),w,b
  7607  001E70  0D01               	mullw	1
  7608  001E72  0ED2               	movlw	low _ep_data_in
  7609  001E74  24F3               	addwf	prodl,w,c
  7610  001E76  6ED9               	movwf	fsr2l,c
  7611  001E78  0E02               	movlw	high _ep_data_in
  7612  001E7A                     L3:
  7613  001E7A  20F4               	addwfc	prodh,w,c
  7614  001E7C  6EDA               	movwf	fsr2h,c
  7615  001E7E  0102               	movlb	2	; () banked
  7616  001E80  70DF               	btg	indf2,0,c
  7617                           
  7618                           ; BSR set to: 2
  7619                           ;usb_device.c: 823: }
  7620                           ;usb_device.c: 828: if(endpoint_number == 0)
  7621                           
  7622                           ; BSR set to: 2
  7623  001E82  0100               	movlb	0	; () banked
  7624  001E84  51CD               	movf	_endpoint_number& (0+255),w,b
  7625  001E86  A4D8               	btfss	status,2,c
  7626  001E88  D003               	goto	l1635
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;usb_device.c: 829: {
  7630                           ;usb_device.c: 830: USBCtrlEPService();
  7631  001E8A  EC65  F024         	call	_USBCtrlEPService	;wreg free
  7632                           
  7633                           ;usb_device.c: 831: }
  7634  001E8E  D00F               	goto	l1637
  7635  001E90                     l1635:
  7636                           
  7637                           ;usb_device.c: 832: else
  7638                           ;usb_device.c: 833: {
  7639                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7640  001E90  0E00               	movlw	0
  7641  001E92  0100               	movlb	0	; () banked
  7642  001E94  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7643  001E96  0E72               	movlw	114
  7644  001E98  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7645  001E9A  0ED7               	movlw	low _USTATcopy
  7646  001E9C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7647  001E9E  0E00               	movlw	high _USTATcopy
  7648  001EA0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7649  001EA2  0E00               	movlw	0
  7650  001EA4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7651  001EA6  0E00               	movlw	0
  7652  001EA8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7653  001EAA  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7654  001EAE                     l1637:
  7655  001EAE  0100               	movlb	0	; () banked
  7656  001EB0  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7657  001EB2  D7C5               	goto	l14479
  7658  001EB4                     u14110:
  7659                           
  7660                           ;usb_device.c: 840: }
  7661                           ;usb_device.c: 841: }
  7662                           ;usb_device.c: 842: }
  7663                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7664                           
  7665                           ; BSR set to: 0
  7666  001EB4  98A1               	bcf	4001,4,c	;volatile
  7667  001EB6  0012               	return		;funcret
  7668  001EB8                     __end_of_USBDeviceTasks:
  7669                           	opt stack 0
  7670                           tosu	equ	0xFFF
  7671                           tosh	equ	0xFFE
  7672                           tosl	equ	0xFFD
  7673                           pclath	equ	0xFFA
  7674                           tblptru	equ	0xFF8
  7675                           tblptrh	equ	0xFF7
  7676                           tblptrl	equ	0xFF6
  7677                           tablat	equ	0xFF5
  7678                           prodh	equ	0xFF4
  7679                           prodl	equ	0xFF3
  7680                           intcon	equ	0xFF2
  7681                           intcon2	equ	0xFF1
  7682                           intcon3	equ	0xFF0
  7683                           postinc0	equ	0xFEE
  7684                           plusw0	equ	0xFEB
  7685                           wreg	equ	0xFE8
  7686                           postinc1	equ	0xFE6
  7687                           postdec1	equ	0xFE5
  7688                           plusw1	equ	0xFE3
  7689                           fsr1h	equ	0xFE2
  7690                           fsr1l	equ	0xFE1
  7691                           indf2	equ	0xFDF
  7692                           postinc2	equ	0xFDE
  7693                           postdec2	equ	0xFDD
  7694                           plusw2	equ	0xFDB
  7695                           fsr2h	equ	0xFDA
  7696                           fsr2l	equ	0xFD9
  7697                           status	equ	0xFD8
  7698                           
  7699 ;; *************** function _USBWakeFromSuspend *****************
  7700 ;; Defined at:
  7701 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;		None
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;		None
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7719 ;;Total ram usage:        0 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:   15
  7722 ;; This function calls:
  7723 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7724 ;; This function is called by:
  7725 ;;		_USBDeviceTasks
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text29
  7730  005AD6                     __ptext29:
  7731                           	opt stack 0
  7732  005AD6                     _USBWakeFromSuspend:
  7733                           	opt stack 11
  7734                           
  7735                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7736                           
  7737                           ;incstack = 0
  7738  005AD6  0E00               	movlw	0
  7739  005AD8  0101               	movlb	1	; () banked
  7740  005ADA  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  7741                           
  7742                           ; BSR set to: 1
  7743                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7744  005ADC  0E00               	movlw	0
  7745  005ADE  0100               	movlb	0	; () banked
  7746  005AE0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7747  005AE2  0E74               	movlw	116
  7748  005AE4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7749  005AE6  0E00               	movlw	0
  7750  005AE8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7751  005AEA  0E00               	movlw	0
  7752  005AEC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7753  005AEE  0E00               	movlw	0
  7754  005AF0  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7755  005AF2  0E00               	movlw	0
  7756  005AF4  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7757  005AF6  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7758                           
  7759                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7760  005AFA  9265               	bcf	3941,1,c	;volatile
  7761                           
  7762                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7763  005AFC  010F               	movlb	15	; () banked
  7764  005AFE  9536               	bcf	54,2,b	;volatile
  7765                           
  7766                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7767  005B00  D001               	goto	l1765
  7768  005B02                     
  7769                           ;usb_device.c: 2361: {
  7770                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7771                           
  7772                           ; BSR set to: 15
  7773  005B02  9462               	bcf	3938,2,c	;volatile
  7774  005B04                     l1765:
  7775  005B04  B462               	btfsc	3938,2,c	;volatile
  7776  005B06  D7FD               	goto	l1766
  7777                           
  7778                           ;usb_device.c: 2363: }
  7779                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7780  005B08  0E00               	movlw	0
  7781  005B0A  0101               	movlb	1	; () banked
  7782  005B0C  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7783                           
  7784                           ; BSR set to: 1
  7785  005B0E  0012               	return		;funcret
  7786  005B10                     __end_of_USBWakeFromSuspend:
  7787                           	opt stack 0
  7788                           tosu	equ	0xFFF
  7789                           tosh	equ	0xFFE
  7790                           tosl	equ	0xFFD
  7791                           pclath	equ	0xFFA
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           intcon	equ	0xFF2
  7799                           intcon2	equ	0xFF1
  7800                           intcon3	equ	0xFF0
  7801                           postinc0	equ	0xFEE
  7802                           plusw0	equ	0xFEB
  7803                           wreg	equ	0xFE8
  7804                           postinc1	equ	0xFE6
  7805                           postdec1	equ	0xFE5
  7806                           plusw1	equ	0xFE3
  7807                           fsr1h	equ	0xFE2
  7808                           fsr1l	equ	0xFE1
  7809                           indf2	equ	0xFDF
  7810                           postinc2	equ	0xFDE
  7811                           postdec2	equ	0xFDD
  7812                           plusw2	equ	0xFDB
  7813                           fsr2h	equ	0xFDA
  7814                           fsr2l	equ	0xFD9
  7815                           status	equ	0xFD8
  7816                           
  7817 ;; *************** function _USBSuspend *****************
  7818 ;; Defined at:
  7819 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;		None
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;		None
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  1    wreg      void 
  7826 ;; Registers used:
  7827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;Total ram usage:        0 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; Hardware stack levels required when called:   15
  7840 ;; This function calls:
  7841 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7842 ;; This function is called by:
  7843 ;;		_USBDeviceTasks
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           	psect	text30
  7848  005C24                     __ptext30:
  7849                           	opt stack 0
  7850  005C24                     _USBSuspend:
  7851                           	opt stack 11
  7852                           
  7853                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7854                           
  7855                           ; BSR set to: 1
  7856                           ;incstack = 0
  7857  005C24  010F               	movlb	15	; () banked
  7858  005C26  8536               	bsf	54,2,b	;volatile
  7859                           
  7860                           ; BSR set to: 15
  7861                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7862  005C28  9862               	bcf	3938,4,c	;volatile
  7863                           
  7864                           ; BSR set to: 15
  7865                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7866  005C2A  8265               	bsf	3941,1,c	;volatile
  7867                           
  7868                           ; BSR set to: 15
  7869                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7870  005C2C  0E01               	movlw	1
  7871  005C2E  0101               	movlb	1	; () banked
  7872  005C30  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  7873                           
  7874                           ; BSR set to: 1
  7875                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7876  005C32  0E00               	movlw	0
  7877  005C34  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7881  005C36  0E00               	movlw	0
  7882  005C38  0100               	movlb	0	; () banked
  7883  005C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7884  005C3C  0E75               	movlw	117
  7885  005C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7886  005C40  0E00               	movlw	0
  7887  005C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7888  005C44  0E00               	movlw	0
  7889  005C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7890  005C48  0E00               	movlw	0
  7891  005C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7892  005C4C  0E00               	movlw	0
  7893  005C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7894  005C50  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7895  005C54  0012               	return		;funcret
  7896  005C56                     __end_of_USBSuspend:
  7897                           	opt stack 0
  7898                           tosu	equ	0xFFF
  7899                           tosh	equ	0xFFE
  7900                           tosl	equ	0xFFD
  7901                           pclath	equ	0xFFA
  7902                           tblptru	equ	0xFF8
  7903                           tblptrh	equ	0xFF7
  7904                           tblptrl	equ	0xFF6
  7905                           tablat	equ	0xFF5
  7906                           prodh	equ	0xFF4
  7907                           prodl	equ	0xFF3
  7908                           intcon	equ	0xFF2
  7909                           intcon2	equ	0xFF1
  7910                           intcon3	equ	0xFF0
  7911                           postinc0	equ	0xFEE
  7912                           plusw0	equ	0xFEB
  7913                           wreg	equ	0xFE8
  7914                           postinc1	equ	0xFE6
  7915                           postdec1	equ	0xFE5
  7916                           plusw1	equ	0xFE3
  7917                           fsr1h	equ	0xFE2
  7918                           fsr1l	equ	0xFE1
  7919                           indf2	equ	0xFDF
  7920                           postinc2	equ	0xFDE
  7921                           postdec2	equ	0xFDD
  7922                           plusw2	equ	0xFDB
  7923                           fsr2h	equ	0xFDA
  7924                           fsr2l	equ	0xFD9
  7925                           status	equ	0xFD8
  7926                           
  7927 ;; *************** function _USBStallHandler *****************
  7928 ;; Defined at:
  7929 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;		None
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;Total ram usage:        1 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:   11
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_USBDeviceTasks
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text31
  7958  0057CA                     __ptext31:
  7959                           	opt stack 0
  7960  0057CA                     _USBStallHandler:
  7961                           	opt stack 15
  7962                           
  7963                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7964                           
  7965                           ;incstack = 0
  7966  0057CA  010F               	movlb	15	; () banked
  7967  0057CC  A126               	btfss	38,0,b	;volatile
  7968  0057CE  D01D               	goto	l1757
  7969                           
  7970                           ; BSR set to: 15
  7971                           ;usb_device.c: 2233: {
  7972                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7973  0057D0  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7974  0057D4  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7975  0057D8  0E80               	movlw	128
  7976  0057DA  18DE               	xorwf	postinc2,w,c
  7977  0057DC  A4D8               	btfss	status,2,c
  7978  0057DE  D014               	goto	l1758
  7979                           
  7980                           ; BSR set to: 15
  7981  0057E0  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  7982  0057E4  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7983  0057E8  0E84               	movlw	132
  7984  0057EA  18DE               	xorwf	postinc2,w,c
  7985  0057EC  A4D8               	btfss	status,2,c
  7986  0057EE  D00C               	goto	l1758
  7987                           
  7988                           ; BSR set to: 15
  7989                           ;usb_device.c: 2236: {
  7990                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7991  0057F0  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7992  0057F4  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7993  0057F8  0E0C               	movlw	12
  7994  0057FA  6EDF               	movwf	indf2,c
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7998  0057FC  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7999  005800  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8000  005804  0E00               	movlw	0
  8001  005806  8EDB               	bsf	plusw2,7,c
  8002  005808                     l1758:
  8003                           
  8004                           ; BSR set to: 15
  8005                           ;usb_device.c: 2240: }
  8006                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8007                           
  8008                           ; BSR set to: 15
  8009  005808  9126               	bcf	38,0,b	;volatile
  8010  00580A                     l1757:
  8011                           
  8012                           ; BSR set to: 15
  8013                           ;usb_device.c: 2242: }
  8014                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8015  00580A  9A62               	bcf	3938,5,c	;volatile
  8016                           
  8017                           ; BSR set to: 15
  8018  00580C  0012               	return		;funcret
  8019  00580E                     __end_of_USBStallHandler:
  8020                           	opt stack 0
  8021                           tosu	equ	0xFFF
  8022                           tosh	equ	0xFFE
  8023                           tosl	equ	0xFFD
  8024                           pclath	equ	0xFFA
  8025                           tblptru	equ	0xFF8
  8026                           tblptrh	equ	0xFF7
  8027                           tblptrl	equ	0xFF6
  8028                           tablat	equ	0xFF5
  8029                           prodh	equ	0xFF4
  8030                           prodl	equ	0xFF3
  8031                           intcon	equ	0xFF2
  8032                           intcon2	equ	0xFF1
  8033                           intcon3	equ	0xFF0
  8034                           postinc0	equ	0xFEE
  8035                           plusw0	equ	0xFEB
  8036                           wreg	equ	0xFE8
  8037                           postinc1	equ	0xFE6
  8038                           postdec1	equ	0xFE5
  8039                           plusw1	equ	0xFE3
  8040                           fsr1h	equ	0xFE2
  8041                           fsr1l	equ	0xFE1
  8042                           indf2	equ	0xFDF
  8043                           postinc2	equ	0xFDE
  8044                           postdec2	equ	0xFDD
  8045                           plusw2	equ	0xFDB
  8046                           fsr2h	equ	0xFDA
  8047                           fsr2l	equ	0xFD9
  8048                           status	equ	0xFD8
  8049                           
  8050 ;; *************** function _USBIncrement1msInternalTimers *****************
  8051 ;; Defined at:
  8052 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2, status,0
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:   11
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_USBDeviceTasks
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text32
  8081  005F24                     __ptext32:
  8082                           	opt stack 0
  8083  005F24                     _USBIncrement1msInternalTimers:
  8084                           	opt stack 15
  8085                           
  8086                           ;usb_device.c: 3050: USB1msTickCount++;
  8087                           
  8088                           ; BSR set to: 15
  8089                           ;incstack = 0
  8090  005F24  0E01               	movlw	1
  8091  005F26  0103               	movlb	3	; () banked
  8092  005F28  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8093  005F2A  0E00               	movlw	0
  8094  005F2C  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8095  005F2E  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8096  005F30  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8097                           
  8098                           ; BSR set to: 3
  8099                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8100  005F32  0101               	movlb	1	; () banked
  8101  005F34  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8102  005F36  A4D8               	btfss	status,2,c
  8103  005F38  0012               	return	
  8104                           
  8105                           ; BSR set to: 1
  8106                           ;usb_device.c: 3052: {
  8107                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8108  005F3A  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8109                           
  8110                           ; BSR set to: 1
  8111                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8112  005F3C  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8113  005F3E  A4D8               	btfss	status,2,c
  8114  005F40  0012               	return	
  8115                           
  8116                           ; BSR set to: 1
  8117                           ;usb_device.c: 3056: {
  8118                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8119  005F42  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8120                           
  8121                           ; BSR set to: 1
  8122  005F44  0012               	return	
  8123  005F46                     __end_of_USBIncrement1msInternalTimers:
  8124                           	opt stack 0
  8125                           tosu	equ	0xFFF
  8126                           tosh	equ	0xFFE
  8127                           tosl	equ	0xFFD
  8128                           pclath	equ	0xFFA
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodh	equ	0xFF4
  8134                           prodl	equ	0xFF3
  8135                           intcon	equ	0xFF2
  8136                           intcon2	equ	0xFF1
  8137                           intcon3	equ	0xFF0
  8138                           postinc0	equ	0xFEE
  8139                           plusw0	equ	0xFEB
  8140                           wreg	equ	0xFE8
  8141                           postinc1	equ	0xFE6
  8142                           postdec1	equ	0xFE5
  8143                           plusw1	equ	0xFE3
  8144                           fsr1h	equ	0xFE2
  8145                           fsr1l	equ	0xFE1
  8146                           indf2	equ	0xFDF
  8147                           postinc2	equ	0xFDE
  8148                           postdec2	equ	0xFDD
  8149                           plusw2	equ	0xFDB
  8150                           fsr2h	equ	0xFDA
  8151                           fsr2l	equ	0xFD9
  8152                           status	equ	0xFD8
  8153                           
  8154 ;; *************** function _USBDeviceInit *****************
  8155 ;; Defined at:
  8156 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;		None
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  i               1   37[BANK0 ] unsigned char 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      void 
  8163 ;; Registers used:
  8164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8173 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8174 ;;Total ram usage:        1 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:   12
  8177 ;; This function calls:
  8178 ;;		_memset
  8179 ;; This function is called by:
  8180 ;;		_USBDeviceTasks
  8181 ;;		_UsbDevice_MainTask
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text33
  8186  0025AA                     __ptext33:
  8187                           	opt stack 0
  8188  0025AA                     _USBDeviceInit:
  8189                           	opt stack 14
  8190                           
  8191                           ;usb_device.c: 297: uint8_t i;
  8192                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8193                           
  8194                           ; BSR set to: 1
  8195                           ;incstack = 0
  8196  0025AA  98A0               	bcf	4000,4,c	;volatile
  8197                           
  8198                           ;usb_device.c: 303: ;
  8199                           ;usb_device.c: 306: {UEIR = 0;};
  8200  0025AC  0E00               	movlw	0
  8201  0025AE  6E63               	movwf	3939,c	;volatile
  8202                           
  8203                           ;usb_device.c: 309: {UIR = 0;};
  8204  0025B0  0E00               	movlw	0
  8205  0025B2  6E62               	movwf	3938,c	;volatile
  8206                           
  8207                           ;usb_device.c: 312: UEP0 = 0;
  8208  0025B4  0E00               	movlw	0
  8209  0025B6  010F               	movlb	15	; () banked
  8210  0025B8  6F26               	movwf	38,b	;volatile
  8211                           
  8212                           ; BSR set to: 15
  8213                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8214  0025BA  0E27               	movlw	39
  8215  0025BC  0100               	movlb	0	; () banked
  8216  0025BE  6F7D               	movwf	memset@p1& (0+255),b
  8217  0025C0  0E0F               	movlw	15
  8218  0025C2  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8219  0025C4  0E00               	movlw	0
  8220  0025C6  6F80               	movwf	(memset@c+1)& (0+255),b
  8221  0025C8  0E00               	movlw	0
  8222  0025CA  6F7F               	movwf	memset@c& (0+255),b
  8223  0025CC  0E00               	movlw	0
  8224  0025CE  6F82               	movwf	(memset@n+1)& (0+255),b
  8225  0025D0  0E02               	movlw	2
  8226  0025D2  6F81               	movwf	memset@n& (0+255),b
  8227  0025D4  EC5C  F02E         	call	_memset	;wreg free
  8228                           
  8229                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8230  0025D8  0E16               	movlw	22
  8231  0025DA  010F               	movlb	15	; () banked
  8232  0025DC  6F39               	movwf	57,b	;volatile
  8233                           
  8234                           ; BSR set to: 15
  8235  0025DE  0E9F               	movlw	159
  8236  0025E0  6F37               	movwf	55,b	;volatile
  8237                           
  8238                           ; BSR set to: 15
  8239  0025E2  0E7B               	movlw	123
  8240  0025E4  6F36               	movwf	54,b	;volatile
  8241                           
  8242                           ; BSR set to: 15
  8243                           ;usb_device.c: 319: ;
  8244                           ;usb_device.c: 322: ;
  8245                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8246  0025E6  0E00               	movlw	0
  8247  0025E8  0100               	movlb	0	; () banked
  8248  0025EA  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8249  0025EC                     l13285:
  8250                           
  8251                           ; BSR set to: 0
  8252  0025EC  0E0B               	movlw	11
  8253  0025EE  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8254  0025F0  D001               	goto	l1601
  8255  0025F2  D00E               	goto	u12420
  8256  0025F4                     l1601:
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;usb_device.c: 326: {
  8260                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8261                           
  8262                           ; BSR set to: 0
  8263  0025F4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8264  0025F6  0D04               	mullw	4
  8265  0025F8  0E00               	movlw	0
  8266  0025FA  24F3               	addwf	prodl,w,c
  8267  0025FC  6ED9               	movwf	fsr2l,c
  8268  0025FE  0E04               	movlw	4
  8269  002600  20F4               	addwfc	prodh,w,c
  8270  002602  6EDA               	movwf	fsr2h,c
  8271  002604  6ADE               	clrf	postinc2,c
  8272  002606  6ADE               	clrf	postinc2,c
  8273  002608  6ADE               	clrf	postinc2,c
  8274  00260A  6ADD               	clrf	postdec2,c
  8275                           
  8276                           ; BSR set to: 0
  8277  00260C  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8278  00260E  D7EE               	goto	l13285
  8279  002610                     u12420:
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;usb_device.c: 328: }
  8283                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8284  002610  8C65               	bsf	3941,6,c	;volatile
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;usb_device.c: 334: UADDR = 0x00;
  8288  002612  0E00               	movlw	0
  8289  002614  010F               	movlb	15	; () banked
  8290  002616  6F38               	movwf	56,b	;volatile
  8291                           
  8292                           ; BSR set to: 15
  8293                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8294  002618  9865               	bcf	3941,4,c	;volatile
  8295                           
  8296                           ; BSR set to: 15
  8297                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8298  00261A  9C65               	bcf	3941,6,c	;volatile
  8299  00261C                     
  8300                           ;usb_device.c: 344: {
  8301                           ;usb_device.c: 345: (UIR &= 0xF7);
  8302                           
  8303                           ; BSR set to: 15
  8304  00261C  9662               	bcf	3938,3,c	;volatile
  8305                           
  8306                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8307  00261E  0E00               	movlw	0
  8308  002620  0100               	movlb	0	; () banked
  8309  002622  6FB8               	movwf	(_inPipes+3)& (0+255),b
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8313  002624  0E00               	movlw	0
  8314  002626  0101               	movlb	1	; () banked
  8315  002628  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8319  00262A  0E00               	movlw	0
  8320  00262C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8321  00262E  0E00               	movlw	0
  8322  002630  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8323                           
  8324                           ; BSR set to: 1
  8325                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8326  002632  B662               	btfsc	3938,3,c	;volatile
  8327  002634  D7F3               	goto	l1603
  8328                           
  8329                           ; BSR set to: 1
  8330                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8331                           
  8332                           ; BSR set to: 1
  8333  002636  0E01               	movlw	1
  8334  002638  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8335                           
  8336                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8337  00263A  0E01               	movlw	1
  8338  00263C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8339                           
  8340                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8341  00263E  0E00               	movlw	0
  8342  002640  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8343                           
  8344                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8345  002642  0E00               	movlw	0
  8346  002644  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8347                           
  8348                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8349  002646  0E00               	movlw	0
  8350  002648  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8351                           
  8352                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8353  00264A  0E00               	movlw	0
  8354  00264C  0100               	movlb	0	; () banked
  8355  00264E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8356  002650                     l13313:
  8357                           
  8358                           ; BSR set to: 0
  8359  002650  0E02               	movlw	2
  8360  002652  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8361  002654  D001               	goto	l1605
  8362  002656  D02E               	goto	u12450
  8363  002658                     l1605:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;usb_device.c: 364: {
  8367                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8368                           
  8369                           ; BSR set to: 0
  8370  002658  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8371  00265A  0D02               	mullw	2
  8372  00265C  0EBB               	movlw	low _pBDTEntryIn
  8373  00265E  24F3               	addwf	prodl,w,c
  8374  002660  6ED9               	movwf	fsr2l,c
  8375  002662  0E00               	movlw	high _pBDTEntryIn
  8376  002664  20F4               	addwfc	prodh,w,c
  8377  002666  6EDA               	movwf	fsr2h,c
  8378  002668  0E00               	movlw	0
  8379  00266A  6EDE               	movwf	postinc2,c
  8380  00266C  0E00               	movlw	0
  8381  00266E  6EDD               	movwf	postdec2,c
  8382                           
  8383                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8384  002670  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8385  002672  0D02               	mullw	2
  8386  002674  0E0E               	movlw	low _pBDTEntryOut
  8387  002676  24F3               	addwf	prodl,w,c
  8388  002678  6ED9               	movwf	fsr2l,c
  8389  00267A  0E03               	movlw	high _pBDTEntryOut
  8390  00267C  20F4               	addwfc	prodh,w,c
  8391  00267E  6EDA               	movwf	fsr2h,c
  8392  002680  0E00               	movlw	0
  8393  002682  6EDE               	movwf	postinc2,c
  8394  002684  0E00               	movlw	0
  8395  002686  6EDD               	movwf	postdec2,c
  8396                           
  8397                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8398  002688  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8399  00268A  0D01               	mullw	1
  8400  00268C  0ED2               	movlw	low _ep_data_in
  8401  00268E  24F3               	addwf	prodl,w,c
  8402  002690  6ED9               	movwf	fsr2l,c
  8403  002692  0E02               	movlw	high _ep_data_in
  8404  002694  20F4               	addwfc	prodh,w,c
  8405  002696  6EDA               	movwf	fsr2h,c
  8406  002698  0E00               	movlw	0
  8407  00269A  6EDF               	movwf	indf2,c
  8408                           
  8409                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8410  00269C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8411  00269E  0D01               	mullw	1
  8412  0026A0  0ECF               	movlw	low _ep_data_out
  8413  0026A2  24F3               	addwf	prodl,w,c
  8414  0026A4  6ED9               	movwf	fsr2l,c
  8415  0026A6  0E02               	movlw	high _ep_data_out
  8416  0026A8  20F4               	addwfc	prodh,w,c
  8417  0026AA  6EDA               	movwf	fsr2h,c
  8418  0026AC  0E00               	movlw	0
  8419  0026AE  6EDF               	movwf	indf2,c
  8420                           
  8421                           ; BSR set to: 0
  8422  0026B0  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8423  0026B2  D7CE               	goto	l13313
  8424  0026B4                     u12450:
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;usb_device.c: 369: }
  8428                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8429                           
  8430                           ; BSR set to: 0
  8431  0026B4  0E08               	movlw	8
  8432  0026B6  6FBB               	movwf	_pBDTEntryIn& (0+255),b
  8433  0026B8  0E04               	movlw	4
  8434  0026BA  6FBC               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8438  0026BC  0E16               	movlw	22
  8439  0026BE  010F               	movlb	15	; () banked
  8440  0026C0  6F26               	movwf	38,b	;volatile
  8441                           
  8442                           ; BSR set to: 15
  8443                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8444  0026C2  0E04               	movlw	4
  8445  0026C4  0104               	movlb	4	; () banked
  8446  0026C6  6F03               	movwf	3,b	;volatile
  8447  0026C8  0E30               	movlw	48
  8448  0026CA  6F02               	movwf	2,b	;volatile
  8449                           
  8450                           ; BSR set to: 4
  8451                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8452  0026CC  0E08               	movlw	8
  8453  0026CE  6F01               	movwf	1,b	;volatile
  8454                           
  8455                           ; BSR set to: 4
  8456                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8457  0026D0  0E04               	movlw	4
  8458  0026D2  6F00               	movwf	0,b	;volatile
  8459                           
  8460                           ; BSR set to: 4
  8461                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8462  0026D4  8F00               	bsf	0,7,b	;volatile
  8463                           
  8464                           ; BSR set to: 4
  8465                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8466  0026D6  0E00               	movlw	0
  8467  0026D8  0100               	movlb	0	; () banked
  8468  0026DA  6FD8               	movwf	_USBActiveConfiguration& (0+255),b
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;usb_device.c: 384: USB1msTickCount = 0;
  8472  0026DC  0E00               	movlw	0
  8473  0026DE  0103               	movlb	3	; () banked
  8474  0026E0  6F18               	movwf	_USB1msTickCount& (0+255),b
  8475  0026E2  0E00               	movlw	0
  8476  0026E4  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8477  0026E6  0E00               	movlw	0
  8478  0026E8  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8479  0026EA  0E00               	movlw	0
  8480  0026EC  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8481                           
  8482                           ; BSR set to: 3
  8483                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8484  0026EE  0E00               	movlw	0
  8485  0026F0  0101               	movlb	1	; () banked
  8486  0026F2  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8487                           
  8488                           ; BSR set to: 1
  8489                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8490  0026F4  0E00               	movlw	0
  8491  0026F6  0100               	movlb	0	; () banked
  8492  0026F8  6FD0               	movwf	_USBDeviceState& (0+255),b
  8493                           
  8494                           ; BSR set to: 0
  8495  0026FA  0012               	return		;funcret
  8496  0026FC                     __end_of_USBDeviceInit:
  8497                           	opt stack 0
  8498                           tosu	equ	0xFFF
  8499                           tosh	equ	0xFFE
  8500                           tosl	equ	0xFFD
  8501                           pclath	equ	0xFFA
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           intcon2	equ	0xFF1
  8510                           intcon3	equ	0xFF0
  8511                           postinc0	equ	0xFEE
  8512                           plusw0	equ	0xFEB
  8513                           wreg	equ	0xFE8
  8514                           postinc1	equ	0xFE6
  8515                           postdec1	equ	0xFE5
  8516                           plusw1	equ	0xFE3
  8517                           fsr1h	equ	0xFE2
  8518                           fsr1l	equ	0xFE1
  8519                           indf2	equ	0xFDF
  8520                           postinc2	equ	0xFDE
  8521                           postdec2	equ	0xFDD
  8522                           plusw2	equ	0xFDB
  8523                           fsr2h	equ	0xFDA
  8524                           fsr2l	equ	0xFD9
  8525                           status	equ	0xFD8
  8526                           
  8527 ;; *************** function _USBCtrlEPService *****************
  8528 ;; Defined at:
  8529 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;		None
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8546 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;Total ram usage:        1 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:   18
  8550 ;; This function calls:
  8551 ;;		_USBCtrlTrfInHandler
  8552 ;;		_USBCtrlTrfOutHandler
  8553 ;;		_USBCtrlTrfSetupHandler
  8554 ;;		_memcpy
  8555 ;; This function is called by:
  8556 ;;		_USBDeviceTasks
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text34
  8561  0048CA                     __ptext34:
  8562                           	opt stack 0
  8563  0048CA                     _USBCtrlEPService:
  8564                           	opt stack 8
  8565                           
  8566                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;incstack = 0
  8570  0048CA  0E2D               	movlw	45
  8571  0048CC  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8572                           
  8573                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8574  0048CE  C0D7  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8575  0048D2  0EFD               	movlw	253
  8576  0048D4  0100               	movlb	0	; () banked
  8577  0048D6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8578  0048D8  A4D8               	btfss	status,2,c
  8579  0048DA  D038               	goto	l1771
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;usb_device.c: 2401: {
  8583                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8584  0048DC  C0D7  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8585  0048E0  90D8               	bcf	status,0,c
  8586  0048E2  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8587  0048E4  0E3F               	movlw	63
  8588  0048E6  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8589  0048E8  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8590  0048EA  0D04               	mullw	4
  8591  0048EC  0E00               	movlw	0
  8592  0048EE  24F3               	addwf	prodl,w,c
  8593  0048F0  6FC5               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8594  0048F2  0E04               	movlw	4
  8595  0048F4  20F4               	addwfc	prodh,w,c
  8596  0048F6  6FC6               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8600  0048F8  C0C5  F0C3         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8601  0048FC  C0C6  F0C4         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8605  004900  0E04               	movlw	4
  8606  004902  1BC3               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8610  004904  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8611  004908  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8612  00490C  30DF               	rrcf	223,w,c
  8613  00490E  32E8               	rrcf	wreg,f,c
  8614  004910  0B0F               	andlw	15
  8615  004912  0A0D               	xorlw	13
  8616  004914  A4D8               	btfss	status,2,c
  8617  004916  D017               	goto	l1772
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;usb_device.c: 2418: {
  8621                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8622  004918  0E30               	movlw	48
  8623  00491A  6F7D               	movwf	memcpy@d1& (0+255),b
  8624  00491C  0E04               	movlw	4
  8625  00491E  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8626  004920  EE20 F002          	lfsr	2,2
  8627  004924  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8628  004926  26D9               	addwf	fsr2l,f,c
  8629  004928  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8630  00492A  22DA               	addwfc	fsr2h,f,c
  8631  00492C  CFDE F07F          	movff	postinc2,memcpy@s1
  8632  004930  CFDD F080          	movff	postdec2,memcpy@s1+1
  8633  004934  0E00               	movlw	0
  8634  004936  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8635  004938  0E08               	movlw	8
  8636  00493A  6F81               	movwf	memcpy@n& (0+255),b
  8637  00493C  EC9E  F02B         	call	_memcpy	;wreg free
  8638                           
  8639                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8640  004940  EC88  F025         	call	_USBCtrlTrfSetupHandler	;wreg free
  8641                           
  8642                           ;usb_device.c: 2427: }
  8643  004944  0012               	return	
  8644  004946                     l1772:
  8645                           
  8646                           ;usb_device.c: 2428: else
  8647                           ;usb_device.c: 2429: {
  8648                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8649  004946  ECE8  F027         	call	_USBCtrlTrfOutHandler	;wreg free
  8650                           
  8651                           ;usb_device.c: 2432: }
  8652                           ;usb_device.c: 2433: }
  8653  00494A  0012               	return	
  8654  00494C                     l1771:
  8655                           
  8656                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8657  00494C  0100               	movlb	0	; () banked
  8658  00494E  51D7               	movf	_USTATcopy& (0+255),w,b
  8659  004950  0BFD               	andlw	253
  8660  004952  0A04               	xorlw	4
  8661  004954  A4D8               	btfss	status,2,c
  8662  004956  0012               	return	
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;usb_device.c: 2435: {
  8666                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8667  004958  EC80  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8668  00495C  0012               	return	
  8669  00495E                     __end_of_USBCtrlEPService:
  8670                           	opt stack 0
  8671                           tosu	equ	0xFFF
  8672                           tosh	equ	0xFFE
  8673                           tosl	equ	0xFFD
  8674                           pclath	equ	0xFFA
  8675                           tblptru	equ	0xFF8
  8676                           tblptrh	equ	0xFF7
  8677                           tblptrl	equ	0xFF6
  8678                           tablat	equ	0xFF5
  8679                           prodh	equ	0xFF4
  8680                           prodl	equ	0xFF3
  8681                           intcon	equ	0xFF2
  8682                           intcon2	equ	0xFF1
  8683                           intcon3	equ	0xFF0
  8684                           postinc0	equ	0xFEE
  8685                           plusw0	equ	0xFEB
  8686                           wreg	equ	0xFE8
  8687                           postinc1	equ	0xFE6
  8688                           postdec1	equ	0xFE5
  8689                           plusw1	equ	0xFE3
  8690                           fsr1h	equ	0xFE2
  8691                           fsr1l	equ	0xFE1
  8692                           indf2	equ	0xFDF
  8693                           postinc2	equ	0xFDE
  8694                           postdec2	equ	0xFDD
  8695                           plusw2	equ	0xFDB
  8696                           fsr2h	equ	0xFDA
  8697                           fsr2l	equ	0xFD9
  8698                           status	equ	0xFD8
  8699                           
  8700 ;; *************** function _memcpy *****************
  8701 ;; Defined at:
  8702 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  d1              2   29[BANK0 ] PTR void 
  8705 ;;		 -> SetupPkt(8), 
  8706 ;;  s1              2   31[BANK0 ] PTR const void 
  8707 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8708 ;;  n               2   33[BANK0 ] unsigned int 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8711 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8712 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8713 ;;		 -> SetupPkt(8), 
  8714 ;;  tmp             1   35[BANK0 ] unsigned char 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  2   29[BANK0 ] PTR void 
  8717 ;; Registers used:
  8718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8724 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8727 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;Total ram usage:       11 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; Hardware stack levels required when called:   11
  8731 ;; This function calls:
  8732 ;;		Nothing
  8733 ;; This function is called by:
  8734 ;;		_USBCtrlEPService
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text35
  8739  00573C                     __ptext35:
  8740                           	opt stack 0
  8741  00573C                     _memcpy:
  8742                           	opt stack 14
  8743                           
  8744                           ;incstack = 0
  8745  00573C  C07F  F086         	movff	memcpy@s1,memcpy@s
  8746  005740  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8747  005744  C07D  F084         	movff	memcpy@d1,memcpy@d
  8748  005748  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8749  00574C  D011               	goto	l3072
  8750  00574E                     l12567:
  8751  00574E  C086  FFD9         	movff	memcpy@s,fsr2l
  8752  005752  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8753  005756  50DF               	movf	indf2,w,c
  8754  005758  0100               	movlb	0	; () banked
  8755  00575A  6F83               	movwf	memcpy@tmp& (0+255),b
  8756                           
  8757                           ; BSR set to: 0
  8758  00575C  4B86               	infsnz	memcpy@s& (0+255),f,b
  8759  00575E  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8760                           
  8761                           ; BSR set to: 0
  8762  005760  C084  FFD9         	movff	memcpy@d,fsr2l
  8763  005764  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8764  005768  C083  FFDF         	movff	memcpy@tmp,indf2
  8765                           
  8766                           ; BSR set to: 0
  8767  00576C  4B84               	infsnz	memcpy@d& (0+255),f,b
  8768  00576E  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8769  005770                     l3072:
  8770                           
  8771                           ; BSR set to: 0
  8772  005770  0100               	movlb	0	; () banked
  8773  005772  0781               	decf	memcpy@n& (0+255),f,b
  8774  005774  A0D8               	btfss	status,0,c
  8775  005776  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8776  005778  2981               	incf	memcpy@n& (0+255),w,b
  8777  00577A  E1E9               	bnz	l12567
  8778  00577C  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8779  00577E  B4D8               	btfsc	status,2,c
  8780  005780  0012               	return	
  8781  005782  D7E5               	goto	l3073
  8782  005784                     __end_of_memcpy:
  8783                           	opt stack 0
  8784                           tosu	equ	0xFFF
  8785                           tosh	equ	0xFFE
  8786                           tosl	equ	0xFFD
  8787                           pclath	equ	0xFFA
  8788                           tblptru	equ	0xFF8
  8789                           tblptrh	equ	0xFF7
  8790                           tblptrl	equ	0xFF6
  8791                           tablat	equ	0xFF5
  8792                           prodh	equ	0xFF4
  8793                           prodl	equ	0xFF3
  8794                           intcon	equ	0xFF2
  8795                           intcon2	equ	0xFF1
  8796                           intcon3	equ	0xFF0
  8797                           postinc0	equ	0xFEE
  8798                           plusw0	equ	0xFEB
  8799                           wreg	equ	0xFE8
  8800                           postinc1	equ	0xFE6
  8801                           postdec1	equ	0xFE5
  8802                           plusw1	equ	0xFE3
  8803                           fsr1h	equ	0xFE2
  8804                           fsr1l	equ	0xFE1
  8805                           indf2	equ	0xFDF
  8806                           postinc2	equ	0xFDE
  8807                           postdec2	equ	0xFDD
  8808                           plusw2	equ	0xFDB
  8809                           fsr2h	equ	0xFDA
  8810                           fsr2l	equ	0xFD9
  8811                           status	equ	0xFD8
  8812                           
  8813 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8814 ;; Defined at:
  8815 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;Total ram usage:        0 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:   17
  8836 ;; This function calls:
  8837 ;;		_USBCheckStdRequest
  8838 ;;		_USBCtrlEPServiceComplete
  8839 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8840 ;; This function is called by:
  8841 ;;		_USBCtrlEPService
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text36
  8846  004B10                     __ptext36:
  8847                           	opt stack 0
  8848  004B10                     _USBCtrlTrfSetupHandler:
  8849                           	opt stack 8
  8850                           
  8851                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;incstack = 0
  8855  004B10  0E00               	movlw	0
  8856  004B12  0100               	movlb	0	; () banked
  8857  004B14  6FCF               	movwf	_shortPacketStatus& (0+255),b
  8858                           
  8859                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8860  004B16  0E00               	movlw	0
  8861  004B18  6FCC               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8862                           
  8863                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8864  004B1A  0E00               	movlw	0
  8865  004B1C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8866                           
  8867                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8868  004B1E  0E00               	movlw	0
  8869  004B20  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8870                           
  8871                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8872  004B22  0E00               	movlw	0
  8873  004B24  0101               	movlb	1	; () banked
  8874  004B26  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8875                           
  8876                           ;usb_device.c: 2493: controlTransferState = 0;
  8877  004B28  0E00               	movlw	0
  8878  004B2A  0100               	movlb	0	; () banked
  8879  004B2C  6FCE               	movwf	_controlTransferState& (0+255),b
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8883  004B2E  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  8884  004B32  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8885  004B36  0E7F               	movlw	127
  8886  004B38  16DF               	andwf	indf2,f,c
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8890  004B3A  0E04               	movlw	4
  8891  004B3C  1BBB               	xorwf	_pBDTEntryIn& (0+255),f,b
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8895  004B3E  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  8896  004B42  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8897  004B46  0E7F               	movlw	127
  8898  004B48  16DF               	andwf	indf2,f,c
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8902  004B4A  0E04               	movlw	4
  8903  004B4C  1BBB               	xorwf	_pBDTEntryIn& (0+255),f,b
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8907  004B4E  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8908  004B52  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8909  004B56  0E7F               	movlw	127
  8910  004B58  16DF               	andwf	indf2,f,c
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8914  004B5A  0E00               	movlw	0
  8915  004B5C  6FB8               	movwf	(_inPipes+3)& (0+255),b
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8919  004B5E  0E00               	movlw	0
  8920  004B60  6FBA               	movwf	(_inPipes+5)& (0+255),b
  8921  004B62  0E00               	movlw	0
  8922  004B64  6FB9               	movwf	(_inPipes+4)& (0+255),b
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8926  004B66  0E00               	movlw	0
  8927  004B68  0101               	movlb	1	; () banked
  8928  004B6A  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8929                           
  8930                           ; BSR set to: 1
  8931                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8932  004B6C  0E00               	movlw	0
  8933  004B6E  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8934  004B70  0E00               	movlw	0
  8935  004B72  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8936                           
  8937                           ; BSR set to: 1
  8938                           ;usb_device.c: 2517: USBCheckStdRequest();
  8939  004B74  ECA2  F01A         	call	_USBCheckStdRequest	;wreg free
  8940                           
  8941                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8942  004B78  0E00               	movlw	0
  8943  004B7A  0100               	movlb	0	; () banked
  8944  004B7C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8945  004B7E  0E03               	movlw	3
  8946  004B80  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8947  004B82  0E00               	movlw	0
  8948  004B84  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8949  004B86  0E00               	movlw	0
  8950  004B88  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8951  004B8A  0E00               	movlw	0
  8952  004B8C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8953  004B8E  0E00               	movlw	0
  8954  004B90  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8955  004B92  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8956                           
  8957                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8958  004B96  EC52  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  8959  004B9A  0012               	return		;funcret
  8960  004B9C                     __end_of_USBCtrlTrfSetupHandler:
  8961                           	opt stack 0
  8962                           tosu	equ	0xFFF
  8963                           tosh	equ	0xFFE
  8964                           tosl	equ	0xFFD
  8965                           pclath	equ	0xFFA
  8966                           tblptru	equ	0xFF8
  8967                           tblptrh	equ	0xFF7
  8968                           tblptrl	equ	0xFF6
  8969                           tablat	equ	0xFF5
  8970                           prodh	equ	0xFF4
  8971                           prodl	equ	0xFF3
  8972                           intcon	equ	0xFF2
  8973                           intcon2	equ	0xFF1
  8974                           intcon3	equ	0xFF0
  8975                           postinc0	equ	0xFEE
  8976                           plusw0	equ	0xFEB
  8977                           wreg	equ	0xFE8
  8978                           postinc1	equ	0xFE6
  8979                           postdec1	equ	0xFE5
  8980                           plusw1	equ	0xFE3
  8981                           fsr1h	equ	0xFE2
  8982                           fsr1l	equ	0xFE1
  8983                           indf2	equ	0xFDF
  8984                           postinc2	equ	0xFDE
  8985                           postdec2	equ	0xFDD
  8986                           plusw2	equ	0xFDB
  8987                           fsr2h	equ	0xFDA
  8988                           fsr2l	equ	0xFD9
  8989                           status	equ	0xFD8
  8990                           
  8991 ;; *************** function _USBCtrlEPServiceComplete *****************
  8992 ;; Defined at:
  8993 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;Total ram usage:        0 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:   13
  9014 ;; This function calls:
  9015 ;;		_USBCtrlEPAllowDataStage
  9016 ;;		_USBCtrlEPAllowStatusStage
  9017 ;; This function is called by:
  9018 ;;		_USBCtrlTrfSetupHandler
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           	psect	text37
  9023  0030A4                     __ptext37:
  9024                           	opt stack 0
  9025  0030A4                     _USBCtrlEPServiceComplete:
  9026                           	opt stack 11
  9027                           
  9028                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9029                           
  9030                           ;incstack = 0
  9031  0030A4  9865               	bcf	3941,4,c	;volatile
  9032                           
  9033                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9034  0030A6  0100               	movlb	0	; () banked
  9035  0030A8  BFB8               	btfsc	(_inPipes+3)& (0+255),7,b
  9036  0030AA  D03B               	goto	l1681
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;usb_device.c: 1647: {
  9040                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9041  0030AC  0101               	movlb	1	; () banked
  9042  0030AE  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9043  0030B0  D00C               	goto	l1682
  9044                           
  9045                           ; BSR set to: 1
  9046                           ;usb_device.c: 1649: {
  9047                           ;usb_device.c: 1650: controlTransferState = 2;
  9048  0030B2  0E02               	movlw	2
  9049  0030B4  0100               	movlb	0	; () banked
  9050  0030B6  6FCE               	movwf	_controlTransferState& (0+255),b
  9051                           
  9052                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9053  0030B8  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9054  0030BA  B4D8               	btfsc	status,2,c
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;usb_device.c: 1662: {
  9058                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9059  0030BC  ECE5  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9060                           
  9061                           ;usb_device.c: 1664: }
  9062                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9063  0030C0  0E00               	movlw	0
  9064  0030C2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9065                           
  9066                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9067  0030C4  0E00               	movlw	0
  9068  0030C6  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9069                           
  9070                           ;usb_device.c: 1670: }
  9071  0030C8  0012               	return	
  9072  0030CA                     l1682:
  9073                           
  9074                           ;usb_device.c: 1671: else
  9075                           ;usb_device.c: 1672: {
  9076                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9077  0030CA  0100               	movlb	0	; () banked
  9078  0030CC  EE20 F001          	lfsr	2,1
  9079  0030D0  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9080  0030D2  26D9               	addwf	fsr2l,f,c
  9081  0030D4  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9082  0030D6  22DA               	addwfc	fsr2h,f,c
  9083  0030D8  0E08               	movlw	8
  9084  0030DA  6EDF               	movwf	indf2,c
  9085                           
  9086                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9087  0030DC  EE20 F002          	lfsr	2,2
  9088  0030E0  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9089  0030E2  26D9               	addwf	fsr2l,f,c
  9090  0030E4  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9091  0030E6  22DA               	addwfc	fsr2h,f,c
  9092  0030E8  0E30               	movlw	48
  9093  0030EA  6EDE               	movwf	postinc2,c
  9094  0030EC  0E04               	movlw	4
  9095  0030EE  6EDD               	movwf	postdec2,c
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9099  0030F0  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9100  0030F4  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9101  0030F8  0E0C               	movlw	12
  9102  0030FA  6EDF               	movwf	indf2,c
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9106  0030FC  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9107  003100  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9108  003104  0E00               	movlw	0
  9109  003106  8EDB               	bsf	plusw2,7,c
  9110                           
  9111                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9112  003108  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9113  00310C  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9114  003110  0E04               	movlw	4
  9115  003112  6EDF               	movwf	indf2,c
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9119  003114  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9120  003118  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9121  00311C  0E00               	movlw	0
  9122  00311E  8EDB               	bsf	plusw2,7,c
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;usb_device.c: 1683: }
  9126                           ;usb_device.c: 1684: }
  9127  003120  0012               	return	
  9128  003122                     l1681:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;usb_device.c: 1685: else
  9132                           ;usb_device.c: 1686: {
  9133                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9134  003122  0104               	movlb	4	; () banked
  9135  003124  AF30               	btfss	48,7,b	;volatile
  9136  003126  D012               	goto	l1686
  9137                           
  9138                           ; BSR set to: 4
  9139                           ;usb_device.c: 1688: {
  9140                           ;usb_device.c: 1689: controlTransferState = 1;
  9141  003128  0E01               	movlw	1
  9142  00312A  0100               	movlb	0	; () banked
  9143  00312C  6FCE               	movwf	_controlTransferState& (0+255),b
  9144                           
  9145                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9146  00312E  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9147  003130  B4D8               	btfsc	status,2,c
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;usb_device.c: 1704: {
  9151                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9152  003132  ECE5  F022         	call	_USBCtrlEPAllowDataStage	;wreg free
  9153                           
  9154                           ;usb_device.c: 1706: }
  9155                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9156  003136  0E00               	movlw	0
  9157  003138  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9158                           
  9159                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9160  00313A  0E00               	movlw	0
  9161  00313C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9162                           
  9163                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9164  00313E  0100               	movlb	0	; () banked
  9165  003140  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9166  003142  A4D8               	btfss	status,2,c
  9167  003144  0012               	return	
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;usb_device.c: 1731: {
  9171                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9172  003146  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9173                           
  9174                           ;usb_device.c: 1733: }
  9175                           ;usb_device.c: 1734: }
  9176  00314A  0012               	return	
  9177  00314C                     l1686:
  9178                           
  9179                           ;usb_device.c: 1735: else
  9180                           ;usb_device.c: 1736: {
  9181                           ;usb_device.c: 1747: controlTransferState = 2;
  9182  00314C  0E02               	movlw	2
  9183  00314E  0100               	movlb	0	; () banked
  9184  003150  6FCE               	movwf	_controlTransferState& (0+255),b
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9188  003152  EE20 F001          	lfsr	2,1
  9189  003156  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9190  003158  26D9               	addwf	fsr2l,f,c
  9191  00315A  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9192  00315C  22DA               	addwfc	fsr2h,f,c
  9193  00315E  0E08               	movlw	8
  9194  003160  6EDF               	movwf	indf2,c
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9198  003162  EE20 F002          	lfsr	2,2
  9199  003166  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9200  003168  26D9               	addwf	fsr2l,f,c
  9201  00316A  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9202  00316C  22DA               	addwfc	fsr2h,f,c
  9203  00316E  0E30               	movlw	48
  9204  003170  6EDE               	movwf	postinc2,c
  9205  003172  0E04               	movlw	4
  9206  003174  6EDD               	movwf	postdec2,c
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9210  003176  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9211  00317A  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9212  00317E  0E04               	movlw	4
  9213  003180  6EDF               	movwf	indf2,c
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9217  003182  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9218  003186  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9219  00318A  0E00               	movlw	0
  9220  00318C  8EDB               	bsf	plusw2,7,c
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9224  00318E  0E00               	movlw	0
  9225  003190  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9229  003192  0E00               	movlw	0
  9230  003194  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9234  003196  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9235  003198  A4D8               	btfss	status,2,c
  9236  00319A  0012               	return	
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;usb_device.c: 1759: {
  9240                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9241  00319C  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9242  0031A0  0012               	return	
  9243  0031A2                     __end_of_USBCtrlEPServiceComplete:
  9244                           	opt stack 0
  9245                           tosu	equ	0xFFF
  9246                           tosh	equ	0xFFE
  9247                           tosl	equ	0xFFD
  9248                           pclath	equ	0xFFA
  9249                           tblptru	equ	0xFF8
  9250                           tblptrh	equ	0xFF7
  9251                           tblptrl	equ	0xFF6
  9252                           tablat	equ	0xFF5
  9253                           prodh	equ	0xFF4
  9254                           prodl	equ	0xFF3
  9255                           intcon	equ	0xFF2
  9256                           intcon2	equ	0xFF1
  9257                           intcon3	equ	0xFF0
  9258                           postinc0	equ	0xFEE
  9259                           plusw0	equ	0xFEB
  9260                           wreg	equ	0xFE8
  9261                           postinc1	equ	0xFE6
  9262                           postdec1	equ	0xFE5
  9263                           plusw1	equ	0xFE3
  9264                           fsr1h	equ	0xFE2
  9265                           fsr1l	equ	0xFE1
  9266                           indf2	equ	0xFDF
  9267                           postinc2	equ	0xFDE
  9268                           postdec2	equ	0xFDD
  9269                           plusw2	equ	0xFDB
  9270                           fsr2h	equ	0xFDA
  9271                           fsr2l	equ	0xFD9
  9272                           status	equ	0xFD8
  9273                           
  9274 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9275 ;; Defined at:
  9276 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:   12
  9297 ;; This function calls:
  9298 ;;		_USBCtrlTrfTxService
  9299 ;; This function is called by:
  9300 ;;		_USBCtrlEPServiceComplete
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text38
  9305  0045CA                     __ptext38:
  9306                           	opt stack 0
  9307  0045CA                     _USBCtrlEPAllowDataStage:
  9308                           	opt stack 11
  9309                           
  9310                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9311                           
  9312                           ;incstack = 0
  9313  0045CA  0E00               	movlw	0
  9314  0045CC  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9315                           
  9316                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9317  0045CE  0E00               	movlw	0
  9318  0045D0  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9319                           
  9320                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9321  0045D2  0E02               	movlw	2
  9322  0045D4  0100               	movlb	0	; () banked
  9323  0045D6  19CE               	xorwf	_controlTransferState& (0+255),w,b
  9324  0045D8  A4D8               	btfss	status,2,c
  9325  0045DA  D01F               	goto	l1670
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;usb_device.c: 1512: {
  9329                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9330  0045DC  EE20 F001          	lfsr	2,1
  9331  0045E0  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9332  0045E2  26D9               	addwf	fsr2l,f,c
  9333  0045E4  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9334  0045E6  22DA               	addwfc	fsr2h,f,c
  9335  0045E8  0E08               	movlw	8
  9336  0045EA  6EDF               	movwf	indf2,c
  9337                           
  9338                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9339  0045EC  EE20 F002          	lfsr	2,2
  9340  0045F0  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9341  0045F2  26D9               	addwf	fsr2l,f,c
  9342  0045F4  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9343  0045F6  22DA               	addwfc	fsr2h,f,c
  9344  0045F8  0E38               	movlw	56
  9345  0045FA  6EDE               	movwf	postinc2,c
  9346  0045FC  0E04               	movlw	4
  9347  0045FE  6EDD               	movwf	postdec2,c
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9351  004600  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9352  004604  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9353  004608  0E48               	movlw	72
  9354  00460A  6EDF               	movwf	indf2,c
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9358  00460C  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9359  004610  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9360  004614  0E00               	movlw	0
  9361  004616  8EDB               	bsf	plusw2,7,c
  9362                           
  9363                           ;usb_device.c: 1518: }
  9364  004618  0012               	return	
  9365  00461A                     l1670:
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;usb_device.c: 1519: else
  9369                           ;usb_device.c: 1520: {
  9370                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9371                           
  9372                           ; BSR set to: 0
  9373  00461A  51B9               	movf	(_inPipes+4)& (0+255),w,b
  9374  00461C  0104               	movlb	4	; () banked
  9375  00461E  5D36               	subwf	54,w,b	;volatile
  9376  004620  0100               	movlb	0	; () banked
  9377  004622  51BA               	movf	(_inPipes+5)& (0+255),w,b
  9378  004624  0104               	movlb	4	; () banked
  9379  004626  5937               	subwfb	55,w,b	;volatile
  9380  004628  B0D8               	btfsc	status,0,c
  9381  00462A  D004               	goto	l1672
  9382                           
  9383                           ; BSR set to: 4
  9384                           ;usb_device.c: 1524: {
  9385                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9386  00462C  C436 F0B9          	movff	1078,_inPipes+4	;volatile
  9387  004630  C437 F0BA          	movff	1079,_inPipes+5	;volatile
  9388  004634                     l1672:
  9389                           
  9390                           ; BSR set to: 4
  9391                           ;usb_device.c: 1526: }
  9392                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9393                           
  9394                           ; BSR set to: 4
  9395  004634  EC82  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9396                           
  9397                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9398  004638  0100               	movlb	0	; () banked
  9399  00463A  EE20 F002          	lfsr	2,2
  9400  00463E  51BB               	movf	_pBDTEntryIn& (0+255),w,b
  9401  004640  26D9               	addwf	fsr2l,f,c
  9402  004642  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9403  004644  22DA               	addwfc	fsr2h,f,c
  9404  004646  0E38               	movlw	56
  9405  004648  6EDE               	movwf	postinc2,c
  9406  00464A  0E04               	movlw	4
  9407  00464C  6EDD               	movwf	postdec2,c
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9411  00464E  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9412  004652  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9413  004656  0E48               	movlw	72
  9414  004658  6EDF               	movwf	indf2,c
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9418  00465A  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
  9419  00465E  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9420  004662  0E00               	movlw	0
  9421  004664  8EDB               	bsf	plusw2,7,c
  9422  004666  0012               	return	
  9423  004668                     __end_of_USBCtrlEPAllowDataStage:
  9424                           	opt stack 0
  9425                           tosu	equ	0xFFF
  9426                           tosh	equ	0xFFE
  9427                           tosl	equ	0xFFD
  9428                           pclath	equ	0xFFA
  9429                           tblptru	equ	0xFF8
  9430                           tblptrh	equ	0xFF7
  9431                           tblptrl	equ	0xFF6
  9432                           tablat	equ	0xFF5
  9433                           prodh	equ	0xFF4
  9434                           prodl	equ	0xFF3
  9435                           intcon	equ	0xFF2
  9436                           intcon2	equ	0xFF1
  9437                           intcon3	equ	0xFF0
  9438                           postinc0	equ	0xFEE
  9439                           plusw0	equ	0xFEB
  9440                           wreg	equ	0xFE8
  9441                           postinc1	equ	0xFE6
  9442                           postdec1	equ	0xFE5
  9443                           plusw1	equ	0xFE3
  9444                           fsr1h	equ	0xFE2
  9445                           fsr1l	equ	0xFE1
  9446                           indf2	equ	0xFDF
  9447                           postinc2	equ	0xFDE
  9448                           postdec2	equ	0xFDD
  9449                           plusw2	equ	0xFDB
  9450                           fsr2h	equ	0xFDA
  9451                           fsr2l	equ	0xFD9
  9452                           status	equ	0xFD8
  9453                           
  9454 ;; *************** function _USBCheckStdRequest *****************
  9455 ;; Defined at:
  9456 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;		None
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;		None
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9474 ;;Total ram usage:        0 bytes
  9475 ;; Hardware stack levels used:    1
  9476 ;; Hardware stack levels required when called:   16
  9477 ;; This function calls:
  9478 ;;		_USBStdFeatureReqHandler
  9479 ;;		_USBStdGetDscHandler
  9480 ;;		_USBStdGetStatusHandler
  9481 ;;		_USBStdSetCfgHandler
  9482 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9483 ;; This function is called by:
  9484 ;;		_USBCtrlTrfSetupHandler
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text39
  9489  003544                     __ptext39:
  9490                           	opt stack 0
  9491  003544                     _USBCheckStdRequest:
  9492                           	opt stack 8
  9493                           
  9494                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;incstack = 0
  9498  003544  0104               	movlb	4	; () banked
  9499  003546  3930               	swapf	48,w,b	;volatile
  9500  003548  32E8               	rrcf	wreg,f,c
  9501  00354A  0B03               	andlw	3
  9502  00354C  0900               	iorlw	0
  9503  00354E  A4D8               	btfss	status,2,c
  9504  003550  0012               	return	
  9505  003552  D048               	goto	l1805
  9506  003554                     l1806:
  9507                           
  9508                           ; BSR set to: 4
  9509                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9510  003554  0100               	movlb	0	; () banked
  9511  003556  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9515  003558  0E08               	movlw	8
  9516  00355A  6FD0               	movwf	_USBDeviceState& (0+255),b
  9517                           
  9518                           ;usb_device.c: 2713: break;
  9519  00355C  0012               	return	
  9520  00355E                     
  9521                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9522                           
  9523                           ; BSR set to: 0
  9524  00355E  EC96  F016         	call	_USBStdGetDscHandler	;wreg free
  9525                           
  9526                           ;usb_device.c: 2716: break;
  9527  003562  0012               	return	
  9528  003564                     
  9529                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9530  003564  ECBC  F019         	call	_USBStdSetCfgHandler	;wreg free
  9531                           
  9532                           ;usb_device.c: 2719: break;
  9533  003568  0012               	return	
  9534  00356A                     
  9535                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9536  00356A  0ED8               	movlw	low _USBActiveConfiguration
  9537  00356C  0100               	movlb	0	; () banked
  9538  00356E  6FB5               	movwf	_inPipes& (0+255),b
  9539  003570  0E00               	movlw	high _USBActiveConfiguration
  9540  003572  6FB6               	movwf	(_inPipes+1)& (0+255),b
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9544  003574  81B8               	bsf	(_inPipes+3)& (0+255),0,b
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9548  003576  0E01               	movlw	1
  9549  003578  6FB9               	movwf	(_inPipes+4)& (0+255),b
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9553  00357A  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9554                           
  9555                           ;usb_device.c: 2725: break;
  9556  00357C  0012               	return	
  9557  00357E                     
  9558                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9559                           
  9560                           ; BSR set to: 0
  9561  00357E  EC40  F020         	call	_USBStdGetStatusHandler	;wreg free
  9562                           
  9563                           ;usb_device.c: 2728: break;
  9564  003582  0012               	return	
  9565  003584                     
  9566                           ;usb_device.c: 2730: case 3:
  9567                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9568  003584  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9569                           
  9570                           ;usb_device.c: 2732: break;
  9571  003588  0012               	return	
  9572  00358A                     
  9573                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9574  00358A  0104               	movlb	4	; () banked
  9575  00358C  5134               	movf	52,w,b	;volatile
  9576  00358E  0D01               	mullw	1
  9577  003590  0EF1               	movlw	low _USBAlternateInterface
  9578  003592  24F3               	addwf	prodl,w,c
  9579  003594  0100               	movlb	0	; () banked
  9580  003596  6FB5               	movwf	_inPipes& (0+255),b
  9581  003598  0E02               	movlw	high _USBAlternateInterface
  9582  00359A  20F4               	addwfc	prodh,w,c
  9583  00359C  6FB6               	movwf	(_inPipes+1)& (0+255),b
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9587  00359E  81B8               	bsf	(_inPipes+3)& (0+255),0,b
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9591  0035A0  0E01               	movlw	1
  9592  0035A2  6FB9               	movwf	(_inPipes+4)& (0+255),b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9596  0035A4  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9597                           
  9598                           ;usb_device.c: 2738: break;
  9599  0035A6  0012               	return	
  9600  0035A8                     l1815:
  9601                           
  9602                           ; BSR set to: 4
  9603                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9604  0035A8  0100               	movlb	0	; () banked
  9605  0035AA  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9609  0035AC  0104               	movlb	4	; () banked
  9610  0035AE  5134               	movf	52,w,b	;volatile
  9611  0035B0  0D01               	mullw	1
  9612  0035B2  0EF1               	movlw	low _USBAlternateInterface
  9613  0035B4  24F3               	addwf	prodl,w,c
  9614  0035B6  6ED9               	movwf	fsr2l,c
  9615  0035B8  0E02               	movlw	high _USBAlternateInterface
  9616  0035BA  20F4               	addwfc	prodh,w,c
  9617  0035BC  6EDA               	movwf	fsr2h,c
  9618  0035BE  C432 FFDF          	movff	1074,indf2	;volatile
  9619                           
  9620                           ;usb_device.c: 2742: break;
  9621  0035C2  0012               	return	
  9622  0035C4                     
  9623                           ; BSR set to: 4
  9624                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9625                           
  9626                           ; BSR set to: 4
  9627  0035C4  0E00               	movlw	0
  9628  0035C6  0100               	movlb	0	; () banked
  9629  0035C8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9630  0035CA  0E02               	movlw	2
  9631  0035CC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9632  0035CE  0E00               	movlw	0
  9633  0035D0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9634  0035D2  0E00               	movlw	0
  9635  0035D4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9636  0035D6  0E00               	movlw	0
  9637  0035D8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9638  0035DA  0E00               	movlw	0
  9639  0035DC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9640  0035DE  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9641                           
  9642                           ;usb_device.c: 2749: }
  9643                           
  9644                           ;usb_device.c: 2748: break;
  9645                           
  9646                           ;usb_device.c: 2747: default:
  9647                           
  9648                           ;usb_device.c: 2746: case 12:
  9649                           
  9650                           ;usb_device.c: 2745: break;
  9651  0035E2  0012               	return	
  9652  0035E4                     l1805:
  9653  0035E4  0104               	movlb	4	; () banked
  9654  0035E6  5131               	movf	49,w,b	;volatile
  9655                           
  9656                           ; Switch size 1, requested type "space"
  9657                           ; Number of cases is 11, Range of values is 0 to 12
  9658                           ; switch strategies available:
  9659                           ; Name         Instructions Cycles
  9660                           ; simple_byte           34    18 (average)
  9661                           ;	Chosen strategy is simple_byte
  9662  0035E8  0A00               	xorlw	0	; case 0
  9663  0035EA  B4D8               	btfsc	status,2,c
  9664  0035EC  D7C8               	goto	l1811
  9665  0035EE  0A01               	xorlw	1	; case 1
  9666  0035F0  B4D8               	btfsc	status,2,c
  9667  0035F2  D7C8               	goto	l1812
  9668  0035F4  0A02               	xorlw	2	; case 3
  9669  0035F6  B4D8               	btfsc	status,2,c
  9670  0035F8  D7C5               	goto	l1812
  9671  0035FA  0A06               	xorlw	6	; case 5
  9672  0035FC  B4D8               	btfsc	status,2,c
  9673  0035FE  D7AA               	goto	l1806
  9674  003600  0A03               	xorlw	3	; case 6
  9675  003602  B4D8               	btfsc	status,2,c
  9676  003604  D7AC               	goto	l1808
  9677  003606  0A01               	xorlw	1	; case 7
  9678  003608  B4D8               	btfsc	status,2,c
  9679  00360A  D7DC               	goto	l1816
  9680  00360C  0A0F               	xorlw	15	; case 8
  9681  00360E  B4D8               	btfsc	status,2,c
  9682  003610  D7AC               	goto	l1810
  9683  003612  0A01               	xorlw	1	; case 9
  9684  003614  B4D8               	btfsc	status,2,c
  9685  003616  D7A6               	goto	l1809
  9686  003618  0A03               	xorlw	3	; case 10
  9687  00361A  B4D8               	btfsc	status,2,c
  9688  00361C  D7B6               	goto	l1814
  9689  00361E  0A01               	xorlw	1	; case 11
  9690  003620  B4D8               	btfsc	status,2,c
  9691  003622  D7C2               	goto	l1815
  9692  003624  0A07               	xorlw	7	; case 12
  9693  003626  0012               	return	
  9694  003628                     __end_of_USBCheckStdRequest:
  9695                           	opt stack 0
  9696                           tosu	equ	0xFFF
  9697                           tosh	equ	0xFFE
  9698                           tosl	equ	0xFFD
  9699                           pclath	equ	0xFFA
  9700                           tblptru	equ	0xFF8
  9701                           tblptrh	equ	0xFF7
  9702                           tblptrl	equ	0xFF6
  9703                           tablat	equ	0xFF5
  9704                           prodh	equ	0xFF4
  9705                           prodl	equ	0xFF3
  9706                           intcon	equ	0xFF2
  9707                           intcon2	equ	0xFF1
  9708                           intcon3	equ	0xFF0
  9709                           postinc0	equ	0xFEE
  9710                           plusw0	equ	0xFEB
  9711                           wreg	equ	0xFE8
  9712                           postinc1	equ	0xFE6
  9713                           postdec1	equ	0xFE5
  9714                           plusw1	equ	0xFE3
  9715                           fsr1h	equ	0xFE2
  9716                           fsr1l	equ	0xFE1
  9717                           indf2	equ	0xFDF
  9718                           postinc2	equ	0xFDE
  9719                           postdec2	equ	0xFDD
  9720                           plusw2	equ	0xFDB
  9721                           fsr2h	equ	0xFDA
  9722                           fsr2l	equ	0xFD9
  9723                           status	equ	0xFD8
  9724                           
  9725 ;; *************** function _USBStdSetCfgHandler *****************
  9726 ;; Defined at:
  9727 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;  i               1   49[BANK0 ] unsigned char 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9745 ;;Total ram usage:        1 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:   15
  9748 ;; This function calls:
  9749 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9750 ;;		_memset
  9751 ;; This function is called by:
  9752 ;;		_USBCheckStdRequest
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text40
  9757  003378                     __ptext40:
  9758                           	opt stack 0
  9759  003378                     _USBStdSetCfgHandler:
  9760                           	opt stack 8
  9761                           
  9762                           ;usb_device.c: 1988: uint8_t i;
  9763                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9764                           
  9765                           ;incstack = 0
  9766  003378  0100               	movlb	0	; () banked
  9767  00337A  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9771  00337C  0E27               	movlw	39
  9772  00337E  6F7D               	movwf	memset@p1& (0+255),b
  9773  003380  0E0F               	movlw	15
  9774  003382  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9775  003384  0E00               	movlw	0
  9776  003386  6F80               	movwf	(memset@c+1)& (0+255),b
  9777  003388  0E00               	movlw	0
  9778  00338A  6F7F               	movwf	memset@c& (0+255),b
  9779  00338C  0E00               	movlw	0
  9780  00338E  6F82               	movwf	(memset@n+1)& (0+255),b
  9781  003390  0E02               	movlw	2
  9782  003392  6F81               	movwf	memset@n& (0+255),b
  9783  003394  EC5C  F02E         	call	_memset	;wreg free
  9784                           
  9785                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9786  003398  0E00               	movlw	0
  9787  00339A  0100               	movlb	0	; () banked
  9788  00339C  6F7D               	movwf	memset@p1& (0+255),b
  9789  00339E  0E04               	movlw	4
  9790  0033A0  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9791  0033A2  0E00               	movlw	0
  9792  0033A4  6F80               	movwf	(memset@c+1)& (0+255),b
  9793  0033A6  0E00               	movlw	0
  9794  0033A8  6F7F               	movwf	memset@c& (0+255),b
  9795  0033AA  0E00               	movlw	0
  9796  0033AC  6F82               	movwf	(memset@n+1)& (0+255),b
  9797  0033AE  0E30               	movlw	48
  9798  0033B0  6F81               	movwf	memset@n& (0+255),b
  9799  0033B2  EC5C  F02E         	call	_memset	;wreg free
  9800                           
  9801                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9802  0033B6  8C65               	bsf	3941,6,c	;volatile
  9803                           
  9804                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9805  0033B8  0E00               	movlw	0
  9806  0033BA  0100               	movlb	0	; () banked
  9807  0033BC  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9808  0033BE                     l11845:
  9809                           
  9810                           ; BSR set to: 0
  9811  0033BE  0E02               	movlw	2
  9812  0033C0  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9813  0033C2  D001               	goto	l1722
  9814  0033C4  D016               	goto	u10470
  9815  0033C6                     l1722:
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;usb_device.c: 2006: {
  9819                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9820                           
  9821                           ; BSR set to: 0
  9822  0033C6  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9823  0033C8  0D01               	mullw	1
  9824  0033CA  0ED2               	movlw	low _ep_data_in
  9825  0033CC  24F3               	addwf	prodl,w,c
  9826  0033CE  6ED9               	movwf	fsr2l,c
  9827  0033D0  0E02               	movlw	high _ep_data_in
  9828  0033D2  20F4               	addwfc	prodh,w,c
  9829  0033D4  6EDA               	movwf	fsr2h,c
  9830  0033D6  0E00               	movlw	0
  9831  0033D8  6EDF               	movwf	indf2,c
  9832                           
  9833                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9834  0033DA  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9835  0033DC  0D01               	mullw	1
  9836  0033DE  0ECF               	movlw	low _ep_data_out
  9837  0033E0  24F3               	addwf	prodl,w,c
  9838  0033E2  6ED9               	movwf	fsr2l,c
  9839  0033E4  0E02               	movlw	high _ep_data_out
  9840  0033E6  20F4               	addwfc	prodh,w,c
  9841  0033E8  6EDA               	movwf	fsr2h,c
  9842  0033EA  0E00               	movlw	0
  9843  0033EC  6EDF               	movwf	indf2,c
  9844                           
  9845                           ; BSR set to: 0
  9846  0033EE  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9847  0033F0  D7E6               	goto	l11845
  9848  0033F2                     u10470:
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;usb_device.c: 2009: }
  9852                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9853                           
  9854                           ; BSR set to: 0
  9855  0033F2  0EF1               	movlw	low _USBAlternateInterface
  9856  0033F4  6F7D               	movwf	memset@p1& (0+255),b
  9857  0033F6  0E02               	movlw	high _USBAlternateInterface
  9858  0033F8  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9859  0033FA  0E00               	movlw	0
  9860  0033FC  6F80               	movwf	(memset@c+1)& (0+255),b
  9861  0033FE  0E00               	movlw	0
  9862  003400  6F7F               	movwf	memset@c& (0+255),b
  9863  003402  0E00               	movlw	0
  9864  003404  6F82               	movwf	(memset@n+1)& (0+255),b
  9865  003406  0E02               	movlw	2
  9866  003408  6F81               	movwf	memset@n& (0+255),b
  9867  00340A  EC5C  F02E         	call	_memset	;wreg free
  9868                           
  9869                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9870  00340E  9C65               	bcf	3941,6,c	;volatile
  9871                           
  9872                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9873  003410  0E08               	movlw	8
  9874  003412  0100               	movlb	0	; () banked
  9875  003414  6FBB               	movwf	_pBDTEntryIn& (0+255),b
  9876  003416  0E04               	movlw	4
  9877  003418  6FBC               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9881  00341A  0E00               	movlw	0
  9882  00341C  6FC5               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9883  00341E  0E04               	movlw	4
  9884  003420  6FC6               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9888  003422  C0C5  F0C3         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9889  003426  C0C6  F0C4         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9893  00342A  C432 F0D8          	movff	1074,_USBActiveConfiguration	;volatile
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9897  00342E  51D8               	movf	_USBActiveConfiguration& (0+255),w,b
  9898  003430  A4D8               	btfss	status,2,c
  9899  003432  D003               	goto	l1724
  9900                           
  9901                           ; BSR set to: 0
  9902                           ;usb_device.c: 2028: {
  9903                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9904  003434  0E10               	movlw	16
  9905  003436  6FD0               	movwf	_USBDeviceState& (0+255),b
  9906                           
  9907                           ;usb_device.c: 2031: }
  9908  003438  0012               	return	
  9909  00343A                     l1724:
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;usb_device.c: 2032: else
  9913                           ;usb_device.c: 2033: {
  9914                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9915                           
  9916                           ; BSR set to: 0
  9917  00343A  0E00               	movlw	0
  9918  00343C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9919  00343E  0E01               	movlw	1
  9920  003440  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9921  003442  0ED8               	movlw	low _USBActiveConfiguration
  9922  003444  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9923  003446  0E00               	movlw	high _USBActiveConfiguration
  9924  003448  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9925  00344A  0E00               	movlw	0
  9926  00344C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9927  00344E  0E01               	movlw	1
  9928  003450  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9929  003452  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9930                           
  9931                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9932  003456  0E20               	movlw	32
  9933  003458  0100               	movlb	0	; () banked
  9934  00345A  6FD0               	movwf	_USBDeviceState& (0+255),b
  9935  00345C  0012               	return	
  9936  00345E                     __end_of_USBStdSetCfgHandler:
  9937                           	opt stack 0
  9938                           tosu	equ	0xFFF
  9939                           tosh	equ	0xFFE
  9940                           tosl	equ	0xFFD
  9941                           pclath	equ	0xFFA
  9942                           tblptru	equ	0xFF8
  9943                           tblptrh	equ	0xFF7
  9944                           tblptrl	equ	0xFF6
  9945                           tablat	equ	0xFF5
  9946                           prodh	equ	0xFF4
  9947                           prodl	equ	0xFF3
  9948                           intcon	equ	0xFF2
  9949                           intcon2	equ	0xFF1
  9950                           intcon3	equ	0xFF0
  9951                           postinc0	equ	0xFEE
  9952                           plusw0	equ	0xFEB
  9953                           wreg	equ	0xFE8
  9954                           postinc1	equ	0xFE6
  9955                           postdec1	equ	0xFE5
  9956                           plusw1	equ	0xFE3
  9957                           fsr1h	equ	0xFE2
  9958                           fsr1l	equ	0xFE1
  9959                           indf2	equ	0xFDF
  9960                           postinc2	equ	0xFDE
  9961                           postdec2	equ	0xFDD
  9962                           plusw2	equ	0xFDB
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _USBStdGetStatusHandler *****************
  9968 ;; Defined at:
  9969 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9974 ;;		 -> NULL(0), BDT(48), 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  1    wreg      void 
  9977 ;; Registers used:
  9978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9985 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9986 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9987 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9988 ;;Total ram usage:        3 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:   11
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_USBCheckStdRequest
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text41
  9999  004080                     __ptext41:
 10000                           	opt stack 0
 10001  004080                     _USBStdGetStatusHandler:
 10002                           	opt stack 12
 10003                           
 10004                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;incstack = 0
 10008  004080  0E00               	movlw	0
 10009  004082  0104               	movlb	4	; () banked
 10010  004084  6F38               	movwf	56,b	;volatile
 10011                           
 10012                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10013  004086  0E00               	movlw	0
 10014  004088  6F39               	movwf	57,b	;volatile
 10015                           
 10016                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10017  00408A  D03D               	goto	l1743
 10018  00408C                     l1744:
 10019                           
 10020                           ; BSR set to: 4
 10021                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10022  00408C  0100               	movlb	0	; () banked
 10023  00408E  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10024                           
 10025                           ;usb_device.c: 2163: }
 10026                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10027                           
 10028                           ; BSR set to: 4
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;usb_device.c: 2161: {
 10032                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10033                           
 10034                           ;usb_device.c: 2160: if(0 == 1)
 10035  004090  0101               	movlb	1	; () banked
 10036  004092  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10037  004094  A4D8               	btfss	status,2,c
 10038  004096  D042               	goto	l1747
 10039                           
 10040                           ; BSR set to: 1
 10041                           ;usb_device.c: 2166: {
 10042                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10043  004098  0104               	movlb	4	; () banked
 10044  00409A  8338               	bsf	56,1,b	;volatile
 10045                           
 10046                           ; BSR set to: 4
 10047                           ;usb_device.c: 2168: }
 10048                           ;usb_device.c: 2169: break;
 10049  00409C  D03F               	goto	l1747
 10050  00409E                     l1748:
 10051                           
 10052                           ; BSR set to: 4
 10053                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10054  00409E  0100               	movlb	0	; () banked
 10055  0040A0  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10056                           
 10057                           ;usb_device.c: 2172: break;
 10058  0040A2  D03C               	goto	l1747
 10059  0040A4                     l1749:
 10060                           
 10061                           ; BSR set to: 4
 10062                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10063  0040A4  0100               	movlb	0	; () banked
 10064  0040A6  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10065                           
 10066                           ;usb_device.c: 2178: {
 10067                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10068                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10069  0040A8  0104               	movlb	4	; () banked
 10070  0040AA  BF34               	btfsc	52,7,b	;volatile
 10071  0040AC  D00B               	goto	l1750
 10072                           
 10073                           ; BSR set to: 4
 10074                           ;usb_device.c: 2182: {
 10075                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10076  0040AE  5134               	movf	52,w,b	;volatile
 10077  0040B0  0B0F               	andlw	15
 10078  0040B2  0100               	movlb	0	; () banked
 10079  0040B4  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10080  0040B6  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10081  0040B8  0D02               	mullw	2
 10082  0040BA  0E0E               	movlw	low _pBDTEntryOut
 10083  0040BC  24F3               	addwf	prodl,w,c
 10084  0040BE  6ED9               	movwf	fsr2l,c
 10085  0040C0  0E03               	movlw	high _pBDTEntryOut
 10086  0040C2  D00B               	goto	L4
 10087  0040C4                     l1750:
 10088                           
 10089                           ;usb_device.c: 2185: else
 10090                           ;usb_device.c: 2186: {
 10091                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10092                           
 10093                           ; BSR set to: 0
 10094  0040C4  0104               	movlb	4	; () banked
 10095  0040C6  5134               	movf	52,w,b	;volatile
 10096  0040C8  0B0F               	andlw	15
 10097  0040CA  0100               	movlb	0	; () banked
 10098  0040CC  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10099  0040CE  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10100  0040D0  0D02               	mullw	2
 10101  0040D2  0EBB               	movlw	low _pBDTEntryIn
 10102  0040D4  24F3               	addwf	prodl,w,c
 10103  0040D6  6ED9               	movwf	fsr2l,c
 10104  0040D8  0E00               	movlw	high _pBDTEntryIn
 10105  0040DA                     L4:
 10106  0040DA  20F4               	addwfc	prodh,w,c
 10107  0040DC  6EDA               	movwf	fsr2h,c
 10108  0040DE  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10109  0040E2  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;usb_device.c: 2188: }
 10113                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10114                           
 10115                           ; BSR set to: 0
 10116  0040E6  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10117  0040EA  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10118  0040EE  AEDF               	btfss	indf2,7,c
 10119  0040F0  D015               	goto	l1747
 10120                           
 10121                           ; BSR set to: 0
 10122  0040F2  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10123  0040F6  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10124  0040FA  A4DF               	btfss	indf2,2,c
 10125  0040FC  D00F               	goto	l1747
 10126                           
 10127                           ; BSR set to: 0
 10128                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10129  0040FE  0E01               	movlw	1
 10130  004100  0104               	movlb	4	; () banked
 10131  004102  6F38               	movwf	56,b	;volatile
 10132                           
 10133                           ; BSR set to: 4
 10134                           ;usb_device.c: 2193: }
 10135                           ;usb_device.c: 2194: }
 10136                           
 10137                           ; BSR set to: 4
 10138                           ;usb_device.c: 2192: break;
 10139  004104  D00B               	goto	l1747
 10140  004106                     l1743:
 10141                           
 10142                           ; BSR set to: 4
 10143                           
 10144                           ; BSR set to: 4
 10145  004106  5130               	movf	48,w,b	;volatile
 10146  004108  0B1F               	andlw	31
 10147                           
 10148                           ; Switch size 1, requested type "space"
 10149                           ; Number of cases is 3, Range of values is 0 to 2
 10150                           ; switch strategies available:
 10151                           ; Name         Instructions Cycles
 10152                           ; simple_byte           10     6 (average)
 10153                           ;	Chosen strategy is simple_byte
 10154  00410A  0A00               	xorlw	0	; case 0
 10155  00410C  B4D8               	btfsc	status,2,c
 10156  00410E  D7BE               	goto	l1744
 10157  004110  0A01               	xorlw	1	; case 1
 10158  004112  B4D8               	btfsc	status,2,c
 10159  004114  D7C4               	goto	l1748
 10160  004116  0A03               	xorlw	3	; case 2
 10161  004118  B4D8               	btfsc	status,2,c
 10162  00411A  D7C4               	goto	l1749
 10163  00411C                     l1747:
 10164                           
 10165                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10166  00411C  0100               	movlb	0	; () banked
 10167  00411E  AFB8               	btfss	(_inPipes+3)& (0+255),7,b
 10168  004120  0012               	return	
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;usb_device.c: 2197: {
 10172                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10173  004122  0E38               	movlw	56
 10174  004124  6FB5               	movwf	_inPipes& (0+255),b
 10175  004126  0E04               	movlw	4
 10176  004128  6FB6               	movwf	(_inPipes+1)& (0+255),b
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10180  00412A  81B8               	bsf	(_inPipes+3)& (0+255),0,b
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10184  00412C  0E02               	movlw	2
 10185  00412E  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10186  004130  0012               	return	
 10187  004132                     __end_of_USBStdGetStatusHandler:
 10188                           	opt stack 0
 10189                           tosu	equ	0xFFF
 10190                           tosh	equ	0xFFE
 10191                           tosl	equ	0xFFD
 10192                           pclath	equ	0xFFA
 10193                           tblptru	equ	0xFF8
 10194                           tblptrh	equ	0xFF7
 10195                           tblptrl	equ	0xFF6
 10196                           tablat	equ	0xFF5
 10197                           prodh	equ	0xFF4
 10198                           prodl	equ	0xFF3
 10199                           intcon	equ	0xFF2
 10200                           intcon2	equ	0xFF1
 10201                           intcon3	equ	0xFF0
 10202                           postinc0	equ	0xFEE
 10203                           plusw0	equ	0xFEB
 10204                           wreg	equ	0xFE8
 10205                           postinc1	equ	0xFE6
 10206                           postdec1	equ	0xFE5
 10207                           plusw1	equ	0xFE3
 10208                           fsr1h	equ	0xFE2
 10209                           fsr1l	equ	0xFE1
 10210                           indf2	equ	0xFDF
 10211                           postinc2	equ	0xFDE
 10212                           postdec2	equ	0xFDD
 10213                           plusw2	equ	0xFDB
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8
 10217                           
 10218 ;; *************** function _USBStdGetDscHandler *****************
 10219 ;; Defined at:
 10220 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;		None
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;		None
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10236 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;Total ram usage:        2 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:   11
 10241 ;; This function calls:
 10242 ;;		Nothing
 10243 ;; This function is called by:
 10244 ;;		_USBCheckStdRequest
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text42
 10249  002D2C                     __ptext42:
 10250                           	opt stack 0
 10251  002D2C                     _USBStdGetDscHandler:
 10252                           	opt stack 12
 10253                           
 10254                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;incstack = 0
 10258  002D2C  0E80               	movlw	128
 10259  002D2E  0104               	movlb	4	; () banked
 10260  002D30  1930               	xorwf	48,w,b	;volatile
 10261  002D32  A4D8               	btfss	status,2,c
 10262  002D34  0012               	return	
 10263                           
 10264                           ; BSR set to: 4
 10265                           ;usb_device.c: 2064: {
 10266                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10267  002D36  0EC0               	movlw	192
 10268  002D38  0100               	movlb	0	; () banked
 10269  002D3A  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10270                           
 10271                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10272  002D3C  D082               	goto	l1730
 10273  002D3E                     
 10274                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10275                           
 10276                           ; BSR set to: 0
 10277  002D3E  0E48               	movlw	low _device_dsc
 10278  002D40  0100               	movlb	0	; () banked
 10279  002D42  6FB5               	movwf	_inPipes& (0+255),b
 10280  002D44  0EFE               	movlw	high _device_dsc
 10281  002D46  6FB6               	movwf	(_inPipes+1)& (0+255),b
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10285  002D48  0E00               	movlw	0
 10286  002D4A  6FBA               	movwf	(_inPipes+5)& (0+255),b
 10287  002D4C  0E12               	movlw	18
 10288  002D4E  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10289                           
 10290                           ;usb_device.c: 2076: break;
 10291  002D50  0012               	return	
 10292  002D52                     
 10293                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10294                           
 10295                           ; BSR set to: 0
 10296  002D52  0104               	movlb	4	; () banked
 10297  002D54  5132               	movf	50,w,b	;volatile
 10298  002D56  A4D8               	btfss	status,2,c
 10299  002D58  D040               	goto	l1734
 10300                           
 10301                           ; BSR set to: 4
 10302                           ;usb_device.c: 2082: {
 10303                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10304  002D5A  5132               	movf	50,w,b	;volatile
 10305  002D5C  0D02               	mullw	2
 10306  002D5E  0E2D               	movlw	low _USB_CD_Ptr
 10307  002D60  24F3               	addwf	prodl,w,c
 10308  002D62  6EF6               	movwf	tblptrl,c
 10309  002D64  0EFC               	movlw	high _USB_CD_Ptr
 10310  002D66  20F4               	addwfc	prodh,w,c
 10311  002D68  6EF7               	movwf	tblptrh,c
 10312  002D6A                     	if	0	;There are less than 3 active tblptr bytes
 10313  002D6A                     	endif
 10314  002D6A  0009               	tblrd		*+
 10315  002D6C  CFF5 F0B5          	movff	tablat,_inPipes
 10316  002D70  000A               	tblrd		*-
 10317  002D72  CFF5 F0B6          	movff	tablat,_inPipes+1
 10318                           
 10319                           ; BSR set to: 4
 10320                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10321  002D76  0E02               	movlw	2
 10322  002D78  0100               	movlb	0	; () banked
 10323  002D7A  25B5               	addwf	_inPipes& (0+255),w,b
 10324  002D7C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10325  002D7E  0E00               	movlw	0
 10326  002D80  21B6               	addwfc	(_inPipes+1)& (0+255),w,b
 10327  002D82  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10328  002D84  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10329  002D88  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10330  002D8C  6AF8               	clrf	tblptru,c
 10331  002D8E  0E0E               	movlw	(high __ramtop+-1)
 10332  002D90  64F7               	cpfsgt	tblptrh,c
 10333  002D92  D003               	bra	u10517
 10334  002D94  0008               	tblrd		*
 10335  002D96  50F5               	movf	tablat,w,c
 10336  002D98  D005               	bra	u10510
 10337  002D9A                     u10517:
 10338  002D9A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10339  002D9E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10340  002DA2  50EF               	movf	indf0,w,c
 10341  002DA4                     u10510:
 10342  002DA4  0100               	movlb	0	; () banked
 10343  002DA6  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10347  002DA8  0E03               	movlw	3
 10348  002DAA  25B5               	addwf	_inPipes& (0+255),w,b
 10349  002DAC  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10350  002DAE  0E00               	movlw	0
 10351  002DB0  21B6               	addwfc	(_inPipes+1)& (0+255),w,b
 10352  002DB2  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10353  002DB4  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10354  002DB8  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10355  002DBC  6AF8               	clrf	tblptru,c
 10356  002DBE  0E0E               	movlw	(high __ramtop+-1)
 10357  002DC0  64F7               	cpfsgt	tblptrh,c
 10358  002DC2  D003               	bra	u10527
 10359  002DC4  0008               	tblrd		*
 10360  002DC6  50F5               	movf	tablat,w,c
 10361  002DC8  D005               	bra	u10520
 10362  002DCA                     u10527:
 10363  002DCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10364  002DCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10365  002DD2  50EF               	movf	indf0,w,c
 10366  002DD4                     u10520:
 10367  002DD4  0100               	movlb	0	; () banked
 10368  002DD6  6FBA               	movwf	(_inPipes+5)& (0+255),b
 10369                           
 10370                           ;usb_device.c: 2094: }
 10371  002DD8  0012               	return	
 10372  002DDA                     l1734:
 10373                           
 10374                           ;usb_device.c: 2095: else
 10375                           ;usb_device.c: 2096: {
 10376                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10377                           
 10378                           ; BSR set to: 0
 10379  002DDA  0E00               	movlw	0
 10380  002DDC  0100               	movlb	0	; () banked
 10381  002DDE  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;usb_device.c: 2098: }
 10385                           ;usb_device.c: 2099: break;
 10386  002DE0  0012               	return	
 10387  002DE2                     
 10388                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10389                           
 10390                           ; BSR set to: 0
 10391  002DE2  0E03               	movlw	3
 10392  002DE4  0104               	movlb	4	; () banked
 10393  002DE6  6132               	cpfslt	50,b	;volatile
 10394  002DE8  D024               	goto	l1737
 10395                           
 10396                           ; BSR set to: 4
 10397                           ;usb_device.c: 2105: {
 10398                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10399  002DEA  5132               	movf	50,w,b	;volatile
 10400  002DEC  0D02               	mullw	2
 10401  002DEE  0E27               	movlw	low _USB_SD_Ptr
 10402  002DF0  24F3               	addwf	prodl,w,c
 10403  002DF2  6EF6               	movwf	tblptrl,c
 10404  002DF4  0EFC               	movlw	high _USB_SD_Ptr
 10405  002DF6  20F4               	addwfc	prodh,w,c
 10406  002DF8  6EF7               	movwf	tblptrh,c
 10407  002DFA                     	if	0	;There are less than 3 active tblptr bytes
 10408  002DFA                     	endif
 10409  002DFA  0009               	tblrd		*+
 10410  002DFC  CFF5 F0B5          	movff	tablat,_inPipes
 10411  002E00  000A               	tblrd		*-
 10412  002E02  CFF5 F0B6          	movff	tablat,_inPipes+1
 10413                           
 10414                           ; BSR set to: 4
 10415                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10416  002E06  C0B5  FFF6         	movff	_inPipes,tblptrl
 10417  002E0A  C0B6  FFF7         	movff	_inPipes+1,tblptrh
 10418  002E0E  6AF8               	clrf	tblptru,c
 10419  002E10  0E0E               	movlw	(high __ramtop+-1)
 10420  002E12  64F7               	cpfsgt	tblptrh,c
 10421  002E14  D003               	bra	u10547
 10422  002E16  0008               	tblrd		*
 10423  002E18  50F5               	movf	tablat,w,c
 10424  002E1A  D005               	bra	u10540
 10425  002E1C                     u10547:
 10426  002E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10427  002E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 10428  002E24  50EF               	movf	indf0,w,c
 10429  002E26                     u10540:
 10430  002E26  0100               	movlb	0	; () banked
 10431  002E28  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10432  002E2A  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10433  002E2C  6FB9               	movwf	(_inPipes+4)& (0+255),b
 10434  002E2E  6BBA               	clrf	(_inPipes+5)& (0+255),b
 10435                           
 10436                           ;usb_device.c: 2110: }
 10437  002E30  0012               	return	
 10438  002E32                     l1737:
 10439                           
 10440                           ;usb_device.c: 2120: else
 10441                           ;usb_device.c: 2121: {
 10442                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10443                           
 10444                           ; BSR set to: 0
 10445  002E32  0E00               	movlw	0
 10446  002E34  0100               	movlb	0	; () banked
 10447  002E36  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;usb_device.c: 2123: }
 10451                           ;usb_device.c: 2124: break;
 10452  002E38  0012               	return	
 10453  002E3A                     
 10454                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10455                           
 10456                           ; BSR set to: 0
 10457  002E3A  0E00               	movlw	0
 10458  002E3C  0100               	movlb	0	; () banked
 10459  002E3E  6FB8               	movwf	(_inPipes+3)& (0+255),b
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;usb_device.c: 2128: }
 10463                           
 10464                           ;usb_device.c: 2127: break;
 10465  002E40  0012               	return	
 10466  002E42                     l1730:
 10467                           
 10468                           ; BSR set to: 0
 10469                           
 10470                           ; BSR set to: 0
 10471  002E42  0104               	movlb	4	; () banked
 10472  002E44  5133               	movf	51,w,b	;volatile
 10473                           
 10474                           ; Switch size 1, requested type "space"
 10475                           ; Number of cases is 3, Range of values is 1 to 3
 10476                           ; switch strategies available:
 10477                           ; Name         Instructions Cycles
 10478                           ; simple_byte           10     6 (average)
 10479                           ;	Chosen strategy is simple_byte
 10480  002E46  0A01               	xorlw	1	; case 1
 10481  002E48  B4D8               	btfsc	status,2,c
 10482  002E4A  D779               	goto	l1731
 10483  002E4C  0A03               	xorlw	3	; case 2
 10484  002E4E  B4D8               	btfsc	status,2,c
 10485  002E50  D780               	goto	l1733
 10486  002E52  0A01               	xorlw	1	; case 3
 10487  002E54  B4D8               	btfsc	status,2,c
 10488  002E56  D7C5               	goto	l1736
 10489  002E58  D7F0               	goto	l1739
 10490  002E5A                     __end_of_USBStdGetDscHandler:
 10491                           	opt stack 0
 10492                           tosu	equ	0xFFF
 10493                           tosh	equ	0xFFE
 10494                           tosl	equ	0xFFD
 10495                           pclath	equ	0xFFA
 10496                           tblptru	equ	0xFF8
 10497                           tblptrh	equ	0xFF7
 10498                           tblptrl	equ	0xFF6
 10499                           tablat	equ	0xFF5
 10500                           prodh	equ	0xFF4
 10501                           prodl	equ	0xFF3
 10502                           intcon	equ	0xFF2
 10503                           intcon2	equ	0xFF1
 10504                           intcon3	equ	0xFF0
 10505                           indf0	equ	0xFEF
 10506                           postinc0	equ	0xFEE
 10507                           plusw0	equ	0xFEB
 10508                           fsr0h	equ	0xFEA
 10509                           fsr0l	equ	0xFE9
 10510                           wreg	equ	0xFE8
 10511                           postinc1	equ	0xFE6
 10512                           postdec1	equ	0xFE5
 10513                           plusw1	equ	0xFE3
 10514                           fsr1h	equ	0xFE2
 10515                           fsr1l	equ	0xFE1
 10516                           indf2	equ	0xFDF
 10517                           postinc2	equ	0xFDE
 10518                           postdec2	equ	0xFDD
 10519                           plusw2	equ	0xFDB
 10520                           fsr2h	equ	0xFDA
 10521                           fsr2l	equ	0xFD9
 10522                           status	equ	0xFD8
 10523                           
 10524 ;; *************** function _USBStdFeatureReqHandler *****************
 10525 ;; Defined at:
 10526 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;		None
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10531 ;;		 -> NULL(0), BDT(48), 
 10532 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10533 ;;		 -> UEP0(1), 
 10534 ;;  current_ep_d    1   52[BANK0 ] struct .
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      void 
 10537 ;; Registers used:
 10538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10545 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10547 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10548 ;;Total ram usage:        6 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:   15
 10551 ;; This function calls:
 10552 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10553 ;; This function is called by:
 10554 ;;		_USBCheckStdRequest
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text43
 10559  00135A                     __ptext43:
 10560                           	opt stack 0
 10561  00135A                     _USBStdFeatureReqHandler:
 10562                           	opt stack 8
 10563                           
 10564                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10565                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10566                           ;usb_device.c: 2778: unsigned char* pUEP;
 10567                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10568                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10569                           
 10570                           ;incstack = 0
 10571  00135A  0104               	movlb	4	; () banked
 10572  00135C  0532               	decf	50,w,b	;volatile
 10573  00135E  A4D8               	btfss	status,2,c
 10574  001360  D011               	goto	l1823
 10575                           
 10576                           ; BSR set to: 4
 10577  001362  5130               	movf	48,w,b	;volatile
 10578  001364  0B1F               	andlw	31
 10579  001366  0900               	iorlw	0
 10580  001368  A4D8               	btfss	status,2,c
 10581  00136A  D00C               	goto	l1823
 10582                           
 10583                           ; BSR set to: 4
 10584                           ;usb_device.c: 2818: {
 10585                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10586  00136C  0100               	movlb	0	; () banked
 10587  00136E  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10591  001370  0E03               	movlw	3
 10592  001372  0104               	movlb	4	; () banked
 10593  001374  1931               	xorwf	49,w,b	;volatile
 10594  001376  A4D8               	btfss	status,2,c
 10595  001378  D002               	goto	l1822
 10596                           
 10597                           ; BSR set to: 4
 10598                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10599  00137A  0E01               	movlw	1
 10600  00137C  D001               	goto	L5
 10601  00137E                     l1822:
 10602                           
 10603                           ;usb_device.c: 2822: else
 10604                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10605                           
 10606                           ; BSR set to: 1
 10607  00137E  0E00               	movlw	0
 10608  001380                     L5:
 10609  001380  0101               	movlb	1	; () banked
 10610  001382  6FE3               	movwf	_RemoteWakeup& (0+255),b
 10611  001384                     l1823:
 10612                           
 10613                           ;usb_device.c: 2824: }
 10614                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10615                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10616                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10617                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10618                           
 10619                           ; BSR set to: 1
 10620  001384  0104               	movlb	4	; () banked
 10621  001386  5132               	movf	50,w,b	;volatile
 10622  001388  A4D8               	btfss	status,2,c
 10623  00138A  0012               	return	
 10624                           
 10625                           ; BSR set to: 4
 10626  00138C  5130               	movf	48,w,b	;volatile
 10627  00138E  0B1F               	andlw	31
 10628  001390  0A02               	xorlw	2
 10629  001392  A4D8               	btfss	status,2,c
 10630  001394  0012               	return	
 10631                           
 10632                           ; BSR set to: 4
 10633  001396  5134               	movf	52,w,b	;volatile
 10634  001398  0B0F               	andlw	15
 10635  00139A  0900               	iorlw	0
 10636  00139C  B4D8               	btfsc	status,2,c
 10637  00139E  0012               	return	
 10638                           
 10639                           ; BSR set to: 4
 10640  0013A0  5134               	movf	52,w,b	;volatile
 10641  0013A2  0B0F               	andlw	15
 10642  0013A4  0100               	movlb	0	; () banked
 10643  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10644  0013A8  0E03               	movlw	3
 10645  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10646  0013AC  0012               	return	
 10647                           
 10648                           ; BSR set to: 0
 10649  0013AE  0E20               	movlw	32
 10650  0013B0  19D0               	xorwf	_USBDeviceState& (0+255),w,b
 10651  0013B2  A4D8               	btfss	status,2,c
 10652  0013B4  0012               	return	
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;usb_device.c: 2831: {
 10656                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10657  0013B6  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 10658                           
 10659                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10660  0013B8  0104               	movlb	4	; () banked
 10661  0013BA  BF34               	btfsc	52,7,b	;volatile
 10662  0013BC  D01C               	goto	l1825
 10663                           
 10664                           ; BSR set to: 4
 10665                           ;usb_device.c: 2838: {
 10666                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10667  0013BE  5134               	movf	52,w,b	;volatile
 10668  0013C0  0B0F               	andlw	15
 10669  0013C2  0100               	movlb	0	; () banked
 10670  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10671  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10672  0013C8  0D02               	mullw	2
 10673  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10674  0013CC  24F3               	addwf	prodl,w,c
 10675  0013CE  6ED9               	movwf	fsr2l,c
 10676  0013D0  0E03               	movlw	high _pBDTEntryOut
 10677  0013D2  20F4               	addwfc	prodh,w,c
 10678  0013D4  6EDA               	movwf	fsr2h,c
 10679  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10680  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10681                           
 10682                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10683  0013DE  0104               	movlb	4	; () banked
 10684  0013E0  5134               	movf	52,w,b	;volatile
 10685  0013E2  0B0F               	andlw	15
 10686  0013E4  0100               	movlb	0	; () banked
 10687  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10688  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10689  0013EA  0D01               	mullw	1
 10690  0013EC  0ECF               	movlw	low _ep_data_out
 10691  0013EE  24F3               	addwf	prodl,w,c
 10692  0013F0  6ED9               	movwf	fsr2l,c
 10693  0013F2  0E02               	movlw	high _ep_data_out
 10694  0013F4  D01C               	goto	L6
 10695  0013F6                     l1825:
 10696                           
 10697                           ;usb_device.c: 2842: else
 10698                           ;usb_device.c: 2843: {
 10699                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10700                           
 10701                           ; BSR set to: 0
 10702  0013F6  0104               	movlb	4	; () banked
 10703  0013F8  5134               	movf	52,w,b	;volatile
 10704  0013FA  0B0F               	andlw	15
 10705  0013FC  0100               	movlb	0	; () banked
 10706  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10707  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10708  001402  0D02               	mullw	2
 10709  001404  0EBB               	movlw	low _pBDTEntryIn
 10710  001406  24F3               	addwf	prodl,w,c
 10711  001408  6ED9               	movwf	fsr2l,c
 10712  00140A  0E00               	movlw	high _pBDTEntryIn
 10713  00140C  20F4               	addwfc	prodh,w,c
 10714  00140E  6EDA               	movwf	fsr2h,c
 10715  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10716  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10717                           
 10718                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10719  001418  0104               	movlb	4	; () banked
 10720  00141A  5134               	movf	52,w,b	;volatile
 10721  00141C  0B0F               	andlw	15
 10722  00141E  0100               	movlb	0	; () banked
 10723  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10724  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10725  001424  0D01               	mullw	1
 10726  001426  0ED2               	movlw	low _ep_data_in
 10727  001428  24F3               	addwf	prodl,w,c
 10728  00142A  6ED9               	movwf	fsr2l,c
 10729  00142C  0E02               	movlw	high _ep_data_in
 10730  00142E                     L6:
 10731  00142E  20F4               	addwfc	prodh,w,c
 10732  001430  6EDA               	movwf	fsr2h,c
 10733  001432  50DF               	movf	indf2,w,c
 10734  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;usb_device.c: 2846: }
 10738                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10739                           
 10740                           ; BSR set to: 0
 10741  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10742  001438  D002               	goto	l1827
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;usb_device.c: 2853: {
 10746                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10747  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10748                           
 10749                           ;usb_device.c: 2855: }
 10750  00143C  D001               	goto	l1828
 10751  00143E                     l1827:
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;usb_device.c: 2856: else
 10755                           ;usb_device.c: 2857: {
 10756                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10757                           
 10758                           ; BSR set to: 0
 10759  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10760  001440                     l1828:
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;usb_device.c: 2859: }
 10764                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10765                           
 10766                           ; BSR set to: 0
 10767  001440  0104               	movlb	4	; () banked
 10768  001442  BF34               	btfsc	52,7,b	;volatile
 10769  001444  D00B               	goto	l1829
 10770                           
 10771                           ; BSR set to: 4
 10772                           ;usb_device.c: 2865: {
 10773                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10774  001446  5134               	movf	52,w,b	;volatile
 10775  001448  0B0F               	andlw	15
 10776  00144A  0100               	movlb	0	; () banked
 10777  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10778  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10779  001450  0D02               	mullw	2
 10780  001452  0E0E               	movlw	low _pBDTEntryOut
 10781  001454  24F3               	addwf	prodl,w,c
 10782  001456  6ED9               	movwf	fsr2l,c
 10783  001458  0E03               	movlw	high _pBDTEntryOut
 10784  00145A  D00B               	goto	L7
 10785  00145C                     l1829:
 10786                           
 10787                           ;usb_device.c: 2868: else
 10788                           ;usb_device.c: 2869: {
 10789                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10790                           
 10791                           ; BSR set to: 0
 10792  00145C  0104               	movlb	4	; () banked
 10793  00145E  5134               	movf	52,w,b	;volatile
 10794  001460  0B0F               	andlw	15
 10795  001462  0100               	movlb	0	; () banked
 10796  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10797  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10798  001468  0D02               	mullw	2
 10799  00146A  0EBB               	movlw	low _pBDTEntryIn
 10800  00146C  24F3               	addwf	prodl,w,c
 10801  00146E  6ED9               	movwf	fsr2l,c
 10802  001470  0E00               	movlw	high _pBDTEntryIn
 10803  001472                     L7:
 10804  001472  20F4               	addwfc	prodh,w,c
 10805  001474  6EDA               	movwf	fsr2h,c
 10806  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10807  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;usb_device.c: 2871: }
 10811                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10812                           
 10813                           ; BSR set to: 0
 10814  00147E  0E03               	movlw	3
 10815  001480  0104               	movlb	4	; () banked
 10816  001482  1931               	xorwf	49,w,b	;volatile
 10817  001484  A4D8               	btfss	status,2,c
 10818  001486  D031               	goto	l1831
 10819                           
 10820                           ; BSR set to: 4
 10821                           ;usb_device.c: 2875: {
 10822                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10823  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10824  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10825  001490  0100               	movlb	0	; () banked
 10826  001492  AEDF               	btfss	indf2,7,c
 10827  001494  D01D               	goto	l1834
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;usb_device.c: 2877: {
 10831                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10832  001496  0104               	movlb	4	; () banked
 10833  001498  BF34               	btfsc	52,7,b	;volatile
 10834  00149A  D00B               	goto	l1833
 10835                           
 10836                           ; BSR set to: 4
 10837                           ;usb_device.c: 2881: {
 10838                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10839  00149C  5134               	movf	52,w,b	;volatile
 10840  00149E  0B0F               	andlw	15
 10841  0014A0  0100               	movlb	0	; () banked
 10842  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10843  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10844  0014A6  0D01               	mullw	1
 10845  0014A8  0ECF               	movlw	low _ep_data_out
 10846  0014AA  24F3               	addwf	prodl,w,c
 10847  0014AC  6ED9               	movwf	fsr2l,c
 10848  0014AE  0E02               	movlw	high _ep_data_out
 10849  0014B0  D00B               	goto	L8
 10850  0014B2                     l1833:
 10851                           
 10852                           ;usb_device.c: 2884: else
 10853                           ;usb_device.c: 2885: {
 10854                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10855                           
 10856                           ; BSR set to: 2
 10857  0014B2  0104               	movlb	4	; () banked
 10858  0014B4  5134               	movf	52,w,b	;volatile
 10859  0014B6  0B0F               	andlw	15
 10860  0014B8  0100               	movlb	0	; () banked
 10861  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10862  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10863  0014BE  0D01               	mullw	1
 10864  0014C0  0ED2               	movlw	low _ep_data_in
 10865  0014C2  24F3               	addwf	prodl,w,c
 10866  0014C4  6ED9               	movwf	fsr2l,c
 10867  0014C6  0E02               	movlw	high _ep_data_in
 10868  0014C8                     L8:
 10869  0014C8  20F4               	addwfc	prodh,w,c
 10870  0014CA  6EDA               	movwf	fsr2h,c
 10871  0014CC  0102               	movlb	2	; () banked
 10872  0014CE  82DF               	bsf	indf2,1,c
 10873  0014D0                     l1834:
 10874                           
 10875                           ;usb_device.c: 2887: }
 10876                           ;usb_device.c: 2888: }
 10877                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10878                           
 10879                           ; BSR set to: 2
 10880                           
 10881                           ; BSR set to: 2
 10882  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10883  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10884  0014D8  0E00               	movlw	0
 10885  0014DA  84DB               	bsf	plusw2,2,c
 10886                           
 10887                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10888  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10889  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10890  0014E4  0E00               	movlw	0
 10891  0014E6  8EDB               	bsf	plusw2,7,c
 10892                           
 10893                           ;usb_device.c: 2893: }
 10894  0014E8  0012               	return	
 10895  0014EA                     l1831:
 10896                           
 10897                           ;usb_device.c: 2894: else
 10898                           ;usb_device.c: 2895: {
 10899                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10900  0014EA  0E04               	movlw	4
 10901  0014EC  0100               	movlb	0	; () banked
 10902  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10906  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10907  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10908  0014F8  AEDF               	btfss	indf2,7,c
 10909  0014FA  D01B               	goto	l1836
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;usb_device.c: 2902: {
 10913                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10914  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10915  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10916  001504  0E7F               	movlw	127
 10917  001506  16DF               	andwf	indf2,f,c
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10921  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10922  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10923  001510  0E00               	movlw	0
 10924  001512  8CDB               	bsf	plusw2,6,c
 10925                           
 10926                           ; BSR set to: 0
 10927                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10928  001514  0E00               	movlw	0
 10929  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10930  001518  0E05               	movlw	5
 10931  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10932  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10933  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10934  001524  0E00               	movlw	0
 10935  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10936  001528  0E02               	movlw	2
 10937  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10938  00152C  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10939                           
 10940                           ;usb_device.c: 2908: }
 10941  001530  D006               	goto	l1837
 10942  001532                     l1836:
 10943                           
 10944                           ;usb_device.c: 2909: else
 10945                           ;usb_device.c: 2910: {
 10946                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10947  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10948  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10949  00153A  0E00               	movlw	0
 10950  00153C  8CDB               	bsf	plusw2,6,c
 10951  00153E                     l1837:
 10952                           
 10953                           ;usb_device.c: 2913: }
 10954                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10955  00153E  0E04               	movlw	4
 10956  001540  0100               	movlb	0	; () banked
 10957  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10961  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10962  001546  D006               	goto	u10760
 10963                           
 10964                           ; BSR set to: 0
 10965  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10966  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10967  001550  AEDF               	btfss	indf2,7,c
 10968  001552  D033               	goto	l1838
 10969  001554                     u10760:
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;usb_device.c: 2924: {
 10973                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10974  001554  0104               	movlb	4	; () banked
 10975  001556  BF34               	btfsc	52,7,b	;volatile
 10976  001558  D00B               	goto	l1841
 10977                           
 10978                           ; BSR set to: 4
 10979                           ;usb_device.c: 2926: {
 10980                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10981  00155A  5134               	movf	52,w,b	;volatile
 10982  00155C  0B0F               	andlw	15
 10983  00155E  0100               	movlb	0	; () banked
 10984  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10985  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10986  001564  0D01               	mullw	1
 10987  001566  0ECF               	movlw	low _ep_data_out
 10988  001568  24F3               	addwf	prodl,w,c
 10989  00156A  6ED9               	movwf	fsr2l,c
 10990  00156C  0E02               	movlw	high _ep_data_out
 10991  00156E  D00B               	goto	L9
 10992  001570                     l1841:
 10993                           
 10994                           ;usb_device.c: 2929: else
 10995                           ;usb_device.c: 2930: {
 10996                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10997                           
 10998                           ; BSR set to: 2
 10999  001570  0104               	movlb	4	; () banked
 11000  001572  5134               	movf	52,w,b	;volatile
 11001  001574  0B0F               	andlw	15
 11002  001576  0100               	movlb	0	; () banked
 11003  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11004  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11005  00157C  0D01               	mullw	1
 11006  00157E  0ED2               	movlw	low _ep_data_in
 11007  001580  24F3               	addwf	prodl,w,c
 11008  001582  6ED9               	movwf	fsr2l,c
 11009  001584  0E02               	movlw	high _ep_data_in
 11010  001586                     L9:
 11011  001586  20F4               	addwfc	prodh,w,c
 11012  001588  6EDA               	movwf	fsr2h,c
 11013  00158A  0102               	movlb	2	; () banked
 11014  00158C  92DF               	bcf	indf2,1,c
 11015                           
 11016                           ; BSR set to: 2
 11017                           ;usb_device.c: 2932: }
 11018                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11019                           
 11020                           ; BSR set to: 2
 11021  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11022  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11023  001596  0E3B               	movlw	59
 11024  001598  16DF               	andwf	indf2,f,c
 11025                           
 11026                           ; BSR set to: 2
 11027                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11028  00159A  0E00               	movlw	0
 11029  00159C  0100               	movlb	0	; () banked
 11030  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11031  0015A0  0E05               	movlw	5
 11032  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11033  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11034  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11035  0015AC  0E00               	movlw	0
 11036  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11037  0015B0  0E02               	movlw	2
 11038  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11039  0015B4  EC7F  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11040                           
 11041                           ;usb_device.c: 2938: }
 11042  0015B8  D006               	goto	l1843
 11043  0015BA                     l1838:
 11044                           
 11045                           ;usb_device.c: 2939: else
 11046                           ;usb_device.c: 2940: {
 11047                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11048  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11049  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11050  0015C2  0E3B               	movlw	59
 11051  0015C4  16DF               	andwf	indf2,f,c
 11052  0015C6                     l1843:
 11053                           
 11054                           ;usb_device.c: 2943: }
 11055                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11056  0015C6  0104               	movlb	4	; () banked
 11057  0015C8  5134               	movf	52,w,b	;volatile
 11058  0015CA  0B0F               	andlw	15
 11059  0015CC  0100               	movlb	0	; () banked
 11060  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11061  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11062  0015D2  0D01               	mullw	1
 11063  0015D4  0E26               	movlw	38
 11064  0015D6  24F3               	addwf	prodl,w,c
 11065  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11066  0015DA  0E0F               	movlw	15
 11067  0015DC  20F4               	addwfc	prodh,w,c
 11068  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11072  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11073  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11074  0015E8  0EFE               	movlw	254
 11075  0015EA  16DF               	andwf	indf2,f,c
 11076                           
 11077                           ; BSR set to: 0
 11078  0015EC  0012               	return	
 11079  0015EE                     __end_of_USBStdFeatureReqHandler:
 11080                           	opt stack 0
 11081                           tosu	equ	0xFFF
 11082                           tosh	equ	0xFFE
 11083                           tosl	equ	0xFFD
 11084                           pclath	equ	0xFFA
 11085                           tblptru	equ	0xFF8
 11086                           tblptrh	equ	0xFF7
 11087                           tblptrl	equ	0xFF6
 11088                           tablat	equ	0xFF5
 11089                           prodh	equ	0xFF4
 11090                           prodl	equ	0xFF3
 11091                           intcon	equ	0xFF2
 11092                           intcon2	equ	0xFF1
 11093                           intcon3	equ	0xFF0
 11094                           indf0	equ	0xFEF
 11095                           postinc0	equ	0xFEE
 11096                           plusw0	equ	0xFEB
 11097                           fsr0h	equ	0xFEA
 11098                           fsr0l	equ	0xFE9
 11099                           wreg	equ	0xFE8
 11100                           postinc1	equ	0xFE6
 11101                           postdec1	equ	0xFE5
 11102                           plusw1	equ	0xFE3
 11103                           fsr1h	equ	0xFE2
 11104                           fsr1l	equ	0xFE1
 11105                           indf2	equ	0xFDF
 11106                           postinc2	equ	0xFDE
 11107                           postdec2	equ	0xFDD
 11108                           plusw2	equ	0xFDB
 11109                           fsr2h	equ	0xFDA
 11110                           fsr2l	equ	0xFD9
 11111                           status	equ	0xFD8
 11112                           
 11113 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11114 ;; Defined at:
 11115 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  event           2   41[BANK0 ] enum E8349
 11118 ;;  pdata           2   43[BANK0 ] PTR void 
 11119 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11120 ;;  size            2   45[BANK0 ] unsigned int 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  1    wreg      unsigned char 
 11125 ;; Registers used:
 11126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11132 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;Total ram usage:        8 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:   14
 11139 ;; This function calls:
 11140 ;;		_CDCInitEP
 11141 ;;		_USBCheckCDCRequest
 11142 ;; This function is called by:
 11143 ;;		_USBDeviceTasks
 11144 ;;		_USBStdSetCfgHandler
 11145 ;;		_USBSuspend
 11146 ;;		_USBWakeFromSuspend
 11147 ;;		_USBCtrlTrfSetupHandler
 11148 ;;		_USBCheckStdRequest
 11149 ;;		_USBStdFeatureReqHandler
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           	psect	text44
 11154  0050FE                     __ptext44:
 11155                           	opt stack 0
 11156  0050FE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11157                           	opt stack 12
 11158                           
 11159                           ;usb_device_mgr.c: 106: switch( (int) event )
 11160                           
 11161                           ;incstack = 0
 11162  0050FE  D006               	goto	l1997
 11163  005100                     
 11164                           ;usb_device_mgr.c: 134: CDCInitEP();
 11165  005100  EC7C  F027         	call	_CDCInitEP	;wreg free
 11166                           
 11167                           ;usb_device_mgr.c: 142: break;
 11168                           
 11169                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11170                           
 11171                           ;usb_device_mgr.c: 139: break;
 11172  005104  0012               	return	
 11173  005106                     
 11174                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11175  005106  EC99  F020         	call	_USBCheckCDCRequest	;wreg free
 11176                           
 11177                           ;usb_device_mgr.c: 163: }
 11178                           
 11179                           ;usb_device_mgr.c: 162: break;
 11180                           
 11181                           ;usb_device_mgr.c: 161: default:
 11182                           
 11183                           ;usb_device_mgr.c: 159: break;
 11184                           
 11185                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11186                           
 11187                           ;usb_device_mgr.c: 156: break;
 11188                           
 11189                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11190                           
 11191                           ;usb_device_mgr.c: 153: break;
 11192  00510A  0012               	return	
 11193  00510C                     l1997:
 11194  00510C  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11195  005110  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11196                           
 11197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11198                           ; Switch size 1, requested type "space"
 11199                           ; Number of cases is 2, Range of values is 0 to 127
 11200                           ; switch strategies available:
 11201                           ; Name         Instructions Cycles
 11202                           ; simple_byte            7     4 (average)
 11203                           ;	Chosen strategy is simple_byte
 11204  005114  0100               	movlb	0	; () banked
 11205  005116  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11206  005118  0A00               	xorlw	0	; case 0
 11207  00511A  B4D8               	btfsc	status,2,c
 11208  00511C  D004               	goto	l15299
 11209  00511E  0A7F               	xorlw	127	; case 127
 11210  005120  A4D8               	btfss	status,2,c
 11211  005122  0012               	return	
 11212  005124  D018               	goto	l15301
 11213  005126                     l15299:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ; Switch size 1, requested type "space"
 11217                           ; Number of cases is 8, Range of values is 1 to 117
 11218                           ; switch strategies available:
 11219                           ; Name         Instructions Cycles
 11220                           ; simple_byte           25    13 (average)
 11221                           ;	Chosen strategy is simple_byte
 11222  005126  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11223  005128  0A01               	xorlw	1	; case 1
 11224  00512A  B4D8               	btfsc	status,2,c
 11225  00512C  D7E9               	goto	l2003
 11226  00512E  0A03               	xorlw	3	; case 2
 11227  005130  B4D8               	btfsc	status,2,c
 11228  005132  0012               	return	
 11229  005134  0A01               	xorlw	1	; case 3
 11230  005136  B4D8               	btfsc	status,2,c
 11231  005138  D7E6               	goto	l2005
 11232  00513A  0A06               	xorlw	6	; case 5
 11233  00513C  B4D8               	btfsc	status,2,c
 11234  00513E  0012               	return	
 11235  005140  0A77               	xorlw	119	; case 114
 11236  005142  B4D8               	btfsc	status,2,c
 11237  005144  0012               	return	
 11238  005146  0A01               	xorlw	1	; case 115
 11239  005148  B4D8               	btfsc	status,2,c
 11240  00514A  0012               	return	
 11241  00514C  0A07               	xorlw	7	; case 116
 11242  00514E  B4D8               	btfsc	status,2,c
 11243  005150  0012               	return	
 11244  005152  0A01               	xorlw	1	; case 117
 11245  005154  0012               	return	
 11246  005156                     l15301:
 11247                           
 11248                           ; BSR set to: 0
 11249                           ; Switch size 1, requested type "space"
 11250                           ; Number of cases is 1, Range of values is 255 to 255
 11251                           ; switch strategies available:
 11252                           ; Name         Instructions Cycles
 11253                           ; simple_byte            4     3 (average)
 11254                           ;	Chosen strategy is simple_byte
 11255  005156  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11256  005158  0AFF               	xorlw	255	; case 255
 11257  00515A  0012               	return	
 11258  00515C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11259                           	opt stack 0
 11260                           tosu	equ	0xFFF
 11261                           tosh	equ	0xFFE
 11262                           tosl	equ	0xFFD
 11263                           pclath	equ	0xFFA
 11264                           tblptru	equ	0xFF8
 11265                           tblptrh	equ	0xFF7
 11266                           tblptrl	equ	0xFF6
 11267                           tablat	equ	0xFF5
 11268                           prodh	equ	0xFF4
 11269                           prodl	equ	0xFF3
 11270                           intcon	equ	0xFF2
 11271                           intcon2	equ	0xFF1
 11272                           intcon3	equ	0xFF0
 11273                           indf0	equ	0xFEF
 11274                           postinc0	equ	0xFEE
 11275                           plusw0	equ	0xFEB
 11276                           fsr0h	equ	0xFEA
 11277                           fsr0l	equ	0xFE9
 11278                           wreg	equ	0xFE8
 11279                           postinc1	equ	0xFE6
 11280                           postdec1	equ	0xFE5
 11281                           plusw1	equ	0xFE3
 11282                           fsr1h	equ	0xFE2
 11283                           fsr1l	equ	0xFE1
 11284                           indf2	equ	0xFDF
 11285                           postinc2	equ	0xFDE
 11286                           postdec2	equ	0xFDD
 11287                           plusw2	equ	0xFDB
 11288                           fsr2h	equ	0xFDA
 11289                           fsr2l	equ	0xFD9
 11290                           status	equ	0xFD8
 11291                           
 11292 ;; *************** function _USBCheckCDCRequest *****************
 11293 ;; Defined at:
 11294 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      void 
 11301 ;; Registers used:
 11302 ;;		wreg, status,2, status,0
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;Total ram usage:        0 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:   11
 11315 ;; This function calls:
 11316 ;;		Nothing
 11317 ;; This function is called by:
 11318 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text45
 11323  004132                     __ptext45:
 11324                           	opt stack 0
 11325  004132                     _USBCheckCDCRequest:
 11326                           	opt stack 14
 11327                           
 11328                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11329                           
 11330                           ;incstack = 0
 11331  004132  0104               	movlb	4	; () banked
 11332  004134  5130               	movf	48,w,b	;volatile
 11333  004136  0B1F               	andlw	31
 11334  004138  06E8               	decf	wreg,f,c
 11335  00413A  A4D8               	btfss	status,2,c
 11336  00413C  0012               	return	
 11337                           
 11338                           ; BSR set to: 4
 11339                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11340                           
 11341                           ; BSR set to: 4
 11342                           
 11343                           ; BSR set to: 4
 11344  00413E  3930               	swapf	48,w,b	;volatile
 11345  004140  32E8               	rrcf	wreg,f,c
 11346  004142  0B03               	andlw	3
 11347  004144  06E8               	decf	wreg,f,c
 11348  004146  A4D8               	btfss	status,2,c
 11349  004148  0012               	return	
 11350                           
 11351                           ; BSR set to: 4
 11352                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11353                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11354                           
 11355                           ; BSR set to: 4
 11356                           
 11357                           ; BSR set to: 4
 11358  00414A  5134               	movf	52,w,b	;volatile
 11359  00414C  B4D8               	btfsc	status,2,c
 11360  00414E  D037               	goto	l1899
 11361                           
 11362                           ; BSR set to: 4
 11363  004150  0534               	decf	52,w,b	;volatile
 11364  004152  A4D8               	btfss	status,2,c
 11365  004154  0012               	return	
 11366  004156  D033               	goto	l1899
 11367  004158                     
 11368                           ; BSR set to: 4
 11369                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11370                           
 11371                           ; BSR set to: 4
 11372  004158  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11373  00415A  0100               	movlb	0	; () banked
 11374  00415C  6FB5               	movwf	_inPipes& (0+255),b
 11375  00415E  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11376  004160  6FB6               	movwf	(_inPipes+1)& (0+255),b
 11377                           
 11378                           ; BSR set to: 0
 11379                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11380  004162  0E00               	movlw	0
 11381  004164  6FBA               	movwf	(_inPipes+5)& (0+255),b
 11382  004166  0E08               	movlw	8
 11383  004168  6FB9               	movwf	(_inPipes+4)& (0+255),b
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11387  00416A  81B8               	bsf	(_inPipes+3)& (0+255),0,b
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11391  00416C  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 11392                           
 11393                           ;usb_device_cdc.c: 178: break;
 11394  00416E  0012               	return	
 11395  004170                     
 11396                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11397                           
 11398                           ; BSR set to: 0
 11399  004170  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11400  004172  0100               	movlb	0	; () banked
 11401  004174  6FB5               	movwf	_inPipes& (0+255),b
 11402  004176  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11403  004178  6FB6               	movwf	(_inPipes+1)& (0+255),b
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11407  00417A  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 11408                           
 11409                           ;usb_device_cdc.c: 183: break;
 11410  00417C  0012               	return	
 11411  00417E                     l1903:
 11412                           
 11413                           ; BSR set to: 4
 11414                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11415  00417E  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11416  004182  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11417                           
 11418                           ; BSR set to: 4
 11419                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11420  004186  0E83               	movlw	low _line_coding
 11421  004188  0101               	movlb	1	; () banked
 11422  00418A  6FC9               	movwf	_outPipes& (0+255),b
 11423  00418C  0E03               	movlw	high _line_coding
 11424  00418E  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11425                           
 11426                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11427  004190  0E00               	movlw	0
 11428  004192  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11429  004194  0E00               	movlw	0
 11430  004196  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11431                           
 11432                           ; BSR set to: 1
 11433                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11434  004198  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11435                           
 11436                           ;usb_device_cdc.c: 192: break;
 11437  00419A  0012               	return	
 11438  00419C                     
 11439                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11440                           
 11441                           ; BSR set to: 1
 11442  00419C  0E83               	movlw	low _line_coding
 11443  00419E  0100               	movlb	0	; () banked
 11444  0041A0  6FB5               	movwf	_inPipes& (0+255),b
 11445  0041A2  0E03               	movlw	high _line_coding
 11446  0041A4  6FB6               	movwf	(_inPipes+1)& (0+255),b
 11447                           
 11448                           ; BSR set to: 0
 11449  0041A6  0E00               	movlw	0
 11450  0041A8  6FBA               	movwf	(_inPipes+5)& (0+255),b
 11451  0041AA  0E07               	movlw	7
 11452  0041AC  6FB9               	movwf	(_inPipes+4)& (0+255),b
 11453                           
 11454                           ; BSR set to: 0
 11455  0041AE  0EC1               	movlw	193
 11456  0041B0  6FB8               	movwf	(_inPipes+3)& (0+255),b
 11457                           
 11458                           ;usb_device_cdc.c: 199: break;
 11459  0041B2  0012               	return	
 11460  0041B4                     l1905:
 11461                           
 11462                           ; BSR set to: 4
 11463                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11464  0041B4  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 11465                           
 11466                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11467  0041B8  0100               	movlb	0	; () banked
 11468  0041BA  8FB8               	bsf	(_inPipes+3)& (0+255),7,b
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;usb_device_cdc.c: 261: }
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;usb_device_cdc.c: 260: break;
 11475                           
 11476                           ;usb_device_cdc.c: 259: default:
 11477                           
 11478                           ;usb_device_cdc.c: 235: break;
 11479  0041BC  0012               	return	
 11480  0041BE                     l1899:
 11481                           
 11482                           ; BSR set to: 0
 11483  0041BE  0104               	movlb	4	; () banked
 11484  0041C0  5131               	movf	49,w,b	;volatile
 11485                           
 11486                           ; Switch size 1, requested type "space"
 11487                           ; Number of cases is 5, Range of values is 0 to 34
 11488                           ; switch strategies available:
 11489                           ; Name         Instructions Cycles
 11490                           ; simple_byte           16     9 (average)
 11491                           ;	Chosen strategy is simple_byte
 11492  0041C2  0A00               	xorlw	0	; case 0
 11493  0041C4  B4D8               	btfsc	status,2,c
 11494  0041C6  D7C8               	goto	l1900
 11495  0041C8  0A01               	xorlw	1	; case 1
 11496  0041CA  B4D8               	btfsc	status,2,c
 11497  0041CC  D7D1               	goto	l1902
 11498  0041CE  0A21               	xorlw	33	; case 32
 11499  0041D0  B4D8               	btfsc	status,2,c
 11500  0041D2  D7D5               	goto	l1903
 11501  0041D4  0A01               	xorlw	1	; case 33
 11502  0041D6  B4D8               	btfsc	status,2,c
 11503  0041D8  D7E1               	goto	l1904
 11504  0041DA  0A03               	xorlw	3	; case 34
 11505  0041DC  A4D8               	btfss	status,2,c
 11506  0041DE  0012               	return	
 11507  0041E0  D7E9               	goto	l1905
 11508  0041E2                     __end_of_USBCheckCDCRequest:
 11509                           	opt stack 0
 11510                           tosu	equ	0xFFF
 11511                           tosh	equ	0xFFE
 11512                           tosl	equ	0xFFD
 11513                           pclath	equ	0xFFA
 11514                           tblptru	equ	0xFF8
 11515                           tblptrh	equ	0xFF7
 11516                           tblptrl	equ	0xFF6
 11517                           tablat	equ	0xFF5
 11518                           prodh	equ	0xFF4
 11519                           prodl	equ	0xFF3
 11520                           intcon	equ	0xFF2
 11521                           intcon2	equ	0xFF1
 11522                           intcon3	equ	0xFF0
 11523                           indf0	equ	0xFEF
 11524                           postinc0	equ	0xFEE
 11525                           plusw0	equ	0xFEB
 11526                           fsr0h	equ	0xFEA
 11527                           fsr0l	equ	0xFE9
 11528                           wreg	equ	0xFE8
 11529                           postinc1	equ	0xFE6
 11530                           postdec1	equ	0xFE5
 11531                           plusw1	equ	0xFE3
 11532                           fsr1h	equ	0xFE2
 11533                           fsr1l	equ	0xFE1
 11534                           indf2	equ	0xFDF
 11535                           postinc2	equ	0xFDE
 11536                           postdec2	equ	0xFDD
 11537                           plusw2	equ	0xFDB
 11538                           fsr2h	equ	0xFDA
 11539                           fsr2l	equ	0xFD9
 11540                           status	equ	0xFD8
 11541                           
 11542 ;; *************** function _CDCInitEP *****************
 11543 ;; Defined at:
 11544 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      void 
 11551 ;; Registers used:
 11552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used:    1
 11564 ;; Hardware stack levels required when called:   13
 11565 ;; This function calls:
 11566 ;;		_USBEnableEndpoint
 11567 ;;		_USBTransferOnePacket
 11568 ;; This function is called by:
 11569 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573                           	psect	text46
 11574  004EF8                     __ptext46:
 11575                           	opt stack 0
 11576  004EF8                     _CDCInitEP:
 11577                           	opt stack 12
 11578                           
 11579                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11580                           
 11581                           ;incstack = 0
 11582  004EF8  0E80               	movlw	128
 11583  004EFA  0103               	movlb	3	; () banked
 11584  004EFC  6F83               	movwf	_line_coding& (0+255),b
 11585  004EFE  0E25               	movlw	37
 11586  004F00  6F84               	movwf	(_line_coding+1)& (0+255),b
 11587  004F02  0E00               	movlw	0
 11588  004F04  6F85               	movwf	(_line_coding+2)& (0+255),b
 11589  004F06  0E00               	movlw	0
 11590  004F08  6F86               	movwf	(_line_coding+3)& (0+255),b
 11591                           
 11592                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11593  004F0A  0E00               	movlw	0
 11594  004F0C  6F87               	movwf	(_line_coding+4)& (0+255),b
 11595                           
 11596                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11597  004F0E  0E00               	movlw	0
 11598  004F10  6F88               	movwf	(_line_coding+5)& (0+255),b
 11599                           
 11600                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11601  004F12  0E08               	movlw	8
 11602  004F14  6F89               	movwf	(_line_coding+6)& (0+255),b
 11603                           
 11604                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11605  004F16  0E00               	movlw	0
 11606  004F18  0100               	movlb	0	; () banked
 11607  004F1A  6FCB               	movwf	_cdc_rx_len& (0+255),b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11611  004F1C  0E1A               	movlw	26
 11612  004F1E  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11613  004F20  0E01               	movlw	1
 11614  004F22  EC07  F02C         	call	_USBEnableEndpoint
 11615                           
 11616                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11617  004F26  0E1E               	movlw	30
 11618  004F28  0100               	movlb	0	; () banked
 11619  004F2A  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11620  004F2C  0E02               	movlw	2
 11621  004F2E  EC07  F02C         	call	_USBEnableEndpoint
 11622                           
 11623                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11624  004F32  0E00               	movlw	0
 11625  004F34  0100               	movlb	0	; () banked
 11626  004F36  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11627  004F38  0E50               	movlw	low _cdc_data_rx
 11628  004F3A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11629  004F3C  0E05               	movlw	high _cdc_data_rx
 11630  004F3E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11631  004F40  0E40               	movlw	64
 11632  004F42  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11633  004F44  0E02               	movlw	2
 11634  004F46  ECE1  F01F         	call	_USBTransferOnePacket
 11635  004F4A  C07D  F0C1         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11636  004F4E  C07E  F0C2         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11637                           
 11638                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11639  004F52  0E00               	movlw	0
 11640  004F54  0101               	movlb	1	; () banked
 11641  004F56  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11642  004F58  0E00               	movlw	0
 11643  004F5A  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11644                           
 11645                           ; BSR set to: 1
 11646                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11647  004F5C  0E00               	movlw	0
 11648  004F5E  0100               	movlb	0	; () banked
 11649  004F60  6FCA               	movwf	_cdc_trf_state& (0+255),b
 11650                           
 11651                           ; BSR set to: 0
 11652  004F62  0012               	return		;funcret
 11653  004F64                     __end_of_CDCInitEP:
 11654                           	opt stack 0
 11655                           tosu	equ	0xFFF
 11656                           tosh	equ	0xFFE
 11657                           tosl	equ	0xFFD
 11658                           pclath	equ	0xFFA
 11659                           tblptru	equ	0xFF8
 11660                           tblptrh	equ	0xFF7
 11661                           tblptrl	equ	0xFF6
 11662                           tablat	equ	0xFF5
 11663                           prodh	equ	0xFF4
 11664                           prodl	equ	0xFF3
 11665                           intcon	equ	0xFF2
 11666                           intcon2	equ	0xFF1
 11667                           intcon3	equ	0xFF0
 11668                           indf0	equ	0xFEF
 11669                           postinc0	equ	0xFEE
 11670                           plusw0	equ	0xFEB
 11671                           fsr0h	equ	0xFEA
 11672                           fsr0l	equ	0xFE9
 11673                           wreg	equ	0xFE8
 11674                           postinc1	equ	0xFE6
 11675                           postdec1	equ	0xFE5
 11676                           plusw1	equ	0xFE3
 11677                           fsr1h	equ	0xFE2
 11678                           fsr1l	equ	0xFE1
 11679                           indf2	equ	0xFDF
 11680                           postinc2	equ	0xFDE
 11681                           postdec2	equ	0xFDD
 11682                           plusw2	equ	0xFDB
 11683                           fsr2h	equ	0xFDA
 11684                           fsr2l	equ	0xFD9
 11685                           status	equ	0xFD8
 11686                           
 11687 ;; *************** function _USBEnableEndpoint *****************
 11688 ;; Defined at:
 11689 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  ep              1    wreg     unsigned char 
 11692 ;;  options         1   37[BANK0 ] unsigned char 
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;  ep              1   40[BANK0 ] unsigned char 
 11695 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11696 ;;		 -> UEP0(1), 
 11697 ;; Return value:  Size  Location     Type
 11698 ;;                  1    wreg      void 
 11699 ;; Registers used:
 11700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11701 ;; Tracked objects:
 11702 ;;		On entry : 0/0
 11703 ;;		On exit  : 0/0
 11704 ;;		Unchanged: 0/0
 11705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11706 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11709 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11710 ;;Total ram usage:        4 bytes
 11711 ;; Hardware stack levels used:    1
 11712 ;; Hardware stack levels required when called:   12
 11713 ;; This function calls:
 11714 ;;		_USBConfigureEndpoint
 11715 ;; This function is called by:
 11716 ;;		_CDCInitEP
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           	psect	text47
 11721  00580E                     __ptext47:
 11722                           	opt stack 0
 11723  00580E                     _USBEnableEndpoint:
 11724                           	opt stack 12
 11725                           
 11726                           ; BSR set to: 0
 11727                           ;incstack = 0
 11728                           ;USBEnableEndpoint@ep stored from wreg
 11729  00580E  0100               	movlb	0	; () banked
 11730  005810  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11731                           
 11732                           ;usb_device.c: 898: unsigned char* p;
 11733                           ;usb_device.c: 902: if(options & 0x04)
 11734  005812  0100               	movlb	0	; () banked
 11735  005814  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11736  005816  D005               	goto	l1640
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;usb_device.c: 903: {
 11740                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11741  005818  0E00               	movlw	0
 11742  00581A  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11743  00581C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11744  00581E  EC83  F023         	call	_USBConfigureEndpoint
 11745  005822                     l1640:
 11746                           
 11747                           ;usb_device.c: 905: }
 11748                           ;usb_device.c: 906: if(options & 0x02)
 11749  005822  0100               	movlb	0	; () banked
 11750  005824  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11751  005826  D005               	goto	l1641
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;usb_device.c: 907: {
 11755                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11756  005828  0E01               	movlw	1
 11757  00582A  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11758  00582C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11759  00582E  EC83  F023         	call	_USBConfigureEndpoint
 11760  005832                     l1641:
 11761                           
 11762                           ;usb_device.c: 909: }
 11763                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11764  005832  0100               	movlb	0	; () banked
 11765  005834  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11766  005836  0D01               	mullw	1
 11767  005838  0E26               	movlw	38
 11768  00583A  24F3               	addwf	prodl,w,c
 11769  00583C  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11770  00583E  0E0F               	movlw	15
 11771  005840  20F4               	addwfc	prodh,w,c
 11772  005842  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11773                           
 11774                           ; BSR set to: 0
 11775                           ;usb_device.c: 919: *p = options;
 11776  005844  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11777  005848  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11778  00584C  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11779                           
 11780                           ; BSR set to: 0
 11781  005850  0012               	return		;funcret
 11782  005852                     __end_of_USBEnableEndpoint:
 11783                           	opt stack 0
 11784                           tosu	equ	0xFFF
 11785                           tosh	equ	0xFFE
 11786                           tosl	equ	0xFFD
 11787                           pclath	equ	0xFFA
 11788                           tblptru	equ	0xFF8
 11789                           tblptrh	equ	0xFF7
 11790                           tblptrl	equ	0xFF6
 11791                           tablat	equ	0xFF5
 11792                           prodh	equ	0xFF4
 11793                           prodl	equ	0xFF3
 11794                           intcon	equ	0xFF2
 11795                           intcon2	equ	0xFF1
 11796                           intcon3	equ	0xFF0
 11797                           indf0	equ	0xFEF
 11798                           postinc0	equ	0xFEE
 11799                           plusw0	equ	0xFEB
 11800                           fsr0h	equ	0xFEA
 11801                           fsr0l	equ	0xFE9
 11802                           wreg	equ	0xFE8
 11803                           postinc1	equ	0xFE6
 11804                           postdec1	equ	0xFE5
 11805                           plusw1	equ	0xFE3
 11806                           fsr1h	equ	0xFE2
 11807                           fsr1l	equ	0xFE1
 11808                           indf2	equ	0xFDF
 11809                           postinc2	equ	0xFDE
 11810                           postdec2	equ	0xFDD
 11811                           plusw2	equ	0xFDB
 11812                           fsr2h	equ	0xFDA
 11813                           fsr2l	equ	0xFD9
 11814                           status	equ	0xFD8
 11815                           
 11816 ;; *************** function _USBConfigureEndpoint *****************
 11817 ;; Defined at:
 11818 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;  EPNum           1    wreg     unsigned char 
 11821 ;;  direction       1   29[BANK0 ] unsigned char 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11824 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11825 ;;		 -> BDT(48), 
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      void 
 11828 ;; Registers used:
 11829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11835 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11836 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11838 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11839 ;;Total ram usage:        8 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:   11
 11842 ;; This function calls:
 11843 ;;		Nothing
 11844 ;; This function is called by:
 11845 ;;		_USBEnableEndpoint
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           	psect	text48
 11850  004706                     __ptext48:
 11851                           	opt stack 0
 11852  004706                     _USBConfigureEndpoint:
 11853                           	opt stack 12
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;incstack = 0
 11857                           ;USBConfigureEndpoint@EPNum stored from wreg
 11858  004706  0100               	movlb	0	; () banked
 11859  004708  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11860                           
 11861                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11862                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11863  00470A  0E00               	movlw	0
 11864  00470C  0100               	movlb	0	; () banked
 11865  00470E  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11866  004710  0E04               	movlw	4
 11867  004712  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11868                           
 11869                           ; BSR set to: 0
 11870                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11871  004714  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11872  004716  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11873  004718  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11874  00471A  90D8               	bcf	status,0,c
 11875  00471C  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11876  00471E  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11877  004720  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11878  004722  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11879  004724  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11880  004726  90D8               	bcf	status,0,c
 11881  004728  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11882  00472A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11883  00472C  90D8               	bcf	status,0,c
 11884  00472E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11885  004730  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11886  004732  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11887  004734  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11888  004736  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11889  004738  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11890  00473A  90D8               	bcf	status,0,c
 11891  00473C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11892  00473E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11893  004740  90D8               	bcf	status,0,c
 11894  004742  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11895  004744  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11896  004746  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11897  004748  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11898  00474A  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11899  00474C  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11900                           
 11901                           ; BSR set to: 0
 11902                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11903  00474E  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11904  004752  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11905  004756  9EDF               	bcf	indf2,7,c
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;usb_device.c: 1575: if(direction == 0)
 11909  004758  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11910  00475A  A4D8               	btfss	status,2,c
 11911  00475C  D007               	goto	l1676
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;usb_device.c: 1576: {
 11915                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11916  00475E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11917  004760  0D02               	mullw	2
 11918  004762  0E0E               	movlw	low _pBDTEntryOut
 11919  004764  24F3               	addwf	prodl,w,c
 11920  004766  6ED9               	movwf	fsr2l,c
 11921  004768  0E03               	movlw	high _pBDTEntryOut
 11922  00476A  D006               	goto	L10
 11923  00476C                     l1676:
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;usb_device.c: 1579: else
 11927                           ;usb_device.c: 1580: {
 11928                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11929                           
 11930                           ; BSR set to: 0
 11931  00476C  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11932  00476E  0D02               	mullw	2
 11933  004770  0EBB               	movlw	low _pBDTEntryIn
 11934  004772  24F3               	addwf	prodl,w,c
 11935  004774  6ED9               	movwf	fsr2l,c
 11936  004776  0E00               	movlw	high _pBDTEntryIn
 11937  004778                     L10:
 11938  004778  20F4               	addwfc	prodh,w,c
 11939  00477A  6EDA               	movwf	fsr2h,c
 11940  00477C  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11941  004780  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;usb_device.c: 1582: }
 11945                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11946                           
 11947                           ; BSR set to: 0
 11948  004784  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11949  004788  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11950  00478C  9CDF               	bcf	indf2,6,c
 11951                           
 11952                           ; BSR set to: 0
 11953                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11954  00478E  EE20 F004          	lfsr	2,4
 11955  004792  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11956  004794  26D9               	addwf	fsr2l,f,c
 11957  004796  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11958  004798  22DA               	addwfc	fsr2h,f,c
 11959  00479A  8CDF               	bsf	indf2,6,c
 11960                           
 11961                           ; BSR set to: 0
 11962  00479C  0012               	return		;funcret
 11963  00479E                     __end_of_USBConfigureEndpoint:
 11964                           	opt stack 0
 11965                           tosu	equ	0xFFF
 11966                           tosh	equ	0xFFE
 11967                           tosl	equ	0xFFD
 11968                           pclath	equ	0xFFA
 11969                           tblptru	equ	0xFF8
 11970                           tblptrh	equ	0xFF7
 11971                           tblptrl	equ	0xFF6
 11972                           tablat	equ	0xFF5
 11973                           prodh	equ	0xFF4
 11974                           prodl	equ	0xFF3
 11975                           intcon	equ	0xFF2
 11976                           intcon2	equ	0xFF1
 11977                           intcon3	equ	0xFF0
 11978                           indf0	equ	0xFEF
 11979                           postinc0	equ	0xFEE
 11980                           plusw0	equ	0xFEB
 11981                           fsr0h	equ	0xFEA
 11982                           fsr0l	equ	0xFE9
 11983                           wreg	equ	0xFE8
 11984                           postinc1	equ	0xFE6
 11985                           postdec1	equ	0xFE5
 11986                           plusw1	equ	0xFE3
 11987                           fsr1h	equ	0xFE2
 11988                           fsr1l	equ	0xFE1
 11989                           indf2	equ	0xFDF
 11990                           postinc2	equ	0xFDE
 11991                           postdec2	equ	0xFDD
 11992                           plusw2	equ	0xFDB
 11993                           fsr2h	equ	0xFDA
 11994                           fsr2l	equ	0xFD9
 11995                           status	equ	0xFD8
 11996                           
 11997 ;; *************** function _USBCtrlTrfOutHandler *****************
 11998 ;; Defined at:
 11999 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;		None
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;		None
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;Total ram usage:        0 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:   13
 12020 ;; This function calls:
 12021 ;;		_USBCtrlTrfRxService
 12022 ;; This function is called by:
 12023 ;;		_USBCtrlEPService
 12024 ;; This function uses a non-reentrant model
 12025 ;;
 12026                           
 12027                           	psect	text49
 12028  004FD0                     __ptext49:
 12029                           	opt stack 0
 12030  004FD0                     _USBCtrlTrfOutHandler:
 12031                           	opt stack 12
 12032                           
 12033                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;incstack = 0
 12037  004FD0  0E02               	movlw	2
 12038  004FD2  0100               	movlb	0	; () banked
 12039  004FD4  19CE               	xorwf	_controlTransferState& (0+255),w,b
 12040  004FD6  A4D8               	btfss	status,2,c
 12041  004FD8  D003               	goto	l1782
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;usb_device.c: 2558: {
 12045                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12046  004FDA  ECC0  F017         	call	_USBCtrlTrfRxService	;wreg free
 12047                           
 12048                           ;usb_device.c: 2560: }
 12049  004FDE  0012               	return	
 12050  004FE0                     l1782:
 12051                           
 12052                           ;usb_device.c: 2561: else
 12053                           ;usb_device.c: 2562: {
 12054                           ;usb_device.c: 2565: controlTransferState = 0;
 12055  004FE0  0E00               	movlw	0
 12056  004FE2  0100               	movlb	0	; () banked
 12057  004FE4  6FCE               	movwf	_controlTransferState& (0+255),b
 12058                           
 12059                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12060  004FE6  0101               	movlb	1	; () banked
 12061  004FE8  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12062  004FEA  A4D8               	btfss	status,2,c
 12063  004FEC  D020               	goto	l1784
 12064                           
 12065                           ; BSR set to: 1
 12066                           ;usb_device.c: 2573: {
 12067                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12068  004FEE  0100               	movlb	0	; () banked
 12069  004FF0  EE20 F001          	lfsr	2,1
 12070  004FF4  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12071  004FF6  26D9               	addwf	fsr2l,f,c
 12072  004FF8  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12073  004FFA  22DA               	addwfc	fsr2h,f,c
 12074  004FFC  0E08               	movlw	8
 12075  004FFE  6EDF               	movwf	indf2,c
 12076                           
 12077                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12078  005000  EE20 F002          	lfsr	2,2
 12079  005004  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12080  005006  26D9               	addwf	fsr2l,f,c
 12081  005008  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12082  00500A  22DA               	addwfc	fsr2h,f,c
 12083  00500C  0E30               	movlw	48
 12084  00500E  6EDE               	movwf	postinc2,c
 12085  005010  0E04               	movlw	4
 12086  005012  6EDD               	movwf	postdec2,c
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12090  005014  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12091  005018  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12092  00501C  0E0C               	movlw	12
 12093  00501E  6EDF               	movwf	indf2,c
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12097  005020  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12098  005024  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12099  005028  0E00               	movlw	0
 12100  00502A  8EDB               	bsf	plusw2,7,c
 12101                           
 12102                           ;usb_device.c: 2578: }
 12103  00502C  0012               	return	
 12104  00502E                     l1784:
 12105                           
 12106                           ;usb_device.c: 2579: else
 12107                           ;usb_device.c: 2580: {
 12108                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12109                           
 12110                           ; BSR set to: 0
 12111  00502E  0E00               	movlw	0
 12112  005030  0101               	movlb	1	; () banked
 12113  005032  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12114                           
 12115                           ; BSR set to: 1
 12116  005034  0012               	return	
 12117  005036                     __end_of_USBCtrlTrfOutHandler:
 12118                           	opt stack 0
 12119                           tosu	equ	0xFFF
 12120                           tosh	equ	0xFFE
 12121                           tosl	equ	0xFFD
 12122                           pclath	equ	0xFFA
 12123                           tblptru	equ	0xFF8
 12124                           tblptrh	equ	0xFF7
 12125                           tblptrl	equ	0xFF6
 12126                           tablat	equ	0xFF5
 12127                           prodh	equ	0xFF4
 12128                           prodl	equ	0xFF3
 12129                           intcon	equ	0xFF2
 12130                           intcon2	equ	0xFF1
 12131                           intcon3	equ	0xFF0
 12132                           indf0	equ	0xFEF
 12133                           postinc0	equ	0xFEE
 12134                           plusw0	equ	0xFEB
 12135                           fsr0h	equ	0xFEA
 12136                           fsr0l	equ	0xFE9
 12137                           wreg	equ	0xFE8
 12138                           postinc1	equ	0xFE6
 12139                           postdec1	equ	0xFE5
 12140                           plusw1	equ	0xFE3
 12141                           fsr1h	equ	0xFE2
 12142                           fsr1l	equ	0xFE1
 12143                           indf2	equ	0xFDF
 12144                           postinc2	equ	0xFDE
 12145                           postdec2	equ	0xFDD
 12146                           plusw2	equ	0xFDB
 12147                           fsr2h	equ	0xFDA
 12148                           fsr2l	equ	0xFD9
 12149                           status	equ	0xFD8
 12150                           
 12151 ;; *************** function _USBCtrlTrfRxService *****************
 12152 ;; Defined at:
 12153 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;		None
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12158 ;;  i               1   29[BANK0 ] unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12171 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12172 ;;Total ram usage:        2 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:   12
 12175 ;; This function calls:
 12176 ;;		_USBCtrlEPAllowStatusStage
 12177 ;; This function is called by:
 12178 ;;		_USBCtrlTrfOutHandler
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text50
 12183  002F80                     __ptext50:
 12184                           	opt stack 0
 12185  002F80                     _USBCtrlTrfRxService:
 12186                           	opt stack 12
 12187                           
 12188                           ;usb_device.c: 1872: uint8_t byteToRead;
 12189                           ;usb_device.c: 1873: uint8_t i;
 12190                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12191                           
 12192                           ;incstack = 0
 12193  002F80  0100               	movlb	0	; () banked
 12194  002F82  EE20 F001          	lfsr	2,1
 12195  002F86  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12196  002F88  26D9               	addwf	fsr2l,f,c
 12197  002F8A  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12198  002F8C  22DA               	addwfc	fsr2h,f,c
 12199  002F8E  50DF               	movf	indf2,w,c
 12200  002F90  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12204  002F92  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12205  002F94  0101               	movlb	1	; () banked
 12206  002F96  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12207  002F98  0E00               	movlw	0
 12208  002F9A  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12209  002F9C  A0D8               	btfss	status,0,c
 12210                           
 12211                           ; BSR set to: 1
 12212                           ;usb_device.c: 1884: {
 12213                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12214  002F9E  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12215                           
 12216                           ; BSR set to: 1
 12217                           ;usb_device.c: 1886: }
 12218                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12219                           
 12220                           ; BSR set to: 1
 12221  002FA2  0100               	movlb	0	; () banked
 12222  002FA4  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12223  002FA6  0101               	movlb	1	; () banked
 12224  002FA8  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12225  002FAA  0E00               	movlw	0
 12226  002FAC  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12227                           
 12228                           ; BSR set to: 1
 12229                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12230  002FAE  0E00               	movlw	0
 12231  002FB0  0100               	movlb	0	; () banked
 12232  002FB2  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12233  002FB4  D013               	goto	l1710
 12234  002FB6                     
 12235                           ; BSR set to: 0
 12236                           ;usb_device.c: 1893: {
 12237                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12238                           
 12239                           ; BSR set to: 0
 12240  002FB6  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12241  002FB8  0D01               	mullw	1
 12242  002FBA  0E38               	movlw	56
 12243  002FBC  24F3               	addwf	prodl,w,c
 12244  002FBE  6ED9               	movwf	fsr2l,c
 12245  002FC0  0E04               	movlw	4
 12246  002FC2  20F4               	addwfc	prodh,w,c
 12247  002FC4  6EDA               	movwf	fsr2h,c
 12248  002FC6  C1C9  FFE1         	movff	_outPipes,fsr1l
 12249  002FCA  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12250  002FCE  CFDF FFE7          	movff	indf2,indf1
 12251                           
 12252                           ; BSR set to: 0
 12253  002FD2  0101               	movlb	1	; () banked
 12254  002FD4  4BC9               	infsnz	_outPipes& (0+255),f,b
 12255  002FD6  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12256                           
 12257                           ; BSR set to: 1
 12258  002FD8  0100               	movlb	0	; () banked
 12259  002FDA  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12260  002FDC                     l1710:
 12261                           
 12262                           ; BSR set to: 0
 12263                           
 12264                           ; BSR set to: 0
 12265  002FDC  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12266  002FDE  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12267  002FE0  A0D8               	btfss	status,0,c
 12268  002FE2  D7E9               	goto	l1711
 12269                           
 12270                           ; BSR set to: 0
 12271                           ;usb_device.c: 1895: }
 12272                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12273                           
 12274                           ; BSR set to: 0
 12275  002FE4  0101               	movlb	1	; () banked
 12276  002FE6  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12277  002FE8  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12278  002FEA  B4D8               	btfsc	status,2,c
 12279  002FEC  D033               	goto	l1713
 12280                           
 12281                           ; BSR set to: 1
 12282                           ;usb_device.c: 1900: {
 12283                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12284  002FEE  0100               	movlb	0	; () banked
 12285  002FF0  EE20 F001          	lfsr	2,1
 12286  002FF4  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12287  002FF6  26D9               	addwf	fsr2l,f,c
 12288  002FF8  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12289  002FFA  22DA               	addwfc	fsr2h,f,c
 12290  002FFC  0E08               	movlw	8
 12291  002FFE  6EDF               	movwf	indf2,c
 12292                           
 12293                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12294  003000  EE20 F002          	lfsr	2,2
 12295  003004  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12296  003006  26D9               	addwf	fsr2l,f,c
 12297  003008  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12298  00300A  22DA               	addwfc	fsr2h,f,c
 12299  00300C  0E38               	movlw	56
 12300  00300E  6EDE               	movwf	postinc2,c
 12301  003010  0E04               	movlw	4
 12302  003012  6EDD               	movwf	postdec2,c
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12306  003014  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12307  003018  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12308  00301C  BCDF               	btfsc	indf2,6,c
 12309  00301E  D00D               	goto	l1714
 12310                           
 12311                           ; BSR set to: 0
 12312                           ;usb_device.c: 1904: {
 12313                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12314  003020  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12315  003024  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12316  003028  0E48               	movlw	72
 12317  00302A  6EDF               	movwf	indf2,c
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12321  00302C  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12322  003030  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12323  003034  0E00               	movlw	0
 12324  003036  8EDB               	bsf	plusw2,7,c
 12325                           
 12326                           ;usb_device.c: 1907: }
 12327  003038  0012               	return	
 12328  00303A                     l1714:
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;usb_device.c: 1908: else
 12332                           ;usb_device.c: 1909: {
 12333                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12334                           
 12335                           ; BSR set to: 0
 12336  00303A  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12337  00303E  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12338  003042  0E08               	movlw	8
 12339  003044  6EDF               	movwf	indf2,c
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12343  003046  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12344  00304A  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12345  00304E  0E00               	movlw	0
 12346  003050  8EDB               	bsf	plusw2,7,c
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;usb_device.c: 1912: }
 12350                           ;usb_device.c: 1913: }
 12351  003052  0012               	return	
 12352  003054                     l1713:
 12353                           
 12354                           ;usb_device.c: 1914: else
 12355                           ;usb_device.c: 1915: {
 12356                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12357                           
 12358                           ; BSR set to: 0
 12359  003054  0100               	movlb	0	; () banked
 12360  003056  EE20 F001          	lfsr	2,1
 12361  00305A  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12362  00305C  26D9               	addwf	fsr2l,f,c
 12363  00305E  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12364  003060  22DA               	addwfc	fsr2h,f,c
 12365  003062  0E08               	movlw	8
 12366  003064  6EDF               	movwf	indf2,c
 12367                           
 12368                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12369  003066  EE20 F002          	lfsr	2,2
 12370  00306A  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12371  00306C  26D9               	addwf	fsr2l,f,c
 12372  00306E  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12373  003070  22DA               	addwfc	fsr2h,f,c
 12374  003072  0E30               	movlw	48
 12375  003074  6EDE               	movwf	postinc2,c
 12376  003076  0E04               	movlw	4
 12377  003078  6EDD               	movwf	postdec2,c
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12381  00307A  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12382  00307E  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12383  003082  0E04               	movlw	4
 12384  003084  6EDF               	movwf	indf2,c
 12385                           
 12386                           ; BSR set to: 0
 12387                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12388  003086  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12389  00308A  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12390  00308E  0E00               	movlw	0
 12391  003090  8EDB               	bsf	plusw2,7,c
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;usb_device.c: 1944: }
 12395                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12396                           
 12397                           ; BSR set to: 0
 12398  003092  0101               	movlb	1	; () banked
 12399  003094  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12400                           
 12401                           ; BSR set to: 1
 12402                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12403  003096  0100               	movlb	0	; () banked
 12404  003098  51CC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12405  00309A  A4D8               	btfss	status,2,c
 12406  00309C  0012               	return	
 12407                           
 12408                           ; BSR set to: 0
 12409                           ;usb_device.c: 1960: {
 12410                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12411  00309E  EC27  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12412  0030A2  0012               	return	
 12413  0030A4                     __end_of_USBCtrlTrfRxService:
 12414                           	opt stack 0
 12415                           tosu	equ	0xFFF
 12416                           tosh	equ	0xFFE
 12417                           tosl	equ	0xFFD
 12418                           pclath	equ	0xFFA
 12419                           tblptru	equ	0xFF8
 12420                           tblptrh	equ	0xFF7
 12421                           tblptrl	equ	0xFF6
 12422                           tablat	equ	0xFF5
 12423                           prodh	equ	0xFF4
 12424                           prodl	equ	0xFF3
 12425                           intcon	equ	0xFF2
 12426                           intcon2	equ	0xFF1
 12427                           intcon3	equ	0xFF0
 12428                           indf0	equ	0xFEF
 12429                           postinc0	equ	0xFEE
 12430                           plusw0	equ	0xFEB
 12431                           fsr0h	equ	0xFEA
 12432                           fsr0l	equ	0xFE9
 12433                           wreg	equ	0xFE8
 12434                           indf1	equ	0xFE7
 12435                           postinc1	equ	0xFE6
 12436                           postdec1	equ	0xFE5
 12437                           plusw1	equ	0xFE3
 12438                           fsr1h	equ	0xFE2
 12439                           fsr1l	equ	0xFE1
 12440                           indf2	equ	0xFDF
 12441                           postinc2	equ	0xFDE
 12442                           postdec2	equ	0xFDD
 12443                           plusw2	equ	0xFDB
 12444                           fsr2h	equ	0xFDA
 12445                           fsr2l	equ	0xFD9
 12446                           status	equ	0xFD8
 12447                           
 12448 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12449 ;; Defined at:
 12450 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;		None
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;		None
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;Total ram usage:        0 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:   11
 12471 ;; This function calls:
 12472 ;;		Nothing
 12473 ;; This function is called by:
 12474 ;;		_USBDeviceTasks
 12475 ;;		_USBCtrlEPServiceComplete
 12476 ;;		_USBCtrlTrfRxService
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	text51
 12481  003A4E                     __ptext51:
 12482                           	opt stack 0
 12483  003A4E                     _USBCtrlEPAllowStatusStage:
 12484                           	opt stack 12
 12485                           
 12486                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12487                           
 12488                           ;incstack = 0
 12489  003A4E  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12490  003A50  A4D8               	btfss	status,2,c
 12491  003A52  0012               	return	
 12492                           
 12493                           ;usb_device.c: 1442: {
 12494                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12495  003A54  0E01               	movlw	1
 12496  003A56  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12497                           
 12498                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12499  003A58  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12500  003A5A  A4D8               	btfss	status,2,c
 12501  003A5C  0012               	return	
 12502                           
 12503                           ;usb_device.c: 1445: {
 12504                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12505  003A5E  0E01               	movlw	1
 12506  003A60  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12507                           
 12508                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12509  003A62  0E02               	movlw	2
 12510  003A64  0100               	movlb	0	; () banked
 12511  003A66  19CE               	xorwf	_controlTransferState& (0+255),w,b
 12512  003A68  A4D8               	btfss	status,2,c
 12513  003A6A  D015               	goto	l1664
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;usb_device.c: 1451: {
 12517                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12518  003A6C  EE20 F001          	lfsr	2,1
 12519  003A70  51BB               	movf	_pBDTEntryIn& (0+255),w,b
 12520  003A72  26D9               	addwf	fsr2l,f,c
 12521  003A74  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12522  003A76  22DA               	addwfc	fsr2h,f,c
 12523  003A78  0E00               	movlw	0
 12524  003A7A  6EDF               	movwf	indf2,c
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12528  003A7C  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12529  003A80  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12530  003A84  0E48               	movlw	72
 12531  003A86  6EDF               	movwf	indf2,c
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12535  003A88  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12536  003A8C  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12537  003A90  0E00               	movlw	0
 12538  003A92  8EDB               	bsf	plusw2,7,c
 12539                           
 12540                           ;usb_device.c: 1455: }
 12541  003A94  0012               	return	
 12542  003A96                     l1664:
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12546                           
 12547                           ; BSR set to: 0
 12548  003A96  05CE               	decf	_controlTransferState& (0+255),w,b
 12549  003A98  A4D8               	btfss	status,2,c
 12550  003A9A  0012               	return	
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;usb_device.c: 1457: {
 12554                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12555  003A9C  0E00               	movlw	0
 12556  003A9E  0101               	movlb	1	; () banked
 12557  003AA0  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12558                           
 12559                           ; BSR set to: 1
 12560                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12561  003AA2  0100               	movlb	0	; () banked
 12562  003AA4  EE20 F001          	lfsr	2,1
 12563  003AA8  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12564  003AAA  26D9               	addwf	fsr2l,f,c
 12565  003AAC  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12566  003AAE  22DA               	addwfc	fsr2h,f,c
 12567  003AB0  0E08               	movlw	8
 12568  003AB2  6EDF               	movwf	indf2,c
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12572  003AB4  EE20 F002          	lfsr	2,2
 12573  003AB8  51C5               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12574  003ABA  26D9               	addwf	fsr2l,f,c
 12575  003ABC  51C6               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12576  003ABE  22DA               	addwfc	fsr2h,f,c
 12577  003AC0  0E30               	movlw	48
 12578  003AC2  6EDE               	movwf	postinc2,c
 12579  003AC4  0E04               	movlw	4
 12580  003AC6  6EDD               	movwf	postdec2,c
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12584  003AC8  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12585  003ACC  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12586  003AD0  0E04               	movlw	4
 12587  003AD2  6EDF               	movwf	indf2,c
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12591  003AD4  C0C5  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12592  003AD8  C0C6  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12593  003ADC  0E00               	movlw	0
 12594  003ADE  8EDB               	bsf	plusw2,7,c
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12598  003AE0  0E01               	movlw	1
 12599  003AE2  0101               	movlb	1	; () banked
 12600  003AE4  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12601                           
 12602                           ; BSR set to: 1
 12603                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12604  003AE6  0100               	movlb	0	; () banked
 12605  003AE8  EE20 F001          	lfsr	2,1
 12606  003AEC  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12607  003AEE  26D9               	addwf	fsr2l,f,c
 12608  003AF0  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12609  003AF2  22DA               	addwfc	fsr2h,f,c
 12610  003AF4  0E08               	movlw	8
 12611  003AF6  6EDF               	movwf	indf2,c
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12615  003AF8  EE20 F002          	lfsr	2,2
 12616  003AFC  51C3               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12617  003AFE  26D9               	addwf	fsr2l,f,c
 12618  003B00  51C4               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12619  003B02  22DA               	addwfc	fsr2h,f,c
 12620  003B04  0E30               	movlw	48
 12621  003B06  6EDE               	movwf	postinc2,c
 12622  003B08  0E04               	movlw	4
 12623  003B0A  6EDD               	movwf	postdec2,c
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12627  003B0C  C0C3  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12628  003B10  C0C4  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12629  003B14  0E80               	movlw	128
 12630  003B16  6EDF               	movwf	indf2,c
 12631                           
 12632                           ; BSR set to: 0
 12633                           
 12634                           ; BSR set to: 0
 12635                           
 12636                           ; BSR set to: 0
 12637  003B18  0012               	return	
 12638  003B1A                     __end_of_USBCtrlEPAllowStatusStage:
 12639                           	opt stack 0
 12640                           tosu	equ	0xFFF
 12641                           tosh	equ	0xFFE
 12642                           tosl	equ	0xFFD
 12643                           pclath	equ	0xFFA
 12644                           tblptru	equ	0xFF8
 12645                           tblptrh	equ	0xFF7
 12646                           tblptrl	equ	0xFF6
 12647                           tablat	equ	0xFF5
 12648                           prodh	equ	0xFF4
 12649                           prodl	equ	0xFF3
 12650                           intcon	equ	0xFF2
 12651                           intcon2	equ	0xFF1
 12652                           intcon3	equ	0xFF0
 12653                           indf0	equ	0xFEF
 12654                           postinc0	equ	0xFEE
 12655                           plusw0	equ	0xFEB
 12656                           fsr0h	equ	0xFEA
 12657                           fsr0l	equ	0xFE9
 12658                           wreg	equ	0xFE8
 12659                           indf1	equ	0xFE7
 12660                           postinc1	equ	0xFE6
 12661                           postdec1	equ	0xFE5
 12662                           plusw1	equ	0xFE3
 12663                           fsr1h	equ	0xFE2
 12664                           fsr1l	equ	0xFE1
 12665                           indf2	equ	0xFDF
 12666                           postinc2	equ	0xFDE
 12667                           postdec2	equ	0xFDD
 12668                           plusw2	equ	0xFDB
 12669                           fsr2h	equ	0xFDA
 12670                           fsr2l	equ	0xFD9
 12671                           status	equ	0xFD8
 12672                           
 12673 ;; *************** function _USBCtrlTrfInHandler *****************
 12674 ;; Defined at:
 12675 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;		None
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  1    wreg      void 
 12682 ;; Registers used:
 12683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12693 ;;Total ram usage:        1 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; Hardware stack levels required when called:   12
 12696 ;; This function calls:
 12697 ;;		_USBCtrlTrfTxService
 12698 ;; This function is called by:
 12699 ;;		_USBCtrlEPService
 12700 ;; This function uses a non-reentrant model
 12701 ;;
 12702                           
 12703                           	psect	text52
 12704  003F00                     __ptext52:
 12705                           	opt stack 0
 12706  003F00                     _USBCtrlTrfInHandler:
 12707                           	opt stack 13
 12708                           
 12709                           ;usb_device.c: 2611: uint8_t lastDTS;
 12710                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12711                           
 12712                           ;incstack = 0
 12713  003F00  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12714  003F04  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12715  003F08  0100               	movlb	0	; () banked
 12716  003F0A  0E00               	movlw	0
 12717  003F0C  BCDF               	btfsc	indf2,6,c
 12718  003F0E  0E01               	movlw	1
 12719  003F10  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12723  003F12  0E04               	movlw	4
 12724  003F14  1BBB               	xorwf	_pBDTEntryIn& (0+255),f,b
 12725                           
 12726                           ; BSR set to: 0
 12727                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12728  003F16  0E08               	movlw	8
 12729  003F18  19D0               	xorwf	_USBDeviceState& (0+255),w,b
 12730  003F1A  A4D8               	btfss	status,2,c
 12731  003F1C  D00D               	goto	l1791
 12732                           
 12733                           ; BSR set to: 0
 12734                           ;usb_device.c: 2622: {
 12735                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12736  003F1E  0104               	movlb	4	; () banked
 12737  003F20  5132               	movf	50,w,b	;volatile
 12738  003F22  0B7F               	andlw	127
 12739  003F24  010F               	movlb	15	; () banked
 12740  003F26  6F38               	movwf	56,b	;volatile
 12741                           
 12742                           ; BSR set to: 15
 12743                           ;usb_device.c: 2624: if(UADDR != 0u)
 12744  003F28  5138               	movf	56,w,b	;volatile
 12745  003F2A  B4D8               	btfsc	status,2,c
 12746  003F2C  D002               	goto	l1790
 12747                           
 12748                           ; BSR set to: 15
 12749                           ;usb_device.c: 2625: {
 12750                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12751  003F2E  0E10               	movlw	16
 12752  003F30  D001               	goto	L11
 12753  003F32                     l1790:
 12754                           
 12755                           ;usb_device.c: 2628: else
 12756                           ;usb_device.c: 2629: {
 12757                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12758                           
 12759                           ; BSR set to: 0
 12760  003F32  0E04               	movlw	4
 12761  003F34                     L11:
 12762  003F34  0100               	movlb	0	; () banked
 12763  003F36  6FD0               	movwf	_USBDeviceState& (0+255),b
 12764  003F38                     l1791:
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;usb_device.c: 2631: }
 12768                           ;usb_device.c: 2632: }
 12769                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12770                           
 12771                           ; BSR set to: 0
 12772                           
 12773                           ; BSR set to: 0
 12774  003F38  05CE               	decf	_controlTransferState& (0+255),w,b
 12775  003F3A  A4D8               	btfss	status,2,c
 12776  003F3C  D03B               	goto	l1792
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;usb_device.c: 2636: {
 12780                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12781  003F3E  EE20 F002          	lfsr	2,2
 12782  003F42  51BB               	movf	_pBDTEntryIn& (0+255),w,b
 12783  003F44  26D9               	addwf	fsr2l,f,c
 12784  003F46  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12785  003F48  22DA               	addwfc	fsr2h,f,c
 12786  003F4A  0E38               	movlw	56
 12787  003F4C  6EDE               	movwf	postinc2,c
 12788  003F4E  0E04               	movlw	4
 12789  003F50  6EDD               	movwf	postdec2,c
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12793  003F52  EC82  F01B         	call	_USBCtrlTrfTxService	;wreg free
 12794                           
 12795                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12796  003F56  0E02               	movlw	2
 12797  003F58  0100               	movlb	0	; () banked
 12798  003F5A  19CF               	xorwf	_shortPacketStatus& (0+255),w,b
 12799  003F5C  A4D8               	btfss	status,2,c
 12800  003F5E  D00D               	goto	l1793
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;usb_device.c: 2645: {
 12804                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12805  003F60  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12806  003F64  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12807  003F68  0E04               	movlw	4
 12808  003F6A  6EDF               	movwf	indf2,c
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12812  003F6C  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12813  003F70  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12814  003F74  0E00               	movlw	0
 12815  003F76  8EDB               	bsf	plusw2,7,c
 12816                           
 12817                           ;usb_device.c: 2650: }
 12818  003F78  0012               	return	
 12819  003F7A                     l1793:
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;usb_device.c: 2651: else
 12823                           ;usb_device.c: 2652: {
 12824                           ;usb_device.c: 2653: if(lastDTS == 0)
 12825                           
 12826                           ; BSR set to: 0
 12827  003F7A  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12828  003F7C  A4D8               	btfss	status,2,c
 12829  003F7E  D00D               	goto	l1795
 12830                           
 12831                           ; BSR set to: 0
 12832                           ;usb_device.c: 2654: {
 12833                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12834  003F80  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12835  003F84  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12836  003F88  0E48               	movlw	72
 12837  003F8A  6EDF               	movwf	indf2,c
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12841  003F8C  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12842  003F90  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12843  003F94  0E00               	movlw	0
 12844  003F96  8EDB               	bsf	plusw2,7,c
 12845                           
 12846                           ;usb_device.c: 2657: }
 12847  003F98  0012               	return	
 12848  003F9A                     l1795:
 12849                           
 12850                           ; BSR set to: 0
 12851                           ;usb_device.c: 2658: else
 12852                           ;usb_device.c: 2659: {
 12853                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12854                           
 12855                           ; BSR set to: 0
 12856  003F9A  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12857  003F9E  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12858  003FA2  0E08               	movlw	8
 12859  003FA4  6EDF               	movwf	indf2,c
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12863  003FA6  C0BB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12864  003FAA  C0BC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12865  003FAE  0E00               	movlw	0
 12866  003FB0  8EDB               	bsf	plusw2,7,c
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;usb_device.c: 2662: }
 12870                           ;usb_device.c: 2663: }
 12871                           ;usb_device.c: 2664: }
 12872                           
 12873                           ; BSR set to: 0
 12874  003FB2  0012               	return	
 12875  003FB4                     l1792:
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;usb_device.c: 2665: else
 12879                           ;usb_device.c: 2666: {
 12880                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12881  003FB4  0101               	movlb	1	; () banked
 12882  003FB6  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12883                           
 12884                           ; BSR set to: 1
 12885                           ;usb_device.c: 2675: }
 12886                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12887                           
 12888                           ; BSR set to: 1
 12889  003FB8  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12890                           
 12891                           ; BSR set to: 1
 12892                           ;usb_device.c: 2677: }
 12893                           ;usb_device.c: 2679: controlTransferState = 0;
 12894                           
 12895                           ; BSR set to: 1
 12896  003FBA  0E00               	movlw	0
 12897  003FBC  0100               	movlb	0	; () banked
 12898  003FBE  6FCE               	movwf	_controlTransferState& (0+255),b
 12899  003FC0  0012               	return	
 12900  003FC2                     __end_of_USBCtrlTrfInHandler:
 12901                           	opt stack 0
 12902                           tosu	equ	0xFFF
 12903                           tosh	equ	0xFFE
 12904                           tosl	equ	0xFFD
 12905                           pclath	equ	0xFFA
 12906                           tblptru	equ	0xFF8
 12907                           tblptrh	equ	0xFF7
 12908                           tblptrl	equ	0xFF6
 12909                           tablat	equ	0xFF5
 12910                           prodh	equ	0xFF4
 12911                           prodl	equ	0xFF3
 12912                           intcon	equ	0xFF2
 12913                           intcon2	equ	0xFF1
 12914                           intcon3	equ	0xFF0
 12915                           indf0	equ	0xFEF
 12916                           postinc0	equ	0xFEE
 12917                           plusw0	equ	0xFEB
 12918                           fsr0h	equ	0xFEA
 12919                           fsr0l	equ	0xFE9
 12920                           wreg	equ	0xFE8
 12921                           indf1	equ	0xFE7
 12922                           postinc1	equ	0xFE6
 12923                           postdec1	equ	0xFE5
 12924                           plusw1	equ	0xFE3
 12925                           fsr1h	equ	0xFE2
 12926                           fsr1l	equ	0xFE1
 12927                           indf2	equ	0xFDF
 12928                           postinc2	equ	0xFDE
 12929                           postdec2	equ	0xFDD
 12930                           plusw2	equ	0xFDB
 12931                           fsr2h	equ	0xFDA
 12932                           fsr2l	equ	0xFD9
 12933                           status	equ	0xFD8
 12934                           
 12935 ;; *************** function _USBCtrlTrfTxService *****************
 12936 ;; Defined at:
 12937 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12938 ;; Parameters:    Size  Location     Type
 12939 ;;		None
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12942 ;; Return value:  Size  Location     Type
 12943 ;;                  1    wreg      void 
 12944 ;; Registers used:
 12945 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12946 ;; Tracked objects:
 12947 ;;		On entry : 0/0
 12948 ;;		On exit  : 0/0
 12949 ;;		Unchanged: 0/0
 12950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12955 ;;Total ram usage:        1 bytes
 12956 ;; Hardware stack levels used:    1
 12957 ;; Hardware stack levels required when called:   11
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		_USBCtrlEPAllowDataStage
 12962 ;;		_USBCtrlTrfInHandler
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           	psect	text53
 12967  003704                     __ptext53:
 12968                           	opt stack 0
 12969  003704                     _USBCtrlTrfTxService:
 12970                           	opt stack 11
 12971                           
 12972                           ;usb_device.c: 1791: uint8_t byteToSend;
 12973                           ;usb_device.c: 1795: byteToSend = 8;
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;incstack = 0
 12977  003704  0E08               	movlw	8
 12978  003706  0100               	movlb	0	; () banked
 12979  003708  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12983  00370A  51BA               	movf	(_inPipes+5)& (0+255),w,b
 12984  00370C  E110               	bnz	l11739
 12985  00370E  0E08               	movlw	8
 12986  003710  5DB9               	subwf	(_inPipes+4)& (0+255),w,b
 12987  003712  B0D8               	btfsc	status,0,c
 12988  003714  D00C               	goto	l1697
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;usb_device.c: 1797: {
 12992                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12993  003716  C0B9  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12997  00371A  51CF               	movf	_shortPacketStatus& (0+255),w,b
 12998  00371C  A4D8               	btfss	status,2,c
 12999  00371E  D002               	goto	l1695
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;usb_device.c: 1806: {
 13003                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13004  003720  0E01               	movlw	1
 13005  003722  D004               	goto	L12
 13006  003724                     l1695:
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13010                           
 13011                           ; BSR set to: 0
 13012  003724  05CF               	decf	_shortPacketStatus& (0+255),w,b
 13013  003726  A4D8               	btfss	status,2,c
 13014  003728  D002               	goto	l1697
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;usb_device.c: 1810: {
 13018                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13019  00372A  0E02               	movlw	2
 13020  00372C                     L12:
 13021  00372C  6FCF               	movwf	_shortPacketStatus& (0+255),b
 13022  00372E                     l1697:
 13023  00372E                     l11739:
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device.c: 1812: }
 13027                           ;usb_device.c: 1813: }
 13028                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13029  00372E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13030  003730  5FB9               	subwf	(_inPipes+4)& (0+255),f,b
 13031  003732  0E00               	movlw	0
 13032  003734  5BBA               	subwfb	(_inPipes+5)& (0+255),f,b
 13033                           
 13034                           ; BSR set to: 0
 13035                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13036  003736  EE20 F001          	lfsr	2,1
 13037  00373A  51BB               	movf	_pBDTEntryIn& (0+255),w,b
 13038  00373C  26D9               	addwf	fsr2l,f,c
 13039  00373E  51BC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13040  003740  22DA               	addwfc	fsr2h,f,c
 13041  003742  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13045  003746  0E38               	movlw	56
 13046  003748  0102               	movlb	2	; () banked
 13047  00374A  6FD5               	movwf	_pDst& (0+255),b
 13048  00374C  0E04               	movlw	4
 13049  00374E  6FD6               	movwf	(_pDst+1)& (0+255),b
 13050                           
 13051                           ; BSR set to: 2
 13052                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13053  003750  0100               	movlb	0	; () banked
 13054  003752  A1B8               	btfss	(_inPipes+3)& (0+255),0,b
 13055  003754  D01E               	goto	l1699
 13056  003756  D03E               	goto	l1703
 13057  003758                     
 13058                           ; BSR set to: 0
 13059                           ;usb_device.c: 1830: {
 13060                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13061                           
 13062                           ; BSR set to: 0
 13063  003758  C0B5  FFF6         	movff	_inPipes,tblptrl
 13064  00375C  C0B6  FFF7         	movff	_inPipes+1,tblptrh
 13065  003760  6AF8               	clrf	tblptru,c
 13066  003762  C2D5  FFD9         	movff	_pDst,fsr2l
 13067  003766  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13068  00376A  0E0E               	movlw	(high __ramtop+-1)
 13069  00376C  64F7               	cpfsgt	tblptrh,c
 13070  00376E  D003               	bra	u10357
 13071  003770  0008               	tblrd		*
 13072  003772  50F5               	movf	tablat,w,c
 13073  003774  D005               	bra	u10350
 13074  003776                     u10357:
 13075  003776  CFF6 FFE9          	movff	tblptrl,fsr0l
 13076  00377A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13077  00377E  50EF               	movf	indf0,w,c
 13078  003780                     u10350:
 13079  003780  6EDF               	movwf	indf2,c
 13080  003782  0100               	movlb	0	; () banked
 13081  003784  4BB5               	infsnz	_inPipes& (0+255),f,b
 13082  003786  2BB6               	incf	(_inPipes+1)& (0+255),f,b
 13083                           
 13084                           ; BSR set to: 0
 13085  003788  0102               	movlb	2	; () banked
 13086  00378A  4BD5               	infsnz	_pDst& (0+255),f,b
 13087  00378C  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13088                           
 13089                           ; BSR set to: 2
 13090                           ;usb_device.c: 1832: byteToSend--;
 13091  00378E  0100               	movlb	0	; () banked
 13092  003790  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13093  003792                     l1699:
 13094                           
 13095                           ; BSR set to: 0
 13096                           
 13097                           ; BSR set to: 0
 13098  003792  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13099  003794  B4D8               	btfsc	status,2,c
 13100  003796  0012               	return	
 13101  003798  D7DF               	goto	l1700
 13102  00379A                     
 13103                           ; BSR set to: 0
 13104                           ;usb_device.c: 1838: {
 13105                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13106                           
 13107                           ; BSR set to: 0
 13108  00379A  C0B5  FFF6         	movff	_inPipes,tblptrl
 13109  00379E  C0B6  FFF7         	movff	_inPipes+1,tblptrh
 13110  0037A2  6AF8               	clrf	tblptru,c
 13111  0037A4  C2D5  FFD9         	movff	_pDst,fsr2l
 13112  0037A8  C2D6  FFDA         	movff	_pDst+1,fsr2h
 13113  0037AC  0E0E               	movlw	(high __ramtop+-1)
 13114  0037AE  64F7               	cpfsgt	tblptrh,c
 13115  0037B0  D003               	bra	u10377
 13116  0037B2  0008               	tblrd		*
 13117  0037B4  50F5               	movf	tablat,w,c
 13118  0037B6  D005               	bra	u10370
 13119  0037B8                     u10377:
 13120  0037B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13121  0037BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13122  0037C0  50EF               	movf	indf0,w,c
 13123  0037C2                     u10370:
 13124  0037C2  6EDF               	movwf	indf2,c
 13125  0037C4  0100               	movlb	0	; () banked
 13126  0037C6  4BB5               	infsnz	_inPipes& (0+255),f,b
 13127  0037C8  2BB6               	incf	(_inPipes+1)& (0+255),f,b
 13128                           
 13129                           ; BSR set to: 0
 13130  0037CA  0102               	movlb	2	; () banked
 13131  0037CC  4BD5               	infsnz	_pDst& (0+255),f,b
 13132  0037CE  2BD6               	incf	(_pDst+1)& (0+255),f,b
 13133                           
 13134                           ; BSR set to: 2
 13135                           ;usb_device.c: 1840: byteToSend--;
 13136  0037D0  0100               	movlb	0	; () banked
 13137  0037D2  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13138  0037D4                     l1703:
 13139                           
 13140                           ; BSR set to: 0
 13141                           
 13142                           ; BSR set to: 0
 13143  0037D4  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13144  0037D6  B4D8               	btfsc	status,2,c
 13145  0037D8  0012               	return	
 13146  0037DA  D7DF               	goto	l1704
 13147  0037DC                     __end_of_USBCtrlTrfTxService:
 13148                           	opt stack 0
 13149                           tosu	equ	0xFFF
 13150                           tosh	equ	0xFFE
 13151                           tosl	equ	0xFFD
 13152                           pclath	equ	0xFFA
 13153                           tblptru	equ	0xFF8
 13154                           tblptrh	equ	0xFF7
 13155                           tblptrl	equ	0xFF6
 13156                           tablat	equ	0xFF5
 13157                           prodh	equ	0xFF4
 13158                           prodl	equ	0xFF3
 13159                           intcon	equ	0xFF2
 13160                           intcon2	equ	0xFF1
 13161                           intcon3	equ	0xFF0
 13162                           indf0	equ	0xFEF
 13163                           postinc0	equ	0xFEE
 13164                           plusw0	equ	0xFEB
 13165                           fsr0h	equ	0xFEA
 13166                           fsr0l	equ	0xFE9
 13167                           wreg	equ	0xFE8
 13168                           indf1	equ	0xFE7
 13169                           postinc1	equ	0xFE6
 13170                           postdec1	equ	0xFE5
 13171                           plusw1	equ	0xFE3
 13172                           fsr1h	equ	0xFE2
 13173                           fsr1l	equ	0xFE1
 13174                           indf2	equ	0xFDF
 13175                           postinc2	equ	0xFDE
 13176                           postdec2	equ	0xFDD
 13177                           plusw2	equ	0xFDB
 13178                           fsr2h	equ	0xFDA
 13179                           fsr2l	equ	0xFD9
 13180                           status	equ	0xFD8
 13181                           
 13182 ;; *************** function _CDCTxService *****************
 13183 ;; Defined at:
 13184 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;		None
 13187 ;; Auto vars:     Size  Location     Type
 13188 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13189 ;;  i               1   36[BANK0 ] unsigned char 
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1    wreg      void 
 13192 ;; Registers used:
 13193 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/0
 13196 ;;		On exit  : 0/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13202 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13203 ;;Total ram usage:        2 bytes
 13204 ;; Hardware stack levels used:    1
 13205 ;; Hardware stack levels required when called:   12
 13206 ;; This function calls:
 13207 ;;		_USBTransferOnePacket
 13208 ;; This function is called by:
 13209 ;;		_UsbDevice_MainTask
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213                           	psect	text54
 13214  002844                     __ptext54:
 13215                           	opt stack 0
 13216  002844                     _CDCTxService:
 13217                           	opt stack 15
 13218                           
 13219                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13220                           ;usb_device_cdc.c: 842: uint8_t i;
 13221                           ;usb_device_cdc.c: 844: ;
 13222                           ;usb_device_cdc.c: 846: {};
 13223                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;incstack = 0
 13227  002844  0101               	movlb	1	; () banked
 13228  002846  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13229  002848  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13230  00284A  B4D8               	btfsc	status,2,c
 13231  00284C  D006               	goto	l1949
 13232                           
 13233                           ; BSR set to: 1
 13234  00284E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13235  002852  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13236  002856  BEDF               	btfsc	indf2,7,c
 13237  002858  0012               	return	
 13238  00285A                     l1949:
 13239                           
 13240                           ; BSR set to: 1
 13241                           ;usb_device_cdc.c: 852: }
 13242                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13243                           
 13244                           ; BSR set to: 1
 13245  00285A  0E03               	movlw	3
 13246  00285C  0100               	movlb	0	; () banked
 13247  00285E  19CA               	xorwf	_cdc_trf_state& (0+255),w,b
 13248  002860  A4D8               	btfss	status,2,c
 13249  002862  D002               	goto	l1951
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13253  002864  0E00               	movlw	0
 13254  002866  6FCA               	movwf	_cdc_trf_state& (0+255),b
 13255  002868                     l1951:
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13259  002868  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13260  00286A  B4D8               	btfsc	status,2,c
 13261  00286C  0012               	return	
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;usb_device_cdc.c: 869: }
 13265                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13266                           
 13267                           ; BSR set to: 0
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;usb_device_cdc.c: 866: {
 13271                           ;usb_device_cdc.c: 867: ;
 13272                           ;usb_device_cdc.c: 868: return;
 13273  00286E  0E02               	movlw	2
 13274  002870  19CA               	xorwf	_cdc_trf_state& (0+255),w,b
 13275  002872  A4D8               	btfss	status,2,c
 13276  002874  D013               	goto	l1953
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;usb_device_cdc.c: 875: {
 13280                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13281  002876  0E01               	movlw	1
 13282  002878  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13283  00287A  0E00               	movlw	0
 13284  00287C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13285  00287E  0E00               	movlw	0
 13286  002880  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13287  002882  0E00               	movlw	0
 13288  002884  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13289  002886  0E02               	movlw	2
 13290  002888  ECE1  F01F         	call	_USBTransferOnePacket
 13291  00288C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13292  002890  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13293                           
 13294                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13295  002894  0E03               	movlw	3
 13296  002896  0100               	movlb	0	; () banked
 13297  002898  6FCA               	movwf	_cdc_trf_state& (0+255),b
 13298                           
 13299                           ;usb_device_cdc.c: 879: }
 13300  00289A  0012               	return	
 13301  00289C                     l1953:
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13305                           
 13306                           ; BSR set to: 0
 13307  00289C  05CA               	decf	_cdc_trf_state& (0+255),w,b
 13308  00289E  A4D8               	btfss	status,2,c
 13309  0028A0  0012               	return	
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;usb_device_cdc.c: 881: {
 13313                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13314  0028A2  0E40               	movlw	64
 13315  0028A4  65C9               	cpfsgt	_cdc_tx_len& (0+255),b
 13316  0028A6  D003               	goto	l1956
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13320  0028A8  0E40               	movlw	64
 13321  0028AA  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13322  0028AC  D002               	goto	l1957
 13323  0028AE                     l1956:
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;usb_device_cdc.c: 887: else
 13327                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13328  0028AE  C0C9  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13329  0028B2                     l1957:
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13333                           
 13334                           ; BSR set to: 0
 13335  0028B2  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13336  0028B4  0800               	sublw	0
 13337  0028B6  25C9               	addwf	_cdc_tx_len& (0+255),w,b
 13338  0028B8  6FC9               	movwf	_cdc_tx_len& (0+255),b
 13339                           
 13340                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13341  0028BA  0E84               	movlw	low _cdc_data_tx
 13342  0028BC  0102               	movlb	2	; () banked
 13343  0028BE  6FC9               	movwf	_pCDCDst& (0+255),b
 13344  0028C0  0E07               	movlw	high _cdc_data_tx
 13345  0028C2  6FCA               	movwf	(_pCDCDst+1)& (0+255),b
 13346                           
 13347                           ; BSR set to: 2
 13348                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13349  0028C4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13350                           
 13351                           ; BSR set to: 2
 13352                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13353  0028C8  0101               	movlb	1	; () banked
 13354  0028CA  51DF               	movf	_cdc_mem_type& (0+255),w,b
 13355  0028CC  B4D8               	btfsc	status,2,c
 13356  0028CE  D01D               	goto	l1959
 13357  0028D0  D03D               	goto	l1963
 13358  0028D2                     
 13359                           ;usb_device_cdc.c: 901: {
 13360                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13361                           
 13362                           ; BSR set to: 1
 13363  0028D2  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13364  0028D6  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13365  0028DA  6AF8               	clrf	tblptru,c
 13366  0028DC  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13367  0028E0  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13368  0028E4  0E0E               	movlw	(high __ramtop+-1)
 13369  0028E6  64F7               	cpfsgt	tblptrh,c
 13370  0028E8  D003               	bra	u14207
 13371  0028EA  0008               	tblrd		*
 13372  0028EC  50F5               	movf	tablat,w,c
 13373  0028EE  D005               	bra	u14200
 13374  0028F0                     u14207:
 13375  0028F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13376  0028F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13377  0028F8  50EF               	movf	indf0,w,c
 13378  0028FA                     u14200:
 13379  0028FA  6EDF               	movwf	indf2,c
 13380                           
 13381                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13382  0028FC  0102               	movlb	2	; () banked
 13383  0028FE  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13384  002900  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13385                           
 13386                           ; BSR set to: 2
 13387                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13388  002902  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13389  002904  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13390                           
 13391                           ; BSR set to: 2
 13392                           ;usb_device_cdc.c: 905: i--;
 13393  002906  0100               	movlb	0	; () banked
 13394  002908  0784               	decf	CDCTxService@i& (0+255),f,b
 13395  00290A                     l1959:
 13396                           
 13397                           ; BSR set to: 0
 13398  00290A  0100               	movlb	0	; () banked
 13399  00290C  5184               	movf	CDCTxService@i& (0+255),w,b
 13400  00290E  B4D8               	btfsc	status,2,c
 13401  002910  D021               	goto	u14230
 13402  002912  D7DF               	goto	l1960
 13403  002914                     
 13404                           ; BSR set to: 0
 13405                           ;usb_device_cdc.c: 911: {
 13406                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13407                           
 13408                           ; BSR set to: 0
 13409  002914  C2CC  FFF6         	movff	_pCDCSrc,tblptrl
 13410  002918  C2CD  FFF7         	movff	_pCDCSrc+1,tblptrh
 13411  00291C  6AF8               	clrf	tblptru,c
 13412  00291E  C2C9  FFD9         	movff	_pCDCDst,fsr2l
 13413  002922  C2CA  FFDA         	movff	_pCDCDst+1,fsr2h
 13414  002926  0E0E               	movlw	(high __ramtop+-1)
 13415  002928  64F7               	cpfsgt	tblptrh,c
 13416  00292A  D003               	bra	u14227
 13417  00292C  0008               	tblrd		*
 13418  00292E  50F5               	movf	tablat,w,c
 13419  002930  D005               	bra	u14220
 13420  002932                     u14227:
 13421  002932  CFF6 FFE9          	movff	tblptrl,fsr0l
 13422  002936  CFF7 FFEA          	movff	tblptrh,fsr0h
 13423  00293A  50EF               	movf	indf0,w,c
 13424  00293C                     u14220:
 13425  00293C  6EDF               	movwf	indf2,c
 13426                           
 13427                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13428  00293E  0102               	movlb	2	; () banked
 13429  002940  4BC9               	infsnz	_pCDCDst& (0+255),f,b
 13430  002942  2BCA               	incf	(_pCDCDst+1)& (0+255),f,b
 13431                           
 13432                           ; BSR set to: 2
 13433                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13434  002944  4BCC               	infsnz	_pCDCSrc& (0+255),f,b
 13435  002946  2BCD               	incf	(_pCDCSrc+1)& (0+255),f,b
 13436                           
 13437                           ; BSR set to: 2
 13438                           ;usb_device_cdc.c: 915: i--;
 13439  002948  0100               	movlb	0	; () banked
 13440  00294A  0784               	decf	CDCTxService@i& (0+255),f,b
 13441  00294C                     l1963:
 13442                           
 13443                           ; BSR set to: 0
 13444  00294C  0100               	movlb	0	; () banked
 13445  00294E  5184               	movf	CDCTxService@i& (0+255),w,b
 13446  002950  A4D8               	btfss	status,2,c
 13447  002952  D7E0               	goto	l1964
 13448  002954                     u14230:
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;usb_device_cdc.c: 916: }
 13452                           ;usb_device_cdc.c: 917: }
 13453                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13454                           
 13455                           ; BSR set to: 0
 13456                           
 13457                           ; BSR set to: 0
 13458  002954  51C9               	movf	_cdc_tx_len& (0+255),w,b
 13459  002956  A4D8               	btfss	status,2,c
 13460  002958  D008               	goto	l1968
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;usb_device_cdc.c: 924: {
 13464                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13465  00295A  0E40               	movlw	64
 13466  00295C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13467  00295E  A4D8               	btfss	status,2,c
 13468  002960  D002               	goto	l1967
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13472  002962  0E02               	movlw	2
 13473  002964  D001               	goto	L13
 13474  002966                     l1967:
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;usb_device_cdc.c: 927: else
 13478                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13479                           
 13480                           ; BSR set to: 0
 13481  002966  0E03               	movlw	3
 13482  002968                     L13:
 13483  002968  6FCA               	movwf	_cdc_trf_state& (0+255),b
 13484  00296A                     l1968:
 13485                           
 13486                           ; BSR set to: 0
 13487                           ;usb_device_cdc.c: 929: }
 13488                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13489                           
 13490                           ; BSR set to: 0
 13491                           
 13492                           ; BSR set to: 0
 13493  00296A  0E01               	movlw	1
 13494  00296C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13495  00296E  0E84               	movlw	low _cdc_data_tx
 13496  002970  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13497  002972  0E07               	movlw	high _cdc_data_tx
 13498  002974  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13499  002976  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13500  00297A  0E02               	movlw	2
 13501  00297C  ECE1  F01F         	call	_USBTransferOnePacket
 13502  002980  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13503  002984  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13504  002988  0012               	return	
 13505  00298A                     __end_of_CDCTxService:
 13506                           	opt stack 0
 13507                           tosu	equ	0xFFF
 13508                           tosh	equ	0xFFE
 13509                           tosl	equ	0xFFD
 13510                           pclath	equ	0xFFA
 13511                           tblptru	equ	0xFF8
 13512                           tblptrh	equ	0xFF7
 13513                           tblptrl	equ	0xFF6
 13514                           tablat	equ	0xFF5
 13515                           prodh	equ	0xFF4
 13516                           prodl	equ	0xFF3
 13517                           intcon	equ	0xFF2
 13518                           intcon2	equ	0xFF1
 13519                           intcon3	equ	0xFF0
 13520                           indf0	equ	0xFEF
 13521                           postinc0	equ	0xFEE
 13522                           plusw0	equ	0xFEB
 13523                           fsr0h	equ	0xFEA
 13524                           fsr0l	equ	0xFE9
 13525                           wreg	equ	0xFE8
 13526                           indf1	equ	0xFE7
 13527                           postinc1	equ	0xFE6
 13528                           postdec1	equ	0xFE5
 13529                           plusw1	equ	0xFE3
 13530                           fsr1h	equ	0xFE2
 13531                           fsr1l	equ	0xFE1
 13532                           indf2	equ	0xFDF
 13533                           postinc2	equ	0xFDE
 13534                           postdec2	equ	0xFDD
 13535                           plusw2	equ	0xFDB
 13536                           fsr2h	equ	0xFDA
 13537                           fsr2l	equ	0xFD9
 13538                           status	equ	0xFD8
 13539                           
 13540 ;; *************** function _Term_MainSm *****************
 13541 ;; Defined at:
 13542 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13543 ;; Parameters:    Size  Location     Type
 13544 ;;		None
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  FwkBuildStr     4   79[BANK0 ] unsigned char [4]
 13547 ;;  FwkMinorStr     4   75[BANK0 ] unsigned char [4]
 13548 ;;  FwkMajorStr     4   71[BANK0 ] unsigned char [4]
 13549 ;;  FwkBuildYear    4    0        unsigned char [4]
 13550 ;;  FwkBuildMont    4    0        unsigned char [4]
 13551 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  1    wreg      void 
 13554 ;; Registers used:
 13555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13562 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13564 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13565 ;;Total ram usage:       12 bytes
 13566 ;; Hardware stack levels used:    1
 13567 ;; Hardware stack levels required when called:   16
 13568 ;; This function calls:
 13569 ;;		_OsTmr_GetTimerStatus
 13570 ;;		_OsTmr_StartTimer
 13571 ;;		_Terminal
 13572 ;;		_memset
 13573 ;;		_putUSBUSART
 13574 ;;		_sprintf
 13575 ;;		_strcat
 13576 ;;		_strcpy
 13577 ;;		_strlen
 13578 ;;		_utoa
 13579 ;; This function is called by:
 13580 ;;		_Term_MainTask
 13581 ;; This function uses a non-reentrant model
 13582 ;;
 13583                           
 13584                           	psect	text55
 13585  0010B6                     __ptext55:
 13586                           	opt stack 0
 13587  0010B6                     _Term_MainSm:
 13588                           	opt stack 11
 13589                           
 13590                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13591                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13592                           ;term.c: 711: static UINT8 Data[50];
 13593                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13594                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13595                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13596                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13597                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13598                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13599                           ;term.c: 719: switch (TermMainSmState)
 13600                           
 13601                           ;incstack = 0
 13602  0010B6  D133               	goto	l2427
 13603  0010B8                     
 13604                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13605  0010B8  0ED1               	movlw	low Term_MainSm@TermDelay
 13606  0010BA  0100               	movlb	0	; () banked
 13607  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13608  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13609  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13610  0010C2  0ED0               	movlw	208
 13611  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13612  0010C6  0E07               	movlw	7
 13613  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13614  0010CA  0E00               	movlw	0
 13615  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13616  0010CE  0E00               	movlw	0
 13617  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13618  0010D2  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 13619                           
 13620                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13621  0010D6  0E01               	movlw	1
 13622  0010D8  0102               	movlb	2	; () banked
 13623  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13624                           
 13625                           ;term.c: 726: break;
 13626  0010DC  0012               	return	
 13627  0010DE                     
 13628                           ; BSR set to: 2
 13629                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13630                           
 13631                           ; BSR set to: 2
 13632  0010DE  0ED1               	movlw	low Term_MainSm@TermDelay
 13633  0010E0  0100               	movlb	0	; () banked
 13634  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13635  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13636  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13637  0010E8  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 13638  0010EC  06E8               	decf	wreg,f,c
 13639  0010EE  A4D8               	btfss	status,2,c
 13640  0010F0  0012               	return	
 13641                           
 13642                           ;term.c: 731: {
 13643                           ;term.c: 733: TermMainSmState = Term_InitState;
 13644  0010F2  0E02               	movlw	2
 13645  0010F4  0102               	movlb	2	; () banked
 13646  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13647                           
 13648                           ; BSR set to: 2
 13649                           ;term.c: 734: }
 13650                           ;term.c: 735: break;
 13651  0010F8  0012               	return	
 13652  0010FA                     
 13653                           ; BSR set to: 2
 13654                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13655                           
 13656                           ; BSR set to: 2
 13657  0010FA  0E1F               	movlw	31
 13658  0010FC  0100               	movlb	0	; () banked
 13659  0010FE  65D0               	cpfsgt	_USBDeviceState& (0+255),b
 13660  001100  0012               	return	
 13661                           
 13662                           ; BSR set to: 0
 13663  001102  B265               	btfsc	3941,1,c	;volatile
 13664  001104  0012               	return	
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;term.c: 743: else
 13668                           ;term.c: 744: {
 13669                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13670                           
 13671                           ; BSR set to: 0
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;term.c: 740: {
 13675                           ;term.c: 742: }
 13676  001106  0E03               	movlw	3
 13677  001108  0102               	movlb	2	; () banked
 13678  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13679                           
 13680                           ; BSR set to: 2
 13681                           ;term.c: 747: }
 13682                           ;term.c: 748: break;
 13683  00110C  0012               	return	
 13684  00110E                     
 13685                           ; BSR set to: 2
 13686                           ;term.c: 752: if((cdc_trf_state == 0))
 13687                           
 13688                           ; BSR set to: 2
 13689  00110E  0100               	movlb	0	; () banked
 13690  001110  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13691  001112  A4D8               	btfss	status,2,c
 13692  001114  0012               	return	
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;term.c: 753: {
 13696                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13697  001116  0E21               	movlw	low _Welcome
 13698  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13699  00111A  0EFD               	movlw	high _Welcome
 13700  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13701  00111E  0E88               	movlw	136
 13702  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13703  001122  ECB4  F02F         	call	_putUSBUSART	;wreg free
 13704                           
 13705                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13706  001126  0E04               	movlw	4
 13707  001128  0102               	movlb	2	; () banked
 13708  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13709                           
 13710                           ; BSR set to: 2
 13711                           ;term.c: 758: }
 13712                           ;term.c: 759: break;
 13713  00112C  0012               	return	
 13714  00112E                     
 13715                           ; BSR set to: 2
 13716                           ;term.c: 763: if((cdc_trf_state == 0))
 13717                           
 13718                           ; BSR set to: 2
 13719  00112E  0100               	movlb	0	; () banked
 13720  001130  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13721  001132  A4D8               	btfss	status,2,c
 13722  001134  0012               	return	
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;term.c: 764: {
 13726                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13727  001136  0E31               	movlw	low _MsgFormat
 13728  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13729  00113A  0EFC               	movlw	high _MsgFormat
 13730  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13731  00113E  0EEF               	movlw	239
 13732  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13733  001142  ECB4  F02F         	call	_putUSBUSART	;wreg free
 13734                           
 13735                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13736  001146  0E05               	movlw	5
 13737  001148  0102               	movlb	2	; () banked
 13738  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13739                           
 13740                           ; BSR set to: 2
 13741                           ;term.c: 769: }
 13742                           ;term.c: 770: break;
 13743  00114C  0012               	return	
 13744  00114E                     
 13745                           ; BSR set to: 2
 13746                           ;term.c: 774: if((cdc_trf_state == 0))
 13747                           
 13748                           ; BSR set to: 2
 13749  00114E  0100               	movlb	0	; () banked
 13750  001150  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13751  001152  A4D8               	btfss	status,2,c
 13752  001154  0012               	return	
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;term.c: 775: {
 13756                           ;term.c: 777: memset(Data,0,50);
 13757  001156  0E54               	movlw	low Term_MainSm@Data
 13758  001158  6F7D               	movwf	memset@p1& (0+255),b
 13759  00115A  0E04               	movlw	high Term_MainSm@Data
 13760  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13761  00115E  0E00               	movlw	0
 13762  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13763  001162  0E00               	movlw	0
 13764  001164  6F7F               	movwf	memset@c& (0+255),b
 13765  001166  0E00               	movlw	0
 13766  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13767  00116A  0E32               	movlw	50
 13768  00116C  6F81               	movwf	memset@n& (0+255),b
 13769  00116E  EC5C  F02E         	call	_memset	;wreg free
 13770                           
 13771                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13772  001172  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13773  001174  0100               	movlb	0	; () banked
 13774  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13775  001178  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13776  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13777  00117C  0E00               	movlw	0
 13778  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13779  001180  0E01               	movlw	1
 13780  001182  6F8C               	movwf	utoa@val& (0+255),b
 13781  001184  0E00               	movlw	0
 13782  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13783  001188  0E0A               	movlw	10
 13784  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13785  00118C  EC47  F021         	call	_utoa	;wreg free
 13786                           
 13787                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13788  001190  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13789  001192  0100               	movlb	0	; () banked
 13790  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13791  001196  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13792  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13793  00119A  0E00               	movlw	0
 13794  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13795  00119E  0E02               	movlw	2
 13796  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13797  0011A2  0E00               	movlw	0
 13798  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13799  0011A6  0E0A               	movlw	10
 13800  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13801  0011AA  EC47  F021         	call	_utoa	;wreg free
 13802                           
 13803                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13804  0011AE  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13805  0011B0  0100               	movlb	0	; () banked
 13806  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13807  0011B4  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13808  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13809  0011B8  0E00               	movlw	0
 13810  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13811  0011BC  0E00               	movlw	0
 13812  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13813  0011C0  0E00               	movlw	0
 13814  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13815  0011C4  0E0A               	movlw	10
 13816  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13817  0011C8  EC47  F021         	call	_utoa	;wreg free
 13818                           
 13819                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13820  0011CC  0E54               	movlw	low Term_MainSm@Data
 13821  0011CE  0100               	movlb	0	; () banked
 13822  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13823  0011D2  0E04               	movlw	high Term_MainSm@Data
 13824  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13825  0011D6  0ED1               	movlw	low STR_23
 13826  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13827  0011DA  0EFE               	movlw	high STR_23
 13828  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13829  0011DE  EC2B  F02E         	call	_strcpy	;wreg free
 13830                           
 13831                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13832  0011E2  0E54               	movlw	low Term_MainSm@Data
 13833  0011E4  0100               	movlb	0	; () banked
 13834  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13835  0011E8  0E04               	movlw	high Term_MainSm@Data
 13836  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13837  0011EC  0EA7               	movlw	low Term_MainSm@FwkMajorStr
 13838  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13839  0011F0  0E00               	movlw	high Term_MainSm@FwkMajorStr
 13840  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13841  0011F4  ECDD  F028         	call	_strcat	;wreg free
 13842                           
 13843                           ;term.c: 784: strcat(Data,".");
 13844  0011F8  0E54               	movlw	low Term_MainSm@Data
 13845  0011FA  0100               	movlb	0	; () banked
 13846  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13847  0011FE  0E04               	movlw	high Term_MainSm@Data
 13848  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13849  001202  0EF4               	movlw	low STR_24
 13850  001204  6F7F               	movwf	strcat@from& (0+255),b
 13851  001206  0EFF               	movlw	high STR_24
 13852  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13853  00120A  ECDD  F028         	call	_strcat	;wreg free
 13854                           
 13855                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13856  00120E  0E54               	movlw	low Term_MainSm@Data
 13857  001210  0100               	movlb	0	; () banked
 13858  001212  6F7D               	movwf	strcat@to& (0+255),b
 13859  001214  0E04               	movlw	high Term_MainSm@Data
 13860  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13861  001218  0EAB               	movlw	low Term_MainSm@FwkMinorStr
 13862  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13863  00121C  0E00               	movlw	high Term_MainSm@FwkMinorStr
 13864  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13865  001220  ECDD  F028         	call	_strcat	;wreg free
 13866                           
 13867                           ;term.c: 786: strcat(Data,".");
 13868  001224  0E54               	movlw	low Term_MainSm@Data
 13869  001226  0100               	movlb	0	; () banked
 13870  001228  6F7D               	movwf	strcat@to& (0+255),b
 13871  00122A  0E04               	movlw	high Term_MainSm@Data
 13872  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13873  00122E  0EF4               	movlw	low STR_24
 13874  001230  6F7F               	movwf	strcat@from& (0+255),b
 13875  001232  0EFF               	movlw	high STR_24
 13876  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13877  001236  ECDD  F028         	call	_strcat	;wreg free
 13878                           
 13879                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13880  00123A  0E54               	movlw	low Term_MainSm@Data
 13881  00123C  0100               	movlb	0	; () banked
 13882  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13883  001240  0E04               	movlw	high Term_MainSm@Data
 13884  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13885  001244  0EAF               	movlw	low Term_MainSm@FwkBuildStr
 13886  001246  6F7F               	movwf	strcat@from& (0+255),b
 13887  001248  0E00               	movlw	high Term_MainSm@FwkBuildStr
 13888  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13889  00124C  ECDD  F028         	call	_strcat	;wreg free
 13890                           
 13891                           ;term.c: 788: strcat(Data,"\r\n");
 13892  001250  0E54               	movlw	low Term_MainSm@Data
 13893  001252  0100               	movlb	0	; () banked
 13894  001254  6F7D               	movwf	strcat@to& (0+255),b
 13895  001256  0E04               	movlw	high Term_MainSm@Data
 13896  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13897  00125A  0E85               	movlw	low (STR_21+39)
 13898  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13899  00125E  0EFE               	movlw	high (STR_21+39)
 13900  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13901  001262  ECDD  F028         	call	_strcat	;wreg free
 13902                           
 13903                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13904  001266  0E54               	movlw	low Term_MainSm@Data
 13905  001268  0100               	movlb	0	; () banked
 13906  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13907  00126C  0E04               	movlw	high Term_MainSm@Data
 13908  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13909  001270  0E54               	movlw	low Term_MainSm@Data
 13910  001272  6F7D               	movwf	strlen@s& (0+255),b
 13911  001274  0E04               	movlw	high Term_MainSm@Data
 13912  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13913  001278  ECF0  F02C         	call	_strlen	;wreg free
 13914  00127C  0100               	movlb	0	; () banked
 13915  00127E  517D               	movf	?_strlen& (0+255),w,b
 13916  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13917  001282  ECB4  F02F         	call	_putUSBUSART	;wreg free
 13918                           
 13919                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13920  001286  0E06               	movlw	6
 13921  001288  0102               	movlb	2	; () banked
 13922  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13923                           
 13924                           ; BSR set to: 2
 13925                           ;term.c: 793: }
 13926                           ;term.c: 794: break;
 13927  00128C  0012               	return	
 13928  00128E                     
 13929                           ; BSR set to: 2
 13930                           ;term.c: 798: if((cdc_trf_state == 0))
 13931                           
 13932                           ; BSR set to: 2
 13933  00128E  0100               	movlb	0	; () banked
 13934  001290  51CA               	movf	_cdc_trf_state& (0+255),w,b
 13935  001292  A4D8               	btfss	status,2,c
 13936  001294  0012               	return	
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;term.c: 799: {
 13940                           ;term.c: 801: memset(Data,0,50);
 13941  001296  0E54               	movlw	low Term_MainSm@Data
 13942  001298  6F7D               	movwf	memset@p1& (0+255),b
 13943  00129A  0E04               	movlw	high Term_MainSm@Data
 13944  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13945  00129E  0E00               	movlw	0
 13946  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13947  0012A2  0E00               	movlw	0
 13948  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13949  0012A6  0E00               	movlw	0
 13950  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13951  0012AA  0E32               	movlw	50
 13952  0012AC  6F81               	movwf	memset@n& (0+255),b
 13953  0012AE  EC5C  F02E         	call	_memset	;wreg free
 13954                           
 13955                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 16 2022");
 13956  0012B2  0E54               	movlw	low Term_MainSm@Data
 13957  0012B4  0100               	movlb	0	; () banked
 13958  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13959  0012B8  0E04               	movlw	high Term_MainSm@Data
 13960  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13961  0012BC  0E0C               	movlw	low STR_27
 13962  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13963  0012C0  0EFF               	movlw	high STR_27
 13964  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13965  0012C4  0EB5               	movlw	low STR_28
 13966  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13967  0012C8  0EFF               	movlw	high STR_28
 13968  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13969  0012CC  EC5A  F01C         	call	_sprintf	;wreg free
 13970                           
 13971                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13972  0012D0  0E54               	movlw	low Term_MainSm@Data
 13973  0012D2  0100               	movlb	0	; () banked
 13974  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13975  0012D6  0E04               	movlw	high Term_MainSm@Data
 13976  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13977  0012DA  0E54               	movlw	low Term_MainSm@Data
 13978  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13979  0012DE  0E04               	movlw	high Term_MainSm@Data
 13980  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13981  0012E2  ECF0  F02C         	call	_strlen	;wreg free
 13982  0012E6  0100               	movlb	0	; () banked
 13983  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13984  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13985  0012EC  ECB4  F02F         	call	_putUSBUSART	;wreg free
 13986                           
 13987                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13988  0012F0  0E07               	movlw	7
 13989  0012F2  0102               	movlb	2	; () banked
 13990  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13991                           
 13992                           ; BSR set to: 2
 13993                           ;term.c: 808: }
 13994                           ;term.c: 809: break;
 13995  0012F6  0012               	return	
 13996  0012F8                     
 13997                           ; BSR set to: 2
 13998                           ;term.c: 813: if((cdc_trf_state == 0))
 13999                           
 14000                           ; BSR set to: 2
 14001  0012F8  0100               	movlb	0	; () banked
 14002  0012FA  51CA               	movf	_cdc_trf_state& (0+255),w,b
 14003  0012FC  A4D8               	btfss	status,2,c
 14004  0012FE  0012               	return	
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;term.c: 814: {
 14008                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14009  001300  0E31               	movlw	low _MsgReady
 14010  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14011  001304  0EFE               	movlw	high _MsgReady
 14012  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14013  001308  0E16               	movlw	22
 14014  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14015  00130C  ECB4  F02F         	call	_putUSBUSART	;wreg free
 14016                           
 14017                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14018  001310  0E08               	movlw	8
 14019  001312  0102               	movlb	2	; () banked
 14020  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14021                           
 14022                           ; BSR set to: 2
 14023                           ;term.c: 819: }
 14024                           ;term.c: 820: break;
 14025  001316  0012               	return	
 14026  001318                     
 14027                           ; BSR set to: 2
 14028                           ;term.c: 824: Terminal();
 14029                           
 14030                           ; BSR set to: 2
 14031  001318  EC68  F000         	call	_Terminal	;wreg free
 14032                           
 14033                           ;term.c: 829: }
 14034                           
 14035                           ;term.c: 828: break;
 14036                           
 14037                           ;term.c: 827: default:
 14038                           
 14039                           ;term.c: 825: break;
 14040  00131C  0012               	return	
 14041  00131E                     l2427:
 14042  00131E  0102               	movlb	2	; () banked
 14043  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14044                           
 14045                           ; Switch size 1, requested type "space"
 14046                           ; Number of cases is 9, Range of values is 0 to 8
 14047                           ; switch strategies available:
 14048                           ; Name         Instructions Cycles
 14049                           ; simple_byte           28    15 (average)
 14050                           ;	Chosen strategy is simple_byte
 14051  001322  0A00               	xorlw	0	; case 0
 14052  001324  B4D8               	btfsc	status,2,c
 14053  001326  D6C8               	goto	l2428
 14054  001328  0A01               	xorlw	1	; case 1
 14055  00132A  B4D8               	btfsc	status,2,c
 14056  00132C  D6D8               	goto	l2430
 14057  00132E  0A03               	xorlw	3	; case 2
 14058  001330  B4D8               	btfsc	status,2,c
 14059  001332  D6E3               	goto	l2432
 14060  001334  0A01               	xorlw	1	; case 3
 14061  001336  B4D8               	btfsc	status,2,c
 14062  001338  D6EA               	goto	l2437
 14063  00133A  0A07               	xorlw	7	; case 4
 14064  00133C  B4D8               	btfsc	status,2,c
 14065  00133E  D6F7               	goto	l2439
 14066  001340  0A01               	xorlw	1	; case 5
 14067  001342  B4D8               	btfsc	status,2,c
 14068  001344  D704               	goto	l2441
 14069  001346  0A03               	xorlw	3	; case 6
 14070  001348  B4D8               	btfsc	status,2,c
 14071  00134A  D7A1               	goto	l2443
 14072  00134C  0A01               	xorlw	1	; case 7
 14073  00134E  B4D8               	btfsc	status,2,c
 14074  001350  D7D3               	goto	l2445
 14075  001352  0A0F               	xorlw	15	; case 8
 14076  001354  A4D8               	btfss	status,2,c
 14077  001356  0012               	return	
 14078  001358  D7DF               	goto	l2447
 14079  00135A                     __end_of_Term_MainSm:
 14080                           	opt stack 0
 14081                           tosu	equ	0xFFF
 14082                           tosh	equ	0xFFE
 14083                           tosl	equ	0xFFD
 14084                           pclath	equ	0xFFA
 14085                           tblptru	equ	0xFF8
 14086                           tblptrh	equ	0xFF7
 14087                           tblptrl	equ	0xFF6
 14088                           tablat	equ	0xFF5
 14089                           prodh	equ	0xFF4
 14090                           prodl	equ	0xFF3
 14091                           intcon	equ	0xFF2
 14092                           intcon2	equ	0xFF1
 14093                           intcon3	equ	0xFF0
 14094                           indf0	equ	0xFEF
 14095                           postinc0	equ	0xFEE
 14096                           plusw0	equ	0xFEB
 14097                           fsr0h	equ	0xFEA
 14098                           fsr0l	equ	0xFE9
 14099                           wreg	equ	0xFE8
 14100                           indf1	equ	0xFE7
 14101                           postinc1	equ	0xFE6
 14102                           postdec1	equ	0xFE5
 14103                           plusw1	equ	0xFE3
 14104                           fsr1h	equ	0xFE2
 14105                           fsr1l	equ	0xFE1
 14106                           indf2	equ	0xFDF
 14107                           postinc2	equ	0xFDE
 14108                           postdec2	equ	0xFDD
 14109                           plusw2	equ	0xFDB
 14110                           fsr2h	equ	0xFDA
 14111                           fsr2l	equ	0xFD9
 14112                           status	equ	0xFD8
 14113                           
 14114 ;; *************** function _strlen *****************
 14115 ;; Defined at:
 14116 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14119 ;;		 -> Term_MainSm@Data(50), 
 14120 ;; Auto vars:     Size  Location     Type
 14121 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14122 ;;		 -> Term_MainSm@Data(50), 
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  2   29[BANK0 ] unsigned int 
 14125 ;; Registers used:
 14126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14135 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14136 ;;Total ram usage:        6 bytes
 14137 ;; Hardware stack levels used:    1
 14138 ;; Hardware stack levels required when called:   11
 14139 ;; This function calls:
 14140 ;;		Nothing
 14141 ;; This function is called by:
 14142 ;;		_Term_MainSm
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	text56
 14147  0059E0                     __ptext56:
 14148                           	opt stack 0
 14149  0059E0                     _strlen:
 14150                           	opt stack 15
 14151                           
 14152                           ;incstack = 0
 14153  0059E0  C07D  F081         	movff	strlen@s,strlen@cp
 14154  0059E4  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14155  0059E8  D003               	goto	l3219
 14156  0059EA  0100               	movlb	0	; () banked
 14157  0059EC  4B81               	infsnz	strlen@cp& (0+255),f,b
 14158  0059EE  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14159  0059F0                     l3219:
 14160                           
 14161                           ; BSR set to: 0
 14162  0059F0  C081  FFD9         	movff	strlen@cp,fsr2l
 14163  0059F4  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14164  0059F8  50DF               	movf	indf2,w,c
 14165  0059FA  A4D8               	btfss	status,2,c
 14166  0059FC  D7F6               	goto	l3220
 14167  0059FE  C07D  F07F         	movff	strlen@s,??_strlen
 14168  005A02  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14169  005A06  0100               	movlb	0	; () banked
 14170  005A08  1F7F               	comf	??_strlen& (0+255),f,b
 14171  005A0A  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14172  005A0C  4B7F               	infsnz	??_strlen& (0+255),f,b
 14173  005A0E  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14174  005A10  5181               	movf	strlen@cp& (0+255),w,b
 14175  005A12  257F               	addwf	??_strlen& (0+255),w,b
 14176  005A14  6F7D               	movwf	?_strlen& (0+255),b
 14177  005A16  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14178  005A18  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14179  005A1A  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14180  005A1C  0012               	return	
 14181  005A1E                     __end_of_strlen:
 14182                           	opt stack 0
 14183                           tosu	equ	0xFFF
 14184                           tosh	equ	0xFFE
 14185                           tosl	equ	0xFFD
 14186                           pclath	equ	0xFFA
 14187                           tblptru	equ	0xFF8
 14188                           tblptrh	equ	0xFF7
 14189                           tblptrl	equ	0xFF6
 14190                           tablat	equ	0xFF5
 14191                           prodh	equ	0xFF4
 14192                           prodl	equ	0xFF3
 14193                           intcon	equ	0xFF2
 14194                           intcon2	equ	0xFF1
 14195                           intcon3	equ	0xFF0
 14196                           indf0	equ	0xFEF
 14197                           postinc0	equ	0xFEE
 14198                           plusw0	equ	0xFEB
 14199                           fsr0h	equ	0xFEA
 14200                           fsr0l	equ	0xFE9
 14201                           wreg	equ	0xFE8
 14202                           indf1	equ	0xFE7
 14203                           postinc1	equ	0xFE6
 14204                           postdec1	equ	0xFE5
 14205                           plusw1	equ	0xFE3
 14206                           fsr1h	equ	0xFE2
 14207                           fsr1l	equ	0xFE1
 14208                           indf2	equ	0xFDF
 14209                           postinc2	equ	0xFDE
 14210                           postdec2	equ	0xFDD
 14211                           plusw2	equ	0xFDB
 14212                           fsr2h	equ	0xFDA
 14213                           fsr2l	equ	0xFD9
 14214                           status	equ	0xFD8
 14215                           
 14216 ;; *************** function _strcat *****************
 14217 ;; Defined at:
 14218 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14219 ;; Parameters:    Size  Location     Type
 14220 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14221 ;;		 -> Term_MainSm@Data(50), 
 14222 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14223 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14224 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14225 ;; Auto vars:     Size  Location     Type
 14226 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14227 ;;		 -> Term_MainSm@Data(50), 
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  2   29[BANK0 ] PTR unsigned char 
 14230 ;; Registers used:
 14231 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14237 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14240 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14241 ;;Total ram usage:        6 bytes
 14242 ;; Hardware stack levels used:    1
 14243 ;; Hardware stack levels required when called:   11
 14244 ;; This function calls:
 14245 ;;		Nothing
 14246 ;; This function is called by:
 14247 ;;		_Term_MainSm
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           	psect	text57
 14252  0051BA                     __ptext57:
 14253                           	opt stack 0
 14254  0051BA                     _strcat:
 14255                           	opt stack 15
 14256                           
 14257                           ; BSR set to: 0
 14258                           ;incstack = 0
 14259  0051BA  C07D  F081         	movff	strcat@to,strcat@cp
 14260  0051BE  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14261  0051C2  D003               	goto	l3204
 14262  0051C4  0100               	movlb	0	; () banked
 14263  0051C6  4B81               	infsnz	strcat@cp& (0+255),f,b
 14264  0051C8  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14265  0051CA                     l3204:
 14266                           
 14267                           ; BSR set to: 0
 14268  0051CA  C081  FFD9         	movff	strcat@cp,fsr2l
 14269  0051CE  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14270  0051D2  50DF               	movf	indf2,w,c
 14271  0051D4  B4D8               	btfsc	status,2,c
 14272  0051D6  D006               	goto	l3207
 14273  0051D8  D7F5               	goto	l3205
 14274  0051DA  0100               	movlb	0	; () banked
 14275  0051DC  4B81               	infsnz	strcat@cp& (0+255),f,b
 14276  0051DE  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14277  0051E0  4B7F               	infsnz	strcat@from& (0+255),f,b
 14278  0051E2  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14279  0051E4                     l3207:
 14280                           
 14281                           ; BSR set to: 0
 14282  0051E4  C07F  FFF6         	movff	strcat@from,tblptrl
 14283  0051E8  C080  FFF7         	movff	strcat@from+1,tblptrh
 14284  0051EC  6AF8               	clrf	tblptru,c
 14285  0051EE  C081  FFD9         	movff	strcat@cp,fsr2l
 14286  0051F2  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14287  0051F6  0E0E               	movlw	(high __ramtop+-1)
 14288  0051F8  64F7               	cpfsgt	tblptrh,c
 14289  0051FA  D003               	bra	u13007
 14290  0051FC  0008               	tblrd		*
 14291  0051FE  50F5               	movf	tablat,w,c
 14292  005200  D005               	bra	u13000
 14293  005202                     u13007:
 14294  005202  CFF6 FFE9          	movff	tblptrl,fsr0l
 14295  005206  CFF7 FFEA          	movff	tblptrh,fsr0h
 14296  00520A  50EF               	movf	indf0,w,c
 14297  00520C                     u13000:
 14298  00520C  6EDF               	movwf	indf2,c
 14299  00520E  50DF               	movf	indf2,w,c
 14300  005210  B4D8               	btfsc	status,2,c
 14301  005212  0012               	return	
 14302  005214  D7E2               	goto	l3208
 14303  005216                     __end_of_strcat:
 14304                           	opt stack 0
 14305                           tosu	equ	0xFFF
 14306                           tosh	equ	0xFFE
 14307                           tosl	equ	0xFFD
 14308                           pclath	equ	0xFFA
 14309                           tblptru	equ	0xFF8
 14310                           tblptrh	equ	0xFF7
 14311                           tblptrl	equ	0xFF6
 14312                           tablat	equ	0xFF5
 14313                           prodh	equ	0xFF4
 14314                           prodl	equ	0xFF3
 14315                           intcon	equ	0xFF2
 14316                           intcon2	equ	0xFF1
 14317                           intcon3	equ	0xFF0
 14318                           indf0	equ	0xFEF
 14319                           postinc0	equ	0xFEE
 14320                           plusw0	equ	0xFEB
 14321                           fsr0h	equ	0xFEA
 14322                           fsr0l	equ	0xFE9
 14323                           wreg	equ	0xFE8
 14324                           indf1	equ	0xFE7
 14325                           postinc1	equ	0xFE6
 14326                           postdec1	equ	0xFE5
 14327                           plusw1	equ	0xFE3
 14328                           fsr1h	equ	0xFE2
 14329                           fsr1l	equ	0xFE1
 14330                           indf2	equ	0xFDF
 14331                           postinc2	equ	0xFDE
 14332                           postdec2	equ	0xFDD
 14333                           plusw2	equ	0xFDB
 14334                           fsr2h	equ	0xFDA
 14335                           fsr2l	equ	0xFD9
 14336                           status	equ	0xFD8
 14337                           
 14338 ;; *************** function _sprintf *****************
 14339 ;; Defined at:
 14340 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14343 ;;		 -> Term_MainSm@Data(50), 
 14344 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14345 ;;		 -> STR_27(17), 
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;  tmpval          4    0        struct .
 14348 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14349 ;;		 -> STR_32(7), STR_28(12), 
 14350 ;;  ap              2   36[BANK0 ] PTR void [1]
 14351 ;;		 -> ?_sprintf(2), 
 14352 ;;  len             2    0        unsigned int 
 14353 ;;  val             2    0        unsigned int 
 14354 ;;  c               1   38[BANK0 ] char 
 14355 ;;  flag            1   35[BANK0 ] unsigned char 
 14356 ;;  prec            1    0        char 
 14357 ;; Return value:  Size  Location     Type
 14358 ;;                  2   29[BANK0 ] int 
 14359 ;; Registers used:
 14360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14361 ;; Tracked objects:
 14362 ;;		On entry : 0/0
 14363 ;;		On exit  : 0/0
 14364 ;;		Unchanged: 0/0
 14365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14366 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14367 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14369 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14370 ;;Total ram usage:       12 bytes
 14371 ;; Hardware stack levels used:    1
 14372 ;; Hardware stack levels required when called:   11
 14373 ;; This function calls:
 14374 ;;		Nothing
 14375 ;; This function is called by:
 14376 ;;		_Term_MainSm
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           
 14380                           	psect	text58
 14381  0038B4                     __ptext58:
 14382                           	opt stack 0
 14383  0038B4                     _sprintf:
 14384                           	opt stack 15
 14385                           
 14386                           ;doprnt.c: 494: va_list ap;
 14387                           ;doprnt.c: 499: signed char c;
 14388                           ;doprnt.c: 506: signed char prec;
 14389                           ;doprnt.c: 508: unsigned char flag;
 14390                           ;doprnt.c: 523: union {
 14391                           ;doprnt.c: 524: unsigned long vd;
 14392                           ;doprnt.c: 525: double integ;
 14393                           ;doprnt.c: 526: } tmpval;
 14394                           ;doprnt.c: 528: unsigned int val;
 14395                           ;doprnt.c: 529: unsigned len;
 14396                           ;doprnt.c: 530: const char * cp;
 14397                           ;doprnt.c: 533: *ap = __va_start();
 14398                           
 14399                           ;incstack = 0
 14400  0038B4  0E81               	movlw	low (?_sprintf+4)
 14401  0038B6  0100               	movlb	0	; () banked
 14402  0038B8  6F84               	movwf	sprintf@ap& (0+255),b
 14403  0038BA  0E00               	movlw	high (?_sprintf+4)
 14404  0038BC  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14405                           
 14406                           ;doprnt.c: 536: while(c = *f++) {
 14407  0038BE  D04E               	goto	l2608
 14408  0038C0                     
 14409                           ; BSR set to: 0
 14410                           ;doprnt.c: 538: if(c != '%')
 14411                           
 14412                           ; BSR set to: 0
 14413  0038C0  0E25               	movlw	37
 14414  0038C2  1986               	xorwf	sprintf@c& (0+255),w,b
 14415  0038C4  B4D8               	btfsc	status,2,c
 14416  0038C6  D009               	goto	l2598
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;doprnt.c: 540: {
 14420                           ;doprnt.c: 541: ((*sp++ = (c)));
 14421  0038C8  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14422  0038CC  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14423  0038D0  C086  FFDF         	movff	sprintf@c,indf2
 14424                           
 14425                           ; BSR set to: 0
 14426  0038D4  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14427  0038D6  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14428                           
 14429                           ;doprnt.c: 542: continue;
 14430  0038D8  D041               	goto	l2608
 14431  0038DA                     l2598:
 14432                           
 14433                           ; BSR set to: 0
 14434                           ;doprnt.c: 543: }
 14435                           ;doprnt.c: 548: flag = 0;
 14436                           
 14437                           ; BSR set to: 0
 14438  0038DA  0E00               	movlw	0
 14439  0038DC  6F83               	movwf	sprintf@flag& (0+255),b
 14440                           
 14441                           ;doprnt.c: 635: switch(c = *f++) {
 14442  0038DE  D02E               	goto	l2599
 14443  0038E0                     
 14444                           ; BSR set to: 0
 14445                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14446                           
 14447                           ; BSR set to: 0
 14448  0038E0  C084  FFD9         	movff	sprintf@ap,fsr2l
 14449  0038E4  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14450  0038E8  CFDE F087          	movff	postinc2,sprintf@cp
 14451  0038EC  CFDD F088          	movff	postdec2,sprintf@cp+1
 14452                           
 14453                           ; BSR set to: 0
 14454  0038F0  0E02               	movlw	2
 14455  0038F2  2784               	addwf	sprintf@ap& (0+255),f,b
 14456  0038F4  0E00               	movlw	0
 14457  0038F6  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;doprnt.c: 740: if(!cp)
 14461  0038F8  5187               	movf	sprintf@cp& (0+255),w,b
 14462  0038FA  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14463  0038FC  A4D8               	btfss	status,2,c
 14464  0038FE  D014               	goto	l2604
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;doprnt.c: 741: cp = "(null)";
 14468  003900  0ED7               	movlw	low STR_32
 14469  003902  6F87               	movwf	sprintf@cp& (0+255),b
 14470  003904  0EFF               	movlw	high STR_32
 14471  003906  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;doprnt.c: 777: while(*cp)
 14475  003908  D00F               	goto	l2604
 14476  00390A                     
 14477                           ; BSR set to: 0
 14478                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14479                           
 14480                           ; BSR set to: 0
 14481  00390A  C087  FFF6         	movff	sprintf@cp,tblptrl
 14482  00390E  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14483  003912                     	if	0	;tblptru may be non-zero
 14484  003912                     	endif
 14485  003912                     	if	0	;tblptru may be non-zero
 14486  003912                     	endif
 14487  003912  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14488  003916  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14489  00391A  0008               	tblrd		*
 14490  00391C  CFF5 FFDF          	movff	tablat,indf2
 14491                           
 14492                           ; BSR set to: 0
 14493  003920  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14494  003922  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14495                           
 14496                           ; BSR set to: 0
 14497  003924  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14498  003926  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14499  003928                     l2604:
 14500                           
 14501                           ; BSR set to: 0
 14502                           
 14503                           ; BSR set to: 0
 14504  003928  C087  FFF6         	movff	sprintf@cp,tblptrl
 14505  00392C  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14506  003930                     	if	0	;tblptru may be non-zero
 14507  003930                     	endif
 14508  003930                     	if	0	;tblptru may be non-zero
 14509  003930                     	endif
 14510  003930  0008               	tblrd		*
 14511  003932  50F5               	movf	tablat,w,c
 14512  003934  0900               	iorlw	0
 14513  003936  B4D8               	btfsc	status,2,c
 14514  003938  D011               	goto	l2608
 14515  00393A  D7E7               	goto	l2605
 14516  00393C                     l2599:
 14517                           
 14518                           ; BSR set to: 0
 14519                           
 14520                           ; BSR set to: 0
 14521  00393C  C07F  FFF6         	movff	sprintf@f,tblptrl
 14522  003940  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14523  003944  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14524  003946  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14525  003948                     	if	0	;tblptru may be non-zero
 14526  003948                     	endif
 14527  003948                     	if	0	;tblptru may be non-zero
 14528  003948                     	endif
 14529  003948  0008               	tblrd		*
 14530  00394A  CFF5 F086          	movff	tablat,sprintf@c
 14531  00394E  5186               	movf	sprintf@c& (0+255),w,b
 14532                           
 14533                           ; Switch size 1, requested type "space"
 14534                           ; Number of cases is 2, Range of values is 0 to 115
 14535                           ; switch strategies available:
 14536                           ; Name         Instructions Cycles
 14537                           ; simple_byte            7     4 (average)
 14538                           ;	Chosen strategy is simple_byte
 14539  003950  0A00               	xorlw	0	; case 0
 14540  003952  B4D8               	btfsc	status,2,c
 14541  003954  D00F               	goto	u13060
 14542  003956  0A73               	xorlw	115	; case 115
 14543  003958  B4D8               	btfsc	status,2,c
 14544  00395A  D7C2               	goto	l2602
 14545  00395C                     l2608:
 14546                           
 14547                           ; BSR set to: 0
 14548                           
 14549                           ; BSR set to: 0
 14550                           
 14551                           ;doprnt.c: 1422: {
 14552                           
 14553                           ; BSR set to: 0
 14554  00395C  C07F  FFF6         	movff	sprintf@f,tblptrl
 14555  003960  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14556  003964  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14557  003966  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14558  003968                     	if	0	;tblptru may be non-zero
 14559  003968                     	endif
 14560  003968                     	if	0	;tblptru may be non-zero
 14561  003968                     	endif
 14562  003968  0008               	tblrd		*
 14563  00396A  CFF5 F086          	movff	tablat,sprintf@c
 14564  00396E  5186               	movf	sprintf@c& (0+255),w,b
 14565  003970  A4D8               	btfss	status,2,c
 14566  003972  D7A6               	goto	l2597
 14567  003974                     u13060:
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;doprnt.c: 1538: *sp = 0;
 14571                           
 14572                           ; BSR set to: 0
 14573                           
 14574                           ;doprnt.c: 1469: }
 14575                           ;doprnt.c: 1533: }
 14576                           ;doprnt.c: 1535: alldone:
 14577                           
 14578                           ; BSR set to: 0
 14579  003974  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14580  003978  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14581  00397C  0E00               	movlw	0
 14582  00397E  6EDF               	movwf	indf2,c
 14583  003980  0012               	return	
 14584  003982                     __end_of_sprintf:
 14585                           	opt stack 0
 14586                           tosu	equ	0xFFF
 14587                           tosh	equ	0xFFE
 14588                           tosl	equ	0xFFD
 14589                           pclath	equ	0xFFA
 14590                           tblptru	equ	0xFF8
 14591                           tblptrh	equ	0xFF7
 14592                           tblptrl	equ	0xFF6
 14593                           tablat	equ	0xFF5
 14594                           prodh	equ	0xFF4
 14595                           prodl	equ	0xFF3
 14596                           intcon	equ	0xFF2
 14597                           intcon2	equ	0xFF1
 14598                           intcon3	equ	0xFF0
 14599                           indf0	equ	0xFEF
 14600                           postinc0	equ	0xFEE
 14601                           plusw0	equ	0xFEB
 14602                           fsr0h	equ	0xFEA
 14603                           fsr0l	equ	0xFE9
 14604                           wreg	equ	0xFE8
 14605                           indf1	equ	0xFE7
 14606                           postinc1	equ	0xFE6
 14607                           postdec1	equ	0xFE5
 14608                           plusw1	equ	0xFE3
 14609                           fsr1h	equ	0xFE2
 14610                           fsr1l	equ	0xFE1
 14611                           indf2	equ	0xFDF
 14612                           postinc2	equ	0xFDE
 14613                           postdec2	equ	0xFDD
 14614                           plusw2	equ	0xFDB
 14615                           fsr2h	equ	0xFDA
 14616                           fsr2l	equ	0xFD9
 14617                           status	equ	0xFD8
 14618                           
 14619 ;; *************** function _memset *****************
 14620 ;; Defined at:
 14621 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  p1              2   29[BANK0 ] PTR void 
 14624 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14625 ;;  c               2   31[BANK0 ] int 
 14626 ;;  n               2   33[BANK0 ] unsigned int 
 14627 ;; Auto vars:     Size  Location     Type
 14628 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14629 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14630 ;; Return value:  Size  Location     Type
 14631 ;;                  2   29[BANK0 ] PTR void 
 14632 ;; Registers used:
 14633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14634 ;; Tracked objects:
 14635 ;;		On entry : 0/0
 14636 ;;		On exit  : 0/0
 14637 ;;		Unchanged: 0/0
 14638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14639 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14640 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14642 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14643 ;;Total ram usage:        8 bytes
 14644 ;; Hardware stack levels used:    1
 14645 ;; Hardware stack levels required when called:   11
 14646 ;; This function calls:
 14647 ;;		Nothing
 14648 ;; This function is called by:
 14649 ;;		_USBDeviceInit
 14650 ;;		_USBStdSetCfgHandler
 14651 ;;		_Term_MainSm
 14652 ;; This function uses a non-reentrant model
 14653 ;;
 14654                           
 14655                           	psect	text59
 14656  005CB8                     __ptext59:
 14657                           	opt stack 0
 14658  005CB8                     _memset:
 14659                           	opt stack 14
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;incstack = 0
 14663  005CB8  C07D  F083         	movff	memset@p1,memset@p
 14664  005CBC  C07E  F084         	movff	memset@p1+1,memset@p+1
 14665  005CC0  D009               	goto	l3078
 14666  005CC2                     l11701:
 14667  005CC2  C083  FFD9         	movff	memset@p,fsr2l
 14668  005CC6  C084  FFDA         	movff	memset@p+1,fsr2h
 14669  005CCA  C07F  FFDF         	movff	memset@c,indf2
 14670  005CCE  0100               	movlb	0	; () banked
 14671  005CD0  4B83               	infsnz	memset@p& (0+255),f,b
 14672  005CD2  2B84               	incf	(memset@p+1)& (0+255),f,b
 14673  005CD4                     l3078:
 14674                           
 14675                           ; BSR set to: 0
 14676  005CD4  0100               	movlb	0	; () banked
 14677  005CD6  0781               	decf	memset@n& (0+255),f,b
 14678  005CD8  A0D8               	btfss	status,0,c
 14679  005CDA  0782               	decf	(memset@n+1)& (0+255),f,b
 14680  005CDC  2981               	incf	memset@n& (0+255),w,b
 14681  005CDE  E1F1               	bnz	l11701
 14682  005CE0  2982               	incf	(memset@n+1)& (0+255),w,b
 14683  005CE2  B4D8               	btfsc	status,2,c
 14684  005CE4  0012               	return	
 14685  005CE6  D7ED               	goto	l3079
 14686  005CE8                     __end_of_memset:
 14687                           	opt stack 0
 14688                           tosu	equ	0xFFF
 14689                           tosh	equ	0xFFE
 14690                           tosl	equ	0xFFD
 14691                           pclath	equ	0xFFA
 14692                           tblptru	equ	0xFF8
 14693                           tblptrh	equ	0xFF7
 14694                           tblptrl	equ	0xFF6
 14695                           tablat	equ	0xFF5
 14696                           prodh	equ	0xFF4
 14697                           prodl	equ	0xFF3
 14698                           intcon	equ	0xFF2
 14699                           intcon2	equ	0xFF1
 14700                           intcon3	equ	0xFF0
 14701                           indf0	equ	0xFEF
 14702                           postinc0	equ	0xFEE
 14703                           plusw0	equ	0xFEB
 14704                           fsr0h	equ	0xFEA
 14705                           fsr0l	equ	0xFE9
 14706                           wreg	equ	0xFE8
 14707                           indf1	equ	0xFE7
 14708                           postinc1	equ	0xFE6
 14709                           postdec1	equ	0xFE5
 14710                           plusw1	equ	0xFE3
 14711                           fsr1h	equ	0xFE2
 14712                           fsr1l	equ	0xFE1
 14713                           indf2	equ	0xFDF
 14714                           postinc2	equ	0xFDE
 14715                           postdec2	equ	0xFDD
 14716                           plusw2	equ	0xFDB
 14717                           fsr2h	equ	0xFDA
 14718                           fsr2l	equ	0xFD9
 14719                           status	equ	0xFD8
 14720                           
 14721 ;; *************** function _Terminal *****************
 14722 ;; Defined at:
 14723 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14724 ;; Parameters:    Size  Location     Type
 14725 ;;		None
 14726 ;; Auto vars:     Size  Location     Type
 14727 ;;  i               1   68[BANK0 ] unsigned char 
 14728 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14729 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14730 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14731 ;;  Index           1   70[BANK0 ] unsigned char 
 14732 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  1    wreg      void 
 14735 ;; Registers used:
 14736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14743 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14745 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14746 ;;Total ram usage:      455 bytes
 14747 ;; Hardware stack levels used:    1
 14748 ;; Hardware stack levels required when called:   15
 14749 ;; This function calls:
 14750 ;;		_I2cSlv_I2cReadMsgSts
 14751 ;;		_I2cSlv_ReceiveI2cMsg
 14752 ;;		_I2cSlv_SendI2cMsg
 14753 ;;		_OsTmr_Wait
 14754 ;;		_atoi
 14755 ;;		_getsUSBUSART
 14756 ;;		_itoa
 14757 ;;		_putUSBUSART
 14758 ;;		_strcpy
 14759 ;;		_strtol
 14760 ;;		_xtoi
 14761 ;; This function is called by:
 14762 ;;		_Term_MainSm
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text60
 14767  0000D0                     __ptext60:
 14768                           	opt stack 0
 14769  0000D0                     _Terminal:
 14770                           	opt stack 11
 14771                           
 14772                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14773                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14774                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14775                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14776                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14777                           ;term.c: 435: UINT8 Index;
 14778                           ;term.c: 436: static UINT8 Len[4];
 14779                           ;term.c: 437: static UINT8 PackageLen;
 14780                           ;term.c: 438: static UINT8 Addr[4];
 14781                           ;term.c: 439: static UINT8 SlaveAddr;
 14782                           ;term.c: 440: static PayloadType Payload[20u];
 14783                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14784                           
 14785                           ; BSR set to: 0
 14786                           ;incstack = 0
 14787  0000D0  0E00               	movlw	0
 14788  0000D2  0100               	movlb	0	; () banked
 14789  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14790                           
 14791                           ; BSR set to: 0
 14792                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14793                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14794                           ;term.c: 445: static SwTimerType SwTimer;
 14795                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14796  0000D6  0E1F               	movlw	31
 14797  0000D8  65D0               	cpfsgt	_USBDeviceState& (0+255),b
 14798  0000DA  0012               	return	
 14799                           
 14800                           ; BSR set to: 0
 14801  0000DC  B265               	btfsc	3941,1,c	;volatile
 14802  0000DE  0012               	return	
 14803  0000E0  D278               	goto	l2367
 14804  0000E2                     
 14805                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14806                           
 14807                           ; BSR set to: 0
 14808  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14809  0000E4  0100               	movlb	0	; () banked
 14810  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14811  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14812  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14813  0000EC  0EC8               	movlw	200
 14814  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14815  0000F0  EC1A  F024         	call	_getsUSBUSART	;wreg free
 14816  0000F4  0100               	movlb	0	; () banked
 14817  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14818                           
 14819                           ; BSR set to: 0
 14820                           ;term.c: 458: if (ReceivedBytes > 0)
 14821  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14822  0000FA  B4D8               	btfsc	status,2,c
 14823  0000FC  0012               	return	
 14824                           
 14825                           ; BSR set to: 0
 14826                           ;term.c: 459: {
 14827                           ;term.c: 461: if (EchoOption == 1u)
 14828  0000FE  0102               	movlb	2	; () banked
 14829  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14830  000102  A4D8               	btfss	status,2,c
 14831  000104  D026               	goto	l2371
 14832                           
 14833                           ; BSR set to: 2
 14834                           ;term.c: 462: {
 14835                           ;term.c: 464: if((cdc_trf_state == 0))
 14836  000106  0100               	movlb	0	; () banked
 14837  000108  51CA               	movf	_cdc_trf_state& (0+255),w,b
 14838  00010A  A4D8               	btfss	status,2,c
 14839  00010C  D022               	goto	l2371
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;term.c: 465: {
 14843                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14844  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14845  000110  0D01               	mullw	1
 14846  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14847  000114  24F3               	addwf	prodl,w,c
 14848  000116  6ED9               	movwf	fsr2l,c
 14849  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14850  00011A  20F4               	addwfc	prodh,w,c
 14851  00011C  6EDA               	movwf	fsr2h,c
 14852  00011E  0E0D               	movlw	13
 14853  000120  6EDF               	movwf	indf2,c
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14857  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14858  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14859  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14860  000128  0E01               	movlw	1
 14861  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14862  00012C  0E00               	movlw	0
 14863  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14864  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14865  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14866  000134  6ED9               	movwf	fsr2l,c
 14867  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14868  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14869  00013A  6EDA               	movwf	fsr2h,c
 14870  00013C  0E0A               	movlw	10
 14871  00013E  6EDF               	movwf	indf2,c
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14875  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14876  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14877  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14878  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14879  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14880  00014A  0F02               	addlw	2
 14881  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14882  00014E  ECB4  F02F         	call	_putUSBUSART	;wreg free
 14883  000152                     l2371:
 14884                           
 14885                           ;term.c: 469: }
 14886                           ;term.c: 470: }
 14887                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14888                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14889                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14890  000152  0E53               	movlw	83
 14891  000154  010A               	movlb	10	; () banked
 14892  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14893  000158  A4D8               	btfss	status,2,c
 14894  00015A  D043               	goto	l2372
 14895                           
 14896                           ; BSR set to: 10
 14897  00015C  0E4F               	movlw	79
 14898  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14899  000160  A4D8               	btfss	status,2,c
 14900  000162  D03F               	goto	l2372
 14901                           
 14902                           ; BSR set to: 10
 14903  000164  0E3A               	movlw	58
 14904  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14905  000168  A4D8               	btfss	status,2,c
 14906  00016A  D03B               	goto	l2372
 14907                           
 14908                           ; BSR set to: 10
 14909                           ;term.c: 476: {
 14910                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14911  00016C  0E47               	movlw	71
 14912  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14913  000170  A4D8               	btfss	status,2,c
 14914  000172  0012               	return	
 14915                           
 14916                           ; BSR set to: 10
 14917  000174  0E3A               	movlw	58
 14918  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14919  000178  A4D8               	btfss	status,2,c
 14920  00017A  0012               	return	
 14921                           
 14922                           ; BSR set to: 10
 14923                           ;term.c: 479: {
 14924                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14925  00017C  0E44               	movlw	68
 14926  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14927  000180  A4D8               	btfss	status,2,c
 14928  000182  D015               	goto	l2374
 14929                           
 14930                           ; BSR set to: 10
 14931  000184  0E46               	movlw	70
 14932  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14933  000188  A4D8               	btfss	status,2,c
 14934  00018A  D011               	goto	l2374
 14935                           
 14936                           ; BSR set to: 10
 14937                           ;term.c: 482: {
 14938                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14939  00018C  0E41               	movlw	65
 14940  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14941  000190  A4D8               	btfss	status,2,c
 14942  000192  D004               	goto	l2375
 14943                           
 14944                           ; BSR set to: 10
 14945                           ;term.c: 484: {
 14946                           ;term.c: 485: FormatOption = 1u;
 14947  000194  0E01               	movlw	1
 14948  000196  0102               	movlb	2	; () banked
 14949  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14950                           
 14951                           ;term.c: 486: }
 14952  00019A  0012               	return	
 14953  00019C                     l2375:
 14954                           
 14955                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14956                           
 14957                           ; BSR set to: 2
 14958  00019C  0E42               	movlw	66
 14959  00019E  010A               	movlb	10	; () banked
 14960  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14961  0001A2  A4D8               	btfss	status,2,c
 14962  0001A4  0012               	return	
 14963                           
 14964                           ; BSR set to: 10
 14965                           ;term.c: 488: {
 14966                           ;term.c: 489: FormatOption = 0u;
 14967  0001A6  0E00               	movlw	0
 14968  0001A8  0102               	movlb	2	; () banked
 14969  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14970                           
 14971                           ; BSR set to: 2
 14972                           ;term.c: 490: }
 14973                           ;term.c: 491: }
 14974                           
 14975                           ; BSR set to: 2
 14976  0001AC  0012               	return	
 14977  0001AE                     l2374:
 14978                           
 14979                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14980                           
 14981                           ; BSR set to: 2
 14982  0001AE  0E45               	movlw	69
 14983  0001B0  010A               	movlb	10	; () banked
 14984  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14985  0001B4  A4D8               	btfss	status,2,c
 14986  0001B6  0012               	return	
 14987                           
 14988                           ; BSR set to: 10
 14989  0001B8  0E4D               	movlw	77
 14990  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14991  0001BC  A4D8               	btfss	status,2,c
 14992  0001BE  0012               	return	
 14993                           
 14994                           ; BSR set to: 10
 14995                           ;term.c: 494: {
 14996                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14997  0001C0  0E31               	movlw	49
 14998  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14999  0001C4  A4D8               	btfss	status,2,c
 15000  0001C6  D004               	goto	l2380
 15001                           
 15002                           ; BSR set to: 10
 15003                           ;term.c: 496: {
 15004                           ;term.c: 497: EchoOption = 1u;
 15005  0001C8  0E01               	movlw	1
 15006  0001CA  0102               	movlb	2	; () banked
 15007  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15008                           
 15009                           ;term.c: 498: }
 15010  0001CE  0012               	return	
 15011  0001D0                     l2380:
 15012                           
 15013                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15014                           
 15015                           ; BSR set to: 2
 15016  0001D0  0E30               	movlw	48
 15017  0001D2  010A               	movlb	10	; () banked
 15018  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15019  0001D6  A4D8               	btfss	status,2,c
 15020  0001D8  0012               	return	
 15021                           
 15022                           ; BSR set to: 10
 15023                           ;term.c: 500: {
 15024                           ;term.c: 501: EchoOption = 0u;
 15025  0001DA  0E00               	movlw	0
 15026  0001DC  0102               	movlb	2	; () banked
 15027  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15028                           
 15029                           ; BSR set to: 2
 15030                           ;term.c: 507: }
 15031                           ;term.c: 508: }
 15032                           ;term.c: 509: }
 15033                           
 15034                           ; BSR set to: 2
 15035                           
 15036                           ; BSR set to: 2
 15037                           
 15038                           ;term.c: 504: else
 15039                           ;term.c: 505: {
 15040                           
 15041                           ; BSR set to: 2
 15042                           
 15043                           ; BSR set to: 2
 15044                           ;term.c: 502: }
 15045                           ;term.c: 503: }
 15046                           
 15047                           ; BSR set to: 2
 15048  0001E0  0012               	return	
 15049  0001E2                     l2372:
 15050                           
 15051                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15052                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15053                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15054                           
 15055                           ; BSR set to: 2
 15056  0001E2  0E53               	movlw	83
 15057  0001E4  010A               	movlb	10	; () banked
 15058  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15059  0001E8  A4D8               	btfss	status,2,c
 15060  0001EA  D0D3               	goto	l2385
 15061                           
 15062                           ; BSR set to: 10
 15063  0001EC  0E42               	movlw	66
 15064  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15065  0001F0  A4D8               	btfss	status,2,c
 15066  0001F2  D0CF               	goto	l2385
 15067                           
 15068                           ; BSR set to: 10
 15069  0001F4  0E3A               	movlw	58
 15070  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15071  0001F8  A4D8               	btfss	status,2,c
 15072  0001FA  D0CB               	goto	l2385
 15073                           
 15074                           ; BSR set to: 10
 15075                           ;term.c: 513: {
 15076                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15077  0001FC  0E57               	movlw	87
 15078  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15079  000200  A4D8               	btfss	status,2,c
 15080  000202  D091               	goto	l2386
 15081                           
 15082                           ; BSR set to: 10
 15083  000204  0E3A               	movlw	58
 15084  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15085  000208  A4D8               	btfss	status,2,c
 15086  00020A  D08D               	goto	l2386
 15087                           
 15088                           ; BSR set to: 10
 15089                           ;term.c: 515: {
 15090                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15091  00020C  CA05  F3B0         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15092                           
 15093                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15094  000210  CA06  F3B1         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15095                           
 15096                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15097  000214  CA08  F3AC         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15098                           
 15099                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15100  000218  CA09  F3AD         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15101                           
 15102                           ; BSR set to: 10
 15103                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15104  00021C  0EB0               	movlw	low Terminal@Len
 15105  00021E  0100               	movlb	0	; () banked
 15106  000220  6F83               	movwf	atoi@s& (0+255),b
 15107  000222  0E03               	movlw	high Terminal@Len
 15108  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15109  000226  ECEE  F01B         	call	_atoi	;wreg free
 15110  00022A  0100               	movlb	0	; () banked
 15111  00022C  5183               	movf	?_atoi& (0+255),w,b
 15112  00022E  0102               	movlb	2	; () banked
 15113  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15114                           
 15115                           ; BSR set to: 2
 15116                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15117  000232  0EAC               	movlw	low Terminal@Addr
 15118  000234  0100               	movlb	0	; () banked
 15119  000236  6F83               	movwf	xtoi@s& (0+255),b
 15120  000238  0E03               	movlw	high Terminal@Addr
 15121  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15122  00023C  EC2F  F01A         	call	_xtoi	;wreg free
 15123  000240  0100               	movlb	0	; () banked
 15124  000242  5183               	movf	?_xtoi& (0+255),w,b
 15125  000244  0102               	movlb	2	; () banked
 15126  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15127                           
 15128                           ; BSR set to: 2
 15129                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15130  000248  0E00               	movlw	0
 15131  00024A  0100               	movlb	0	; () banked
 15132  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15133  00024E  D032               	goto	l2387
 15134  000250                     
 15135                           ;term.c: 527: {
 15136                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15137                           
 15138                           ; BSR set to: 0
 15139  000250  0100               	movlb	0	; () banked
 15140  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15141  000254  0D02               	mullw	2
 15142  000256  0E0B               	movlw	11
 15143  000258  26F3               	addwf	prodl,f,c
 15144  00025A  0E00               	movlw	0
 15145  00025C  22F4               	addwfc	prodh,f,c
 15146  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15147  000260  24F3               	addwf	prodl,w,c
 15148  000262  6ED9               	movwf	fsr2l,c
 15149  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15150  000266  20F4               	addwfc	prodh,w,c
 15151  000268  6EDA               	movwf	fsr2h,c
 15152  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15153  00026C  0D04               	mullw	4
 15154  00026E  0E00               	movlw	low Terminal@Payload
 15155  000270  24F3               	addwf	prodl,w,c
 15156  000272  6EE1               	movwf	fsr1l,c
 15157  000274  0E05               	movlw	high Terminal@Payload
 15158  000276  20F4               	addwfc	prodh,w,c
 15159  000278  6EE2               	movwf	fsr1h,c
 15160  00027A  CFDF FFE7          	movff	indf2,indf1
 15161                           
 15162                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15163  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15164  000280  0D02               	mullw	2
 15165  000282  0E0C               	movlw	12
 15166  000284  26F3               	addwf	prodl,f,c
 15167  000286  0E00               	movlw	0
 15168  000288  22F4               	addwfc	prodh,f,c
 15169  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15170  00028C  24F3               	addwf	prodl,w,c
 15171  00028E  6ED9               	movwf	fsr2l,c
 15172  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15173  000292  20F4               	addwfc	prodh,w,c
 15174  000294  6EDA               	movwf	fsr2h,c
 15175  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15176  000298  0D04               	mullw	4
 15177  00029A  0E01               	movlw	1
 15178  00029C  26F3               	addwf	prodl,f,c
 15179  00029E  0E00               	movlw	0
 15180  0002A0  22F4               	addwfc	prodh,f,c
 15181  0002A2  0E00               	movlw	low Terminal@Payload
 15182  0002A4  24F3               	addwf	prodl,w,c
 15183  0002A6  6EE1               	movwf	fsr1l,c
 15184  0002A8  0E05               	movlw	high Terminal@Payload
 15185  0002AA  20F4               	addwfc	prodh,w,c
 15186  0002AC  6EE2               	movwf	fsr1h,c
 15187  0002AE  CFDF FFE7          	movff	indf2,indf1
 15188                           
 15189                           ; BSR set to: 0
 15190  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15191  0002B4                     l2387:
 15192                           
 15193                           ; BSR set to: 0
 15194                           
 15195                           ; BSR set to: 0
 15196  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15197  0002B6  0102               	movlb	2	; () banked
 15198  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15199  0002BA  B0D8               	btfsc	status,0,c
 15200  0002BC  D7C9               	goto	l2388
 15201                           
 15202                           ; BSR set to: 2
 15203                           ;term.c: 530: }
 15204                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15205                           
 15206                           ; BSR set to: 2
 15207  0002BE  0E00               	movlw	0
 15208  0002C0  0100               	movlb	0	; () banked
 15209  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15210  0002C4  D01F               	goto	l2390
 15211  0002C6                     
 15212                           ;term.c: 533: {
 15213                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15214                           
 15215                           ; BSR set to: 0
 15216  0002C6  0100               	movlb	0	; () banked
 15217  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15218  0002CA  0D04               	mullw	4
 15219  0002CC  0E00               	movlw	low Terminal@Payload
 15220  0002CE  24F3               	addwf	prodl,w,c
 15221  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15222  0002D2  0E05               	movlw	high Terminal@Payload
 15223  0002D4  20F4               	addwfc	prodh,w,c
 15224  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15225  0002D8  0E00               	movlw	0
 15226  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15227  0002DC  0E00               	movlw	0
 15228  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15229  0002E0  0E00               	movlw	0
 15230  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15231  0002E4  0E10               	movlw	16
 15232  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15233  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15234  0002EC  0100               	movlb	0	; () banked
 15235  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15236  0002F0  0D01               	mullw	1
 15237  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15238  0002F4  24F3               	addwf	prodl,w,c
 15239  0002F6  6ED9               	movwf	fsr2l,c
 15240  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15241  0002FA  20F4               	addwfc	prodh,w,c
 15242  0002FC  6EDA               	movwf	fsr2h,c
 15243  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15244                           
 15245                           ; BSR set to: 0
 15246  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15247  000304                     l2390:
 15248                           
 15249                           ; BSR set to: 0
 15250                           
 15251                           ; BSR set to: 0
 15252  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15253  000306  0102               	movlb	2	; () banked
 15254  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15255  00030A  B0D8               	btfsc	status,0,c
 15256  00030C  D7DC               	goto	l2391
 15257                           
 15258                           ; BSR set to: 2
 15259                           ;term.c: 539: }
 15260                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15261                           
 15262                           ; BSR set to: 2
 15263  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15264  000310  0100               	movlb	0	; () banked
 15265  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15266  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15267  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15268  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15269  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15270  000320  EC0F  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 15271                           
 15272                           ;term.c: 543: }
 15273  000324  0012               	return	
 15274  000326                     l2386:
 15275                           
 15276                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15277  000326  0E52               	movlw	82
 15278  000328  010A               	movlb	10	; () banked
 15279  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15280  00032C  A4D8               	btfss	status,2,c
 15281  00032E  0012               	return	
 15282                           
 15283                           ; BSR set to: 10
 15284  000330  0E3A               	movlw	58
 15285  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15286  000334  A4D8               	btfss	status,2,c
 15287  000336  0012               	return	
 15288                           
 15289                           ; BSR set to: 10
 15290                           ;term.c: 545: {
 15291                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15292  000338  CA05  F3B0         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15293                           
 15294                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15295  00033C  CA06  F3B1         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15296                           
 15297                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15298  000340  CA08  F3AC         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15299                           
 15300                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15301  000344  CA09  F3AD         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15302                           
 15303                           ; BSR set to: 10
 15304                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15305  000348  0EB0               	movlw	low Terminal@Len
 15306  00034A  0100               	movlb	0	; () banked
 15307  00034C  6F83               	movwf	atoi@s& (0+255),b
 15308  00034E  0E03               	movlw	high Terminal@Len
 15309  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15310  000352  ECEE  F01B         	call	_atoi	;wreg free
 15311  000356  0100               	movlb	0	; () banked
 15312  000358  5183               	movf	?_atoi& (0+255),w,b
 15313  00035A  0102               	movlb	2	; () banked
 15314  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15315                           
 15316                           ; BSR set to: 2
 15317                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15318  00035E  0EAC               	movlw	low Terminal@Addr
 15319  000360  0100               	movlb	0	; () banked
 15320  000362  6F83               	movwf	xtoi@s& (0+255),b
 15321  000364  0E03               	movlw	high Terminal@Addr
 15322  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15323  000368  EC2F  F01A         	call	_xtoi	;wreg free
 15324  00036C  0100               	movlb	0	; () banked
 15325  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15326  000370  0102               	movlb	2	; () banked
 15327  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15328                           
 15329                           ; BSR set to: 2
 15330                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15331  000374  0E86               	movlw	low Terminal@TermRxBuffer
 15332  000376  0100               	movlb	0	; () banked
 15333  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15334  00037A  0E04               	movlw	high Terminal@TermRxBuffer
 15335  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15336  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15337  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15338  000386  ECB0  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15339                           
 15340                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15341  00038A  0E01               	movlw	1
 15342  00038C  0102               	movlb	2	; () banked
 15343  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15344                           
 15345                           ; BSR set to: 2
 15346                           ;term.c: 561: }
 15347                           ;term.c: 562: }
 15348                           
 15349                           ; BSR set to: 2
 15350  000390  0012               	return	
 15351  000392                     l2385:
 15352                           
 15353                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15354                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15355                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15356                           
 15357                           ; BSR set to: 2
 15358  000392  0E54               	movlw	84
 15359  000394  010A               	movlb	10	; () banked
 15360  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15361  000398  A4D8               	btfss	status,2,c
 15362  00039A  0012               	return	
 15363                           
 15364                           ; BSR set to: 10
 15365  00039C  0E45               	movlw	69
 15366  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15367  0003A0  A4D8               	btfss	status,2,c
 15368  0003A2  0012               	return	
 15369                           
 15370                           ; BSR set to: 10
 15371  0003A4  0E4C               	movlw	76
 15372  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15373  0003A8  A4D8               	btfss	status,2,c
 15374  0003AA  0012               	return	
 15375                           
 15376                           ; BSR set to: 10
 15377                           ;term.c: 566: {
 15378                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15379  0003AC  CA03  F3B0         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15380                           
 15381                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15382  0003B0  CA04  F3B1         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15383                           
 15384                           ; BSR set to: 10
 15385                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15386  0003B4  0EB0               	movlw	low Terminal@Len
 15387  0003B6  0100               	movlb	0	; () banked
 15388  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15389  0003BA  0E03               	movlw	high Terminal@Len
 15390  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15391  0003BE  ECEE  F01B         	call	_atoi	;wreg free
 15392  0003C2  C083  F322         	movff	?_atoi,_PhoneNumberLen
 15393  0003C6  C084  F323         	movff	?_atoi+1,_PhoneNumberLen+1
 15394                           
 15395                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15396  0003CA  0E00               	movlw	0
 15397  0003CC  0100               	movlb	0	; () banked
 15398  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15399  0003D0  D018               	goto	l2397
 15400  0003D2                     
 15401                           ; BSR set to: 0
 15402                           ;term.c: 573: {
 15403                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15404                           
 15405                           ; BSR set to: 0
 15406  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15407  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15408  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15409  0003D8  0E05               	movlw	5
 15410  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15411  0003DC  0E00               	movlw	0
 15412  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15413  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15414  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15415  0003E4  6ED9               	movwf	fsr2l,c
 15416  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15417  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15418  0003EA  6EDA               	movwf	fsr2h,c
 15419  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15420  0003EE  0D01               	mullw	1
 15421  0003F0  0EB8               	movlw	low _PhoneNumber
 15422  0003F2  24F3               	addwf	prodl,w,c
 15423  0003F4  6EE1               	movwf	fsr1l,c
 15424  0003F6  0E04               	movlw	high _PhoneNumber
 15425  0003F8  20F4               	addwfc	prodh,w,c
 15426  0003FA  6EE2               	movwf	fsr1h,c
 15427  0003FC  CFDF FFE7          	movff	indf2,indf1
 15428                           
 15429                           ; BSR set to: 0
 15430  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15431  000402                     l2397:
 15432                           
 15433                           ; BSR set to: 0
 15434                           
 15435                           ; BSR set to: 0
 15436  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15437  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15438  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15439  000408  0103               	movlb	3	; () banked
 15440  00040A  5122               	movf	_PhoneNumberLen& (0+255),w,b
 15441  00040C  0100               	movlb	0	; () banked
 15442  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15443  000410  0103               	movlb	3	; () banked
 15444  000412  5123               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15445  000414  0100               	movlb	0	; () banked
 15446  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15447  000418  B0D8               	btfsc	status,0,c
 15448  00041A  0012               	return	
 15449  00041C  D7DA               	goto	l2398
 15450  00041E                     
 15451                           ;term.c: 619: if((cdc_trf_state == 0))
 15452                           
 15453                           ; BSR set to: 0
 15454  00041E  0100               	movlb	0	; () banked
 15455  000420  51CA               	movf	_cdc_trf_state& (0+255),w,b
 15456  000422  A4D8               	btfss	status,2,c
 15457  000424  0012               	return	
 15458                           
 15459                           ; BSR set to: 0
 15460                           ;term.c: 620: {
 15461                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15462  000426  0E53               	movlw	83
 15463  000428  0102               	movlb	2	; () banked
 15464  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15465                           
 15466                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15467  00042C  0E42               	movlw	66
 15468  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15469                           
 15470                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15471  000430  0E5B               	movlw	91
 15472  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15473                           
 15474                           ; BSR set to: 2
 15475                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15476  000434  C3AC  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15477                           
 15478                           ; BSR set to: 2
 15479                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15480  000438  C3AD  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15481                           
 15482                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15483  00043C  0E5D               	movlw	93
 15484  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15485                           
 15486                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15487  000440  0E3A               	movlw	58
 15488  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15489                           
 15490                           ; BSR set to: 2
 15491                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15492  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15493  000446  0100               	movlb	0	; () banked
 15494  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15495  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15496  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15497  00044E  0E07               	movlw	7
 15498  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15499  000452  ECB4  F02F         	call	_putUSBUSART	;wreg free
 15500                           
 15501                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15502  000456  0E02               	movlw	2
 15503  000458  0102               	movlb	2	; () banked
 15504  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15505                           
 15506                           ; BSR set to: 2
 15507                           ;term.c: 632: }
 15508                           ;term.c: 633: break;
 15509  00045C  0012               	return	
 15510  00045E                     
 15511                           ; BSR set to: 2
 15512                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15513                           
 15514                           ; BSR set to: 2
 15515  00045E  ECD6  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15516  000462  06E8               	decf	wreg,f,c
 15517  000464  A4D8               	btfss	status,2,c
 15518  000466  D088               	goto	l2406
 15519                           
 15520                           ;term.c: 638: {
 15521                           ;term.c: 640: if (FormatOption == 1u)
 15522  000468  0102               	movlb	2	; () banked
 15523  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15524  00046C  A4D8               	btfss	status,2,c
 15525  00046E  D027               	goto	u12940
 15526                           
 15527                           ; BSR set to: 2
 15528                           ;term.c: 641: {
 15529                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15530  000470  0E00               	movlw	0
 15531  000472  0100               	movlb	0	; () banked
 15532  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15533  000476  D01E               	goto	l2408
 15534  000478                     
 15535                           ;term.c: 644: {
 15536                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15537                           
 15538                           ; BSR set to: 0
 15539  000478  0100               	movlb	0	; () banked
 15540  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15541  00047C  0D04               	mullw	4
 15542  00047E  0E00               	movlw	low Terminal@Payload
 15543  000480  24F3               	addwf	prodl,w,c
 15544  000482  6F93               	movwf	itoa@buf& (0+255),b
 15545  000484  0E05               	movlw	high Terminal@Payload
 15546  000486  20F4               	addwfc	prodh,w,c
 15547  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15548  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15549  00048C  0D01               	mullw	1
 15550  00048E  0E86               	movlw	low Terminal@TermRxBuffer
 15551  000490  24F3               	addwf	prodl,w,c
 15552  000492  6ED9               	movwf	fsr2l,c
 15553  000494  0E04               	movlw	high Terminal@TermRxBuffer
 15554  000496  20F4               	addwfc	prodh,w,c
 15555  000498  6EDA               	movwf	fsr2h,c
 15556  00049A  50DF               	movf	indf2,w,c
 15557  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15558  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15559  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15560  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15561  0004A4  0E00               	movlw	0
 15562  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15563  0004A8  0E0A               	movlw	10
 15564  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15565  0004AC  EC29  F02C         	call	_itoa	;wreg free
 15566  0004B0  0100               	movlb	0	; () banked
 15567  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15568  0004B4                     l2408:
 15569                           
 15570                           ; BSR set to: 0
 15571                           
 15572                           ; BSR set to: 0
 15573  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15574  0004B6  0102               	movlb	2	; () banked
 15575  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15576  0004BA  B0D8               	btfsc	status,0,c
 15577  0004BC  D7DD               	goto	l2409
 15578  0004BE                     u12940:
 15579                           
 15580                           ; BSR set to: 2
 15581                           ;term.c: 646: }
 15582                           ;term.c: 647: }
 15583                           ;term.c: 650: if((cdc_trf_state == 0))
 15584                           
 15585                           ; BSR set to: 2
 15586                           
 15587                           ; BSR set to: 2
 15588  0004BE  0100               	movlb	0	; () banked
 15589  0004C0  51CA               	movf	_cdc_trf_state& (0+255),w,b
 15590  0004C2  A4D8               	btfss	status,2,c
 15591  0004C4  0012               	return	
 15592                           
 15593                           ; BSR set to: 0
 15594                           ;term.c: 651: {
 15595                           ;term.c: 653: if (FormatOption == 1u)
 15596  0004C6  0102               	movlb	2	; () banked
 15597  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15598  0004CA  A4D8               	btfss	status,2,c
 15599  0004CC  D02B               	goto	l2412
 15600                           
 15601                           ; BSR set to: 2
 15602                           ;term.c: 654: {
 15603                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15604  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15605  0004D0  0D08               	mullw	8
 15606  0004D2  0E03               	movlw	3
 15607  0004D4  26F3               	addwf	prodl,f,c
 15608  0004D6  0E00               	movlw	0
 15609  0004D8  22F4               	addwfc	prodh,f,c
 15610  0004DA  0E00               	movlw	low Terminal@Payload
 15611  0004DC  24F3               	addwf	prodl,w,c
 15612  0004DE  6ED9               	movwf	fsr2l,c
 15613  0004E0  0E05               	movlw	high Terminal@Payload
 15614  0004E2  20F4               	addwfc	prodh,w,c
 15615  0004E4  6EDA               	movwf	fsr2h,c
 15616  0004E6  0E0D               	movlw	13
 15617  0004E8  6EDF               	movwf	indf2,c
 15618                           
 15619                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15620  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15621  0004EC  0D08               	mullw	8
 15622  0004EE  0E02               	movlw	2
 15623  0004F0  26F3               	addwf	prodl,f,c
 15624  0004F2  0E00               	movlw	0
 15625  0004F4  22F4               	addwfc	prodh,f,c
 15626  0004F6  0E00               	movlw	low Terminal@Payload
 15627  0004F8  24F3               	addwf	prodl,w,c
 15628  0004FA  6ED9               	movwf	fsr2l,c
 15629  0004FC  0E05               	movlw	high Terminal@Payload
 15630  0004FE  20F4               	addwfc	prodh,w,c
 15631  000500  6EDA               	movwf	fsr2h,c
 15632  000502  0E0A               	movlw	10
 15633  000504  6EDF               	movwf	indf2,c
 15634                           
 15635                           ; BSR set to: 2
 15636                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15637  000506  0E00               	movlw	low Terminal@Payload
 15638  000508  0100               	movlb	0	; () banked
 15639  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15640  00050C  0E05               	movlw	high Terminal@Payload
 15641  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15642  000510  0102               	movlb	2	; () banked
 15643  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15644  000514  0D02               	mullw	2
 15645  000516  50F3               	movf	prodl,w,c
 15646  000518  0F04               	addlw	4
 15647  00051A  0100               	movlb	0	; () banked
 15648  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15649  00051E  ECB4  F02F         	call	_putUSBUSART	;wreg free
 15650                           
 15651                           ;term.c: 659: }
 15652  000522  D026               	goto	l2413
 15653  000524                     l2412:
 15654                           
 15655                           ;term.c: 660: else
 15656                           ;term.c: 661: {
 15657                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15658  000524  0102               	movlb	2	; () banked
 15659  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15660  000528  0D01               	mullw	1
 15661  00052A  0E86               	movlw	low Terminal@TermRxBuffer
 15662  00052C  24F3               	addwf	prodl,w,c
 15663  00052E  6ED9               	movwf	fsr2l,c
 15664  000530  0E04               	movlw	high Terminal@TermRxBuffer
 15665  000532  20F4               	addwfc	prodh,w,c
 15666  000534  6EDA               	movwf	fsr2h,c
 15667  000536  0E0D               	movlw	13
 15668  000538  6EDF               	movwf	indf2,c
 15669                           
 15670                           ; BSR set to: 2
 15671                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15672  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15673  00053C  0100               	movlb	0	; () banked
 15674  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15675  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15676  000542  0E01               	movlw	1
 15677  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15678  000546  0E00               	movlw	0
 15679  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15680  00054A  0E86               	movlw	low Terminal@TermRxBuffer
 15681  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15682  00054E  6ED9               	movwf	fsr2l,c
 15683  000550  0E04               	movlw	high Terminal@TermRxBuffer
 15684  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15685  000554  6EDA               	movwf	fsr2h,c
 15686  000556  0E0A               	movlw	10
 15687  000558  6EDF               	movwf	indf2,c
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15691  00055A  0E86               	movlw	low Terminal@TermRxBuffer
 15692  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15693  00055E  0E04               	movlw	high Terminal@TermRxBuffer
 15694  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15695  000562  0102               	movlb	2	; () banked
 15696  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15697  000566  0F02               	addlw	2
 15698  000568  0100               	movlb	0	; () banked
 15699  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15700  00056C  ECB4  F02F         	call	_putUSBUSART	;wreg free
 15701  000570                     l2413:
 15702                           
 15703                           ;term.c: 666: }
 15704                           ;term.c: 668: TermState = Term_GetData;
 15705  000570  0E00               	movlw	0
 15706  000572  0102               	movlb	2	; () banked
 15707  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15708                           
 15709                           ; BSR set to: 2
 15710                           ;term.c: 669: }
 15711                           ;term.c: 670: }
 15712  000576  0012               	return	
 15713  000578                     l2406:
 15714                           
 15715                           ;term.c: 671: else
 15716                           ;term.c: 672: {
 15717                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15718                           
 15719                           ; BSR set to: 2
 15720  000578  0ECC               	movlw	low Terminal@SwTimer
 15721  00057A  0100               	movlb	0	; () banked
 15722  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15723  00057E  0E04               	movlw	high Terminal@SwTimer
 15724  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15725  000582  0EB8               	movlw	184
 15726  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15727  000586  0E0B               	movlw	11
 15728  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15729  00058A  0E00               	movlw	0
 15730  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15731  00058E  0E00               	movlw	0
 15732  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15733  000592  EC53  F026         	call	_OsTmr_Wait	;wreg free
 15734  000596  06E8               	decf	wreg,f,c
 15735  000598  A4D8               	btfss	status,2,c
 15736  00059A  0012               	return	
 15737                           
 15738                           ;term.c: 675: {
 15739                           ;term.c: 677: if((cdc_trf_state == 0))
 15740  00059C  0100               	movlb	0	; () banked
 15741  00059E  51CA               	movf	_cdc_trf_state& (0+255),w,b
 15742  0005A0  A4D8               	btfss	status,2,c
 15743  0005A2  0012               	return	
 15744                           
 15745                           ; BSR set to: 0
 15746                           ;term.c: 678: {
 15747                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15748  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15749  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15750  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15751  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15752  0005AC  0E5E               	movlw	low STR_21
 15753  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15754  0005B0  0EFE               	movlw	high STR_21
 15755  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15756  0005B4  EC2B  F02E         	call	_strcpy	;wreg free
 15757                           
 15758                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15759  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15760  0005BA  0100               	movlb	0	; () banked
 15761  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15762  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15763  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15764  0005C2  0E29               	movlw	41
 15765  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15766  0005C6  ECB4  F02F         	call	_putUSBUSART	;wreg free
 15767                           
 15768                           ;term.c: 682: TermState = Term_GetData;
 15769  0005CA  0E00               	movlw	0
 15770  0005CC  0102               	movlb	2	; () banked
 15771  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15772                           
 15773                           ; BSR set to: 2
 15774                           ;term.c: 693: }
 15775                           
 15776                           ; BSR set to: 2
 15777                           ;term.c: 692: break;
 15778                           
 15779                           ;term.c: 691: default:
 15780                           
 15781                           ; BSR set to: 2
 15782                           ;term.c: 689: break;
 15783                           
 15784                           ;term.c: 688: case Term_ReadSlvUartData:
 15785                           
 15786                           ; BSR set to: 2
 15787                           ;term.c: 683: }
 15788                           ;term.c: 684: }
 15789                           ;term.c: 685: }
 15790                           ;term.c: 686: break;
 15791                           
 15792                           ; BSR set to: 2
 15793                           
 15794                           ; BSR set to: 2
 15795  0005D0  0012               	return	
 15796  0005D2                     l2367:
 15797                           
 15798                           ; BSR set to: 2
 15799  0005D2  0102               	movlb	2	; () banked
 15800  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15801                           
 15802                           ; Switch size 1, requested type "space"
 15803                           ; Number of cases is 4, Range of values is 0 to 3
 15804                           ; switch strategies available:
 15805                           ; Name         Instructions Cycles
 15806                           ; simple_byte           13     7 (average)
 15807                           ;	Chosen strategy is simple_byte
 15808  0005D6  0A00               	xorlw	0	; case 0
 15809  0005D8  B4D8               	btfsc	status,2,c
 15810  0005DA  D583               	goto	l2368
 15811  0005DC  0A01               	xorlw	1	; case 1
 15812  0005DE  B4D8               	btfsc	status,2,c
 15813  0005E0  D71E               	goto	l2403
 15814  0005E2  0A03               	xorlw	3	; case 2
 15815  0005E4  B4D8               	btfsc	status,2,c
 15816  0005E6  D73B               	goto	l2405
 15817  0005E8  0A01               	xorlw	1	; case 3
 15818  0005EA  0012               	return	
 15819  0005EC                     __end_of_Terminal:
 15820                           	opt stack 0
 15821                           tosu	equ	0xFFF
 15822                           tosh	equ	0xFFE
 15823                           tosl	equ	0xFFD
 15824                           pclath	equ	0xFFA
 15825                           tblptru	equ	0xFF8
 15826                           tblptrh	equ	0xFF7
 15827                           tblptrl	equ	0xFF6
 15828                           tablat	equ	0xFF5
 15829                           prodh	equ	0xFF4
 15830                           prodl	equ	0xFF3
 15831                           intcon	equ	0xFF2
 15832                           intcon2	equ	0xFF1
 15833                           intcon3	equ	0xFF0
 15834                           indf0	equ	0xFEF
 15835                           postinc0	equ	0xFEE
 15836                           plusw0	equ	0xFEB
 15837                           fsr0h	equ	0xFEA
 15838                           fsr0l	equ	0xFE9
 15839                           wreg	equ	0xFE8
 15840                           indf1	equ	0xFE7
 15841                           postinc1	equ	0xFE6
 15842                           postdec1	equ	0xFE5
 15843                           plusw1	equ	0xFE3
 15844                           fsr1h	equ	0xFE2
 15845                           fsr1l	equ	0xFE1
 15846                           indf2	equ	0xFDF
 15847                           postinc2	equ	0xFDE
 15848                           postdec2	equ	0xFDD
 15849                           plusw2	equ	0xFDB
 15850                           fsr2h	equ	0xFDA
 15851                           fsr2l	equ	0xFD9
 15852                           status	equ	0xFD8
 15853                           
 15854 ;; *************** function _xtoi *****************
 15855 ;; Defined at:
 15856 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15857 ;; Parameters:    Size  Location     Type
 15858 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15859 ;;		 -> Terminal@Addr(4), 
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;  val             2   40[BANK0 ] unsigned int 
 15862 ;;  c               1   42[BANK0 ] unsigned char 
 15863 ;;  sign            1   39[BANK0 ] unsigned char 
 15864 ;; Return value:  Size  Location     Type
 15865 ;;                  2   35[BANK0 ] unsigned int 
 15866 ;; Registers used:
 15867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15868 ;; Tracked objects:
 15869 ;;		On entry : 0/0
 15870 ;;		On exit  : 0/0
 15871 ;;		Unchanged: 0/0
 15872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15874 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15876 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15877 ;;Total ram usage:        8 bytes
 15878 ;; Hardware stack levels used:    1
 15879 ;; Hardware stack levels required when called:   13
 15880 ;; This function calls:
 15881 ;;		_isdigit
 15882 ;;		_isspace
 15883 ;;		_isupper
 15884 ;;		_isxdigit
 15885 ;;		_tolower
 15886 ;; This function is called by:
 15887 ;;		_Terminal
 15888 ;; This function uses a non-reentrant model
 15889 ;;
 15890                           
 15891                           	psect	text61
 15892  00345E                     __ptext61:
 15893                           	opt stack 0
 15894  00345E                     _xtoi:
 15895                           	opt stack 12
 15896                           
 15897                           ;incstack = 0
 15898  00345E  0E00               	movlw	0
 15899  003460  0100               	movlb	0	; () banked
 15900  003462  6F87               	movwf	xtoi@sign& (0+255),b
 15901  003464  0E00               	movlw	0
 15902  003466  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15903  003468  0E00               	movlw	0
 15904  00346A  6F88               	movwf	xtoi@val& (0+255),b
 15905  00346C  D003               	goto	l3273
 15906  00346E                     
 15907                           ; BSR set to: 0
 15908  00346E  0100               	movlb	0	; () banked
 15909  003470  4B83               	infsnz	xtoi@s& (0+255),f,b
 15910  003472  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15911  003474                     l3273:
 15912                           
 15913                           ; BSR set to: 0
 15914                           
 15915                           ; BSR set to: 0
 15916  003474  C083  FFD9         	movff	xtoi@s,fsr2l
 15917  003478  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15918  00347C  50DF               	movf	indf2,w,c
 15919  00347E  ECFD  F02E         	call	_isspace
 15920  003482  B0D8               	btfsc	status,0,c
 15921  003484  D7F4               	goto	l3274
 15922  003486  C083  FFD9         	movff	xtoi@s,fsr2l
 15923  00348A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15924  00348E  0E2D               	movlw	45
 15925  003490  18DE               	xorwf	postinc2,w,c
 15926  003492  A4D8               	btfss	status,2,c
 15927  003494  D003               	goto	l3276
 15928  003496  0100               	movlb	0	; () banked
 15929  003498  2B87               	incf	xtoi@sign& (0+255),f,b
 15930  00349A  D009               	goto	L15
 15931  00349C                     l3276:
 15932                           
 15933                           ; BSR set to: 0
 15934  00349C  C083  FFD9         	movff	xtoi@s,fsr2l
 15935  0034A0  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15936  0034A4  0E2B               	movlw	43
 15937  0034A6  18DE               	xorwf	postinc2,w,c
 15938  0034A8  A4D8               	btfss	status,2,c
 15939  0034AA  D028               	goto	l3279
 15940  0034AC  0100               	movlb	0	; () banked
 15941  0034AE                     L15:
 15942  0034AE  4B83               	infsnz	xtoi@s& (0+255),f,b
 15943  0034B0  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15944                           
 15945                           ; BSR set to: 0
 15946                           
 15947                           ; BSR set to: 0
 15948  0034B2  D024               	goto	l3279
 15949  0034B4                     
 15950                           ; BSR set to: 0
 15951  0034B4  0100               	movlb	0	; () banked
 15952  0034B6  518A               	movf	xtoi@c& (0+255),w,b
 15953  0034B8  ECA3  F02F         	call	_isupper
 15954  0034BC  A0D8               	btfss	status,0,c
 15955  0034BE  D006               	goto	l3281
 15956  0034C0  0100               	movlb	0	; () banked
 15957  0034C2  518A               	movf	xtoi@c& (0+255),w,b
 15958  0034C4  EC67  F030         	call	_tolower
 15959  0034C8  0100               	movlb	0	; () banked
 15960  0034CA  6F8A               	movwf	xtoi@c& (0+255),b
 15961  0034CC                     l3281:
 15962  0034CC  0100               	movlb	0	; () banked
 15963  0034CE  518A               	movf	xtoi@c& (0+255),w,b
 15964  0034D0  ECC5  F02F         	call	_isdigit
 15965  0034D4  A0D8               	btfss	status,0,c
 15966  0034D6  D002               	goto	l3282
 15967  0034D8  0E30               	movlw	48
 15968  0034DA  D001               	goto	L14
 15969  0034DC                     l3282:
 15970                           
 15971                           ; BSR set to: 0
 15972  0034DC  0E57               	movlw	87
 15973  0034DE                     L14:
 15974  0034DE  0100               	movlb	0	; () banked
 15975  0034E0  5F8A               	subwf	xtoi@c& (0+255),f,b
 15976                           
 15977                           ; BSR set to: 0
 15978  0034E2  3B88               	swapf	xtoi@val& (0+255),f,b
 15979  0034E4  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15980  0034E6  0EF0               	movlw	240
 15981  0034E8  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15982  0034EA  5188               	movf	xtoi@val& (0+255),w,b
 15983  0034EC  0B0F               	andlw	15
 15984  0034EE  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15985  0034F0  0EF0               	movlw	240
 15986  0034F2  1788               	andwf	xtoi@val& (0+255),f,b
 15987  0034F4  518A               	movf	xtoi@c& (0+255),w,b
 15988  0034F6  2788               	addwf	xtoi@val& (0+255),f,b
 15989  0034F8  0E00               	movlw	0
 15990  0034FA  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15991  0034FC                     l3279:
 15992                           
 15993                           ; BSR set to: 0
 15994  0034FC  C083  FFD9         	movff	xtoi@s,fsr2l
 15995  003500  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15996  003504  0100               	movlb	0	; () banked
 15997  003506  4B83               	infsnz	xtoi@s& (0+255),f,b
 15998  003508  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15999  00350A  50DF               	movf	indf2,w,c
 16000  00350C  6F8A               	movwf	xtoi@c& (0+255),b
 16001  00350E  518A               	movf	xtoi@c& (0+255),w,b
 16002  003510  EC4D  F02D         	call	_isxdigit
 16003  003514  B0D8               	btfsc	status,0,c
 16004  003516  D7CE               	goto	l3280
 16005  003518  0100               	movlb	0	; () banked
 16006  00351A  5187               	movf	xtoi@sign& (0+255),w,b
 16007  00351C  B4D8               	btfsc	status,2,c
 16008  00351E  D00D               	goto	l3285
 16009                           
 16010                           ; BSR set to: 0
 16011  003520  C088  F085         	movff	xtoi@val,??_xtoi
 16012  003524  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16013  003528  1F85               	comf	??_xtoi& (0+255),f,b
 16014  00352A  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16015  00352C  4B85               	infsnz	??_xtoi& (0+255),f,b
 16016  00352E  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16017  003530  C085  F083         	movff	??_xtoi,?_xtoi
 16018  003534  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16019  003538  0012               	return	
 16020  00353A                     l3285:
 16021                           
 16022                           ; BSR set to: 0
 16023  00353A  C088  F083         	movff	xtoi@val,?_xtoi
 16024  00353E  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16025                           
 16026                           ; BSR set to: 0
 16027  003542  0012               	return		;funcret
 16028  003544                     __end_of_xtoi:
 16029                           	opt stack 0
 16030                           tosu	equ	0xFFF
 16031                           tosh	equ	0xFFE
 16032                           tosl	equ	0xFFD
 16033                           pclath	equ	0xFFA
 16034                           tblptru	equ	0xFF8
 16035                           tblptrh	equ	0xFF7
 16036                           tblptrl	equ	0xFF6
 16037                           tablat	equ	0xFF5
 16038                           prodh	equ	0xFF4
 16039                           prodl	equ	0xFF3
 16040                           intcon	equ	0xFF2
 16041                           intcon2	equ	0xFF1
 16042                           intcon3	equ	0xFF0
 16043                           indf0	equ	0xFEF
 16044                           postinc0	equ	0xFEE
 16045                           plusw0	equ	0xFEB
 16046                           fsr0h	equ	0xFEA
 16047                           fsr0l	equ	0xFE9
 16048                           wreg	equ	0xFE8
 16049                           indf1	equ	0xFE7
 16050                           postinc1	equ	0xFE6
 16051                           postdec1	equ	0xFE5
 16052                           plusw1	equ	0xFE3
 16053                           fsr1h	equ	0xFE2
 16054                           fsr1l	equ	0xFE1
 16055                           indf2	equ	0xFDF
 16056                           postinc2	equ	0xFDE
 16057                           postdec2	equ	0xFDD
 16058                           plusw2	equ	0xFDB
 16059                           fsr2h	equ	0xFDA
 16060                           fsr2l	equ	0xFD9
 16061                           status	equ	0xFD8
 16062                           
 16063 ;; *************** function _tolower *****************
 16064 ;; Defined at:
 16065 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;  c               1    wreg     unsigned char 
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;  c               1   29[BANK0 ] unsigned char 
 16070 ;; Return value:  Size  Location     Type
 16071 ;;                  1    wreg      unsigned char 
 16072 ;; Registers used:
 16073 ;;		wreg, status,2, status,0
 16074 ;; Tracked objects:
 16075 ;;		On entry : 0/0
 16076 ;;		On exit  : 0/0
 16077 ;;		Unchanged: 0/0
 16078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;Total ram usage:        1 bytes
 16084 ;; Hardware stack levels used:    1
 16085 ;; Hardware stack levels required when called:   11
 16086 ;; This function calls:
 16087 ;;		Nothing
 16088 ;; This function is called by:
 16089 ;;		_xtoi
 16090 ;; This function uses a non-reentrant model
 16091 ;;
 16092                           
 16093                           	psect	text62
 16094  0060CE                     __ptext62:
 16095                           	opt stack 0
 16096  0060CE                     _tolower:
 16097                           	opt stack 13
 16098                           
 16099                           ; BSR set to: 0
 16100                           ;incstack = 0
 16101                           ;tolower@c stored from wreg
 16102  0060CE  0100               	movlb	0	; () banked
 16103  0060D0  6F7D               	movwf	tolower@c& (0+255),b
 16104  0060D2  0E5B               	movlw	91
 16105  0060D4  0100               	movlb	0	; () banked
 16106  0060D6  617D               	cpfslt	tolower@c& (0+255),b
 16107  0060D8  D004               	goto	l3332
 16108                           
 16109                           ; BSR set to: 0
 16110  0060DA  0E40               	movlw	64
 16111  0060DC  657D               	cpfsgt	tolower@c& (0+255),b
 16112  0060DE  D001               	goto	l3332
 16113                           
 16114                           ; BSR set to: 0
 16115  0060E0  8B7D               	bsf	tolower@c& (0+255),5,b
 16116  0060E2                     l3332:
 16117                           
 16118                           ; BSR set to: 0
 16119                           
 16120                           ; BSR set to: 0
 16121  0060E2  517D               	movf	tolower@c& (0+255),w,b
 16122  0060E4  0012               	return	
 16123  0060E6                     __end_of_tolower:
 16124                           	opt stack 0
 16125                           tosu	equ	0xFFF
 16126                           tosh	equ	0xFFE
 16127                           tosl	equ	0xFFD
 16128                           pclath	equ	0xFFA
 16129                           tblptru	equ	0xFF8
 16130                           tblptrh	equ	0xFF7
 16131                           tblptrl	equ	0xFF6
 16132                           tablat	equ	0xFF5
 16133                           prodh	equ	0xFF4
 16134                           prodl	equ	0xFF3
 16135                           intcon	equ	0xFF2
 16136                           intcon2	equ	0xFF1
 16137                           intcon3	equ	0xFF0
 16138                           indf0	equ	0xFEF
 16139                           postinc0	equ	0xFEE
 16140                           plusw0	equ	0xFEB
 16141                           fsr0h	equ	0xFEA
 16142                           fsr0l	equ	0xFE9
 16143                           wreg	equ	0xFE8
 16144                           indf1	equ	0xFE7
 16145                           postinc1	equ	0xFE6
 16146                           postdec1	equ	0xFE5
 16147                           plusw1	equ	0xFE3
 16148                           fsr1h	equ	0xFE2
 16149                           fsr1l	equ	0xFE1
 16150                           indf2	equ	0xFDF
 16151                           postinc2	equ	0xFDE
 16152                           postdec2	equ	0xFDD
 16153                           plusw2	equ	0xFDB
 16154                           fsr2h	equ	0xFDA
 16155                           fsr2l	equ	0xFD9
 16156                           status	equ	0xFD8
 16157                           
 16158 ;; *************** function _isxdigit *****************
 16159 ;; Defined at:
 16160 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;  c               1    wreg     unsigned char 
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;  c               1   34[BANK0 ] unsigned char 
 16165 ;; Return value:  Size  Location     Type
 16166 ;;		None               void
 16167 ;; Registers used:
 16168 ;;		wreg, status,2, status,0, cstack
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16176 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16177 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16178 ;;Total ram usage:        3 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; Hardware stack levels required when called:   12
 16181 ;; This function calls:
 16182 ;;		_isdigit
 16183 ;; This function is called by:
 16184 ;;		_xtoi
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text63
 16189  005A9A                     __ptext63:
 16190                           	opt stack 0
 16191  005A9A                     _isxdigit:
 16192                           	opt stack 12
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;incstack = 0
 16196                           ;isxdigit@c stored from wreg
 16197  005A9A  0100               	movlb	0	; () banked
 16198  005A9C  6F82               	movwf	isxdigit@c& (0+255),b
 16199  005A9E  0E01               	movlw	1
 16200  005AA0  0100               	movlb	0	; () banked
 16201  005AA2  6F81               	movwf	_isxdigit$6425& (0+255),b
 16202                           
 16203                           ; BSR set to: 0
 16204  005AA4  0E67               	movlw	103
 16205  005AA6  6182               	cpfslt	isxdigit@c& (0+255),b
 16206  005AA8  D003               	goto	u11310
 16207                           
 16208                           ; BSR set to: 0
 16209  005AAA  0E61               	movlw	97
 16210  005AAC  6182               	cpfslt	isxdigit@c& (0+255),b
 16211  005AAE  D00E               	goto	l3328
 16212  005AB0                     u11310:
 16213                           
 16214                           ; BSR set to: 0
 16215                           
 16216                           ; BSR set to: 0
 16217  005AB0  0E47               	movlw	71
 16218  005AB2  6182               	cpfslt	isxdigit@c& (0+255),b
 16219  005AB4  D003               	goto	u11330
 16220                           
 16221                           ; BSR set to: 0
 16222  005AB6  0E41               	movlw	65
 16223  005AB8  6182               	cpfslt	isxdigit@c& (0+255),b
 16224  005ABA  D008               	goto	l3328
 16225  005ABC                     u11330:
 16226                           
 16227                           ; BSR set to: 0
 16228                           
 16229                           ; BSR set to: 0
 16230  005ABC  5182               	movf	isxdigit@c& (0+255),w,b
 16231  005ABE  ECC5  F02F         	call	_isdigit
 16232  005AC2  B0D8               	btfsc	status,0,c
 16233  005AC4  D003               	goto	l3328
 16234  005AC6  0E00               	movlw	0
 16235  005AC8  0100               	movlb	0	; () banked
 16236  005ACA  6F81               	movwf	_isxdigit$6425& (0+255),b
 16237  005ACC                     l3328:
 16238                           
 16239                           ; BSR set to: 0
 16240  005ACC  C081  F080         	movff	_isxdigit$6425,??_isxdigit
 16241  005AD0  0100               	movlb	0	; () banked
 16242  005AD2  3180               	rrcf	??_isxdigit& (0+255),w,b
 16243  005AD4  0012               	return	
 16244  005AD6                     __end_of_isxdigit:
 16245                           	opt stack 0
 16246                           tosu	equ	0xFFF
 16247                           tosh	equ	0xFFE
 16248                           tosl	equ	0xFFD
 16249                           pclath	equ	0xFFA
 16250                           tblptru	equ	0xFF8
 16251                           tblptrh	equ	0xFF7
 16252                           tblptrl	equ	0xFF6
 16253                           tablat	equ	0xFF5
 16254                           prodh	equ	0xFF4
 16255                           prodl	equ	0xFF3
 16256                           intcon	equ	0xFF2
 16257                           intcon2	equ	0xFF1
 16258                           intcon3	equ	0xFF0
 16259                           indf0	equ	0xFEF
 16260                           postinc0	equ	0xFEE
 16261                           plusw0	equ	0xFEB
 16262                           fsr0h	equ	0xFEA
 16263                           fsr0l	equ	0xFE9
 16264                           wreg	equ	0xFE8
 16265                           indf1	equ	0xFE7
 16266                           postinc1	equ	0xFE6
 16267                           postdec1	equ	0xFE5
 16268                           plusw1	equ	0xFE3
 16269                           fsr1h	equ	0xFE2
 16270                           fsr1l	equ	0xFE1
 16271                           indf2	equ	0xFDF
 16272                           postinc2	equ	0xFDE
 16273                           postdec2	equ	0xFDD
 16274                           plusw2	equ	0xFDB
 16275                           fsr2h	equ	0xFDA
 16276                           fsr2l	equ	0xFD9
 16277                           status	equ	0xFD8
 16278                           
 16279 ;; *************** function _strtol *****************
 16280 ;; Defined at:
 16281 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16282 ;; Parameters:    Size  Location     Type
 16283 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16284 ;;		 -> Terminal@Payload(80), 
 16285 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16286 ;;		 -> NULL(0), 
 16287 ;;  base            2   45[BANK0 ] int 
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;  a               4   52[BANK0 ] long 
 16290 ;;  c               1   56[BANK0 ] unsigned char 
 16291 ;;  sign            1   51[BANK0 ] unsigned char 
 16292 ;; Return value:  Size  Location     Type
 16293 ;;                  4   41[BANK0 ] long 
 16294 ;; Registers used:
 16295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16296 ;; Tracked objects:
 16297 ;;		On entry : 0/0
 16298 ;;		On exit  : 0/0
 16299 ;;		Unchanged: 0/0
 16300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16301 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16302 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16303 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16304 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16305 ;;Total ram usage:       16 bytes
 16306 ;; Hardware stack levels used:    1
 16307 ;; Hardware stack levels required when called:   13
 16308 ;; This function calls:
 16309 ;;		___lmul
 16310 ;;		_isalpha
 16311 ;;		_isdigit
 16312 ;;		_isspace
 16313 ;;		_toupper
 16314 ;; This function is called by:
 16315 ;;		_Terminal
 16316 ;; This function uses a non-reentrant model
 16317 ;;
 16318                           
 16319                           	psect	text64
 16320  00181C                     __ptext64:
 16321                           	opt stack 0
 16322  00181C                     _strtol:
 16323                           	opt stack 12
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;incstack = 0
 16327  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16328  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16329  001824  50DF               	movf	indf2,w,c
 16330  001826  0100               	movlb	0	; () banked
 16331  001828  6F98               	movwf	strtol@c& (0+255),b
 16332                           
 16333                           ; BSR set to: 0
 16334  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16335  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16336                           
 16337                           ; BSR set to: 0
 16338  00182E  5198               	movf	strtol@c& (0+255),w,b
 16339  001830  ECFD  F02E         	call	_isspace
 16340  001834  B0D8               	btfsc	status,0,c
 16341  001836  D7F2               	goto	_strtol
 16342  001838  0E00               	movlw	0
 16343  00183A  0100               	movlb	0	; () banked
 16344  00183C  6F94               	movwf	strtol@a& (0+255),b
 16345  00183E  0E00               	movlw	0
 16346  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16347  001842  0E00               	movlw	0
 16348  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16349  001846  0E00               	movlw	0
 16350  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16351  00184A  0E00               	movlw	0
 16352  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16353                           
 16354                           ; BSR set to: 0
 16355  00184E  0E2D               	movlw	45
 16356  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16357  001852  A4D8               	btfss	status,2,c
 16358  001854  D003               	goto	l3235
 16359                           
 16360                           ; BSR set to: 0
 16361  001856  0E01               	movlw	1
 16362  001858  6F93               	movwf	strtol@sign& (0+255),b
 16363  00185A  D004               	goto	u11810
 16364  00185C                     l3235:
 16365                           
 16366                           ; BSR set to: 0
 16367                           
 16368                           ; BSR set to: 0
 16369  00185C  0E2B               	movlw	43
 16370  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16371  001860  A4D8               	btfss	status,2,c
 16372  001862  D008               	goto	l3237
 16373  001864                     u11810:
 16374                           
 16375                           ; BSR set to: 0
 16376  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16377  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16378  00186C  50DF               	movf	indf2,w,c
 16379  00186E  6F98               	movwf	strtol@c& (0+255),b
 16380                           
 16381                           ; BSR set to: 0
 16382  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16383  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16384  001874                     l3237:
 16385                           
 16386                           ; BSR set to: 0
 16387                           
 16388                           ; BSR set to: 0
 16389                           
 16390                           ; BSR set to: 0
 16391  001874  0E30               	movlw	48
 16392  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16393  001878  A4D8               	btfss	status,2,c
 16394  00187A  D02E               	goto	l3245
 16395                           
 16396                           ; BSR set to: 0
 16397  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16398  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16399  001884  50DF               	movf	indf2,w,c
 16400  001886  6F98               	movwf	strtol@c& (0+255),b
 16401                           
 16402                           ; BSR set to: 0
 16403  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16404  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16405                           
 16406                           ; BSR set to: 0
 16407  00188C  518D               	movf	strtol@base& (0+255),w,b
 16408  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16409  001890  B4D8               	btfsc	status,2,c
 16410  001892  D005               	goto	u11840
 16411                           
 16412                           ; BSR set to: 0
 16413  001894  0E10               	movlw	16
 16414  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16415  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16416  00189A  A4D8               	btfss	status,2,c
 16417  00189C  D015               	goto	l3239
 16418  00189E                     u11840:
 16419                           
 16420                           ; BSR set to: 0
 16421                           
 16422                           ; BSR set to: 0
 16423  00189E  0E78               	movlw	120
 16424  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16425  0018A2  B4D8               	btfsc	status,2,c
 16426  0018A4  D004               	goto	u11860
 16427                           
 16428                           ; BSR set to: 0
 16429  0018A6  0E58               	movlw	88
 16430  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16431  0018AA  A4D8               	btfss	status,2,c
 16432  0018AC  D00D               	goto	l3239
 16433  0018AE                     u11860:
 16434                           
 16435                           ; BSR set to: 0
 16436                           
 16437                           ; BSR set to: 0
 16438  0018AE  0E00               	movlw	0
 16439  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16440  0018B2  0E10               	movlw	16
 16441  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16442                           
 16443                           ; BSR set to: 0
 16444  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16445  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16446  0018BE  50DF               	movf	indf2,w,c
 16447  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16448                           
 16449                           ; BSR set to: 0
 16450  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16451  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16452  0018C6  D008               	goto	l3245
 16453  0018C8                     l3239:
 16454                           
 16455                           ; BSR set to: 0
 16456                           
 16457                           ; BSR set to: 0
 16458  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16459  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16460  0018CC  A4D8               	btfss	status,2,c
 16461  0018CE  D004               	goto	l3245
 16462                           
 16463                           ; BSR set to: 0
 16464  0018D0  0E00               	movlw	0
 16465  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16466  0018D4  0E08               	movlw	8
 16467  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16468  0018D8                     l3245:
 16469                           
 16470                           ; BSR set to: 0
 16471                           
 16472                           ; BSR set to: 0
 16473                           
 16474                           ; BSR set to: 0
 16475                           
 16476                           ; BSR set to: 0
 16477  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16478  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16479  0018DC  A4D8               	btfss	status,2,c
 16480  0018DE  D004               	goto	l3246
 16481                           
 16482                           ; BSR set to: 0
 16483  0018E0  0E00               	movlw	0
 16484  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16485  0018E4  0E0A               	movlw	10
 16486  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16487  0018E8                     l3246:
 16488                           
 16489                           ; BSR set to: 0
 16490                           
 16491                           ; BSR set to: 0
 16492                           
 16493                           ; BSR set to: 0
 16494  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16495  0018EA  EC74  F02E         	call	_isalpha
 16496  0018EE  A0D8               	btfss	status,0,c
 16497  0018F0  D008               	goto	l3248
 16498  0018F2  0100               	movlb	0	; () banked
 16499  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16500  0018F6  EC73  F030         	call	_toupper
 16501  0018FA  0FC9               	addlw	201
 16502  0018FC  0100               	movlb	0	; () banked
 16503  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16504  001900  D009               	goto	l3251
 16505  001902                     l3248:
 16506                           
 16507                           ; BSR set to: 0
 16508  001902  0100               	movlb	0	; () banked
 16509  001904  5198               	movf	strtol@c& (0+255),w,b
 16510  001906  ECC5  F02F         	call	_isdigit
 16511  00190A  A0D8               	btfss	status,0,c
 16512  00190C  D039               	goto	l3252
 16513  00190E  0E30               	movlw	48
 16514  001910  0100               	movlb	0	; () banked
 16515  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16516  001914                     l3251:
 16517                           
 16518                           ; BSR set to: 0
 16519                           
 16520                           ; BSR set to: 0
 16521                           
 16522                           ; BSR set to: 0
 16523  001914  5198               	movf	strtol@c& (0+255),w,b
 16524  001916  6F8F               	movwf	??_strtol& (0+255),b
 16525  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16526  00191A  518D               	movf	strtol@base& (0+255),w,b
 16527  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16528  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16529  001920  0A80               	xorlw	128
 16530  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16531  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16532  001926  0A80               	xorlw	128
 16533  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16534  00192A  B0D8               	btfsc	status,0,c
 16535  00192C  D029               	goto	l3252
 16536                           
 16537                           ; BSR set to: 0
 16538                           
 16539                           ; BSR set to: 0
 16540                           
 16541                           ; BSR set to: 0
 16542  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16543  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16544  001936  0E00               	movlw	0
 16545  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16546  00193A  0EFF               	movlw	-1
 16547  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16548  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16549  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16550  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16551  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16552  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16553  001950  EC37  F029         	call	___lmul	;wreg free
 16554  001954  0100               	movlb	0	; () banked
 16555  001956  5198               	movf	strtol@c& (0+255),w,b
 16556  001958  257D               	addwf	?___lmul& (0+255),w,b
 16557  00195A  6F94               	movwf	strtol@a& (0+255),b
 16558  00195C  0E00               	movlw	0
 16559  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16560  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16561  001962  0E00               	movlw	0
 16562  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16563  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16564  001968  0E00               	movlw	0
 16565  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16566  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16567                           
 16568                           ; BSR set to: 0
 16569  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16570  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16571  001976  50DF               	movf	indf2,w,c
 16572  001978  6F98               	movwf	strtol@c& (0+255),b
 16573                           
 16574                           ; BSR set to: 0
 16575  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16576  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16577  00197E  D7B4               	goto	l3246
 16578  001980                     l3252:
 16579                           
 16580                           ; BSR set to: 0
 16581  001980  0100               	movlb	0	; () banked
 16582  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16583  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16584  001986  B4D8               	btfsc	status,2,c
 16585  001988  D00E               	goto	l3254
 16586                           
 16587                           ; BSR set to: 0
 16588  00198A  0EFF               	movlw	255
 16589  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16590  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16591  001990  0EFF               	movlw	255
 16592  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16593  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16594  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16595  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16596  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16597  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16598  0019A6                     l3254:
 16599                           
 16600                           ; BSR set to: 0
 16601                           
 16602                           ; BSR set to: 0
 16603  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16604  0019A8  B4D8               	btfsc	status,2,c
 16605  0019AA  D01A               	goto	l3255
 16606                           
 16607                           ; BSR set to: 0
 16608  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16609  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16610  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16611  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16612  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16613  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16614  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16615  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16616  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16617  0019C6  0E00               	movlw	0
 16618  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16619  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16620  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16621  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16622  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16623  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16624  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16625                           
 16626                           ; BSR set to: 0
 16627  0019DE  0012               	return	
 16628  0019E0                     l3255:
 16629                           
 16630                           ; BSR set to: 0
 16631  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16632  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16633  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16634  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16635                           
 16636                           ; BSR set to: 0
 16637  0019F0  0012               	return		;funcret
 16638  0019F2                     __end_of_strtol:
 16639                           	opt stack 0
 16640                           tosu	equ	0xFFF
 16641                           tosh	equ	0xFFE
 16642                           tosl	equ	0xFFD
 16643                           pclath	equ	0xFFA
 16644                           tblptru	equ	0xFF8
 16645                           tblptrh	equ	0xFF7
 16646                           tblptrl	equ	0xFF6
 16647                           tablat	equ	0xFF5
 16648                           prodh	equ	0xFF4
 16649                           prodl	equ	0xFF3
 16650                           intcon	equ	0xFF2
 16651                           intcon2	equ	0xFF1
 16652                           intcon3	equ	0xFF0
 16653                           indf0	equ	0xFEF
 16654                           postinc0	equ	0xFEE
 16655                           plusw0	equ	0xFEB
 16656                           fsr0h	equ	0xFEA
 16657                           fsr0l	equ	0xFE9
 16658                           wreg	equ	0xFE8
 16659                           indf1	equ	0xFE7
 16660                           postinc1	equ	0xFE6
 16661                           postdec1	equ	0xFE5
 16662                           plusw1	equ	0xFE3
 16663                           fsr1h	equ	0xFE2
 16664                           fsr1l	equ	0xFE1
 16665                           indf2	equ	0xFDF
 16666                           postinc2	equ	0xFDE
 16667                           postdec2	equ	0xFDD
 16668                           plusw2	equ	0xFDB
 16669                           fsr2h	equ	0xFDA
 16670                           fsr2l	equ	0xFD9
 16671                           status	equ	0xFD8
 16672                           
 16673 ;; *************** function _toupper *****************
 16674 ;; Defined at:
 16675 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16676 ;; Parameters:    Size  Location     Type
 16677 ;;  c               1    wreg     unsigned char 
 16678 ;; Auto vars:     Size  Location     Type
 16679 ;;  c               1   29[BANK0 ] unsigned char 
 16680 ;; Return value:  Size  Location     Type
 16681 ;;                  1    wreg      unsigned char 
 16682 ;; Registers used:
 16683 ;;		wreg, status,2, status,0
 16684 ;; Tracked objects:
 16685 ;;		On entry : 0/0
 16686 ;;		On exit  : 0/0
 16687 ;;		Unchanged: 0/0
 16688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16693 ;;Total ram usage:        1 bytes
 16694 ;; Hardware stack levels used:    1
 16695 ;; Hardware stack levels required when called:   11
 16696 ;; This function calls:
 16697 ;;		Nothing
 16698 ;; This function is called by:
 16699 ;;		_strtol
 16700 ;; This function uses a non-reentrant model
 16701 ;;
 16702                           
 16703                           	psect	text65
 16704  0060E6                     __ptext65:
 16705                           	opt stack 0
 16706  0060E6                     _toupper:
 16707                           	opt stack 13
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;incstack = 0
 16711                           ;toupper@c stored from wreg
 16712  0060E6  0100               	movlb	0	; () banked
 16713  0060E8  6F7D               	movwf	toupper@c& (0+255),b
 16714  0060EA  0E7B               	movlw	123
 16715  0060EC  0100               	movlb	0	; () banked
 16716  0060EE  617D               	cpfslt	toupper@c& (0+255),b
 16717  0060F0  D004               	goto	l3259
 16718                           
 16719                           ; BSR set to: 0
 16720  0060F2  0E60               	movlw	96
 16721  0060F4  657D               	cpfsgt	toupper@c& (0+255),b
 16722  0060F6  D001               	goto	l3259
 16723                           
 16724                           ; BSR set to: 0
 16725  0060F8  9B7D               	bcf	toupper@c& (0+255),5,b
 16726  0060FA                     l3259:
 16727                           
 16728                           ; BSR set to: 0
 16729                           
 16730                           ; BSR set to: 0
 16731  0060FA  517D               	movf	toupper@c& (0+255),w,b
 16732  0060FC  0012               	return	
 16733  0060FE                     __end_of_toupper:
 16734                           	opt stack 0
 16735                           tosu	equ	0xFFF
 16736                           tosh	equ	0xFFE
 16737                           tosl	equ	0xFFD
 16738                           pclath	equ	0xFFA
 16739                           tblptru	equ	0xFF8
 16740                           tblptrh	equ	0xFF7
 16741                           tblptrl	equ	0xFF6
 16742                           tablat	equ	0xFF5
 16743                           prodh	equ	0xFF4
 16744                           prodl	equ	0xFF3
 16745                           intcon	equ	0xFF2
 16746                           intcon2	equ	0xFF1
 16747                           intcon3	equ	0xFF0
 16748                           indf0	equ	0xFEF
 16749                           postinc0	equ	0xFEE
 16750                           plusw0	equ	0xFEB
 16751                           fsr0h	equ	0xFEA
 16752                           fsr0l	equ	0xFE9
 16753                           wreg	equ	0xFE8
 16754                           indf1	equ	0xFE7
 16755                           postinc1	equ	0xFE6
 16756                           postdec1	equ	0xFE5
 16757                           plusw1	equ	0xFE3
 16758                           fsr1h	equ	0xFE2
 16759                           fsr1l	equ	0xFE1
 16760                           indf2	equ	0xFDF
 16761                           postinc2	equ	0xFDE
 16762                           postdec2	equ	0xFDD
 16763                           plusw2	equ	0xFDB
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function _isspace *****************
 16769 ;; Defined at:
 16770 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  c               1    wreg     unsigned char 
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;  c               1   31[BANK0 ] unsigned char 
 16775 ;; Return value:  Size  Location     Type
 16776 ;;		None               void
 16777 ;; Registers used:
 16778 ;;		wreg, status,2, status,0
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16788 ;;Total ram usage:        3 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:   11
 16791 ;; This function calls:
 16792 ;;		Nothing
 16793 ;; This function is called by:
 16794 ;;		_strtol
 16795 ;;		_xtoi
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           	psect	text66
 16800  005DFA                     __ptext66:
 16801                           	opt stack 0
 16802  005DFA                     _isspace:
 16803                           	opt stack 13
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;incstack = 0
 16807                           ;isspace@c stored from wreg
 16808  005DFA  0100               	movlb	0	; () banked
 16809  005DFC  6F7F               	movwf	isspace@c& (0+255),b
 16810  005DFE  0E01               	movlw	1
 16811  005E00  0100               	movlb	0	; () banked
 16812  005E02  6F7E               	movwf	_isspace$6418& (0+255),b
 16813                           
 16814                           ; BSR set to: 0
 16815  005E04  0E20               	movlw	32
 16816  005E06  197F               	xorwf	isspace@c& (0+255),w,b
 16817  005E08  B4D8               	btfsc	status,2,c
 16818  005E0A  D008               	goto	l3316
 16819                           
 16820                           ; BSR set to: 0
 16821  005E0C  0E0E               	movlw	14
 16822  005E0E  617F               	cpfslt	isspace@c& (0+255),b
 16823  005E10  D003               	goto	u11220
 16824                           
 16825                           ; BSR set to: 0
 16826  005E12  0E09               	movlw	9
 16827  005E14  617F               	cpfslt	isspace@c& (0+255),b
 16828  005E16  D002               	goto	l3316
 16829  005E18                     u11220:
 16830                           
 16831                           ; BSR set to: 0
 16832                           
 16833                           ; BSR set to: 0
 16834  005E18  0E00               	movlw	0
 16835  005E1A  6F7E               	movwf	_isspace$6418& (0+255),b
 16836  005E1C                     l3316:
 16837                           
 16838                           ; BSR set to: 0
 16839                           
 16840                           ; BSR set to: 0
 16841  005E1C  C07E  F07D         	movff	_isspace$6418,??_isspace
 16842  005E20  317D               	rrcf	??_isspace& (0+255),w,b
 16843  005E22  0012               	return	
 16844  005E24                     __end_of_isspace:
 16845                           	opt stack 0
 16846                           tosu	equ	0xFFF
 16847                           tosh	equ	0xFFE
 16848                           tosl	equ	0xFFD
 16849                           pclath	equ	0xFFA
 16850                           tblptru	equ	0xFF8
 16851                           tblptrh	equ	0xFF7
 16852                           tblptrl	equ	0xFF6
 16853                           tablat	equ	0xFF5
 16854                           prodh	equ	0xFF4
 16855                           prodl	equ	0xFF3
 16856                           intcon	equ	0xFF2
 16857                           intcon2	equ	0xFF1
 16858                           intcon3	equ	0xFF0
 16859                           indf0	equ	0xFEF
 16860                           postinc0	equ	0xFEE
 16861                           plusw0	equ	0xFEB
 16862                           fsr0h	equ	0xFEA
 16863                           fsr0l	equ	0xFE9
 16864                           wreg	equ	0xFE8
 16865                           indf1	equ	0xFE7
 16866                           postinc1	equ	0xFE6
 16867                           postdec1	equ	0xFE5
 16868                           plusw1	equ	0xFE3
 16869                           fsr1h	equ	0xFE2
 16870                           fsr1l	equ	0xFE1
 16871                           indf2	equ	0xFDF
 16872                           postinc2	equ	0xFDE
 16873                           postdec2	equ	0xFDD
 16874                           plusw2	equ	0xFDB
 16875                           fsr2h	equ	0xFDA
 16876                           fsr2l	equ	0xFD9
 16877                           status	equ	0xFD8
 16878                           
 16879 ;; *************** function _isalpha *****************
 16880 ;; Defined at:
 16881 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16882 ;; Parameters:    Size  Location     Type
 16883 ;;  c               1    wreg     unsigned char 
 16884 ;; Auto vars:     Size  Location     Type
 16885 ;;  c               1   34[BANK0 ] unsigned char 
 16886 ;; Return value:  Size  Location     Type
 16887 ;;		None               void
 16888 ;; Registers used:
 16889 ;;		wreg, status,2, status,0, cstack
 16890 ;; Tracked objects:
 16891 ;;		On entry : 0/0
 16892 ;;		On exit  : 0/0
 16893 ;;		Unchanged: 0/0
 16894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;Total ram usage:        3 bytes
 16900 ;; Hardware stack levels used:    1
 16901 ;; Hardware stack levels required when called:   12
 16902 ;; This function calls:
 16903 ;;		_isupper
 16904 ;; This function is called by:
 16905 ;;		_strtol
 16906 ;; This function uses a non-reentrant model
 16907 ;;
 16908                           
 16909                           	psect	text67
 16910  005CE8                     __ptext67:
 16911                           	opt stack 0
 16912  005CE8                     _isalpha:
 16913                           	opt stack 12
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;incstack = 0
 16917                           ;isalpha@c stored from wreg
 16918  005CE8  0100               	movlb	0	; () banked
 16919  005CEA  6F82               	movwf	isalpha@c& (0+255),b
 16920  005CEC  0E01               	movlw	1
 16921  005CEE  0100               	movlb	0	; () banked
 16922  005CF0  6F81               	movwf	_isalpha$6415& (0+255),b
 16923                           
 16924                           ; BSR set to: 0
 16925  005CF2  0E7B               	movlw	123
 16926  005CF4  6182               	cpfslt	isalpha@c& (0+255),b
 16927  005CF6  D003               	goto	u11240
 16928                           
 16929                           ; BSR set to: 0
 16930  005CF8  0E61               	movlw	97
 16931  005CFA  6182               	cpfslt	isalpha@c& (0+255),b
 16932  005CFC  D008               	goto	l3311
 16933  005CFE                     u11240:
 16934                           
 16935                           ; BSR set to: 0
 16936                           
 16937                           ; BSR set to: 0
 16938  005CFE  5182               	movf	isalpha@c& (0+255),w,b
 16939  005D00  ECA3  F02F         	call	_isupper
 16940  005D04  B0D8               	btfsc	status,0,c
 16941  005D06  D003               	goto	l3311
 16942  005D08  0E00               	movlw	0
 16943  005D0A  0100               	movlb	0	; () banked
 16944  005D0C  6F81               	movwf	_isalpha$6415& (0+255),b
 16945  005D0E                     l3311:
 16946                           
 16947                           ; BSR set to: 0
 16948  005D0E  C081  F080         	movff	_isalpha$6415,??_isalpha
 16949  005D12  0100               	movlb	0	; () banked
 16950  005D14  3180               	rrcf	??_isalpha& (0+255),w,b
 16951  005D16  0012               	return	
 16952  005D18                     __end_of_isalpha:
 16953                           	opt stack 0
 16954                           tosu	equ	0xFFF
 16955                           tosh	equ	0xFFE
 16956                           tosl	equ	0xFFD
 16957                           pclath	equ	0xFFA
 16958                           tblptru	equ	0xFF8
 16959                           tblptrh	equ	0xFF7
 16960                           tblptrl	equ	0xFF6
 16961                           tablat	equ	0xFF5
 16962                           prodh	equ	0xFF4
 16963                           prodl	equ	0xFF3
 16964                           intcon	equ	0xFF2
 16965                           intcon2	equ	0xFF1
 16966                           intcon3	equ	0xFF0
 16967                           indf0	equ	0xFEF
 16968                           postinc0	equ	0xFEE
 16969                           plusw0	equ	0xFEB
 16970                           fsr0h	equ	0xFEA
 16971                           fsr0l	equ	0xFE9
 16972                           wreg	equ	0xFE8
 16973                           indf1	equ	0xFE7
 16974                           postinc1	equ	0xFE6
 16975                           postdec1	equ	0xFE5
 16976                           plusw1	equ	0xFE3
 16977                           fsr1h	equ	0xFE2
 16978                           fsr1l	equ	0xFE1
 16979                           indf2	equ	0xFDF
 16980                           postinc2	equ	0xFDE
 16981                           postdec2	equ	0xFDD
 16982                           plusw2	equ	0xFDB
 16983                           fsr2h	equ	0xFDA
 16984                           fsr2l	equ	0xFD9
 16985                           status	equ	0xFD8
 16986                           
 16987 ;; *************** function _isupper *****************
 16988 ;; Defined at:
 16989 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16990 ;; Parameters:    Size  Location     Type
 16991 ;;  c               1    wreg     unsigned char 
 16992 ;; Auto vars:     Size  Location     Type
 16993 ;;  c               1   31[BANK0 ] unsigned char 
 16994 ;; Return value:  Size  Location     Type
 16995 ;;		None               void
 16996 ;; Registers used:
 16997 ;;		wreg, status,2, status,0
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17006 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17007 ;;Total ram usage:        3 bytes
 17008 ;; Hardware stack levels used:    1
 17009 ;; Hardware stack levels required when called:   11
 17010 ;; This function calls:
 17011 ;;		Nothing
 17012 ;; This function is called by:
 17013 ;;		_xtoi
 17014 ;;		_isalpha
 17015 ;; This function uses a non-reentrant model
 17016 ;;
 17017                           
 17018                           	psect	text68
 17019  005F46                     __ptext68:
 17020                           	opt stack 0
 17021  005F46                     _isupper:
 17022                           	opt stack 13
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;incstack = 0
 17026                           ;isupper@c stored from wreg
 17027  005F46  0100               	movlb	0	; () banked
 17028  005F48  6F7F               	movwf	isupper@c& (0+255),b
 17029  005F4A  0E00               	movlw	0
 17030  005F4C  0100               	movlb	0	; () banked
 17031  005F4E  6F7E               	movwf	_isupper$6421& (0+255),b
 17032                           
 17033                           ; BSR set to: 0
 17034  005F50  0E5B               	movlw	91
 17035  005F52  617F               	cpfslt	isupper@c& (0+255),b
 17036  005F54  D005               	goto	l3321
 17037                           
 17038                           ; BSR set to: 0
 17039  005F56  0E40               	movlw	64
 17040  005F58  657F               	cpfsgt	isupper@c& (0+255),b
 17041  005F5A  D002               	goto	l3321
 17042                           
 17043                           ; BSR set to: 0
 17044  005F5C  0E01               	movlw	1
 17045  005F5E  6F7E               	movwf	_isupper$6421& (0+255),b
 17046  005F60                     l3321:
 17047                           
 17048                           ; BSR set to: 0
 17049                           
 17050                           ; BSR set to: 0
 17051  005F60  C07E  F07D         	movff	_isupper$6421,??_isupper
 17052  005F64  317D               	rrcf	??_isupper& (0+255),w,b
 17053  005F66  0012               	return	
 17054  005F68                     __end_of_isupper:
 17055                           	opt stack 0
 17056                           tosu	equ	0xFFF
 17057                           tosh	equ	0xFFE
 17058                           tosl	equ	0xFFD
 17059                           pclath	equ	0xFFA
 17060                           tblptru	equ	0xFF8
 17061                           tblptrh	equ	0xFF7
 17062                           tblptrl	equ	0xFF6
 17063                           tablat	equ	0xFF5
 17064                           prodh	equ	0xFF4
 17065                           prodl	equ	0xFF3
 17066                           intcon	equ	0xFF2
 17067                           intcon2	equ	0xFF1
 17068                           intcon3	equ	0xFF0
 17069                           indf0	equ	0xFEF
 17070                           postinc0	equ	0xFEE
 17071                           plusw0	equ	0xFEB
 17072                           fsr0h	equ	0xFEA
 17073                           fsr0l	equ	0xFE9
 17074                           wreg	equ	0xFE8
 17075                           indf1	equ	0xFE7
 17076                           postinc1	equ	0xFE6
 17077                           postdec1	equ	0xFE5
 17078                           plusw1	equ	0xFE3
 17079                           fsr1h	equ	0xFE2
 17080                           fsr1l	equ	0xFE1
 17081                           indf2	equ	0xFDF
 17082                           postinc2	equ	0xFDE
 17083                           postdec2	equ	0xFDD
 17084                           plusw2	equ	0xFDB
 17085                           fsr2h	equ	0xFDA
 17086                           fsr2l	equ	0xFD9
 17087                           status	equ	0xFD8
 17088                           
 17089 ;; *************** function _strcpy *****************
 17090 ;; Defined at:
 17091 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17094 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17095 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17096 ;;		 -> STR_23(20), STR_21(42), 
 17097 ;; Auto vars:     Size  Location     Type
 17098 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17099 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  2   29[BANK0 ] PTR unsigned char 
 17102 ;; Registers used:
 17103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17112 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;Total ram usage:        6 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:   11
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		_Terminal
 17120 ;;		_Term_MainSm
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           	psect	text69
 17125  005C56                     __ptext69:
 17126                           	opt stack 0
 17127  005C56                     _strcpy:
 17128                           	opt stack 15
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;incstack = 0
 17132  005C56  C07D  F081         	movff	strcpy@to,strcpy@cp
 17133  005C5A  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17134  005C5E  D005               	goto	l3213
 17135  005C60  0100               	movlb	0	; () banked
 17136  005C62  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17137  005C64  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17138  005C66  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17139  005C68  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17140  005C6A                     l3213:
 17141                           
 17142                           ; BSR set to: 0
 17143  005C6A  C07F  FFF6         	movff	strcpy@from,tblptrl
 17144  005C6E  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17145  005C72                     	if	0	;tblptru may be non-zero
 17146  005C72                     	endif
 17147  005C72                     	if	0	;tblptru may be non-zero
 17148  005C72                     	endif
 17149  005C72  C081  FFD9         	movff	strcpy@cp,fsr2l
 17150  005C76  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17151  005C7A  0008               	tblrd		*
 17152  005C7C  CFF5 FFDF          	movff	tablat,indf2
 17153  005C80  50DF               	movf	indf2,w,c
 17154  005C82  B4D8               	btfsc	status,2,c
 17155  005C84  0012               	return	
 17156  005C86  D7EC               	goto	l3214
 17157  005C88                     __end_of_strcpy:
 17158                           	opt stack 0
 17159                           tosu	equ	0xFFF
 17160                           tosh	equ	0xFFE
 17161                           tosl	equ	0xFFD
 17162                           pclath	equ	0xFFA
 17163                           tblptru	equ	0xFF8
 17164                           tblptrh	equ	0xFF7
 17165                           tblptrl	equ	0xFF6
 17166                           tablat	equ	0xFF5
 17167                           prodh	equ	0xFF4
 17168                           prodl	equ	0xFF3
 17169                           intcon	equ	0xFF2
 17170                           intcon2	equ	0xFF1
 17171                           intcon3	equ	0xFF0
 17172                           indf0	equ	0xFEF
 17173                           postinc0	equ	0xFEE
 17174                           plusw0	equ	0xFEB
 17175                           fsr0h	equ	0xFEA
 17176                           fsr0l	equ	0xFE9
 17177                           wreg	equ	0xFE8
 17178                           indf1	equ	0xFE7
 17179                           postinc1	equ	0xFE6
 17180                           postdec1	equ	0xFE5
 17181                           plusw1	equ	0xFE3
 17182                           fsr1h	equ	0xFE2
 17183                           fsr1l	equ	0xFE1
 17184                           indf2	equ	0xFDF
 17185                           postinc2	equ	0xFDE
 17186                           postdec2	equ	0xFDD
 17187                           plusw2	equ	0xFDB
 17188                           fsr2h	equ	0xFDA
 17189                           fsr2l	equ	0xFD9
 17190                           status	equ	0xFD8
 17191                           
 17192 ;; *************** function _putUSBUSART *****************
 17193 ;; Defined at:
 17194 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17195 ;; Parameters:    Size  Location     Type
 17196 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17197 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17198 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17199 ;;		 -> RxBuffer(400), 
 17200 ;;  length          1   37[BANK0 ] unsigned char 
 17201 ;; Auto vars:     Size  Location     Type
 17202 ;;		None
 17203 ;; Return value:  Size  Location     Type
 17204 ;;                  1    wreg      void 
 17205 ;; Registers used:
 17206 ;;		wreg, status,2, status,0
 17207 ;; Tracked objects:
 17208 ;;		On entry : 0/0
 17209 ;;		On exit  : 0/0
 17210 ;;		Unchanged: 0/0
 17211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17212 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;Total ram usage:        3 bytes
 17217 ;; Hardware stack levels used:    1
 17218 ;; Hardware stack levels required when called:   11
 17219 ;; This function calls:
 17220 ;;		Nothing
 17221 ;; This function is called by:
 17222 ;;		_Terminal
 17223 ;;		_Term_MainSm
 17224 ;;		_GsmGprsTerminal
 17225 ;; This function uses a non-reentrant model
 17226 ;;
 17227                           
 17228                           	psect	text70
 17229  005F68                     __ptext70:
 17230                           	opt stack 0
 17231  005F68                     _putUSBUSART:
 17232                           	opt stack 15
 17233                           
 17234                           ;usb_device_cdc.c: 584: ;
 17235                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17236                           
 17237                           ;incstack = 0
 17238  005F68  0100               	movlb	0	; () banked
 17239  005F6A  51CA               	movf	_cdc_trf_state& (0+255),w,b
 17240  005F6C  A4D8               	btfss	status,2,c
 17241  005F6E  0012               	return	
 17242                           
 17243                           ; BSR set to: 0
 17244                           ;usb_device_cdc.c: 586: {
 17245                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17246  005F70  C083  F2CC         	movff	putUSBUSART@data,_pCDCSrc
 17247  005F74  C084  F2CD         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17248                           
 17249                           ; BSR set to: 0
 17250  005F78  C085  F0C9         	movff	putUSBUSART@length,_cdc_tx_len
 17251                           
 17252                           ; BSR set to: 0
 17253  005F7C  0E01               	movlw	1
 17254  005F7E  0101               	movlb	1	; () banked
 17255  005F80  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17256                           
 17257                           ; BSR set to: 1
 17258  005F82  0E01               	movlw	1
 17259  005F84  0100               	movlb	0	; () banked
 17260  005F86  6FCA               	movwf	_cdc_trf_state& (0+255),b
 17261  005F88  0012               	return	
 17262  005F8A                     __end_of_putUSBUSART:
 17263                           	opt stack 0
 17264                           tosu	equ	0xFFF
 17265                           tosh	equ	0xFFE
 17266                           tosl	equ	0xFFD
 17267                           pclath	equ	0xFFA
 17268                           tblptru	equ	0xFF8
 17269                           tblptrh	equ	0xFF7
 17270                           tblptrl	equ	0xFF6
 17271                           tablat	equ	0xFF5
 17272                           prodh	equ	0xFF4
 17273                           prodl	equ	0xFF3
 17274                           intcon	equ	0xFF2
 17275                           intcon2	equ	0xFF1
 17276                           intcon3	equ	0xFF0
 17277                           indf0	equ	0xFEF
 17278                           postinc0	equ	0xFEE
 17279                           plusw0	equ	0xFEB
 17280                           fsr0h	equ	0xFEA
 17281                           fsr0l	equ	0xFE9
 17282                           wreg	equ	0xFE8
 17283                           indf1	equ	0xFE7
 17284                           postinc1	equ	0xFE6
 17285                           postdec1	equ	0xFE5
 17286                           plusw1	equ	0xFE3
 17287                           fsr1h	equ	0xFE2
 17288                           fsr1l	equ	0xFE1
 17289                           indf2	equ	0xFDF
 17290                           postinc2	equ	0xFDE
 17291                           postdec2	equ	0xFDD
 17292                           plusw2	equ	0xFDB
 17293                           fsr2h	equ	0xFDA
 17294                           fsr2l	equ	0xFD9
 17295                           status	equ	0xFD8
 17296                           
 17297 ;; *************** function _itoa *****************
 17298 ;; Defined at:
 17299 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17300 ;; Parameters:    Size  Location     Type
 17301 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17302 ;;		 -> Terminal@Payload(80), 
 17303 ;;  val             2   53[BANK0 ] int 
 17304 ;;  base            2   55[BANK0 ] int 
 17305 ;; Auto vars:     Size  Location     Type
 17306 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17307 ;;		 -> Terminal@Payload(80), 
 17308 ;; Return value:  Size  Location     Type
 17309 ;;                  2   51[BANK0 ] PTR unsigned char 
 17310 ;; Registers used:
 17311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17312 ;; Tracked objects:
 17313 ;;		On entry : 0/0
 17314 ;;		On exit  : 0/0
 17315 ;;		Unchanged: 0/0
 17316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17317 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17320 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17321 ;;Total ram usage:        8 bytes
 17322 ;; Hardware stack levels used:    1
 17323 ;; Hardware stack levels required when called:   13
 17324 ;; This function calls:
 17325 ;;		_utoa
 17326 ;; This function is called by:
 17327 ;;		_Terminal
 17328 ;; This function uses a non-reentrant model
 17329 ;;
 17330                           
 17331                           	psect	text71
 17332  005852                     __ptext71:
 17333                           	opt stack 0
 17334  005852                     _itoa:
 17335                           	opt stack 12
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;incstack = 0
 17339  005852  C093  F099         	movff	itoa@buf,itoa@cp
 17340  005856  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17341  00585A  0100               	movlb	0	; () banked
 17342  00585C  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17343  00585E  D00C               	goto	l2961
 17344                           
 17345                           ; BSR set to: 0
 17346  005860  C093  FFD9         	movff	itoa@buf,fsr2l
 17347  005864  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17348  005868  0E2D               	movlw	45
 17349  00586A  6EDF               	movwf	indf2,c
 17350                           
 17351                           ; BSR set to: 0
 17352  00586C  4B93               	infsnz	itoa@buf& (0+255),f,b
 17353  00586E  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17354                           
 17355                           ; BSR set to: 0
 17356  005870  6D95               	negf	itoa@val& (0+255),b
 17357  005872  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17358  005874  B0D8               	btfsc	status,0,c
 17359  005876  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17360  005878                     l2961:
 17361                           
 17362                           ; BSR set to: 0
 17363                           
 17364                           ; BSR set to: 0
 17365  005878  C093  F08A         	movff	itoa@buf,utoa@buf
 17366  00587C  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17367  005880  C095  F08C         	movff	itoa@val,utoa@val
 17368  005884  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17369  005888  C097  F08E         	movff	itoa@base,utoa@base
 17370  00588C  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17371  005890  EC47  F021         	call	_utoa	;wreg free
 17372  005894  0012               	return	
 17373  005896                     __end_of_itoa:
 17374                           	opt stack 0
 17375                           tosu	equ	0xFFF
 17376                           tosh	equ	0xFFE
 17377                           tosl	equ	0xFFD
 17378                           pclath	equ	0xFFA
 17379                           tblptru	equ	0xFF8
 17380                           tblptrh	equ	0xFF7
 17381                           tblptrl	equ	0xFF6
 17382                           tablat	equ	0xFF5
 17383                           prodh	equ	0xFF4
 17384                           prodl	equ	0xFF3
 17385                           intcon	equ	0xFF2
 17386                           intcon2	equ	0xFF1
 17387                           intcon3	equ	0xFF0
 17388                           indf0	equ	0xFEF
 17389                           postinc0	equ	0xFEE
 17390                           plusw0	equ	0xFEB
 17391                           fsr0h	equ	0xFEA
 17392                           fsr0l	equ	0xFE9
 17393                           wreg	equ	0xFE8
 17394                           indf1	equ	0xFE7
 17395                           postinc1	equ	0xFE6
 17396                           postdec1	equ	0xFE5
 17397                           plusw1	equ	0xFE3
 17398                           fsr1h	equ	0xFE2
 17399                           fsr1l	equ	0xFE1
 17400                           indf2	equ	0xFDF
 17401                           postinc2	equ	0xFDE
 17402                           postdec2	equ	0xFDD
 17403                           plusw2	equ	0xFDB
 17404                           fsr2h	equ	0xFDA
 17405                           fsr2l	equ	0xFD9
 17406                           status	equ	0xFD8
 17407                           
 17408 ;; *************** function _utoa *****************
 17409 ;; Defined at:
 17410 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17413 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17414 ;;  val             2   44[BANK0 ] unsigned int 
 17415 ;;  base            2   46[BANK0 ] int 
 17416 ;; Auto vars:     Size  Location     Type
 17417 ;;  v               2   48[BANK0 ] unsigned int 
 17418 ;;  c               1   50[BANK0 ] unsigned char 
 17419 ;; Return value:  Size  Location     Type
 17420 ;;                  2   42[BANK0 ] PTR unsigned char 
 17421 ;; Registers used:
 17422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17423 ;; Tracked objects:
 17424 ;;		On entry : 0/0
 17425 ;;		On exit  : 0/0
 17426 ;;		Unchanged: 0/0
 17427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17428 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17429 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17431 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17432 ;;Total ram usage:        9 bytes
 17433 ;; Hardware stack levels used:    1
 17434 ;; Hardware stack levels required when called:   12
 17435 ;; This function calls:
 17436 ;;		___lwdiv
 17437 ;;		___lwmod
 17438 ;; This function is called by:
 17439 ;;		_Term_MainSm
 17440 ;;		_itoa
 17441 ;; This function uses a non-reentrant model
 17442 ;;
 17443                           
 17444                           	psect	text72
 17445  00428E                     __ptext72:
 17446                           	opt stack 0
 17447  00428E                     _utoa:
 17448                           	opt stack 14
 17449                           
 17450                           ;incstack = 0
 17451  00428E  C08C  F090         	movff	utoa@val,utoa@v
 17452  004292  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17453  004296  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17454  00429A  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17455  00429E  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17456  0042A2  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17457  0042A6  EC39  F02A         	call	___lwdiv	;wreg free
 17458  0042AA  C083  F090         	movff	?___lwdiv,utoa@v
 17459  0042AE  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17460  0042B2  0100               	movlb	0	; () banked
 17461  0042B4  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17462  0042B6  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17463                           
 17464                           ; BSR set to: 0
 17465  0042B8  5190               	movf	utoa@v& (0+255),w,b
 17466  0042BA  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17467  0042BC  A4D8               	btfss	status,2,c
 17468  0042BE  D7EB               	goto	l2965
 17469                           
 17470                           ; BSR set to: 0
 17471                           
 17472                           ; BSR set to: 0
 17473  0042C0  C08A  FFD9         	movff	utoa@buf,fsr2l
 17474  0042C4  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17475  0042C8  0E00               	movlw	0
 17476  0042CA  6EDF               	movwf	indf2,c
 17477                           
 17478                           ; BSR set to: 0
 17479  0042CC  078A               	decf	utoa@buf& (0+255),f,b
 17480  0042CE  A0D8               	btfss	status,0,c
 17481  0042D0  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17482  0042D2                     
 17483                           ; BSR set to: 0
 17484                           
 17485                           ; BSR set to: 0
 17486  0042D2  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17487  0042D6  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17488  0042DA  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17489  0042DE  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17490  0042E2  EC4B  F02C         	call	___lwmod	;wreg free
 17491  0042E6  0100               	movlb	0	; () banked
 17492  0042E8  517D               	movf	?___lwmod& (0+255),w,b
 17493  0042EA  6F92               	movwf	utoa@c& (0+255),b
 17494                           
 17495                           ; BSR set to: 0
 17496  0042EC  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17497  0042F0  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17498  0042F4  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17499  0042F8  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17500  0042FC  EC39  F02A         	call	___lwdiv	;wreg free
 17501  004300  C083  F08C         	movff	?___lwdiv,utoa@val
 17502  004304  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17503  004308  0E09               	movlw	9
 17504  00430A  0100               	movlb	0	; () banked
 17505  00430C  6592               	cpfsgt	utoa@c& (0+255),b
 17506  00430E  D002               	goto	l2968
 17507                           
 17508                           ; BSR set to: 0
 17509  004310  0E07               	movlw	7
 17510  004312  2792               	addwf	utoa@c& (0+255),f,b
 17511  004314                     l2968:
 17512                           
 17513                           ; BSR set to: 0
 17514  004314  0E30               	movlw	48
 17515  004316  2792               	addwf	utoa@c& (0+255),f,b
 17516                           
 17517                           ; BSR set to: 0
 17518  004318  C08A  FFD9         	movff	utoa@buf,fsr2l
 17519  00431C  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17520  004320  C092  FFDF         	movff	utoa@c,indf2
 17521                           
 17522                           ; BSR set to: 0
 17523  004324  078A               	decf	utoa@buf& (0+255),f,b
 17524  004326  A0D8               	btfss	status,0,c
 17525  004328  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17526                           
 17527                           ; BSR set to: 0
 17528  00432A  518C               	movf	utoa@val& (0+255),w,b
 17529  00432C  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17530  00432E  A4D8               	btfss	status,2,c
 17531  004330  D7D0               	goto	l2967
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;	Return value of _utoa is never used
 17535                           
 17536                           ; BSR set to: 0
 17537  004332  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17538  004334  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17539  004336  0012               	return	
 17540  004338                     __end_of_utoa:
 17541                           	opt stack 0
 17542                           tosu	equ	0xFFF
 17543                           tosh	equ	0xFFE
 17544                           tosl	equ	0xFFD
 17545                           pclath	equ	0xFFA
 17546                           tblptru	equ	0xFF8
 17547                           tblptrh	equ	0xFF7
 17548                           tblptrl	equ	0xFF6
 17549                           tablat	equ	0xFF5
 17550                           prodh	equ	0xFF4
 17551                           prodl	equ	0xFF3
 17552                           intcon	equ	0xFF2
 17553                           intcon2	equ	0xFF1
 17554                           intcon3	equ	0xFF0
 17555                           indf0	equ	0xFEF
 17556                           postinc0	equ	0xFEE
 17557                           plusw0	equ	0xFEB
 17558                           fsr0h	equ	0xFEA
 17559                           fsr0l	equ	0xFE9
 17560                           wreg	equ	0xFE8
 17561                           indf1	equ	0xFE7
 17562                           postinc1	equ	0xFE6
 17563                           postdec1	equ	0xFE5
 17564                           plusw1	equ	0xFE3
 17565                           fsr1h	equ	0xFE2
 17566                           fsr1l	equ	0xFE1
 17567                           indf2	equ	0xFDF
 17568                           postinc2	equ	0xFDE
 17569                           postdec2	equ	0xFDD
 17570                           plusw2	equ	0xFDB
 17571                           fsr2h	equ	0xFDA
 17572                           fsr2l	equ	0xFD9
 17573                           status	equ	0xFD8
 17574                           
 17575 ;; *************** function ___lwmod *****************
 17576 ;; Defined at:
 17577 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17578 ;; Parameters:    Size  Location     Type
 17579 ;;  dividend        2   29[BANK0 ] unsigned int 
 17580 ;;  divisor         2   31[BANK0 ] unsigned int 
 17581 ;; Auto vars:     Size  Location     Type
 17582 ;;  counter         1   33[BANK0 ] unsigned char 
 17583 ;; Return value:  Size  Location     Type
 17584 ;;                  2   29[BANK0 ] unsigned int 
 17585 ;; Registers used:
 17586 ;;		wreg, status,2, status,0
 17587 ;; Tracked objects:
 17588 ;;		On entry : 0/0
 17589 ;;		On exit  : 0/0
 17590 ;;		Unchanged: 0/0
 17591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17592 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17595 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17596 ;;Total ram usage:        5 bytes
 17597 ;; Hardware stack levels used:    1
 17598 ;; Hardware stack levels required when called:   11
 17599 ;; This function calls:
 17600 ;;		Nothing
 17601 ;; This function is called by:
 17602 ;;		_utoa
 17603 ;; This function uses a non-reentrant model
 17604 ;;
 17605                           
 17606                           	psect	text73
 17607  005896                     __ptext73:
 17608                           	opt stack 0
 17609  005896                     ___lwmod:
 17610                           	opt stack 14
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;incstack = 0
 17614  005896  0100               	movlb	0	; () banked
 17615  005898  517F               	movf	___lwmod@divisor& (0+255),w,b
 17616  00589A  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17617  00589C  B4D8               	btfsc	status,2,c
 17618  00589E  D018               	goto	l3063
 17619                           
 17620                           ; BSR set to: 0
 17621  0058A0  0E01               	movlw	1
 17622  0058A2  6F81               	movwf	___lwmod@counter& (0+255),b
 17623  0058A4  D004               	goto	l3058
 17624  0058A6                     
 17625                           ; BSR set to: 0
 17626                           
 17627                           ; BSR set to: 0
 17628  0058A6  90D8               	bcf	status,0,c
 17629  0058A8  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17630  0058AA  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17631  0058AC  2B81               	incf	___lwmod@counter& (0+255),f,b
 17632  0058AE                     l3058:
 17633                           
 17634                           ; BSR set to: 0
 17635                           
 17636                           ; BSR set to: 0
 17637  0058AE  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17638  0058B0  D7FA               	goto	l3059
 17639  0058B2                     u10840:
 17640                           
 17641                           ; BSR set to: 0
 17642                           
 17643                           ; BSR set to: 0
 17644                           
 17645                           ; BSR set to: 0
 17646  0058B2  517F               	movf	___lwmod@divisor& (0+255),w,b
 17647  0058B4  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17648  0058B6  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17649  0058B8  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17650  0058BA  A0D8               	btfss	status,0,c
 17651  0058BC  D004               	goto	l3062
 17652                           
 17653                           ; BSR set to: 0
 17654  0058BE  517F               	movf	___lwmod@divisor& (0+255),w,b
 17655  0058C0  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17656  0058C2  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17657  0058C4  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17658  0058C6                     l3062:
 17659                           
 17660                           ; BSR set to: 0
 17661                           
 17662                           ; BSR set to: 0
 17663  0058C6  90D8               	bcf	status,0,c
 17664  0058C8  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17665  0058CA  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17666                           
 17667                           ; BSR set to: 0
 17668  0058CC  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17669  0058CE  D7F1               	goto	u10840
 17670  0058D0                     l3063:
 17671                           
 17672                           ; BSR set to: 0
 17673                           
 17674                           ; BSR set to: 0
 17675  0058D0  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17676  0058D4  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17677                           
 17678                           ; BSR set to: 0
 17679  0058D8  0012               	return		;funcret
 17680  0058DA                     __end_of___lwmod:
 17681                           	opt stack 0
 17682                           tosu	equ	0xFFF
 17683                           tosh	equ	0xFFE
 17684                           tosl	equ	0xFFD
 17685                           pclath	equ	0xFFA
 17686                           tblptru	equ	0xFF8
 17687                           tblptrh	equ	0xFF7
 17688                           tblptrl	equ	0xFF6
 17689                           tablat	equ	0xFF5
 17690                           prodh	equ	0xFF4
 17691                           prodl	equ	0xFF3
 17692                           intcon	equ	0xFF2
 17693                           intcon2	equ	0xFF1
 17694                           intcon3	equ	0xFF0
 17695                           indf0	equ	0xFEF
 17696                           postinc0	equ	0xFEE
 17697                           plusw0	equ	0xFEB
 17698                           fsr0h	equ	0xFEA
 17699                           fsr0l	equ	0xFE9
 17700                           wreg	equ	0xFE8
 17701                           indf1	equ	0xFE7
 17702                           postinc1	equ	0xFE6
 17703                           postdec1	equ	0xFE5
 17704                           plusw1	equ	0xFE3
 17705                           fsr1h	equ	0xFE2
 17706                           fsr1l	equ	0xFE1
 17707                           indf2	equ	0xFDF
 17708                           postinc2	equ	0xFDE
 17709                           postdec2	equ	0xFDD
 17710                           plusw2	equ	0xFDB
 17711                           fsr2h	equ	0xFDA
 17712                           fsr2l	equ	0xFD9
 17713                           status	equ	0xFD8
 17714                           
 17715 ;; *************** function _getsUSBUSART *****************
 17716 ;; Defined at:
 17717 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17718 ;; Parameters:    Size  Location     Type
 17719 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17720 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17721 ;;  len             1   38[BANK0 ] unsigned char 
 17722 ;; Auto vars:     Size  Location     Type
 17723 ;;		None
 17724 ;; Return value:  Size  Location     Type
 17725 ;;                  1    wreg      unsigned char 
 17726 ;; Registers used:
 17727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17728 ;; Tracked objects:
 17729 ;;		On entry : 0/0
 17730 ;;		On exit  : 0/0
 17731 ;;		Unchanged: 0/0
 17732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17733 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17736 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17737 ;;Total ram usage:        4 bytes
 17738 ;; Hardware stack levels used:    1
 17739 ;; Hardware stack levels required when called:   12
 17740 ;; This function calls:
 17741 ;;		_USBTransferOnePacket
 17742 ;; This function is called by:
 17743 ;;		_Terminal
 17744 ;;		_GsmGprsTerminal
 17745 ;; This function uses a non-reentrant model
 17746 ;;
 17747                           
 17748                           	psect	text74
 17749  004834                     __ptext74:
 17750                           	opt stack 0
 17751  004834                     _getsUSBUSART:
 17752                           	opt stack 13
 17753                           
 17754                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;incstack = 0
 17758  004834  0E00               	movlw	0
 17759  004836  0100               	movlb	0	; () banked
 17760  004838  6FCB               	movwf	_cdc_rx_len& (0+255),b
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17764  00483A  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 17765  00483C  11C2               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17766  00483E  B4D8               	btfsc	status,2,c
 17767  004840  D006               	goto	u11620
 17768                           
 17769                           ; BSR set to: 0
 17770  004842  C0C1  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17771  004846  C0C2  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17772  00484A  BEDF               	btfsc	indf2,7,c
 17773  00484C  D03B               	goto	l1921
 17774  00484E                     u11620:
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;usb_device_cdc.c: 493: {
 17778                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17779                           
 17780                           ; BSR set to: 0
 17781  00484E  EE20 F001          	lfsr	2,1
 17782  004852  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 17783  004854  26D9               	addwf	fsr2l,f,c
 17784  004856  51C2               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17785  004858  22DA               	addwfc	fsr2h,f,c
 17786  00485A  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17787  00485C  5CDE               	subwf	postinc2,w,c
 17788  00485E  B0D8               	btfsc	status,0,c
 17789  004860  D008               	goto	l1924
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17793  004862  EE20 F001          	lfsr	2,1
 17794  004866  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 17795  004868  26D9               	addwf	fsr2l,f,c
 17796  00486A  51C2               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17797  00486C  22DA               	addwfc	fsr2h,f,c
 17798  00486E  50DF               	movf	indf2,w,c
 17799  004870  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17800  004872                     l1924:
 17801                           
 17802                           ; BSR set to: 0
 17803                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17804                           
 17805                           ; BSR set to: 0
 17806  004872  0E00               	movlw	0
 17807  004874  6FCB               	movwf	_cdc_rx_len& (0+255),b
 17808  004876  D013               	goto	l1925
 17809  004878                     
 17810                           ; BSR set to: 0
 17811                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17812                           
 17813                           ; BSR set to: 0
 17814  004878  51CB               	movf	_cdc_rx_len& (0+255),w,b
 17815  00487A  0D01               	mullw	1
 17816  00487C  0E50               	movlw	low _cdc_data_rx
 17817  00487E  24F3               	addwf	prodl,w,c
 17818  004880  6ED9               	movwf	fsr2l,c
 17819  004882  0E05               	movlw	high _cdc_data_rx
 17820  004884  20F4               	addwfc	prodh,w,c
 17821  004886  6EDA               	movwf	fsr2h,c
 17822  004888  51CB               	movf	_cdc_rx_len& (0+255),w,b
 17823  00488A  0D01               	mullw	1
 17824  00488C  50F3               	movf	prodl,w,c
 17825  00488E  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17826  004890  6EE1               	movwf	fsr1l,c
 17827  004892  50F4               	movf	prodh,w,c
 17828  004894  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17829  004896  6EE2               	movwf	fsr1h,c
 17830  004898  CFDF FFE7          	movff	indf2,indf1
 17831                           
 17832                           ; BSR set to: 0
 17833  00489C  2BCB               	incf	_cdc_rx_len& (0+255),f,b
 17834  00489E                     l1925:
 17835                           
 17836                           ; BSR set to: 0
 17837                           
 17838                           ; BSR set to: 0
 17839  00489E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17840  0048A0  5DCB               	subwf	_cdc_rx_len& (0+255),w,b
 17841  0048A2  A0D8               	btfss	status,0,c
 17842  0048A4  D7E9               	goto	l1926
 17843                           
 17844                           ; BSR set to: 0
 17845                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17846                           
 17847                           ; BSR set to: 0
 17848  0048A6  0E00               	movlw	0
 17849  0048A8  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17850  0048AA  0E50               	movlw	low _cdc_data_rx
 17851  0048AC  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17852  0048AE  0E05               	movlw	high _cdc_data_rx
 17853  0048B0  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17854  0048B2  0E40               	movlw	64
 17855  0048B4  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17856  0048B6  0E02               	movlw	2
 17857  0048B8  ECE1  F01F         	call	_USBTransferOnePacket
 17858  0048BC  C07D  F0C1         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17859  0048C0  C07E  F0C2         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17860  0048C4                     l1921:
 17861                           
 17862                           ;usb_device_cdc.c: 513: }
 17863                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17864  0048C4  0100               	movlb	0	; () banked
 17865  0048C6  51CB               	movf	_cdc_rx_len& (0+255),w,b
 17866  0048C8  0012               	return	
 17867  0048CA                     __end_of_getsUSBUSART:
 17868                           	opt stack 0
 17869                           tosu	equ	0xFFF
 17870                           tosh	equ	0xFFE
 17871                           tosl	equ	0xFFD
 17872                           pclath	equ	0xFFA
 17873                           tblptru	equ	0xFF8
 17874                           tblptrh	equ	0xFF7
 17875                           tblptrl	equ	0xFF6
 17876                           tablat	equ	0xFF5
 17877                           prodh	equ	0xFF4
 17878                           prodl	equ	0xFF3
 17879                           intcon	equ	0xFF2
 17880                           intcon2	equ	0xFF1
 17881                           intcon3	equ	0xFF0
 17882                           indf0	equ	0xFEF
 17883                           postinc0	equ	0xFEE
 17884                           plusw0	equ	0xFEB
 17885                           fsr0h	equ	0xFEA
 17886                           fsr0l	equ	0xFE9
 17887                           wreg	equ	0xFE8
 17888                           indf1	equ	0xFE7
 17889                           postinc1	equ	0xFE6
 17890                           postdec1	equ	0xFE5
 17891                           plusw1	equ	0xFE3
 17892                           fsr1h	equ	0xFE2
 17893                           fsr1l	equ	0xFE1
 17894                           indf2	equ	0xFDF
 17895                           postinc2	equ	0xFDE
 17896                           postdec2	equ	0xFDD
 17897                           plusw2	equ	0xFDB
 17898                           fsr2h	equ	0xFDA
 17899                           fsr2l	equ	0xFD9
 17900                           status	equ	0xFD8
 17901                           
 17902 ;; *************** function _USBTransferOnePacket *****************
 17903 ;; Defined at:
 17904 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17905 ;; Parameters:    Size  Location     Type
 17906 ;;  ep              1    wreg     unsigned char 
 17907 ;;  dir             1   29[BANK0 ] unsigned char 
 17908 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17909 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17910 ;;  len             1   32[BANK0 ] unsigned char 
 17911 ;; Auto vars:     Size  Location     Type
 17912 ;;  ep              1   33[BANK0 ] unsigned char 
 17913 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17914 ;;		 -> NULL(0), BDT(48), 
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  2   29[BANK0 ] PTR void 
 17917 ;; Registers used:
 17918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;Total ram usage:        7 bytes
 17929 ;; Hardware stack levels used:    1
 17930 ;; Hardware stack levels required when called:   11
 17931 ;; This function calls:
 17932 ;;		Nothing
 17933 ;; This function is called by:
 17934 ;;		_CDCInitEP
 17935 ;;		_getsUSBUSART
 17936 ;;		_CDCTxService
 17937 ;;		_USBCDCEventHandler
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           	psect	text75
 17942  003FC2                     __ptext75:
 17943                           	opt stack 0
 17944  003FC2                     _USBTransferOnePacket:
 17945                           	opt stack 13
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;incstack = 0
 17949                           ;USBTransferOnePacket@ep stored from wreg
 17950  003FC2  0100               	movlb	0	; () banked
 17951  003FC4  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17952                           
 17953                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17954                           ;usb_device.c: 1018: if(dir != 0)
 17955  003FC6  0100               	movlb	0	; () banked
 17956  003FC8  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17957  003FCA  B4D8               	btfsc	status,2,c
 17958  003FCC  D007               	goto	l1645
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;usb_device.c: 1019: {
 17962                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17963  003FCE  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17964  003FD0  0D02               	mullw	2
 17965  003FD2  0EBB               	movlw	low _pBDTEntryIn
 17966  003FD4  24F3               	addwf	prodl,w,c
 17967  003FD6  6ED9               	movwf	fsr2l,c
 17968  003FD8  0E00               	movlw	high _pBDTEntryIn
 17969  003FDA  D006               	goto	L16
 17970  003FDC                     l1645:
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;usb_device.c: 1023: else
 17974                           ;usb_device.c: 1024: {
 17975                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17976                           
 17977                           ; BSR set to: 0
 17978  003FDC  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17979  003FDE  0D02               	mullw	2
 17980  003FE0  0E0E               	movlw	low _pBDTEntryOut
 17981  003FE2  24F3               	addwf	prodl,w,c
 17982  003FE4  6ED9               	movwf	fsr2l,c
 17983  003FE6  0E03               	movlw	high _pBDTEntryOut
 17984  003FE8                     L16:
 17985  003FE8  20F4               	addwfc	prodh,w,c
 17986  003FEA  6EDA               	movwf	fsr2h,c
 17987  003FEC  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17988  003FF0  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17989                           
 17990                           ; BSR set to: 0
 17991                           ;usb_device.c: 1027: }
 17992                           ;usb_device.c: 1031: if(handle == 0)
 17993                           
 17994                           ; BSR set to: 0
 17995  003FF4  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17996  003FF6  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17997  003FF8  A4D8               	btfss	status,2,c
 17998  003FFA  D005               	goto	l1647
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;usb_device.c: 1032: {
 18002                           ;usb_device.c: 1033: return 0;
 18003  003FFC  0E00               	movlw	0
 18004  003FFE  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18005  004000  0E00               	movlw	0
 18006  004002  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18007                           
 18008                           ; BSR set to: 0
 18009  004004  0012               	return	
 18010  004006                     l1647:
 18011                           
 18012                           ; BSR set to: 0
 18013                           ;usb_device.c: 1034: }
 18014                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18015                           
 18016                           ; BSR set to: 0
 18017  004006  EE20 F002          	lfsr	2,2
 18018  00400A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18019  00400C  26D9               	addwf	fsr2l,f,c
 18020  00400E  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18021  004010  22DA               	addwfc	fsr2h,f,c
 18022  004012  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18023  004016  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18024                           
 18025                           ;usb_device.c: 1048: handle->CNT = len;
 18026  00401A  EE20 F001          	lfsr	2,1
 18027  00401E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18028  004020  26D9               	addwf	fsr2l,f,c
 18029  004022  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18030  004024  22DA               	addwfc	fsr2h,f,c
 18031  004026  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18035  00402A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18036  00402E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18037  004032  0E40               	movlw	64
 18038  004034  16DF               	andwf	indf2,f,c
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18042  004036  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18043  00403A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18044  00403E  0E00               	movlw	0
 18045  004040  86DB               	bsf	plusw2,3,c
 18046                           
 18047                           ; BSR set to: 0
 18048                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18049  004042  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18050  004046  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18051  00404A  0E00               	movlw	0
 18052  00404C  8EDB               	bsf	plusw2,7,c
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;usb_device.c: 1054: if(dir != 0)
 18056  00404E  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18057  004050  B4D8               	btfsc	status,2,c
 18058  004052  D007               	goto	l1649
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;usb_device.c: 1055: {
 18062                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18063  004054  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18064  004056  0D02               	mullw	2
 18065  004058  0EBB               	movlw	low _pBDTEntryIn
 18066  00405A  24F3               	addwf	prodl,w,c
 18067  00405C  6ED9               	movwf	fsr2l,c
 18068  00405E  0E00               	movlw	high _pBDTEntryIn
 18069  004060  D006               	goto	L17
 18070  004062                     l1649:
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;usb_device.c: 1059: else
 18074                           ;usb_device.c: 1060: {
 18075                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18076                           
 18077                           ; BSR set to: 0
 18078  004062  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18079  004064  0D02               	mullw	2
 18080  004066  0E0E               	movlw	low _pBDTEntryOut
 18081  004068  24F3               	addwf	prodl,w,c
 18082  00406A  6ED9               	movwf	fsr2l,c
 18083  00406C  0E03               	movlw	high _pBDTEntryOut
 18084  00406E                     L17:
 18085  00406E  20F4               	addwfc	prodh,w,c
 18086  004070  6EDA               	movwf	fsr2h,c
 18087  004072  0E04               	movlw	4
 18088  004074  1ADF               	xorwf	indf2,f,c
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;usb_device.c: 1063: }
 18092                           ;usb_device.c: 1064: return (void*)handle;
 18093                           
 18094                           ; BSR set to: 0
 18095  004076  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18096  00407A  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18097  00407E  0012               	return	
 18098  004080                     __end_of_USBTransferOnePacket:
 18099                           	opt stack 0
 18100                           tosu	equ	0xFFF
 18101                           tosh	equ	0xFFE
 18102                           tosl	equ	0xFFD
 18103                           pclath	equ	0xFFA
 18104                           tblptru	equ	0xFF8
 18105                           tblptrh	equ	0xFF7
 18106                           tblptrl	equ	0xFF6
 18107                           tablat	equ	0xFF5
 18108                           prodh	equ	0xFF4
 18109                           prodl	equ	0xFF3
 18110                           intcon	equ	0xFF2
 18111                           intcon2	equ	0xFF1
 18112                           intcon3	equ	0xFF0
 18113                           indf0	equ	0xFEF
 18114                           postinc0	equ	0xFEE
 18115                           plusw0	equ	0xFEB
 18116                           fsr0h	equ	0xFEA
 18117                           fsr0l	equ	0xFE9
 18118                           wreg	equ	0xFE8
 18119                           indf1	equ	0xFE7
 18120                           postinc1	equ	0xFE6
 18121                           postdec1	equ	0xFE5
 18122                           plusw1	equ	0xFE3
 18123                           fsr1h	equ	0xFE2
 18124                           fsr1l	equ	0xFE1
 18125                           indf2	equ	0xFDF
 18126                           postinc2	equ	0xFDE
 18127                           postdec2	equ	0xFDD
 18128                           plusw2	equ	0xFDB
 18129                           fsr2h	equ	0xFDA
 18130                           fsr2l	equ	0xFD9
 18131                           status	equ	0xFD8
 18132                           
 18133 ;; *************** function _atoi *****************
 18134 ;; Defined at:
 18135 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18136 ;; Parameters:    Size  Location     Type
 18137 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18138 ;;		 -> Terminal@Len(4), 
 18139 ;; Auto vars:     Size  Location     Type
 18140 ;;  a               2   40[BANK0 ] int 
 18141 ;;  sign            1   39[BANK0 ] unsigned char 
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  2   35[BANK0 ] int 
 18144 ;; Registers used:
 18145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/0
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18152 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18153 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18154 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18155 ;;Total ram usage:        7 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:   12
 18158 ;; This function calls:
 18159 ;;		___wmul
 18160 ;;		_isdigit
 18161 ;; This function is called by:
 18162 ;;		_Terminal
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text76
 18167  0037DC                     __ptext76:
 18168                           	opt stack 0
 18169  0037DC                     _atoi:
 18170                           	opt stack 13
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;incstack = 0
 18174  0037DC  D003               	goto	l2774
 18175  0037DE  0100               	movlb	0	; () banked
 18176  0037E0  4B83               	infsnz	atoi@s& (0+255),f,b
 18177  0037E2  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18178  0037E4                     l2774:
 18179                           
 18180                           ; BSR set to: 0
 18181  0037E4  C083  FFD9         	movff	atoi@s,fsr2l
 18182  0037E8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18183  0037EC  0E20               	movlw	32
 18184  0037EE  18DE               	xorwf	postinc2,w,c
 18185  0037F0  B4D8               	btfsc	status,2,c
 18186  0037F2  D7F5               	goto	l2775
 18187  0037F4  C083  FFD9         	movff	atoi@s,fsr2l
 18188  0037F8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18189  0037FC  0E09               	movlw	9
 18190  0037FE  18DE               	xorwf	postinc2,w,c
 18191  003800  B4D8               	btfsc	status,2,c
 18192  003802  D7ED               	goto	l2775
 18193  003804  0E00               	movlw	0
 18194  003806  0100               	movlb	0	; () banked
 18195  003808  6F89               	movwf	(atoi@a+1)& (0+255),b
 18196  00380A  0E00               	movlw	0
 18197  00380C  6F88               	movwf	atoi@a& (0+255),b
 18198  00380E  0E00               	movlw	0
 18199  003810  6F87               	movwf	atoi@sign& (0+255),b
 18200                           
 18201                           ; BSR set to: 0
 18202  003812  C083  FFD9         	movff	atoi@s,fsr2l
 18203  003816  C084  FFDA         	movff	atoi@s+1,fsr2h
 18204  00381A  0E2D               	movlw	45
 18205  00381C  18DE               	xorwf	postinc2,w,c
 18206  00381E  A4D8               	btfss	status,2,c
 18207  003820  D002               	goto	l2777
 18208                           
 18209                           ; BSR set to: 0
 18210  003822  2B87               	incf	atoi@sign& (0+255),f,b
 18211  003824  D026               	goto	l12717
 18212  003826                     l2777:
 18213                           
 18214                           ; BSR set to: 0
 18215                           
 18216                           ; BSR set to: 0
 18217  003826  C083  FFD9         	movff	atoi@s,fsr2l
 18218  00382A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18219  00382E  0E2B               	movlw	43
 18220  003830  18DE               	xorwf	postinc2,w,c
 18221  003832  A4D8               	btfss	status,2,c
 18222  003834  D020               	goto	l2780
 18223  003836  D01D               	goto	l12717
 18224  003838                     
 18225                           ; BSR set to: 0
 18226  003838  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18227  00383C  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18228  003840  0E00               	movlw	0
 18229  003842  0100               	movlb	0	; () banked
 18230  003844  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18231  003846  0E0A               	movlw	10
 18232  003848  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18233  00384A  EC12  F02F         	call	___wmul	;wreg free
 18234  00384E  C083  FFD9         	movff	atoi@s,fsr2l
 18235  003852  C084  FFDA         	movff	atoi@s+1,fsr2h
 18236  003856  50DF               	movf	indf2,w,c
 18237  003858  0100               	movlb	0	; () banked
 18238  00385A  6F85               	movwf	??_atoi& (0+255),b
 18239  00385C  6B86               	clrf	(??_atoi+1)& (0+255),b
 18240  00385E  517D               	movf	?___wmul& (0+255),w,b
 18241  003860  2785               	addwf	??_atoi& (0+255),f,b
 18242  003862  517E               	movf	(?___wmul+1)& (0+255),w,b
 18243  003864  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18244  003866  0ED0               	movlw	208
 18245  003868  2585               	addwf	??_atoi& (0+255),w,b
 18246  00386A  6F88               	movwf	atoi@a& (0+255),b
 18247  00386C  0EFF               	movlw	255
 18248  00386E  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18249  003870  6F89               	movwf	(atoi@a+1)& (0+255),b
 18250  003872                     l12717:
 18251                           
 18252                           ; BSR set to: 0
 18253  003872  4B83               	infsnz	atoi@s& (0+255),f,b
 18254  003874  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18255  003876                     l2780:
 18256                           
 18257                           ; BSR set to: 0
 18258                           
 18259                           ; BSR set to: 0
 18260  003876  C083  FFD9         	movff	atoi@s,fsr2l
 18261  00387A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18262  00387E  50DF               	movf	indf2,w,c
 18263  003880  ECC5  F02F         	call	_isdigit
 18264  003884  B0D8               	btfsc	status,0,c
 18265  003886  D7D8               	goto	l2781
 18266  003888  0100               	movlb	0	; () banked
 18267  00388A  5187               	movf	atoi@sign& (0+255),w,b
 18268  00388C  B4D8               	btfsc	status,2,c
 18269  00388E  D00D               	goto	l2783
 18270                           
 18271                           ; BSR set to: 0
 18272  003890  C088  F085         	movff	atoi@a,??_atoi
 18273  003894  C089  F086         	movff	atoi@a+1,??_atoi+1
 18274  003898  1F85               	comf	??_atoi& (0+255),f,b
 18275  00389A  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18276  00389C  4B85               	infsnz	??_atoi& (0+255),f,b
 18277  00389E  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18278  0038A0  C085  F083         	movff	??_atoi,?_atoi
 18279  0038A4  C086  F084         	movff	??_atoi+1,?_atoi+1
 18280  0038A8  0012               	return	
 18281  0038AA                     l2783:
 18282                           
 18283                           ; BSR set to: 0
 18284  0038AA  C088  F083         	movff	atoi@a,?_atoi
 18285  0038AE  C089  F084         	movff	atoi@a+1,?_atoi+1
 18286                           
 18287                           ; BSR set to: 0
 18288  0038B2  0012               	return		;funcret
 18289  0038B4                     __end_of_atoi:
 18290                           	opt stack 0
 18291                           tosu	equ	0xFFF
 18292                           tosh	equ	0xFFE
 18293                           tosl	equ	0xFFD
 18294                           pclath	equ	0xFFA
 18295                           tblptru	equ	0xFF8
 18296                           tblptrh	equ	0xFF7
 18297                           tblptrl	equ	0xFF6
 18298                           tablat	equ	0xFF5
 18299                           prodh	equ	0xFF4
 18300                           prodl	equ	0xFF3
 18301                           intcon	equ	0xFF2
 18302                           intcon2	equ	0xFF1
 18303                           intcon3	equ	0xFF0
 18304                           indf0	equ	0xFEF
 18305                           postinc0	equ	0xFEE
 18306                           plusw0	equ	0xFEB
 18307                           fsr0h	equ	0xFEA
 18308                           fsr0l	equ	0xFE9
 18309                           wreg	equ	0xFE8
 18310                           indf1	equ	0xFE7
 18311                           postinc1	equ	0xFE6
 18312                           postdec1	equ	0xFE5
 18313                           plusw1	equ	0xFE3
 18314                           fsr1h	equ	0xFE2
 18315                           fsr1l	equ	0xFE1
 18316                           indf2	equ	0xFDF
 18317                           postinc2	equ	0xFDE
 18318                           postdec2	equ	0xFDD
 18319                           plusw2	equ	0xFDB
 18320                           fsr2h	equ	0xFDA
 18321                           fsr2l	equ	0xFD9
 18322                           status	equ	0xFD8
 18323                           
 18324 ;; *************** function _isdigit *****************
 18325 ;; Defined at:
 18326 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;  c               1    wreg     unsigned char 
 18329 ;; Auto vars:     Size  Location     Type
 18330 ;;  c               1   31[BANK0 ] unsigned char 
 18331 ;; Return value:  Size  Location     Type
 18332 ;;		None               void
 18333 ;; Registers used:
 18334 ;;		wreg, status,2, status,0
 18335 ;; Tracked objects:
 18336 ;;		On entry : 0/0
 18337 ;;		On exit  : 0/0
 18338 ;;		Unchanged: 0/0
 18339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18344 ;;Total ram usage:        3 bytes
 18345 ;; Hardware stack levels used:    1
 18346 ;; Hardware stack levels required when called:   11
 18347 ;; This function calls:
 18348 ;;		Nothing
 18349 ;; This function is called by:
 18350 ;;		_atoi
 18351 ;;		_strtol
 18352 ;;		_xtoi
 18353 ;;		_isxdigit
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           	psect	text77
 18358  005F8A                     __ptext77:
 18359                           	opt stack 0
 18360  005F8A                     _isdigit:
 18361                           	opt stack 12
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;incstack = 0
 18365                           ;isdigit@c stored from wreg
 18366  005F8A  0100               	movlb	0	; () banked
 18367  005F8C  6F7F               	movwf	isdigit@c& (0+255),b
 18368  005F8E  0E00               	movlw	0
 18369  005F90  0100               	movlb	0	; () banked
 18370  005F92  6F7E               	movwf	_isdigit$6149& (0+255),b
 18371                           
 18372                           ; BSR set to: 0
 18373  005F94  0E3A               	movlw	58
 18374  005F96  617F               	cpfslt	isdigit@c& (0+255),b
 18375  005F98  D005               	goto	l2955
 18376                           
 18377                           ; BSR set to: 0
 18378  005F9A  0E2F               	movlw	47
 18379  005F9C  657F               	cpfsgt	isdigit@c& (0+255),b
 18380  005F9E  D002               	goto	l2955
 18381                           
 18382                           ; BSR set to: 0
 18383  005FA0  0E01               	movlw	1
 18384  005FA2  6F7E               	movwf	_isdigit$6149& (0+255),b
 18385  005FA4                     l2955:
 18386                           
 18387                           ; BSR set to: 0
 18388                           
 18389                           ; BSR set to: 0
 18390  005FA4  C07E  F07D         	movff	_isdigit$6149,??_isdigit
 18391  005FA8  317D               	rrcf	??_isdigit& (0+255),w,b
 18392  005FAA  0012               	return	
 18393  005FAC                     __end_of_isdigit:
 18394                           	opt stack 0
 18395                           tosu	equ	0xFFF
 18396                           tosh	equ	0xFFE
 18397                           tosl	equ	0xFFD
 18398                           pclath	equ	0xFFA
 18399                           tblptru	equ	0xFF8
 18400                           tblptrh	equ	0xFF7
 18401                           tblptrl	equ	0xFF6
 18402                           tablat	equ	0xFF5
 18403                           prodh	equ	0xFF4
 18404                           prodl	equ	0xFF3
 18405                           intcon	equ	0xFF2
 18406                           intcon2	equ	0xFF1
 18407                           intcon3	equ	0xFF0
 18408                           indf0	equ	0xFEF
 18409                           postinc0	equ	0xFEE
 18410                           plusw0	equ	0xFEB
 18411                           fsr0h	equ	0xFEA
 18412                           fsr0l	equ	0xFE9
 18413                           wreg	equ	0xFE8
 18414                           indf1	equ	0xFE7
 18415                           postinc1	equ	0xFE6
 18416                           postdec1	equ	0xFE5
 18417                           plusw1	equ	0xFE3
 18418                           fsr1h	equ	0xFE2
 18419                           fsr1l	equ	0xFE1
 18420                           indf2	equ	0xFDF
 18421                           postinc2	equ	0xFDE
 18422                           postdec2	equ	0xFDD
 18423                           plusw2	equ	0xFDB
 18424                           fsr2h	equ	0xFDA
 18425                           fsr2l	equ	0xFD9
 18426                           status	equ	0xFD8
 18427                           
 18428 ;; *************** function _OsTmr_Wait *****************
 18429 ;; Defined at:
 18430 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18431 ;; Parameters:    Size  Location     Type
 18432 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18433 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18434 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;  Ret             1   65[BANK0 ] enum E7749
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      enum E7749
 18439 ;; Registers used:
 18440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18446 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18449 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18450 ;;Total ram usage:        7 bytes
 18451 ;; Hardware stack levels used:    1
 18452 ;; Hardware stack levels required when called:   14
 18453 ;; This function calls:
 18454 ;;		_OsTmr_GetTimerStatus
 18455 ;;		_OsTmr_StartTimer
 18456 ;; This function is called by:
 18457 ;;		_Terminal
 18458 ;;		_I2cSlv_QueryI2cData
 18459 ;; This function uses a non-reentrant model
 18460 ;;
 18461                           
 18462                           	psect	text78
 18463  004CA6                     __ptext78:
 18464                           	opt stack 0
 18465  004CA6                     _OsTmr_Wait:
 18466                           	opt stack 11
 18467                           
 18468                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18469                           
 18470                           ; BSR set to: 0
 18471                           ;incstack = 0
 18472  004CA6  0E00               	movlw	0
 18473  004CA8  0100               	movlb	0	; () banked
 18474  004CAA  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18475                           
 18476                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18477  004CAC  D02D               	goto	l855
 18478  004CAE                     
 18479                           ; BSR set to: 0
 18480                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18481                           
 18482                           ; BSR set to: 0
 18483  004CAE  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18484  004CB2  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18485  004CB6  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18486  004CBA  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18487  004CBE  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18488  004CC2  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18489  004CC6  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 18490                           
 18491                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18492  004CCA  0100               	movlb	0	; () banked
 18493  004CCC  EE20 F00A          	lfsr	2,10
 18494  004CD0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18495  004CD2  26D9               	addwf	fsr2l,f,c
 18496  004CD4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18497  004CD6  22DA               	addwfc	fsr2h,f,c
 18498  004CD8  0E01               	movlw	1
 18499  004CDA  6EDF               	movwf	indf2,c
 18500                           
 18501                           ;os_timers.c: 165: break;
 18502  004CDC  D022               	goto	l857
 18503  004CDE                     
 18504                           ; BSR set to: 0
 18505                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18506                           
 18507                           ; BSR set to: 0
 18508  004CDE  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18509  004CE2  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18510  004CE6  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 18511  004CEA  06E8               	decf	wreg,f,c
 18512  004CEC  A4D8               	btfss	status,2,c
 18513  004CEE  D019               	goto	l857
 18514                           
 18515                           ;os_timers.c: 170: {
 18516                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18517  004CF0  0100               	movlb	0	; () banked
 18518  004CF2  EE20 F00A          	lfsr	2,10
 18519  004CF6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18520  004CF8  26D9               	addwf	fsr2l,f,c
 18521  004CFA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18522  004CFC  22DA               	addwfc	fsr2h,f,c
 18523  004CFE  0E00               	movlw	0
 18524  004D00  6EDF               	movwf	indf2,c
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;os_timers.c: 174: Ret = DelayExpired;
 18528  004D02  0E01               	movlw	1
 18529  004D04  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;os_timers.c: 180: }
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;os_timers.c: 179: break;
 18536                           
 18537                           ;os_timers.c: 178: default:
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;os_timers.c: 175: }
 18541                           ;os_timers.c: 176: break;
 18542  004D06  D00D               	goto	l857
 18543  004D08                     l855:
 18544                           
 18545                           ; BSR set to: 0
 18546                           
 18547                           ; BSR set to: 0
 18548  004D08  EE20 F00A          	lfsr	2,10
 18549  004D0C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18550  004D0E  26D9               	addwf	fsr2l,f,c
 18551  004D10  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18552  004D12  22DA               	addwfc	fsr2h,f,c
 18553  004D14  50DF               	movf	indf2,w,c
 18554                           
 18555                           ; Switch size 1, requested type "space"
 18556                           ; Number of cases is 2, Range of values is 0 to 1
 18557                           ; switch strategies available:
 18558                           ; Name         Instructions Cycles
 18559                           ; simple_byte            7     4 (average)
 18560                           ;	Chosen strategy is simple_byte
 18561  004D16  0A00               	xorlw	0	; case 0
 18562  004D18  B4D8               	btfsc	status,2,c
 18563  004D1A  D7C9               	goto	l856
 18564  004D1C  0A01               	xorlw	1	; case 1
 18565  004D1E  B4D8               	btfsc	status,2,c
 18566  004D20  D7DE               	goto	l858
 18567  004D22                     l857:
 18568                           
 18569                           ;os_timers.c: 182: return Ret;
 18570                           
 18571                           ; BSR set to: 0
 18572  004D22  0100               	movlb	0	; () banked
 18573  004D24  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18574  004D26  0012               	return	
 18575  004D28                     __end_of_OsTmr_Wait:
 18576                           	opt stack 0
 18577                           tosu	equ	0xFFF
 18578                           tosh	equ	0xFFE
 18579                           tosl	equ	0xFFD
 18580                           pclath	equ	0xFFA
 18581                           tblptru	equ	0xFF8
 18582                           tblptrh	equ	0xFF7
 18583                           tblptrl	equ	0xFF6
 18584                           tablat	equ	0xFF5
 18585                           prodh	equ	0xFF4
 18586                           prodl	equ	0xFF3
 18587                           intcon	equ	0xFF2
 18588                           intcon2	equ	0xFF1
 18589                           intcon3	equ	0xFF0
 18590                           indf0	equ	0xFEF
 18591                           postinc0	equ	0xFEE
 18592                           plusw0	equ	0xFEB
 18593                           fsr0h	equ	0xFEA
 18594                           fsr0l	equ	0xFE9
 18595                           wreg	equ	0xFE8
 18596                           indf1	equ	0xFE7
 18597                           postinc1	equ	0xFE6
 18598                           postdec1	equ	0xFE5
 18599                           plusw1	equ	0xFE3
 18600                           fsr1h	equ	0xFE2
 18601                           fsr1l	equ	0xFE1
 18602                           indf2	equ	0xFDF
 18603                           postinc2	equ	0xFDE
 18604                           postdec2	equ	0xFDD
 18605                           plusw2	equ	0xFDB
 18606                           fsr2h	equ	0xFDA
 18607                           fsr2l	equ	0xFD9
 18608                           status	equ	0xFD8
 18609                           
 18610 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18611 ;; Defined at:
 18612 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18613 ;; Parameters:    Size  Location     Type
 18614 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18615 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18616 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18617 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18618 ;; Auto vars:     Size  Location     Type
 18619 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18620 ;; Return value:  Size  Location     Type
 18621 ;;                  1    wreg      unsigned char 
 18622 ;; Registers used:
 18623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18624 ;; Tracked objects:
 18625 ;;		On entry : 0/0
 18626 ;;		On exit  : 0/0
 18627 ;;		Unchanged: 0/0
 18628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18632 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18633 ;;Total ram usage:        5 bytes
 18634 ;; Hardware stack levels used:    1
 18635 ;; Hardware stack levels required when called:   12
 18636 ;; This function calls:
 18637 ;;		_GenerateEvt
 18638 ;; This function is called by:
 18639 ;;		_Terminal
 18640 ;;		_I2cSlv_QueryI2cData
 18641 ;;		_triggerRelay
 18642 ;; This function uses a non-reentrant model
 18643 ;;
 18644                           
 18645                           	psect	text79
 18646  005A1E                     __ptext79:
 18647                           	opt stack 0
 18648  005A1E                     _I2cSlv_SendI2cMsg:
 18649                           	opt stack 13
 18650                           
 18651                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;incstack = 0
 18655  005A1E  0E00               	movlw	0
 18656  005A20  0100               	movlb	0	; () banked
 18657  005A22  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18658                           
 18659                           ; BSR set to: 0
 18660                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18661  005A24  05D1               	decf	_I2cComSts& (0+255),w,b
 18662  005A26  B4D8               	btfsc	status,2,c
 18663  005A28  D015               	goto	l1409
 18664                           
 18665                           ; BSR set to: 0
 18666                           ;i2c_slv.c: 257: {
 18667                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18668  005A2A  C082  F3A2         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18672  005A2E  0E00               	movlw	0
 18673  005A30  0103               	movlb	3	; () banked
 18674  005A32  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 18675                           
 18676                           ; BSR set to: 3
 18677                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18678  005A34  C083  F3A6         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18679                           
 18680                           ; BSR set to: 3
 18681                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18682  005A38  C080  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18683  005A3C  C081  F3A5         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18684                           
 18685                           ; BSR set to: 3
 18686                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18687  005A40  0ED9               	movlw	low _I2cWriteDataEvt
 18688  005A42  0100               	movlb	0	; () banked
 18689  005A44  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18690  005A46  0E00               	movlw	high _I2cWriteDataEvt
 18691  005A48  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18692  005A4A  EC7F  F030         	call	_GenerateEvt	;wreg free
 18693                           
 18694                           ;i2c_slv.c: 267: TxSts = 1u;
 18695  005A4E  0E01               	movlw	1
 18696  005A50  0100               	movlb	0	; () banked
 18697  005A52  D001               	goto	L18
 18698  005A54                     l1409:
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;i2c_slv.c: 269: else
 18702                           ;i2c_slv.c: 270: {
 18703                           ;i2c_slv.c: 272: TxSts = 0u;
 18704                           
 18705                           ; BSR set to: 0
 18706  005A54  0E00               	movlw	0
 18707  005A56                     L18:
 18708  005A56  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18709                           
 18710                           ; BSR set to: 0
 18711                           ;i2c_slv.c: 273: }
 18712                           ;i2c_slv.c: 275: return TxSts;
 18713  005A58  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18714  005A5A  0012               	return	
 18715  005A5C                     __end_of_I2cSlv_SendI2cMsg:
 18716                           	opt stack 0
 18717                           tosu	equ	0xFFF
 18718                           tosh	equ	0xFFE
 18719                           tosl	equ	0xFFD
 18720                           pclath	equ	0xFFA
 18721                           tblptru	equ	0xFF8
 18722                           tblptrh	equ	0xFF7
 18723                           tblptrl	equ	0xFF6
 18724                           tablat	equ	0xFF5
 18725                           prodh	equ	0xFF4
 18726                           prodl	equ	0xFF3
 18727                           intcon	equ	0xFF2
 18728                           intcon2	equ	0xFF1
 18729                           intcon3	equ	0xFF0
 18730                           indf0	equ	0xFEF
 18731                           postinc0	equ	0xFEE
 18732                           plusw0	equ	0xFEB
 18733                           fsr0h	equ	0xFEA
 18734                           fsr0l	equ	0xFE9
 18735                           wreg	equ	0xFE8
 18736                           indf1	equ	0xFE7
 18737                           postinc1	equ	0xFE6
 18738                           postdec1	equ	0xFE5
 18739                           plusw1	equ	0xFE3
 18740                           fsr1h	equ	0xFE2
 18741                           fsr1l	equ	0xFE1
 18742                           indf2	equ	0xFDF
 18743                           postinc2	equ	0xFDE
 18744                           postdec2	equ	0xFDD
 18745                           plusw2	equ	0xFDB
 18746                           fsr2h	equ	0xFDA
 18747                           fsr2l	equ	0xFD9
 18748                           status	equ	0xFD8
 18749                           
 18750 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18751 ;; Defined at:
 18752 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18753 ;; Parameters:    Size  Location     Type
 18754 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18755 ;;		 -> Terminal@TermRxBuffer(50), 
 18756 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18757 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  1    wreg      unsigned char 
 18762 ;; Registers used:
 18763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18764 ;; Tracked objects:
 18765 ;;		On entry : 0/0
 18766 ;;		On exit  : 0/0
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18772 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18773 ;;Total ram usage:        5 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; Hardware stack levels required when called:   12
 18776 ;; This function calls:
 18777 ;;		_GenerateEvt
 18778 ;; This function is called by:
 18779 ;;		_Terminal
 18780 ;;		_I2cSlv_QueryI2cData
 18781 ;; This function uses a non-reentrant model
 18782 ;;
 18783                           
 18784                           	psect	text80
 18785  005960                     __ptext80:
 18786                           	opt stack 0
 18787  005960                     _I2cSlv_ReceiveI2cMsg:
 18788                           	opt stack 13
 18789                           
 18790                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;incstack = 0
 18794  005960  0E00               	movlw	0
 18795  005962  0100               	movlb	0	; () banked
 18796  005964  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18797                           
 18798                           ; BSR set to: 0
 18799                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18800  005966  0E02               	movlw	2
 18801  005968  19D1               	xorwf	_I2cComSts& (0+255),w,b
 18802  00596A  B4D8               	btfsc	status,2,c
 18803  00596C  D016               	goto	l1414
 18804                           
 18805                           ; BSR set to: 0
 18806                           ;i2c_slv.c: 294: {
 18807                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18808  00596E  C082  F39C         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18812  005972  0E01               	movlw	1
 18813  005974  0103               	movlb	3	; () banked
 18814  005976  6F9D               	movwf	(_I2cRxPacket+1)& (0+255),b
 18815                           
 18816                           ; BSR set to: 3
 18817                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18818  005978  C083  F3A0         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18819                           
 18820                           ; BSR set to: 3
 18821                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18822  00597C  C080  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18823  005980  C081  F39F         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18824                           
 18825                           ; BSR set to: 3
 18826                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18827  005984  0E39               	movlw	low _I2cReadDataEvt
 18828  005986  0100               	movlb	0	; () banked
 18829  005988  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18830  00598A  0E00               	movlw	high _I2cReadDataEvt
 18831  00598C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18832  00598E  EC7F  F030         	call	_GenerateEvt	;wreg free
 18833                           
 18834                           ;i2c_slv.c: 304: RxSts = 1u;
 18835  005992  0E01               	movlw	1
 18836  005994  0100               	movlb	0	; () banked
 18837  005996  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18838                           
 18839                           ;i2c_slv.c: 305: }
 18840  005998  0012               	return	
 18841  00599A                     l1414:
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;i2c_slv.c: 306: else
 18845                           ;i2c_slv.c: 307: {
 18846                           ;i2c_slv.c: 309: RxSts = 0u;
 18847                           
 18848                           ; BSR set to: 0
 18849  00599A  0E00               	movlw	0
 18850  00599C  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18851                           
 18852                           ; BSR set to: 0
 18853  00599E  0012               	return	
 18854  0059A0                     __end_of_I2cSlv_ReceiveI2cMsg:
 18855                           	opt stack 0
 18856                           tosu	equ	0xFFF
 18857                           tosh	equ	0xFFE
 18858                           tosl	equ	0xFFD
 18859                           pclath	equ	0xFFA
 18860                           tblptru	equ	0xFF8
 18861                           tblptrh	equ	0xFF7
 18862                           tblptrl	equ	0xFF6
 18863                           tablat	equ	0xFF5
 18864                           prodh	equ	0xFF4
 18865                           prodl	equ	0xFF3
 18866                           intcon	equ	0xFF2
 18867                           intcon2	equ	0xFF1
 18868                           intcon3	equ	0xFF0
 18869                           indf0	equ	0xFEF
 18870                           postinc0	equ	0xFEE
 18871                           plusw0	equ	0xFEB
 18872                           fsr0h	equ	0xFEA
 18873                           fsr0l	equ	0xFE9
 18874                           wreg	equ	0xFE8
 18875                           indf1	equ	0xFE7
 18876                           postinc1	equ	0xFE6
 18877                           postdec1	equ	0xFE5
 18878                           plusw1	equ	0xFE3
 18879                           fsr1h	equ	0xFE2
 18880                           fsr1l	equ	0xFE1
 18881                           indf2	equ	0xFDF
 18882                           postinc2	equ	0xFDE
 18883                           postdec2	equ	0xFDD
 18884                           plusw2	equ	0xFDB
 18885                           fsr2h	equ	0xFDA
 18886                           fsr2l	equ	0xFD9
 18887                           status	equ	0xFD8
 18888                           
 18889 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18890 ;; Defined at:
 18891 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;		None
 18894 ;; Auto vars:     Size  Location     Type
 18895 ;;  Result          1   33[BANK0 ] enum E8918
 18896 ;; Return value:  Size  Location     Type
 18897 ;;                  1    wreg      enum E8918
 18898 ;; Registers used:
 18899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18900 ;; Tracked objects:
 18901 ;;		On entry : 0/0
 18902 ;;		On exit  : 0/0
 18903 ;;		Unchanged: 0/0
 18904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18909 ;;Total ram usage:        1 bytes
 18910 ;; Hardware stack levels used:    1
 18911 ;; Hardware stack levels required when called:   12
 18912 ;; This function calls:
 18913 ;;		_ReceiveEvt
 18914 ;; This function is called by:
 18915 ;;		_Terminal
 18916 ;;		_I2cSlv_QueryI2cData
 18917 ;; This function uses a non-reentrant model
 18918 ;;
 18919                           
 18920                           	psect	text81
 18921  005FAC                     __ptext81:
 18922                           	opt stack 0
 18923  005FAC                     _I2cSlv_I2cReadMsgSts:
 18924                           	opt stack 13
 18925                           
 18926                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18927                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18928                           
 18929                           ; BSR set to: 0
 18930                           ;incstack = 0
 18931  005FAC  0EA1               	movlw	low (_I2cRxPacket+5)
 18932  005FAE  0100               	movlb	0	; () banked
 18933  005FB0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18934  005FB2  0E03               	movlw	high (_I2cRxPacket+5)
 18935  005FB4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18936  005FB6  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 18937  005FBA  0900               	iorlw	0
 18938  005FBC  B4D8               	btfsc	status,2,c
 18939  005FBE  D002               	goto	l1419
 18940                           
 18941                           ;i2c_slv.c: 331: {
 18942                           ;i2c_slv.c: 332: Result = MessageReceived;
 18943  005FC0  0E01               	movlw	1
 18944  005FC2  D001               	goto	L19
 18945  005FC4                     l1419:
 18946                           
 18947                           ;i2c_slv.c: 334: else
 18948                           ;i2c_slv.c: 335: {
 18949                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18950                           
 18951                           ; BSR set to: 0
 18952  005FC4  0E00               	movlw	0
 18953  005FC6                     L19:
 18954  005FC6  0100               	movlb	0	; () banked
 18955  005FC8  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;i2c_slv.c: 337: }
 18959                           ;i2c_slv.c: 339: return Result;
 18960  005FCA  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18961  005FCC  0012               	return	
 18962  005FCE                     __end_of_I2cSlv_I2cReadMsgSts:
 18963                           	opt stack 0
 18964                           tosu	equ	0xFFF
 18965                           tosh	equ	0xFFE
 18966                           tosl	equ	0xFFD
 18967                           pclath	equ	0xFFA
 18968                           tblptru	equ	0xFF8
 18969                           tblptrh	equ	0xFF7
 18970                           tblptrl	equ	0xFF6
 18971                           tablat	equ	0xFF5
 18972                           prodh	equ	0xFF4
 18973                           prodl	equ	0xFF3
 18974                           intcon	equ	0xFF2
 18975                           intcon2	equ	0xFF1
 18976                           intcon3	equ	0xFF0
 18977                           indf0	equ	0xFEF
 18978                           postinc0	equ	0xFEE
 18979                           plusw0	equ	0xFEB
 18980                           fsr0h	equ	0xFEA
 18981                           fsr0l	equ	0xFE9
 18982                           wreg	equ	0xFE8
 18983                           indf1	equ	0xFE7
 18984                           postinc1	equ	0xFE6
 18985                           postdec1	equ	0xFE5
 18986                           plusw1	equ	0xFE3
 18987                           fsr1h	equ	0xFE2
 18988                           fsr1l	equ	0xFE1
 18989                           indf2	equ	0xFDF
 18990                           postinc2	equ	0xFDE
 18991                           postdec2	equ	0xFDD
 18992                           plusw2	equ	0xFDB
 18993                           fsr2h	equ	0xFDA
 18994                           fsr2l	equ	0xFD9
 18995                           status	equ	0xFD8
 18996                           
 18997 ;; *************** function _Rtcm_SetRtccDate *****************
 18998 ;; Defined at:
 18999 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 19002 ;; Auto vars:     Size  Location     Type
 19003 ;;		None
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  1    wreg      void 
 19006 ;; Registers used:
 19007 ;;		wreg, status,2, status,0, cstack
 19008 ;; Tracked objects:
 19009 ;;		On entry : 0/0
 19010 ;;		On exit  : 0/0
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19013 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19016 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19017 ;;Total ram usage:        8 bytes
 19018 ;; Hardware stack levels used:    1
 19019 ;; Hardware stack levels required when called:   13
 19020 ;; This function calls:
 19021 ;;		_Rtcc_LockRtc
 19022 ;;		_Rtcc_SetRtccValue
 19023 ;;		_Rtcc_UnlockRtc
 19024 ;; This function is called by:
 19025 ;;		_Rtcm_MainTask
 19026 ;; This function uses a non-reentrant model
 19027 ;;
 19028                           
 19029                           	psect	text82
 19030  0053CA                     __ptext82:
 19031                           	opt stack 0
 19032  0053CA                     _Rtcm_SetRtccDate:
 19033                           	opt stack 14
 19034                           
 19035                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19036                           
 19037                           ; BSR set to: 0
 19038                           ;incstack = 0
 19039  0053CA  ECD3  F030         	call	_Rtcc_UnlockRtc	;wreg free
 19040                           
 19041                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19042  0053CE  0100               	movlb	0	; () banked
 19043  0053D0  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19044  0053D2  0F30               	addlw	48
 19045  0053D4  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19046  0053D6  0E00               	movlw	0
 19047  0053D8  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19048                           
 19049                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19050  0053DC  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19051  0053E0  0E01               	movlw	1
 19052  0053E2  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19053                           
 19054                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19055  0053E6  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19056  0053EA  0E02               	movlw	2
 19057  0053EC  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19058                           
 19059                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19060  0053F0  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19061  0053F4  0E03               	movlw	3
 19062  0053F6  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19063                           
 19064                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19065  0053FA  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19066  0053FE  0E04               	movlw	4
 19067  005400  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19068                           
 19069                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19070  005404  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19071  005408  0E05               	movlw	5
 19072  00540A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19073                           
 19074                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19075  00540E  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19076  005412  0E06               	movlw	6
 19077  005414  ECF7  F00A         	call	_Rtcc_SetRtccValue
 19078                           
 19079                           ;rtcm.c: 191: Rtcc_LockRtc();
 19080  005418  ECDB  F030         	call	_Rtcc_LockRtc	;wreg free
 19081  00541C  0012               	return		;funcret
 19082  00541E                     __end_of_Rtcm_SetRtccDate:
 19083                           	opt stack 0
 19084                           tosu	equ	0xFFF
 19085                           tosh	equ	0xFFE
 19086                           tosl	equ	0xFFD
 19087                           pclath	equ	0xFFA
 19088                           tblptru	equ	0xFF8
 19089                           tblptrh	equ	0xFF7
 19090                           tblptrl	equ	0xFF6
 19091                           tablat	equ	0xFF5
 19092                           prodh	equ	0xFF4
 19093                           prodl	equ	0xFF3
 19094                           intcon	equ	0xFF2
 19095                           intcon2	equ	0xFF1
 19096                           intcon3	equ	0xFF0
 19097                           indf0	equ	0xFEF
 19098                           postinc0	equ	0xFEE
 19099                           plusw0	equ	0xFEB
 19100                           fsr0h	equ	0xFEA
 19101                           fsr0l	equ	0xFE9
 19102                           wreg	equ	0xFE8
 19103                           indf1	equ	0xFE7
 19104                           postinc1	equ	0xFE6
 19105                           postdec1	equ	0xFE5
 19106                           plusw1	equ	0xFE3
 19107                           fsr1h	equ	0xFE2
 19108                           fsr1l	equ	0xFE1
 19109                           indf2	equ	0xFDF
 19110                           postinc2	equ	0xFDE
 19111                           postdec2	equ	0xFDD
 19112                           plusw2	equ	0xFDB
 19113                           fsr2h	equ	0xFDA
 19114                           fsr2l	equ	0xFD9
 19115                           status	equ	0xFD8
 19116                           
 19117 ;; *************** function _Rtcc_UnlockRtc *****************
 19118 ;; Defined at:
 19119 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;		None
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;		None
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  1    wreg      void 
 19126 ;; Registers used:
 19127 ;;		None
 19128 ;; Tracked objects:
 19129 ;;		On entry : 0/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19137 ;;Total ram usage:        0 bytes
 19138 ;; Hardware stack levels used:    1
 19139 ;; Hardware stack levels required when called:   11
 19140 ;; This function calls:
 19141 ;;		Nothing
 19142 ;; This function is called by:
 19143 ;;		_Rtcm_MainTask
 19144 ;;		_Rtcm_SetRtccDate
 19145 ;;		_Rtcm_SetRtccAlarm
 19146 ;; This function uses a non-reentrant model
 19147 ;;
 19148                           
 19149                           	psect	text83
 19150  0061A6                     __ptext83:
 19151                           	opt stack 0
 19152  0061A6                     _Rtcc_UnlockRtc:
 19153                           	opt stack 15
 19154                           
 19155                           ;incstack = 0
 19156  0061A6  010F               	movlb	15	;# 
 19157  0061A8  0E55               	movlw	85	;# 
 19158  0061AA  6EA7               	movwf	4007,c	;# 
 19159  0061AC  0EAA               	movlw	170	;# 
 19160  0061AE  6EA7               	movwf	4007,c	;# 
 19161                           
 19162                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19163  0061B0  010F               	movlb	15	; () banked
 19164  0061B2  8B3F               	bsf	63,5,b	;volatile
 19165                           
 19166                           ; BSR set to: 15
 19167  0061B4  0012               	return		;funcret
 19168  0061B6                     __end_of_Rtcc_UnlockRtc:
 19169                           	opt stack 0
 19170                           tosu	equ	0xFFF
 19171                           tosh	equ	0xFFE
 19172                           tosl	equ	0xFFD
 19173                           pclath	equ	0xFFA
 19174                           tblptru	equ	0xFF8
 19175                           tblptrh	equ	0xFF7
 19176                           tblptrl	equ	0xFF6
 19177                           tablat	equ	0xFF5
 19178                           prodh	equ	0xFF4
 19179                           prodl	equ	0xFF3
 19180                           intcon	equ	0xFF2
 19181                           intcon2	equ	0xFF1
 19182                           intcon3	equ	0xFF0
 19183                           indf0	equ	0xFEF
 19184                           postinc0	equ	0xFEE
 19185                           plusw0	equ	0xFEB
 19186                           fsr0h	equ	0xFEA
 19187                           fsr0l	equ	0xFE9
 19188                           wreg	equ	0xFE8
 19189                           indf1	equ	0xFE7
 19190                           postinc1	equ	0xFE6
 19191                           postdec1	equ	0xFE5
 19192                           plusw1	equ	0xFE3
 19193                           fsr1h	equ	0xFE2
 19194                           fsr1l	equ	0xFE1
 19195                           indf2	equ	0xFDF
 19196                           postinc2	equ	0xFDE
 19197                           postdec2	equ	0xFDD
 19198                           plusw2	equ	0xFDB
 19199                           fsr2h	equ	0xFDA
 19200                           fsr2l	equ	0xFD9
 19201                           status	equ	0xFD8
 19202                           
 19203 ;; *************** function _Rtcc_SetRtccValue *****************
 19204 ;; Defined at:
 19205 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19206 ;; Parameters:    Size  Location     Type
 19207 ;;  RtccPtrVal      1    wreg     enum E7757
 19208 ;;  Value           1   37[BANK0 ] unsigned char 
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19211 ;; Return value:  Size  Location     Type
 19212 ;;                  1    wreg      void 
 19213 ;; Registers used:
 19214 ;;		wreg, status,2, status,0, cstack
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19220 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19224 ;;Total ram usage:        4 bytes
 19225 ;; Hardware stack levels used:    1
 19226 ;; Hardware stack levels required when called:   12
 19227 ;; This function calls:
 19228 ;;		___awdiv
 19229 ;;		___awmod
 19230 ;; This function is called by:
 19231 ;;		_Rtcm_SetRtccDate
 19232 ;; This function uses a non-reentrant model
 19233 ;;
 19234                           
 19235                           	psect	text84
 19236  0015EE                     __ptext84:
 19237                           	opt stack 0
 19238  0015EE                     _Rtcc_SetRtccValue:
 19239                           	opt stack 14
 19240                           
 19241                           ; BSR set to: 15
 19242                           ;incstack = 0
 19243                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19244  0015EE  0100               	movlb	0	; () banked
 19245  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19246                           
 19247                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19248  0015F2  D0FC               	goto	l441
 19249  0015F4                     l442:
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19253  0015F4  010F               	movlb	15	; () banked
 19254  0015F6  833F               	bsf	63,1,b	;volatile
 19255                           
 19256                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19257  0015F8  813F               	bsf	63,0,b	;volatile
 19258                           
 19259                           ; BSR set to: 15
 19260                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19261  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19262  0015FE  0100               	movlb	0	; () banked
 19263  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19264  001602  0E00               	movlw	0
 19265  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19266  001606  0E0A               	movlw	10
 19267  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 19268  00160A  EC0A  F027         	call	___awmod	;wreg free
 19269  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19270  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19271  001616  0E0F               	movlw	15
 19272  001618  0100               	movlb	0	; () banked
 19273  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19274  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19275  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19276  001622  0E00               	movlw	0
 19277  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19278  001626  0E0A               	movlw	10
 19279  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19280  00162A  ECCE  F025         	call	___awdiv	;wreg free
 19281  00162E  0100               	movlb	0	; () banked
 19282  001630  397D               	swapf	?___awdiv& (0+255),w,b
 19283  001632  0BF0               	andlw	240
 19284  001634  0BF0               	andlw	240
 19285  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19286  001638  6E98               	movwf	3992,c	;volatile
 19287                           
 19288                           ;rtcc_drv.c: 393: break;
 19289  00163A  0012               	return	
 19290  00163C                     l444:
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19294  00163C  010F               	movlb	15	; () banked
 19295  00163E  833F               	bsf	63,1,b	;volatile
 19296                           
 19297                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19298  001640  913F               	bcf	63,0,b	;volatile
 19299                           
 19300                           ; BSR set to: 15
 19301                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19302  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19303  001646  0100               	movlb	0	; () banked
 19304  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19305  00164A  0E00               	movlw	0
 19306  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19307  00164E  0E0A               	movlw	10
 19308  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19309  001652  EC0A  F027         	call	___awmod	;wreg free
 19310  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19311  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19312  00165E  0E0F               	movlw	15
 19313  001660  0100               	movlb	0	; () banked
 19314  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19315  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19316  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19317  00166A  0E00               	movlw	0
 19318  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19319  00166E  0E0A               	movlw	10
 19320  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19321  001672  ECCE  F025         	call	___awdiv	;wreg free
 19322  001676  0100               	movlb	0	; () banked
 19323  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19324  00167A  0BF0               	andlw	240
 19325  00167C  0BF0               	andlw	240
 19326  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19327  001680  6E99               	movwf	3993,c	;volatile
 19328                           
 19329                           ;rtcc_drv.c: 401: break;
 19330  001682  0012               	return	
 19331  001684                     l445:
 19332                           
 19333                           ; BSR set to: 0
 19334                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19335  001684  010F               	movlb	15	; () banked
 19336  001686  833F               	bsf	63,1,b	;volatile
 19337                           
 19338                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19339  001688  913F               	bcf	63,0,b	;volatile
 19340                           
 19341                           ; BSR set to: 15
 19342                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19343  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19344  00168E  0100               	movlb	0	; () banked
 19345  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19346  001692  0E00               	movlw	0
 19347  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19348  001696  0E0A               	movlw	10
 19349  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19350  00169A  EC0A  F027         	call	___awmod	;wreg free
 19351  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19352  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19353  0016A6  0E0F               	movlw	15
 19354  0016A8  0100               	movlb	0	; () banked
 19355  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19356  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19357  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19358  0016B2  0E00               	movlw	0
 19359  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19360  0016B6  0E0A               	movlw	10
 19361  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19362  0016BA  ECCE  F025         	call	___awdiv	;wreg free
 19363  0016BE  0100               	movlb	0	; () banked
 19364  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19365  0016C2  0BF0               	andlw	240
 19366  0016C4  0BF0               	andlw	240
 19367  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19368  0016C8  6E98               	movwf	3992,c	;volatile
 19369                           
 19370                           ;rtcc_drv.c: 409: break;
 19371  0016CA  0012               	return	
 19372  0016CC                     l446:
 19373                           
 19374                           ; BSR set to: 0
 19375                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19376  0016CC  010F               	movlb	15	; () banked
 19377  0016CE  933F               	bcf	63,1,b	;volatile
 19378                           
 19379                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19380  0016D0  813F               	bsf	63,0,b	;volatile
 19381                           
 19382                           ; BSR set to: 15
 19383                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19384  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19385  0016D6  0100               	movlb	0	; () banked
 19386  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19387  0016DA  0E00               	movlw	0
 19388  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19389  0016DE  0E0A               	movlw	10
 19390  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19391  0016E2  EC0A  F027         	call	___awmod	;wreg free
 19392  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19393  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19394  0016EE  0E0F               	movlw	15
 19395  0016F0  0100               	movlb	0	; () banked
 19396  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19397  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19398  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19399  0016FA  0E00               	movlw	0
 19400  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19401  0016FE  0E0A               	movlw	10
 19402  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19403  001702  ECCE  F025         	call	___awdiv	;wreg free
 19404  001706  0100               	movlb	0	; () banked
 19405  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19406  00170A  0BF0               	andlw	240
 19407  00170C  0BF0               	andlw	240
 19408  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19409  001710  6E99               	movwf	3993,c	;volatile
 19410                           
 19411                           ;rtcc_drv.c: 417: break;
 19412  001712  0012               	return	
 19413  001714                     l447:
 19414                           
 19415                           ; BSR set to: 0
 19416                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19417  001714  010F               	movlb	15	; () banked
 19418  001716  933F               	bcf	63,1,b	;volatile
 19419                           
 19420                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19421  001718  813F               	bsf	63,0,b	;volatile
 19422                           
 19423                           ; BSR set to: 15
 19424                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19425  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19426  00171E  0100               	movlb	0	; () banked
 19427  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19428  001722  0E00               	movlw	0
 19429  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19430  001726  0E0A               	movlw	10
 19431  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19432  00172A  EC0A  F027         	call	___awmod	;wreg free
 19433  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19434  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19435  001736  0E0F               	movlw	15
 19436  001738  0100               	movlb	0	; () banked
 19437  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19438  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19439  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19440  001742  0E00               	movlw	0
 19441  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19442  001746  0E0A               	movlw	10
 19443  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19444  00174A  ECCE  F025         	call	___awdiv	;wreg free
 19445  00174E  0100               	movlb	0	; () banked
 19446  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19447  001752  0BF0               	andlw	240
 19448  001754  0BF0               	andlw	240
 19449  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19450  001758  6E98               	movwf	3992,c	;volatile
 19451                           
 19452                           ;rtcc_drv.c: 425: break;
 19453  00175A  0012               	return	
 19454  00175C                     l448:
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19458  00175C  010F               	movlb	15	; () banked
 19459  00175E  933F               	bcf	63,1,b	;volatile
 19460                           
 19461                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19462  001760  913F               	bcf	63,0,b	;volatile
 19463                           
 19464                           ; BSR set to: 15
 19465                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19466  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19467  001766  0100               	movlb	0	; () banked
 19468  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19469  00176A  0E00               	movlw	0
 19470  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19471  00176E  0E0A               	movlw	10
 19472  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19473  001772  EC0A  F027         	call	___awmod	;wreg free
 19474  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19475  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19476  00177E  0E0F               	movlw	15
 19477  001780  0100               	movlb	0	; () banked
 19478  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19479  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19480  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19481  00178A  0E00               	movlw	0
 19482  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19483  00178E  0E0A               	movlw	10
 19484  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19485  001792  ECCE  F025         	call	___awdiv	;wreg free
 19486  001796  0100               	movlb	0	; () banked
 19487  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19488  00179A  0BF0               	andlw	240
 19489  00179C  0BF0               	andlw	240
 19490  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19491  0017A0  6E99               	movwf	3993,c	;volatile
 19492                           
 19493                           ;rtcc_drv.c: 433: break;
 19494  0017A2  0012               	return	
 19495  0017A4                     l449:
 19496                           
 19497                           ; BSR set to: 0
 19498                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19499  0017A4  010F               	movlb	15	; () banked
 19500  0017A6  933F               	bcf	63,1,b	;volatile
 19501                           
 19502                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19503  0017A8  913F               	bcf	63,0,b	;volatile
 19504                           
 19505                           ; BSR set to: 15
 19506                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19507  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19508  0017AE  0100               	movlb	0	; () banked
 19509  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19510  0017B2  0E00               	movlw	0
 19511  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19512  0017B6  0E0A               	movlw	10
 19513  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19514  0017BA  EC0A  F027         	call	___awmod	;wreg free
 19515  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19516  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19517  0017C6  0E0F               	movlw	15
 19518  0017C8  0100               	movlb	0	; () banked
 19519  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19520  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19521  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19522  0017D2  0E00               	movlw	0
 19523  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19524  0017D6  0E0A               	movlw	10
 19525  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19526  0017DA  ECCE  F025         	call	___awdiv	;wreg free
 19527  0017DE  0100               	movlb	0	; () banked
 19528  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19529  0017E2  0BF0               	andlw	240
 19530  0017E4  0BF0               	andlw	240
 19531  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19532  0017E8  6E98               	movwf	3992,c	;volatile
 19533                           
 19534                           ; BSR set to: 0
 19535                           ;rtcc_drv.c: 445: }
 19536                           
 19537                           ; BSR set to: 0
 19538                           ;rtcc_drv.c: 444: break;
 19539                           
 19540                           ;rtcc_drv.c: 443: default:
 19541                           
 19542                           ;rtcc_drv.c: 441: break;
 19543  0017EA  0012               	return	
 19544  0017EC                     l441:
 19545                           
 19546                           ; BSR set to: 0
 19547  0017EC  0100               	movlb	0	; () banked
 19548  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19549                           
 19550                           ; Switch size 1, requested type "space"
 19551                           ; Number of cases is 7, Range of values is 0 to 6
 19552                           ; switch strategies available:
 19553                           ; Name         Instructions Cycles
 19554                           ; simple_byte           22    12 (average)
 19555                           ;	Chosen strategy is simple_byte
 19556  0017F0  0A00               	xorlw	0	; case 0
 19557  0017F2  B4D8               	btfsc	status,2,c
 19558  0017F4  D6FF               	goto	l442
 19559  0017F6  0A01               	xorlw	1	; case 1
 19560  0017F8  B4D8               	btfsc	status,2,c
 19561  0017FA  D720               	goto	l444
 19562  0017FC  0A03               	xorlw	3	; case 2
 19563  0017FE  B4D8               	btfsc	status,2,c
 19564  001800  D741               	goto	l445
 19565  001802  0A01               	xorlw	1	; case 3
 19566  001804  B4D8               	btfsc	status,2,c
 19567  001806  D762               	goto	l446
 19568  001808  0A07               	xorlw	7	; case 4
 19569  00180A  B4D8               	btfsc	status,2,c
 19570  00180C  D783               	goto	l447
 19571  00180E  0A01               	xorlw	1	; case 5
 19572  001810  B4D8               	btfsc	status,2,c
 19573  001812  D7A4               	goto	l448
 19574  001814  0A03               	xorlw	3	; case 6
 19575  001816  A4D8               	btfss	status,2,c
 19576  001818  0012               	return	
 19577  00181A  D7C4               	goto	l449
 19578  00181C                     __end_of_Rtcc_SetRtccValue:
 19579                           	opt stack 0
 19580                           tosu	equ	0xFFF
 19581                           tosh	equ	0xFFE
 19582                           tosl	equ	0xFFD
 19583                           pclath	equ	0xFFA
 19584                           tblptru	equ	0xFF8
 19585                           tblptrh	equ	0xFF7
 19586                           tblptrl	equ	0xFF6
 19587                           tablat	equ	0xFF5
 19588                           prodh	equ	0xFF4
 19589                           prodl	equ	0xFF3
 19590                           intcon	equ	0xFF2
 19591                           intcon2	equ	0xFF1
 19592                           intcon3	equ	0xFF0
 19593                           indf0	equ	0xFEF
 19594                           postinc0	equ	0xFEE
 19595                           plusw0	equ	0xFEB
 19596                           fsr0h	equ	0xFEA
 19597                           fsr0l	equ	0xFE9
 19598                           wreg	equ	0xFE8
 19599                           indf1	equ	0xFE7
 19600                           postinc1	equ	0xFE6
 19601                           postdec1	equ	0xFE5
 19602                           plusw1	equ	0xFE3
 19603                           fsr1h	equ	0xFE2
 19604                           fsr1l	equ	0xFE1
 19605                           indf2	equ	0xFDF
 19606                           postinc2	equ	0xFDE
 19607                           postdec2	equ	0xFDD
 19608                           plusw2	equ	0xFDB
 19609                           fsr2h	equ	0xFDA
 19610                           fsr2l	equ	0xFD9
 19611                           status	equ	0xFD8
 19612                           
 19613 ;; *************** function ___awmod *****************
 19614 ;; Defined at:
 19615 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19616 ;; Parameters:    Size  Location     Type
 19617 ;;  dividend        2   29[BANK0 ] int 
 19618 ;;  divisor         2   31[BANK0 ] int 
 19619 ;; Auto vars:     Size  Location     Type
 19620 ;;  sign            1   34[BANK0 ] unsigned char 
 19621 ;;  counter         1   33[BANK0 ] unsigned char 
 19622 ;; Return value:  Size  Location     Type
 19623 ;;                  2   29[BANK0 ] int 
 19624 ;; Registers used:
 19625 ;;		wreg, status,2, status,0
 19626 ;; Tracked objects:
 19627 ;;		On entry : 0/0
 19628 ;;		On exit  : 0/0
 19629 ;;		Unchanged: 0/0
 19630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19634 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19635 ;;Total ram usage:        6 bytes
 19636 ;; Hardware stack levels used:    1
 19637 ;; Hardware stack levels required when called:   11
 19638 ;; This function calls:
 19639 ;;		Nothing
 19640 ;; This function is called by:
 19641 ;;		_Rtcc_SetRtccValue
 19642 ;;		_Rtcc_SetRtccAlarm
 19643 ;; This function uses a non-reentrant model
 19644 ;;
 19645                           
 19646                           	psect	text85
 19647  004E14                     __ptext85:
 19648                           	opt stack 0
 19649  004E14                     ___awmod:
 19650                           	opt stack 14
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;incstack = 0
 19654  004E14  0E00               	movlw	0
 19655  004E16  0100               	movlb	0	; () banked
 19656  004E18  6F82               	movwf	___awmod@sign& (0+255),b
 19657                           
 19658                           ; BSR set to: 0
 19659  004E1A  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19660  004E1C  D006               	goto	l2806
 19661                           
 19662                           ; BSR set to: 0
 19663  004E1E  6D7D               	negf	___awmod@dividend& (0+255),b
 19664  004E20  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19665  004E22  B0D8               	btfsc	status,0,c
 19666  004E24  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19667                           
 19668                           ; BSR set to: 0
 19669  004E26  0E01               	movlw	1
 19670  004E28  6F82               	movwf	___awmod@sign& (0+255),b
 19671  004E2A                     l2806:
 19672                           
 19673                           ; BSR set to: 0
 19674                           
 19675                           ; BSR set to: 0
 19676  004E2A  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19677  004E2C  D004               	goto	l2807
 19678                           
 19679                           ; BSR set to: 0
 19680  004E2E  6D7F               	negf	___awmod@divisor& (0+255),b
 19681  004E30  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19682  004E32  B0D8               	btfsc	status,0,c
 19683  004E34  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19684  004E36                     l2807:
 19685                           
 19686                           ; BSR set to: 0
 19687                           
 19688                           ; BSR set to: 0
 19689  004E36  517F               	movf	___awmod@divisor& (0+255),w,b
 19690  004E38  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19691  004E3A  B4D8               	btfsc	status,2,c
 19692  004E3C  D018               	goto	l2814
 19693                           
 19694                           ; BSR set to: 0
 19695  004E3E  0E01               	movlw	1
 19696  004E40  6F81               	movwf	___awmod@counter& (0+255),b
 19697  004E42  D004               	goto	l2809
 19698  004E44                     
 19699                           ; BSR set to: 0
 19700                           
 19701                           ; BSR set to: 0
 19702  004E44  90D8               	bcf	status,0,c
 19703  004E46  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19704  004E48  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19705  004E4A  2B81               	incf	___awmod@counter& (0+255),f,b
 19706  004E4C                     l2809:
 19707                           
 19708                           ; BSR set to: 0
 19709                           
 19710                           ; BSR set to: 0
 19711  004E4C  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19712  004E4E  D7FA               	goto	l2810
 19713  004E50                     u12050:
 19714                           
 19715                           ; BSR set to: 0
 19716                           
 19717                           ; BSR set to: 0
 19718                           
 19719                           ; BSR set to: 0
 19720  004E50  517F               	movf	___awmod@divisor& (0+255),w,b
 19721  004E52  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19722  004E54  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19723  004E56  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19724  004E58  A0D8               	btfss	status,0,c
 19725  004E5A  D004               	goto	l2813
 19726                           
 19727                           ; BSR set to: 0
 19728  004E5C  517F               	movf	___awmod@divisor& (0+255),w,b
 19729  004E5E  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19730  004E60  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19731  004E62  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19732  004E64                     l2813:
 19733                           
 19734                           ; BSR set to: 0
 19735                           
 19736                           ; BSR set to: 0
 19737  004E64  90D8               	bcf	status,0,c
 19738  004E66  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19739  004E68  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19740                           
 19741                           ; BSR set to: 0
 19742  004E6A  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19743  004E6C  D7F1               	goto	u12050
 19744  004E6E                     l2814:
 19745                           
 19746                           ; BSR set to: 0
 19747                           
 19748                           ; BSR set to: 0
 19749                           
 19750                           ; BSR set to: 0
 19751  004E6E  5182               	movf	___awmod@sign& (0+255),w,b
 19752  004E70  B4D8               	btfsc	status,2,c
 19753  004E72  D004               	goto	l2815
 19754                           
 19755                           ; BSR set to: 0
 19756  004E74  6D7D               	negf	___awmod@dividend& (0+255),b
 19757  004E76  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19758  004E78  B0D8               	btfsc	status,0,c
 19759  004E7A  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19760  004E7C                     l2815:
 19761                           
 19762                           ; BSR set to: 0
 19763                           
 19764                           ; BSR set to: 0
 19765  004E7C  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19766  004E80  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19767  004E84  0012               	return	
 19768  004E86                     __end_of___awmod:
 19769                           	opt stack 0
 19770                           tosu	equ	0xFFF
 19771                           tosh	equ	0xFFE
 19772                           tosl	equ	0xFFD
 19773                           pclath	equ	0xFFA
 19774                           tblptru	equ	0xFF8
 19775                           tblptrh	equ	0xFF7
 19776                           tblptrl	equ	0xFF6
 19777                           tablat	equ	0xFF5
 19778                           prodh	equ	0xFF4
 19779                           prodl	equ	0xFF3
 19780                           intcon	equ	0xFF2
 19781                           intcon2	equ	0xFF1
 19782                           intcon3	equ	0xFF0
 19783                           indf0	equ	0xFEF
 19784                           postinc0	equ	0xFEE
 19785                           plusw0	equ	0xFEB
 19786                           fsr0h	equ	0xFEA
 19787                           fsr0l	equ	0xFE9
 19788                           wreg	equ	0xFE8
 19789                           indf1	equ	0xFE7
 19790                           postinc1	equ	0xFE6
 19791                           postdec1	equ	0xFE5
 19792                           plusw1	equ	0xFE3
 19793                           fsr1h	equ	0xFE2
 19794                           fsr1l	equ	0xFE1
 19795                           indf2	equ	0xFDF
 19796                           postinc2	equ	0xFDE
 19797                           postdec2	equ	0xFDD
 19798                           plusw2	equ	0xFDB
 19799                           fsr2h	equ	0xFDA
 19800                           fsr2l	equ	0xFD9
 19801                           status	equ	0xFD8
 19802                           
 19803 ;; *************** function ___awdiv *****************
 19804 ;; Defined at:
 19805 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;  dividend        2   29[BANK0 ] int 
 19808 ;;  divisor         2   31[BANK0 ] int 
 19809 ;; Auto vars:     Size  Location     Type
 19810 ;;  quotient        2   35[BANK0 ] int 
 19811 ;;  sign            1   34[BANK0 ] unsigned char 
 19812 ;;  counter         1   33[BANK0 ] unsigned char 
 19813 ;; Return value:  Size  Location     Type
 19814 ;;                  2   29[BANK0 ] int 
 19815 ;; Registers used:
 19816 ;;		wreg, status,2, status,0
 19817 ;; Tracked objects:
 19818 ;;		On entry : 0/0
 19819 ;;		On exit  : 0/0
 19820 ;;		Unchanged: 0/0
 19821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19822 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19823 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19825 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19826 ;;Total ram usage:        8 bytes
 19827 ;; Hardware stack levels used:    1
 19828 ;; Hardware stack levels required when called:   11
 19829 ;; This function calls:
 19830 ;;		Nothing
 19831 ;; This function is called by:
 19832 ;;		_Rtcc_SetRtccValue
 19833 ;;		_Rtcc_SetRtccAlarm
 19834 ;; This function uses a non-reentrant model
 19835 ;;
 19836                           
 19837                           	psect	text86
 19838  004B9C                     __ptext86:
 19839                           	opt stack 0
 19840  004B9C                     ___awdiv:
 19841                           	opt stack 14
 19842                           
 19843                           ; BSR set to: 0
 19844                           ;incstack = 0
 19845  004B9C  0E00               	movlw	0
 19846  004B9E  0100               	movlb	0	; () banked
 19847  004BA0  6F82               	movwf	___awdiv@sign& (0+255),b
 19848                           
 19849                           ; BSR set to: 0
 19850  004BA2  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19851  004BA4  D006               	goto	l2793
 19852                           
 19853                           ; BSR set to: 0
 19854  004BA6  6D7F               	negf	___awdiv@divisor& (0+255),b
 19855  004BA8  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19856  004BAA  B0D8               	btfsc	status,0,c
 19857  004BAC  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19858                           
 19859                           ; BSR set to: 0
 19860  004BAE  0E01               	movlw	1
 19861  004BB0  6F82               	movwf	___awdiv@sign& (0+255),b
 19862  004BB2                     l2793:
 19863                           
 19864                           ; BSR set to: 0
 19865                           
 19866                           ; BSR set to: 0
 19867  004BB2  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19868  004BB4  D006               	goto	l2794
 19869                           
 19870                           ; BSR set to: 0
 19871  004BB6  6D7D               	negf	___awdiv@dividend& (0+255),b
 19872  004BB8  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19873  004BBA  B0D8               	btfsc	status,0,c
 19874  004BBC  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19875                           
 19876                           ; BSR set to: 0
 19877  004BBE  0E01               	movlw	1
 19878  004BC0  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19879  004BC2                     l2794:
 19880                           
 19881                           ; BSR set to: 0
 19882                           
 19883                           ; BSR set to: 0
 19884  004BC2  0E00               	movlw	0
 19885  004BC4  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19886  004BC6  0E00               	movlw	0
 19887  004BC8  6F83               	movwf	___awdiv@quotient& (0+255),b
 19888                           
 19889                           ; BSR set to: 0
 19890  004BCA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19891  004BCC  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19892  004BCE  B4D8               	btfsc	status,2,c
 19893  004BD0  D01C               	goto	l2801
 19894                           
 19895                           ; BSR set to: 0
 19896  004BD2  0E01               	movlw	1
 19897  004BD4  6F81               	movwf	___awdiv@counter& (0+255),b
 19898  004BD6  D004               	goto	l2796
 19899  004BD8                     
 19900                           ; BSR set to: 0
 19901                           
 19902                           ; BSR set to: 0
 19903  004BD8  90D8               	bcf	status,0,c
 19904  004BDA  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19905  004BDC  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19906  004BDE  2B81               	incf	___awdiv@counter& (0+255),f,b
 19907  004BE0                     l2796:
 19908                           
 19909                           ; BSR set to: 0
 19910                           
 19911                           ; BSR set to: 0
 19912  004BE0  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19913  004BE2  D7FA               	goto	l2797
 19914  004BE4                     u11990:
 19915                           
 19916                           ; BSR set to: 0
 19917                           
 19918                           ; BSR set to: 0
 19919                           
 19920                           ; BSR set to: 0
 19921  004BE4  90D8               	bcf	status,0,c
 19922  004BE6  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19923  004BE8  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19924                           
 19925                           ; BSR set to: 0
 19926  004BEA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19927  004BEC  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19928  004BEE  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19929  004BF0  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19930  004BF2  A0D8               	btfss	status,0,c
 19931  004BF4  D005               	goto	l2800
 19932                           
 19933                           ; BSR set to: 0
 19934  004BF6  517F               	movf	___awdiv@divisor& (0+255),w,b
 19935  004BF8  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19936  004BFA  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19937  004BFC  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19938                           
 19939                           ; BSR set to: 0
 19940  004BFE  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19941  004C00                     l2800:
 19942                           
 19943                           ; BSR set to: 0
 19944                           
 19945                           ; BSR set to: 0
 19946  004C00  90D8               	bcf	status,0,c
 19947  004C02  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19948  004C04  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19949                           
 19950                           ; BSR set to: 0
 19951  004C06  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19952  004C08  D7ED               	goto	u11990
 19953  004C0A                     l2801:
 19954                           
 19955                           ; BSR set to: 0
 19956                           
 19957                           ; BSR set to: 0
 19958                           
 19959                           ; BSR set to: 0
 19960  004C0A  5182               	movf	___awdiv@sign& (0+255),w,b
 19961  004C0C  B4D8               	btfsc	status,2,c
 19962  004C0E  D004               	goto	l2802
 19963                           
 19964                           ; BSR set to: 0
 19965  004C10  6D83               	negf	___awdiv@quotient& (0+255),b
 19966  004C12  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19967  004C14  B0D8               	btfsc	status,0,c
 19968  004C16  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19969  004C18                     l2802:
 19970                           
 19971                           ; BSR set to: 0
 19972                           
 19973                           ; BSR set to: 0
 19974  004C18  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19975  004C1C  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19976  004C20  0012               	return	
 19977  004C22                     __end_of___awdiv:
 19978                           	opt stack 0
 19979                           tosu	equ	0xFFF
 19980                           tosh	equ	0xFFE
 19981                           tosl	equ	0xFFD
 19982                           pclath	equ	0xFFA
 19983                           tblptru	equ	0xFF8
 19984                           tblptrh	equ	0xFF7
 19985                           tblptrl	equ	0xFF6
 19986                           tablat	equ	0xFF5
 19987                           prodh	equ	0xFF4
 19988                           prodl	equ	0xFF3
 19989                           intcon	equ	0xFF2
 19990                           intcon2	equ	0xFF1
 19991                           intcon3	equ	0xFF0
 19992                           indf0	equ	0xFEF
 19993                           postinc0	equ	0xFEE
 19994                           plusw0	equ	0xFEB
 19995                           fsr0h	equ	0xFEA
 19996                           fsr0l	equ	0xFE9
 19997                           wreg	equ	0xFE8
 19998                           indf1	equ	0xFE7
 19999                           postinc1	equ	0xFE6
 20000                           postdec1	equ	0xFE5
 20001                           plusw1	equ	0xFE3
 20002                           fsr1h	equ	0xFE2
 20003                           fsr1l	equ	0xFE1
 20004                           indf2	equ	0xFDF
 20005                           postinc2	equ	0xFDE
 20006                           postdec2	equ	0xFDD
 20007                           plusw2	equ	0xFDB
 20008                           fsr2h	equ	0xFDA
 20009                           fsr2l	equ	0xFD9
 20010                           status	equ	0xFD8
 20011                           
 20012 ;; *************** function _Rtcc_LockRtc *****************
 20013 ;; Defined at:
 20014 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20015 ;; Parameters:    Size  Location     Type
 20016 ;;		None
 20017 ;; Auto vars:     Size  Location     Type
 20018 ;;		None
 20019 ;; Return value:  Size  Location     Type
 20020 ;;                  1    wreg      void 
 20021 ;; Registers used:
 20022 ;;		None
 20023 ;; Tracked objects:
 20024 ;;		On entry : 0/0
 20025 ;;		On exit  : 0/0
 20026 ;;		Unchanged: 0/0
 20027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20032 ;;Total ram usage:        0 bytes
 20033 ;; Hardware stack levels used:    1
 20034 ;; Hardware stack levels required when called:   11
 20035 ;; This function calls:
 20036 ;;		Nothing
 20037 ;; This function is called by:
 20038 ;;		_Rtcm_MainTask
 20039 ;;		_Rtcm_SetRtccDate
 20040 ;;		_Rtcm_SetRtccAlarm
 20041 ;; This function uses a non-reentrant model
 20042 ;;
 20043                           
 20044                           	psect	text87
 20045  0061B6                     __ptext87:
 20046                           	opt stack 0
 20047  0061B6                     _Rtcc_LockRtc:
 20048                           	opt stack 15
 20049                           
 20050                           ; BSR set to: 0
 20051                           ;incstack = 0
 20052  0061B6  010F               	movlb	15	;# 
 20053  0061B8  0E55               	movlw	85	;# 
 20054  0061BA  6EA7               	movwf	4007,c	;# 
 20055  0061BC  0EAA               	movlw	170	;# 
 20056  0061BE  6EA7               	movwf	4007,c	;# 
 20057                           
 20058                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20059  0061C0  010F               	movlb	15	; () banked
 20060  0061C2  9B3F               	bcf	63,5,b	;volatile
 20061                           
 20062                           ; BSR set to: 15
 20063  0061C4  0012               	return		;funcret
 20064  0061C6                     __end_of_Rtcc_LockRtc:
 20065                           	opt stack 0
 20066                           tosu	equ	0xFFF
 20067                           tosh	equ	0xFFE
 20068                           tosl	equ	0xFFD
 20069                           pclath	equ	0xFFA
 20070                           tblptru	equ	0xFF8
 20071                           tblptrh	equ	0xFF7
 20072                           tblptrl	equ	0xFF6
 20073                           tablat	equ	0xFF5
 20074                           prodh	equ	0xFF4
 20075                           prodl	equ	0xFF3
 20076                           intcon	equ	0xFF2
 20077                           intcon2	equ	0xFF1
 20078                           intcon3	equ	0xFF0
 20079                           indf0	equ	0xFEF
 20080                           postinc0	equ	0xFEE
 20081                           plusw0	equ	0xFEB
 20082                           fsr0h	equ	0xFEA
 20083                           fsr0l	equ	0xFE9
 20084                           wreg	equ	0xFE8
 20085                           indf1	equ	0xFE7
 20086                           postinc1	equ	0xFE6
 20087                           postdec1	equ	0xFE5
 20088                           plusw1	equ	0xFE3
 20089                           fsr1h	equ	0xFE2
 20090                           fsr1l	equ	0xFE1
 20091                           indf2	equ	0xFDF
 20092                           postinc2	equ	0xFDE
 20093                           postdec2	equ	0xFDD
 20094                           plusw2	equ	0xFDB
 20095                           fsr2h	equ	0xFDA
 20096                           fsr2l	equ	0xFD9
 20097                           status	equ	0xFD8
 20098                           
 20099 ;; *************** function _Rtcm_GetRtccDate *****************
 20100 ;; Defined at:
 20101 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;		None
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20106 ;; Return value:  Size  Location     Type
 20107 ;;                  8   33[BANK0 ] struct _RtccDateType
 20108 ;; Registers used:
 20109 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20110 ;; Tracked objects:
 20111 ;;		On entry : 0/0
 20112 ;;		On exit  : 0/0
 20113 ;;		Unchanged: 0/0
 20114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20115 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20116 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20117 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20118 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20119 ;;Total ram usage:       17 bytes
 20120 ;; Hardware stack levels used:    1
 20121 ;; Hardware stack levels required when called:   12
 20122 ;; This function calls:
 20123 ;;		_Rtcc_GetRtccValue
 20124 ;; This function is called by:
 20125 ;;		_Rtcm_MainTask
 20126 ;; This function uses a non-reentrant model
 20127 ;;
 20128                           
 20129                           	psect	text88
 20130  005036                     __ptext88:
 20131                           	opt stack 0
 20132  005036                     _Rtcm_GetRtccDate:
 20133                           	opt stack 15
 20134                           
 20135                           ;rtcm.c: 204: RtccDateType LocalDate;
 20136                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20137                           
 20138                           ; BSR set to: 15
 20139                           ;incstack = 0
 20140  005036  0E00               	movlw	0
 20141  005038  ECAF  F024         	call	_Rtcc_GetRtccValue
 20142  00503C  0100               	movlb	0	; () banked
 20143  00503E  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20144  005040  0ED0               	movlw	208
 20145  005042  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20146  005044  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20147  005046  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20148  005048  0E07               	movlw	7
 20149  00504A  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20150                           
 20151                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20152  00504C  0E01               	movlw	1
 20153  00504E  ECAF  F024         	call	_Rtcc_GetRtccValue
 20154  005052  0100               	movlb	0	; () banked
 20155  005054  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20156                           
 20157                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20158  005056  0E02               	movlw	2
 20159  005058  ECAF  F024         	call	_Rtcc_GetRtccValue
 20160  00505C  0100               	movlb	0	; () banked
 20161  00505E  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20162                           
 20163                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20164  005060  0E03               	movlw	3
 20165  005062  ECAF  F024         	call	_Rtcc_GetRtccValue
 20166  005066  0100               	movlb	0	; () banked
 20167  005068  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20168                           
 20169                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20170  00506A  0E04               	movlw	4
 20171  00506C  ECAF  F024         	call	_Rtcc_GetRtccValue
 20172  005070  0100               	movlb	0	; () banked
 20173  005072  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20174                           
 20175                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20176  005074  0E05               	movlw	5
 20177  005076  ECAF  F024         	call	_Rtcc_GetRtccValue
 20178  00507A  0100               	movlb	0	; () banked
 20179  00507C  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20180                           
 20181                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20182  00507E  0E06               	movlw	6
 20183  005080  ECAF  F024         	call	_Rtcc_GetRtccValue
 20184  005084  0100               	movlb	0	; () banked
 20185  005086  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20186                           
 20187                           ; BSR set to: 0
 20188                           ;rtcm.c: 216: return LocalDate;
 20189  005088  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20190  00508C  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20191  005090  0E07               	movlw	7
 20192  005092                     u14271:
 20193  005092  CFDB FFEB          	movff	plusw2,plusw0
 20194  005096  06E8               	decf	wreg,f,c
 20195  005098  E2FC               	bc	u14271
 20196  00509A  0012               	return	
 20197  00509C                     __end_of_Rtcm_GetRtccDate:
 20198                           	opt stack 0
 20199                           tosu	equ	0xFFF
 20200                           tosh	equ	0xFFE
 20201                           tosl	equ	0xFFD
 20202                           pclath	equ	0xFFA
 20203                           tblptru	equ	0xFF8
 20204                           tblptrh	equ	0xFF7
 20205                           tblptrl	equ	0xFF6
 20206                           tablat	equ	0xFF5
 20207                           prodh	equ	0xFF4
 20208                           prodl	equ	0xFF3
 20209                           intcon	equ	0xFF2
 20210                           intcon2	equ	0xFF1
 20211                           intcon3	equ	0xFF0
 20212                           indf0	equ	0xFEF
 20213                           postinc0	equ	0xFEE
 20214                           plusw0	equ	0xFEB
 20215                           fsr0h	equ	0xFEA
 20216                           fsr0l	equ	0xFE9
 20217                           wreg	equ	0xFE8
 20218                           indf1	equ	0xFE7
 20219                           postinc1	equ	0xFE6
 20220                           postdec1	equ	0xFE5
 20221                           plusw1	equ	0xFE3
 20222                           fsr1h	equ	0xFE2
 20223                           fsr1l	equ	0xFE1
 20224                           indf2	equ	0xFDF
 20225                           postinc2	equ	0xFDE
 20226                           postdec2	equ	0xFDD
 20227                           plusw2	equ	0xFDB
 20228                           fsr2h	equ	0xFDA
 20229                           fsr2l	equ	0xFD9
 20230                           status	equ	0xFD8
 20231                           
 20232 ;; *************** function _Rtcc_GetRtccValue *****************
 20233 ;; Defined at:
 20234 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20235 ;; Parameters:    Size  Location     Type
 20236 ;;  RtccPtrVal      1    wreg     enum E7757
 20237 ;; Auto vars:     Size  Location     Type
 20238 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20239 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20240 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20241 ;; Return value:  Size  Location     Type
 20242 ;;                  1    wreg      unsigned char 
 20243 ;; Registers used:
 20244 ;;		wreg, status,2, status,0, prodl, prodh
 20245 ;; Tracked objects:
 20246 ;;		On entry : 0/0
 20247 ;;		On exit  : 0/0
 20248 ;;		Unchanged: 0/0
 20249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20251 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20254 ;;Total ram usage:        4 bytes
 20255 ;; Hardware stack levels used:    1
 20256 ;; Hardware stack levels required when called:   11
 20257 ;; This function calls:
 20258 ;;		Nothing
 20259 ;; This function is called by:
 20260 ;;		_Rtcm_GetRtccDate
 20261 ;; This function uses a non-reentrant model
 20262 ;;
 20263                           
 20264                           	psect	text89
 20265  00495E                     __ptext89:
 20266                           	opt stack 0
 20267  00495E                     _Rtcc_GetRtccValue:
 20268                           	opt stack 15
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;incstack = 0
 20272                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20273  00495E  0100               	movlb	0	; () banked
 20274  004960  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20275                           
 20276                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20277                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20278                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20279  004962  D02D               	goto	l416
 20280  004964                     l417:
 20281                           
 20282                           ; BSR set to: 0
 20283                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20284  004964  010F               	movlb	15	; () banked
 20285  004966  833F               	bsf	63,1,b	;volatile
 20286  004968                     
 20287                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20288  004968  813F               	bsf	63,0,b	;volatile
 20289  00496A  D01C               	goto	L20
 20290  00496C                     l419:
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20294  00496C  010F               	movlb	15	; () banked
 20295  00496E  833F               	bsf	63,1,b	;volatile
 20296  004970  D01E               	goto	L21
 20297  004972                     l420:
 20298                           
 20299                           ; BSR set to: 0
 20300                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20301  004972  010F               	movlb	15	; () banked
 20302  004974  833F               	bsf	63,1,b	;volatile
 20303  004976  D021               	goto	L24
 20304  004978                     l13083:
 20305                           
 20306                           ; BSR set to: 15
 20307                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20308  004978  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20309  00497C  0E0F               	movlw	15
 20310  00497E  0100               	movlb	0	; () banked
 20311  004980  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20312  004982  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20313  004984  0B0F               	andlw	15
 20314  004986  0B0F               	andlw	15
 20315  004988  0D0A               	mullw	10
 20316  00498A  50F3               	movf	prodl,w,c
 20317  00498C  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20318  00498E  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20319                           
 20320                           ;rtcc_drv.c: 241: break;
 20321  004990  D02D               	goto	l418
 20322  004992                     l421:
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20326  004992  010F               	movlb	15	; () banked
 20327  004994  933F               	bcf	63,1,b	;volatile
 20328                           
 20329                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20330  004996  813F               	bsf	63,0,b	;volatile
 20331                           
 20332                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20333  004998  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20334                           
 20335                           ;rtcc_drv.c: 249: break;
 20336  00499C  D027               	goto	l418
 20337  00499E                     l422:
 20338                           
 20339                           ; BSR set to: 0
 20340                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20341  00499E  010F               	movlb	15	; () banked
 20342  0049A0  933F               	bcf	63,1,b	;volatile
 20343  0049A2  D7E2               	goto	L22
 20344  0049A4                     L20:
 20345                           
 20346                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20347  0049A4  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20348  0049A8  D7E7               	goto	l13083
 20349  0049AA                     l423:
 20350                           
 20351                           ; BSR set to: 0
 20352                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20353  0049AA  010F               	movlb	15	; () banked
 20354  0049AC  933F               	bcf	63,1,b	;volatile
 20355  0049AE                     L21:
 20356                           
 20357                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20358  0049AE  913F               	bcf	63,0,b	;volatile
 20359                           
 20360                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20361  0049B0  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20362  0049B4  D7E1               	goto	l13083
 20363  0049B6                     l424:
 20364                           
 20365                           ; BSR set to: 0
 20366                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20367  0049B6  010F               	movlb	15	; () banked
 20368  0049B8  933F               	bcf	63,1,b	;volatile
 20369  0049BA                     L24:
 20370                           
 20371                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20372  0049BA  913F               	bcf	63,0,b	;volatile
 20373  0049BC  D7F3               	goto	L20
 20374  0049BE                     l416:
 20375                           
 20376                           ; BSR set to: 0
 20377  0049BE  0100               	movlb	0	; () banked
 20378  0049C0  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20379                           
 20380                           ; Switch size 1, requested type "space"
 20381                           ; Number of cases is 7, Range of values is 0 to 6
 20382                           ; switch strategies available:
 20383                           ; Name         Instructions Cycles
 20384                           ; simple_byte           22    12 (average)
 20385                           ;	Chosen strategy is simple_byte
 20386  0049C2  0A00               	xorlw	0	; case 0
 20387  0049C4  B4D8               	btfsc	status,2,c
 20388  0049C6  D7CE               	goto	l417
 20389  0049C8  0A01               	xorlw	1	; case 1
 20390  0049CA  B4D8               	btfsc	status,2,c
 20391  0049CC  D7CF               	goto	l419
 20392  0049CE  0A03               	xorlw	3	; case 2
 20393  0049D0  B4D8               	btfsc	status,2,c
 20394  0049D2  D7CF               	goto	l420
 20395  0049D4  0A01               	xorlw	1	; case 3
 20396  0049D6  B4D8               	btfsc	status,2,c
 20397  0049D8  D7DC               	goto	l421
 20398  0049DA  0A07               	xorlw	7	; case 4
 20399  0049DC  B4D8               	btfsc	status,2,c
 20400  0049DE  D7DF               	goto	l422
 20401  0049E0  0A01               	xorlw	1	; case 5
 20402  0049E2  B4D8               	btfsc	status,2,c
 20403  0049E4  D7E2               	goto	l423
 20404  0049E6  0A03               	xorlw	3	; case 6
 20405  0049E8  B4D8               	btfsc	status,2,c
 20406  0049EA  D7E5               	goto	l424
 20407  0049EC                     l418:
 20408                           
 20409                           ;rtcc_drv.c: 286: return RetValue;
 20410                           
 20411                           ; BSR set to: 0
 20412  0049EC  0100               	movlb	0	; () banked
 20413  0049EE  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20414  0049F0  0012               	return	
 20415  0049F2                     __end_of_Rtcc_GetRtccValue:
 20416                           	opt stack 0
 20417                           tosu	equ	0xFFF
 20418                           tosh	equ	0xFFE
 20419                           tosl	equ	0xFFD
 20420                           pclath	equ	0xFFA
 20421                           tblptru	equ	0xFF8
 20422                           tblptrh	equ	0xFF7
 20423                           tblptrl	equ	0xFF6
 20424                           tablat	equ	0xFF5
 20425                           prodh	equ	0xFF4
 20426                           prodl	equ	0xFF3
 20427                           intcon	equ	0xFF2
 20428                           intcon2	equ	0xFF1
 20429                           intcon3	equ	0xFF0
 20430                           indf0	equ	0xFEF
 20431                           postinc0	equ	0xFEE
 20432                           plusw0	equ	0xFEB
 20433                           fsr0h	equ	0xFEA
 20434                           fsr0l	equ	0xFE9
 20435                           wreg	equ	0xFE8
 20436                           indf1	equ	0xFE7
 20437                           postinc1	equ	0xFE6
 20438                           postdec1	equ	0xFE5
 20439                           plusw1	equ	0xFE3
 20440                           fsr1h	equ	0xFE2
 20441                           fsr1l	equ	0xFE1
 20442                           indf2	equ	0xFDF
 20443                           postinc2	equ	0xFDE
 20444                           postdec2	equ	0xFDD
 20445                           plusw2	equ	0xFDB
 20446                           fsr2h	equ	0xFDA
 20447                           fsr2l	equ	0xFD9
 20448                           status	equ	0xFD8
 20449                           
 20450 ;; *************** function _Rtcc_SetRtcStatus *****************
 20451 ;; Defined at:
 20452 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;  Status          1    wreg     unsigned char 
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;  Status          1   29[BANK0 ] unsigned char 
 20457 ;; Return value:  Size  Location     Type
 20458 ;;                  1    wreg      void 
 20459 ;; Registers used:
 20460 ;;		wreg
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20470 ;;Total ram usage:        1 bytes
 20471 ;; Hardware stack levels used:    1
 20472 ;; Hardware stack levels required when called:   11
 20473 ;; This function calls:
 20474 ;;		Nothing
 20475 ;; This function is called by:
 20476 ;;		_Rtcm_MainTask
 20477 ;; This function uses a non-reentrant model
 20478 ;;
 20479                           
 20480                           	psect	text90
 20481  006116                     __ptext90:
 20482                           	opt stack 0
 20483  006116                     _Rtcc_SetRtcStatus:
 20484                           	opt stack 16
 20485                           
 20486                           ; BSR set to: 0
 20487                           ;incstack = 0
 20488                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20489  006116  0100               	movlb	0	; () banked
 20490  006118  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20491                           
 20492                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20493  00611A  0100               	movlb	0	; () banked
 20494  00611C  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20495  00611E  D003               	bra	u13175
 20496  006120  010F               	movlb	15	; () banked
 20497  006122  9F3F               	bcf	63,7,b	;volatile
 20498  006124  D002               	bra	u13176
 20499  006126                     u13175:
 20500  006126  010F               	movlb	15	; () banked
 20501  006128  8F3F               	bsf	63,7,b	;volatile
 20502  00612A                     u13176:
 20503                           
 20504                           ; BSR set to: 15
 20505  00612A  0012               	return		;funcret
 20506  00612C                     __end_of_Rtcc_SetRtcStatus:
 20507                           	opt stack 0
 20508                           tosu	equ	0xFFF
 20509                           tosh	equ	0xFFE
 20510                           tosl	equ	0xFFD
 20511                           pclath	equ	0xFFA
 20512                           tblptru	equ	0xFF8
 20513                           tblptrh	equ	0xFF7
 20514                           tblptrl	equ	0xFF6
 20515                           tablat	equ	0xFF5
 20516                           prodh	equ	0xFF4
 20517                           prodl	equ	0xFF3
 20518                           intcon	equ	0xFF2
 20519                           intcon2	equ	0xFF1
 20520                           intcon3	equ	0xFF0
 20521                           indf0	equ	0xFEF
 20522                           postinc0	equ	0xFEE
 20523                           plusw0	equ	0xFEB
 20524                           fsr0h	equ	0xFEA
 20525                           fsr0l	equ	0xFE9
 20526                           wreg	equ	0xFE8
 20527                           indf1	equ	0xFE7
 20528                           postinc1	equ	0xFE6
 20529                           postdec1	equ	0xFE5
 20530                           plusw1	equ	0xFE3
 20531                           fsr1h	equ	0xFE2
 20532                           fsr1l	equ	0xFE1
 20533                           indf2	equ	0xFDF
 20534                           postinc2	equ	0xFDE
 20535                           postdec2	equ	0xFDD
 20536                           plusw2	equ	0xFDB
 20537                           fsr2h	equ	0xFDA
 20538                           fsr2l	equ	0xFD9
 20539                           status	equ	0xFD8
 20540                           
 20541 ;; *************** function _Rtcc_RtcConfig *****************
 20542 ;; Defined at:
 20543 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20544 ;; Parameters:    Size  Location     Type
 20545 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20546 ;;		 -> RtcConfig(4), 
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;		None
 20549 ;; Return value:  Size  Location     Type
 20550 ;;                  1    wreg      void 
 20551 ;; Registers used:
 20552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20553 ;; Tracked objects:
 20554 ;;		On entry : 0/0
 20555 ;;		On exit  : 0/0
 20556 ;;		Unchanged: 0/0
 20557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20561 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20562 ;;Total ram usage:        3 bytes
 20563 ;; Hardware stack levels used:    1
 20564 ;; Hardware stack levels required when called:   12
 20565 ;; This function calls:
 20566 ;;		_RtccIrqInit
 20567 ;; This function is called by:
 20568 ;;		_Rtcm_MainTask
 20569 ;; This function uses a non-reentrant model
 20570 ;;
 20571                           
 20572                           	psect	text91
 20573  00452A                     __ptext91:
 20574                           	opt stack 0
 20575  00452A                     _Rtcc_RtcConfig:
 20576                           	opt stack 15
 20577                           
 20578                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20579                           
 20580                           ; BSR set to: 15
 20581                           ;incstack = 0
 20582  00452A  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20583  00452E  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20584  004532  50DF               	movf	indf2,w,c
 20585  004534  0100               	movlb	0	; () banked
 20586  004536  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20587  004538  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20588  00453A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20589  00453C  010F               	movlb	15	; () banked
 20590  00453E  513F               	movf	63,w,b	;volatile
 20591  004540  0100               	movlb	0	; () banked
 20592  004542  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20593  004544  0BFB               	andlw	-5
 20594  004546  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20595  004548  010F               	movlb	15	; () banked
 20596  00454A  6F3F               	movwf	63,b	;volatile
 20597                           
 20598                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20599  00454C  0100               	movlb	0	; () banked
 20600  00454E  EE20 F001          	lfsr	2,1
 20601  004552  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20602  004554  26D9               	addwf	fsr2l,f,c
 20603  004556  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20604  004558  22DA               	addwfc	fsr2h,f,c
 20605  00455A  50DF               	movf	indf2,w,c
 20606  00455C  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20607  00455E  0E01               	movlw	1
 20608  004560  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20609  004562  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20610  004564  010F               	movlb	15	; () banked
 20611  004566  513C               	movf	60,w,b	;volatile
 20612  004568  0100               	movlb	0	; () banked
 20613  00456A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20614  00456C  0BFD               	andlw	-3
 20615  00456E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20616  004570  010F               	movlb	15	; () banked
 20617  004572  6F3C               	movwf	60,b	;volatile
 20618                           
 20619                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20620  004574  0100               	movlb	0	; () banked
 20621  004576  EE20 F001          	lfsr	2,1
 20622  00457A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20623  00457C  26D9               	addwf	fsr2l,f,c
 20624  00457E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20625  004580  22DA               	addwfc	fsr2h,f,c
 20626  004582  50DF               	movf	indf2,w,c
 20627  004584  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20628  004586  90D8               	bcf	status,0,c
 20629  004588  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20630  00458A  0E01               	movlw	1
 20631  00458C  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20632  00458E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20633  004590  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20634  004592  010F               	movlb	15	; () banked
 20635  004594  513C               	movf	60,w,b	;volatile
 20636  004596  0100               	movlb	0	; () banked
 20637  004598  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20638  00459A  0BFB               	andlw	-5
 20639  00459C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20640  00459E  010F               	movlb	15	; () banked
 20641  0045A0  6F3C               	movwf	60,b	;volatile
 20642                           
 20643                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20644  0045A2  0100               	movlb	0	; () banked
 20645  0045A4  EE20 F002          	lfsr	2,2
 20646  0045A8  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20647  0045AA  26D9               	addwf	fsr2l,f,c
 20648  0045AC  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20649  0045AE  22DA               	addwfc	fsr2h,f,c
 20650  0045B0  04DE               	decf	postinc2,w,c
 20651  0045B2  A4D8               	btfss	status,2,c
 20652  0045B4  0012               	return	
 20653                           
 20654                           ; BSR set to: 0
 20655                           ;rtcc_drv.c: 115: {
 20656                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20657  0045B6  EE20 F003          	lfsr	2,3
 20658  0045BA  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20659  0045BC  26D9               	addwf	fsr2l,f,c
 20660  0045BE  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20661  0045C0  22DA               	addwfc	fsr2h,f,c
 20662  0045C2  50DF               	movf	indf2,w,c
 20663  0045C4  EC96  F030         	call	_RtccIrqInit
 20664  0045C8  0012               	return	
 20665  0045CA                     __end_of_Rtcc_RtcConfig:
 20666                           	opt stack 0
 20667                           tosu	equ	0xFFF
 20668                           tosh	equ	0xFFE
 20669                           tosl	equ	0xFFD
 20670                           pclath	equ	0xFFA
 20671                           tblptru	equ	0xFF8
 20672                           tblptrh	equ	0xFF7
 20673                           tblptrl	equ	0xFF6
 20674                           tablat	equ	0xFF5
 20675                           prodh	equ	0xFF4
 20676                           prodl	equ	0xFF3
 20677                           intcon	equ	0xFF2
 20678                           intcon2	equ	0xFF1
 20679                           intcon3	equ	0xFF0
 20680                           indf0	equ	0xFEF
 20681                           postinc0	equ	0xFEE
 20682                           plusw0	equ	0xFEB
 20683                           fsr0h	equ	0xFEA
 20684                           fsr0l	equ	0xFE9
 20685                           wreg	equ	0xFE8
 20686                           indf1	equ	0xFE7
 20687                           postinc1	equ	0xFE6
 20688                           postdec1	equ	0xFE5
 20689                           plusw1	equ	0xFE3
 20690                           fsr1h	equ	0xFE2
 20691                           fsr1l	equ	0xFE1
 20692                           indf2	equ	0xFDF
 20693                           postinc2	equ	0xFDE
 20694                           postdec2	equ	0xFDD
 20695                           plusw2	equ	0xFDB
 20696                           fsr2h	equ	0xFDA
 20697                           fsr2l	equ	0xFD9
 20698                           status	equ	0xFD8
 20699                           
 20700 ;; *************** function _RtccIrqInit *****************
 20701 ;; Defined at:
 20702 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20703 ;; Parameters:    Size  Location     Type
 20704 ;;  Priority        1    wreg     enum E7716
 20705 ;; Auto vars:     Size  Location     Type
 20706 ;;  Priority        1   29[BANK0 ] enum E7716
 20707 ;; Return value:  Size  Location     Type
 20708 ;;                  1    wreg      void 
 20709 ;; Registers used:
 20710 ;;		wreg
 20711 ;; Tracked objects:
 20712 ;;		On entry : 0/0
 20713 ;;		On exit  : 0/0
 20714 ;;		Unchanged: 0/0
 20715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20720 ;;Total ram usage:        1 bytes
 20721 ;; Hardware stack levels used:    1
 20722 ;; Hardware stack levels required when called:   11
 20723 ;; This function calls:
 20724 ;;		Nothing
 20725 ;; This function is called by:
 20726 ;;		_Rtcc_RtcConfig
 20727 ;; This function uses a non-reentrant model
 20728 ;;
 20729                           
 20730                           	psect	text92
 20731  00612C                     __ptext92:
 20732                           	opt stack 0
 20733  00612C                     _RtccIrqInit:
 20734                           	opt stack 15
 20735                           
 20736                           ;incstack = 0
 20737                           ;RtccIrqInit@Priority stored from wreg
 20738  00612C  0100               	movlb	0	; () banked
 20739  00612E  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20740                           
 20741                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20742  006130  90A4               	bcf	4004,0,c	;volatile
 20743                           
 20744                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20745  006132  0100               	movlb	0	; () banked
 20746  006134  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20747  006136  D002               	bra	u12205
 20748  006138  90A5               	bcf	4005,0,c	;volatile
 20749  00613A  D001               	bra	u12206
 20750  00613C                     u12205:
 20751  00613C  80A5               	bsf	4005,0,c	;volatile
 20752  00613E                     u12206:
 20753                           
 20754                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20755  00613E  80A3               	bsf	4003,0,c	;volatile
 20756  006140  0012               	return		;funcret
 20757  006142                     __end_of_RtccIrqInit:
 20758                           	opt stack 0
 20759                           tosu	equ	0xFFF
 20760                           tosh	equ	0xFFE
 20761                           tosl	equ	0xFFD
 20762                           pclath	equ	0xFFA
 20763                           tblptru	equ	0xFF8
 20764                           tblptrh	equ	0xFF7
 20765                           tblptrl	equ	0xFF6
 20766                           tablat	equ	0xFF5
 20767                           prodh	equ	0xFF4
 20768                           prodl	equ	0xFF3
 20769                           intcon	equ	0xFF2
 20770                           intcon2	equ	0xFF1
 20771                           intcon3	equ	0xFF0
 20772                           indf0	equ	0xFEF
 20773                           postinc0	equ	0xFEE
 20774                           plusw0	equ	0xFEB
 20775                           fsr0h	equ	0xFEA
 20776                           fsr0l	equ	0xFE9
 20777                           wreg	equ	0xFE8
 20778                           indf1	equ	0xFE7
 20779                           postinc1	equ	0xFE6
 20780                           postdec1	equ	0xFE5
 20781                           plusw1	equ	0xFE3
 20782                           fsr1h	equ	0xFE2
 20783                           fsr1l	equ	0xFE1
 20784                           indf2	equ	0xFDF
 20785                           postinc2	equ	0xFDE
 20786                           postdec2	equ	0xFDD
 20787                           plusw2	equ	0xFDB
 20788                           fsr2h	equ	0xFDA
 20789                           fsr2l	equ	0xFD9
 20790                           status	equ	0xFD8
 20791                           
 20792 ;; *************** function _Rtcc_AlarmConfig *****************
 20793 ;; Defined at:
 20794 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20795 ;; Parameters:    Size  Location     Type
 20796 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20797 ;;		 -> AlCfg(4), 
 20798 ;; Auto vars:     Size  Location     Type
 20799 ;;		None
 20800 ;; Return value:  Size  Location     Type
 20801 ;;                  1    wreg      void 
 20802 ;; Registers used:
 20803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20804 ;; Tracked objects:
 20805 ;;		On entry : 0/0
 20806 ;;		On exit  : 0/0
 20807 ;;		Unchanged: 0/0
 20808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20811 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20812 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20813 ;;Total ram usage:        3 bytes
 20814 ;; Hardware stack levels used:    1
 20815 ;; Hardware stack levels required when called:   11
 20816 ;; This function calls:
 20817 ;;		Nothing
 20818 ;; This function is called by:
 20819 ;;		_Rtcm_MainTask
 20820 ;; This function uses a non-reentrant model
 20821 ;;
 20822                           
 20823                           	psect	text93
 20824  004F64                     __ptext93:
 20825                           	opt stack 0
 20826  004F64                     _Rtcc_AlarmConfig:
 20827                           	opt stack 16
 20828                           
 20829                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20830                           
 20831                           ;incstack = 0
 20832  004F64  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20833  004F68  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20834  004F6C  50DF               	movf	indf2,w,c
 20835  004F6E  0100               	movlb	0	; () banked
 20836  004F70  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20837  004F72  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20838  004F74  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20839  004F76  5091               	movf	3985,w,c	;volatile
 20840  004F78  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20841  004F7A  0B7F               	andlw	-129
 20842  004F7C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20843  004F7E  6E91               	movwf	3985,c	;volatile
 20844                           
 20845                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20846  004F80  EE20 F001          	lfsr	2,1
 20847  004F84  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20848  004F86  26D9               	addwf	fsr2l,f,c
 20849  004F88  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20850  004F8A  22DA               	addwfc	fsr2h,f,c
 20851  004F8C  50DF               	movf	indf2,w,c
 20852  004F8E  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20853  004F90  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20854  004F92  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20855  004F94  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20856  004F96  5091               	movf	3985,w,c	;volatile
 20857  004F98  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20858  004F9A  0BBF               	andlw	-65
 20859  004F9C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20860  004F9E  6E91               	movwf	3985,c	;volatile
 20861                           
 20862                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20863  004FA0  EE20 F002          	lfsr	2,2
 20864  004FA4  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20865  004FA6  26D9               	addwf	fsr2l,f,c
 20866  004FA8  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20867  004FAA  22DA               	addwfc	fsr2h,f,c
 20868  004FAC  50DF               	movf	indf2,w,c
 20869  004FAE  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20870  004FB0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20871  004FB2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20872  004FB4  5091               	movf	3985,w,c	;volatile
 20873  004FB6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20874  004FB8  0BC3               	andlw	-61
 20875  004FBA  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20876  004FBC  6E91               	movwf	3985,c	;volatile
 20877                           
 20878                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20879  004FBE  EE20 F003          	lfsr	2,3
 20880  004FC2  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20881  004FC4  26D9               	addwf	fsr2l,f,c
 20882  004FC6  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20883  004FC8  22DA               	addwfc	fsr2h,f,c
 20884  004FCA  50DF               	movf	indf2,w,c
 20885  004FCC  6E90               	movwf	3984,c	;volatile
 20886                           
 20887                           ; BSR set to: 0
 20888  004FCE  0012               	return		;funcret
 20889  004FD0                     __end_of_Rtcc_AlarmConfig:
 20890                           	opt stack 0
 20891                           tosu	equ	0xFFF
 20892                           tosh	equ	0xFFE
 20893                           tosl	equ	0xFFD
 20894                           pclath	equ	0xFFA
 20895                           tblptru	equ	0xFF8
 20896                           tblptrh	equ	0xFF7
 20897                           tblptrl	equ	0xFF6
 20898                           tablat	equ	0xFF5
 20899                           prodh	equ	0xFF4
 20900                           prodl	equ	0xFF3
 20901                           intcon	equ	0xFF2
 20902                           intcon2	equ	0xFF1
 20903                           intcon3	equ	0xFF0
 20904                           indf0	equ	0xFEF
 20905                           postinc0	equ	0xFEE
 20906                           plusw0	equ	0xFEB
 20907                           fsr0h	equ	0xFEA
 20908                           fsr0l	equ	0xFE9
 20909                           wreg	equ	0xFE8
 20910                           indf1	equ	0xFE7
 20911                           postinc1	equ	0xFE6
 20912                           postdec1	equ	0xFE5
 20913                           plusw1	equ	0xFE3
 20914                           fsr1h	equ	0xFE2
 20915                           fsr1l	equ	0xFE1
 20916                           indf2	equ	0xFDF
 20917                           postinc2	equ	0xFDE
 20918                           postdec2	equ	0xFDD
 20919                           plusw2	equ	0xFDB
 20920                           fsr2h	equ	0xFDA
 20921                           fsr2l	equ	0xFD9
 20922                           status	equ	0xFD8
 20923                           
 20924 ;; *************** function _initGprsModem *****************
 20925 ;; Defined at:
 20926 ;;		line 109 in file "../Source/c/04_App/app.c"
 20927 ;; Parameters:    Size  Location     Type
 20928 ;;		None
 20929 ;; Auto vars:     Size  Location     Type
 20930 ;;		None
 20931 ;; Return value:  Size  Location     Type
 20932 ;;                  1    wreg      unsigned char 
 20933 ;; Registers used:
 20934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20935 ;; Tracked objects:
 20936 ;;		On entry : 0/0
 20937 ;;		On exit  : 0/0
 20938 ;;		Unchanged: 0/0
 20939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20944 ;;Total ram usage:        0 bytes
 20945 ;; Hardware stack levels used:    1
 20946 ;; Hardware stack levels required when called:   14
 20947 ;; This function calls:
 20948 ;;		_Led_SetLedStatus
 20949 ;;		_Mdm_SetSmsFormat
 20950 ;;		_Uart_WriteConstString
 20951 ;;		_secondsAppTimer
 20952 ;; This function is called by:
 20953 ;;		_MyApp_Task
 20954 ;; This function uses a non-reentrant model
 20955 ;;
 20956                           
 20957                           	psect	text94
 20958  004668                     __ptext94:
 20959                           	opt stack 0
 20960  004668                     _initGprsModem:
 20961                           	opt stack 13
 20962                           
 20963                           ;app.c: 111: static uint16_t modemCounter = 0;
 20964                           ;app.c: 112: static bool isInitialized = 0;
 20965                           ;app.c: 113: static uint8_t initMdm = 0;
 20966                           ;app.c: 115: switch(initMdm)
 20967                           
 20968                           ; BSR set to: 0
 20969                           ;incstack = 0
 20970  004668  D040               	goto	l2551
 20971  00466A                     
 20972                           ;app.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20973  00466A  0E03               	movlw	3
 20974  00466C  0100               	movlb	0	; () banked
 20975  00466E  19D3               	xorwf	_MdmStatus& (0+255),w,b
 20976  004670  B4D8               	btfsc	status,2,c
 20977  004672  D003               	goto	u14370
 20978                           
 20979                           ; BSR set to: 0
 20980  004674  05D3               	decf	_MdmStatus& (0+255),w,b
 20981  004676  A4D8               	btfss	status,2,c
 20982  004678  D043               	goto	l2557
 20983  00467A                     u14370:
 20984                           
 20985                           ; BSR set to: 0
 20986                           ;app.c: 119: {
 20987                           ;app.c: 120: if (secondsAppTimer(5, &modemCounter, 0))
 20988                           
 20989                           ; BSR set to: 0
 20990  00467A  0EBC               	movlw	low initGprsModem@modemCounter
 20991  00467C  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20992  00467E  0E03               	movlw	high initGprsModem@modemCounter
 20993  004680  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20994  004682  0E00               	movlw	0
 20995  004684  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20996  004686  0E05               	movlw	5
 20997  004688  EC44  F022         	call	_secondsAppTimer
 20998  00468C  0900               	iorlw	0
 20999  00468E  B4D8               	btfsc	status,2,c
 21000  004690  D037               	goto	l2557
 21001                           
 21002                           ;app.c: 121: {
 21003                           ;app.c: 122: Mdm_SetSmsFormat(1);
 21004  004692  0E01               	movlw	1
 21005  004694  ECDC  F02A         	call	_Mdm_SetSmsFormat
 21006                           
 21007                           ;app.c: 123: Led_SetLedStatus(1u, LED_STS_ON);
 21008  004698  0E01               	movlw	1
 21009  00469A  0100               	movlb	0	; () banked
 21010  00469C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21011  00469E  0E01               	movlw	1
 21012  0046A0  EC8C  F02E         	call	_Led_SetLedStatus
 21013                           
 21014                           ;app.c: 124: initMdm = 1;
 21015  0046A4  0E01               	movlw	1
 21016  0046A6  D009               	goto	L25
 21017  0046A8                     
 21018                           ; BSR set to: 1
 21019                           ;app.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21020                           
 21021                           ; BSR set to: 1
 21022  0046A8  0EF9               	movlw	low STR_29
 21023  0046AA  0100               	movlb	0	; () banked
 21024  0046AC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21025  0046AE  0EFE               	movlw	high STR_29
 21026  0046B0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21027  0046B2  0E01               	movlw	1
 21028  0046B4  EC6D  F02C         	call	_Uart_WriteConstString
 21029                           
 21030                           ;app.c: 130: initMdm = 2;
 21031  0046B8  0E02               	movlw	2
 21032  0046BA                     L25:
 21033  0046BA  0101               	movlb	1	; () banked
 21034  0046BC  6FD4               	movwf	initGprsModem@initMdm& (0+255),b
 21035                           
 21036                           ;app.c: 131: break;
 21037  0046BE  D020               	goto	l2557
 21038  0046C0                     
 21039                           ; BSR set to: 1
 21040                           ;app.c: 133: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21041                           
 21042                           ; BSR set to: 1
 21043  0046C0  0EA9               	movlw	low STR_30
 21044  0046C2  0100               	movlb	0	; () banked
 21045  0046C4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21046  0046C6  0EFF               	movlw	high STR_30
 21047  0046C8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21048  0046CA  0E01               	movlw	1
 21049  0046CC  EC6D  F02C         	call	_Uart_WriteConstString
 21050                           
 21051                           ;app.c: 134: initMdm = 3;
 21052  0046D0  0E03               	movlw	3
 21053  0046D2  0101               	movlb	1	; () banked
 21054  0046D4  6FD4               	movwf	initGprsModem@initMdm& (0+255),b
 21055                           
 21056                           ; BSR set to: 1
 21057                           ;app.c: 135: Led_SetLedStatus(1u, LED_STS_ON);
 21058  0046D6  0E01               	movlw	1
 21059  0046D8  0100               	movlb	0	; () banked
 21060  0046DA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21061  0046DC  0E01               	movlw	1
 21062  0046DE  EC8C  F02E         	call	_Led_SetLedStatus
 21063                           
 21064                           ;app.c: 136: isInitialized = 1;
 21065  0046E2  0E01               	movlw	1
 21066  0046E4  0101               	movlb	1	; () banked
 21067  0046E6  6FD5               	movwf	initGprsModem@isInitialized& (0+255),b
 21068                           
 21069                           ; BSR set to: 1
 21070                           ;app.c: 140: }
 21071                           
 21072                           ; BSR set to: 1
 21073                           ;app.c: 139: break;
 21074                           
 21075                           ;app.c: 138: default:
 21076                           
 21077                           ;app.c: 137: break;
 21078  0046E8  D00B               	goto	l2557
 21079  0046EA                     l2551:
 21080                           
 21081                           ; BSR set to: 1
 21082  0046EA  0101               	movlb	1	; () banked
 21083  0046EC  51D4               	movf	initGprsModem@initMdm& (0+255),w,b
 21084                           
 21085                           ; Switch size 1, requested type "space"
 21086                           ; Number of cases is 3, Range of values is 0 to 2
 21087                           ; switch strategies available:
 21088                           ; Name         Instructions Cycles
 21089                           ; simple_byte           10     6 (average)
 21090                           ;	Chosen strategy is simple_byte
 21091  0046EE  0A00               	xorlw	0	; case 0
 21092  0046F0  B4D8               	btfsc	status,2,c
 21093  0046F2  D7BB               	goto	l2552
 21094  0046F4  0A01               	xorlw	1	; case 1
 21095  0046F6  B4D8               	btfsc	status,2,c
 21096  0046F8  D7D7               	goto	l2558
 21097  0046FA  0A03               	xorlw	3	; case 2
 21098  0046FC  B4D8               	btfsc	status,2,c
 21099  0046FE  D7E0               	goto	l2559
 21100  004700                     l2557:
 21101                           
 21102                           ;app.c: 141: return isInitialized;
 21103                           
 21104                           ; BSR set to: 1
 21105  004700  0101               	movlb	1	; () banked
 21106  004702  51D5               	movf	initGprsModem@isInitialized& (0+255),w,b
 21107  004704  0012               	return	
 21108  004706                     __end_of_initGprsModem:
 21109                           	opt stack 0
 21110                           tosu	equ	0xFFF
 21111                           tosh	equ	0xFFE
 21112                           tosl	equ	0xFFD
 21113                           pclath	equ	0xFFA
 21114                           tblptru	equ	0xFF8
 21115                           tblptrh	equ	0xFF7
 21116                           tblptrl	equ	0xFF6
 21117                           tablat	equ	0xFF5
 21118                           prodh	equ	0xFF4
 21119                           prodl	equ	0xFF3
 21120                           intcon	equ	0xFF2
 21121                           intcon2	equ	0xFF1
 21122                           intcon3	equ	0xFF0
 21123                           indf0	equ	0xFEF
 21124                           postinc0	equ	0xFEE
 21125                           plusw0	equ	0xFEB
 21126                           fsr0h	equ	0xFEA
 21127                           fsr0l	equ	0xFE9
 21128                           wreg	equ	0xFE8
 21129                           indf1	equ	0xFE7
 21130                           postinc1	equ	0xFE6
 21131                           postdec1	equ	0xFE5
 21132                           plusw1	equ	0xFE3
 21133                           fsr1h	equ	0xFE2
 21134                           fsr1l	equ	0xFE1
 21135                           indf2	equ	0xFDF
 21136                           postinc2	equ	0xFDE
 21137                           postdec2	equ	0xFDD
 21138                           plusw2	equ	0xFDB
 21139                           fsr2h	equ	0xFDA
 21140                           fsr2l	equ	0xFD9
 21141                           status	equ	0xFD8
 21142                           
 21143 ;; *************** function _Mdm_SetSmsFormat *****************
 21144 ;; Defined at:
 21145 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21146 ;; Parameters:    Size  Location     Type
 21147 ;;  TextFormat      1    wreg     unsigned char 
 21148 ;; Auto vars:     Size  Location     Type
 21149 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21150 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21151 ;;  Index           1   35[BANK0 ] unsigned char 
 21152 ;; Return value:  Size  Location     Type
 21153 ;;                  1    wreg      void 
 21154 ;; Registers used:
 21155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21156 ;; Tracked objects:
 21157 ;;		On entry : 0/0
 21158 ;;		On exit  : 0/0
 21159 ;;		Unchanged: 0/0
 21160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21162 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21164 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21165 ;;Total ram usage:       22 bytes
 21166 ;; Hardware stack levels used:    1
 21167 ;; Hardware stack levels required when called:   13
 21168 ;; This function calls:
 21169 ;;		_Uart_WriteString
 21170 ;; This function is called by:
 21171 ;;		_initGprsModem
 21172 ;; This function uses a non-reentrant model
 21173 ;;
 21174                           
 21175                           	psect	text95
 21176  0055B8                     __ptext95:
 21177                           	opt stack 0
 21178  0055B8                     _Mdm_SetSmsFormat:
 21179                           	opt stack 13
 21180                           
 21181                           ; BSR set to: 1
 21182                           ;incstack = 0
 21183                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21184  0055B8  0100               	movlb	0	; () banked
 21185  0055BA  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21186                           
 21187                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21188                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21189  0055BC  0E00               	movlw	0
 21190  0055BE  0100               	movlb	0	; () banked
 21191  0055C0  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21192                           
 21193                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21194  0055C2  0E41               	movlw	65
 21195  0055C4  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21196                           
 21197                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21198  0055C6  0E54               	movlw	84
 21199  0055C8  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21200                           
 21201                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21202  0055CA  0E2B               	movlw	43
 21203  0055CC  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21204                           
 21205                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21206  0055CE  0E43               	movlw	67
 21207  0055D0  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21208                           
 21209                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21210  0055D2  0E4D               	movlw	77
 21211  0055D4  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21212                           
 21213                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21214  0055D6  0E47               	movlw	71
 21215  0055D8  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21216                           
 21217                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 21218  0055DA  0E46               	movlw	70
 21219  0055DC  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21220                           
 21221                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 21222  0055DE  0E3D               	movlw	61
 21223  0055E0  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21224                           
 21225                           ; BSR set to: 0
 21226                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 21227  0055E2  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21228  0055E4  A4D8               	btfss	status,2,c
 21229  0055E6  D002               	goto	l1121
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;mdm_gsm_gprs.c: 854: {
 21233                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 21234  0055E8  0E31               	movlw	49
 21235  0055EA  D001               	goto	L26
 21236  0055EC                     l1121:
 21237                           
 21238                           ; BSR set to: 0
 21239                           ;mdm_gsm_gprs.c: 857: else
 21240                           ;mdm_gsm_gprs.c: 858: {
 21241                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 21242                           
 21243                           ; BSR set to: 0
 21244  0055EC  0E30               	movlw	48
 21245  0055EE                     L26:
 21246  0055EE  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 21247                           
 21248                           ; BSR set to: 0
 21249                           ;mdm_gsm_gprs.c: 860: }
 21250                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 21251  0055F0  0E0D               	movlw	13
 21252  0055F2  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 21253                           
 21254                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 21255  0055F4  0E00               	movlw	0
 21256  0055F6  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 21260  0055F8  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 21261  0055FA  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 21262  0055FC  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 21263  0055FE  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 21264  005600  0E01               	movlw	1
 21265  005602  EC2E  F02D         	call	_Uart_WriteString
 21266  005606  0012               	return		;funcret
 21267  005608                     __end_of_Mdm_SetSmsFormat:
 21268                           	opt stack 0
 21269                           tosu	equ	0xFFF
 21270                           tosh	equ	0xFFE
 21271                           tosl	equ	0xFFD
 21272                           pclath	equ	0xFFA
 21273                           tblptru	equ	0xFF8
 21274                           tblptrh	equ	0xFF7
 21275                           tblptrl	equ	0xFF6
 21276                           tablat	equ	0xFF5
 21277                           prodh	equ	0xFF4
 21278                           prodl	equ	0xFF3
 21279                           intcon	equ	0xFF2
 21280                           intcon2	equ	0xFF1
 21281                           intcon3	equ	0xFF0
 21282                           indf0	equ	0xFEF
 21283                           postinc0	equ	0xFEE
 21284                           plusw0	equ	0xFEB
 21285                           fsr0h	equ	0xFEA
 21286                           fsr0l	equ	0xFE9
 21287                           wreg	equ	0xFE8
 21288                           indf1	equ	0xFE7
 21289                           postinc1	equ	0xFE6
 21290                           postdec1	equ	0xFE5
 21291                           plusw1	equ	0xFE3
 21292                           fsr1h	equ	0xFE2
 21293                           fsr1l	equ	0xFE1
 21294                           indf2	equ	0xFDF
 21295                           postinc2	equ	0xFDE
 21296                           postdec2	equ	0xFDD
 21297                           plusw2	equ	0xFDB
 21298                           fsr2h	equ	0xFDA
 21299                           fsr2l	equ	0xFD9
 21300                           status	equ	0xFD8
 21301                           
 21302 ;; *************** function _blinkForSeconds *****************
 21303 ;; Defined at:
 21304 ;;		line 144 in file "../Source/c/04_App/app.c"
 21305 ;; Parameters:    Size  Location     Type
 21306 ;;  seconds         1    wreg     unsigned char 
 21307 ;;  blickTicks      2   51[BANK0 ] PTR unsigned int 
 21308 ;;		 -> MyApp_Task@blickTicks(2), 
 21309 ;; Auto vars:     Size  Location     Type
 21310 ;;  seconds         1   53[BANK0 ] unsigned char 
 21311 ;; Return value:  Size  Location     Type
 21312 ;;                  1    wreg      void 
 21313 ;; Registers used:
 21314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21315 ;; Tracked objects:
 21316 ;;		On entry : 0/0
 21317 ;;		On exit  : 0/0
 21318 ;;		Unchanged: 0/0
 21319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21323 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21324 ;;Total ram usage:        3 bytes
 21325 ;; Hardware stack levels used:    1
 21326 ;; Hardware stack levels required when called:   13
 21327 ;; This function calls:
 21328 ;;		_Led_SetLedStatus
 21329 ;;		_secondsAppTimer
 21330 ;; This function is called by:
 21331 ;;		_MyApp_Task
 21332 ;; This function uses a non-reentrant model
 21333 ;;
 21334                           
 21335                           	psect	text96
 21336  005B10                     __ptext96:
 21337                           	opt stack 0
 21338  005B10                     _blinkForSeconds:
 21339                           	opt stack 14
 21340                           
 21341                           ;incstack = 0
 21342                           ;blinkForSeconds@seconds stored from wreg
 21343  005B10  0100               	movlb	0	; () banked
 21344  005B12  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 21345                           
 21346                           ;app.c: 146: if (secondsAppTimer(seconds, blickTicks, 0))
 21347  005B14  C093  F08A         	movff	blinkForSeconds@blickTicks,secondsAppTimer@counter
 21348  005B18  C094  F08B         	movff	blinkForSeconds@blickTicks+1,secondsAppTimer@counter+1
 21349  005B1C  0E00               	movlw	0
 21350  005B1E  0100               	movlb	0	; () banked
 21351  005B20  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21352  005B22  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 21353  005B24  EC44  F022         	call	_secondsAppTimer
 21354  005B28  0900               	iorlw	0
 21355  005B2A  B4D8               	btfsc	status,2,c
 21356  005B2C  D007               	goto	l2564
 21357                           
 21358                           ;app.c: 147: {
 21359                           ;app.c: 148: Led_SetLedStatus(1u, LED_STS_ON);
 21360  005B2E  0E01               	movlw	1
 21361  005B30  0100               	movlb	0	; () banked
 21362  005B32  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21363  005B34  0E01               	movlw	1
 21364  005B36  EC8C  F02E         	call	_Led_SetLedStatus
 21365                           
 21366                           ;app.c: 149: }
 21367  005B3A  0012               	return	
 21368  005B3C                     l2564:
 21369                           
 21370                           ;app.c: 150: else
 21371                           ;app.c: 151: {
 21372                           ;app.c: 152: Led_SetLedStatus(1u, LED_STS_BLINK);
 21373  005B3C  0E03               	movlw	3
 21374  005B3E  0100               	movlb	0	; () banked
 21375  005B40  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21376  005B42  0E01               	movlw	1
 21377  005B44  EC8C  F02E         	call	_Led_SetLedStatus
 21378  005B48  0012               	return	
 21379  005B4A                     __end_of_blinkForSeconds:
 21380                           	opt stack 0
 21381                           tosu	equ	0xFFF
 21382                           tosh	equ	0xFFE
 21383                           tosl	equ	0xFFD
 21384                           pclath	equ	0xFFA
 21385                           tblptru	equ	0xFF8
 21386                           tblptrh	equ	0xFF7
 21387                           tblptrl	equ	0xFF6
 21388                           tablat	equ	0xFF5
 21389                           prodh	equ	0xFF4
 21390                           prodl	equ	0xFF3
 21391                           intcon	equ	0xFF2
 21392                           intcon2	equ	0xFF1
 21393                           intcon3	equ	0xFF0
 21394                           indf0	equ	0xFEF
 21395                           postinc0	equ	0xFEE
 21396                           plusw0	equ	0xFEB
 21397                           fsr0h	equ	0xFEA
 21398                           fsr0l	equ	0xFE9
 21399                           wreg	equ	0xFE8
 21400                           indf1	equ	0xFE7
 21401                           postinc1	equ	0xFE6
 21402                           postdec1	equ	0xFE5
 21403                           plusw1	equ	0xFE3
 21404                           fsr1h	equ	0xFE2
 21405                           fsr1l	equ	0xFE1
 21406                           indf2	equ	0xFDF
 21407                           postinc2	equ	0xFDE
 21408                           postdec2	equ	0xFDD
 21409                           plusw2	equ	0xFDB
 21410                           fsr2h	equ	0xFDA
 21411                           fsr2l	equ	0xFD9
 21412                           status	equ	0xFD8
 21413                           
 21414 ;; *************** function _secondsAppTimer *****************
 21415 ;; Defined at:
 21416 ;;		line 85 in file "../Source/c/04_App/app.c"
 21417 ;; Parameters:    Size  Location     Type
 21418 ;;  seconds         1    wreg     unsigned char 
 21419 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21420 ;;		 -> MyApp_Task@blickTicks(2), initGprsModem@modemCounter(2), 
 21421 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21422 ;; Auto vars:     Size  Location     Type
 21423 ;;  seconds         1   47[BANK0 ] unsigned char 
 21424 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21425 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21426 ;; Return value:  Size  Location     Type
 21427 ;;                  1    wreg      unsigned char 
 21428 ;; Registers used:
 21429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21430 ;; Tracked objects:
 21431 ;;		On entry : 0/0
 21432 ;;		On exit  : 0/0
 21433 ;;		Unchanged: 0/0
 21434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21435 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21436 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21439 ;;Total ram usage:        9 bytes
 21440 ;; Hardware stack levels used:    1
 21441 ;; Hardware stack levels required when called:   12
 21442 ;; This function calls:
 21443 ;;		___lwdiv
 21444 ;;		___wmul
 21445 ;; This function is called by:
 21446 ;;		_initGprsModem
 21447 ;;		_blinkForSeconds
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           	psect	text97
 21452  004488                     __ptext97:
 21453                           	opt stack 0
 21454  004488                     _secondsAppTimer:
 21455                           	opt stack 14
 21456                           
 21457                           ;incstack = 0
 21458                           ;secondsAppTimer@seconds stored from wreg
 21459  004488  0100               	movlb	0	; () banked
 21460  00448A  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21461                           
 21462                           ;app.c: 87: bool isExpired = 1;
 21463  00448C  0E01               	movlw	1
 21464  00448E  0100               	movlb	0	; () banked
 21465  004490  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 21469  004492  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21470  004496  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21471  004498  0E03               	movlw	3
 21472  00449A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21473  00449C  0EE8               	movlw	232
 21474  00449E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21475  0044A0  EC12  F02F         	call	___wmul	;wreg free
 21476  0044A4  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21477  0044A8  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21478  0044AC  0E00               	movlw	0
 21479  0044AE  0100               	movlb	0	; () banked
 21480  0044B0  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21481  0044B2  0E64               	movlw	100
 21482  0044B4  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21483  0044B6  EC39  F02A         	call	___lwdiv	;wreg free
 21484  0044BA  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21485  0044BE  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21486                           
 21487                           ;app.c: 90: if (*counter < destinationTicks)
 21488  0044C2  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21489  0044C6  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21490  0044CA  0100               	movlb	0	; () banked
 21491  0044CC  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21492  0044CE  5CDE               	subwf	postinc2,w,c
 21493  0044D0  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21494  0044D2  58DE               	subwfb	postinc2,w,c
 21495  0044D4  B0D8               	btfsc	status,0,c
 21496  0044D6  D009               	goto	l2538
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;app.c: 91: {
 21500                           ;app.c: 92: *counter += 1;
 21501  0044D8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21502  0044DC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21503  0044E0  2ADE               	incf	postinc2,f,c
 21504  0044E2  0E00               	movlw	0
 21505  0044E4  22DD               	addwfc	postdec2,f,c
 21506                           
 21507                           ; BSR set to: 0
 21508                           ;app.c: 93: isExpired = 0;
 21509  0044E6  0E00               	movlw	0
 21510  0044E8  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21511  0044EA                     l2538:
 21512                           
 21513                           ; BSR set to: 0
 21514                           ;app.c: 94: }
 21515                           ;app.c: 95: if (*counter == destinationTicks)
 21516                           
 21517                           ; BSR set to: 0
 21518  0044EA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21519  0044EE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21520  0044F2  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21521  0044F4  18DE               	xorwf	postinc2,w,c
 21522  0044F6  E117               	bnz	l13721
 21523  0044F8  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21524  0044FA  18DE               	xorwf	postinc2,w,c
 21525  0044FC  A4D8               	btfss	status,2,c
 21526  0044FE  D013               	goto	l2541
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;app.c: 96: {
 21530                           ;app.c: 97: if (isCyclic)
 21531  004500  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21532  004502  B4D8               	btfsc	status,2,c
 21533  004504  D008               	goto	l2540
 21534                           
 21535                           ; BSR set to: 0
 21536                           ;app.c: 98: {
 21537                           ;app.c: 99: *counter = 0;
 21538  004506  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21539  00450A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21540  00450E  0E00               	movlw	0
 21541  004510  6EDE               	movwf	postinc2,c
 21542  004512  0E00               	movlw	0
 21543  004514  D007               	goto	L27
 21544  004516                     l2540:
 21545                           
 21546                           ; BSR set to: 0
 21547                           ;app.c: 101: else
 21548                           ;app.c: 102: {
 21549                           ;app.c: 103: *counter = 0xFFFF;
 21550                           
 21551                           ; BSR set to: 0
 21552  004516  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21553  00451A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21554  00451E  0EFF               	movlw	255
 21555  004520  6EDE               	movwf	postinc2,c
 21556  004522  0EFF               	movlw	255
 21557  004524                     L27:
 21558  004524  6EDD               	movwf	postdec2,c
 21559  004526                     l2541:
 21560  004526                     l13721:
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;app.c: 104: }
 21564                           ;app.c: 105: }
 21565                           ;app.c: 106: return isExpired;
 21566  004526  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21567  004528  0012               	return	
 21568  00452A                     __end_of_secondsAppTimer:
 21569                           	opt stack 0
 21570                           tosu	equ	0xFFF
 21571                           tosh	equ	0xFFE
 21572                           tosl	equ	0xFFD
 21573                           pclath	equ	0xFFA
 21574                           tblptru	equ	0xFF8
 21575                           tblptrh	equ	0xFF7
 21576                           tblptrl	equ	0xFF6
 21577                           tablat	equ	0xFF5
 21578                           prodh	equ	0xFF4
 21579                           prodl	equ	0xFF3
 21580                           intcon	equ	0xFF2
 21581                           intcon2	equ	0xFF1
 21582                           intcon3	equ	0xFF0
 21583                           indf0	equ	0xFEF
 21584                           postinc0	equ	0xFEE
 21585                           plusw0	equ	0xFEB
 21586                           fsr0h	equ	0xFEA
 21587                           fsr0l	equ	0xFE9
 21588                           wreg	equ	0xFE8
 21589                           indf1	equ	0xFE7
 21590                           postinc1	equ	0xFE6
 21591                           postdec1	equ	0xFE5
 21592                           plusw1	equ	0xFE3
 21593                           fsr1h	equ	0xFE2
 21594                           fsr1l	equ	0xFE1
 21595                           indf2	equ	0xFDF
 21596                           postinc2	equ	0xFDE
 21597                           postdec2	equ	0xFDD
 21598                           plusw2	equ	0xFDB
 21599                           fsr2h	equ	0xFDA
 21600                           fsr2l	equ	0xFD9
 21601                           status	equ	0xFD8
 21602                           
 21603 ;; *************** function _Mdm_RequestSmsData *****************
 21604 ;; Defined at:
 21605 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21606 ;; Parameters:    Size  Location     Type
 21607 ;;		None
 21608 ;; Auto vars:     Size  Location     Type
 21609 ;;		None
 21610 ;; Return value:  Size  Location     Type
 21611 ;;                  1    wreg      void 
 21612 ;; Registers used:
 21613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21614 ;; Tracked objects:
 21615 ;;		On entry : 0/0
 21616 ;;		On exit  : 0/0
 21617 ;;		Unchanged: 0/0
 21618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21623 ;;Total ram usage:        0 bytes
 21624 ;; Hardware stack levels used:    1
 21625 ;; Hardware stack levels required when called:   12
 21626 ;; This function calls:
 21627 ;;		_GenerateEvt
 21628 ;; This function is called by:
 21629 ;;		_MyApp_Task
 21630 ;; This function uses a non-reentrant model
 21631 ;;
 21632                           
 21633                           	psect	text98
 21634  0061C6                     __ptext98:
 21635                           	opt stack 0
 21636  0061C6                     _Mdm_RequestSmsData:
 21637                           	opt stack 15
 21638                           
 21639                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;incstack = 0
 21643  0061C6  0EDD               	movlw	low _GetSmsText
 21644  0061C8  0100               	movlb	0	; () banked
 21645  0061CA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21646  0061CC  0E00               	movlw	high _GetSmsText
 21647  0061CE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21648  0061D0  EC7F  F030         	call	_GenerateEvt	;wreg free
 21649  0061D4  0012               	return		;funcret
 21650  0061D6                     __end_of_Mdm_RequestSmsData:
 21651                           	opt stack 0
 21652                           tosu	equ	0xFFF
 21653                           tosh	equ	0xFFE
 21654                           tosl	equ	0xFFD
 21655                           pclath	equ	0xFFA
 21656                           tblptru	equ	0xFF8
 21657                           tblptrh	equ	0xFF7
 21658                           tblptrl	equ	0xFF6
 21659                           tablat	equ	0xFF5
 21660                           prodh	equ	0xFF4
 21661                           prodl	equ	0xFF3
 21662                           intcon	equ	0xFF2
 21663                           intcon2	equ	0xFF1
 21664                           intcon3	equ	0xFF0
 21665                           indf0	equ	0xFEF
 21666                           postinc0	equ	0xFEE
 21667                           plusw0	equ	0xFEB
 21668                           fsr0h	equ	0xFEA
 21669                           fsr0l	equ	0xFE9
 21670                           wreg	equ	0xFE8
 21671                           indf1	equ	0xFE7
 21672                           postinc1	equ	0xFE6
 21673                           postdec1	equ	0xFE5
 21674                           plusw1	equ	0xFE3
 21675                           fsr1h	equ	0xFE2
 21676                           fsr1l	equ	0xFE1
 21677                           indf2	equ	0xFDF
 21678                           postinc2	equ	0xFDE
 21679                           postdec2	equ	0xFDD
 21680                           plusw2	equ	0xFDB
 21681                           fsr2h	equ	0xFDA
 21682                           fsr2l	equ	0xFD9
 21683                           status	equ	0xFD8
 21684                           
 21685 ;; *************** function _Mdm_IsSmsReceived *****************
 21686 ;; Defined at:
 21687 ;;		line 942 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21688 ;; Parameters:    Size  Location     Type
 21689 ;;		None
 21690 ;; Auto vars:     Size  Location     Type
 21691 ;;  Ret             1   33[BANK0 ] enum E8914
 21692 ;; Return value:  Size  Location     Type
 21693 ;;                  1    wreg      enum E8914
 21694 ;; Registers used:
 21695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21696 ;; Tracked objects:
 21697 ;;		On entry : 0/0
 21698 ;;		On exit  : 0/0
 21699 ;;		Unchanged: 0/0
 21700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21705 ;;Total ram usage:        1 bytes
 21706 ;; Hardware stack levels used:    1
 21707 ;; Hardware stack levels required when called:   12
 21708 ;; This function calls:
 21709 ;;		_ReceiveEvt
 21710 ;; This function is called by:
 21711 ;;		_MyApp_Task
 21712 ;; This function uses a non-reentrant model
 21713 ;;
 21714                           
 21715                           	psect	text99
 21716  005E96                     __ptext99:
 21717                           	opt stack 0
 21718  005E96                     _Mdm_IsSmsReceived:
 21719                           	opt stack 15
 21720                           
 21721                           ;mdm_gsm_gprs.c: 944: SmsRxStsType Ret = SmsNotReceived;
 21722                           
 21723                           ;incstack = 0
 21724  005E96  0E00               	movlw	0
 21725  005E98  0100               	movlb	0	; () banked
 21726  005E9A  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21727                           
 21728                           ; BSR set to: 0
 21729                           ;mdm_gsm_gprs.c: 947: if (ReceiveEvt(&SmsEvent))
 21730  005E9C  0EDE               	movlw	low _SmsEvent
 21731  005E9E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21732  005EA0  0E00               	movlw	high _SmsEvent
 21733  005EA2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21734  005EA4  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 21735  005EA8  0900               	iorlw	0
 21736  005EAA  B4D8               	btfsc	status,2,c
 21737  005EAC  D003               	goto	l1136
 21738                           
 21739                           ;mdm_gsm_gprs.c: 948: {
 21740                           ;mdm_gsm_gprs.c: 949: Ret = SmsReceived;
 21741  005EAE  0E01               	movlw	1
 21742  005EB0  0100               	movlb	0	; () banked
 21743  005EB2  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21744  005EB4                     l1136:
 21745                           
 21746                           ;mdm_gsm_gprs.c: 950: }
 21747                           ;mdm_gsm_gprs.c: 952: return Ret;
 21748  005EB4  0100               	movlb	0	; () banked
 21749  005EB6  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21750  005EB8  0012               	return	
 21751  005EBA                     __end_of_Mdm_IsSmsReceived:
 21752                           	opt stack 0
 21753                           tosu	equ	0xFFF
 21754                           tosh	equ	0xFFE
 21755                           tosl	equ	0xFFD
 21756                           pclath	equ	0xFFA
 21757                           tblptru	equ	0xFF8
 21758                           tblptrh	equ	0xFF7
 21759                           tblptrl	equ	0xFF6
 21760                           tablat	equ	0xFF5
 21761                           prodh	equ	0xFF4
 21762                           prodl	equ	0xFF3
 21763                           intcon	equ	0xFF2
 21764                           intcon2	equ	0xFF1
 21765                           intcon3	equ	0xFF0
 21766                           indf0	equ	0xFEF
 21767                           postinc0	equ	0xFEE
 21768                           plusw0	equ	0xFEB
 21769                           fsr0h	equ	0xFEA
 21770                           fsr0l	equ	0xFE9
 21771                           wreg	equ	0xFE8
 21772                           indf1	equ	0xFE7
 21773                           postinc1	equ	0xFE6
 21774                           postdec1	equ	0xFE5
 21775                           plusw1	equ	0xFE3
 21776                           fsr1h	equ	0xFE2
 21777                           fsr1l	equ	0xFE1
 21778                           indf2	equ	0xFDF
 21779                           postinc2	equ	0xFDE
 21780                           postdec2	equ	0xFDD
 21781                           plusw2	equ	0xFDB
 21782                           fsr2h	equ	0xFDA
 21783                           fsr2l	equ	0xFD9
 21784                           status	equ	0xFD8
 21785                           
 21786 ;; *************** function _Mdm_IsRinging *****************
 21787 ;; Defined at:
 21788 ;;		line 1025 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21789 ;; Parameters:    Size  Location     Type
 21790 ;;		None
 21791 ;; Auto vars:     Size  Location     Type
 21792 ;;  Ret             1   33[BANK0 ] enum E8910
 21793 ;; Return value:  Size  Location     Type
 21794 ;;                  1    wreg      enum E8910
 21795 ;; Registers used:
 21796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21797 ;; Tracked objects:
 21798 ;;		On entry : 0/0
 21799 ;;		On exit  : 0/0
 21800 ;;		Unchanged: 0/0
 21801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21806 ;;Total ram usage:        1 bytes
 21807 ;; Hardware stack levels used:    1
 21808 ;; Hardware stack levels required when called:   12
 21809 ;; This function calls:
 21810 ;;		_ReceiveEvt
 21811 ;; This function is called by:
 21812 ;;		_MyApp_Task
 21813 ;; This function uses a non-reentrant model
 21814 ;;
 21815                           
 21816                           	psect	text100
 21817  005EBA                     __ptext100:
 21818                           	opt stack 0
 21819  005EBA                     _Mdm_IsRinging:
 21820                           	opt stack 15
 21821                           
 21822                           ;mdm_gsm_gprs.c: 1027: RingStsType Ret = PhoneNotRinging;
 21823                           
 21824                           ; BSR set to: 0
 21825                           ;incstack = 0
 21826  005EBA  0E00               	movlw	0
 21827  005EBC  0100               	movlb	0	; () banked
 21828  005EBE  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;mdm_gsm_gprs.c: 1030: if (ReceiveEvt(&RingEvent))
 21832  005EC0  0EE0               	movlw	low _RingEvent
 21833  005EC2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21834  005EC4  0E00               	movlw	high _RingEvent
 21835  005EC6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21836  005EC8  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 21837  005ECC  0900               	iorlw	0
 21838  005ECE  B4D8               	btfsc	status,2,c
 21839  005ED0  D003               	goto	l1152
 21840                           
 21841                           ;mdm_gsm_gprs.c: 1031: {
 21842                           ;mdm_gsm_gprs.c: 1032: Ret = PhoneRinging;
 21843  005ED2  0E01               	movlw	1
 21844  005ED4  0100               	movlb	0	; () banked
 21845  005ED6  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21846  005ED8                     l1152:
 21847                           
 21848                           ;mdm_gsm_gprs.c: 1033: }
 21849                           ;mdm_gsm_gprs.c: 1035: return Ret;
 21850  005ED8  0100               	movlb	0	; () banked
 21851  005EDA  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21852  005EDC  0012               	return	
 21853  005EDE                     __end_of_Mdm_IsRinging:
 21854                           	opt stack 0
 21855                           tosu	equ	0xFFF
 21856                           tosh	equ	0xFFE
 21857                           tosl	equ	0xFFD
 21858                           pclath	equ	0xFFA
 21859                           tblptru	equ	0xFF8
 21860                           tblptrh	equ	0xFF7
 21861                           tblptrl	equ	0xFF6
 21862                           tablat	equ	0xFF5
 21863                           prodh	equ	0xFF4
 21864                           prodl	equ	0xFF3
 21865                           intcon	equ	0xFF2
 21866                           intcon2	equ	0xFF1
 21867                           intcon3	equ	0xFF0
 21868                           indf0	equ	0xFEF
 21869                           postinc0	equ	0xFEE
 21870                           plusw0	equ	0xFEB
 21871                           fsr0h	equ	0xFEA
 21872                           fsr0l	equ	0xFE9
 21873                           wreg	equ	0xFE8
 21874                           indf1	equ	0xFE7
 21875                           postinc1	equ	0xFE6
 21876                           postdec1	equ	0xFE5
 21877                           plusw1	equ	0xFE3
 21878                           fsr1h	equ	0xFE2
 21879                           fsr1l	equ	0xFE1
 21880                           indf2	equ	0xFDF
 21881                           postinc2	equ	0xFDE
 21882                           postdec2	equ	0xFDD
 21883                           plusw2	equ	0xFDB
 21884                           fsr2h	equ	0xFDA
 21885                           fsr2l	equ	0xFD9
 21886                           status	equ	0xFD8
 21887                           
 21888 ;; *************** function _Mdm_GetSmsData *****************
 21889 ;; Defined at:
 21890 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21891 ;; Parameters:    Size  Location     Type
 21892 ;;  MessageText     2   39[BANK0 ] PTR unsigned char 
 21893 ;;		 -> MyApp_Task@smsText(50), 
 21894 ;;  MessageHeade    2   41[BANK0 ] PTR unsigned char 
 21895 ;;		 -> MyApp_Task@smsNumber(14), 
 21896 ;; Auto vars:     Size  Location     Type
 21897 ;;  GetSmsStatus    1   43[BANK0 ] enum E8906
 21898 ;; Return value:  Size  Location     Type
 21899 ;;                  1    wreg      enum E8906
 21900 ;; Registers used:
 21901 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21902 ;; Tracked objects:
 21903 ;;		On entry : 0/0
 21904 ;;		On exit  : 0/0
 21905 ;;		Unchanged: 0/0
 21906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21907 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21910 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21911 ;;Total ram usage:        5 bytes
 21912 ;; Hardware stack levels used:    1
 21913 ;; Hardware stack levels required when called:   12
 21914 ;; This function calls:
 21915 ;;		_ReceiveEvt
 21916 ;;		_StringCopy
 21917 ;; This function is called by:
 21918 ;;		_MyApp_Task
 21919 ;; This function uses a non-reentrant model
 21920 ;;
 21921                           
 21922                           	psect	text101
 21923  004D28                     __ptext101:
 21924                           	opt stack 0
 21925  004D28                     _Mdm_GetSmsData:
 21926                           	opt stack 15
 21927                           
 21928                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 21929                           
 21930                           ; BSR set to: 0
 21931                           ;incstack = 0
 21932  004D28  0E00               	movlw	0
 21933  004D2A  0100               	movlb	0	; () banked
 21934  004D2C  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 21938  004D2E  0EDC               	movlw	low _SmsTxtReady
 21939  004D30  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21940  004D32  0E00               	movlw	high _SmsTxtReady
 21941  004D34  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21942  004D36  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 21943  004D3A  0900               	iorlw	0
 21944  004D3C  B4D8               	btfsc	status,2,c
 21945  004D3E  D02D               	goto	l1129
 21946                           
 21947                           ;mdm_gsm_gprs.c: 898: {
 21948                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer,MessageText,Mdm_SmsRx.TextLen +
      +                           1);
 21949  004D40  0E50               	movlw	low (_Mdm_SmsRx+80)
 21950  004D42  0100               	movlb	0	; () banked
 21951  004D44  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21952  004D46  0E07               	movlw	high (_Mdm_SmsRx+80)
 21953  004D48  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21954  004D4A  C087  F07F         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 21955  004D4E  C088  F080         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 21956  004D52  0E01               	movlw	1
 21957  004D54  0107               	movlb	7	; () banked
 21958  004D56  2583               	addwf	(_Mdm_SmsRx+131)& (0+255),w,b
 21959  004D58  0100               	movlb	0	; () banked
 21960  004D5A  6F81               	movwf	StringCopy@Len& (0+255),b
 21961  004D5C  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21962  004D5E  0E00               	movlw	0
 21963  004D60  2382               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 21964  004D62  EC4E  F028         	call	_StringCopy	;wreg free
 21965                           
 21966                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, MessageHeader,14);
 21967  004D66  0E15               	movlw	low (_Mdm_SmsRx+21)
 21968  004D68  0100               	movlb	0	; () banked
 21969  004D6A  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21970  004D6C  0E07               	movlw	high (_Mdm_SmsRx+21)
 21971  004D6E  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21972  004D70  C089  F07F         	movff	Mdm_GetSmsData@MessageHeader,StringCopy@DestStr
 21973  004D74  C08A  F080         	movff	Mdm_GetSmsData@MessageHeader+1,StringCopy@DestStr+1
 21974  004D78  0E00               	movlw	0
 21975  004D7A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 21976  004D7C  0E0E               	movlw	14
 21977  004D7E  6F81               	movwf	StringCopy@Len& (0+255),b
 21978  004D80  EC4E  F028         	call	_StringCopy	;wreg free
 21979                           
 21980                           ;mdm_gsm_gprs.c: 902: MessageHeader[13] = '\0';
 21981  004D84  0100               	movlb	0	; () banked
 21982  004D86  EE20 F00D          	lfsr	2,13
 21983  004D8A  5189               	movf	Mdm_GetSmsData@MessageHeader& (0+255),w,b
 21984  004D8C  26D9               	addwf	fsr2l,f,c
 21985  004D8E  518A               	movf	(Mdm_GetSmsData@MessageHeader+1)& (0+255),w,b
 21986  004D90  22DA               	addwfc	fsr2h,f,c
 21987  004D92  0E00               	movlw	0
 21988  004D94  6EDF               	movwf	indf2,c
 21989                           
 21990                           ; BSR set to: 0
 21991                           ;mdm_gsm_gprs.c: 904: GetSmsStatus = SmsDataReady;
 21992  004D96  0E01               	movlw	1
 21993  004D98  6F8B               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 21994  004D9A                     l1129:
 21995                           
 21996                           ;mdm_gsm_gprs.c: 905: }
 21997                           ;mdm_gsm_gprs.c: 908: return GetSmsStatus;
 21998                           
 21999                           ; BSR set to: 0
 22000  004D9A  0100               	movlb	0	; () banked
 22001  004D9C  518B               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 22002  004D9E  0012               	return	
 22003  004DA0                     __end_of_Mdm_GetSmsData:
 22004                           	opt stack 0
 22005                           tosu	equ	0xFFF
 22006                           tosh	equ	0xFFE
 22007                           tosl	equ	0xFFD
 22008                           pclath	equ	0xFFA
 22009                           tblptru	equ	0xFF8
 22010                           tblptrh	equ	0xFF7
 22011                           tblptrl	equ	0xFF6
 22012                           tablat	equ	0xFF5
 22013                           prodh	equ	0xFF4
 22014                           prodl	equ	0xFF3
 22015                           intcon	equ	0xFF2
 22016                           intcon2	equ	0xFF1
 22017                           intcon3	equ	0xFF0
 22018                           indf0	equ	0xFEF
 22019                           postinc0	equ	0xFEE
 22020                           plusw0	equ	0xFEB
 22021                           fsr0h	equ	0xFEA
 22022                           fsr0l	equ	0xFE9
 22023                           wreg	equ	0xFE8
 22024                           indf1	equ	0xFE7
 22025                           postinc1	equ	0xFE6
 22026                           postdec1	equ	0xFE5
 22027                           plusw1	equ	0xFE3
 22028                           fsr1h	equ	0xFE2
 22029                           fsr1l	equ	0xFE1
 22030                           indf2	equ	0xFDF
 22031                           postinc2	equ	0xFDE
 22032                           postdec2	equ	0xFDD
 22033                           plusw2	equ	0xFDB
 22034                           fsr2h	equ	0xFDA
 22035                           fsr2l	equ	0xFD9
 22036                           status	equ	0xFD8
 22037                           
 22038 ;; *************** function _Led_SetLedBlinkTime *****************
 22039 ;; Defined at:
 22040 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 22041 ;; Parameters:    Size  Location     Type
 22042 ;;  Led             1    wreg     unsigned char 
 22043 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 22044 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 22045 ;; Auto vars:     Size  Location     Type
 22046 ;;  Led             1   33[BANK0 ] unsigned char 
 22047 ;; Return value:  Size  Location     Type
 22048 ;;                  1    wreg      void 
 22049 ;; Registers used:
 22050 ;;		wreg, status,2, status,0
 22051 ;; Tracked objects:
 22052 ;;		On entry : 0/0
 22053 ;;		On exit  : 0/0
 22054 ;;		Unchanged: 0/0
 22055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22056 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22059 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22060 ;;Total ram usage:        5 bytes
 22061 ;; Hardware stack levels used:    1
 22062 ;; Hardware stack levels required when called:   11
 22063 ;; This function calls:
 22064 ;;		Nothing
 22065 ;; This function is called by:
 22066 ;;		_MyApp_Task
 22067 ;; This function uses a non-reentrant model
 22068 ;;
 22069                           
 22070                           	psect	text102
 22071  00541E                     __ptext102:
 22072                           	opt stack 0
 22073  00541E                     _Led_SetLedBlinkTime:
 22074                           	opt stack 16
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;incstack = 0
 22078                           ;Led_SetLedBlinkTime@Led stored from wreg
 22079  00541E  0100               	movlb	0	; () banked
 22080  005420  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 22081                           
 22082                           ;led.c: 374: switch (Led)
 22083  005422  D01B               	goto	l2113
 22084  005424                     l2114:
 22085                           
 22086                           ; BSR set to: 0
 22087                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 22088  005424  C07D  F376         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 22089  005428  C07E  F377         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 22090                           
 22091                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 22092  00542C  C07F  F378         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 22093  005430  C080  F379         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 22094                           
 22095                           ;led.c: 379: break;
 22096  005434  0012               	return	
 22097  005436                     l2116:
 22098                           
 22099                           ; BSR set to: 0
 22100                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 22101  005436  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22102  00543A  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22103                           
 22104                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 22105  00543E  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22106  005442  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22107                           
 22108                           ;led.c: 384: break;
 22109  005446  0012               	return	
 22110  005448                     l2117:
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 22114  005448  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 22115  00544C  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 22116                           
 22117                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 22118  005450  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 22119  005454  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 22120                           
 22121                           ; BSR set to: 0
 22122                           ;led.c: 393: }
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;led.c: 392: break;
 22126                           
 22127                           ;led.c: 391: default:
 22128                           
 22129                           ;led.c: 389: break;
 22130  005458  0012               	return	
 22131  00545A                     l2113:
 22132                           
 22133                           ; BSR set to: 0
 22134  00545A  0100               	movlb	0	; () banked
 22135  00545C  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 22136                           
 22137                           ; Switch size 1, requested type "space"
 22138                           ; Number of cases is 3, Range of values is 1 to 3
 22139                           ; switch strategies available:
 22140                           ; Name         Instructions Cycles
 22141                           ; simple_byte           10     6 (average)
 22142                           ;	Chosen strategy is simple_byte
 22143  00545E  0A01               	xorlw	1	; case 1
 22144  005460  B4D8               	btfsc	status,2,c
 22145  005462  D7E0               	goto	l2114
 22146  005464  0A03               	xorlw	3	; case 2
 22147  005466  B4D8               	btfsc	status,2,c
 22148  005468  D7E6               	goto	l2116
 22149  00546A  0A01               	xorlw	1	; case 3
 22150  00546C  A4D8               	btfss	status,2,c
 22151  00546E  0012               	return	
 22152  005470  D7EB               	goto	l2117
 22153  005472                     __end_of_Led_SetLedBlinkTime:
 22154                           	opt stack 0
 22155                           tosu	equ	0xFFF
 22156                           tosh	equ	0xFFE
 22157                           tosl	equ	0xFFD
 22158                           pclath	equ	0xFFA
 22159                           tblptru	equ	0xFF8
 22160                           tblptrh	equ	0xFF7
 22161                           tblptrl	equ	0xFF6
 22162                           tablat	equ	0xFF5
 22163                           prodh	equ	0xFF4
 22164                           prodl	equ	0xFF3
 22165                           intcon	equ	0xFF2
 22166                           intcon2	equ	0xFF1
 22167                           intcon3	equ	0xFF0
 22168                           indf0	equ	0xFEF
 22169                           postinc0	equ	0xFEE
 22170                           plusw0	equ	0xFEB
 22171                           fsr0h	equ	0xFEA
 22172                           fsr0l	equ	0xFE9
 22173                           wreg	equ	0xFE8
 22174                           indf1	equ	0xFE7
 22175                           postinc1	equ	0xFE6
 22176                           postdec1	equ	0xFE5
 22177                           plusw1	equ	0xFE3
 22178                           fsr1h	equ	0xFE2
 22179                           fsr1l	equ	0xFE1
 22180                           indf2	equ	0xFDF
 22181                           postinc2	equ	0xFDE
 22182                           postdec2	equ	0xFDD
 22183                           plusw2	equ	0xFDB
 22184                           fsr2h	equ	0xFDA
 22185                           fsr2l	equ	0xFD9
 22186                           status	equ	0xFD8
 22187                           
 22188 ;; *************** function _GetCallerNumber *****************
 22189 ;; Defined at:
 22190 ;;		line 1038 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22191 ;; Parameters:    Size  Location     Type
 22192 ;;		None
 22193 ;; Auto vars:     Size  Location     Type
 22194 ;;		None
 22195 ;; Return value:  Size  Location     Type
 22196 ;;                  2   35[BANK0 ] PTR unsigned char 
 22197 ;; Registers used:
 22198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22199 ;; Tracked objects:
 22200 ;;		On entry : 0/0
 22201 ;;		On exit  : 0/0
 22202 ;;		Unchanged: 0/0
 22203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22208 ;;Total ram usage:        2 bytes
 22209 ;; Hardware stack levels used:    1
 22210 ;; Hardware stack levels required when called:   12
 22211 ;; This function calls:
 22212 ;;		_ClearBuffer
 22213 ;;		_ReceiveEvt
 22214 ;; This function is called by:
 22215 ;;		_MyApp_Task
 22216 ;; This function uses a non-reentrant model
 22217 ;;
 22218                           
 22219                           	psect	text103
 22220  005B84                     __ptext103:
 22221                           	opt stack 0
 22222  005B84                     _GetCallerNumber:
 22223                           	opt stack 15
 22224                           
 22225                           ;mdm_gsm_gprs.c: 1040: if (!ReceiveEvt(&ClipEvent))
 22226                           
 22227                           ; BSR set to: 0
 22228                           ;incstack = 0
 22229  005B84  0EDF               	movlw	low _ClipEvent
 22230  005B86  0100               	movlb	0	; () banked
 22231  005B88  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22232  005B8A  0E00               	movlw	high _ClipEvent
 22233  005B8C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22234  005B8E  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 22235  005B92  0900               	iorlw	0
 22236  005B94  A4D8               	btfss	status,2,c
 22237  005B96  D00B               	goto	l1156
 22238                           
 22239                           ;mdm_gsm_gprs.c: 1041: {
 22240                           ;mdm_gsm_gprs.c: 1042: ClearBuffer(callerNumber, 14);
 22241  005B98  0E3D               	movlw	low _callerNumber
 22242  005B9A  0100               	movlb	0	; () banked
 22243  005B9C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 22244  005B9E  0E03               	movlw	high _callerNumber
 22245  005BA0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 22246  005BA2  0E00               	movlw	0
 22247  005BA4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 22248  005BA6  0E0E               	movlw	14
 22249  005BA8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 22250  005BAA  ECDD  F02D         	call	_ClearBuffer	;wreg free
 22251  005BAE                     l1156:
 22252                           
 22253                           ;mdm_gsm_gprs.c: 1043: }
 22254                           ;mdm_gsm_gprs.c: 1044: return callerNumber;
 22255  005BAE  0E3D               	movlw	low _callerNumber
 22256  005BB0  0100               	movlb	0	; () banked
 22257  005BB2  6F83               	movwf	?_GetCallerNumber& (0+255),b
 22258  005BB4  0E03               	movlw	high _callerNumber
 22259  005BB6  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 22260  005BB8  0012               	return	
 22261  005BBA                     __end_of_GetCallerNumber:
 22262                           	opt stack 0
 22263                           tosu	equ	0xFFF
 22264                           tosh	equ	0xFFE
 22265                           tosl	equ	0xFFD
 22266                           pclath	equ	0xFFA
 22267                           tblptru	equ	0xFF8
 22268                           tblptrh	equ	0xFF7
 22269                           tblptrl	equ	0xFF6
 22270                           tablat	equ	0xFF5
 22271                           prodh	equ	0xFF4
 22272                           prodl	equ	0xFF3
 22273                           intcon	equ	0xFF2
 22274                           intcon2	equ	0xFF1
 22275                           intcon3	equ	0xFF0
 22276                           indf0	equ	0xFEF
 22277                           postinc0	equ	0xFEE
 22278                           plusw0	equ	0xFEB
 22279                           fsr0h	equ	0xFEA
 22280                           fsr0l	equ	0xFE9
 22281                           wreg	equ	0xFE8
 22282                           indf1	equ	0xFE7
 22283                           postinc1	equ	0xFE6
 22284                           postdec1	equ	0xFE5
 22285                           plusw1	equ	0xFE3
 22286                           fsr1h	equ	0xFE2
 22287                           fsr1l	equ	0xFE1
 22288                           indf2	equ	0xFDF
 22289                           postinc2	equ	0xFDE
 22290                           postdec2	equ	0xFDD
 22291                           plusw2	equ	0xFDB
 22292                           fsr2h	equ	0xFDA
 22293                           fsr2l	equ	0xFD9
 22294                           status	equ	0xFD8
 22295                           
 22296 ;; *************** function _UartSetConfig *****************
 22297 ;; Defined at:
 22298 ;;		line 189 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22299 ;; Parameters:    Size  Location     Type
 22300 ;;		None
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;		None
 22303 ;; Return value:  Size  Location     Type
 22304 ;;                  1    wreg      void 
 22305 ;; Registers used:
 22306 ;;		wreg, status,2
 22307 ;; Tracked objects:
 22308 ;;		On entry : 0/0
 22309 ;;		On exit  : 0/0
 22310 ;;		Unchanged: 0/0
 22311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22316 ;;Total ram usage:        0 bytes
 22317 ;; Hardware stack levels used:    1
 22318 ;; Hardware stack levels required when called:   11
 22319 ;; This function calls:
 22320 ;;		Nothing
 22321 ;; This function is called by:
 22322 ;;		_Mdm_MainTask
 22323 ;; This function uses a non-reentrant model
 22324 ;;
 22325                           
 22326                           	psect	text104
 22327  005216                     __ptext104:
 22328                           	opt stack 0
 22329  005216                     _UartSetConfig:
 22330                           	opt stack 16
 22331                           
 22332                           ;mdm_gsm_gprs.c: 191: UartConfig.UartEnable = ((UINT8)(1));
 22333                           
 22334                           ; BSR set to: 0
 22335                           ;incstack = 0
 22336  005216  0E01               	movlw	1
 22337  005218  0103               	movlb	3	; () banked
 22338  00521A  6F28               	movwf	_UartConfig& (0+255),b
 22339                           
 22340                           ;mdm_gsm_gprs.c: 192: UartConfig.UartMode = ((UINT8)(0));
 22341  00521C  0E00               	movlw	0
 22342  00521E  6F29               	movwf	(_UartConfig+1)& (0+255),b
 22343                           
 22344                           ;mdm_gsm_gprs.c: 194: UartConfig.BaudRateMode = ((UINT8)(0));
 22345  005220  0E00               	movlw	0
 22346  005222  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 22347                           
 22348                           ;mdm_gsm_gprs.c: 199: UartConfig.HighBaudMode = ((UINT8)(0));
 22349  005224  0E00               	movlw	0
 22350  005226  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 22351                           
 22352                           ;mdm_gsm_gprs.c: 203: UartConfig.Tx9bitMode = ((UINT8)(0));
 22353  005228  0E00               	movlw	0
 22354  00522A  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 22355                           
 22356                           ;mdm_gsm_gprs.c: 204: UartConfig.Rx9bitMode = ((UINT8)(0));
 22357  00522C  0E00               	movlw	0
 22358  00522E  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 22359                           
 22360                           ;mdm_gsm_gprs.c: 205: UartConfig.TxEnable = ((UINT8)(1));
 22361  005230  0E01               	movlw	1
 22362  005232  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 22363                           
 22364                           ;mdm_gsm_gprs.c: 206: UartConfig.RxEnable = ((UINT8)(1));
 22365  005234  0E01               	movlw	1
 22366  005236  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 22367                           
 22368                           ;mdm_gsm_gprs.c: 207: UartConfig.SendBreakEnable = ((UINT8)(0));
 22369  005238  0E00               	movlw	0
 22370  00523A  6F30               	movwf	(_UartConfig+8)& (0+255),b
 22371                           
 22372                           ;mdm_gsm_gprs.c: 208: UartConfig.AutobaudEnable = ((UINT8)(0));
 22373  00523C  0E00               	movlw	0
 22374  00523E  6F31               	movwf	(_UartConfig+9)& (0+255),b
 22375                           
 22376                           ;mdm_gsm_gprs.c: 209: UartConfig.WakeUpEnable = ((UINT8)(0));
 22377  005240  0E00               	movlw	0
 22378  005242  6F32               	movwf	(_UartConfig+10)& (0+255),b
 22379                           
 22380                           ;mdm_gsm_gprs.c: 210: UartConfig.TxInterruptEnable = ((UINT8)(0));
 22381  005244  0E00               	movlw	0
 22382  005246  6F33               	movwf	(_UartConfig+11)& (0+255),b
 22383                           
 22384                           ;mdm_gsm_gprs.c: 211: UartConfig.RxInterruptEnable = ((UINT8)(1));
 22385  005248  0E01               	movlw	1
 22386  00524A  6F34               	movwf	(_UartConfig+12)& (0+255),b
 22387                           
 22388                           ;mdm_gsm_gprs.c: 212: UartConfig.McuBusClock = ((UINT32)(48000000));
 22389  00524C  0E00               	movlw	0
 22390  00524E  6F35               	movwf	(_UartConfig+13)& (0+255),b
 22391  005250  0E6C               	movlw	108
 22392  005252  6F36               	movwf	(_UartConfig+14)& (0+255),b
 22393  005254  0EDC               	movlw	220
 22394  005256  6F37               	movwf	(_UartConfig+15)& (0+255),b
 22395  005258  0E02               	movlw	2
 22396  00525A  6F38               	movwf	(_UartConfig+16)& (0+255),b
 22397                           
 22398                           ;mdm_gsm_gprs.c: 214: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22399  00525C  0E80               	movlw	128
 22400  00525E  6F39               	movwf	(_UartConfig+17)& (0+255),b
 22401  005260  0E25               	movlw	37
 22402  005262  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 22403  005264  0E00               	movlw	0
 22404  005266  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 22405  005268  0E00               	movlw	0
 22406  00526A  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 22407                           
 22408                           ; BSR set to: 3
 22409  00526C  0012               	return		;funcret
 22410  00526E                     __end_of_UartSetConfig:
 22411                           	opt stack 0
 22412                           tosu	equ	0xFFF
 22413                           tosh	equ	0xFFE
 22414                           tosl	equ	0xFFD
 22415                           pclath	equ	0xFFA
 22416                           tblptru	equ	0xFF8
 22417                           tblptrh	equ	0xFF7
 22418                           tblptrl	equ	0xFF6
 22419                           tablat	equ	0xFF5
 22420                           prodh	equ	0xFF4
 22421                           prodl	equ	0xFF3
 22422                           intcon	equ	0xFF2
 22423                           intcon2	equ	0xFF1
 22424                           intcon3	equ	0xFF0
 22425                           indf0	equ	0xFEF
 22426                           postinc0	equ	0xFEE
 22427                           plusw0	equ	0xFEB
 22428                           fsr0h	equ	0xFEA
 22429                           fsr0l	equ	0xFE9
 22430                           wreg	equ	0xFE8
 22431                           indf1	equ	0xFE7
 22432                           postinc1	equ	0xFE6
 22433                           postdec1	equ	0xFE5
 22434                           plusw1	equ	0xFE3
 22435                           fsr1h	equ	0xFE2
 22436                           fsr1l	equ	0xFE1
 22437                           indf2	equ	0xFDF
 22438                           postinc2	equ	0xFDE
 22439                           postdec2	equ	0xFDD
 22440                           plusw2	equ	0xFDB
 22441                           fsr2h	equ	0xFDA
 22442                           fsr2l	equ	0xFD9
 22443                           status	equ	0xFD8
 22444                           
 22445 ;; *************** function _TurnOnModem *****************
 22446 ;; Defined at:
 22447 ;;		line 375 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22448 ;; Parameters:    Size  Location     Type
 22449 ;;		None
 22450 ;; Auto vars:     Size  Location     Type
 22451 ;;		None
 22452 ;; Return value:  Size  Location     Type
 22453 ;;                  1    wreg      void 
 22454 ;; Registers used:
 22455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22456 ;; Tracked objects:
 22457 ;;		On entry : 0/0
 22458 ;;		On exit  : 0/0
 22459 ;;		Unchanged: 0/0
 22460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22465 ;;Total ram usage:        0 bytes
 22466 ;; Hardware stack levels used:    1
 22467 ;; Hardware stack levels required when called:   12
 22468 ;; This function calls:
 22469 ;;		_GenerateEvt
 22470 ;; This function is called by:
 22471 ;;		_Mdm_MainTask
 22472 ;; This function uses a non-reentrant model
 22473 ;;
 22474                           
 22475                           	psect	text105
 22476  0056F0                     __ptext105:
 22477                           	opt stack 0
 22478  0056F0                     _TurnOnModem:
 22479                           	opt stack 15
 22480                           
 22481                           ;mdm_gsm_gprs.c: 377: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22482                           ;mdm_gsm_gprs.c: 378: static UINT16 Counter = 0;
 22483                           ;mdm_gsm_gprs.c: 380: switch (TurnOnMdmState)
 22484                           
 22485                           ; BSR set to: 3
 22486                           ;incstack = 0
 22487  0056F0  D01B               	goto	l1009
 22488  0056F2                     
 22489                           ;mdm_gsm_gprs.c: 384: Counter++;
 22490  0056F2  0102               	movlb	2	; () banked
 22491  0056F4  4BD9               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22492  0056F6  2BDA               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22493                           
 22494                           ; BSR set to: 2
 22495                           ;mdm_gsm_gprs.c: 386: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22496  0056F8  0EB8               	movlw	184
 22497  0056FA  5DD9               	subwf	TurnOnModem@Counter& (0+255),w,b
 22498  0056FC  0E0B               	movlw	11
 22499  0056FE  59DA               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22500  005700  A0D8               	btfss	status,0,c
 22501  005702  0012               	return	
 22502                           
 22503                           ; BSR set to: 2
 22504                           ;mdm_gsm_gprs.c: 387: {
 22505                           ;mdm_gsm_gprs.c: 389: TurnOnMdmState = TurnOnModuleReq;
 22506  005704  0E01               	movlw	1
 22507  005706  0101               	movlb	1	; () banked
 22508  005708  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22509                           
 22510                           ; BSR set to: 1
 22511                           ;mdm_gsm_gprs.c: 390: }
 22512                           ;mdm_gsm_gprs.c: 391: break;
 22513  00570A  0012               	return	
 22514  00570C                     
 22515                           ; BSR set to: 1
 22516                           ;mdm_gsm_gprs.c: 395: GenerateEvt(&MdmOnOffPulseRequest);
 22517                           
 22518                           ; BSR set to: 1
 22519  00570C  0EE2               	movlw	low _MdmOnOffPulseRequest
 22520  00570E  0100               	movlb	0	; () banked
 22521  005710  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22522  005712  0E00               	movlw	high _MdmOnOffPulseRequest
 22523  005714  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22524  005716  EC7F  F030         	call	_GenerateEvt	;wreg free
 22525                           
 22526                           ;mdm_gsm_gprs.c: 397: MdmStatus = ModemOn;
 22527  00571A  0E01               	movlw	1
 22528  00571C  0100               	movlb	0	; () banked
 22529  00571E  6FD3               	movwf	_MdmStatus& (0+255),b
 22530                           
 22531                           ; BSR set to: 0
 22532                           ;mdm_gsm_gprs.c: 399: TurnOnMdmState = Stop;
 22533  005720  0E02               	movlw	2
 22534  005722  0101               	movlb	1	; () banked
 22535  005724  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 22536                           
 22537                           ; BSR set to: 1
 22538                           ;mdm_gsm_gprs.c: 407: }
 22539                           
 22540                           ; BSR set to: 1
 22541                           ;mdm_gsm_gprs.c: 406: break;
 22542                           
 22543                           ;mdm_gsm_gprs.c: 405: default:
 22544                           
 22545                           ; BSR set to: 1
 22546                           ;mdm_gsm_gprs.c: 403: break;
 22547                           
 22548                           ;mdm_gsm_gprs.c: 402: case Stop:
 22549                           
 22550                           ;mdm_gsm_gprs.c: 400: break;
 22551  005726  0012               	return	
 22552  005728                     l1009:
 22553                           
 22554                           ; BSR set to: 1
 22555  005728  0101               	movlb	1	; () banked
 22556  00572A  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 22557                           
 22558                           ; Switch size 1, requested type "space"
 22559                           ; Number of cases is 3, Range of values is 0 to 2
 22560                           ; switch strategies available:
 22561                           ; Name         Instructions Cycles
 22562                           ; simple_byte           10     6 (average)
 22563                           ;	Chosen strategy is simple_byte
 22564  00572C  0A00               	xorlw	0	; case 0
 22565  00572E  B4D8               	btfsc	status,2,c
 22566  005730  D7E0               	goto	l1010
 22567  005732  0A01               	xorlw	1	; case 1
 22568  005734  B4D8               	btfsc	status,2,c
 22569  005736  D7EA               	goto	l1013
 22570  005738  0A03               	xorlw	3	; case 2
 22571  00573A  0012               	return	
 22572  00573C                     __end_of_TurnOnModem:
 22573                           	opt stack 0
 22574                           tosu	equ	0xFFF
 22575                           tosh	equ	0xFFE
 22576                           tosl	equ	0xFFD
 22577                           pclath	equ	0xFFA
 22578                           tblptru	equ	0xFF8
 22579                           tblptrh	equ	0xFF7
 22580                           tblptrl	equ	0xFF6
 22581                           tablat	equ	0xFF5
 22582                           prodh	equ	0xFF4
 22583                           prodl	equ	0xFF3
 22584                           intcon	equ	0xFF2
 22585                           intcon2	equ	0xFF1
 22586                           intcon3	equ	0xFF0
 22587                           indf0	equ	0xFEF
 22588                           postinc0	equ	0xFEE
 22589                           plusw0	equ	0xFEB
 22590                           fsr0h	equ	0xFEA
 22591                           fsr0l	equ	0xFE9
 22592                           wreg	equ	0xFE8
 22593                           indf1	equ	0xFE7
 22594                           postinc1	equ	0xFE6
 22595                           postdec1	equ	0xFE5
 22596                           plusw1	equ	0xFE3
 22597                           fsr1h	equ	0xFE2
 22598                           fsr1l	equ	0xFE1
 22599                           indf2	equ	0xFDF
 22600                           postinc2	equ	0xFDE
 22601                           postdec2	equ	0xFDD
 22602                           plusw2	equ	0xFDB
 22603                           fsr2h	equ	0xFDA
 22604                           fsr2l	equ	0xFD9
 22605                           status	equ	0xFD8
 22606                           
 22607 ;; *************** function _SendSmsSm *****************
 22608 ;; Defined at:
 22609 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22610 ;; Parameters:    Size  Location     Type
 22611 ;;		None
 22612 ;; Auto vars:     Size  Location     Type
 22613 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22614 ;; Return value:  Size  Location     Type
 22615 ;;                  1    wreg      void 
 22616 ;; Registers used:
 22617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22618 ;; Tracked objects:
 22619 ;;		On entry : 0/0
 22620 ;;		On exit  : 0/0
 22621 ;;		Unchanged: 0/0
 22622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22624 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22625 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22626 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22627 ;;Total ram usage:       52 bytes
 22628 ;; Hardware stack levels used:    1
 22629 ;; Hardware stack levels required when called:   14
 22630 ;; This function calls:
 22631 ;;		_OsTmr_GetTimerStatus
 22632 ;;		_OsTmr_StartTimer
 22633 ;;		_ReceiveEvt
 22634 ;;		_StringCopy
 22635 ;;		_Uart_WriteStringLen
 22636 ;; This function is called by:
 22637 ;;		_Mdm_MainTask
 22638 ;; This function uses a non-reentrant model
 22639 ;;
 22640                           
 22641                           	psect	text106
 22642  0019F2                     __ptext106:
 22643                           	opt stack 0
 22644  0019F2                     _SendSmsSm:
 22645                           	opt stack 13
 22646                           
 22647                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22648                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22649                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22650                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 22651                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 22652                           
 22653                           ;incstack = 0
 22654  0019F2  0E03               	movlw	3
 22655  0019F4  0100               	movlb	0	; () banked
 22656  0019F6  19D3               	xorwf	_MdmStatus& (0+255),w,b
 22657  0019F8  A4D8               	btfss	status,2,c
 22658  0019FA  0012               	return	
 22659  0019FC  D0C1               	goto	l1091
 22660  0019FE                     
 22661                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 22662                           
 22663                           ; BSR set to: 0
 22664  0019FE  0EE1               	movlw	low _SendSmsEvent
 22665  001A00  0100               	movlb	0	; () banked
 22666  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22667  001A04  0E00               	movlw	high _SendSmsEvent
 22668  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22669  001A08  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 22670  001A0C  0900               	iorlw	0
 22671  001A0E  B4D8               	btfsc	status,2,c
 22672  001A10  0012               	return	
 22673                           
 22674                           ;mdm_gsm_gprs.c: 671: {
 22675                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 22676  001A12  0E01               	movlw	1
 22677  001A14  0101               	movlb	1	; () banked
 22678  001A16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22679                           
 22680                           ; BSR set to: 1
 22681                           ;mdm_gsm_gprs.c: 674: }
 22682                           ;mdm_gsm_gprs.c: 675: break;
 22683  001A18  0012               	return	
 22684  001A1A                     
 22685                           ; BSR set to: 1
 22686                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 22687                           
 22688                           ; BSR set to: 1
 22689  001A1A  0ECD               	movlw	low STR_5
 22690  001A1C  0100               	movlb	0	; () banked
 22691  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22692  001A20  0EFF               	movlw	high STR_5
 22693  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22694  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 22695  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22696  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 22697  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22698  001A2C  0E00               	movlw	0
 22699  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22700  001A30  0E09               	movlw	9
 22701  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 22702  001A34  EC4E  F028         	call	_StringCopy	;wreg free
 22703                           
 22704                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 22705  001A38  0EB8               	movlw	low _PhoneNumber
 22706  001A3A  0100               	movlb	0	; () banked
 22707  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22708  001A3E  0E04               	movlw	high _PhoneNumber
 22709  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22710  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 22711  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22712  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 22713  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22714  001A4A  C0D4  F081         	movff	_PhoneNumbLen,StringCopy@Len
 22715  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22716  001A50  EC4E  F028         	call	_StringCopy	;wreg free
 22717                           
 22718                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 22719  001A54  0100               	movlb	0	; () banked
 22720  001A56  51D4               	movf	_PhoneNumbLen& (0+255),w,b
 22721  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22722  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22723  001A5C  0E09               	movlw	9
 22724  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22725  001A60  0E00               	movlw	0
 22726  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22727  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 22728  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22729  001A68  6ED9               	movwf	fsr2l,c
 22730  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 22731  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22732  001A6E  6EDA               	movwf	fsr2h,c
 22733  001A70  0E22               	movlw	34
 22734  001A72  6EDF               	movwf	indf2,c
 22735                           
 22736                           ; BSR set to: 0
 22737                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 22738  001A74  51D4               	movf	_PhoneNumbLen& (0+255),w,b
 22739  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 22740  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 22741  001A7A  0E0A               	movlw	10
 22742  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 22743  001A7E  0E00               	movlw	0
 22744  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 22745  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 22746  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 22747  001A86  6ED9               	movwf	fsr2l,c
 22748  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 22749  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 22750  001A8C  6EDA               	movwf	fsr2h,c
 22751  001A8E  0E0D               	movlw	13
 22752  001A90  6EDF               	movwf	indf2,c
 22753                           
 22754                           ; BSR set to: 0
 22755                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 22756  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 22757  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22758  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 22759  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22760  001A9A  51D4               	movf	_PhoneNumbLen& (0+255),w,b
 22761  001A9C  0F0B               	addlw	11
 22762  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22763  001AA0  0E01               	movlw	1
 22764  001AA2  ECD0  F02C         	call	_Uart_WriteStringLen
 22765                           
 22766                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 22767  001AA6  0EE7               	movlw	low SendSmsSm@SwTimer
 22768  001AA8  0100               	movlb	0	; () banked
 22769  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 22770  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 22771  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 22772  001AB0  0EC4               	movlw	196
 22773  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 22774  001AB4  0E09               	movlw	9
 22775  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 22776  001AB8  0E00               	movlw	0
 22777  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 22778  001ABC  0E00               	movlw	0
 22779  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 22780  001AC0  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 22781                           
 22782                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 22783  001AC4  0E05               	movlw	5
 22784  001AC6  0101               	movlb	1	; () banked
 22785  001AC8  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22786                           
 22787                           ; BSR set to: 1
 22788                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 22789  001ACA  0E02               	movlw	2
 22790  001ACC  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 22791                           
 22792                           ;mdm_gsm_gprs.c: 691: break;
 22793  001ACE  0012               	return	
 22794  001AD0                     
 22795                           ; BSR set to: 1
 22796                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 22797                           
 22798                           ; BSR set to: 1
 22799  001AD0  0E0A               	movlw	10
 22800  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 22801                           
 22802                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 22803  001AD4  0E0D               	movlw	13
 22804  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 22805                           
 22806                           ; BSR set to: 1
 22807                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 22808  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 22809  001ADA  0100               	movlb	0	; () banked
 22810  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22811  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 22812  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22813  001AE2  0E02               	movlw	2
 22814  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22815  001AE6  0E01               	movlw	1
 22816  001AE8  ECD0  F02C         	call	_Uart_WriteStringLen
 22817                           
 22818                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 22819  001AEC  0E03               	movlw	3
 22820  001AEE  0101               	movlb	1	; () banked
 22821  001AF0  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22822                           
 22823                           ;mdm_gsm_gprs.c: 701: break;
 22824  001AF2  0012               	return	
 22825  001AF4                     
 22826                           ; BSR set to: 1
 22827                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 22828                           
 22829                           ; BSR set to: 1
 22830  001AF4  0E3C               	movlw	low _NewStringReceived
 22831  001AF6  0100               	movlb	0	; () banked
 22832  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22833  001AFA  0E00               	movlw	high _NewStringReceived
 22834  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22835  001AFE  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 22836  001B02  0900               	iorlw	0
 22837  001B04  B4D8               	btfsc	status,2,c
 22838  001B06  0012               	return	
 22839                           
 22840                           ;mdm_gsm_gprs.c: 706: {
 22841                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 22842  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 22843  001B0C  0A3E               	xorlw	62
 22844  001B0E  A4D8               	btfss	status,2,c
 22845  001B10  0012               	return	
 22846                           
 22847                           ;mdm_gsm_gprs.c: 709: {
 22848                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 22849  001B12  0E04               	movlw	4
 22850  001B14  0101               	movlb	1	; () banked
 22851  001B16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22852                           
 22853                           ; BSR set to: 1
 22854                           ;mdm_gsm_gprs.c: 712: }
 22855                           ;mdm_gsm_gprs.c: 713: }
 22856                           ;mdm_gsm_gprs.c: 714: break;
 22857                           
 22858                           ; BSR set to: 1
 22859  001B18  0012               	return	
 22860  001B1A                     
 22861                           ; BSR set to: 1
 22862                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 22863                           
 22864                           ; BSR set to: 1
 22865  001B1A  0EC4               	movlw	low _MessageText
 22866  001B1C  0100               	movlb	0	; () banked
 22867  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22868  001B20  0E07               	movlw	high _MessageText
 22869  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22870  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 22871  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22872  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 22873  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22874  001B2C  C0D5  F081         	movff	_SmsLen,StringCopy@Len
 22875  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 22876  001B32  EC4E  F028         	call	_StringCopy	;wreg free
 22877                           
 22878                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 22879  001B36  0100               	movlb	0	; () banked
 22880  001B38  51D5               	movf	_SmsLen& (0+255),w,b
 22881  001B3A  0D01               	mullw	1
 22882  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 22883  001B3E  24F3               	addwf	prodl,w,c
 22884  001B40  6ED9               	movwf	fsr2l,c
 22885  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 22886  001B44  20F4               	addwfc	prodh,w,c
 22887  001B46  6EDA               	movwf	fsr2h,c
 22888  001B48  0E1A               	movlw	26
 22889  001B4A  6EDF               	movwf	indf2,c
 22890                           
 22891                           ; BSR set to: 0
 22892                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 22893  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 22894  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 22895  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 22896  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 22897  001B54  29D5               	incf	_SmsLen& (0+255),w,b
 22898  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 22899  001B58  0E01               	movlw	1
 22900  001B5A  ECD0  F02C         	call	_Uart_WriteStringLen
 22901                           
 22902                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 22903  001B5E  0E00               	movlw	0
 22904  001B60  0101               	movlb	1	; () banked
 22905  001B62  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22906                           
 22907                           ;mdm_gsm_gprs.c: 725: break;
 22908  001B64  0012               	return	
 22909  001B66                     
 22910                           ; BSR set to: 1
 22911                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 22912                           
 22913                           ; BSR set to: 1
 22914  001B66  0EE7               	movlw	low SendSmsSm@SwTimer
 22915  001B68  0100               	movlb	0	; () banked
 22916  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 22917  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 22918  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 22919  001B70  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 22920  001B74  06E8               	decf	wreg,f,c
 22921  001B76  A4D8               	btfss	status,2,c
 22922  001B78  0012               	return	
 22923                           
 22924                           ;mdm_gsm_gprs.c: 730: {
 22925                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 22926  001B7A  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 22927                           
 22928                           ;mdm_gsm_gprs.c: 738: }
 22929                           
 22930                           ;mdm_gsm_gprs.c: 737: break;
 22931                           
 22932                           ;mdm_gsm_gprs.c: 736: default:
 22933                           
 22934                           ;mdm_gsm_gprs.c: 733: }
 22935                           ;mdm_gsm_gprs.c: 734: break;
 22936  001B7E  0012               	return	
 22937  001B80                     l1091:
 22938  001B80  0101               	movlb	1	; () banked
 22939  001B82  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 22940                           
 22941                           ; Switch size 1, requested type "space"
 22942                           ; Number of cases is 6, Range of values is 0 to 5
 22943                           ; switch strategies available:
 22944                           ; Name         Instructions Cycles
 22945                           ; simple_byte           19    10 (average)
 22946                           ;	Chosen strategy is simple_byte
 22947  001B84  0A00               	xorlw	0	; case 0
 22948  001B86  B4D8               	btfsc	status,2,c
 22949  001B88  D73A               	goto	l1092
 22950  001B8A  0A01               	xorlw	1	; case 1
 22951  001B8C  B4D8               	btfsc	status,2,c
 22952  001B8E  D745               	goto	l1095
 22953  001B90  0A03               	xorlw	3	; case 2
 22954  001B92  B4D8               	btfsc	status,2,c
 22955  001B94  D79D               	goto	l1096
 22956  001B96  0A01               	xorlw	1	; case 3
 22957  001B98  B4D8               	btfsc	status,2,c
 22958  001B9A  D7AC               	goto	l1097
 22959  001B9C  0A07               	xorlw	7	; case 4
 22960  001B9E  B4D8               	btfsc	status,2,c
 22961  001BA0  D7BC               	goto	l1100
 22962  001BA2  0A01               	xorlw	1	; case 5
 22963  001BA4  A4D8               	btfss	status,2,c
 22964                           
 22965                           ; BSR set to: 1
 22966  001BA6  0012               	return	
 22967  001BA8  D7DE               	goto	l1101
 22968  001BAA                     __end_of_SendSmsSm:
 22969                           	opt stack 0
 22970                           tosu	equ	0xFFF
 22971                           tosh	equ	0xFFE
 22972                           tosl	equ	0xFFD
 22973                           pclath	equ	0xFFA
 22974                           tblptru	equ	0xFF8
 22975                           tblptrh	equ	0xFF7
 22976                           tblptrl	equ	0xFF6
 22977                           tablat	equ	0xFF5
 22978                           prodh	equ	0xFF4
 22979                           prodl	equ	0xFF3
 22980                           intcon	equ	0xFF2
 22981                           intcon2	equ	0xFF1
 22982                           intcon3	equ	0xFF0
 22983                           indf0	equ	0xFEF
 22984                           postinc0	equ	0xFEE
 22985                           plusw0	equ	0xFEB
 22986                           fsr0h	equ	0xFEA
 22987                           fsr0l	equ	0xFE9
 22988                           wreg	equ	0xFE8
 22989                           indf1	equ	0xFE7
 22990                           postinc1	equ	0xFE6
 22991                           postdec1	equ	0xFE5
 22992                           plusw1	equ	0xFE3
 22993                           fsr1h	equ	0xFE2
 22994                           fsr1l	equ	0xFE1
 22995                           indf2	equ	0xFDF
 22996                           postinc2	equ	0xFDE
 22997                           postdec2	equ	0xFDD
 22998                           plusw2	equ	0xFDB
 22999                           fsr2h	equ	0xFDA
 23000                           fsr2l	equ	0xFD9
 23001                           status	equ	0xFD8
 23002                           
 23003 ;; *************** function _Uart_WriteStringLen *****************
 23004 ;; Defined at:
 23005 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;  Module          1    wreg     unsigned char 
 23008 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 23009 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 23010 ;;  Len             1   34[BANK0 ] unsigned char 
 23011 ;; Auto vars:     Size  Location     Type
 23012 ;;  Module          1   36[BANK0 ] unsigned char 
 23013 ;;  Index           1   35[BANK0 ] unsigned char 
 23014 ;; Return value:  Size  Location     Type
 23015 ;;                  1    wreg      void 
 23016 ;; Registers used:
 23017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23018 ;; Tracked objects:
 23019 ;;		On entry : 0/0
 23020 ;;		On exit  : 0/0
 23021 ;;		Unchanged: 0/0
 23022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23023 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23026 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23027 ;;Total ram usage:        5 bytes
 23028 ;; Hardware stack levels used:    1
 23029 ;; Hardware stack levels required when called:   12
 23030 ;; This function calls:
 23031 ;;		_UartTxBufferStatus
 23032 ;;		_UartWriteByte
 23033 ;; This function is called by:
 23034 ;;		_SendSmsSm
 23035 ;;		_GsmGprsTerminal
 23036 ;; This function uses a non-reentrant model
 23037 ;;
 23038                           
 23039                           	psect	text107
 23040  0059A0                     __ptext107:
 23041                           	opt stack 0
 23042  0059A0                     _Uart_WriteStringLen:
 23043                           	opt stack 14
 23044                           
 23045                           ;incstack = 0
 23046                           ;Uart_WriteStringLen@Module stored from wreg
 23047  0059A0  0100               	movlb	0	; () banked
 23048  0059A2  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 23049                           
 23050                           ;uart_drv.c: 544: UINT8 Index;
 23051                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 23052  0059A4  0E00               	movlw	0
 23053  0059A6  0100               	movlb	0	; () banked
 23054  0059A8  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 23055  0059AA  D015               	goto	l715
 23056  0059AC                     
 23057                           ; BSR set to: 0
 23058                           ;uart_drv.c: 547: {
 23059                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 23060                           
 23061                           ; BSR set to: 0
 23062  0059AC  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 23063  0059B0  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 23064  0059B4  50DF               	movf	indf2,w,c
 23065  0059B6  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 23066  0059B8  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23067  0059BA  ECF7  F02F         	call	_UartWriteByte
 23068                           
 23069                           ;uart_drv.c: 551: StringToWrite++;
 23070  0059BE  0100               	movlb	0	; () banked
 23071  0059C0  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 23072  0059C2  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 23073  0059C4                     
 23074                           ; BSR set to: 0
 23075                           
 23076                           ; BSR set to: 0
 23077  0059C4  0100               	movlb	0	; () banked
 23078  0059C6  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23079  0059C8  EC04  F02B         	call	_UartTxBufferStatus
 23080  0059CC  06E8               	decf	wreg,f,c
 23081  0059CE  B4D8               	btfsc	status,2,c
 23082  0059D0  D7F9               	goto	l718
 23083  0059D2  0100               	movlb	0	; () banked
 23084  0059D4  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 23085  0059D6                     l715:
 23086                           
 23087                           ; BSR set to: 0
 23088                           
 23089                           ; BSR set to: 0
 23090  0059D6  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 23091  0059D8  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 23092  0059DA  B0D8               	btfsc	status,0,c
 23093  0059DC  0012               	return	
 23094  0059DE  D7E6               	goto	l716
 23095  0059E0                     __end_of_Uart_WriteStringLen:
 23096                           	opt stack 0
 23097                           tosu	equ	0xFFF
 23098                           tosh	equ	0xFFE
 23099                           tosl	equ	0xFFD
 23100                           pclath	equ	0xFFA
 23101                           tblptru	equ	0xFF8
 23102                           tblptrh	equ	0xFF7
 23103                           tblptrl	equ	0xFF6
 23104                           tablat	equ	0xFF5
 23105                           prodh	equ	0xFF4
 23106                           prodl	equ	0xFF3
 23107                           intcon	equ	0xFF2
 23108                           intcon2	equ	0xFF1
 23109                           intcon3	equ	0xFF0
 23110                           indf0	equ	0xFEF
 23111                           postinc0	equ	0xFEE
 23112                           plusw0	equ	0xFEB
 23113                           fsr0h	equ	0xFEA
 23114                           fsr0l	equ	0xFE9
 23115                           wreg	equ	0xFE8
 23116                           indf1	equ	0xFE7
 23117                           postinc1	equ	0xFE6
 23118                           postdec1	equ	0xFE5
 23119                           plusw1	equ	0xFE3
 23120                           fsr1h	equ	0xFE2
 23121                           fsr1l	equ	0xFE1
 23122                           indf2	equ	0xFDF
 23123                           postinc2	equ	0xFDE
 23124                           postdec2	equ	0xFDD
 23125                           plusw2	equ	0xFDB
 23126                           fsr2h	equ	0xFDA
 23127                           fsr2l	equ	0xFD9
 23128                           status	equ	0xFD8
 23129                           
 23130 ;; *************** function _ModemEvtParser *****************
 23131 ;; Defined at:
 23132 ;;		line 498 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23133 ;; Parameters:    Size  Location     Type
 23134 ;;		None
 23135 ;; Auto vars:     Size  Location     Type
 23136 ;;  CallReadyStr   10   48[BANK0 ] unsigned char [10]
 23137 ;;  SmsString       5   63[BANK0 ] unsigned char [5]
 23138 ;;  ClipString      5   58[BANK0 ] unsigned char [5]
 23139 ;;  RingString      4   68[BANK0 ] unsigned char [4]
 23140 ;;  CompareIdx      1   73[BANK0 ] unsigned char 
 23141 ;;  Match           1   72[BANK0 ] unsigned char 
 23142 ;; Return value:  Size  Location     Type
 23143 ;;                  1    wreg      void 
 23144 ;; Registers used:
 23145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23146 ;; Tracked objects:
 23147 ;;		On entry : 0/0
 23148 ;;		On exit  : 0/0
 23149 ;;		Unchanged: 0/0
 23150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23152 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23154 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23155 ;;Total ram usage:       26 bytes
 23156 ;; Hardware stack levels used:    1
 23157 ;; Hardware stack levels required when called:   12
 23158 ;; This function calls:
 23159 ;;		_GenerateEvt
 23160 ;;		_ReceiveEvt
 23161 ;;		_StringCompare
 23162 ;;		_StringCopy
 23163 ;;		_Uart_ClearRxBuffer
 23164 ;; This function is called by:
 23165 ;;		_Mdm_MainTask
 23166 ;; This function uses a non-reentrant model
 23167 ;;
 23168                           
 23169                           	psect	text108
 23170  001BAA                     __ptext108:
 23171                           	opt stack 0
 23172  001BAA                     _ModemEvtParser:
 23173                           	opt stack 15
 23174                           
 23175                           ;mdm_gsm_gprs.c: 500: UINT8 RingString[] = {'R','I','N','G'};
 23176                           
 23177                           ; BSR set to: 0
 23178                           ;incstack = 0
 23179  001BAA  C3C8  F0A4         	movff	ModemEvtParser@F9091,ModemEvtParser@RingString
 23180  001BAE  C3C9  F0A5         	movff	ModemEvtParser@F9091+1,ModemEvtParser@RingString+1
 23181  001BB2  C3CA  F0A6         	movff	ModemEvtParser@F9091+2,ModemEvtParser@RingString+2
 23182  001BB6  C3CB  F0A7         	movff	ModemEvtParser@F9091+3,ModemEvtParser@RingString+3
 23183                           
 23184                           ;mdm_gsm_gprs.c: 501: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 23185  001BBA  EE23  F0C3         	lfsr	2,ModemEvtParser@F9093
 23186  001BBE  EE10  F09A         	lfsr	1,ModemEvtParser@ClipString
 23187  001BC2  0E04               	movlw	4
 23188  001BC4                     u13301:
 23189  001BC4  CFDB FFE3          	movff	plusw2,plusw1
 23190  001BC8  06E8               	decf	wreg,f,c
 23191  001BCA  E2FC               	bc	u13301
 23192                           
 23193                           ;mdm_gsm_gprs.c: 502: UINT8 SmsString[] = {'+','C','M','T','I'};
 23194  001BCC  EE23  F0BE         	lfsr	2,ModemEvtParser@F9095
 23195  001BD0  EE10  F09F         	lfsr	1,ModemEvtParser@SmsString
 23196  001BD4  0E04               	movlw	4
 23197  001BD6                     u13311:
 23198  001BD6  CFDB FFE3          	movff	plusw2,plusw1
 23199  001BDA  06E8               	decf	wreg,f,c
 23200  001BDC  E2FC               	bc	u13311
 23201                           
 23202                           ;mdm_gsm_gprs.c: 503: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23203  001BDE  EE24  F0F0         	lfsr	2,ModemEvtParser@F9097
 23204  001BE2  EE10  F090         	lfsr	1,ModemEvtParser@CallReadyString
 23205  001BE6  0E09               	movlw	9
 23206  001BE8                     u13321:
 23207  001BE8  CFDB FFE3          	movff	plusw2,plusw1
 23208  001BEC  06E8               	decf	wreg,f,c
 23209  001BEE  E2FC               	bc	u13321
 23210                           
 23211                           ;mdm_gsm_gprs.c: 504: UINT8 CompareIdx = 0;
 23212  001BF0  0E00               	movlw	0
 23213  001BF2  0100               	movlb	0	; () banked
 23214  001BF4  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23215                           
 23216                           ; BSR set to: 0
 23217                           ;mdm_gsm_gprs.c: 505: UINT8 Match = 0;
 23218  001BF6  0E00               	movlw	0
 23219  001BF8  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23220                           
 23221                           ; BSR set to: 0
 23222                           ;mdm_gsm_gprs.c: 508: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23223  001BFA  0E3B               	movlw	low _NewMdmEvtParserRequest
 23224  001BFC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23225  001BFE  0E00               	movlw	high _NewMdmEvtParserRequest
 23226  001C00  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23227  001C02  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 23228  001C06  0900               	iorlw	0
 23229  001C08  B4D8               	btfsc	status,2,c
 23230  001C0A  0012               	return	
 23231                           
 23232                           ;mdm_gsm_gprs.c: 509: {
 23233                           ;mdm_gsm_gprs.c: 510: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 23234  001C0C  0E00               	movlw	0
 23235  001C0E  0100               	movlb	0	; () banked
 23236  001C10  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23237  001C12                     l13927:
 23238                           
 23239                           ; BSR set to: 0
 23240  001C12  0E03               	movlw	3
 23241  001C14  65A9               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23242  001C16  D077               	goto	l1052
 23243  001C18  D086               	goto	u13390
 23244  001C1A                     
 23245                           ; BSR set to: 0
 23246                           ;mdm_gsm_gprs.c: 516: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23247                           
 23248                           ; BSR set to: 0
 23249  001C1A  0EA4               	movlw	low ModemEvtParser@RingString
 23250  001C1C  6F85               	movwf	StringCompare@String1& (0+255),b
 23251  001C1E  0E00               	movlw	high ModemEvtParser@RingString
 23252  001C20  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23253  001C22  0E58               	movlw	low _RxBuffer
 23254  001C24  6F87               	movwf	StringCompare@String2& (0+255),b
 23255  001C26  0E0C               	movlw	high _RxBuffer
 23256  001C28  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23257  001C2A  0E00               	movlw	0
 23258  001C2C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23259  001C2E  0E04               	movlw	4
 23260  001C30  6F89               	movwf	StringCompare@Len& (0+255),b
 23261  001C32  EC63  F02A         	call	_StringCompare	;wreg free
 23262  001C36  0900               	iorlw	0
 23263  001C38  B4D8               	btfsc	status,2,c
 23264  001C3A  D072               	goto	l1055
 23265                           
 23266                           ;mdm_gsm_gprs.c: 517: {
 23267                           ;mdm_gsm_gprs.c: 519: GenerateEvt(&RingEvent);
 23268  001C3C  0EE0               	movlw	low _RingEvent
 23269  001C3E  0100               	movlb	0	; () banked
 23270  001C40  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23271  001C42  0E00               	movlw	high _RingEvent
 23272  001C44  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23273  001C46  EC7F  F030         	call	_GenerateEvt	;wreg free
 23274  001C4A  D043               	goto	l13951
 23275  001C4C                     
 23276                           ; BSR set to: 0
 23277                           ;mdm_gsm_gprs.c: 527: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 23278                           
 23279                           ; BSR set to: 0
 23280  001C4C  0E9A               	movlw	low ModemEvtParser@ClipString
 23281  001C4E  6F85               	movwf	StringCompare@String1& (0+255),b
 23282  001C50  0E00               	movlw	high ModemEvtParser@ClipString
 23283  001C52  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23284  001C54  0E58               	movlw	low _RxBuffer
 23285  001C56  6F87               	movwf	StringCompare@String2& (0+255),b
 23286  001C58  0E0C               	movlw	high _RxBuffer
 23287  001C5A  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23288  001C5C  0E00               	movlw	0
 23289  001C5E  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23290  001C60  0E05               	movlw	5
 23291  001C62  6F89               	movwf	StringCompare@Len& (0+255),b
 23292  001C64  EC63  F02A         	call	_StringCompare	;wreg free
 23293  001C68  0900               	iorlw	0
 23294  001C6A  B4D8               	btfsc	status,2,c
 23295  001C6C  D059               	goto	l1055
 23296                           
 23297                           ;mdm_gsm_gprs.c: 528: {
 23298                           ;mdm_gsm_gprs.c: 529: StringCopy(RxBuffer + 8, callerNumber, 13);
 23299  001C6E  0E60               	movlw	low (_RxBuffer+8)
 23300  001C70  0100               	movlb	0	; () banked
 23301  001C72  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23302  001C74  0E0C               	movlw	high (_RxBuffer+8)
 23303  001C76  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23304  001C78  0E3D               	movlw	low _callerNumber
 23305  001C7A  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23306  001C7C  0E03               	movlw	high _callerNumber
 23307  001C7E  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23308  001C80  0E00               	movlw	0
 23309  001C82  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23310  001C84  0E0D               	movlw	13
 23311  001C86  6F81               	movwf	StringCopy@Len& (0+255),b
 23312  001C88  EC4E  F028         	call	_StringCopy	;wreg free
 23313                           
 23314                           ;mdm_gsm_gprs.c: 530: callerNumber[13] = '\0';
 23315  001C8C  0E00               	movlw	0
 23316  001C8E  0103               	movlb	3	; () banked
 23317  001C90  6F4A               	movwf	(_callerNumber+13)& (0+255),b
 23318                           
 23319                           ; BSR set to: 3
 23320                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 23321  001C92  0EDF               	movlw	low _ClipEvent
 23322  001C94  0100               	movlb	0	; () banked
 23323  001C96  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23324  001C98  0E00               	movlw	high _ClipEvent
 23325  001C9A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23326  001C9C  EC7F  F030         	call	_GenerateEvt	;wreg free
 23327  001CA0  D018               	goto	l13951
 23328  001CA2                     
 23329                           ; BSR set to: 0
 23330                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 23331                           
 23332                           ; BSR set to: 0
 23333  001CA2  0E9F               	movlw	low ModemEvtParser@SmsString
 23334  001CA4  6F85               	movwf	StringCompare@String1& (0+255),b
 23335  001CA6  0E00               	movlw	high ModemEvtParser@SmsString
 23336  001CA8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23337  001CAA  0E58               	movlw	low _RxBuffer
 23338  001CAC  6F87               	movwf	StringCompare@String2& (0+255),b
 23339  001CAE  0E0C               	movlw	high _RxBuffer
 23340  001CB0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23341  001CB2  0E00               	movlw	0
 23342  001CB4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23343  001CB6  0E05               	movlw	5
 23344  001CB8  6F89               	movwf	StringCompare@Len& (0+255),b
 23345  001CBA  EC63  F02A         	call	_StringCompare	;wreg free
 23346  001CBE  0900               	iorlw	0
 23347  001CC0  B4D8               	btfsc	status,2,c
 23348  001CC2  D02E               	goto	l1055
 23349                           
 23350                           ;mdm_gsm_gprs.c: 541: {
 23351                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 23352  001CC4  0EDE               	movlw	low _SmsEvent
 23353  001CC6  0100               	movlb	0	; () banked
 23354  001CC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23355  001CCA  0E00               	movlw	high _SmsEvent
 23356  001CCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23357  001CCE  EC7F  F030         	call	_GenerateEvt	;wreg free
 23358  001CD2                     l13951:
 23359                           
 23360                           ;mdm_gsm_gprs.c: 545: Match = 1;
 23361  001CD2  0E01               	movlw	1
 23362  001CD4  0100               	movlb	0	; () banked
 23363  001CD6  D015               	goto	L28
 23364  001CD8                     
 23365                           ; BSR set to: 0
 23366                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 23367                           
 23368                           ; BSR set to: 0
 23369  001CD8  0E90               	movlw	low ModemEvtParser@CallReadyString
 23370  001CDA  6F85               	movwf	StringCompare@String1& (0+255),b
 23371  001CDC  0E00               	movlw	high ModemEvtParser@CallReadyString
 23372  001CDE  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23373  001CE0  0E58               	movlw	low _RxBuffer
 23374  001CE2  6F87               	movwf	StringCompare@String2& (0+255),b
 23375  001CE4  0E0C               	movlw	high _RxBuffer
 23376  001CE6  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23377  001CE8  0E00               	movlw	0
 23378  001CEA  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23379  001CEC  0E0A               	movlw	10
 23380  001CEE  6F89               	movwf	StringCompare@Len& (0+255),b
 23381  001CF0  EC63  F02A         	call	_StringCompare	;wreg free
 23382  001CF4  0900               	iorlw	0
 23383  001CF6  B4D8               	btfsc	status,2,c
 23384  001CF8  D013               	goto	l1055
 23385                           
 23386                           ;mdm_gsm_gprs.c: 552: {
 23387                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 23388  001CFA  0E02               	movlw	2
 23389  001CFC  0100               	movlb	0	; () banked
 23390  001CFE  6FD3               	movwf	_MdmStatus& (0+255),b
 23391                           
 23392                           ;mdm_gsm_gprs.c: 556: Match = 1;
 23393  001D00  0E01               	movlw	1
 23394  001D02                     L28:
 23395  001D02  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23396                           
 23397                           ; BSR set to: 0
 23398                           ;mdm_gsm_gprs.c: 562: }
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;mdm_gsm_gprs.c: 561: break;
 23402                           
 23403                           ;mdm_gsm_gprs.c: 560: default:
 23404                           
 23405                           ; BSR set to: 0
 23406                           ;mdm_gsm_gprs.c: 557: }
 23407                           ;mdm_gsm_gprs.c: 558: break;
 23408  001D04  D00D               	goto	l1055
 23409  001D06                     l1052:
 23410                           
 23411                           ; BSR set to: 0
 23412                           
 23413                           ; BSR set to: 0
 23414  001D06  51A9               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 23415                           
 23416                           ; Switch size 1, requested type "space"
 23417                           ; Number of cases is 4, Range of values is 0 to 3
 23418                           ; switch strategies available:
 23419                           ; Name         Instructions Cycles
 23420                           ; simple_byte           13     7 (average)
 23421                           ;	Chosen strategy is simple_byte
 23422  001D08  0A00               	xorlw	0	; case 0
 23423  001D0A  B4D8               	btfsc	status,2,c
 23424  001D0C  D786               	goto	l1053
 23425  001D0E  0A01               	xorlw	1	; case 1
 23426  001D10  B4D8               	btfsc	status,2,c
 23427  001D12  D7C7               	goto	l1058
 23428  001D14  0A03               	xorlw	3	; case 2
 23429  001D16  B4D8               	btfsc	status,2,c
 23430  001D18  D7DF               	goto	l1060
 23431  001D1A  0A01               	xorlw	1	; case 3
 23432  001D1C  B4D8               	btfsc	status,2,c
 23433  001D1E  D796               	goto	l1056
 23434  001D20                     l1055:
 23435                           
 23436                           ; BSR set to: 0
 23437  001D20  0100               	movlb	0	; () banked
 23438  001D22  2BA9               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 23439  001D24  D776               	goto	l13927
 23440  001D26                     u13390:
 23441                           
 23442                           ; BSR set to: 0
 23443                           ;mdm_gsm_gprs.c: 563: }
 23444                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 23445                           
 23446                           ; BSR set to: 0
 23447  001D26  05A8               	decf	ModemEvtParser@Match& (0+255),w,b
 23448  001D28  A4D8               	btfss	status,2,c
 23449  001D2A  0012               	return	
 23450                           
 23451                           ; BSR set to: 0
 23452                           ;mdm_gsm_gprs.c: 567: {
 23453                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 23454  001D2C  ECF8  F02D         	call	_Uart_ClearRxBuffer	;wreg free
 23455  001D30  0012               	return	
 23456  001D32                     __end_of_ModemEvtParser:
 23457                           	opt stack 0
 23458                           tosu	equ	0xFFF
 23459                           tosh	equ	0xFFE
 23460                           tosl	equ	0xFFD
 23461                           pclath	equ	0xFFA
 23462                           tblptru	equ	0xFF8
 23463                           tblptrh	equ	0xFF7
 23464                           tblptrl	equ	0xFF6
 23465                           tablat	equ	0xFF5
 23466                           prodh	equ	0xFF4
 23467                           prodl	equ	0xFF3
 23468                           intcon	equ	0xFF2
 23469                           intcon2	equ	0xFF1
 23470                           intcon3	equ	0xFF0
 23471                           indf0	equ	0xFEF
 23472                           postinc0	equ	0xFEE
 23473                           plusw0	equ	0xFEB
 23474                           fsr0h	equ	0xFEA
 23475                           fsr0l	equ	0xFE9
 23476                           wreg	equ	0xFE8
 23477                           indf1	equ	0xFE7
 23478                           postinc1	equ	0xFE6
 23479                           postdec1	equ	0xFE5
 23480                           plusw1	equ	0xFE3
 23481                           fsr1h	equ	0xFE2
 23482                           fsr1l	equ	0xFE1
 23483                           indf2	equ	0xFDF
 23484                           postinc2	equ	0xFDE
 23485                           postdec2	equ	0xFDD
 23486                           plusw2	equ	0xFDB
 23487                           fsr2h	equ	0xFDA
 23488                           fsr2l	equ	0xFD9
 23489                           status	equ	0xFD8
 23490                           
 23491 ;; *************** function _Uart_ClearRxBuffer *****************
 23492 ;; Defined at:
 23493 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23494 ;; Parameters:    Size  Location     Type
 23495 ;;		None
 23496 ;; Auto vars:     Size  Location     Type
 23497 ;;  Index           2   29[BANK0 ] unsigned short 
 23498 ;; Return value:  Size  Location     Type
 23499 ;;                  1    wreg      void 
 23500 ;; Registers used:
 23501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23502 ;; Tracked objects:
 23503 ;;		On entry : 0/0
 23504 ;;		On exit  : 0/0
 23505 ;;		Unchanged: 0/0
 23506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23511 ;;Total ram usage:        2 bytes
 23512 ;; Hardware stack levels used:    1
 23513 ;; Hardware stack levels required when called:   11
 23514 ;; This function calls:
 23515 ;;		Nothing
 23516 ;; This function is called by:
 23517 ;;		_ModemEvtParser
 23518 ;; This function uses a non-reentrant model
 23519 ;;
 23520                           
 23521                           	psect	text109
 23522  005BF0                     __ptext109:
 23523                           	opt stack 0
 23524  005BF0                     _Uart_ClearRxBuffer:
 23525                           	opt stack 15
 23526                           
 23527                           ;uart_drv.c: 567: UINT16 Index = 0;
 23528                           
 23529                           ;incstack = 0
 23530  005BF0  0E00               	movlw	0
 23531  005BF2  0100               	movlb	0	; () banked
 23532  005BF4  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23533  005BF6  0E00               	movlw	0
 23534  005BF8  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23535                           
 23536                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23537  005BFA  0E00               	movlw	0
 23538  005BFC  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23539  005BFE  0E00               	movlw	0
 23540  005C00  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23541  005C02                     l13219:
 23542                           
 23543                           ; BSR set to: 0
 23544  005C02  0E90               	movlw	144
 23545  005C04  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23546  005C06  0E01               	movlw	1
 23547  005C08  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23548  005C0A  B0D8               	btfsc	status,0,c
 23549  005C0C  0012               	return	
 23550                           
 23551                           ; BSR set to: 0
 23552                           ;uart_drv.c: 571: {
 23553                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23554                           
 23555                           ; BSR set to: 0
 23556                           
 23557                           ; BSR set to: 0
 23558  005C0E  0E58               	movlw	low _RxBuffer
 23559  005C10  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23560  005C12  6ED9               	movwf	fsr2l,c
 23561  005C14  0E0C               	movlw	high _RxBuffer
 23562  005C16  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23563  005C18  6EDA               	movwf	fsr2h,c
 23564  005C1A  0E00               	movlw	0
 23565  005C1C  6EDF               	movwf	indf2,c
 23566                           
 23567                           ; BSR set to: 0
 23568  005C1E  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23569  005C20  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23570  005C22  D7EF               	goto	l13219
 23571  005C24                     __end_of_Uart_ClearRxBuffer:
 23572                           	opt stack 0
 23573                           tosu	equ	0xFFF
 23574                           tosh	equ	0xFFE
 23575                           tosl	equ	0xFFD
 23576                           pclath	equ	0xFFA
 23577                           tblptru	equ	0xFF8
 23578                           tblptrh	equ	0xFF7
 23579                           tblptrl	equ	0xFF6
 23580                           tablat	equ	0xFF5
 23581                           prodh	equ	0xFF4
 23582                           prodl	equ	0xFF3
 23583                           intcon	equ	0xFF2
 23584                           intcon2	equ	0xFF1
 23585                           intcon3	equ	0xFF0
 23586                           indf0	equ	0xFEF
 23587                           postinc0	equ	0xFEE
 23588                           plusw0	equ	0xFEB
 23589                           fsr0h	equ	0xFEA
 23590                           fsr0l	equ	0xFE9
 23591                           wreg	equ	0xFE8
 23592                           indf1	equ	0xFE7
 23593                           postinc1	equ	0xFE6
 23594                           postdec1	equ	0xFE5
 23595                           plusw1	equ	0xFE3
 23596                           fsr1h	equ	0xFE2
 23597                           fsr1l	equ	0xFE1
 23598                           indf2	equ	0xFDF
 23599                           postinc2	equ	0xFDE
 23600                           postdec2	equ	0xFDD
 23601                           plusw2	equ	0xFDB
 23602                           fsr2h	equ	0xFDA
 23603                           fsr2l	equ	0xFD9
 23604                           status	equ	0xFD8
 23605                           
 23606 ;; *************** function _StringCompare *****************
 23607 ;; Defined at:
 23608 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23609 ;; Parameters:    Size  Location     Type
 23610 ;;  String1         2   37[BANK0 ] PTR unsigned char 
 23611 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), MyApp_Task@phone(14), ModemEvtParser@CallReadyString(10), 
 23612 ;;		 -> ModemEvtParser@SmsString(5), ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 23613 ;;  String2         2   39[BANK0 ] PTR unsigned char 
 23614 ;;		 -> MyApp_Task@cmpString(3), MyApp_Task@phone(14), callerNumber(14), RxBuffer(400), 
 23615 ;;  Len             2   41[BANK0 ] unsigned short 
 23616 ;; Auto vars:     Size  Location     Type
 23617 ;;  Index           2   46[BANK0 ] unsigned short 
 23618 ;;  Result          1   45[BANK0 ] unsigned char 
 23619 ;; Return value:  Size  Location     Type
 23620 ;;                  1    wreg      unsigned char 
 23621 ;; Registers used:
 23622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23623 ;; Tracked objects:
 23624 ;;		On entry : 0/0
 23625 ;;		On exit  : 0/0
 23626 ;;		Unchanged: 0/0
 23627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23629 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23631 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23632 ;;Total ram usage:       11 bytes
 23633 ;; Hardware stack levels used:    1
 23634 ;; Hardware stack levels required when called:   11
 23635 ;; This function calls:
 23636 ;;		Nothing
 23637 ;; This function is called by:
 23638 ;;		_ModemEvtParser
 23639 ;;		_MyApp_Task
 23640 ;; This function uses a non-reentrant model
 23641 ;;
 23642                           
 23643                           	psect	text110
 23644  0054C6                     __ptext110:
 23645                           	opt stack 0
 23646  0054C6                     _StringCompare:
 23647                           	opt stack 16
 23648                           
 23649                           ;sf.c: 77: UINT16 Index = 0;
 23650                           
 23651                           ; BSR set to: 0
 23652                           ;incstack = 0
 23653  0054C6  0E00               	movlw	0
 23654  0054C8  0100               	movlb	0	; () banked
 23655  0054CA  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23656  0054CC  0E00               	movlw	0
 23657  0054CE  6F8E               	movwf	StringCompare@Index& (0+255),b
 23658                           
 23659                           ;sf.c: 78: UINT8 Result = 1;
 23660  0054D0  0E01               	movlw	1
 23661  0054D2  6F8D               	movwf	StringCompare@Result& (0+255),b
 23662                           
 23663                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23664  0054D4  0E00               	movlw	0
 23665  0054D6  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23666  0054D8  0E00               	movlw	0
 23667  0054DA  6F8E               	movwf	StringCompare@Index& (0+255),b
 23668  0054DC  D015               	goto	l2211
 23669  0054DE                     
 23670                           ; BSR set to: 0
 23671                           ;sf.c: 82: {
 23672                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23673                           
 23674                           ; BSR set to: 0
 23675  0054DE  518E               	movf	StringCompare@Index& (0+255),w,b
 23676  0054E0  2587               	addwf	StringCompare@String2& (0+255),w,b
 23677  0054E2  6ED9               	movwf	fsr2l,c
 23678  0054E4  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23679  0054E6  2188               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23680  0054E8  6EDA               	movwf	fsr2h,c
 23681  0054EA  518E               	movf	StringCompare@Index& (0+255),w,b
 23682  0054EC  2585               	addwf	StringCompare@String1& (0+255),w,b
 23683  0054EE  6EE1               	movwf	fsr1l,c
 23684  0054F0  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23685  0054F2  2186               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23686  0054F4  6EE2               	movwf	fsr1h,c
 23687  0054F6  50DE               	movf	postinc2,w,c
 23688  0054F8  18E6               	xorwf	postinc1,w,c
 23689  0054FA  B4D8               	btfsc	status,2,c
 23690  0054FC  D003               	goto	l2213
 23691                           
 23692                           ; BSR set to: 0
 23693                           ;sf.c: 84: {
 23694                           ;sf.c: 85: Result = 0;
 23695  0054FE  0E00               	movlw	0
 23696  005500  6F8D               	movwf	StringCompare@Result& (0+255),b
 23697                           
 23698                           ;sf.c: 86: break;
 23699  005502  D008               	goto	u12360
 23700  005504                     l2213:
 23701                           
 23702                           ; BSR set to: 0
 23703                           
 23704                           ; BSR set to: 0
 23705  005504  4B8E               	infsnz	StringCompare@Index& (0+255),f,b
 23706  005506  2B8F               	incf	(StringCompare@Index+1)& (0+255),f,b
 23707  005508                     l2211:
 23708                           
 23709                           ; BSR set to: 0
 23710                           
 23711                           ; BSR set to: 0
 23712  005508  5189               	movf	StringCompare@Len& (0+255),w,b
 23713  00550A  5D8E               	subwf	StringCompare@Index& (0+255),w,b
 23714  00550C  518A               	movf	(StringCompare@Len+1)& (0+255),w,b
 23715  00550E  598F               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 23716  005510  A0D8               	btfss	status,0,c
 23717  005512  D7E5               	goto	l2212
 23718  005514                     u12360:
 23719                           
 23720                           ; BSR set to: 0
 23721                           ;sf.c: 87: }
 23722                           ;sf.c: 88: }
 23723                           ;sf.c: 91: return Result;
 23724                           
 23725                           ; BSR set to: 0
 23726  005514  518D               	movf	StringCompare@Result& (0+255),w,b
 23727  005516  0012               	return	
 23728  005518                     __end_of_StringCompare:
 23729                           	opt stack 0
 23730                           tosu	equ	0xFFF
 23731                           tosh	equ	0xFFE
 23732                           tosl	equ	0xFFD
 23733                           pclath	equ	0xFFA
 23734                           tblptru	equ	0xFF8
 23735                           tblptrh	equ	0xFF7
 23736                           tblptrl	equ	0xFF6
 23737                           tablat	equ	0xFF5
 23738                           prodh	equ	0xFF4
 23739                           prodl	equ	0xFF3
 23740                           intcon	equ	0xFF2
 23741                           intcon2	equ	0xFF1
 23742                           intcon3	equ	0xFF0
 23743                           indf0	equ	0xFEF
 23744                           postinc0	equ	0xFEE
 23745                           plusw0	equ	0xFEB
 23746                           fsr0h	equ	0xFEA
 23747                           fsr0l	equ	0xFE9
 23748                           wreg	equ	0xFE8
 23749                           indf1	equ	0xFE7
 23750                           postinc1	equ	0xFE6
 23751                           postdec1	equ	0xFE5
 23752                           plusw1	equ	0xFE3
 23753                           fsr1h	equ	0xFE2
 23754                           fsr1l	equ	0xFE1
 23755                           indf2	equ	0xFDF
 23756                           postinc2	equ	0xFDE
 23757                           postdec2	equ	0xFDD
 23758                           plusw2	equ	0xFDB
 23759                           fsr2h	equ	0xFDA
 23760                           fsr2l	equ	0xFD9
 23761                           status	equ	0xFD8
 23762                           
 23763 ;; *************** function _GetSmsSm *****************
 23764 ;; Defined at:
 23765 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23766 ;; Parameters:    Size  Location     Type
 23767 ;;		None
 23768 ;; Auto vars:     Size  Location     Type
 23769 ;;		None
 23770 ;; Return value:  Size  Location     Type
 23771 ;;                  1    wreg      void 
 23772 ;; Registers used:
 23773 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23774 ;; Tracked objects:
 23775 ;;		On entry : 0/0
 23776 ;;		On exit  : 0/0
 23777 ;;		Unchanged: 0/0
 23778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23783 ;;Total ram usage:        0 bytes
 23784 ;; Hardware stack levels used:    1
 23785 ;; Hardware stack levels required when called:   13
 23786 ;; This function calls:
 23787 ;;		_ClearBuffer
 23788 ;;		_GenerateEvt
 23789 ;;		_ReceiveEvt
 23790 ;;		_StringCopy
 23791 ;;		_Uart_WriteConstString
 23792 ;; This function is called by:
 23793 ;;		_Mdm_MainTask
 23794 ;; This function uses a non-reentrant model
 23795 ;;
 23796                           
 23797                           	psect	text111
 23798  002BFA                     __ptext111:
 23799                           	opt stack 0
 23800  002BFA                     _GetSmsSm:
 23801                           	opt stack 14
 23802                           
 23803                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 23804                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 23805                           
 23806                           ; BSR set to: 0
 23807                           ;incstack = 0
 23808  002BFA  0E03               	movlw	3
 23809  002BFC  0100               	movlb	0	; () banked
 23810  002BFE  19D3               	xorwf	_MdmStatus& (0+255),w,b
 23811  002C00  A4D8               	btfss	status,2,c
 23812  002C02  0012               	return	
 23813  002C04  D084               	goto	l1070
 23814  002C06                     
 23815                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 23816                           
 23817                           ; BSR set to: 0
 23818  002C06  0EDD               	movlw	low _GetSmsText
 23819  002C08  0100               	movlb	0	; () banked
 23820  002C0A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23821  002C0C  0E00               	movlw	high _GetSmsText
 23822  002C0E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23823  002C10  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 23824  002C14  0900               	iorlw	0
 23825  002C16  B4D8               	btfsc	status,2,c
 23826  002C18  0012               	return	
 23827                           
 23828                           ;mdm_gsm_gprs.c: 596: {
 23829                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 23830  002C1A  0E01               	movlw	1
 23831  002C1C  0101               	movlb	1	; () banked
 23832  002C1E  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23833                           
 23834                           ; BSR set to: 1
 23835                           ;mdm_gsm_gprs.c: 599: }
 23836                           ;mdm_gsm_gprs.c: 600: break;
 23837  002C20  0012               	return	
 23838  002C22                     
 23839                           ; BSR set to: 1
 23840                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 23841                           
 23842                           ; BSR set to: 1
 23843  002C22  0EC1               	movlw	low STR_4
 23844  002C24  0100               	movlb	0	; () banked
 23845  002C26  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23846  002C28  0EFF               	movlw	high STR_4
 23847  002C2A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23848  002C2C  0E01               	movlw	1
 23849  002C2E  EC6D  F02C         	call	_Uart_WriteConstString
 23850                           
 23851                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 23852  002C32  0E02               	movlw	2
 23853  002C34  0101               	movlb	1	; () banked
 23854  002C36  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23855                           
 23856                           ;mdm_gsm_gprs.c: 607: break;
 23857  002C38  0012               	return	
 23858  002C3A                     
 23859                           ; BSR set to: 1
 23860                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 23861                           
 23862                           ; BSR set to: 1
 23863  002C3A  0E3C               	movlw	low _NewStringReceived
 23864  002C3C  0100               	movlb	0	; () banked
 23865  002C3E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23866  002C40  0E00               	movlw	high _NewStringReceived
 23867  002C42  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23868  002C44  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 23869  002C48  0900               	iorlw	0
 23870  002C4A  B4D8               	btfsc	status,2,c
 23871  002C4C  0012               	return	
 23872                           
 23873                           ;mdm_gsm_gprs.c: 612: {
 23874                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 23875  002C4E  CC58  FFE8         	movff	_RxBuffer,wreg
 23876  002C52  0A2B               	xorlw	43
 23877  002C54  A4D8               	btfss	status,2,c
 23878  002C56  0012               	return	
 23879  002C58  CC59  FFE8         	movff	_RxBuffer+1,wreg
 23880  002C5C  0A43               	xorlw	67
 23881  002C5E  A4D8               	btfss	status,2,c
 23882  002C60  0012               	return	
 23883  002C62  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 23884  002C66  0A4D               	xorlw	77
 23885  002C68  A4D8               	btfss	status,2,c
 23886  002C6A  0012               	return	
 23887                           
 23888                           ;mdm_gsm_gprs.c: 614: {
 23889                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 23890  002C6C  0E00               	movlw	low _Mdm_SmsRx
 23891  002C6E  0100               	movlb	0	; () banked
 23892  002C70  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23893  002C72  0E07               	movlw	high _Mdm_SmsRx
 23894  002C74  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23895  002C76  0E00               	movlw	0
 23896  002C78  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23897  002C7A  0E50               	movlw	80
 23898  002C7C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23899  002C7E  ECDD  F02D         	call	_ClearBuffer	;wreg free
 23900                           
 23901                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 23902  002C82  0E58               	movlw	low _RxBuffer
 23903  002C84  0100               	movlb	0	; () banked
 23904  002C86  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23905  002C88  0E0C               	movlw	high _RxBuffer
 23906  002C8A  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23907  002C8C  0E00               	movlw	low _Mdm_SmsRx
 23908  002C8E  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23909  002C90  0E07               	movlw	high _Mdm_SmsRx
 23910  002C92  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23911  002C94  C0C7  F081         	movff	_RxLen,StringCopy@Len
 23912  002C98  C0C8  F082         	movff	_RxLen+1,StringCopy@Len+1
 23913  002C9C  EC4E  F028         	call	_StringCopy	;wreg free
 23914                           
 23915                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 23916  002CA0  C0C7  F782         	movff	_RxLen,_Mdm_SmsRx+130
 23917                           
 23918                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 23919  002CA4  0E03               	movlw	3
 23920  002CA6  0101               	movlb	1	; () banked
 23921  002CA8  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23922                           
 23923                           ; BSR set to: 1
 23924                           ;mdm_gsm_gprs.c: 622: }
 23925                           ;mdm_gsm_gprs.c: 623: }
 23926                           ;mdm_gsm_gprs.c: 624: break;
 23927                           
 23928                           ; BSR set to: 1
 23929  002CAA  0012               	return	
 23930  002CAC                     
 23931                           ; BSR set to: 1
 23932                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 23933                           
 23934                           ; BSR set to: 1
 23935  002CAC  0E3C               	movlw	low _NewStringReceived
 23936  002CAE  0100               	movlb	0	; () banked
 23937  002CB0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23938  002CB2  0E00               	movlw	high _NewStringReceived
 23939  002CB4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23940  002CB6  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 23941  002CBA  0900               	iorlw	0
 23942  002CBC  B4D8               	btfsc	status,2,c
 23943  002CBE  0012               	return	
 23944                           
 23945                           ;mdm_gsm_gprs.c: 629: {
 23946                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 23947  002CC0  0E50               	movlw	low (_Mdm_SmsRx+80)
 23948  002CC2  0100               	movlb	0	; () banked
 23949  002CC4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23950  002CC6  0E07               	movlw	high (_Mdm_SmsRx+80)
 23951  002CC8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23952  002CCA  0E00               	movlw	0
 23953  002CCC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23954  002CCE  0E32               	movlw	50
 23955  002CD0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23956  002CD2  ECDD  F02D         	call	_ClearBuffer	;wreg free
 23957                           
 23958                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 23959  002CD6  0E58               	movlw	low _RxBuffer
 23960  002CD8  0100               	movlb	0	; () banked
 23961  002CDA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23962  002CDC  0E0C               	movlw	high _RxBuffer
 23963  002CDE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23964  002CE0  0E50               	movlw	low (_Mdm_SmsRx+80)
 23965  002CE2  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23966  002CE4  0E07               	movlw	high (_Mdm_SmsRx+80)
 23967  002CE6  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23968  002CE8  C0C7  F081         	movff	_RxLen,StringCopy@Len
 23969  002CEC  C0C8  F082         	movff	_RxLen+1,StringCopy@Len+1
 23970  002CF0  EC4E  F028         	call	_StringCopy	;wreg free
 23971                           
 23972                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 23973  002CF4  C0C7  F783         	movff	_RxLen,_Mdm_SmsRx+131
 23974                           
 23975                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 23976  002CF8  0E00               	movlw	0
 23977  002CFA  0101               	movlb	1	; () banked
 23978  002CFC  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 23979                           
 23980                           ; BSR set to: 1
 23981                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 23982  002CFE  0EDC               	movlw	low _SmsTxtReady
 23983  002D00  0100               	movlb	0	; () banked
 23984  002D02  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23985  002D04  0E00               	movlw	high _SmsTxtReady
 23986  002D06  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23987  002D08  EC7F  F030         	call	_GenerateEvt	;wreg free
 23988                           
 23989                           ;mdm_gsm_gprs.c: 644: }
 23990                           
 23991                           ;mdm_gsm_gprs.c: 643: break;
 23992                           
 23993                           ;mdm_gsm_gprs.c: 642: default:
 23994                           
 23995                           ;mdm_gsm_gprs.c: 639: }
 23996                           ;mdm_gsm_gprs.c: 640: break;
 23997  002D0C  0012               	return	
 23998  002D0E                     l1070:
 23999  002D0E  0101               	movlb	1	; () banked
 24000  002D10  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 24001                           
 24002                           ; Switch size 1, requested type "space"
 24003                           ; Number of cases is 4, Range of values is 0 to 3
 24004                           ; switch strategies available:
 24005                           ; Name         Instructions Cycles
 24006                           ; simple_byte           13     7 (average)
 24007                           ;	Chosen strategy is simple_byte
 24008  002D12  0A00               	xorlw	0	; case 0
 24009  002D14  B4D8               	btfsc	status,2,c
 24010  002D16  D777               	goto	l1071
 24011  002D18  0A01               	xorlw	1	; case 1
 24012  002D1A  B4D8               	btfsc	status,2,c
 24013  002D1C  D782               	goto	l1074
 24014  002D1E  0A03               	xorlw	3	; case 2
 24015  002D20  B4D8               	btfsc	status,2,c
 24016  002D22  D78B               	goto	l1075
 24017  002D24  0A01               	xorlw	1	; case 3
 24018  002D26  A4D8               	btfss	status,2,c
 24019                           
 24020                           ; BSR set to: 1
 24021  002D28  0012               	return	
 24022  002D2A  D7C0               	goto	l1078
 24023  002D2C                     __end_of_GetSmsSm:
 24024                           	opt stack 0
 24025                           tosu	equ	0xFFF
 24026                           tosh	equ	0xFFE
 24027                           tosl	equ	0xFFD
 24028                           pclath	equ	0xFFA
 24029                           tblptru	equ	0xFF8
 24030                           tblptrh	equ	0xFF7
 24031                           tblptrl	equ	0xFF6
 24032                           tablat	equ	0xFF5
 24033                           prodh	equ	0xFF4
 24034                           prodl	equ	0xFF3
 24035                           intcon	equ	0xFF2
 24036                           intcon2	equ	0xFF1
 24037                           intcon3	equ	0xFF0
 24038                           indf0	equ	0xFEF
 24039                           postinc0	equ	0xFEE
 24040                           plusw0	equ	0xFEB
 24041                           fsr0h	equ	0xFEA
 24042                           fsr0l	equ	0xFE9
 24043                           wreg	equ	0xFE8
 24044                           indf1	equ	0xFE7
 24045                           postinc1	equ	0xFE6
 24046                           postdec1	equ	0xFE5
 24047                           plusw1	equ	0xFE3
 24048                           fsr1h	equ	0xFE2
 24049                           fsr1l	equ	0xFE1
 24050                           indf2	equ	0xFDF
 24051                           postinc2	equ	0xFDE
 24052                           postdec2	equ	0xFDD
 24053                           plusw2	equ	0xFDB
 24054                           fsr2h	equ	0xFDA
 24055                           fsr2l	equ	0xFD9
 24056                           status	equ	0xFD8
 24057                           
 24058 ;; *************** function _ConfigureModem *****************
 24059 ;; Defined at:
 24060 ;;		line 418 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24061 ;; Parameters:    Size  Location     Type
 24062 ;;		None
 24063 ;; Auto vars:     Size  Location     Type
 24064 ;;		None
 24065 ;; Return value:  Size  Location     Type
 24066 ;;                  1    wreg      void 
 24067 ;; Registers used:
 24068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24069 ;; Tracked objects:
 24070 ;;		On entry : 0/0
 24071 ;;		On exit  : 0/0
 24072 ;;		Unchanged: 0/0
 24073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24078 ;;Total ram usage:        0 bytes
 24079 ;; Hardware stack levels used:    1
 24080 ;; Hardware stack levels required when called:   14
 24081 ;; This function calls:
 24082 ;;		_GenerateEvt
 24083 ;;		_UartSetConfigLow
 24084 ;;		_Uart_InitUartModule
 24085 ;;		_Uart_WriteConstString
 24086 ;; This function is called by:
 24087 ;;		_Mdm_MainTask
 24088 ;; This function uses a non-reentrant model
 24089 ;;
 24090                           
 24091                           	psect	text112
 24092  003628                     __ptext112:
 24093                           	opt stack 0
 24094  003628                     _ConfigureModem:
 24095                           	opt stack 13
 24096                           
 24097                           ;mdm_gsm_gprs.c: 420: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 24098                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType NextState = MdmCfg_Init;
 24099                           ;mdm_gsm_gprs.c: 422: static UINT16 DelayValueMs = 0;
 24100                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayCounter = 0;
 24101                           ;mdm_gsm_gprs.c: 425: switch (MdmConfigState)
 24102                           
 24103                           ;incstack = 0
 24104  003628  D05A               	goto	l1027
 24105  00362A                     
 24106                           ;mdm_gsm_gprs.c: 429: if (MdmStatus == ModemReady)
 24107  00362A  0E02               	movlw	2
 24108  00362C  0100               	movlb	0	; () banked
 24109  00362E  19D3               	xorwf	_MdmStatus& (0+255),w,b
 24110  003630  A4D8               	btfss	status,2,c
 24111  003632  0012               	return	
 24112                           
 24113                           ; BSR set to: 0
 24114                           ;mdm_gsm_gprs.c: 430: {
 24115                           ;mdm_gsm_gprs.c: 432: MdmConfigState = MdmCfg_ChangeBaud;
 24116  003634  0E01               	movlw	1
 24117  003636  0101               	movlb	1	; () banked
 24118  003638  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24119                           
 24120                           ; BSR set to: 1
 24121                           ;mdm_gsm_gprs.c: 433: }
 24122                           ;mdm_gsm_gprs.c: 434: break;
 24123  00363A  0012               	return	
 24124  00363C                     
 24125                           ; BSR set to: 1
 24126                           ;mdm_gsm_gprs.c: 438: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 24127                           
 24128                           ; BSR set to: 1
 24129  00363C  0E74               	movlw	low STR_2
 24130  00363E  0100               	movlb	0	; () banked
 24131  003640  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24132  003642  0EFF               	movlw	high STR_2
 24133  003644  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24134  003646  0E01               	movlw	1
 24135  003648  EC6D  F02C         	call	_Uart_WriteConstString
 24136                           
 24137                           ;mdm_gsm_gprs.c: 440: UartSetConfigLow();
 24138  00364C  EC63  F029         	call	_UartSetConfigLow	;wreg free
 24139                           
 24140                           ;mdm_gsm_gprs.c: 442: Uart_InitUartModule(1,&UartConfig);
 24141  003650  0E28               	movlw	low _UartConfig
 24142  003652  0100               	movlb	0	; () banked
 24143  003654  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 24144  003656  0E03               	movlw	high _UartConfig
 24145  003658  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 24146  00365A  0E01               	movlw	1
 24147  00365C  EC5E  F005         	call	_Uart_InitUartModule
 24148                           
 24149                           ;mdm_gsm_gprs.c: 444: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24150  003660  0E03               	movlw	3
 24151  003662  0102               	movlb	2	; () banked
 24152  003664  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24153  003666  0EE8               	movlw	232
 24154  003668  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24155                           
 24156                           ; BSR set to: 2
 24157                           ;mdm_gsm_gprs.c: 446: NextState = MdmCfg_SetMdmEchoMode;
 24158  00366A  0E02               	movlw	2
 24159  00366C  0101               	movlb	1	; () banked
 24160  00366E  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 24161                           
 24162                           ; BSR set to: 1
 24163                           ;mdm_gsm_gprs.c: 447: MdmConfigState = MdmCfg_Delay;
 24164  003670  0E04               	movlw	4
 24165  003672  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24166                           
 24167                           ;mdm_gsm_gprs.c: 448: break;
 24168  003674  0012               	return	
 24169  003676                     
 24170                           ; BSR set to: 1
 24171                           ;mdm_gsm_gprs.c: 452: Uart_WriteConstString(1,"ATE0\r\n");
 24172                           
 24173                           ; BSR set to: 1
 24174  003676  0EDE               	movlw	low STR_3
 24175  003678  0100               	movlb	0	; () banked
 24176  00367A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24177  00367C  0EFF               	movlw	high STR_3
 24178  00367E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24179  003680  0E01               	movlw	1
 24180  003682  EC6D  F02C         	call	_Uart_WriteConstString
 24181                           
 24182                           ;mdm_gsm_gprs.c: 454: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24183  003686  0E03               	movlw	3
 24184  003688  0102               	movlb	2	; () banked
 24185  00368A  6FD8               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24186  00368C  0EE8               	movlw	232
 24187  00368E  6FD7               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24188                           
 24189                           ; BSR set to: 2
 24190                           ;mdm_gsm_gprs.c: 456: NextState = MdmCfg_UpdateMdmSts;
 24191  003690  0E05               	movlw	5
 24192  003692  0101               	movlb	1	; () banked
 24193  003694  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 24194                           
 24195                           ; BSR set to: 1
 24196                           ;mdm_gsm_gprs.c: 457: MdmConfigState = MdmCfg_Delay;
 24197  003696  0E04               	movlw	4
 24198  003698  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24199                           
 24200                           ;mdm_gsm_gprs.c: 458: break;
 24201  00369A  0012               	return	
 24202  00369C                     
 24203                           ; BSR set to: 1
 24204                           ;mdm_gsm_gprs.c: 462: DelayCounter++;
 24205                           
 24206                           ; BSR set to: 1
 24207  00369C  0103               	movlb	3	; () banked
 24208  00369E  4B26               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 24209  0036A0  2B27               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 24210                           
 24211                           ; BSR set to: 3
 24212                           ;mdm_gsm_gprs.c: 464: if (DelayCounter >= DelayValueMs)
 24213  0036A2  0102               	movlb	2	; () banked
 24214  0036A4  51D7               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 24215  0036A6  0103               	movlb	3	; () banked
 24216  0036A8  5D26               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 24217  0036AA  0102               	movlb	2	; () banked
 24218  0036AC  51D8               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 24219  0036AE  0103               	movlb	3	; () banked
 24220  0036B0  5927               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24221  0036B2  A0D8               	btfss	status,0,c
 24222  0036B4  0012               	return	
 24223                           
 24224                           ; BSR set to: 3
 24225                           ;mdm_gsm_gprs.c: 465: {
 24226                           ;mdm_gsm_gprs.c: 467: DelayCounter = 0;
 24227  0036B6  0E00               	movlw	0
 24228  0036B8  6F27               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24229  0036BA  0E00               	movlw	0
 24230  0036BC  6F26               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24231                           
 24232                           ; BSR set to: 3
 24233                           ;mdm_gsm_gprs.c: 469: MdmConfigState = NextState;
 24234  0036BE  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24235                           
 24236                           ; BSR set to: 3
 24237                           ;mdm_gsm_gprs.c: 470: }
 24238                           ;mdm_gsm_gprs.c: 471: break;
 24239  0036C2  0012               	return	
 24240  0036C4                     
 24241                           ;mdm_gsm_gprs.c: 475: MdmStatus = ModemConfigured;
 24242                           
 24243                           ; BSR set to: 3
 24244  0036C4  0E03               	movlw	3
 24245  0036C6  0100               	movlb	0	; () banked
 24246  0036C8  6FD3               	movwf	_MdmStatus& (0+255),b
 24247                           
 24248                           ; BSR set to: 0
 24249                           ;mdm_gsm_gprs.c: 477: GenerateEvt(&MdmStsReady);
 24250  0036CA  0EFE               	movlw	low _MdmStsReady
 24251  0036CC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24252  0036CE  0E01               	movlw	high _MdmStsReady
 24253  0036D0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24254  0036D2  EC7F  F030         	call	_GenerateEvt	;wreg free
 24255                           
 24256                           ;mdm_gsm_gprs.c: 479: MdmConfigState = MdmCfg_Stop;
 24257  0036D6  0E06               	movlw	6
 24258  0036D8  0101               	movlb	1	; () banked
 24259  0036DA  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 24260                           
 24261                           ; BSR set to: 1
 24262                           ;mdm_gsm_gprs.c: 487: }
 24263                           
 24264                           ; BSR set to: 1
 24265                           ;mdm_gsm_gprs.c: 486: break;
 24266                           
 24267                           ;mdm_gsm_gprs.c: 485: default:
 24268                           
 24269                           ; BSR set to: 1
 24270                           ;mdm_gsm_gprs.c: 483: break;
 24271                           
 24272                           ;mdm_gsm_gprs.c: 482: case MdmCfg_Stop:
 24273                           
 24274                           ;mdm_gsm_gprs.c: 480: break;
 24275  0036DC  0012               	return	
 24276  0036DE                     l1027:
 24277                           
 24278                           ; BSR set to: 1
 24279  0036DE  0101               	movlb	1	; () banked
 24280  0036E0  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 24281                           
 24282                           ; Switch size 1, requested type "space"
 24283                           ; Number of cases is 6, Range of values is 0 to 6
 24284                           ; switch strategies available:
 24285                           ; Name         Instructions Cycles
 24286                           ; simple_byte           19    10 (average)
 24287                           ;	Chosen strategy is simple_byte
 24288  0036E2  0A00               	xorlw	0	; case 0
 24289  0036E4  B4D8               	btfsc	status,2,c
 24290  0036E6  D7A1               	goto	l1028
 24291  0036E8  0A01               	xorlw	1	; case 1
 24292  0036EA  B4D8               	btfsc	status,2,c
 24293  0036EC  D7A7               	goto	l1031
 24294  0036EE  0A03               	xorlw	3	; case 2
 24295  0036F0  B4D8               	btfsc	status,2,c
 24296  0036F2  D7C1               	goto	l1032
 24297  0036F4  0A06               	xorlw	6	; case 4
 24298  0036F6  B4D8               	btfsc	status,2,c
 24299  0036F8  D7D1               	goto	l1033
 24300  0036FA  0A01               	xorlw	1	; case 5
 24301  0036FC  B4D8               	btfsc	status,2,c
 24302  0036FE  D7E2               	goto	l1035
 24303  003700  0A03               	xorlw	3	; case 6
 24304  003702  0012               	return	
 24305  003704                     __end_of_ConfigureModem:
 24306                           	opt stack 0
 24307                           tosu	equ	0xFFF
 24308                           tosh	equ	0xFFE
 24309                           tosl	equ	0xFFD
 24310                           pclath	equ	0xFFA
 24311                           tblptru	equ	0xFF8
 24312                           tblptrh	equ	0xFF7
 24313                           tblptrl	equ	0xFF6
 24314                           tablat	equ	0xFF5
 24315                           prodh	equ	0xFF4
 24316                           prodl	equ	0xFF3
 24317                           intcon	equ	0xFF2
 24318                           intcon2	equ	0xFF1
 24319                           intcon3	equ	0xFF0
 24320                           indf0	equ	0xFEF
 24321                           postinc0	equ	0xFEE
 24322                           plusw0	equ	0xFEB
 24323                           fsr0h	equ	0xFEA
 24324                           fsr0l	equ	0xFE9
 24325                           wreg	equ	0xFE8
 24326                           indf1	equ	0xFE7
 24327                           postinc1	equ	0xFE6
 24328                           postdec1	equ	0xFE5
 24329                           plusw1	equ	0xFE3
 24330                           fsr1h	equ	0xFE2
 24331                           fsr1l	equ	0xFE1
 24332                           indf2	equ	0xFDF
 24333                           postinc2	equ	0xFDE
 24334                           postdec2	equ	0xFDD
 24335                           plusw2	equ	0xFDB
 24336                           fsr2h	equ	0xFDA
 24337                           fsr2l	equ	0xFD9
 24338                           status	equ	0xFD8
 24339                           
 24340 ;; *************** function _Uart_InitUartModule *****************
 24341 ;; Defined at:
 24342 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;  Module          1    wreg     unsigned char 
 24345 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 24346 ;;		 -> UartConfig(21), 
 24347 ;; Auto vars:     Size  Location     Type
 24348 ;;  Module          1   65[BANK0 ] unsigned char 
 24349 ;; Return value:  Size  Location     Type
 24350 ;;                  1    wreg      void 
 24351 ;; Registers used:
 24352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24353 ;; Tracked objects:
 24354 ;;		On entry : 0/0
 24355 ;;		On exit  : 0/0
 24356 ;;		Unchanged: 0/0
 24357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24360 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24361 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24362 ;;Total ram usage:        5 bytes
 24363 ;; Hardware stack levels used:    1
 24364 ;; Hardware stack levels required when called:   13
 24365 ;; This function calls:
 24366 ;;		_SetUartBaudRate
 24367 ;; This function is called by:
 24368 ;;		_ConfigureModem
 24369 ;;		_Mdm_MainTask
 24370 ;; This function uses a non-reentrant model
 24371 ;;
 24372                           
 24373                           	psect	text113
 24374  000ABC                     __ptext113:
 24375                           	opt stack 0
 24376  000ABC                     _Uart_InitUartModule:
 24377                           	opt stack 14
 24378                           
 24379                           ;incstack = 0
 24380                           ;Uart_InitUartModule@Module stored from wreg
 24381  000ABC  0100               	movlb	0	; () banked
 24382  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 24383                           
 24384                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 24385  000AC0  0100               	movlb	0	; () banked
 24386  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 24387  000AC4  A4D8               	btfss	status,2,c
 24388  000AC6  D0BE               	goto	l668
 24389                           
 24390                           ; BSR set to: 0
 24391                           ;uart_drv.c: 291: {
 24392                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 24393  000AC8  9C94               	bcf	3988,6,c	;volatile
 24394                           
 24395                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 24396  000ACA  8E94               	bsf	3988,7,c	;volatile
 24397                           
 24398                           ; BSR set to: 0
 24399                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 24400  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24401  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24402  000AD4  0E01               	movlw	1
 24403  000AD6  EC61  F015         	call	_SetUartBaudRate
 24404                           
 24405                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 24406  000ADA  0E00               	movlw	0
 24407  000ADC  6EAD               	movwf	4013,c	;volatile
 24408                           
 24409                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24410  000ADE  0100               	movlb	0	; () banked
 24411  000AE0  EE20 F004          	lfsr	2,4
 24412  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24413  000AE6  26D9               	addwf	fsr2l,f,c
 24414  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24415  000AEA  22DA               	addwfc	fsr2h,f,c
 24416  000AEC  50DF               	movf	indf2,w,c
 24417  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24418  000AF0  0E06               	movlw	6
 24419  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24420  000AF4                     u12225:
 24421  000AF4  90D8               	bcf	status,0,c
 24422  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24423  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24424  000AFA  D7FC               	goto	u12225
 24425  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24426  000AFE  12AD               	iorwf	4013,f,c	;volatile
 24427                           
 24428                           ; BSR set to: 0
 24429                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24430  000B00  EE20 F006          	lfsr	2,6
 24431  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24432  000B06  26D9               	addwf	fsr2l,f,c
 24433  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24434  000B0A  22DA               	addwfc	fsr2h,f,c
 24435  000B0C  50DF               	movf	indf2,w,c
 24436  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24437  000B10  0E05               	movlw	5
 24438  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24439  000B14                     u12235:
 24440  000B14  90D8               	bcf	status,0,c
 24441  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24442  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24443  000B1A  D7FC               	goto	u12235
 24444  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24445  000B1E  12AD               	iorwf	4013,f,c	;volatile
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 24449  000B20  EE20 F001          	lfsr	2,1
 24450  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24451  000B26  26D9               	addwf	fsr2l,f,c
 24452  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24453  000B2A  22DA               	addwfc	fsr2h,f,c
 24454  000B2C  50DF               	movf	indf2,w,c
 24455  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24456  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24457  000B32  0BF0               	andlw	240
 24458  000B34  12AD               	iorwf	4013,f,c	;volatile
 24459                           
 24460                           ; BSR set to: 0
 24461                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24462  000B36  EE20 F008          	lfsr	2,8
 24463  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24464  000B3C  26D9               	addwf	fsr2l,f,c
 24465  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24466  000B40  22DA               	addwfc	fsr2h,f,c
 24467  000B42  50DF               	movf	indf2,w,c
 24468  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24469  000B46  90D8               	bcf	status,0,c
 24470  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24471  000B4A  90D8               	bcf	status,0,c
 24472  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24473  000B4E  90D8               	bcf	status,0,c
 24474  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24475  000B52  12AD               	iorwf	4013,f,c	;volatile
 24476                           
 24477                           ; BSR set to: 0
 24478                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24479  000B54  EE20 F003          	lfsr	2,3
 24480  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24481  000B5A  26D9               	addwf	fsr2l,f,c
 24482  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24483  000B5E  22DA               	addwfc	fsr2h,f,c
 24484  000B60  50DF               	movf	indf2,w,c
 24485  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24486  000B64  90D8               	bcf	status,0,c
 24487  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24488  000B68  90D8               	bcf	status,0,c
 24489  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24490  000B6C  12AD               	iorwf	4013,f,c	;volatile
 24491                           
 24492                           ; BSR set to: 0
 24493                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 24494  000B6E  0E00               	movlw	0
 24495  000B70  6EAC               	movwf	4012,c	;volatile
 24496                           
 24497                           ; BSR set to: 0
 24498                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24499  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24500  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24501  000B7A  50DF               	movf	indf2,w,c
 24502  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24503  000B7E  0E00               	movlw	0
 24504  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24505  000B82  0E80               	movlw	128
 24506  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24507  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24508  000B88  12AC               	iorwf	4012,f,c	;volatile
 24509                           
 24510                           ; BSR set to: 0
 24511                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24512  000B8A  EE20 F005          	lfsr	2,5
 24513  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24514  000B90  26D9               	addwf	fsr2l,f,c
 24515  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24516  000B94  22DA               	addwfc	fsr2h,f,c
 24517  000B96  50DF               	movf	indf2,w,c
 24518  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24519  000B9A  0E06               	movlw	6
 24520  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24521  000B9E                     u12245:
 24522  000B9E  90D8               	bcf	status,0,c
 24523  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24524  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24525  000BA4  D7FC               	goto	u12245
 24526  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24527  000BA8  12AC               	iorwf	4012,f,c	;volatile
 24528                           
 24529                           ; BSR set to: 0
 24530                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24531  000BAA  EE20 F007          	lfsr	2,7
 24532  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24533  000BB0  26D9               	addwf	fsr2l,f,c
 24534  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24535  000BB4  22DA               	addwfc	fsr2h,f,c
 24536  000BB6  50DF               	movf	indf2,w,c
 24537  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24538  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24539  000BBC  0BF0               	andlw	240
 24540  000BBE  12AC               	iorwf	4012,f,c	;volatile
 24541                           
 24542                           ; BSR set to: 0
 24543                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24544  000BC0  0E00               	movlw	0
 24545  000BC2  6E7E               	movwf	3966,c	;volatile
 24546                           
 24547                           ; BSR set to: 0
 24548                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24549  000BC4  EE20 F002          	lfsr	2,2
 24550  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24551  000BCA  26D9               	addwf	fsr2l,f,c
 24552  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24553  000BCE  22DA               	addwfc	fsr2h,f,c
 24554  000BD0  50DF               	movf	indf2,w,c
 24555  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24556  000BD4  90D8               	bcf	status,0,c
 24557  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24558  000BD8  90D8               	bcf	status,0,c
 24559  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24560  000BDC  90D8               	bcf	status,0,c
 24561  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24562  000BE0  127E               	iorwf	3966,f,c	;volatile
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24566  000BE2  EE20 F00A          	lfsr	2,10
 24567  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24568  000BE8  26D9               	addwf	fsr2l,f,c
 24569  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24570  000BEC  22DA               	addwfc	fsr2h,f,c
 24571  000BEE  50DF               	movf	indf2,w,c
 24572  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24573  000BF2  90D8               	bcf	status,0,c
 24574  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24575  000BF6  127E               	iorwf	3966,f,c	;volatile
 24576                           
 24577                           ; BSR set to: 0
 24578                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24579  000BF8  EE20 F009          	lfsr	2,9
 24580  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24581  000BFE  26D9               	addwf	fsr2l,f,c
 24582  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24583  000C02  22DA               	addwfc	fsr2h,f,c
 24584  000C04  50DF               	movf	indf2,w,c
 24585  000C06  127E               	iorwf	3966,f,c	;volatile
 24586                           
 24587                           ; BSR set to: 0
 24588                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24589  000C08  EE20 F00B          	lfsr	2,11
 24590  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24591  000C0E  26D9               	addwf	fsr2l,f,c
 24592  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24593  000C12  22DA               	addwfc	fsr2h,f,c
 24594  000C14  50DF               	movf	indf2,w,c
 24595  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24596  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24597  000C1A  509D               	movf	3997,w,c	;volatile
 24598  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24599  000C1E  0BEF               	andlw	-17
 24600  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24601  000C22  6E9D               	movwf	3997,c	;volatile
 24602                           
 24603                           ; BSR set to: 0
 24604                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24605  000C24  EE20 F00C          	lfsr	2,12
 24606  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24607  000C2A  26D9               	addwf	fsr2l,f,c
 24608  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24609  000C2E  22DA               	addwfc	fsr2h,f,c
 24610  000C30  50DF               	movf	indf2,w,c
 24611  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24612  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24613  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24614  000C38  509D               	movf	3997,w,c	;volatile
 24615  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24616  000C3C  0BDF               	andlw	-33
 24617  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24618  000C40  6E9D               	movwf	3997,c	;volatile
 24619                           
 24620                           ;uart_drv.c: 326: }
 24621  000C42  0012               	return	
 24622  000C44                     l668:
 24623                           
 24624                           ; BSR set to: 0
 24625                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24626                           
 24627                           ; BSR set to: 0
 24628  000C44  0E02               	movlw	2
 24629  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24630  000C48  A4D8               	btfss	status,2,c
 24631  000C4A  0012               	return	
 24632                           
 24633                           ; BSR set to: 0
 24634                           ;uart_drv.c: 328: {
 24635                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24636  000C4C  9094               	bcf	3988,0,c	;volatile
 24637                           
 24638                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24639  000C4E  8294               	bsf	3988,1,c	;volatile
 24640                           
 24641                           ; BSR set to: 0
 24642                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24643  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24644  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24645  000C58  0E02               	movlw	2
 24646  000C5A  EC61  F015         	call	_SetUartBaudRate
 24647                           
 24648                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24649  000C5E  0E00               	movlw	0
 24650  000C60  6EA8               	movwf	4008,c	;volatile
 24651                           
 24652                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24653  000C62  0100               	movlb	0	; () banked
 24654  000C64  EE20 F004          	lfsr	2,4
 24655  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24656  000C6A  26D9               	addwf	fsr2l,f,c
 24657  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24658  000C6E  22DA               	addwfc	fsr2h,f,c
 24659  000C70  50DF               	movf	indf2,w,c
 24660  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24661  000C74  0E06               	movlw	6
 24662  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24663  000C78                     u12265:
 24664  000C78  90D8               	bcf	status,0,c
 24665  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24666  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24667  000C7E  D7FC               	goto	u12265
 24668  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24669  000C82  12A8               	iorwf	4008,f,c	;volatile
 24670                           
 24671                           ; BSR set to: 0
 24672                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24673  000C84  EE20 F006          	lfsr	2,6
 24674  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24675  000C8A  26D9               	addwf	fsr2l,f,c
 24676  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24677  000C8E  22DA               	addwfc	fsr2h,f,c
 24678  000C90  50DF               	movf	indf2,w,c
 24679  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24680  000C94  0E05               	movlw	5
 24681  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24682  000C98                     u12275:
 24683  000C98  90D8               	bcf	status,0,c
 24684  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24685  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24686  000C9E  D7FC               	goto	u12275
 24687  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24688  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24689                           
 24690                           ; BSR set to: 0
 24691                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24692  000CA4  EE20 F001          	lfsr	2,1
 24693  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24694  000CAA  26D9               	addwf	fsr2l,f,c
 24695  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24696  000CAE  22DA               	addwfc	fsr2h,f,c
 24697  000CB0  50DF               	movf	indf2,w,c
 24698  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24699  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24700  000CB6  0BF0               	andlw	240
 24701  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24702                           
 24703                           ; BSR set to: 0
 24704                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24705  000CBA  EE20 F008          	lfsr	2,8
 24706  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24707  000CC0  26D9               	addwf	fsr2l,f,c
 24708  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24709  000CC4  22DA               	addwfc	fsr2h,f,c
 24710  000CC6  50DF               	movf	indf2,w,c
 24711  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24712  000CCA  90D8               	bcf	status,0,c
 24713  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24714  000CCE  90D8               	bcf	status,0,c
 24715  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24716  000CD2  90D8               	bcf	status,0,c
 24717  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24718  000CD6  12A8               	iorwf	4008,f,c	;volatile
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24722  000CD8  EE20 F003          	lfsr	2,3
 24723  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24724  000CDE  26D9               	addwf	fsr2l,f,c
 24725  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24726  000CE2  22DA               	addwfc	fsr2h,f,c
 24727  000CE4  50DF               	movf	indf2,w,c
 24728  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24729  000CE8  90D8               	bcf	status,0,c
 24730  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24731  000CEC  90D8               	bcf	status,0,c
 24732  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24733  000CF0  12A8               	iorwf	4008,f,c	;volatile
 24734                           
 24735                           ; BSR set to: 0
 24736                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 24737  000CF2  0E00               	movlw	0
 24738  000CF4  6E9C               	movwf	3996,c	;volatile
 24739                           
 24740                           ; BSR set to: 0
 24741                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24742  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24743  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24744  000CFE  50DF               	movf	indf2,w,c
 24745  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24746  000D02  0E00               	movlw	0
 24747  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24748  000D06  0E80               	movlw	128
 24749  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24750  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24751  000D0C  129C               	iorwf	3996,f,c	;volatile
 24752                           
 24753                           ; BSR set to: 0
 24754                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24755  000D0E  EE20 F005          	lfsr	2,5
 24756  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24757  000D14  26D9               	addwf	fsr2l,f,c
 24758  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24759  000D18  22DA               	addwfc	fsr2h,f,c
 24760  000D1A  50DF               	movf	indf2,w,c
 24761  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24762  000D1E  0E06               	movlw	6
 24763  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24764  000D22                     u12285:
 24765  000D22  90D8               	bcf	status,0,c
 24766  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24767  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24768  000D28  D7FC               	goto	u12285
 24769  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24770  000D2C  129C               	iorwf	3996,f,c	;volatile
 24771                           
 24772                           ; BSR set to: 0
 24773                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24774  000D2E  EE20 F007          	lfsr	2,7
 24775  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24776  000D34  26D9               	addwf	fsr2l,f,c
 24777  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24778  000D38  22DA               	addwfc	fsr2h,f,c
 24779  000D3A  50DF               	movf	indf2,w,c
 24780  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24781  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24782  000D40  0BF0               	andlw	240
 24783  000D42  129C               	iorwf	3996,f,c	;volatile
 24784                           
 24785                           ; BSR set to: 0
 24786                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 24787  000D44  0E00               	movlw	0
 24788  000D46  6E7C               	movwf	3964,c	;volatile
 24789                           
 24790                           ; BSR set to: 0
 24791                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24792  000D48  EE20 F002          	lfsr	2,2
 24793  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24794  000D4E  26D9               	addwf	fsr2l,f,c
 24795  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24796  000D52  22DA               	addwfc	fsr2h,f,c
 24797  000D54  50DF               	movf	indf2,w,c
 24798  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24799  000D58  90D8               	bcf	status,0,c
 24800  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24801  000D5C  90D8               	bcf	status,0,c
 24802  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24803  000D60  90D8               	bcf	status,0,c
 24804  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24805  000D64  127C               	iorwf	3964,f,c	;volatile
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24809  000D66  EE20 F00A          	lfsr	2,10
 24810  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24811  000D6C  26D9               	addwf	fsr2l,f,c
 24812  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24813  000D70  22DA               	addwfc	fsr2h,f,c
 24814  000D72  50DF               	movf	indf2,w,c
 24815  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24816  000D76  90D8               	bcf	status,0,c
 24817  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24818  000D7A  127C               	iorwf	3964,f,c	;volatile
 24819                           
 24820                           ; BSR set to: 0
 24821                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24822  000D7C  EE20 F009          	lfsr	2,9
 24823  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24824  000D82  26D9               	addwf	fsr2l,f,c
 24825  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24826  000D86  22DA               	addwfc	fsr2h,f,c
 24827  000D88  50DF               	movf	indf2,w,c
 24828  000D8A  127C               	iorwf	3964,f,c	;volatile
 24829                           
 24830                           ; BSR set to: 0
 24831                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 24832  000D8C  EE20 F00B          	lfsr	2,11
 24833  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24834  000D92  26D9               	addwf	fsr2l,f,c
 24835  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24836  000D96  22DA               	addwfc	fsr2h,f,c
 24837  000D98  50DF               	movf	indf2,w,c
 24838  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24839  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24840  000D9E  50A3               	movf	4003,w,c	;volatile
 24841  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24842  000DA2  0BEF               	andlw	-17
 24843  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24844  000DA6  6EA3               	movwf	4003,c	;volatile
 24845                           
 24846                           ; BSR set to: 0
 24847                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 24848  000DA8  EE20 F00C          	lfsr	2,12
 24849  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24850  000DAE  26D9               	addwf	fsr2l,f,c
 24851  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24852  000DB2  22DA               	addwfc	fsr2h,f,c
 24853  000DB4  50DF               	movf	indf2,w,c
 24854  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24855  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24856  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24857  000DBC  50A3               	movf	4003,w,c	;volatile
 24858  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24859  000DC0  0BDF               	andlw	-33
 24860  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24861  000DC4  6EA3               	movwf	4003,c	;volatile
 24862                           
 24863                           ; BSR set to: 0
 24864  000DC6  0012               	return	
 24865  000DC8                     __end_of_Uart_InitUartModule:
 24866                           	opt stack 0
 24867                           tosu	equ	0xFFF
 24868                           tosh	equ	0xFFE
 24869                           tosl	equ	0xFFD
 24870                           pclath	equ	0xFFA
 24871                           tblptru	equ	0xFF8
 24872                           tblptrh	equ	0xFF7
 24873                           tblptrl	equ	0xFF6
 24874                           tablat	equ	0xFF5
 24875                           prodh	equ	0xFF4
 24876                           prodl	equ	0xFF3
 24877                           intcon	equ	0xFF2
 24878                           intcon2	equ	0xFF1
 24879                           intcon3	equ	0xFF0
 24880                           indf0	equ	0xFEF
 24881                           postinc0	equ	0xFEE
 24882                           plusw0	equ	0xFEB
 24883                           fsr0h	equ	0xFEA
 24884                           fsr0l	equ	0xFE9
 24885                           wreg	equ	0xFE8
 24886                           indf1	equ	0xFE7
 24887                           postinc1	equ	0xFE6
 24888                           postdec1	equ	0xFE5
 24889                           plusw1	equ	0xFE3
 24890                           fsr1h	equ	0xFE2
 24891                           fsr1l	equ	0xFE1
 24892                           indf2	equ	0xFDF
 24893                           postinc2	equ	0xFDE
 24894                           postdec2	equ	0xFDD
 24895                           plusw2	equ	0xFDB
 24896                           fsr2h	equ	0xFDA
 24897                           fsr2l	equ	0xFD9
 24898                           status	equ	0xFD8
 24899                           
 24900 ;; *************** function _SetUartBaudRate *****************
 24901 ;; Defined at:
 24902 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24903 ;; Parameters:    Size  Location     Type
 24904 ;;  Module          1    wreg     unsigned char 
 24905 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 24906 ;;		 -> UartConfig(21), 
 24907 ;; Auto vars:     Size  Location     Type
 24908 ;;  Module          1   57[BANK0 ] unsigned char 
 24909 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 24910 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 24911 ;; Return value:  Size  Location     Type
 24912 ;;                  1    wreg      void 
 24913 ;; Registers used:
 24914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24915 ;; Tracked objects:
 24916 ;;		On entry : 0/0
 24917 ;;		On exit  : 0/0
 24918 ;;		Unchanged: 0/0
 24919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24921 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24923 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24924 ;;Total ram usage:        7 bytes
 24925 ;; Hardware stack levels used:    1
 24926 ;; Hardware stack levels required when called:   12
 24927 ;; This function calls:
 24928 ;;		___lldiv
 24929 ;;		___lmul
 24930 ;; This function is called by:
 24931 ;;		_Uart_InitUartModule
 24932 ;; This function uses a non-reentrant model
 24933 ;;
 24934                           
 24935                           	psect	text114
 24936  002AC2                     __ptext114:
 24937                           	opt stack 0
 24938  002AC2                     _SetUartBaudRate:
 24939                           	opt stack 14
 24940                           
 24941                           ; BSR set to: 0
 24942                           ;incstack = 0
 24943                           ;SetUartBaudRate@Module stored from wreg
 24944  002AC2  0100               	movlb	0	; () banked
 24945  002AC4  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 24946                           
 24947                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 24948  002AC6  0E00               	movlw	0
 24949  002AC8  0100               	movlb	0	; () banked
 24950  002ACA  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 24951  002ACC  0E00               	movlw	0
 24952  002ACE  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 24953                           
 24954                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 24955  002AD0  0E00               	movlw	0
 24956  002AD2  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 24957                           
 24958                           ; BSR set to: 0
 24959                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 24960  002AD4  EE20 F002          	lfsr	2,2
 24961  002AD8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24962  002ADA  26D9               	addwf	fsr2l,f,c
 24963  002ADC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24964  002ADE  22DA               	addwfc	fsr2h,f,c
 24965  002AE0  50DF               	movf	indf2,w,c
 24966  002AE2  A4D8               	btfss	status,2,c
 24967  002AE4  D00B               	goto	l625
 24968                           
 24969                           ; BSR set to: 0
 24970  002AE6  EE20 F002          	lfsr	2,2
 24971  002AEA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24972  002AEC  26D9               	addwf	fsr2l,f,c
 24973  002AEE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24974  002AF0  22DA               	addwfc	fsr2h,f,c
 24975  002AF2  50DF               	movf	indf2,w,c
 24976  002AF4  A4D8               	btfss	status,2,c
 24977  002AF6  D002               	goto	l625
 24978                           
 24979                           ; BSR set to: 0
 24980                           ;uart_drv.c: 128: {
 24981                           ;uart_drv.c: 129: DivisionFactor = 64;
 24982  002AF8  0E40               	movlw	64
 24983  002AFA  D039               	goto	L30
 24984  002AFC                     l625:
 24985                           
 24986                           ; BSR set to: 0
 24987                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 24988                           
 24989                           ; BSR set to: 0
 24990  002AFC  EE20 F002          	lfsr	2,2
 24991  002B00  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 24992  002B02  26D9               	addwf	fsr2l,f,c
 24993  002B04  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 24994  002B06  22DA               	addwfc	fsr2h,f,c
 24995  002B08  04DE               	decf	postinc2,w,c
 24996  002B0A  A4D8               	btfss	status,2,c
 24997  002B0C  D009               	goto	l627
 24998                           
 24999                           ; BSR set to: 0
 25000  002B0E  EE20 F002          	lfsr	2,2
 25001  002B12  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25002  002B14  26D9               	addwf	fsr2l,f,c
 25003  002B16  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25004  002B18  22DA               	addwfc	fsr2h,f,c
 25005  002B1A  50DF               	movf	indf2,w,c
 25006  002B1C  B4D8               	btfsc	status,2,c
 25007  002B1E  D012               	goto	u11410
 25008  002B20                     l627:
 25009                           
 25010                           ; BSR set to: 0
 25011                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25012                           
 25013                           ; BSR set to: 0
 25014  002B20  EE20 F002          	lfsr	2,2
 25015  002B24  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25016  002B26  26D9               	addwf	fsr2l,f,c
 25017  002B28  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25018  002B2A  22DA               	addwfc	fsr2h,f,c
 25019  002B2C  50DF               	movf	indf2,w,c
 25020  002B2E  A4D8               	btfss	status,2,c
 25021  002B30  D00B               	goto	l629
 25022                           
 25023                           ; BSR set to: 0
 25024  002B32  EE20 F002          	lfsr	2,2
 25025  002B36  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25026  002B38  26D9               	addwf	fsr2l,f,c
 25027  002B3A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25028  002B3C  22DA               	addwfc	fsr2h,f,c
 25029  002B3E  04DE               	decf	postinc2,w,c
 25030  002B40  A4D8               	btfss	status,2,c
 25031  002B42  D002               	goto	l629
 25032  002B44                     u11410:
 25033                           
 25034                           ; BSR set to: 0
 25035                           ;uart_drv.c: 136: {
 25036                           ;uart_drv.c: 137: DivisionFactor = 16;
 25037  002B44  0E10               	movlw	16
 25038  002B46  D013               	goto	L30
 25039  002B48                     l629:
 25040                           
 25041                           ; BSR set to: 0
 25042                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25043                           
 25044                           ; BSR set to: 0
 25045  002B48  EE20 F002          	lfsr	2,2
 25046  002B4C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25047  002B4E  26D9               	addwf	fsr2l,f,c
 25048  002B50  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25049  002B52  22DA               	addwfc	fsr2h,f,c
 25050  002B54  04DE               	decf	postinc2,w,c
 25051  002B56  A4D8               	btfss	status,2,c
 25052  002B58  D00B               	goto	l631
 25053                           
 25054                           ; BSR set to: 0
 25055  002B5A  EE20 F002          	lfsr	2,2
 25056  002B5E  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25057  002B60  26D9               	addwf	fsr2l,f,c
 25058  002B62  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25059  002B64  22DA               	addwfc	fsr2h,f,c
 25060  002B66  04DE               	decf	postinc2,w,c
 25061  002B68  A4D8               	btfss	status,2,c
 25062  002B6A  D002               	goto	l631
 25063                           
 25064                           ; BSR set to: 0
 25065                           ;uart_drv.c: 140: {
 25066                           ;uart_drv.c: 141: DivisionFactor = 4;
 25067  002B6C  0E04               	movlw	4
 25068  002B6E                     L30:
 25069  002B6E  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25070  002B70                     l631:
 25071                           
 25072                           ; BSR set to: 0
 25073                           ;uart_drv.c: 146: }
 25074                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 25075                           
 25076                           ; BSR set to: 0
 25077                           
 25078                           ; BSR set to: 0
 25079                           
 25080                           ; BSR set to: 0
 25081                           
 25082                           ; BSR set to: 0
 25083                           
 25084                           ;uart_drv.c: 143: else
 25085                           ;uart_drv.c: 144: {
 25086                           
 25087                           ; BSR set to: 0
 25088  002B70  EE20 F00D          	lfsr	2,13
 25089  002B74  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25090  002B76  26D9               	addwf	fsr2l,f,c
 25091  002B78  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25092  002B7A  22DA               	addwfc	fsr2h,f,c
 25093  002B7C  CFDE F089          	movff	postinc2,___lldiv@dividend
 25094  002B80  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 25095  002B84  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 25096  002B88  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 25097  002B8C  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 25098  002B8E  6F7D               	movwf	___lmul@multiplier& (0+255),b
 25099  002B90  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 25100  002B92  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 25101  002B94  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 25102  002B96  EE20 F011          	lfsr	2,17
 25103  002B9A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25104  002B9C  26D9               	addwf	fsr2l,f,c
 25105  002B9E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25106  002BA0  22DA               	addwfc	fsr2h,f,c
 25107  002BA2  CFDE F081          	movff	postinc2,___lmul@multiplicand
 25108  002BA6  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 25109  002BAA  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 25110  002BAE  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 25111  002BB2  EC37  F029         	call	___lmul	;wreg free
 25112  002BB6  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 25113  002BBA  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 25114  002BBE  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 25115  002BC2  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 25116  002BC6  EC11  F026         	call	___lldiv	;wreg free
 25117  002BCA  0EFF               	movlw	255
 25118  002BCC  0100               	movlb	0	; () banked
 25119  002BCE  2589               	addwf	?___lldiv& (0+255),w,b
 25120  002BD0  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25121  002BD2  0EFF               	movlw	255
 25122  002BD4  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 25123  002BD6  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25124                           
 25125                           ; BSR set to: 0
 25126                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 25127  002BD8  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 25128  002BDA  A4D8               	btfss	status,2,c
 25129  002BDC  D005               	goto	l633
 25130                           
 25131                           ; BSR set to: 0
 25132                           ;uart_drv.c: 152: {
 25133                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25134  002BDE  0E00               	movlw	0
 25135  002BE0  6E7F               	movwf	3967,c	;volatile
 25136                           
 25137                           ; BSR set to: 0
 25138                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25139  002BE2  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 25140                           
 25141                           ;uart_drv.c: 156: }
 25142  002BE6  0012               	return	
 25143  002BE8                     l633:
 25144                           
 25145                           ; BSR set to: 0
 25146                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 25147                           
 25148                           ; BSR set to: 0
 25149  002BE8  0E02               	movlw	2
 25150  002BEA  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 25151  002BEC  A4D8               	btfss	status,2,c
 25152  002BEE  0012               	return	
 25153                           
 25154                           ; BSR set to: 0
 25155                           ;uart_drv.c: 158: {
 25156                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25157  002BF0  0E00               	movlw	0
 25158  002BF2  6E7D               	movwf	3965,c	;volatile
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25162  002BF4  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 25163                           
 25164                           ; BSR set to: 0
 25165  002BF8  0012               	return	
 25166  002BFA                     __end_of_SetUartBaudRate:
 25167                           	opt stack 0
 25168                           tosu	equ	0xFFF
 25169                           tosh	equ	0xFFE
 25170                           tosl	equ	0xFFD
 25171                           pclath	equ	0xFFA
 25172                           tblptru	equ	0xFF8
 25173                           tblptrh	equ	0xFF7
 25174                           tblptrl	equ	0xFF6
 25175                           tablat	equ	0xFF5
 25176                           prodh	equ	0xFF4
 25177                           prodl	equ	0xFF3
 25178                           intcon	equ	0xFF2
 25179                           intcon2	equ	0xFF1
 25180                           intcon3	equ	0xFF0
 25181                           indf0	equ	0xFEF
 25182                           postinc0	equ	0xFEE
 25183                           plusw0	equ	0xFEB
 25184                           fsr0h	equ	0xFEA
 25185                           fsr0l	equ	0xFE9
 25186                           wreg	equ	0xFE8
 25187                           indf1	equ	0xFE7
 25188                           postinc1	equ	0xFE6
 25189                           postdec1	equ	0xFE5
 25190                           plusw1	equ	0xFE3
 25191                           fsr1h	equ	0xFE2
 25192                           fsr1l	equ	0xFE1
 25193                           indf2	equ	0xFDF
 25194                           postinc2	equ	0xFDE
 25195                           postdec2	equ	0xFDD
 25196                           plusw2	equ	0xFDB
 25197                           fsr2h	equ	0xFDA
 25198                           fsr2l	equ	0xFD9
 25199                           status	equ	0xFD8
 25200                           
 25201 ;; *************** function ___lmul *****************
 25202 ;; Defined at:
 25203 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 25204 ;; Parameters:    Size  Location     Type
 25205 ;;  multiplier      4   29[BANK0 ] unsigned long 
 25206 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 25207 ;; Auto vars:     Size  Location     Type
 25208 ;;  product         4   37[BANK0 ] unsigned long 
 25209 ;; Return value:  Size  Location     Type
 25210 ;;                  4   29[BANK0 ] unsigned long 
 25211 ;; Registers used:
 25212 ;;		wreg, status,2, status,0
 25213 ;; Tracked objects:
 25214 ;;		On entry : 0/0
 25215 ;;		On exit  : 0/0
 25216 ;;		Unchanged: 0/0
 25217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25218 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25219 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25221 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25222 ;;Total ram usage:       12 bytes
 25223 ;; Hardware stack levels used:    1
 25224 ;; Hardware stack levels required when called:   11
 25225 ;; This function calls:
 25226 ;;		Nothing
 25227 ;; This function is called by:
 25228 ;;		_Tmr_TmrBPrSet
 25229 ;;		_SetUartBaudRate
 25230 ;;		_strtol
 25231 ;; This function uses a non-reentrant model
 25232 ;;
 25233                           
 25234                           	psect	text115
 25235  00526E                     __ptext115:
 25236                           	opt stack 0
 25237  00526E                     ___lmul:
 25238                           	opt stack 15
 25239                           
 25240                           ; BSR set to: 0
 25241                           ;incstack = 0
 25242  00526E  0E00               	movlw	0
 25243  005270  0100               	movlb	0	; () banked
 25244  005272  6F85               	movwf	___lmul@product& (0+255),b
 25245  005274  0E00               	movlw	0
 25246  005276  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25247  005278  0E00               	movlw	0
 25248  00527A  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25249  00527C  0E00               	movlw	0
 25250  00527E  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25251  005280                     
 25252                           ; BSR set to: 0
 25253                           
 25254                           ; BSR set to: 0
 25255  005280  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25256  005282  D008               	goto	l2623
 25257                           
 25258                           ; BSR set to: 0
 25259  005284  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25260  005286  2785               	addwf	___lmul@product& (0+255),f,b
 25261  005288  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25262  00528A  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25263  00528C  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25264  00528E  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25265  005290  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25266  005292  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25267  005294                     l2623:
 25268                           
 25269                           ; BSR set to: 0
 25270                           
 25271                           ; BSR set to: 0
 25272  005294  90D8               	bcf	status,0,c
 25273  005296  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25274  005298  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25275  00529A  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25276  00529C  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25277                           
 25278                           ; BSR set to: 0
 25279  00529E  90D8               	bcf	status,0,c
 25280  0052A0  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25281  0052A2  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25282  0052A4  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25283  0052A6  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 25284  0052A8  517D               	movf	___lmul@multiplier& (0+255),w,b
 25285  0052AA  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25286  0052AC  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25287  0052AE  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25288  0052B0  A4D8               	btfss	status,2,c
 25289  0052B2  D7E6               	goto	l2622
 25290                           
 25291                           ; BSR set to: 0
 25292  0052B4  C085  F07D         	movff	___lmul@product,?___lmul
 25293  0052B8  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 25294  0052BC  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 25295  0052C0  C088  F080         	movff	___lmul@product+3,?___lmul+3
 25296                           
 25297                           ; BSR set to: 0
 25298  0052C4  0012               	return		;funcret
 25299  0052C6                     __end_of___lmul:
 25300                           	opt stack 0
 25301                           tosu	equ	0xFFF
 25302                           tosh	equ	0xFFE
 25303                           tosl	equ	0xFFD
 25304                           pclath	equ	0xFFA
 25305                           tblptru	equ	0xFF8
 25306                           tblptrh	equ	0xFF7
 25307                           tblptrl	equ	0xFF6
 25308                           tablat	equ	0xFF5
 25309                           prodh	equ	0xFF4
 25310                           prodl	equ	0xFF3
 25311                           intcon	equ	0xFF2
 25312                           intcon2	equ	0xFF1
 25313                           intcon3	equ	0xFF0
 25314                           indf0	equ	0xFEF
 25315                           postinc0	equ	0xFEE
 25316                           plusw0	equ	0xFEB
 25317                           fsr0h	equ	0xFEA
 25318                           fsr0l	equ	0xFE9
 25319                           wreg	equ	0xFE8
 25320                           indf1	equ	0xFE7
 25321                           postinc1	equ	0xFE6
 25322                           postdec1	equ	0xFE5
 25323                           plusw1	equ	0xFE3
 25324                           fsr1h	equ	0xFE2
 25325                           fsr1l	equ	0xFE1
 25326                           indf2	equ	0xFDF
 25327                           postinc2	equ	0xFDE
 25328                           postdec2	equ	0xFDD
 25329                           plusw2	equ	0xFDB
 25330                           fsr2h	equ	0xFDA
 25331                           fsr2l	equ	0xFD9
 25332                           status	equ	0xFD8
 25333                           
 25334 ;; *************** function _UartSetConfigLow *****************
 25335 ;; Defined at:
 25336 ;;		line 228 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25337 ;; Parameters:    Size  Location     Type
 25338 ;;		None
 25339 ;; Auto vars:     Size  Location     Type
 25340 ;;		None
 25341 ;; Return value:  Size  Location     Type
 25342 ;;                  1    wreg      void 
 25343 ;; Registers used:
 25344 ;;		wreg, status,2
 25345 ;; Tracked objects:
 25346 ;;		On entry : 0/0
 25347 ;;		On exit  : 0/0
 25348 ;;		Unchanged: 0/0
 25349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25354 ;;Total ram usage:        0 bytes
 25355 ;; Hardware stack levels used:    1
 25356 ;; Hardware stack levels required when called:   11
 25357 ;; This function calls:
 25358 ;;		Nothing
 25359 ;; This function is called by:
 25360 ;;		_ConfigureModem
 25361 ;; This function uses a non-reentrant model
 25362 ;;
 25363                           
 25364                           	psect	text116
 25365  0052C6                     __ptext116:
 25366                           	opt stack 0
 25367  0052C6                     _UartSetConfigLow:
 25368                           	opt stack 15
 25369                           
 25370                           ;mdm_gsm_gprs.c: 230: UartConfig.UartEnable = ((UINT8)(1));
 25371                           
 25372                           ; BSR set to: 0
 25373                           ;incstack = 0
 25374  0052C6  0E01               	movlw	1
 25375  0052C8  0103               	movlb	3	; () banked
 25376  0052CA  6F28               	movwf	_UartConfig& (0+255),b
 25377                           
 25378                           ;mdm_gsm_gprs.c: 231: UartConfig.UartMode = ((UINT8)(0));
 25379  0052CC  0E00               	movlw	0
 25380  0052CE  6F29               	movwf	(_UartConfig+1)& (0+255),b
 25381                           
 25382                           ;mdm_gsm_gprs.c: 232: UartConfig.BaudRateMode = ((UINT8)(0));
 25383  0052D0  0E00               	movlw	0
 25384  0052D2  6F2A               	movwf	(_UartConfig+2)& (0+255),b
 25385                           
 25386                           ;mdm_gsm_gprs.c: 233: UartConfig.HighBaudMode = ((UINT8)(0));
 25387  0052D4  0E00               	movlw	0
 25388  0052D6  6F2B               	movwf	(_UartConfig+3)& (0+255),b
 25389                           
 25390                           ;mdm_gsm_gprs.c: 234: UartConfig.Tx9bitMode = ((UINT8)(0));
 25391  0052D8  0E00               	movlw	0
 25392  0052DA  6F2C               	movwf	(_UartConfig+4)& (0+255),b
 25393                           
 25394                           ;mdm_gsm_gprs.c: 235: UartConfig.Rx9bitMode = ((UINT8)(0));
 25395  0052DC  0E00               	movlw	0
 25396  0052DE  6F2D               	movwf	(_UartConfig+5)& (0+255),b
 25397                           
 25398                           ;mdm_gsm_gprs.c: 236: UartConfig.TxEnable = ((UINT8)(1));
 25399  0052E0  0E01               	movlw	1
 25400  0052E2  6F2E               	movwf	(_UartConfig+6)& (0+255),b
 25401                           
 25402                           ;mdm_gsm_gprs.c: 237: UartConfig.RxEnable = ((UINT8)(1));
 25403  0052E4  0E01               	movlw	1
 25404  0052E6  6F2F               	movwf	(_UartConfig+7)& (0+255),b
 25405                           
 25406                           ;mdm_gsm_gprs.c: 238: UartConfig.SendBreakEnable = ((UINT8)(0));
 25407  0052E8  0E00               	movlw	0
 25408  0052EA  6F30               	movwf	(_UartConfig+8)& (0+255),b
 25409                           
 25410                           ;mdm_gsm_gprs.c: 239: UartConfig.AutobaudEnable = ((UINT8)(0));
 25411  0052EC  0E00               	movlw	0
 25412  0052EE  6F31               	movwf	(_UartConfig+9)& (0+255),b
 25413                           
 25414                           ;mdm_gsm_gprs.c: 240: UartConfig.WakeUpEnable = ((UINT8)(0));
 25415  0052F0  0E00               	movlw	0
 25416  0052F2  6F32               	movwf	(_UartConfig+10)& (0+255),b
 25417                           
 25418                           ;mdm_gsm_gprs.c: 241: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25419  0052F4  0E00               	movlw	0
 25420  0052F6  6F33               	movwf	(_UartConfig+11)& (0+255),b
 25421                           
 25422                           ;mdm_gsm_gprs.c: 242: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25423  0052F8  0E01               	movlw	1
 25424  0052FA  6F34               	movwf	(_UartConfig+12)& (0+255),b
 25425                           
 25426                           ;mdm_gsm_gprs.c: 243: UartConfig.McuBusClock = ((UINT32)(48000000));
 25427  0052FC  0E00               	movlw	0
 25428  0052FE  6F35               	movwf	(_UartConfig+13)& (0+255),b
 25429  005300  0E6C               	movlw	108
 25430  005302  6F36               	movwf	(_UartConfig+14)& (0+255),b
 25431  005304  0EDC               	movlw	220
 25432  005306  6F37               	movwf	(_UartConfig+15)& (0+255),b
 25433  005308  0E02               	movlw	2
 25434  00530A  6F38               	movwf	(_UartConfig+16)& (0+255),b
 25435                           
 25436                           ;mdm_gsm_gprs.c: 244: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25437  00530C  0E80               	movlw	128
 25438  00530E  6F39               	movwf	(_UartConfig+17)& (0+255),b
 25439  005310  0E25               	movlw	37
 25440  005312  6F3A               	movwf	(_UartConfig+18)& (0+255),b
 25441  005314  0E00               	movlw	0
 25442  005316  6F3B               	movwf	(_UartConfig+19)& (0+255),b
 25443  005318  0E00               	movlw	0
 25444  00531A  6F3C               	movwf	(_UartConfig+20)& (0+255),b
 25445                           
 25446                           ; BSR set to: 3
 25447  00531C  0012               	return		;funcret
 25448  00531E                     __end_of_UartSetConfigLow:
 25449                           	opt stack 0
 25450                           tosu	equ	0xFFF
 25451                           tosh	equ	0xFFE
 25452                           tosl	equ	0xFFD
 25453                           pclath	equ	0xFFA
 25454                           tblptru	equ	0xFF8
 25455                           tblptrh	equ	0xFF7
 25456                           tblptrl	equ	0xFF6
 25457                           tablat	equ	0xFF5
 25458                           prodh	equ	0xFF4
 25459                           prodl	equ	0xFF3
 25460                           intcon	equ	0xFF2
 25461                           intcon2	equ	0xFF1
 25462                           intcon3	equ	0xFF0
 25463                           indf0	equ	0xFEF
 25464                           postinc0	equ	0xFEE
 25465                           plusw0	equ	0xFEB
 25466                           fsr0h	equ	0xFEA
 25467                           fsr0l	equ	0xFE9
 25468                           wreg	equ	0xFE8
 25469                           indf1	equ	0xFE7
 25470                           postinc1	equ	0xFE6
 25471                           postdec1	equ	0xFE5
 25472                           plusw1	equ	0xFE3
 25473                           fsr1h	equ	0xFE2
 25474                           fsr1l	equ	0xFE1
 25475                           indf2	equ	0xFDF
 25476                           postinc2	equ	0xFDE
 25477                           postdec2	equ	0xFDD
 25478                           plusw2	equ	0xFDB
 25479                           fsr2h	equ	0xFDA
 25480                           fsr2l	equ	0xFD9
 25481                           status	equ	0xFD8
 25482                           
 25483 ;; *************** function _CheckModem *****************
 25484 ;; Defined at:
 25485 ;;		line 282 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25486 ;; Parameters:    Size  Location     Type
 25487 ;;		None
 25488 ;; Auto vars:     Size  Location     Type
 25489 ;;		None
 25490 ;; Return value:  Size  Location     Type
 25491 ;;                  1    wreg      void 
 25492 ;; Registers used:
 25493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25494 ;; Tracked objects:
 25495 ;;		On entry : 0/0
 25496 ;;		On exit  : 0/0
 25497 ;;		Unchanged: 0/0
 25498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25503 ;;Total ram usage:        0 bytes
 25504 ;; Hardware stack levels used:    1
 25505 ;; Hardware stack levels required when called:   14
 25506 ;; This function calls:
 25507 ;;		_GenerateEvt
 25508 ;;		_OsTmr_GetTimerStatus
 25509 ;;		_OsTmr_StartTimer
 25510 ;;		_ReceiveEvt
 25511 ;;		_Uart_WriteConstString
 25512 ;; This function is called by:
 25513 ;;		_Mdm_MainTask
 25514 ;; This function uses a non-reentrant model
 25515 ;;
 25516                           
 25517                           	psect	text117
 25518  002196                     __ptext117:
 25519                           	opt stack 0
 25520  002196                     _CheckModem:
 25521                           	opt stack 13
 25522                           
 25523                           ;mdm_gsm_gprs.c: 284: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 25524                           ;mdm_gsm_gprs.c: 285: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25525                           ;mdm_gsm_gprs.c: 287: switch (CheckMdmSts)
 25526                           
 25527                           ; BSR set to: 3
 25528                           ;incstack = 0
 25529  002196  D09C               	goto	l982
 25530  002198                     
 25531                           ;mdm_gsm_gprs.c: 291: OsTmr_StartTimer(&Timeout,2000);
 25532  002198  0EF2               	movlw	low CheckModem@Timeout
 25533  00219A  0100               	movlb	0	; () banked
 25534  00219C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25535  00219E  0E03               	movlw	high CheckModem@Timeout
 25536  0021A0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25537  0021A2  0ED0               	movlw	208
 25538  0021A4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25539  0021A6  0E07               	movlw	7
 25540  0021A8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25541  0021AA  0E00               	movlw	0
 25542  0021AC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25543  0021AE  0E00               	movlw	0
 25544  0021B0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25545  0021B2  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 25546                           
 25547                           ;mdm_gsm_gprs.c: 293: CheckMdmSts = MdmCh_InitialDelay;
 25548  0021B6  0E01               	movlw	1
 25549  0021B8  0101               	movlb	1	; () banked
 25550  0021BA  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25551                           
 25552                           ;mdm_gsm_gprs.c: 294: break;
 25553  0021BC  0012               	return	
 25554  0021BE                     
 25555                           ; BSR set to: 1
 25556                           ;mdm_gsm_gprs.c: 298: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25557                           
 25558                           ; BSR set to: 1
 25559  0021BE  0EF2               	movlw	low CheckModem@Timeout
 25560  0021C0  0100               	movlb	0	; () banked
 25561  0021C2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25562  0021C4  0E03               	movlw	high CheckModem@Timeout
 25563  0021C6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25564  0021C8  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25565  0021CC  06E8               	decf	wreg,f,c
 25566  0021CE  A4D8               	btfss	status,2,c
 25567  0021D0  0012               	return	
 25568                           
 25569                           ;mdm_gsm_gprs.c: 299: {
 25570                           ;mdm_gsm_gprs.c: 301: CheckMdmSts = MdmCh_SendATE1;
 25571  0021D2  0E02               	movlw	2
 25572  0021D4  0101               	movlb	1	; () banked
 25573  0021D6  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25574                           
 25575                           ; BSR set to: 1
 25576                           ;mdm_gsm_gprs.c: 302: }
 25577                           ;mdm_gsm_gprs.c: 303: break;
 25578  0021D8  0012               	return	
 25579  0021DA                     
 25580                           ; BSR set to: 1
 25581                           ;mdm_gsm_gprs.c: 307: Uart_WriteConstString(1,"AT\r\n");
 25582                           
 25583                           ; BSR set to: 1
 25584  0021DA  0EE5               	movlw	low STR_1
 25585  0021DC  0100               	movlb	0	; () banked
 25586  0021DE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25587  0021E0  0EFF               	movlw	high STR_1
 25588  0021E2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25589  0021E4  0E01               	movlw	1
 25590  0021E6  EC6D  F02C         	call	_Uart_WriteConstString
 25591                           
 25592                           ;mdm_gsm_gprs.c: 309: OsTmr_StartTimer(&Timeout,2000u);
 25593  0021EA  0EF2               	movlw	low CheckModem@Timeout
 25594  0021EC  0100               	movlb	0	; () banked
 25595  0021EE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25596  0021F0  0E03               	movlw	high CheckModem@Timeout
 25597  0021F2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25598  0021F4  0ED0               	movlw	208
 25599  0021F6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25600  0021F8  0E07               	movlw	7
 25601  0021FA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25602  0021FC  0E00               	movlw	0
 25603  0021FE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25604  002200  0E00               	movlw	0
 25605  002202  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25606  002204  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 25607                           
 25608                           ;mdm_gsm_gprs.c: 311: CheckMdmSts = MdmCh_WaitEcho;
 25609  002208  0E03               	movlw	3
 25610  00220A  0101               	movlb	1	; () banked
 25611  00220C  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25612                           
 25613                           ;mdm_gsm_gprs.c: 312: break;
 25614  00220E  0012               	return	
 25615  002210                     
 25616                           ; BSR set to: 1
 25617                           ;mdm_gsm_gprs.c: 316: if (ReceiveEvt(&NewStringReceived))
 25618                           
 25619                           ; BSR set to: 1
 25620  002210  0E3C               	movlw	low _NewStringReceived
 25621  002212  0100               	movlb	0	; () banked
 25622  002214  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25623  002216  0E00               	movlw	high _NewStringReceived
 25624  002218  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25625  00221A  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 25626  00221E  0900               	iorlw	0
 25627  002220  B4D8               	btfsc	status,2,c
 25628  002222  D030               	goto	l989
 25629                           
 25630                           ;mdm_gsm_gprs.c: 317: {
 25631                           ;mdm_gsm_gprs.c: 319: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25632  002224  CC58  FFE8         	movff	_RxBuffer,wreg
 25633  002228  0A4F               	xorlw	79
 25634  00222A  A4D8               	btfss	status,2,c
 25635  00222C  D005               	goto	u13220
 25636  00222E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25637  002232  0A4B               	xorlw	75
 25638  002234  B4D8               	btfsc	status,2,c
 25639  002236  D00A               	goto	u13240
 25640  002238                     u13220:
 25641  002238  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25642  00223C  0A4F               	xorlw	79
 25643  00223E  A4D8               	btfss	status,2,c
 25644  002240  0012               	return	
 25645  002242  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25646  002246  0A4B               	xorlw	75
 25647  002248  A4D8               	btfss	status,2,c
 25648  00224A  0012               	return	
 25649  00224C                     u13240:
 25650                           
 25651                           ;mdm_gsm_gprs.c: 320: {
 25652                           ;mdm_gsm_gprs.c: 321: MdmStatus = ModemReady;
 25653  00224C  0E02               	movlw	2
 25654  00224E  0100               	movlb	0	; () banked
 25655  002250  6FD3               	movwf	_MdmStatus& (0+255),b
 25656                           
 25657                           ; BSR set to: 0
 25658                           ;mdm_gsm_gprs.c: 323: GenerateEvt(&MdmOnOffPulseRequest);
 25659  002252  0EE2               	movlw	low _MdmOnOffPulseRequest
 25660  002254  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25661  002256  0E00               	movlw	high _MdmOnOffPulseRequest
 25662  002258  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25663  00225A  EC7F  F030         	call	_GenerateEvt	;wreg free
 25664                           
 25665                           ;mdm_gsm_gprs.c: 325: OsTmr_StartTimer(&Timeout,1000u);
 25666  00225E  0EF2               	movlw	low CheckModem@Timeout
 25667  002260  0100               	movlb	0	; () banked
 25668  002262  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25669  002264  0E03               	movlw	high CheckModem@Timeout
 25670  002266  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25671  002268  0EE8               	movlw	232
 25672  00226A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25673  00226C  0E03               	movlw	3
 25674  00226E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25675  002270  0E00               	movlw	0
 25676  002272  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25677  002274  0E00               	movlw	0
 25678  002276  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25679  002278  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 25680                           
 25681                           ;mdm_gsm_gprs.c: 327: CheckMdmSts = MdmCh_Delay;
 25682  00227C  0E04               	movlw	4
 25683  00227E  0101               	movlb	1	; () banked
 25684  002280  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25685                           
 25686                           ; BSR set to: 1
 25687                           ;mdm_gsm_gprs.c: 328: }
 25688                           ;mdm_gsm_gprs.c: 329: }
 25689  002282  0012               	return	
 25690  002284                     l989:
 25691                           
 25692                           ;mdm_gsm_gprs.c: 330: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25693                           
 25694                           ; BSR set to: 1
 25695  002284  0EF2               	movlw	low CheckModem@Timeout
 25696  002286  0100               	movlb	0	; () banked
 25697  002288  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25698  00228A  0E03               	movlw	high CheckModem@Timeout
 25699  00228C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25700  00228E  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25701  002292  06E8               	decf	wreg,f,c
 25702  002294  A4D8               	btfss	status,2,c
 25703  002296  0012               	return	
 25704                           
 25705                           ;mdm_gsm_gprs.c: 331: {
 25706                           ;mdm_gsm_gprs.c: 333: MdmStatus = ModemOff;
 25707  002298  0E00               	movlw	0
 25708  00229A  0100               	movlb	0	; () banked
 25709  00229C  6FD3               	movwf	_MdmStatus& (0+255),b
 25710                           
 25711                           ;mdm_gsm_gprs.c: 335: ComChecCompleted = 1u;
 25712  00229E  0E01               	movlw	1
 25713  0022A0  6E2B               	movwf	_ComChecCompleted,c
 25714                           
 25715                           ;mdm_gsm_gprs.c: 337: CheckMdmSts = MdmCh_Done;
 25716  0022A2  0E05               	movlw	5
 25717  0022A4  0101               	movlb	1	; () banked
 25718  0022A6  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25719                           
 25720                           ; BSR set to: 1
 25721                           ;mdm_gsm_gprs.c: 342: }
 25722                           ;mdm_gsm_gprs.c: 343: break;
 25723                           
 25724                           ; BSR set to: 1
 25725                           
 25726                           ;mdm_gsm_gprs.c: 339: else
 25727                           ;mdm_gsm_gprs.c: 340: {
 25728                           
 25729                           ; BSR set to: 1
 25730                           
 25731                           ;mdm_gsm_gprs.c: 338: }
 25732  0022A8  0012               	return	
 25733  0022AA                     
 25734                           ; BSR set to: 1
 25735                           ;mdm_gsm_gprs.c: 347: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25736                           
 25737                           ; BSR set to: 1
 25738  0022AA  0EF2               	movlw	low CheckModem@Timeout
 25739  0022AC  0100               	movlb	0	; () banked
 25740  0022AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25741  0022B0  0E03               	movlw	high CheckModem@Timeout
 25742  0022B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25743  0022B4  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 25744  0022B8  06E8               	decf	wreg,f,c
 25745  0022BA  A4D8               	btfss	status,2,c
 25746  0022BC  0012               	return	
 25747                           
 25748                           ;mdm_gsm_gprs.c: 348: {
 25749                           ;mdm_gsm_gprs.c: 350: MdmStatus = ModemOff;
 25750  0022BE  0E00               	movlw	0
 25751  0022C0  0100               	movlb	0	; () banked
 25752  0022C2  6FD3               	movwf	_MdmStatus& (0+255),b
 25753                           
 25754                           ;mdm_gsm_gprs.c: 352: ComChecCompleted = 1u;
 25755  0022C4  0E01               	movlw	1
 25756  0022C6  6E2B               	movwf	_ComChecCompleted,c
 25757                           
 25758                           ;mdm_gsm_gprs.c: 354: CheckMdmSts = MdmCh_Done;
 25759  0022C8  0E05               	movlw	5
 25760  0022CA  0101               	movlb	1	; () banked
 25761  0022CC  6FF5               	movwf	CheckModem@CheckMdmSts& (0+255),b
 25762                           
 25763                           ; BSR set to: 1
 25764                           ;mdm_gsm_gprs.c: 364: }
 25765                           
 25766                           ; BSR set to: 1
 25767                           ;mdm_gsm_gprs.c: 363: break;
 25768                           
 25769                           ;mdm_gsm_gprs.c: 362: default:
 25770                           
 25771                           ; BSR set to: 1
 25772                           ;mdm_gsm_gprs.c: 360: break;
 25773                           
 25774                           ;mdm_gsm_gprs.c: 358: case MdmCh_Done:
 25775                           
 25776                           ; BSR set to: 1
 25777                           ;mdm_gsm_gprs.c: 355: }
 25778                           ;mdm_gsm_gprs.c: 356: break;
 25779  0022CE  0012               	return	
 25780  0022D0                     l982:
 25781                           
 25782                           ; BSR set to: 1
 25783  0022D0  0101               	movlb	1	; () banked
 25784  0022D2  51F5               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 25785                           
 25786                           ; Switch size 1, requested type "space"
 25787                           ; Number of cases is 6, Range of values is 0 to 5
 25788                           ; switch strategies available:
 25789                           ; Name         Instructions Cycles
 25790                           ; simple_byte           19    10 (average)
 25791                           ;	Chosen strategy is simple_byte
 25792  0022D4  0A00               	xorlw	0	; case 0
 25793  0022D6  B4D8               	btfsc	status,2,c
 25794  0022D8  D75F               	goto	l983
 25795  0022DA  0A01               	xorlw	1	; case 1
 25796  0022DC  B4D8               	btfsc	status,2,c
 25797  0022DE  D76F               	goto	l985
 25798  0022E0  0A03               	xorlw	3	; case 2
 25799  0022E2  B4D8               	btfsc	status,2,c
 25800  0022E4  D77A               	goto	l987
 25801  0022E6  0A01               	xorlw	1	; case 3
 25802  0022E8  B4D8               	btfsc	status,2,c
 25803  0022EA  D792               	goto	l988
 25804  0022EC  0A07               	xorlw	7	; case 4
 25805  0022EE  B4D8               	btfsc	status,2,c
 25806  0022F0  D7DC               	goto	l998
 25807  0022F2  0A01               	xorlw	1	; case 5
 25808  0022F4  0012               	return	
 25809  0022F6                     __end_of_CheckModem:
 25810                           	opt stack 0
 25811                           tosu	equ	0xFFF
 25812                           tosh	equ	0xFFE
 25813                           tosl	equ	0xFFD
 25814                           pclath	equ	0xFFA
 25815                           tblptru	equ	0xFF8
 25816                           tblptrh	equ	0xFF7
 25817                           tblptrl	equ	0xFF6
 25818                           tablat	equ	0xFF5
 25819                           prodh	equ	0xFF4
 25820                           prodl	equ	0xFF3
 25821                           intcon	equ	0xFF2
 25822                           intcon2	equ	0xFF1
 25823                           intcon3	equ	0xFF0
 25824                           indf0	equ	0xFEF
 25825                           postinc0	equ	0xFEE
 25826                           plusw0	equ	0xFEB
 25827                           fsr0h	equ	0xFEA
 25828                           fsr0l	equ	0xFE9
 25829                           wreg	equ	0xFE8
 25830                           indf1	equ	0xFE7
 25831                           postinc1	equ	0xFE6
 25832                           postdec1	equ	0xFE5
 25833                           plusw1	equ	0xFE3
 25834                           fsr1h	equ	0xFE2
 25835                           fsr1l	equ	0xFE1
 25836                           indf2	equ	0xFDF
 25837                           postinc2	equ	0xFDE
 25838                           postdec2	equ	0xFDD
 25839                           plusw2	equ	0xFDB
 25840                           fsr2h	equ	0xFDA
 25841                           fsr2l	equ	0xFD9
 25842                           status	equ	0xFD8
 25843                           
 25844 ;; *************** function _MdmCntSm *****************
 25845 ;; Defined at:
 25846 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 25847 ;; Parameters:    Size  Location     Type
 25848 ;;		None
 25849 ;; Auto vars:     Size  Location     Type
 25850 ;;		None
 25851 ;; Return value:  Size  Location     Type
 25852 ;;                  1    wreg      void 
 25853 ;; Registers used:
 25854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25855 ;; Tracked objects:
 25856 ;;		On entry : 0/0
 25857 ;;		On exit  : 0/0
 25858 ;;		Unchanged: 0/0
 25859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25864 ;;Total ram usage:        0 bytes
 25865 ;; Hardware stack levels used:    1
 25866 ;; Hardware stack levels required when called:   12
 25867 ;; This function calls:
 25868 ;;		_InitModemInterface
 25869 ;;		_ReceiveEvt
 25870 ;; This function is called by:
 25871 ;;		_Mdm_DrvMainFn
 25872 ;; This function uses a non-reentrant model
 25873 ;;
 25874                           
 25875                           	psect	text118
 25876  004338                     __ptext118:
 25877                           	opt stack 0
 25878  004338                     _MdmCntSm:
 25879                           	opt stack 15
 25880                           
 25881                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 25882                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 25883                           ;mdm_drv.c: 204: switch (MdmCntState)
 25884                           
 25885                           ;incstack = 0
 25886  004338  D045               	goto	l315
 25887  00433A                     
 25888                           ;mdm_drv.c: 208: InitModemInterface();
 25889  00433A  EC28  F031         	call	_InitModemInterface	;wreg free
 25890                           
 25891                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 25892  00433E  0E01               	movlw	1
 25893  004340  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25894                           
 25895                           ;mdm_drv.c: 211: break;
 25896  004342  0012               	return	
 25897  004344                     
 25898                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 25899  004344  0EE2               	movlw	low _MdmOnOffPulseRequest
 25900  004346  0100               	movlb	0	; () banked
 25901  004348  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25902  00434A  0E00               	movlw	high _MdmOnOffPulseRequest
 25903  00434C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25904  00434E  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 25905  004352  0900               	iorlw	0
 25906  004354  B4D8               	btfsc	status,2,c
 25907  004356  D009               	goto	l319
 25908                           
 25909                           ;mdm_drv.c: 216: {
 25910                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 25911  004358  0E02               	movlw	2
 25912  00435A  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25913                           
 25914                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 25915  00435C  8284               	bsf	3972,1,c	;volatile
 25916                           
 25917                           ;mdm_drv.c: 222: Counter = 0;
 25918  00435E  0E00               	movlw	0
 25919  004360  0102               	movlb	2	; () banked
 25920  004362  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25921  004364  0E00               	movlw	0
 25922  004366  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 25923                           
 25924                           ;mdm_drv.c: 223: }
 25925  004368  0012               	return	
 25926  00436A                     l319:
 25927                           
 25928                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 25929                           
 25930                           ; BSR set to: 2
 25931  00436A  0E3D               	movlw	low _MdmResetRequest
 25932  00436C  0100               	movlb	0	; () banked
 25933  00436E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25934  004370  0E00               	movlw	high _MdmResetRequest
 25935  004372  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25936  004374  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 25937  004378  0900               	iorlw	0
 25938  00437A  B4D8               	btfsc	status,2,c
 25939  00437C  0012               	return	
 25940                           
 25941                           ;mdm_drv.c: 225: {
 25942                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 25943  00437E  0E03               	movlw	3
 25944  004380  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25945                           
 25946                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 25947  004382  8084               	bsf	3972,0,c	;volatile
 25948                           
 25949                           ;mdm_drv.c: 231: Counter = 0;
 25950  004384  0E00               	movlw	0
 25951  004386  0102               	movlb	2	; () banked
 25952  004388  6FDE               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 25953  00438A  0E00               	movlw	0
 25954  00438C  6FDD               	movwf	MdmCntSm@Counter& (0+255),b
 25955                           
 25956                           ; BSR set to: 2
 25957                           ;mdm_drv.c: 236: }
 25958                           ;mdm_drv.c: 237: break;
 25959                           
 25960                           ; BSR set to: 2
 25961                           
 25962                           ;mdm_drv.c: 233: else
 25963                           ;mdm_drv.c: 234: {
 25964                           
 25965                           ; BSR set to: 2
 25966                           
 25967                           ;mdm_drv.c: 232: }
 25968  00438E  0012               	return	
 25969  004390                     
 25970                           ;mdm_drv.c: 241: Counter++;
 25971                           
 25972                           ; BSR set to: 2
 25973  004390  0102               	movlb	2	; () banked
 25974  004392  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 25975  004394  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 25976                           
 25977                           ; BSR set to: 2
 25978                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 25979  004396  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 25980  004398  E104               	bnz	u13140
 25981  00439A  0E96               	movlw	150
 25982  00439C  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 25983  00439E  A0D8               	btfss	status,0,c
 25984  0043A0  0012               	return	
 25985  0043A2                     u13140:
 25986                           
 25987                           ; BSR set to: 2
 25988                           ;mdm_drv.c: 244: {
 25989                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 25990  0043A2  9284               	bcf	3972,1,c	;volatile
 25991                           
 25992                           ; BSR set to: 2
 25993                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 25994  0043A4  0E01               	movlw	1
 25995  0043A6  6E2E               	movwf	MdmCntSm@MdmCntState,c
 25996                           
 25997                           ; BSR set to: 2
 25998                           ;mdm_drv.c: 249: }
 25999                           ;mdm_drv.c: 250: break;
 26000  0043A8  0012               	return	
 26001  0043AA                     
 26002                           ;mdm_drv.c: 254: Counter++;
 26003                           
 26004                           ; BSR set to: 2
 26005  0043AA  0102               	movlb	2	; () banked
 26006  0043AC  4BDD               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26007  0043AE  2BDE               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26008                           
 26009                           ; BSR set to: 2
 26010                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 26011  0043B0  51DE               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26012  0043B2  E104               	bnz	u13150
 26013  0043B4  0E0A               	movlw	10
 26014  0043B6  5DDD               	subwf	MdmCntSm@Counter& (0+255),w,b
 26015  0043B8  A0D8               	btfss	status,0,c
 26016  0043BA  0012               	return	
 26017  0043BC                     u13150:
 26018                           
 26019                           ; BSR set to: 2
 26020                           ;mdm_drv.c: 257: {
 26021                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 26022  0043BC  9084               	bcf	3972,0,c	;volatile
 26023                           
 26024                           ; BSR set to: 2
 26025                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 26026  0043BE  0E01               	movlw	1
 26027  0043C0  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26028                           
 26029                           ; BSR set to: 2
 26030                           ;mdm_drv.c: 267: }
 26031                           
 26032                           ; BSR set to: 2
 26033                           ;mdm_drv.c: 266: break;
 26034                           
 26035                           ;mdm_drv.c: 265: default:
 26036                           
 26037                           ; BSR set to: 2
 26038                           ;mdm_drv.c: 262: }
 26039                           ;mdm_drv.c: 263: break;
 26040  0043C2  0012               	return	
 26041  0043C4                     l315:
 26042                           
 26043                           ; BSR set to: 2
 26044  0043C4  502E               	movf	MdmCntSm@MdmCntState,w,c
 26045                           
 26046                           ; Switch size 1, requested type "space"
 26047                           ; Number of cases is 4, Range of values is 0 to 3
 26048                           ; switch strategies available:
 26049                           ; Name         Instructions Cycles
 26050                           ; simple_byte           13     7 (average)
 26051                           ;	Chosen strategy is simple_byte
 26052  0043C6  0A00               	xorlw	0	; case 0
 26053  0043C8  B4D8               	btfsc	status,2,c
 26054  0043CA  D7B7               	goto	l316
 26055  0043CC  0A01               	xorlw	1	; case 1
 26056  0043CE  B4D8               	btfsc	status,2,c
 26057  0043D0  D7B9               	goto	l318
 26058  0043D2  0A03               	xorlw	3	; case 2
 26059  0043D4  B4D8               	btfsc	status,2,c
 26060  0043D6  D7DC               	goto	l323
 26061  0043D8  0A01               	xorlw	1	; case 3
 26062  0043DA  A4D8               	btfss	status,2,c
 26063  0043DC  0012               	return	
 26064  0043DE  D7E5               	goto	l325
 26065  0043E0                     __end_of_MdmCntSm:
 26066                           	opt stack 0
 26067                           tosu	equ	0xFFF
 26068                           tosh	equ	0xFFE
 26069                           tosl	equ	0xFFD
 26070                           pclath	equ	0xFFA
 26071                           tblptru	equ	0xFF8
 26072                           tblptrh	equ	0xFF7
 26073                           tblptrl	equ	0xFF6
 26074                           tablat	equ	0xFF5
 26075                           prodh	equ	0xFF4
 26076                           prodl	equ	0xFF3
 26077                           intcon	equ	0xFF2
 26078                           intcon2	equ	0xFF1
 26079                           intcon3	equ	0xFF0
 26080                           indf0	equ	0xFEF
 26081                           postinc0	equ	0xFEE
 26082                           plusw0	equ	0xFEB
 26083                           fsr0h	equ	0xFEA
 26084                           fsr0l	equ	0xFE9
 26085                           wreg	equ	0xFE8
 26086                           indf1	equ	0xFE7
 26087                           postinc1	equ	0xFE6
 26088                           postdec1	equ	0xFE5
 26089                           plusw1	equ	0xFE3
 26090                           fsr1h	equ	0xFE2
 26091                           fsr1l	equ	0xFE1
 26092                           indf2	equ	0xFDF
 26093                           postinc2	equ	0xFDE
 26094                           postdec2	equ	0xFDD
 26095                           plusw2	equ	0xFDB
 26096                           fsr2h	equ	0xFDA
 26097                           fsr2l	equ	0xFD9
 26098                           status	equ	0xFD8
 26099                           
 26100 ;; *************** function _InitModemInterface *****************
 26101 ;; Defined at:
 26102 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26103 ;; Parameters:    Size  Location     Type
 26104 ;;		None
 26105 ;; Auto vars:     Size  Location     Type
 26106 ;;		None
 26107 ;; Return value:  Size  Location     Type
 26108 ;;                  1    wreg      void 
 26109 ;; Registers used:
 26110 ;;		None
 26111 ;; Tracked objects:
 26112 ;;		On entry : 0/0
 26113 ;;		On exit  : 0/0
 26114 ;;		Unchanged: 0/0
 26115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26120 ;;Total ram usage:        0 bytes
 26121 ;; Hardware stack levels used:    1
 26122 ;; Hardware stack levels required when called:   11
 26123 ;; This function calls:
 26124 ;;		Nothing
 26125 ;; This function is called by:
 26126 ;;		_MdmCntSm
 26127 ;; This function uses a non-reentrant model
 26128 ;;
 26129                           
 26130                           	psect	text119
 26131  006250                     __ptext119:
 26132                           	opt stack 0
 26133  006250                     _InitModemInterface:
 26134                           	opt stack 15
 26135                           
 26136                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 26137                           
 26138                           ;incstack = 0
 26139  006250  9096               	bcf	3990,0,c	;volatile
 26140                           
 26141                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 26142  006252  9296               	bcf	3990,1,c	;volatile
 26143                           
 26144                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 26145  006254  8496               	bsf	3990,2,c	;volatile
 26146  006256  0012               	return		;funcret
 26147  006258                     __end_of_InitModemInterface:
 26148                           	opt stack 0
 26149                           tosu	equ	0xFFF
 26150                           tosh	equ	0xFFE
 26151                           tosl	equ	0xFFD
 26152                           pclath	equ	0xFFA
 26153                           tblptru	equ	0xFF8
 26154                           tblptrh	equ	0xFF7
 26155                           tblptrl	equ	0xFF6
 26156                           tablat	equ	0xFF5
 26157                           prodh	equ	0xFF4
 26158                           prodl	equ	0xFF3
 26159                           intcon	equ	0xFF2
 26160                           intcon2	equ	0xFF1
 26161                           intcon3	equ	0xFF0
 26162                           indf0	equ	0xFEF
 26163                           postinc0	equ	0xFEE
 26164                           plusw0	equ	0xFEB
 26165                           fsr0h	equ	0xFEA
 26166                           fsr0l	equ	0xFE9
 26167                           wreg	equ	0xFE8
 26168                           indf1	equ	0xFE7
 26169                           postinc1	equ	0xFE6
 26170                           postdec1	equ	0xFE5
 26171                           plusw1	equ	0xFE3
 26172                           fsr1h	equ	0xFE2
 26173                           fsr1l	equ	0xFE1
 26174                           indf2	equ	0xFDF
 26175                           postinc2	equ	0xFDE
 26176                           postdec2	equ	0xFDD
 26177                           plusw2	equ	0xFDB
 26178                           fsr2h	equ	0xFDA
 26179                           fsr2l	equ	0xFD9
 26180                           status	equ	0xFD8
 26181                           
 26182 ;; *************** function _InitGprsNetwork *****************
 26183 ;; Defined at:
 26184 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26185 ;; Parameters:    Size  Location     Type
 26186 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 26187 ;;		 -> NULL(0), 
 26188 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 26189 ;; Auto vars:     Size  Location     Type
 26190 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26191 ;;  Index           1   50[BANK1 ] unsigned char 
 26192 ;; Return value:  Size  Location     Type
 26193 ;;                  1    wreg      enum E8908
 26194 ;; Registers used:
 26195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26196 ;; Tracked objects:
 26197 ;;		On entry : 0/0
 26198 ;;		On exit  : 0/0
 26199 ;;		Unchanged: 0/0
 26200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26201 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26202 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26204 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26205 ;;Total ram usage:       56 bytes
 26206 ;; Hardware stack levels used:    1
 26207 ;; Hardware stack levels required when called:   14
 26208 ;; This function calls:
 26209 ;;		_ClearBuffer
 26210 ;;		_OsTmr_GetTimerStatus
 26211 ;;		_OsTmr_StartTimer
 26212 ;;		_ReceiveEvt
 26213 ;;		_StringCopy
 26214 ;;		_Uart_WriteConstString
 26215 ;;		_Uart_WriteString
 26216 ;; This function is called by:
 26217 ;;		_MdmHttp_MainTask
 26218 ;; This function uses a non-reentrant model
 26219 ;;
 26220                           
 26221                           	psect	text120
 26222  000DC8                     __ptext120:
 26223                           	opt stack 0
 26224  000DC8                     _InitGprsNetwork:
 26225                           	opt stack 13
 26226                           
 26227                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26228                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26229                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26230                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26231                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26232                           
 26233                           ;incstack = 0
 26234  000DC8  0E00               	movlw	0
 26235  000DCA  0101               	movlb	1	; () banked
 26236  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26237                           
 26238                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26239  000DCE  D154               	goto	l1216
 26240  000DD0                     
 26241                           ; BSR set to: 1
 26242                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26243                           
 26244                           ; BSR set to: 1
 26245  000DD0  0EDB               	movlw	low _InitNetwork
 26246  000DD2  0100               	movlb	0	; () banked
 26247  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26248  000DD6  0E00               	movlw	high _InitNetwork
 26249  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26250  000DDA  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 26251  000DDE  0900               	iorlw	0
 26252  000DE0  B4D8               	btfsc	status,2,c
 26253  000DE2  D166               	goto	l1219
 26254                           
 26255                           ;mdm_gsm_gprs_http.c: 137: {
 26256                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26257  000DE4  0E01               	movlw	1
 26258  000DE6  D141               	goto	L70
 26259  000DE8                     
 26260                           ; BSR set to: 1
 26261                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26262                           
 26263                           ; BSR set to: 1
 26264  000DE8  0E88               	movlw	low STR_8
 26265  000DEA  0100               	movlb	0	; () banked
 26266  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26267  000DEE  0EFE               	movlw	high STR_8
 26268  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26269  000DF2  0E01               	movlw	1
 26270  000DF4  EC6D  F02C         	call	_Uart_WriteConstString
 26271                           
 26272                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26273  000DF8  0E07               	movlw	7
 26274  000DFA  0101               	movlb	1	; () banked
 26275  000DFC  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26276                           
 26277                           ; BSR set to: 1
 26278                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26279  000DFE  0E02               	movlw	2
 26280  000E00  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26281                           
 26282                           ; BSR set to: 1
 26283                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26284  000E02  0EF5               	movlw	low _ConnTimeout
 26285  000E04  0100               	movlb	0	; () banked
 26286  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26287  000E08  0E02               	movlw	high _ConnTimeout
 26288  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26289  000E0C  0E20               	movlw	32
 26290  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26291  000E10  0E4E               	movlw	78
 26292  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26293  000E14  0E00               	movlw	0
 26294  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26295  000E18  0E00               	movlw	0
 26296  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26297  000E1C  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 26298  000E20  D0C7               	goto	l14161
 26299  000E22                     
 26300                           ; BSR set to: 1
 26301                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26302                           
 26303                           ; BSR set to: 1
 26304  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 26305  000E24  0100               	movlb	0	; () banked
 26306  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26307  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 26308  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26309  000E2C  0E00               	movlw	0
 26310  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26311  000E30  0E32               	movlw	50
 26312  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26313  000E34  ECDD  F02D         	call	_ClearBuffer	;wreg free
 26314                           
 26315                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 26316  000E38  0EBC               	movlw	low STR_9
 26317  000E3A  0100               	movlb	0	; () banked
 26318  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26319  000E3E  0EFE               	movlw	high STR_9
 26320  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26321  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 26322  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26323  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 26324  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26325  000E4A  0E00               	movlw	0
 26326  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26327  000E4E  0E14               	movlw	20
 26328  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 26329  000E52  EC4E  F028         	call	_StringCopy	;wreg free
 26330                           
 26331                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 26332  000E56  0E00               	movlw	0
 26333  000E58  0101               	movlb	1	; () banked
 26334  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26335  000E5C  D01C               	goto	l1222
 26336  000E5E                     
 26337                           ; BSR set to: 1
 26338                           ;mdm_gsm_gprs_http.c: 161: {
 26339                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 26340                           
 26341                           ; BSR set to: 1
 26342  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26343  000E60  0D01               	mullw	1
 26344  000E62  50F3               	movf	prodl,w,c
 26345  000E64  0100               	movlb	0	; () banked
 26346  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 26347  000E68  6ED9               	movwf	fsr2l,c
 26348  000E6A  50F4               	movf	prodh,w,c
 26349  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 26350  000E6E  6EDA               	movwf	fsr2h,c
 26351  000E70  0101               	movlb	1	; () banked
 26352  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26353  000E74  0100               	movlb	0	; () banked
 26354  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26355  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26356  000E7A  0E14               	movlw	20
 26357  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26358  000E7E  0E00               	movlw	0
 26359  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26360  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 26361  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26362  000E86  6EE1               	movwf	fsr1l,c
 26363  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 26364  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26365  000E8C  6EE2               	movwf	fsr1h,c
 26366  000E8E  CFDF FFE7          	movff	indf2,indf1
 26367                           
 26368                           ; BSR set to: 0
 26369  000E92  0101               	movlb	1	; () banked
 26370  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 26371  000E96                     l1222:
 26372                           
 26373                           ; BSR set to: 1
 26374                           
 26375                           ; BSR set to: 1
 26376  000E96  0100               	movlb	0	; () banked
 26377  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 26378  000E9A  0101               	movlb	1	; () banked
 26379  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 26380  000E9E  A0D8               	btfss	status,0,c
 26381  000EA0  D7DE               	goto	l1223
 26382                           
 26383                           ; BSR set to: 1
 26384                           ;mdm_gsm_gprs_http.c: 163: }
 26385                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 26386                           
 26387                           ; BSR set to: 1
 26388  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26389  000EA4  0100               	movlb	0	; () banked
 26390  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26391  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26392  000EAA  0E14               	movlw	20
 26393  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26394  000EAE  0E00               	movlw	0
 26395  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26396  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 26397  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26398  000EB6  6ED9               	movwf	fsr2l,c
 26399  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 26400  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26401  000EBC  6EDA               	movwf	fsr2h,c
 26402  000EBE  0E22               	movlw	34
 26403  000EC0  6EDF               	movwf	indf2,c
 26404                           
 26405                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 26406  000EC2  0101               	movlb	1	; () banked
 26407  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26408  000EC6  0100               	movlb	0	; () banked
 26409  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26410  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26411  000ECC  0E15               	movlw	21
 26412  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26413  000ED0  0E00               	movlw	0
 26414  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26415  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 26416  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26417  000ED8  6ED9               	movwf	fsr2l,c
 26418  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 26419  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26420  000EDE  6EDA               	movwf	fsr2h,c
 26421  000EE0  0E0D               	movlw	13
 26422  000EE2  6EDF               	movwf	indf2,c
 26423                           
 26424                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 26425  000EE4  0101               	movlb	1	; () banked
 26426  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26427  000EE8  0100               	movlb	0	; () banked
 26428  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26429  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26430  000EEE  0E16               	movlw	22
 26431  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26432  000EF2  0E00               	movlw	0
 26433  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26434  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 26435  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26436  000EFA  6ED9               	movwf	fsr2l,c
 26437  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 26438  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26439  000F00  6EDA               	movwf	fsr2h,c
 26440  000F02  0E00               	movlw	0
 26441  000F04  6EDF               	movwf	indf2,c
 26442                           
 26443                           ; BSR set to: 0
 26444                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 26445  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 26446  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26447  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 26448  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26449  000F0E  0E01               	movlw	1
 26450  000F10  EC2E  F02D         	call	_Uart_WriteString
 26451                           
 26452                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 26453  000F14  0E07               	movlw	7
 26454  000F16  0101               	movlb	1	; () banked
 26455  000F18  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26456                           
 26457                           ; BSR set to: 1
 26458                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 26459  000F1A  0E03               	movlw	3
 26460  000F1C  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26461                           
 26462                           ; BSR set to: 1
 26463                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 26464  000F1E  0EF5               	movlw	low _ConnTimeout
 26465  000F20  0100               	movlb	0	; () banked
 26466  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26467  000F24  0E02               	movlw	high _ConnTimeout
 26468  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26469  000F28  0E20               	movlw	32
 26470  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26471  000F2C  0E4E               	movlw	78
 26472  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26473  000F30  0E00               	movlw	0
 26474  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26475  000F34  0E00               	movlw	0
 26476  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26477  000F38  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 26478  000F3C  D039               	goto	l14161
 26479  000F3E                     
 26480                           ; BSR set to: 1
 26481                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 26482                           
 26483                           ; BSR set to: 1
 26484  000F3E  0E4A               	movlw	low STR_10
 26485  000F40  0100               	movlb	0	; () banked
 26486  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26487  000F44  0EFF               	movlw	high STR_10
 26488  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26489  000F48  0E01               	movlw	1
 26490  000F4A  EC6D  F02C         	call	_Uart_WriteConstString
 26491                           
 26492                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 26493  000F4E  0E07               	movlw	7
 26494  000F50  0101               	movlb	1	; () banked
 26495  000F52  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26496                           
 26497                           ; BSR set to: 1
 26498                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 26499  000F54  0E05               	movlw	5
 26500  000F56  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26501                           
 26502                           ; BSR set to: 1
 26503                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 26504  000F58  0EF5               	movlw	low _ConnTimeout
 26505  000F5A  0100               	movlb	0	; () banked
 26506  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26507  000F5E  0E02               	movlw	high _ConnTimeout
 26508  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26509  000F62  0E20               	movlw	32
 26510  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26511  000F66  0E4E               	movlw	78
 26512  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26513  000F6A  0E00               	movlw	0
 26514  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26515  000F6E  0E00               	movlw	0
 26516  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26517  000F72  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 26518  000F76  D01C               	goto	l14161
 26519  000F78                     
 26520                           ; BSR set to: 1
 26521                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 26522                           
 26523                           ; BSR set to: 1
 26524  000F78  0E58               	movlw	low STR_11
 26525  000F7A  0100               	movlb	0	; () banked
 26526  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26527  000F7E  0EFF               	movlw	high STR_11
 26528  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26529  000F82  0E01               	movlw	1
 26530  000F84  EC6D  F02C         	call	_Uart_WriteConstString
 26531                           
 26532                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 26533  000F88  0E08               	movlw	8
 26534  000F8A  0101               	movlb	1	; () banked
 26535  000F8C  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26536                           
 26537                           ; BSR set to: 1
 26538                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 26539  000F8E  0E05               	movlw	5
 26540  000F90  6E2A               	movwf	InitGprsNetwork@GprsNetInitNextState,c
 26541                           
 26542                           ; BSR set to: 1
 26543                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 26544  000F92  0EF5               	movlw	low _ConnTimeout
 26545  000F94  0100               	movlb	0	; () banked
 26546  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26547  000F98  0E02               	movlw	high _ConnTimeout
 26548  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26549  000F9C  0E20               	movlw	32
 26550  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26551  000FA0  0E4E               	movlw	78
 26552  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26553  000FA4  0E00               	movlw	0
 26554  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26555  000FA8  0E00               	movlw	0
 26556  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26557  000FAC  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 26558  000FB0                     l14161:
 26559                           
 26560                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 26561  000FB0  0E01               	movlw	1
 26562  000FB2  0101               	movlb	1	; () banked
 26563  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26564                           
 26565                           ;mdm_gsm_gprs_http.c: 201: break;
 26566  000FB6  D07C               	goto	l1219
 26567  000FB8                     
 26568                           ; BSR set to: 1
 26569                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26570                           
 26571                           ; BSR set to: 1
 26572  000FB8  0E02               	movlw	2
 26573  000FBA  D05A               	goto	L69
 26574  000FBC                     
 26575                           ; BSR set to: 1
 26576                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26577                           
 26578                           ; BSR set to: 1
 26579  000FBC  0E3C               	movlw	low _NewStringReceived
 26580  000FBE  0100               	movlb	0	; () banked
 26581  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26582  000FC2  0E00               	movlw	high _NewStringReceived
 26583  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26584  000FC6  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 26585  000FCA  0900               	iorlw	0
 26586  000FCC  B4D8               	btfsc	status,2,c
 26587  000FCE  D018               	goto	l1229
 26588                           
 26589                           ;mdm_gsm_gprs_http.c: 212: {
 26590                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26591  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26592  000FD4  0A4F               	xorlw	79
 26593  000FD6  A4D8               	btfss	status,2,c
 26594  000FD8  D06B               	goto	l1219
 26595  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26596  000FDE  0A4B               	xorlw	75
 26597  000FE0  A4D8               	btfss	status,2,c
 26598  000FE2  D066               	goto	l1219
 26599                           
 26600                           ;mdm_gsm_gprs_http.c: 215: {
 26601                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26602  000FE4  C02A  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26603                           
 26604                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26605  000FE8  0E58               	movlw	low _RxBuffer
 26606  000FEA  0100               	movlb	0	; () banked
 26607  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26608  000FEE  0E0C               	movlw	high _RxBuffer
 26609  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26610  000FF2  0E01               	movlw	1
 26611  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26612  000FF6  0E90               	movlw	144
 26613  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26614  000FFA  ECDD  F02D         	call	_ClearBuffer	;wreg free
 26615                           
 26616                           ;mdm_gsm_gprs_http.c: 220: }
 26617                           ;mdm_gsm_gprs_http.c: 221: }
 26618  000FFE  D058               	goto	l1219
 26619  001000                     l1229:
 26620                           
 26621                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26622  001000  0EF5               	movlw	low _ConnTimeout
 26623  001002  0100               	movlb	0	; () banked
 26624  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26625  001006  0E02               	movlw	high _ConnTimeout
 26626  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26627  00100A  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26628  00100E  D029               	goto	L34
 26629  001010                     
 26630                           ; BSR set to: 1
 26631                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26632                           
 26633                           ; BSR set to: 1
 26634  001010  0E3C               	movlw	low _NewStringReceived
 26635  001012  0100               	movlb	0	; () banked
 26636  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26637  001016  0E00               	movlw	high _NewStringReceived
 26638  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26639  00101A  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 26640  00101E  0900               	iorlw	0
 26641  001020  B4D8               	btfsc	status,2,c
 26642  001022  D018               	goto	l1234
 26643                           
 26644                           ;mdm_gsm_gprs_http.c: 232: {
 26645                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26646  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26647  001028  0A2B               	xorlw	43
 26648  00102A  A4D8               	btfss	status,2,c
 26649  00102C  D041               	goto	l1219
 26650  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26651  001032  0A53               	xorlw	83
 26652  001034  A4D8               	btfss	status,2,c
 26653  001036  D03C               	goto	l1219
 26654                           
 26655                           ;mdm_gsm_gprs_http.c: 235: {
 26656                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26657  001038  C02A  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26658                           
 26659                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26660  00103C  0E58               	movlw	low _RxBuffer
 26661  00103E  0100               	movlb	0	; () banked
 26662  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26663  001042  0E0C               	movlw	high _RxBuffer
 26664  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26665  001046  0E01               	movlw	1
 26666  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26667  00104A  0E90               	movlw	144
 26668  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26669  00104E  ECDD  F02D         	call	_ClearBuffer	;wreg free
 26670                           
 26671                           ;mdm_gsm_gprs_http.c: 240: }
 26672                           ;mdm_gsm_gprs_http.c: 241: }
 26673  001052  D02E               	goto	l1219
 26674  001054                     l1234:
 26675                           
 26676                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26677  001054  0EF5               	movlw	low _ConnTimeout
 26678  001056  0100               	movlb	0	; () banked
 26679  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26680  00105A  0E02               	movlw	high _ConnTimeout
 26681  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26682  00105E  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 26683  001062                     L34:
 26684  001062  06E8               	decf	wreg,f,c
 26685  001064  A4D8               	btfss	status,2,c
 26686  001066  D024               	goto	l1219
 26687                           
 26688                           ;mdm_gsm_gprs_http.c: 243: {
 26689                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26690  001068  0E06               	movlw	6
 26691  00106A                     L70:
 26692  00106A  0101               	movlb	1	; () banked
 26693  00106C  D003               	goto	L33
 26694  00106E                     
 26695                           ; BSR set to: 1
 26696                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26697                           
 26698                           ; BSR set to: 1
 26699  00106E  0E03               	movlw	3
 26700  001070                     L69:
 26701  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26702                           
 26703                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26704  001072  0E00               	movlw	0
 26705  001074                     L33:
 26706  001074  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26707                           
 26708                           ; BSR set to: 1
 26709                           ;mdm_gsm_gprs_http.c: 257: }
 26710                           
 26711                           ; BSR set to: 1
 26712                           ;mdm_gsm_gprs_http.c: 256: break;
 26713                           
 26714                           ;mdm_gsm_gprs_http.c: 255: default:
 26715                           
 26716                           ;mdm_gsm_gprs_http.c: 253: break;
 26717  001076  D01C               	goto	l1219
 26718  001078                     l1216:
 26719                           
 26720                           ; BSR set to: 1
 26721                           
 26722                           ; BSR set to: 1
 26723  001078  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26724                           
 26725                           ; Switch size 1, requested type "space"
 26726                           ; Number of cases is 9, Range of values is 0 to 8
 26727                           ; switch strategies available:
 26728                           ; Name         Instructions Cycles
 26729                           ; simple_byte           28    15 (average)
 26730                           ;	Chosen strategy is simple_byte
 26731  00107A  0A00               	xorlw	0	; case 0
 26732  00107C  B4D8               	btfsc	status,2,c
 26733  00107E  D6A8               	goto	l1217
 26734  001080  0A01               	xorlw	1	; case 1
 26735  001082  B4D8               	btfsc	status,2,c
 26736  001084  D6B1               	goto	l1220
 26737  001086  0A03               	xorlw	3	; case 2
 26738  001088  B4D8               	btfsc	status,2,c
 26739  00108A  D6CB               	goto	l1221
 26740  00108C  0A01               	xorlw	1	; case 3
 26741  00108E  B4D8               	btfsc	status,2,c
 26742  001090  D756               	goto	l1225
 26743  001092  0A07               	xorlw	7	; case 4
 26744  001094  B4D8               	btfsc	status,2,c
 26745  001096  D770               	goto	l1226
 26746  001098  0A01               	xorlw	1	; case 5
 26747  00109A  B4D8               	btfsc	status,2,c
 26748  00109C  D78D               	goto	l1227
 26749  00109E  0A03               	xorlw	3	; case 6
 26750  0010A0  B4D8               	btfsc	status,2,c
 26751  0010A2  D7E5               	goto	l1238
 26752  0010A4  0A01               	xorlw	1	; case 7
 26753  0010A6  B4D8               	btfsc	status,2,c
 26754  0010A8  D789               	goto	l1228
 26755  0010AA  0A0F               	xorlw	15	; case 8
 26756  0010AC  B4D8               	btfsc	status,2,c
 26757  0010AE  D7B0               	goto	l1233
 26758  0010B0                     l1219:
 26759                           
 26760                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 26761                           
 26762                           ; BSR set to: 1
 26763  0010B0  0101               	movlb	1	; () banked
 26764  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 26765  0010B4  0012               	return	
 26766  0010B6                     __end_of_InitGprsNetwork:
 26767                           	opt stack 0
 26768                           tosu	equ	0xFFF
 26769                           tosh	equ	0xFFE
 26770                           tosl	equ	0xFFD
 26771                           pclath	equ	0xFFA
 26772                           tblptru	equ	0xFF8
 26773                           tblptrh	equ	0xFF7
 26774                           tblptrl	equ	0xFF6
 26775                           tablat	equ	0xFF5
 26776                           prodh	equ	0xFF4
 26777                           prodl	equ	0xFF3
 26778                           intcon	equ	0xFF2
 26779                           intcon2	equ	0xFF1
 26780                           intcon3	equ	0xFF0
 26781                           indf0	equ	0xFEF
 26782                           postinc0	equ	0xFEE
 26783                           plusw0	equ	0xFEB
 26784                           fsr0h	equ	0xFEA
 26785                           fsr0l	equ	0xFE9
 26786                           wreg	equ	0xFE8
 26787                           indf1	equ	0xFE7
 26788                           postinc1	equ	0xFE6
 26789                           postdec1	equ	0xFE5
 26790                           plusw1	equ	0xFE3
 26791                           fsr1h	equ	0xFE2
 26792                           fsr1l	equ	0xFE1
 26793                           indf2	equ	0xFDF
 26794                           postinc2	equ	0xFDE
 26795                           postdec2	equ	0xFDD
 26796                           plusw2	equ	0xFDB
 26797                           fsr2h	equ	0xFDA
 26798                           fsr2l	equ	0xFD9
 26799                           status	equ	0xFD8
 26800                           
 26801 ;; *************** function _HttpGetMethod *****************
 26802 ;; Defined at:
 26803 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26804 ;; Parameters:    Size  Location     Type
 26805 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 26806 ;;		 -> HttpGetDataLocal(5), 
 26807 ;; Auto vars:     Size  Location     Type
 26808 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 26809 ;;  Index           1  200[BANK1 ] unsigned char 
 26810 ;; Return value:  Size  Location     Type
 26811 ;;                  1    wreg      enum E8908
 26812 ;; Registers used:
 26813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26814 ;; Tracked objects:
 26815 ;;		On entry : 0/0
 26816 ;;		On exit  : 0/0
 26817 ;;		Unchanged: 0/0
 26818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26820 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26822 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26823 ;;Total ram usage:      207 bytes
 26824 ;; Hardware stack levels used:    1
 26825 ;; Hardware stack levels required when called:   14
 26826 ;; This function calls:
 26827 ;;		_ClearBuffer
 26828 ;;		_OsTmr_GetTimerStatus
 26829 ;;		_OsTmr_StartTimer
 26830 ;;		_ReceiveEvt
 26831 ;;		_StringCopy
 26832 ;;		_Uart_WriteConstString
 26833 ;;		_Uart_WriteString
 26834 ;; This function is called by:
 26835 ;;		_MdmHttp_MainTask
 26836 ;; This function uses a non-reentrant model
 26837 ;;
 26838                           
 26839                           	psect	text121
 26840  0005EC                     __ptext121:
 26841                           	opt stack 0
 26842  0005EC                     _HttpGetMethod:
 26843                           	opt stack 13
 26844                           
 26845                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 26846                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 26847                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 26848                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 26849                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 26850                           
 26851                           ; BSR set to: 1
 26852                           ;incstack = 0
 26853  0005EC  0E00               	movlw	0
 26854  0005EE  0101               	movlb	1	; () banked
 26855  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 26856                           
 26857                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 26858  0005F2  D230               	goto	l1249
 26859  0005F4                     
 26860                           ; BSR set to: 1
 26861                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 26862                           
 26863                           ; BSR set to: 1
 26864  0005F4  0EDA               	movlw	low _GetMethod
 26865  0005F6  0100               	movlb	0	; () banked
 26866  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26867  0005FA  0E00               	movlw	high _GetMethod
 26868  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26869  0005FE  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 26870  000602  0900               	iorlw	0
 26871  000604  B4D8               	btfsc	status,2,c
 26872  000606  D257               	goto	l1252
 26873                           
 26874                           ;mdm_gsm_gprs_http.c: 284: {
 26875                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 26876  000608  0E01               	movlw	1
 26877  00060A  D18C               	goto	L36
 26878  00060C                     
 26879                           ; BSR set to: 1
 26880                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 26881                           
 26882                           ; BSR set to: 1
 26883  00060C  0E9C               	movlw	low STR_12
 26884  00060E  0100               	movlb	0	; () banked
 26885  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26886  000612  0EFF               	movlw	high STR_12
 26887  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26888  000616  0E01               	movlw	1
 26889  000618  EC6D  F02C         	call	_Uart_WriteConstString
 26890                           
 26891                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 26892  00061C  0E0A               	movlw	10
 26893  00061E  0101               	movlb	1	; () banked
 26894  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26895                           
 26896                           ; BSR set to: 1
 26897                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 26898  000622  0E02               	movlw	2
 26899  000624  0100               	movlb	0	; () banked
 26900  000626  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26901                           
 26902                           ; BSR set to: 0
 26903                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 26904  000628  0EF5               	movlw	low _ConnTimeout
 26905  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26906  00062C  0E02               	movlw	high _ConnTimeout
 26907  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26908  000630  0E20               	movlw	32
 26909  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26910  000634  0E4E               	movlw	78
 26911  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26912  000638  0E00               	movlw	0
 26913  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26914  00063C  0E00               	movlw	0
 26915  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26916  000640  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 26917  000644  D1AF               	goto	l14327
 26918  000646                     
 26919                           ; BSR set to: 1
 26920                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 26921                           
 26922                           ; BSR set to: 1
 26923  000646  0E66               	movlw	low STR_13
 26924  000648  0100               	movlb	0	; () banked
 26925  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26926  00064C  0EFF               	movlw	high STR_13
 26927  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26928  000650  0E01               	movlw	1
 26929  000652  EC6D  F02C         	call	_Uart_WriteConstString
 26930                           
 26931                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 26932  000656  0E0A               	movlw	10
 26933  000658  0101               	movlb	1	; () banked
 26934  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26935                           
 26936                           ; BSR set to: 1
 26937                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 26938  00065C  0E03               	movlw	3
 26939  00065E  0100               	movlb	0	; () banked
 26940  000660  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26941                           
 26942                           ; BSR set to: 0
 26943                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 26944  000662  0EF5               	movlw	low _ConnTimeout
 26945  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26946  000666  0E02               	movlw	high _ConnTimeout
 26947  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26948  00066A  0E20               	movlw	32
 26949  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26950  00066E  0E4E               	movlw	78
 26951  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26952  000672  0E00               	movlw	0
 26953  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26954  000676  0E00               	movlw	0
 26955  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26956  00067A  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 26957  00067E  D192               	goto	l14327
 26958  000680                     
 26959                           ; BSR set to: 1
 26960                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 26961                           
 26962                           ; BSR set to: 1
 26963  000680  0EA7               	movlw	low STR_14
 26964  000682  0100               	movlb	0	; () banked
 26965  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26966  000686  0EFE               	movlw	high STR_14
 26967  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26968  00068A  0E01               	movlw	1
 26969  00068C  EC6D  F02C         	call	_Uart_WriteConstString
 26970                           
 26971                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 26972  000690  0E0A               	movlw	10
 26973  000692  0101               	movlb	1	; () banked
 26974  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26975                           
 26976                           ; BSR set to: 1
 26977                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 26978  000696  0E04               	movlw	4
 26979  000698  0100               	movlb	0	; () banked
 26980  00069A  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26981                           
 26982                           ; BSR set to: 0
 26983                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 26984  00069C  0EF5               	movlw	low _ConnTimeout
 26985  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26986  0006A0  0E02               	movlw	high _ConnTimeout
 26987  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26988  0006A4  0E20               	movlw	32
 26989  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26990  0006A8  0E4E               	movlw	78
 26991  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26992  0006AC  0E00               	movlw	0
 26993  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26994  0006B0  0E00               	movlw	0
 26995  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26996  0006B4  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 26997  0006B8  D175               	goto	l14327
 26998  0006BA                     
 26999                           ; BSR set to: 1
 27000                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 27001                           
 27002                           ; BSR set to: 1
 27003  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27004  0006BC  0100               	movlb	0	; () banked
 27005  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27006  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 27007  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27008  0006C4  0E00               	movlw	0
 27009  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27010  0006C8  0EC8               	movlw	200
 27011  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27012  0006CC  ECDD  F02D         	call	_ClearBuffer	;wreg free
 27013                           
 27014                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 27015  0006D0  0EE5               	movlw	low STR_15
 27016  0006D2  0100               	movlb	0	; () banked
 27017  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27018  0006D6  0EFE               	movlw	high STR_15
 27019  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27020  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 27021  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27022  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 27023  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27024  0006E2  0E00               	movlw	0
 27025  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27026  0006E6  0E13               	movlw	19
 27027  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 27028  0006EA  EC4E  F028         	call	_StringCopy	;wreg free
 27029                           
 27030                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 27031  0006EE  0E00               	movlw	0
 27032  0006F0  0101               	movlb	1	; () banked
 27033  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27034  0006F4  D024               	goto	l1257
 27035  0006F6                     
 27036                           ; BSR set to: 1
 27037                           ;mdm_gsm_gprs_http.c: 332: {
 27038                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 27039                           
 27040                           ; BSR set to: 1
 27041  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27042  0006F8  0D01               	mullw	1
 27043  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 27044  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 27045  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 27046  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 27047  00070A  50F3               	movf	prodl,w,c
 27048  00070C  0100               	movlb	0	; () banked
 27049  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27050  000710  6ED9               	movwf	fsr2l,c
 27051  000712  50F4               	movf	prodh,w,c
 27052  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27053  000716  6EDA               	movwf	fsr2h,c
 27054  000718  0101               	movlb	1	; () banked
 27055  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27056  00071C  0100               	movlb	0	; () banked
 27057  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 27058  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 27059  000722  0E13               	movlw	19
 27060  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 27061  000726  0E00               	movlw	0
 27062  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 27063  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 27064  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 27065  00072E  6EE1               	movwf	fsr1l,c
 27066  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 27067  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 27068  000734  6EE2               	movwf	fsr1h,c
 27069  000736  CFDF FFE7          	movff	indf2,indf1
 27070                           
 27071                           ; BSR set to: 0
 27072  00073A  0101               	movlb	1	; () banked
 27073  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 27074  00073E                     l1257:
 27075                           
 27076                           ; BSR set to: 1
 27077                           
 27078                           ; BSR set to: 1
 27079  00073E  0100               	movlb	0	; () banked
 27080  000740  EE20 F002          	lfsr	2,2
 27081  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27082  000746  26D9               	addwf	fsr2l,f,c
 27083  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27084  00074A  22DA               	addwfc	fsr2h,f,c
 27085  00074C  50DE               	movf	postinc2,w,c
 27086  00074E  0101               	movlb	1	; () banked
 27087  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 27088  000752  A0D8               	btfss	status,0,c
 27089  000754  D7D0               	goto	l1258
 27090                           
 27091                           ; BSR set to: 1
 27092                           ;mdm_gsm_gprs_http.c: 334: }
 27093                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 27094                           
 27095                           ; BSR set to: 1
 27096  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27097  000758  0100               	movlb	0	; () banked
 27098  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27099  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27100  00075E  0E13               	movlw	19
 27101  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27102  000762  0E00               	movlw	0
 27103  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27104  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 27105  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27106  00076A  6ED9               	movwf	fsr2l,c
 27107  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 27108  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27109  000770  6EDA               	movwf	fsr2h,c
 27110  000772  0E22               	movlw	34
 27111  000774  6EDF               	movwf	indf2,c
 27112                           
 27113                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 27114  000776  0101               	movlb	1	; () banked
 27115  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27116  00077A  0100               	movlb	0	; () banked
 27117  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27118  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27119  000780  0E14               	movlw	20
 27120  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27121  000784  0E00               	movlw	0
 27122  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27123  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 27124  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27125  00078C  6ED9               	movwf	fsr2l,c
 27126  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 27127  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27128  000792  6EDA               	movwf	fsr2h,c
 27129  000794  0E0D               	movlw	13
 27130  000796  6EDF               	movwf	indf2,c
 27131                           
 27132                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 27133  000798  0101               	movlb	1	; () banked
 27134  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27135  00079C  0100               	movlb	0	; () banked
 27136  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27137  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27138  0007A2  0E15               	movlw	21
 27139  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27140  0007A6  0E00               	movlw	0
 27141  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27142  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 27143  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27144  0007AE  6ED9               	movwf	fsr2l,c
 27145  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 27146  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27147  0007B4  6EDA               	movwf	fsr2h,c
 27148  0007B6  0E00               	movlw	0
 27149  0007B8  6EDF               	movwf	indf2,c
 27150                           
 27151                           ; BSR set to: 0
 27152                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 27153  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27154  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27155  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 27156  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27157  0007C2  0E01               	movlw	1
 27158  0007C4  EC2E  F02D         	call	_Uart_WriteString
 27159                           
 27160                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 27161  0007C8  0E0A               	movlw	10
 27162  0007CA  0101               	movlb	1	; () banked
 27163  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27164                           
 27165                           ; BSR set to: 1
 27166                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 27167  0007CE  0E05               	movlw	5
 27168  0007D0  0100               	movlb	0	; () banked
 27169  0007D2  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27170                           
 27171                           ; BSR set to: 0
 27172                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 27173  0007D4  0EF5               	movlw	low _ConnTimeout
 27174  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27175  0007D8  0E02               	movlw	high _ConnTimeout
 27176  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27177  0007DC  0E20               	movlw	32
 27178  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27179  0007E0  0E4E               	movlw	78
 27180  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27181  0007E4  0E00               	movlw	0
 27182  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27183  0007E8  0E00               	movlw	0
 27184  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27185  0007EC  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 27186  0007F0  D0D9               	goto	l14327
 27187  0007F2                     
 27188                           ; BSR set to: 1
 27189                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 27190                           
 27191                           ; BSR set to: 1
 27192  0007F2  0E1D               	movlw	low STR_16
 27193  0007F4  0100               	movlb	0	; () banked
 27194  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27195  0007F8  0EFF               	movlw	high STR_16
 27196  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27197  0007FC  0E01               	movlw	1
 27198  0007FE  EC6D  F02C         	call	_Uart_WriteConstString
 27199                           
 27200                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 27201  000802  0E0A               	movlw	10
 27202  000804  0101               	movlb	1	; () banked
 27203  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27204                           
 27205                           ; BSR set to: 1
 27206                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 27207  000808  0E06               	movlw	6
 27208  00080A  0100               	movlb	0	; () banked
 27209  00080C  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 27213  00080E  0EF5               	movlw	low _ConnTimeout
 27214  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27215  000812  0E02               	movlw	high _ConnTimeout
 27216  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27217  000816  0E20               	movlw	32
 27218  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27219  00081A  0E4E               	movlw	78
 27220  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27221  00081E  0E00               	movlw	0
 27222  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27223  000822  0E00               	movlw	0
 27224  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27225  000826  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 27226                           
 27227                           ;mdm_gsm_gprs_http.c: 358: break;
 27228  00082A  D145               	goto	l1252
 27229  00082C                     
 27230                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27231  00082C  0E07               	movlw	7
 27232  00082E  0101               	movlb	1	; () banked
 27233  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27234                           
 27235                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27236  000832  0E09               	movlw	9
 27237  000834  0100               	movlb	0	; () banked
 27238  000836  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27239                           
 27240                           ; BSR set to: 0
 27241                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27242  000838  0EF5               	movlw	low _ConnTimeout
 27243  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27244  00083C  0E02               	movlw	high _ConnTimeout
 27245  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27246  000840  0E20               	movlw	32
 27247  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27248  000844  0E4E               	movlw	78
 27249  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27250  000848  0E00               	movlw	0
 27251  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27252  00084C  0E00               	movlw	0
 27253  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27254  000850  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 27255                           
 27256                           ;mdm_gsm_gprs_http.c: 371: break;
 27257  000854  D130               	goto	l1252
 27258  000856                     
 27259                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27260  000856  0E82               	movlw	low STR_17
 27261  000858  0100               	movlb	0	; () banked
 27262  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27263  00085C  0EFF               	movlw	high STR_17
 27264  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27265  000860  0E01               	movlw	1
 27266  000862  EC6D  F02C         	call	_Uart_WriteConstString
 27267                           
 27268                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27269  000866  0E0D               	movlw	13
 27270  000868  0101               	movlb	1	; () banked
 27271  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27272                           
 27273                           ; BSR set to: 1
 27274                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27275  00086C  0E09               	movlw	9
 27276  00086E  0100               	movlb	0	; () banked
 27277  000870  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27278                           
 27279                           ; BSR set to: 0
 27280                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27281  000872  0EF5               	movlw	low _ConnTimeout
 27282  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27283  000876  0E02               	movlw	high _ConnTimeout
 27284  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27285  00087A  0E20               	movlw	32
 27286  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27287  00087E  0E4E               	movlw	78
 27288  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27289  000882  0E00               	movlw	0
 27290  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27291  000886  0E00               	movlw	0
 27292  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27293  00088A  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 27294  00088E  D08A               	goto	l14327
 27295  000890                     
 27296                           ; BSR set to: 1
 27297                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27298                           
 27299                           ; BSR set to: 1
 27300  000890  0E8F               	movlw	low STR_18
 27301  000892  0100               	movlb	0	; () banked
 27302  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27303  000896  0EFF               	movlw	high STR_18
 27304  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27305  00089A  0E01               	movlw	1
 27306  00089C  EC6D  F02C         	call	_Uart_WriteConstString
 27307                           
 27308                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 27309  0008A0  0E0A               	movlw	10
 27310  0008A2  0101               	movlb	1	; () banked
 27311  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27312                           
 27313                           ; BSR set to: 1
 27314                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 27315  0008A6  0E0E               	movlw	14
 27316  0008A8  0100               	movlb	0	; () banked
 27317  0008AA  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27318                           
 27319                           ; BSR set to: 0
 27320                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 27321  0008AC  0EF5               	movlw	low _ConnTimeout
 27322  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27323  0008B0  0E02               	movlw	high _ConnTimeout
 27324  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27325  0008B4  0E20               	movlw	32
 27326  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27327  0008B8  0E4E               	movlw	78
 27328  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27329  0008BC  0E00               	movlw	0
 27330  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27331  0008C0  0E00               	movlw	0
 27332  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27333  0008C4  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 27334  0008C8  D06D               	goto	l14327
 27335  0008CA                     
 27336                           ; BSR set to: 1
 27337                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 27338                           
 27339                           ; BSR set to: 1
 27340  0008CA  0E3C               	movlw	low _NewStringReceived
 27341  0008CC  0100               	movlb	0	; () banked
 27342  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27343  0008D0  0E00               	movlw	high _NewStringReceived
 27344  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27345  0008D4  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 27346  0008D8  0900               	iorlw	0
 27347  0008DA  B4D8               	btfsc	status,2,c
 27348  0008DC  D018               	goto	l1265
 27349                           
 27350                           ;mdm_gsm_gprs_http.c: 400: {
 27351                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27352  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 27353  0008E2  0A4F               	xorlw	79
 27354  0008E4  A4D8               	btfss	status,2,c
 27355  0008E6  D0E7               	goto	l1252
 27356  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27357  0008EC  0A4B               	xorlw	75
 27358  0008EE  A4D8               	btfss	status,2,c
 27359  0008F0  D0E2               	goto	l1252
 27360                           
 27361                           ;mdm_gsm_gprs_http.c: 403: {
 27362                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 27363  0008F2  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27364                           
 27365                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 27366  0008F6  0E58               	movlw	low _RxBuffer
 27367  0008F8  0100               	movlb	0	; () banked
 27368  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27369  0008FC  0E0C               	movlw	high _RxBuffer
 27370  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27371  000900  0E01               	movlw	1
 27372  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27373  000904  0E90               	movlw	144
 27374  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27375  000908  ECDD  F02D         	call	_ClearBuffer	;wreg free
 27376                           
 27377                           ;mdm_gsm_gprs_http.c: 408: }
 27378                           ;mdm_gsm_gprs_http.c: 409: }
 27379  00090C  D0D4               	goto	l1252
 27380  00090E                     l1265:
 27381                           
 27382                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27383  00090E  0EF5               	movlw	low _ConnTimeout
 27384  000910  0100               	movlb	0	; () banked
 27385  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27386  000914  0E02               	movlw	high _ConnTimeout
 27387  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27388  000918  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27389  00091C                     L37:
 27390  00091C  06E8               	decf	wreg,f,c
 27391  00091E  A4D8               	btfss	status,2,c
 27392  000920  D0CA               	goto	l1252
 27393                           
 27394                           ;mdm_gsm_gprs_http.c: 411: {
 27395                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 27396  000922  0E0F               	movlw	15
 27397  000924                     L36:
 27398  000924  0101               	movlb	1	; () banked
 27399  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27400                           
 27401                           ; BSR set to: 1
 27402                           ;mdm_gsm_gprs_http.c: 414: }
 27403                           ;mdm_gsm_gprs_http.c: 415: break;
 27404                           
 27405                           ; BSR set to: 1
 27406  000928  D0C6               	goto	l1252
 27407  00092A                     
 27408                           ; BSR set to: 1
 27409                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 27410                           
 27411                           ; BSR set to: 1
 27412  00092A  0E3C               	movlw	low _NewStringReceived
 27413  00092C  0100               	movlb	0	; () banked
 27414  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27415  000930  0E00               	movlw	high _NewStringReceived
 27416  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27417  000934  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 27418  000938  0900               	iorlw	0
 27419  00093A  B4D8               	btfsc	status,2,c
 27420  00093C  D018               	goto	l1270
 27421                           
 27422                           ;mdm_gsm_gprs_http.c: 420: {
 27423                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27424  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 27425  000942  0A2B               	xorlw	43
 27426  000944  A4D8               	btfss	status,2,c
 27427  000946  D0B7               	goto	l1252
 27428  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27429  00094C  0A48               	xorlw	72
 27430  00094E  A4D8               	btfss	status,2,c
 27431  000950  D0B2               	goto	l1252
 27432                           
 27433                           ;mdm_gsm_gprs_http.c: 423: {
 27434                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 27435  000952  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27436                           
 27437                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 27438  000956  0E58               	movlw	low _RxBuffer
 27439  000958  0100               	movlb	0	; () banked
 27440  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27441  00095C  0E0C               	movlw	high _RxBuffer
 27442  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27443  000960  0E01               	movlw	1
 27444  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27445  000964  0E90               	movlw	144
 27446  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27447  000968  ECDD  F02D         	call	_ClearBuffer	;wreg free
 27448                           
 27449                           ;mdm_gsm_gprs_http.c: 428: }
 27450                           ;mdm_gsm_gprs_http.c: 429: }
 27451  00096C  D0A4               	goto	l1252
 27452  00096E                     l1270:
 27453                           
 27454                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27455  00096E  0EF5               	movlw	low _ConnTimeout
 27456  000970  0100               	movlb	0	; () banked
 27457  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27458  000974  0E02               	movlw	high _ConnTimeout
 27459  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27460  000978  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27461  00097C  D7CF               	goto	L37
 27462  00097E                     
 27463                           ; BSR set to: 1
 27464                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 27465                           
 27466                           ; BSR set to: 1
 27467  00097E  0E0C               	movlw	12
 27468  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27469                           
 27470                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 27471  000982  0E05               	movlw	5
 27472  000984  0100               	movlb	0	; () banked
 27473  000986  6FD2               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27474                           
 27475                           ; BSR set to: 0
 27476                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 27477  000988  0EDC               	movlw	low _ConnWait
 27478  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27479  00098C  0E03               	movlw	high _ConnWait
 27480  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27481  000990  0EE8               	movlw	232
 27482  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27483  000994  0E03               	movlw	3
 27484  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27485  000998  0E00               	movlw	0
 27486  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27487  00099C  0E00               	movlw	0
 27488  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27489  0009A0  ECAE  F028         	call	_OsTmr_StartTimer	;wreg free
 27490  0009A4                     l14327:
 27491                           
 27492                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 27493  0009A4  0E01               	movlw	1
 27494  0009A6  0101               	movlb	1	; () banked
 27495  0009A8  D053               	goto	L39
 27496  0009AA                     
 27497                           ; BSR set to: 1
 27498                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 27499                           
 27500                           ; BSR set to: 1
 27501  0009AA  0EDC               	movlw	low _ConnWait
 27502  0009AC  0100               	movlb	0	; () banked
 27503  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27504  0009B0  0E03               	movlw	high _ConnWait
 27505  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27506  0009B4  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27507  0009B8  06E8               	decf	wreg,f,c
 27508  0009BA  A4D8               	btfss	status,2,c
 27509  0009BC  D07C               	goto	l1252
 27510                           
 27511                           ;mdm_gsm_gprs_http.c: 450: {
 27512                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 27513  0009BE  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27514                           
 27515                           ;mdm_gsm_gprs_http.c: 453: }
 27516                           ;mdm_gsm_gprs_http.c: 454: break;
 27517  0009C2  D079               	goto	l1252
 27518  0009C4                     
 27519                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 27520  0009C4  0E3C               	movlw	low _NewStringReceived
 27521  0009C6  0100               	movlb	0	; () banked
 27522  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27523  0009CA  0E00               	movlw	high _NewStringReceived
 27524  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27525  0009CE  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 27526  0009D2  0900               	iorlw	0
 27527  0009D4  B4D8               	btfsc	status,2,c
 27528  0009D6  D02D               	goto	l1278
 27529                           
 27530                           ;mdm_gsm_gprs_http.c: 459: {
 27531                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27532  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 27533  0009DC  0A2B               	xorlw	43
 27534  0009DE  A4D8               	btfss	status,2,c
 27535  0009E0  D06A               	goto	l1252
 27536  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27537  0009E6  0A48               	xorlw	72
 27538  0009E8  A4D8               	btfss	status,2,c
 27539  0009EA  D065               	goto	l1252
 27540                           
 27541                           ;mdm_gsm_gprs_http.c: 462: {
 27542                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 27543  0009EC  C0D2  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27544                           
 27545                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 27546  0009F0  0E58               	movlw	low _RxBuffer
 27547  0009F2  0100               	movlb	0	; () banked
 27548  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27549  0009F6  0E0C               	movlw	high _RxBuffer
 27550  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27551  0009FA  EE20 F003          	lfsr	2,3
 27552  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27553  000A00  26D9               	addwf	fsr2l,f,c
 27554  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27555  000A04  22DA               	addwfc	fsr2h,f,c
 27556  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 27557  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 27558  000A0E  0E01               	movlw	1
 27559  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27560  000A12  0E90               	movlw	144
 27561  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 27562  000A16  EC4E  F028         	call	_StringCopy	;wreg free
 27563                           
 27564                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27565  000A1A  0E58               	movlw	low _RxBuffer
 27566  000A1C  0100               	movlb	0	; () banked
 27567  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27568  000A20  0E0C               	movlw	high _RxBuffer
 27569  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27570  000A24  0E01               	movlw	1
 27571  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27572  000A28  0E90               	movlw	144
 27573  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27574  000A2C  ECDD  F02D         	call	_ClearBuffer	;wreg free
 27575                           
 27576                           ;mdm_gsm_gprs_http.c: 469: }
 27577                           ;mdm_gsm_gprs_http.c: 470: }
 27578  000A30  D042               	goto	l1252
 27579  000A32                     l1278:
 27580                           
 27581                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27582  000A32  0EF5               	movlw	low _ConnTimeout
 27583  000A34  0100               	movlb	0	; () banked
 27584  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27585  000A38  0E02               	movlw	high _ConnTimeout
 27586  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27587  000A3C  ECF9  F024         	call	_OsTmr_GetTimerStatus	;wreg free
 27588  000A40  D76D               	goto	L37
 27589  000A42                     
 27590                           ; BSR set to: 1
 27591                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27592                           
 27593                           ; BSR set to: 1
 27594  000A42  0E00               	movlw	0
 27595  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27596                           
 27597                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27598  000A46  0E02               	movlw	2
 27599  000A48  D003               	goto	L39
 27600  000A4A                     
 27601                           ; BSR set to: 1
 27602                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27603                           
 27604                           ; BSR set to: 1
 27605  000A4A  0E00               	movlw	0
 27606  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27607                           
 27608                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27609  000A4E  0E03               	movlw	3
 27610  000A50                     L39:
 27611  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27612                           
 27613                           ; BSR set to: 1
 27614                           ;mdm_gsm_gprs_http.c: 494: }
 27615                           
 27616                           ; BSR set to: 1
 27617                           ;mdm_gsm_gprs_http.c: 493: break;
 27618                           
 27619                           ;mdm_gsm_gprs_http.c: 492: default:
 27620                           
 27621                           ;mdm_gsm_gprs_http.c: 490: break;
 27622  000A52  D031               	goto	l1252
 27623  000A54                     l1249:
 27624                           
 27625                           ; BSR set to: 1
 27626                           
 27627                           ; BSR set to: 1
 27628  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27629                           
 27630                           ; Switch size 1, requested type "space"
 27631                           ; Number of cases is 16, Range of values is 0 to 15
 27632                           ; switch strategies available:
 27633                           ; Name         Instructions Cycles
 27634                           ; simple_byte           49    25 (average)
 27635                           ;	Chosen strategy is simple_byte
 27636  000A56  0A00               	xorlw	0	; case 0
 27637  000A58  B4D8               	btfsc	status,2,c
 27638  000A5A  D5CC               	goto	l1250
 27639  000A5C  0A01               	xorlw	1	; case 1
 27640  000A5E  B4D8               	btfsc	status,2,c
 27641  000A60  D5D5               	goto	l1253
 27642  000A62  0A03               	xorlw	3	; case 2
 27643  000A64  B4D8               	btfsc	status,2,c
 27644  000A66  D5EF               	goto	l1254
 27645  000A68  0A01               	xorlw	1	; case 3
 27646  000A6A  B4D8               	btfsc	status,2,c
 27647  000A6C  D609               	goto	l1255
 27648  000A6E  0A07               	xorlw	7	; case 4
 27649  000A70  B4D8               	btfsc	status,2,c
 27650  000A72  D623               	goto	l1256
 27651  000A74  0A01               	xorlw	1	; case 5
 27652  000A76  B4D8               	btfsc	status,2,c
 27653  000A78  D6BC               	goto	l1260
 27654  000A7A  0A03               	xorlw	3	; case 6
 27655  000A7C  B4D8               	btfsc	status,2,c
 27656  000A7E  D6D6               	goto	l1261
 27657  000A80  0A01               	xorlw	1	; case 7
 27658  000A82  B4D8               	btfsc	status,2,c
 27659  000A84  D752               	goto	l1269
 27660  000A86  0A0F               	xorlw	15	; case 8
 27661  000A88  B4D8               	btfsc	status,2,c
 27662  000A8A  D6E5               	goto	l1262
 27663  000A8C  0A01               	xorlw	1	; case 9
 27664  000A8E  B4D8               	btfsc	status,2,c
 27665  000A90  D6FF               	goto	l1263
 27666  000A92  0A03               	xorlw	3	; case 10
 27667  000A94  B4D8               	btfsc	status,2,c
 27668  000A96  D719               	goto	l1264
 27669  000A98  0A01               	xorlw	1	; case 11
 27670  000A9A  B4D8               	btfsc	status,2,c
 27671  000A9C  D770               	goto	l1274
 27672  000A9E  0A07               	xorlw	7	; case 12
 27673  000AA0  B4D8               	btfsc	status,2,c
 27674  000AA2  D783               	goto	l1275
 27675  000AA4  0A01               	xorlw	1	; case 13
 27676  000AA6  B4D8               	btfsc	status,2,c
 27677  000AA8  D78D               	goto	l1277
 27678  000AAA  0A03               	xorlw	3	; case 14
 27679  000AAC  B4D8               	btfsc	status,2,c
 27680  000AAE  D7C9               	goto	l1282
 27681  000AB0  0A01               	xorlw	1	; case 15
 27682  000AB2  B4D8               	btfsc	status,2,c
 27683  000AB4  D7CA               	goto	l1283
 27684  000AB6                     l1252:
 27685                           
 27686                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27687                           
 27688                           ; BSR set to: 1
 27689  000AB6  0101               	movlb	1	; () banked
 27690  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27691  000ABA  0012               	return	
 27692  000ABC                     __end_of_HttpGetMethod:
 27693                           	opt stack 0
 27694                           tosu	equ	0xFFF
 27695                           tosh	equ	0xFFE
 27696                           tosl	equ	0xFFD
 27697                           pclath	equ	0xFFA
 27698                           tblptru	equ	0xFF8
 27699                           tblptrh	equ	0xFF7
 27700                           tblptrl	equ	0xFF6
 27701                           tablat	equ	0xFF5
 27702                           prodh	equ	0xFF4
 27703                           prodl	equ	0xFF3
 27704                           intcon	equ	0xFF2
 27705                           intcon2	equ	0xFF1
 27706                           intcon3	equ	0xFF0
 27707                           indf0	equ	0xFEF
 27708                           postinc0	equ	0xFEE
 27709                           plusw0	equ	0xFEB
 27710                           fsr0h	equ	0xFEA
 27711                           fsr0l	equ	0xFE9
 27712                           wreg	equ	0xFE8
 27713                           indf1	equ	0xFE7
 27714                           postinc1	equ	0xFE6
 27715                           postdec1	equ	0xFE5
 27716                           plusw1	equ	0xFE3
 27717                           fsr1h	equ	0xFE2
 27718                           fsr1l	equ	0xFE1
 27719                           indf2	equ	0xFDF
 27720                           postinc2	equ	0xFDE
 27721                           postdec2	equ	0xFDD
 27722                           plusw2	equ	0xFDB
 27723                           fsr2h	equ	0xFDA
 27724                           fsr2l	equ	0xFD9
 27725                           status	equ	0xFD8
 27726                           
 27727 ;; *************** function _Uart_WriteString *****************
 27728 ;; Defined at:
 27729 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27730 ;; Parameters:    Size  Location     Type
 27731 ;;  Module          1    wreg     unsigned char 
 27732 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27733 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 27734 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 27735 ;; Auto vars:     Size  Location     Type
 27736 ;;  Module          1   34[BANK0 ] unsigned char 
 27737 ;; Return value:  Size  Location     Type
 27738 ;;                  1    wreg      void 
 27739 ;; Registers used:
 27740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27741 ;; Tracked objects:
 27742 ;;		On entry : 0/0
 27743 ;;		On exit  : 0/0
 27744 ;;		Unchanged: 0/0
 27745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27749 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27750 ;;Total ram usage:        3 bytes
 27751 ;; Hardware stack levels used:    1
 27752 ;; Hardware stack levels required when called:   12
 27753 ;; This function calls:
 27754 ;;		_UartTxBufferStatus
 27755 ;;		_UartWriteByte
 27756 ;; This function is called by:
 27757 ;;		_Mdm_SetSmsFormat
 27758 ;;		_InitGprsNetwork
 27759 ;;		_HttpGetMethod
 27760 ;;		_Mdm_PinUnlock
 27761 ;;		_Mdm_MakePhoneCall
 27762 ;; This function uses a non-reentrant model
 27763 ;;
 27764                           
 27765                           	psect	text122
 27766  005A5C                     __ptext122:
 27767                           	opt stack 0
 27768  005A5C                     _Uart_WriteString:
 27769                           	opt stack 13
 27770                           
 27771                           ; BSR set to: 1
 27772                           ;incstack = 0
 27773                           ;Uart_WriteString@Module stored from wreg
 27774  005A5C  0100               	movlb	0	; () banked
 27775  005A5E  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 27776                           
 27777                           ;uart_drv.c: 521: while (*StringToWrite)
 27778  005A60  D014               	goto	u11460
 27779  005A62                     
 27780                           ;uart_drv.c: 522: {
 27781                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 27782  005A62  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27783  005A66  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27784  005A6A  50DF               	movf	indf2,w,c
 27785  005A6C  0100               	movlb	0	; () banked
 27786  005A6E  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27787  005A70  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27788  005A72  ECF7  F02F         	call	_UartWriteByte
 27789                           
 27790                           ;uart_drv.c: 526: StringToWrite++;
 27791  005A76  0100               	movlb	0	; () banked
 27792  005A78  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 27793  005A7A  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 27794  005A7C                     
 27795                           ; BSR set to: 0
 27796                           
 27797                           ; BSR set to: 0
 27798  005A7C  0100               	movlb	0	; () banked
 27799  005A7E  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 27800  005A80  EC04  F02B         	call	_UartTxBufferStatus
 27801  005A84  06E8               	decf	wreg,f,c
 27802  005A86  B4D8               	btfsc	status,2,c
 27803  005A88  D7F9               	goto	l709
 27804  005A8A                     u11460:
 27805  005A8A  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 27806  005A8E  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 27807  005A92  50DF               	movf	indf2,w,c
 27808  005A94  B4D8               	btfsc	status,2,c
 27809  005A96  0012               	return	
 27810  005A98  D7E4               	goto	l707
 27811  005A9A                     __end_of_Uart_WriteString:
 27812                           	opt stack 0
 27813                           tosu	equ	0xFFF
 27814                           tosh	equ	0xFFE
 27815                           tosl	equ	0xFFD
 27816                           pclath	equ	0xFFA
 27817                           tblptru	equ	0xFF8
 27818                           tblptrh	equ	0xFF7
 27819                           tblptrl	equ	0xFF6
 27820                           tablat	equ	0xFF5
 27821                           prodh	equ	0xFF4
 27822                           prodl	equ	0xFF3
 27823                           intcon	equ	0xFF2
 27824                           intcon2	equ	0xFF1
 27825                           intcon3	equ	0xFF0
 27826                           indf0	equ	0xFEF
 27827                           postinc0	equ	0xFEE
 27828                           plusw0	equ	0xFEB
 27829                           fsr0h	equ	0xFEA
 27830                           fsr0l	equ	0xFE9
 27831                           wreg	equ	0xFE8
 27832                           indf1	equ	0xFE7
 27833                           postinc1	equ	0xFE6
 27834                           postdec1	equ	0xFE5
 27835                           plusw1	equ	0xFE3
 27836                           fsr1h	equ	0xFE2
 27837                           fsr1l	equ	0xFE1
 27838                           indf2	equ	0xFDF
 27839                           postinc2	equ	0xFDE
 27840                           postdec2	equ	0xFDD
 27841                           plusw2	equ	0xFDB
 27842                           fsr2h	equ	0xFDA
 27843                           fsr2l	equ	0xFD9
 27844                           status	equ	0xFD8
 27845                           
 27846 ;; *************** function _Uart_WriteConstString *****************
 27847 ;; Defined at:
 27848 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27849 ;; Parameters:    Size  Location     Type
 27850 ;;  Module          1    wreg     unsigned char 
 27851 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 27852 ;;		 -> STR_31(14), STR_30(12), STR_29(19), STR_20(14), 
 27853 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 27854 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 27855 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 27856 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 27857 ;; Auto vars:     Size  Location     Type
 27858 ;;  Module          1   34[BANK0 ] unsigned char 
 27859 ;; Return value:  Size  Location     Type
 27860 ;;                  1    wreg      void 
 27861 ;; Registers used:
 27862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27863 ;; Tracked objects:
 27864 ;;		On entry : 0/0
 27865 ;;		On exit  : 0/0
 27866 ;;		Unchanged: 0/0
 27867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27871 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27872 ;;Total ram usage:        3 bytes
 27873 ;; Hardware stack levels used:    1
 27874 ;; Hardware stack levels required when called:   12
 27875 ;; This function calls:
 27876 ;;		_UartTxBufferStatus
 27877 ;;		_UartWriteByte
 27878 ;; This function is called by:
 27879 ;;		_CheckModem
 27880 ;;		_ConfigureModem
 27881 ;;		_GetSmsSm
 27882 ;;		_InitGprsNetwork
 27883 ;;		_HttpGetMethod
 27884 ;;		_initGprsModem
 27885 ;;		_MyApp_Task
 27886 ;;		_Mdm_HangPhoneCall
 27887 ;;		_Mdm_GetPhoneCall
 27888 ;;		_MdmHttp_SetSsl
 27889 ;; This function uses a non-reentrant model
 27890 ;;
 27891                           
 27892                           	psect	text123
 27893  0058DA                     __ptext123:
 27894                           	opt stack 0
 27895  0058DA                     _Uart_WriteConstString:
 27896                           	opt stack 14
 27897                           
 27898                           ;incstack = 0
 27899                           ;Uart_WriteConstString@Module stored from wreg
 27900  0058DA  0100               	movlb	0	; () banked
 27901  0058DC  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 27902                           
 27903                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 27904  0058DE  D015               	goto	u12290
 27905  0058E0                     
 27906                           ;uart_drv.c: 500: {
 27907                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 27908  0058E0  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27909  0058E4  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27910  0058E8                     	if	0	;tblptru may be non-zero
 27911  0058E8                     	endif
 27912  0058E8                     	if	0	;tblptru may be non-zero
 27913  0058E8                     	endif
 27914  0058E8  0008               	tblrd		*
 27915  0058EA  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 27916  0058EE  0100               	movlb	0	; () banked
 27917  0058F0  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27918  0058F2  ECF7  F02F         	call	_UartWriteByte
 27919                           
 27920                           ;uart_drv.c: 504: ConstStringToWrite++;
 27921  0058F6  0100               	movlb	0	; () banked
 27922  0058F8  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 27923  0058FA  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 27924  0058FC                     
 27925                           ; BSR set to: 0
 27926                           
 27927                           ; BSR set to: 0
 27928  0058FC  0100               	movlb	0	; () banked
 27929  0058FE  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 27930  005900  EC04  F02B         	call	_UartTxBufferStatus
 27931  005904  06E8               	decf	wreg,f,c
 27932  005906  B4D8               	btfsc	status,2,c
 27933  005908  D7F9               	goto	l700
 27934  00590A                     u12290:
 27935  00590A  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 27936  00590E  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 27937  005912                     	if	0	;tblptru may be non-zero
 27938  005912                     	endif
 27939  005912                     	if	0	;tblptru may be non-zero
 27940  005912                     	endif
 27941  005912  0008               	tblrd		*
 27942  005914  50F5               	movf	tablat,w,c
 27943  005916  0900               	iorlw	0
 27944  005918  B4D8               	btfsc	status,2,c
 27945  00591A  0012               	return	
 27946  00591C  D7E1               	goto	l698
 27947  00591E                     __end_of_Uart_WriteConstString:
 27948                           	opt stack 0
 27949                           tosu	equ	0xFFF
 27950                           tosh	equ	0xFFE
 27951                           tosl	equ	0xFFD
 27952                           pclath	equ	0xFFA
 27953                           tblptru	equ	0xFF8
 27954                           tblptrh	equ	0xFF7
 27955                           tblptrl	equ	0xFF6
 27956                           tablat	equ	0xFF5
 27957                           prodh	equ	0xFF4
 27958                           prodl	equ	0xFF3
 27959                           intcon	equ	0xFF2
 27960                           intcon2	equ	0xFF1
 27961                           intcon3	equ	0xFF0
 27962                           indf0	equ	0xFEF
 27963                           postinc0	equ	0xFEE
 27964                           plusw0	equ	0xFEB
 27965                           fsr0h	equ	0xFEA
 27966                           fsr0l	equ	0xFE9
 27967                           wreg	equ	0xFE8
 27968                           indf1	equ	0xFE7
 27969                           postinc1	equ	0xFE6
 27970                           postdec1	equ	0xFE5
 27971                           plusw1	equ	0xFE3
 27972                           fsr1h	equ	0xFE2
 27973                           fsr1l	equ	0xFE1
 27974                           indf2	equ	0xFDF
 27975                           postinc2	equ	0xFDE
 27976                           postdec2	equ	0xFDD
 27977                           plusw2	equ	0xFDB
 27978                           fsr2h	equ	0xFDA
 27979                           fsr2l	equ	0xFD9
 27980                           status	equ	0xFD8
 27981                           
 27982 ;; *************** function _UartWriteByte *****************
 27983 ;; Defined at:
 27984 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27985 ;; Parameters:    Size  Location     Type
 27986 ;;  Module          1    wreg     unsigned char 
 27987 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 27988 ;; Auto vars:     Size  Location     Type
 27989 ;;  Module          1   30[BANK0 ] unsigned char 
 27990 ;; Return value:  Size  Location     Type
 27991 ;;                  1    wreg      void 
 27992 ;; Registers used:
 27993 ;;		wreg, status,2, status,0
 27994 ;; Tracked objects:
 27995 ;;		On entry : 0/0
 27996 ;;		On exit  : 0/0
 27997 ;;		Unchanged: 0/0
 27998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27999 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28003 ;;Total ram usage:        2 bytes
 28004 ;; Hardware stack levels used:    1
 28005 ;; Hardware stack levels required when called:   11
 28006 ;; This function calls:
 28007 ;;		Nothing
 28008 ;; This function is called by:
 28009 ;;		_Uart_WriteConstString
 28010 ;;		_Uart_WriteString
 28011 ;;		_Uart_WriteStringLen
 28012 ;; This function uses a non-reentrant model
 28013 ;;
 28014                           
 28015                           	psect	text124
 28016  005FEE                     __ptext124:
 28017                           	opt stack 0
 28018  005FEE                     _UartWriteByte:
 28019                           	opt stack 14
 28020                           
 28021                           ;incstack = 0
 28022                           ;UartWriteByte@Module stored from wreg
 28023  005FEE  0100               	movlb	0	; () banked
 28024  005FF0  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 28025                           
 28026                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 28027  005FF2  0100               	movlb	0	; () banked
 28028  005FF4  057E               	decf	UartWriteByte@Module& (0+255),w,b
 28029  005FF6  A4D8               	btfss	status,2,c
 28030  005FF8  D003               	goto	l639
 28031                           
 28032                           ; BSR set to: 0
 28033                           ;uart_drv.c: 176: {
 28034                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 28035  005FFA  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 28036                           
 28037                           ;uart_drv.c: 179: }
 28038  005FFE  0012               	return	
 28039  006000                     l639:
 28040                           
 28041                           ; BSR set to: 0
 28042                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 28043                           
 28044                           ; BSR set to: 0
 28045  006000  0E02               	movlw	2
 28046  006002  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 28047  006004  A4D8               	btfss	status,2,c
 28048  006006  0012               	return	
 28049                           
 28050                           ; BSR set to: 0
 28051                           ;uart_drv.c: 181: {
 28052                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 28053  006008  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 28054                           
 28055                           ; BSR set to: 0
 28056  00600C  0012               	return	
 28057  00600E                     __end_of_UartWriteByte:
 28058                           	opt stack 0
 28059                           tosu	equ	0xFFF
 28060                           tosh	equ	0xFFE
 28061                           tosl	equ	0xFFD
 28062                           pclath	equ	0xFFA
 28063                           tblptru	equ	0xFF8
 28064                           tblptrh	equ	0xFF7
 28065                           tblptrl	equ	0xFF6
 28066                           tablat	equ	0xFF5
 28067                           prodh	equ	0xFF4
 28068                           prodl	equ	0xFF3
 28069                           intcon	equ	0xFF2
 28070                           intcon2	equ	0xFF1
 28071                           intcon3	equ	0xFF0
 28072                           indf0	equ	0xFEF
 28073                           postinc0	equ	0xFEE
 28074                           plusw0	equ	0xFEB
 28075                           fsr0h	equ	0xFEA
 28076                           fsr0l	equ	0xFE9
 28077                           wreg	equ	0xFE8
 28078                           indf1	equ	0xFE7
 28079                           postinc1	equ	0xFE6
 28080                           postdec1	equ	0xFE5
 28081                           plusw1	equ	0xFE3
 28082                           fsr1h	equ	0xFE2
 28083                           fsr1l	equ	0xFE1
 28084                           indf2	equ	0xFDF
 28085                           postinc2	equ	0xFDE
 28086                           postdec2	equ	0xFDD
 28087                           plusw2	equ	0xFDB
 28088                           fsr2h	equ	0xFDA
 28089                           fsr2l	equ	0xFD9
 28090                           status	equ	0xFD8
 28091                           
 28092 ;; *************** function _UartTxBufferStatus *****************
 28093 ;; Defined at:
 28094 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28095 ;; Parameters:    Size  Location     Type
 28096 ;;  Module          1    wreg     unsigned char 
 28097 ;; Auto vars:     Size  Location     Type
 28098 ;;  Module          1   30[BANK0 ] unsigned char 
 28099 ;;  TxBufferStat    1   31[BANK0 ] enum E9020
 28100 ;; Return value:  Size  Location     Type
 28101 ;;                  1    wreg      enum E9020
 28102 ;; Registers used:
 28103 ;;		wreg, status,2, status,0
 28104 ;; Tracked objects:
 28105 ;;		On entry : 0/0
 28106 ;;		On exit  : 0/0
 28107 ;;		Unchanged: 0/0
 28108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28112 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28113 ;;Total ram usage:        3 bytes
 28114 ;; Hardware stack levels used:    1
 28115 ;; Hardware stack levels required when called:   11
 28116 ;; This function calls:
 28117 ;;		Nothing
 28118 ;; This function is called by:
 28119 ;;		_Uart_WriteConstString
 28120 ;;		_Uart_WriteString
 28121 ;;		_Uart_WriteStringLen
 28122 ;; This function uses a non-reentrant model
 28123 ;;
 28124                           
 28125                           	psect	text125
 28126  005608                     __ptext125:
 28127                           	opt stack 0
 28128  005608                     _UartTxBufferStatus:
 28129                           	opt stack 14
 28130                           
 28131                           ; BSR set to: 0
 28132                           ;incstack = 0
 28133                           ;UartTxBufferStatus@Module stored from wreg
 28134  005608  0100               	movlb	0	; () banked
 28135  00560A  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 28136                           
 28137                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 28138  00560C  0E00               	movlw	0
 28139  00560E  0100               	movlb	0	; () banked
 28140  005610  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28141                           
 28142                           ; BSR set to: 0
 28143                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 28144  005612  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 28145  005614  A4D8               	btfss	status,2,c
 28146  005616  D00B               	goto	l651
 28147                           
 28148                           ; BSR set to: 0
 28149                           ;uart_drv.c: 228: {
 28150                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28151  005618  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28152  00561C  90D8               	bcf	status,0,c
 28153  00561E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28154  005620  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 28155  005622  D002               	goto	l652
 28156  005624                     u10920:
 28157                           
 28158                           ; BSR set to: 0
 28159                           ;uart_drv.c: 231: {
 28160                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 28161  005624  0E01               	movlw	1
 28162  005626  D014               	goto	L42
 28163  005628                     l652:
 28164                           
 28165                           ; BSR set to: 0
 28166                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28167                           
 28168                           ; BSR set to: 0
 28169  005628  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28170  00562C  D00C               	goto	L71
 28171  00562E                     l651:
 28172                           
 28173                           ; BSR set to: 0
 28174                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 28175                           
 28176                           ; BSR set to: 0
 28177  00562E  0E02               	movlw	2
 28178  005630  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 28179  005632  A4D8               	btfss	status,2,c
 28180  005634  D00E               	goto	l660
 28181                           
 28182                           ; BSR set to: 0
 28183                           ;uart_drv.c: 244: {
 28184                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28185  005636  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28186  00563A  90D8               	bcf	status,0,c
 28187  00563C  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28188  00563E  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28189  005640  D7F1               	goto	u10920
 28190                           
 28191                           ; BSR set to: 0
 28192                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28193                           
 28194                           ; BSR set to: 0
 28195                           
 28196                           ;uart_drv.c: 249: }
 28197                           
 28198                           ; BSR set to: 0
 28199                           ;uart_drv.c: 247: {
 28200                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 28201  005642  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28202  005646                     L71:
 28203  005646  90D8               	bcf	status,0,c
 28204  005648  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28205  00564A  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28206  00564C  D002               	goto	l660
 28207                           
 28208                           ; BSR set to: 0
 28209                           ;uart_drv.c: 251: {
 28210                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 28211  00564E  0E02               	movlw	2
 28212  005650                     L42:
 28213  005650  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28214  005652                     l660:
 28215                           
 28216                           ; BSR set to: 0
 28217                           ;uart_drv.c: 257: }
 28218                           ;uart_drv.c: 258: }
 28219                           ;uart_drv.c: 260: return TxBufferStatus;
 28220                           
 28221                           ; BSR set to: 0
 28222                           
 28223                           ; BSR set to: 0
 28224                           
 28225                           ; BSR set to: 0
 28226                           
 28227                           ; BSR set to: 0
 28228                           
 28229                           ;uart_drv.c: 254: else
 28230                           ;uart_drv.c: 255: {
 28231                           
 28232                           ; BSR set to: 0
 28233  005652  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28234  005654  0012               	return	
 28235  005656                     __end_of_UartTxBufferStatus:
 28236                           	opt stack 0
 28237                           tosu	equ	0xFFF
 28238                           tosh	equ	0xFFE
 28239                           tosl	equ	0xFFD
 28240                           pclath	equ	0xFFA
 28241                           tblptru	equ	0xFF8
 28242                           tblptrh	equ	0xFF7
 28243                           tblptrl	equ	0xFF6
 28244                           tablat	equ	0xFF5
 28245                           prodh	equ	0xFF4
 28246                           prodl	equ	0xFF3
 28247                           intcon	equ	0xFF2
 28248                           intcon2	equ	0xFF1
 28249                           intcon3	equ	0xFF0
 28250                           indf0	equ	0xFEF
 28251                           postinc0	equ	0xFEE
 28252                           plusw0	equ	0xFEB
 28253                           fsr0h	equ	0xFEA
 28254                           fsr0l	equ	0xFE9
 28255                           wreg	equ	0xFE8
 28256                           indf1	equ	0xFE7
 28257                           postinc1	equ	0xFE6
 28258                           postdec1	equ	0xFE5
 28259                           plusw1	equ	0xFE3
 28260                           fsr1h	equ	0xFE2
 28261                           fsr1l	equ	0xFE1
 28262                           indf2	equ	0xFDF
 28263                           postinc2	equ	0xFDE
 28264                           postdec2	equ	0xFDD
 28265                           plusw2	equ	0xFDB
 28266                           fsr2h	equ	0xFDA
 28267                           fsr2l	equ	0xFD9
 28268                           status	equ	0xFD8
 28269                           
 28270 ;; *************** function _StringCopy *****************
 28271 ;; Defined at:
 28272 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28273 ;; Parameters:    Size  Location     Type
 28274 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28275 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28276 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(132), RxBuffer(400), 
 28277 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28278 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50
      +), 
 28279 ;;		 -> MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 28280 ;;		 -> callerNumber(14), 
 28281 ;;  Len             2   33[BANK0 ] unsigned short 
 28282 ;; Auto vars:     Size  Location     Type
 28283 ;;  Index           2   37[BANK0 ] unsigned short 
 28284 ;; Return value:  Size  Location     Type
 28285 ;;                  1    wreg      void 
 28286 ;; Registers used:
 28287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28288 ;; Tracked objects:
 28289 ;;		On entry : 0/0
 28290 ;;		On exit  : 0/0
 28291 ;;		Unchanged: 0/0
 28292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28294 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28296 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28297 ;;Total ram usage:       10 bytes
 28298 ;; Hardware stack levels used:    1
 28299 ;; Hardware stack levels required when called:   11
 28300 ;; This function calls:
 28301 ;;		Nothing
 28302 ;; This function is called by:
 28303 ;;		_ModemEvtParser
 28304 ;;		_GetSmsSm
 28305 ;;		_SendSmsSm
 28306 ;;		_Mdm_GetSmsData
 28307 ;;		_InitGprsNetwork
 28308 ;;		_HttpGetMethod
 28309 ;;		_Mdm_SendSmsData
 28310 ;; This function uses a non-reentrant model
 28311 ;;
 28312                           
 28313                           	psect	text126
 28314  00509C                     __ptext126:
 28315                           	opt stack 0
 28316  00509C                     _StringCopy:
 28317                           	opt stack 15
 28318                           
 28319                           ;sf.c: 106: UINT16 Index = 0;
 28320                           
 28321                           ; BSR set to: 0
 28322                           ;incstack = 0
 28323  00509C  0E00               	movlw	0
 28324  00509E  0100               	movlb	0	; () banked
 28325  0050A0  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28326  0050A2  0E00               	movlw	0
 28327  0050A4  6F85               	movwf	StringCopy@Index& (0+255),b
 28328                           
 28329                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 28330  0050A6  0E00               	movlw	0
 28331  0050A8  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28332  0050AA  0E00               	movlw	0
 28333  0050AC  6F85               	movwf	StringCopy@Index& (0+255),b
 28334  0050AE  D020               	goto	l2218
 28335  0050B0                     
 28336                           ; BSR set to: 0
 28337                           ;sf.c: 110: {
 28338                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 28339                           
 28340                           ; BSR set to: 0
 28341  0050B0  5185               	movf	StringCopy@Index& (0+255),w,b
 28342  0050B2  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 28343  0050B4  6F83               	movwf	??_StringCopy& (0+255),b
 28344  0050B6  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28345  0050B8  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 28346  0050BA  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 28347  0050BC  C083  FFF6         	movff	??_StringCopy,tblptrl
 28348  0050C0  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 28349  0050C4  6AF8               	clrf	tblptru,c
 28350  0050C6  5185               	movf	StringCopy@Index& (0+255),w,b
 28351  0050C8  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 28352  0050CA  6ED9               	movwf	fsr2l,c
 28353  0050CC  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28354  0050CE  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 28355  0050D0  6EDA               	movwf	fsr2h,c
 28356  0050D2  0E0E               	movlw	(high __ramtop+-1)
 28357  0050D4  64F7               	cpfsgt	tblptrh,c
 28358  0050D6  D003               	bra	u12377
 28359  0050D8  0008               	tblrd		*
 28360  0050DA  50F5               	movf	tablat,w,c
 28361  0050DC  D005               	bra	u12370
 28362  0050DE                     u12377:
 28363  0050DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 28364  0050E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 28365  0050E6  50EF               	movf	indf0,w,c
 28366  0050E8                     u12370:
 28367  0050E8  6EDF               	movwf	indf2,c
 28368  0050EA  0100               	movlb	0	; () banked
 28369  0050EC  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 28370  0050EE  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 28371  0050F0                     l2218:
 28372                           
 28373                           ; BSR set to: 0
 28374                           
 28375                           ; BSR set to: 0
 28376  0050F0  5181               	movf	StringCopy@Len& (0+255),w,b
 28377  0050F2  5D85               	subwf	StringCopy@Index& (0+255),w,b
 28378  0050F4  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 28379  0050F6  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 28380  0050F8  B0D8               	btfsc	status,0,c
 28381  0050FA  0012               	return	
 28382  0050FC  D7D9               	goto	l2219
 28383  0050FE                     __end_of_StringCopy:
 28384                           	opt stack 0
 28385                           tosu	equ	0xFFF
 28386                           tosh	equ	0xFFE
 28387                           tosl	equ	0xFFD
 28388                           pclath	equ	0xFFA
 28389                           tblptru	equ	0xFF8
 28390                           tblptrh	equ	0xFF7
 28391                           tblptrl	equ	0xFF6
 28392                           tablat	equ	0xFF5
 28393                           prodh	equ	0xFF4
 28394                           prodl	equ	0xFF3
 28395                           intcon	equ	0xFF2
 28396                           intcon2	equ	0xFF1
 28397                           intcon3	equ	0xFF0
 28398                           indf0	equ	0xFEF
 28399                           postinc0	equ	0xFEE
 28400                           plusw0	equ	0xFEB
 28401                           fsr0h	equ	0xFEA
 28402                           fsr0l	equ	0xFE9
 28403                           wreg	equ	0xFE8
 28404                           indf1	equ	0xFE7
 28405                           postinc1	equ	0xFE6
 28406                           postdec1	equ	0xFE5
 28407                           plusw1	equ	0xFE3
 28408                           fsr1h	equ	0xFE2
 28409                           fsr1l	equ	0xFE1
 28410                           indf2	equ	0xFDF
 28411                           postinc2	equ	0xFDE
 28412                           postdec2	equ	0xFDD
 28413                           plusw2	equ	0xFDB
 28414                           fsr2h	equ	0xFDA
 28415                           fsr2l	equ	0xFD9
 28416                           status	equ	0xFD8
 28417                           
 28418 ;; *************** function _OsTmr_StartTimer *****************
 28419 ;; Defined at:
 28420 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28421 ;; Parameters:    Size  Location     Type
 28422 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 28423 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28424 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28425 ;;  Timeout         4   35[BANK0 ] unsigned long 
 28426 ;; Auto vars:     Size  Location     Type
 28427 ;;		None
 28428 ;; Return value:  Size  Location     Type
 28429 ;;                  1    wreg      void 
 28430 ;; Registers used:
 28431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28432 ;; Tracked objects:
 28433 ;;		On entry : 0/0
 28434 ;;		On exit  : 0/0
 28435 ;;		Unchanged: 0/0
 28436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28437 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28440 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28441 ;;Total ram usage:        6 bytes
 28442 ;; Hardware stack levels used:    1
 28443 ;; Hardware stack levels required when called:   12
 28444 ;; This function calls:
 28445 ;;		_GetOsTickCounter
 28446 ;; This function is called by:
 28447 ;;		_OsTmr_Wait
 28448 ;;		_CheckModem
 28449 ;;		_SendSmsSm
 28450 ;;		_InitGprsNetwork
 28451 ;;		_HttpGetMethod
 28452 ;;		_Term_MainSm
 28453 ;;		_I2cSlv_QueryI2cData
 28454 ;; This function uses a non-reentrant model
 28455 ;;
 28456                           
 28457                           	psect	text127
 28458  00515C                     __ptext127:
 28459                           	opt stack 0
 28460  00515C                     _OsTmr_StartTimer:
 28461                           	opt stack 12
 28462                           
 28463                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 28464                           
 28465                           ; BSR set to: 0
 28466                           ;incstack = 0
 28467  00515C  0100               	movlb	0	; () banked
 28468  00515E  EE20 F001          	lfsr	2,1
 28469  005162  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28470  005164  26D9               	addwf	fsr2l,f,c
 28471  005166  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28472  005168  22DA               	addwfc	fsr2h,f,c
 28473  00516A  0E00               	movlw	0
 28474  00516C  6EDF               	movwf	indf2,c
 28475                           
 28476                           ; BSR set to: 0
 28477                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 28478  00516E  ECCA  F030         	call	_GetOsTickCounter	;wreg free
 28479  005172  0100               	movlb	0	; () banked
 28480  005174  EE20 F002          	lfsr	2,2
 28481  005178  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28482  00517A  26D9               	addwf	fsr2l,f,c
 28483  00517C  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28484  00517E  22DA               	addwfc	fsr2h,f,c
 28485  005180  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 28486  005184  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 28487  005188  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 28488  00518C  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 28489                           
 28490                           ; BSR set to: 0
 28491                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 28492  005190  EE20 F006          	lfsr	2,6
 28493  005194  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28494  005196  26D9               	addwf	fsr2l,f,c
 28495  005198  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28496  00519A  22DA               	addwfc	fsr2h,f,c
 28497  00519C  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 28498  0051A0  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 28499  0051A4  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 28500  0051A8  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 28501                           
 28502                           ; BSR set to: 0
 28503                           ;os_timers.c: 127: Timer->Enabled = 1u;
 28504  0051AC  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 28505  0051B0  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 28506  0051B4  0E01               	movlw	1
 28507  0051B6  6EDF               	movwf	indf2,c
 28508                           
 28509                           ; BSR set to: 0
 28510  0051B8  0012               	return		;funcret
 28511  0051BA                     __end_of_OsTmr_StartTimer:
 28512                           	opt stack 0
 28513                           tosu	equ	0xFFF
 28514                           tosh	equ	0xFFE
 28515                           tosl	equ	0xFFD
 28516                           pclath	equ	0xFFA
 28517                           tblptru	equ	0xFF8
 28518                           tblptrh	equ	0xFF7
 28519                           tblptrl	equ	0xFF6
 28520                           tablat	equ	0xFF5
 28521                           prodh	equ	0xFF4
 28522                           prodl	equ	0xFF3
 28523                           intcon	equ	0xFF2
 28524                           intcon2	equ	0xFF1
 28525                           intcon3	equ	0xFF0
 28526                           indf0	equ	0xFEF
 28527                           postinc0	equ	0xFEE
 28528                           plusw0	equ	0xFEB
 28529                           fsr0h	equ	0xFEA
 28530                           fsr0l	equ	0xFE9
 28531                           wreg	equ	0xFE8
 28532                           indf1	equ	0xFE7
 28533                           postinc1	equ	0xFE6
 28534                           postdec1	equ	0xFE5
 28535                           plusw1	equ	0xFE3
 28536                           fsr1h	equ	0xFE2
 28537                           fsr1l	equ	0xFE1
 28538                           indf2	equ	0xFDF
 28539                           postinc2	equ	0xFDE
 28540                           postdec2	equ	0xFDD
 28541                           plusw2	equ	0xFDB
 28542                           fsr2h	equ	0xFDA
 28543                           fsr2l	equ	0xFD9
 28544                           status	equ	0xFD8
 28545                           
 28546 ;; *************** function _OsTmr_GetTimerStatus *****************
 28547 ;; Defined at:
 28548 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28549 ;; Parameters:    Size  Location     Type
 28550 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 28551 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28552 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28553 ;; Auto vars:     Size  Location     Type
 28554 ;;		None
 28555 ;; Return value:  Size  Location     Type
 28556 ;;                  1    wreg      enum E7740
 28557 ;; Registers used:
 28558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28559 ;; Tracked objects:
 28560 ;;		On entry : 0/0
 28561 ;;		On exit  : 0/0
 28562 ;;		Unchanged: 0/0
 28563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28564 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28566 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28567 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28568 ;;Total ram usage:        6 bytes
 28569 ;; Hardware stack levels used:    1
 28570 ;; Hardware stack levels required when called:   13
 28571 ;; This function calls:
 28572 ;;		_GetElapsedTime
 28573 ;; This function is called by:
 28574 ;;		_OsTmr_Wait
 28575 ;;		_CheckModem
 28576 ;;		_SendSmsSm
 28577 ;;		_InitGprsNetwork
 28578 ;;		_HttpGetMethod
 28579 ;;		_Term_MainSm
 28580 ;;		_I2cSlv_QueryI2cData
 28581 ;; This function uses a non-reentrant model
 28582 ;;
 28583                           
 28584                           	psect	text128
 28585  0049F2                     __ptext128:
 28586                           	opt stack 0
 28587  0049F2                     _OsTmr_GetTimerStatus:
 28588                           	opt stack 11
 28589                           
 28590                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28591                           
 28592                           ; BSR set to: 0
 28593                           ;incstack = 0
 28594  0049F2  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28595  0049F6  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28596  0049FA  04DE               	decf	postinc2,w,c
 28597  0049FC  A4D8               	btfss	status,2,c
 28598  0049FE  D030               	goto	l864
 28599                           
 28600                           ;os_timers.c: 197: {
 28601                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28602  004A00  0100               	movlb	0	; () banked
 28603  004A02  EE20 F006          	lfsr	2,6
 28604  004A06  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28605  004A08  26D9               	addwf	fsr2l,f,c
 28606  004A0A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28607  004A0C  22DA               	addwfc	fsr2h,f,c
 28608  004A0E  EE10 F002          	lfsr	1,2
 28609  004A12  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28610  004A14  26E1               	addwf	fsr1l,f,c
 28611  004A16  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28612  004A18  22E2               	addwfc	fsr1h,f,c
 28613  004A1A  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28614  004A1E  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28615  004A22  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28616  004A26  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28617  004A2A  EC56  F01E         	call	_GetElapsedTime	;wreg free
 28618  004A2E  50DE               	movf	postinc2,w,c
 28619  004A30  0100               	movlb	0	; () banked
 28620  004A32  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28621  004A34  50DE               	movf	postinc2,w,c
 28622  004A36  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28623  004A38  50DE               	movf	postinc2,w,c
 28624  004A3A  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28625  004A3C  50DE               	movf	postinc2,w,c
 28626  004A3E  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28627  004A40  A0D8               	btfss	status,0,c
 28628  004A42  D017               	goto	l867
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;os_timers.c: 200: {
 28632                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28633  004A44  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28634  004A48  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28635  004A4C  0E00               	movlw	0
 28636  004A4E  6EDF               	movwf	indf2,c
 28637                           
 28638                           ; BSR set to: 0
 28639                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28640  004A50  EE20 F001          	lfsr	2,1
 28641  004A54  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28642  004A56  26D9               	addwf	fsr2l,f,c
 28643  004A58  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28644  004A5A  22DA               	addwfc	fsr2h,f,c
 28645  004A5C  0E01               	movlw	1
 28646  004A5E  D008               	goto	L72
 28647  004A60                     l864:
 28648                           
 28649                           ;os_timers.c: 211: else
 28650                           ;os_timers.c: 212: {
 28651                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28652                           
 28653                           ; BSR set to: 0
 28654  004A60  0100               	movlb	0	; () banked
 28655  004A62  EE20 F001          	lfsr	2,1
 28656  004A66  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28657  004A68  26D9               	addwf	fsr2l,f,c
 28658  004A6A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28659  004A6C  22DA               	addwfc	fsr2h,f,c
 28660  004A6E  0E02               	movlw	2
 28661  004A70                     L72:
 28662  004A70  6EDF               	movwf	indf2,c
 28663  004A72                     l867:
 28664                           
 28665                           ; BSR set to: 0
 28666                           ;os_timers.c: 215: }
 28667                           ;os_timers.c: 218: return Timer->Status;
 28668  004A72  EE20 F001          	lfsr	2,1
 28669  004A76  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28670  004A78  26D9               	addwf	fsr2l,f,c
 28671  004A7A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28672  004A7C  22DA               	addwfc	fsr2h,f,c
 28673  004A7E  50DF               	movf	indf2,w,c
 28674  004A80  0012               	return	
 28675  004A82                     __end_of_OsTmr_GetTimerStatus:
 28676                           	opt stack 0
 28677                           tosu	equ	0xFFF
 28678                           tosh	equ	0xFFE
 28679                           tosl	equ	0xFFD
 28680                           pclath	equ	0xFFA
 28681                           tblptru	equ	0xFF8
 28682                           tblptrh	equ	0xFF7
 28683                           tblptrl	equ	0xFF6
 28684                           tablat	equ	0xFF5
 28685                           prodh	equ	0xFF4
 28686                           prodl	equ	0xFF3
 28687                           intcon	equ	0xFF2
 28688                           intcon2	equ	0xFF1
 28689                           intcon3	equ	0xFF0
 28690                           indf0	equ	0xFEF
 28691                           postinc0	equ	0xFEE
 28692                           plusw0	equ	0xFEB
 28693                           fsr0h	equ	0xFEA
 28694                           fsr0l	equ	0xFE9
 28695                           wreg	equ	0xFE8
 28696                           indf1	equ	0xFE7
 28697                           postinc1	equ	0xFE6
 28698                           postdec1	equ	0xFE5
 28699                           plusw1	equ	0xFE3
 28700                           fsr1h	equ	0xFE2
 28701                           fsr1l	equ	0xFE1
 28702                           indf2	equ	0xFDF
 28703                           postinc2	equ	0xFDE
 28704                           postdec2	equ	0xFDD
 28705                           plusw2	equ	0xFDB
 28706                           fsr2h	equ	0xFDA
 28707                           fsr2l	equ	0xFD9
 28708                           status	equ	0xFD8
 28709                           
 28710 ;; *************** function _GetElapsedTime *****************
 28711 ;; Defined at:
 28712 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28713 ;; Parameters:    Size  Location     Type
 28714 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28715 ;; Auto vars:     Size  Location     Type
 28716 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28717 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28718 ;; Return value:  Size  Location     Type
 28719 ;;                  4   33[BANK0 ] unsigned long 
 28720 ;; Registers used:
 28721 ;;		wreg, status,2, status,0, cstack
 28722 ;; Tracked objects:
 28723 ;;		On entry : 0/0
 28724 ;;		On exit  : 0/0
 28725 ;;		Unchanged: 0/0
 28726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28728 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28729 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28730 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28731 ;;Total ram usage:       20 bytes
 28732 ;; Hardware stack levels used:    1
 28733 ;; Hardware stack levels required when called:   12
 28734 ;; This function calls:
 28735 ;;		_GetOsTickCounter
 28736 ;; This function is called by:
 28737 ;;		_OsTmr_GetTimerStatus
 28738 ;;		_OsTmr_GetRemainingTime
 28739 ;; This function uses a non-reentrant model
 28740 ;;
 28741                           
 28742                           	psect	text129
 28743  003CAC                     __ptext129:
 28744                           	opt stack 0
 28745  003CAC                     _GetElapsedTime:
 28746                           	opt stack 11
 28747                           
 28748                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 28749                           ;os_timers.c: 87: UINT32 TimeValue;
 28750                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 28751                           
 28752                           ; BSR set to: 0
 28753                           ;incstack = 0
 28754  003CAC  ECCA  F030         	call	_GetOsTickCounter	;wreg free
 28755  003CB0  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 28756  003CB4  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 28757  003CB8  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 28758  003CBC  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 28759                           
 28760                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 28761  003CC0  0100               	movlb	0	; () banked
 28762  003CC2  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 28763  003CC4  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28764  003CC6  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 28765  003CC8  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28766  003CCA  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 28767  003CCC  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28768  003CCE  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 28769  003CD0  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28770  003CD2  A0D8               	btfss	status,0,c
 28771  003CD4  D01D               	goto	l844
 28772                           
 28773                           ; BSR set to: 0
 28774                           ;os_timers.c: 94: {
 28775                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 28776  003CD6  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28777  003CDA  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28778  003CDE  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28779  003CE2  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28780  003CE6  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28781  003CE8  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28782  003CEA  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28783  003CEC  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28784  003CEE  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28785  003CF0  0E00               	movlw	0
 28786  003CF2  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28787  003CF4  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28788  003CF6  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28789  003CF8  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28790  003CFA  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28791  003CFC  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28792  003CFE  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28793  003D00  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28794  003D02  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28795  003D04  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28796  003D06  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28797  003D08  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28798  003D0A  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28799  003D0C  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28800  003D0E  D028               	goto	L43
 28801  003D10                     l844:
 28802                           
 28803                           ; BSR set to: 0
 28804                           ;os_timers.c: 97: else
 28805                           ;os_timers.c: 98: {
 28806                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 28807                           
 28808                           ; BSR set to: 0
 28809  003D10  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 28810  003D14  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 28811  003D18  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 28812  003D1C  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 28813  003D20  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 28814  003D22  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 28815  003D24  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 28816  003D26  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 28817  003D28  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 28818  003D2A  0E00               	movlw	0
 28819  003D2C  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 28820  003D2E  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 28821  003D30  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 28822  003D32  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 28823  003D34  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 28824  003D36  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 28825  003D38  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 28826  003D3A  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 28827  003D3C  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 28828  003D3E  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 28829  003D40  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 28830  003D42  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 28831  003D44  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 28832  003D46  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 28833  003D48  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 28834  003D4A  0EFF               	movlw	255
 28835  003D4C  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 28836  003D4E  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 28837  003D50  0EFF               	movlw	255
 28838  003D52  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 28839  003D54  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 28840  003D56  0EFF               	movlw	255
 28841  003D58  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 28842  003D5A  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 28843  003D5C  0EFF               	movlw	255
 28844  003D5E  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 28845  003D60                     L43:
 28846  003D60  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 28847                           
 28848                           ; BSR set to: 0
 28849                           ;os_timers.c: 100: }
 28850                           ;os_timers.c: 102: return TimeValue;
 28851                           
 28852                           ; BSR set to: 0
 28853  003D62  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 28854  003D66  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 28855  003D6A  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 28856  003D6E  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 28857  003D72  0012               	return	
 28858  003D74                     __end_of_GetElapsedTime:
 28859                           	opt stack 0
 28860                           tosu	equ	0xFFF
 28861                           tosh	equ	0xFFE
 28862                           tosl	equ	0xFFD
 28863                           pclath	equ	0xFFA
 28864                           tblptru	equ	0xFF8
 28865                           tblptrh	equ	0xFF7
 28866                           tblptrl	equ	0xFF6
 28867                           tablat	equ	0xFF5
 28868                           prodh	equ	0xFF4
 28869                           prodl	equ	0xFF3
 28870                           intcon	equ	0xFF2
 28871                           intcon2	equ	0xFF1
 28872                           intcon3	equ	0xFF0
 28873                           indf0	equ	0xFEF
 28874                           postinc0	equ	0xFEE
 28875                           plusw0	equ	0xFEB
 28876                           fsr0h	equ	0xFEA
 28877                           fsr0l	equ	0xFE9
 28878                           wreg	equ	0xFE8
 28879                           indf1	equ	0xFE7
 28880                           postinc1	equ	0xFE6
 28881                           postdec1	equ	0xFE5
 28882                           plusw1	equ	0xFE3
 28883                           fsr1h	equ	0xFE2
 28884                           fsr1l	equ	0xFE1
 28885                           indf2	equ	0xFDF
 28886                           postinc2	equ	0xFDE
 28887                           postdec2	equ	0xFDD
 28888                           plusw2	equ	0xFDB
 28889                           fsr2h	equ	0xFDA
 28890                           fsr2l	equ	0xFD9
 28891                           status	equ	0xFD8
 28892                           
 28893 ;; *************** function _GetOsTickCounter *****************
 28894 ;; Defined at:
 28895 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28896 ;; Parameters:    Size  Location     Type
 28897 ;;		None
 28898 ;; Auto vars:     Size  Location     Type
 28899 ;;		None
 28900 ;; Return value:  Size  Location     Type
 28901 ;;                  4   29[BANK0 ] unsigned long 
 28902 ;; Registers used:
 28903 ;;		None
 28904 ;; Tracked objects:
 28905 ;;		On entry : 0/0
 28906 ;;		On exit  : 0/0
 28907 ;;		Unchanged: 0/0
 28908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28909 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28912 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28913 ;;Total ram usage:        4 bytes
 28914 ;; Hardware stack levels used:    1
 28915 ;; Hardware stack levels required when called:   11
 28916 ;; This function calls:
 28917 ;;		Nothing
 28918 ;; This function is called by:
 28919 ;;		_GetElapsedTime
 28920 ;;		_OsTmr_StartTimer
 28921 ;;		_OsTmr_GetElapsedTime
 28922 ;; This function uses a non-reentrant model
 28923 ;;
 28924                           
 28925                           	psect	text130
 28926  006194                     __ptext130:
 28927                           	opt stack 0
 28928  006194                     _GetOsTickCounter:
 28929                           	opt stack 12
 28930                           
 28931                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 28932                           
 28933                           ; BSR set to: 0
 28934                           ;incstack = 0
 28935  006194  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 28936  006198  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 28937  00619C  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 28938  0061A0  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 28939  0061A4  0012               	return		;funcret
 28940  0061A6                     __end_of_GetOsTickCounter:
 28941                           	opt stack 0
 28942                           tosu	equ	0xFFF
 28943                           tosh	equ	0xFFE
 28944                           tosl	equ	0xFFD
 28945                           pclath	equ	0xFFA
 28946                           tblptru	equ	0xFF8
 28947                           tblptrh	equ	0xFF7
 28948                           tblptrl	equ	0xFF6
 28949                           tablat	equ	0xFF5
 28950                           prodh	equ	0xFF4
 28951                           prodl	equ	0xFF3
 28952                           intcon	equ	0xFF2
 28953                           intcon2	equ	0xFF1
 28954                           intcon3	equ	0xFF0
 28955                           indf0	equ	0xFEF
 28956                           postinc0	equ	0xFEE
 28957                           plusw0	equ	0xFEB
 28958                           fsr0h	equ	0xFEA
 28959                           fsr0l	equ	0xFE9
 28960                           wreg	equ	0xFE8
 28961                           indf1	equ	0xFE7
 28962                           postinc1	equ	0xFE6
 28963                           postdec1	equ	0xFE5
 28964                           plusw1	equ	0xFE3
 28965                           fsr1h	equ	0xFE2
 28966                           fsr1l	equ	0xFE1
 28967                           indf2	equ	0xFDF
 28968                           postinc2	equ	0xFDE
 28969                           postdec2	equ	0xFDD
 28970                           plusw2	equ	0xFDB
 28971                           fsr2h	equ	0xFDA
 28972                           fsr2l	equ	0xFD9
 28973                           status	equ	0xFD8
 28974                           
 28975 ;; *************** function _ClearBuffer *****************
 28976 ;; Defined at:
 28977 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28978 ;; Parameters:    Size  Location     Type
 28979 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 28980 ;;		 -> MyApp_Task@smsNumber(14), MyApp_Task@smsText(50), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200
      +), 
 28981 ;;		 -> InitGprsNetwork@UartMessage(50), Mdm_SmsRx(132), callerNumber(14), RxBuffer(400), 
 28982 ;;  Len             2   31[BANK0 ] unsigned short 
 28983 ;; Auto vars:     Size  Location     Type
 28984 ;;  Index           2   33[BANK0 ] unsigned short 
 28985 ;; Return value:  Size  Location     Type
 28986 ;;                  1    wreg      void 
 28987 ;; Registers used:
 28988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28989 ;; Tracked objects:
 28990 ;;		On entry : 0/0
 28991 ;;		On exit  : 0/0
 28992 ;;		Unchanged: 0/0
 28993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28997 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28998 ;;Total ram usage:        6 bytes
 28999 ;; Hardware stack levels used:    1
 29000 ;; Hardware stack levels required when called:   11
 29001 ;; This function calls:
 29002 ;;		Nothing
 29003 ;; This function is called by:
 29004 ;;		_GetSmsSm
 29005 ;;		_GetCallerNumber
 29006 ;;		_InitGprsNetwork
 29007 ;;		_HttpGetMethod
 29008 ;;		_MyApp_Task
 29009 ;;		_GsmGprsTerminal
 29010 ;; This function uses a non-reentrant model
 29011 ;;
 29012                           
 29013                           	psect	text131
 29014  005BBA                     __ptext131:
 29015                           	opt stack 0
 29016  005BBA                     _ClearBuffer:
 29017                           	opt stack 15
 29018                           
 29019                           ;sf.c: 126: UINT16 Index = 0;
 29020                           
 29021                           ;incstack = 0
 29022  005BBA  0E00               	movlw	0
 29023  005BBC  0100               	movlb	0	; () banked
 29024  005BBE  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29025  005BC0  0E00               	movlw	0
 29026  005BC2  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29027                           
 29028                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 29029  005BC4  0E00               	movlw	0
 29030  005BC6  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29031  005BC8  0E00               	movlw	0
 29032  005BCA  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29033  005BCC  D00A               	goto	l2224
 29034  005BCE                     
 29035                           ; BSR set to: 0
 29036                           ;sf.c: 130: {
 29037                           ;sf.c: 131: *(Buffer + Index) = 0;
 29038                           
 29039                           ; BSR set to: 0
 29040  005BCE  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29041  005BD0  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 29042  005BD2  6ED9               	movwf	fsr2l,c
 29043  005BD4  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29044  005BD6  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 29045  005BD8  6EDA               	movwf	fsr2h,c
 29046  005BDA  0E00               	movlw	0
 29047  005BDC  6EDF               	movwf	indf2,c
 29048                           
 29049                           ; BSR set to: 0
 29050  005BDE  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 29051  005BE0  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 29052  005BE2                     l2224:
 29053                           
 29054                           ; BSR set to: 0
 29055                           
 29056                           ; BSR set to: 0
 29057  005BE2  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29058  005BE4  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 29059  005BE6  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29060  005BE8  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 29061  005BEA  A0D8               	btfss	status,0,c
 29062  005BEC  0012               	return	
 29063  005BEE  D7EF               	goto	l2225
 29064  005BF0                     __end_of_ClearBuffer:
 29065                           	opt stack 0
 29066                           tosu	equ	0xFFF
 29067                           tosh	equ	0xFFE
 29068                           tosl	equ	0xFFD
 29069                           pclath	equ	0xFFA
 29070                           tblptru	equ	0xFF8
 29071                           tblptrh	equ	0xFF7
 29072                           tblptrl	equ	0xFF6
 29073                           tablat	equ	0xFF5
 29074                           prodh	equ	0xFF4
 29075                           prodl	equ	0xFF3
 29076                           intcon	equ	0xFF2
 29077                           intcon2	equ	0xFF1
 29078                           intcon3	equ	0xFF0
 29079                           indf0	equ	0xFEF
 29080                           postinc0	equ	0xFEE
 29081                           plusw0	equ	0xFEB
 29082                           fsr0h	equ	0xFEA
 29083                           fsr0l	equ	0xFE9
 29084                           wreg	equ	0xFE8
 29085                           indf1	equ	0xFE7
 29086                           postinc1	equ	0xFE6
 29087                           postdec1	equ	0xFE5
 29088                           plusw1	equ	0xFE3
 29089                           fsr1h	equ	0xFE2
 29090                           fsr1l	equ	0xFE1
 29091                           indf2	equ	0xFDF
 29092                           postinc2	equ	0xFDE
 29093                           postdec2	equ	0xFDD
 29094                           plusw2	equ	0xFDB
 29095                           fsr2h	equ	0xFDA
 29096                           fsr2l	equ	0xFD9
 29097                           status	equ	0xFD8
 29098                           
 29099 ;; *************** function _LedStateMachine *****************
 29100 ;; Defined at:
 29101 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29102 ;; Parameters:    Size  Location     Type
 29103 ;;  Led             1    wreg     unsigned char 
 29104 ;;  LedSts          2   47[BANK0 ] PTR enum E8937
 29105 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 29106 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 29107 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 29108 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 29109 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29110 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 29111 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29112 ;; Auto vars:     Size  Location     Type
 29113 ;;  Led             1   57[BANK0 ] unsigned char 
 29114 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 29115 ;; Return value:  Size  Location     Type
 29116 ;;                  1    wreg      unsigned char 
 29117 ;; Registers used:
 29118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29119 ;; Tracked objects:
 29120 ;;		On entry : 0/0
 29121 ;;		On exit  : 0/0
 29122 ;;		Unchanged: 0/0
 29123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29124 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29127 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29128 ;;Total ram usage:       11 bytes
 29129 ;; Hardware stack levels used:    1
 29130 ;; Hardware stack levels required when called:   13
 29131 ;; This function calls:
 29132 ;;		_LedBlinkStateMachine
 29133 ;;		_LedPulseStateMachine
 29134 ;;		_Led_SetLedStatus
 29135 ;; This function is called by:
 29136 ;;		_Led_MainTask
 29137 ;; This function uses a non-reentrant model
 29138 ;;
 29139                           
 29140                           	psect	text132
 29141  0043E0                     __ptext132:
 29142                           	opt stack 0
 29143  0043E0                     _LedStateMachine:
 29144                           	opt stack 14
 29145                           
 29146                           ; BSR set to: 0
 29147                           ;incstack = 0
 29148                           ;LedStateMachine@Led stored from wreg
 29149  0043E0  0100               	movlb	0	; () banked
 29150  0043E2  6F99               	movwf	LedStateMachine@Led& (0+255),b
 29151                           
 29152                           ;led.c: 238: UINT8 LedOutSts = 0u;
 29153  0043E4  0E00               	movlw	0
 29154  0043E6  0100               	movlb	0	; () banked
 29155  0043E8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29156                           
 29157                           ;led.c: 241: switch (*LedSts)
 29158  0043EA  D037               	goto	l2083
 29159  0043EC                     
 29160                           ; BSR set to: 0
 29161                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 29162                           
 29163                           ; BSR set to: 0
 29164  0043EC  0E00               	movlw	0
 29165  0043EE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29166                           
 29167                           ; BSR set to: 0
 29168                           ;led.c: 246: *LedOut = ((UINT8)(0));
 29169  0043F0  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29170  0043F4  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29171  0043F8  0E00               	movlw	0
 29172  0043FA  D007               	goto	L44
 29173  0043FC                     
 29174                           ; BSR set to: 0
 29175                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 29176                           
 29177                           ; BSR set to: 0
 29178  0043FC  0E01               	movlw	1
 29179  0043FE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29180                           
 29181                           ; BSR set to: 0
 29182                           ;led.c: 252: *LedOut = ((UINT8)(1));
 29183  004400  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29184  004404  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29185  004408  0E01               	movlw	1
 29186  00440A                     L44:
 29187  00440A  6EDF               	movwf	indf2,c
 29188                           
 29189                           ;led.c: 253: break;
 29190  00440C  D03A               	goto	l2085
 29191  00440E                     
 29192                           ; BSR set to: 0
 29193                           ;led.c: 257: if (*LedOut == 1)
 29194                           
 29195                           ; BSR set to: 0
 29196  00440E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29197  004412  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29198  004416  04DE               	decf	postinc2,w,c
 29199  004418  A4D8               	btfss	status,2,c
 29200  00441A  D006               	goto	l2088
 29201                           
 29202                           ; BSR set to: 0
 29203                           ;led.c: 258: {
 29204                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 29205  00441C  0E00               	movlw	0
 29206  00441E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29207  004420  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29208  004422  EC8C  F02E         	call	_Led_SetLedStatus
 29209                           
 29210                           ;led.c: 261: }
 29211  004426  D02D               	goto	l2085
 29212  004428                     l2088:
 29213                           
 29214                           ;led.c: 262: else
 29215                           ;led.c: 263: {
 29216                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 29217  004428  0E01               	movlw	1
 29218  00442A  0100               	movlb	0	; () banked
 29219  00442C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29220  00442E  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29221  004430  EC8C  F02E         	call	_Led_SetLedStatus
 29222                           
 29223                           ;led.c: 266: }
 29224                           ;led.c: 267: break;
 29225  004434  D026               	goto	l2085
 29226  004436                     
 29227                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29228  004436  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29229  00443A  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29230  00443E  EC7E  F013         	call	_LedBlinkStateMachine	;wreg free
 29231  004442  D008               	goto	L45
 29232  004444                     
 29233                           ; BSR set to: 0
 29234                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29235                           
 29236                           ; BSR set to: 0
 29237  004444  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29238  004448  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29239  00444C  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29240  004450  EC48  F019         	call	_LedPulseStateMachine	;wreg free
 29241  004454                     L45:
 29242  004454  0100               	movlb	0	; () banked
 29243  004456  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29244                           
 29245                           ; BSR set to: 0
 29246                           ;led.c: 281: }
 29247                           
 29248                           ; BSR set to: 0
 29249                           ;led.c: 280: break;
 29250                           
 29251                           ;led.c: 279: default:
 29252                           
 29253                           ;led.c: 277: break;
 29254  004458  D014               	goto	l2085
 29255  00445A                     l2083:
 29256                           
 29257                           ; BSR set to: 0
 29258                           
 29259                           ; BSR set to: 0
 29260  00445A  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29261  00445E  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29262  004462  50DF               	movf	indf2,w,c
 29263                           
 29264                           ; Switch size 1, requested type "space"
 29265                           ; Number of cases is 5, Range of values is 0 to 4
 29266                           ; switch strategies available:
 29267                           ; Name         Instructions Cycles
 29268                           ; simple_byte           16     9 (average)
 29269                           ;	Chosen strategy is simple_byte
 29270  004464  0A00               	xorlw	0	; case 0
 29271  004466  B4D8               	btfsc	status,2,c
 29272  004468  D7C1               	goto	l2084
 29273  00446A  0A01               	xorlw	1	; case 1
 29274  00446C  B4D8               	btfsc	status,2,c
 29275  00446E  D7C6               	goto	l2086
 29276  004470  0A03               	xorlw	3	; case 2
 29277  004472  B4D8               	btfsc	status,2,c
 29278  004474  D7CC               	goto	l2087
 29279  004476  0A01               	xorlw	1	; case 3
 29280  004478  B4D8               	btfsc	status,2,c
 29281  00447A  D7DD               	goto	l2090
 29282  00447C  0A07               	xorlw	7	; case 4
 29283  00447E  B4D8               	btfsc	status,2,c
 29284  004480  D7E1               	goto	l2091
 29285  004482                     l2085:
 29286                           
 29287                           ;led.c: 283: return LedOutSts;
 29288                           
 29289                           ; BSR set to: 0
 29290  004482  0100               	movlb	0	; () banked
 29291  004484  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29292  004486  0012               	return	
 29293  004488                     __end_of_LedStateMachine:
 29294                           	opt stack 0
 29295                           tosu	equ	0xFFF
 29296                           tosh	equ	0xFFE
 29297                           tosl	equ	0xFFD
 29298                           pclath	equ	0xFFA
 29299                           tblptru	equ	0xFF8
 29300                           tblptrh	equ	0xFF7
 29301                           tblptrl	equ	0xFF6
 29302                           tablat	equ	0xFF5
 29303                           prodh	equ	0xFF4
 29304                           prodl	equ	0xFF3
 29305                           intcon	equ	0xFF2
 29306                           intcon2	equ	0xFF1
 29307                           intcon3	equ	0xFF0
 29308                           indf0	equ	0xFEF
 29309                           postinc0	equ	0xFEE
 29310                           plusw0	equ	0xFEB
 29311                           fsr0h	equ	0xFEA
 29312                           fsr0l	equ	0xFE9
 29313                           wreg	equ	0xFE8
 29314                           indf1	equ	0xFE7
 29315                           postinc1	equ	0xFE6
 29316                           postdec1	equ	0xFE5
 29317                           plusw1	equ	0xFE3
 29318                           fsr1h	equ	0xFE2
 29319                           fsr1l	equ	0xFE1
 29320                           indf2	equ	0xFDF
 29321                           postinc2	equ	0xFDE
 29322                           postdec2	equ	0xFDD
 29323                           plusw2	equ	0xFDB
 29324                           fsr2h	equ	0xFDA
 29325                           fsr2l	equ	0xFD9
 29326                           status	equ	0xFD8
 29327                           
 29328 ;; *************** function _LedPulseStateMachine *****************
 29329 ;; Defined at:
 29330 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29331 ;; Parameters:    Size  Location     Type
 29332 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 29333 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29334 ;;  Led             1   44[BANK0 ] unsigned char 
 29335 ;; Auto vars:     Size  Location     Type
 29336 ;;		None
 29337 ;; Return value:  Size  Location     Type
 29338 ;;                  1    wreg      unsigned char 
 29339 ;; Registers used:
 29340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29341 ;; Tracked objects:
 29342 ;;		On entry : 0/0
 29343 ;;		On exit  : 0/0
 29344 ;;		Unchanged: 0/0
 29345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29346 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29349 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29350 ;;Total ram usage:        5 bytes
 29351 ;; Hardware stack levels used:    1
 29352 ;; Hardware stack levels required when called:   12
 29353 ;; This function calls:
 29354 ;;		_Led_SetLedStatus
 29355 ;;		___lwdiv
 29356 ;; This function is called by:
 29357 ;;		_LedStateMachine
 29358 ;; This function uses a non-reentrant model
 29359 ;;
 29360                           
 29361                           	psect	text133
 29362  003290                     __ptext133:
 29363                           	opt stack 0
 29364  003290                     _LedPulseStateMachine:
 29365                           	opt stack 14
 29366                           
 29367                           ;led.c: 185: switch (LedPulse->LedPulseState)
 29368                           
 29369                           ; BSR set to: 0
 29370                           ;incstack = 0
 29371  003290  D05C               	goto	l2073
 29372  003292                     
 29373                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 29374  003292  0100               	movlb	0	; () banked
 29375  003294  EE20 F001          	lfsr	2,1
 29376  003298  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29377  00329A  26D9               	addwf	fsr2l,f,c
 29378  00329C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29379  00329E  22DA               	addwfc	fsr2h,f,c
 29380  0032A0  0E01               	movlw	1
 29381  0032A2  6EDF               	movwf	indf2,c
 29382                           
 29383                           ; BSR set to: 0
 29384                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 29385  0032A4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29386  0032A8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29387  0032AC  0E01               	movlw	1
 29388  0032AE  D036               	goto	L46
 29389  0032B0                     
 29390                           ;led.c: 196: LedPulse->LedPulseCounter++;
 29391                           
 29392                           ; BSR set to: 0
 29393  0032B0  0100               	movlb	0	; () banked
 29394  0032B2  EE20 F002          	lfsr	2,2
 29395  0032B6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29396  0032B8  26D9               	addwf	fsr2l,f,c
 29397  0032BA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29398  0032BC  22DA               	addwfc	fsr2h,f,c
 29399  0032BE  2ADE               	incf	postinc2,f,c
 29400  0032C0  0E00               	movlw	0
 29401  0032C2  22DD               	addwfc	postdec2,f,c
 29402                           
 29403                           ; BSR set to: 0
 29404                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 29405  0032C4  EE20 F004          	lfsr	2,4
 29406  0032C8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29407  0032CA  26D9               	addwf	fsr2l,f,c
 29408  0032CC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29409  0032CE  22DA               	addwfc	fsr2h,f,c
 29410  0032D0  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29411  0032D4  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29412  0032D8  0E00               	movlw	0
 29413  0032DA  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29414  0032DC  0E32               	movlw	50
 29415  0032DE  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29416  0032E0  EC39  F02A         	call	___lwdiv	;wreg free
 29417  0032E4  0100               	movlb	0	; () banked
 29418  0032E6  EE20 F002          	lfsr	2,2
 29419  0032EA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29420  0032EC  26D9               	addwf	fsr2l,f,c
 29421  0032EE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29422  0032F0  22DA               	addwfc	fsr2h,f,c
 29423  0032F2  5183               	movf	?___lwdiv& (0+255),w,b
 29424  0032F4  5CDE               	subwf	postinc2,w,c
 29425  0032F6  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29426  0032F8  58DE               	subwfb	postinc2,w,c
 29427  0032FA  A0D8               	btfss	status,0,c
 29428  0032FC  D034               	goto	l2075
 29429                           
 29430                           ; BSR set to: 0
 29431                           ;led.c: 199: {
 29432                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 29433  0032FE  EE20 F002          	lfsr	2,2
 29434  003302  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29435  003304  26D9               	addwf	fsr2l,f,c
 29436  003306  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29437  003308  22DA               	addwfc	fsr2h,f,c
 29438  00330A  0E00               	movlw	0
 29439  00330C  6EDE               	movwf	postinc2,c
 29440  00330E  0E00               	movlw	0
 29441  003310  6EDD               	movwf	postdec2,c
 29442                           
 29443                           ; BSR set to: 0
 29444                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 29445  003312  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29446  003316  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29447  00331A  0E02               	movlw	2
 29448  00331C                     L46:
 29449  00331C  6EDF               	movwf	indf2,c
 29450                           
 29451                           ; BSR set to: 0
 29452                           ;led.c: 204: }
 29453                           ;led.c: 205: break;
 29454  00331E  D023               	goto	l2075
 29455  003320                     
 29456                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 29457                           
 29458                           ; BSR set to: 0
 29459  003320  0100               	movlb	0	; () banked
 29460  003322  EE20 F001          	lfsr	2,1
 29461  003326  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29462  003328  26D9               	addwf	fsr2l,f,c
 29463  00332A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29464  00332C  22DA               	addwfc	fsr2h,f,c
 29465  00332E  0E00               	movlw	0
 29466  003330  6EDF               	movwf	indf2,c
 29467                           
 29468                           ; BSR set to: 0
 29469                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 29470  003332  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29471  003336  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29472  00333A  0E00               	movlw	0
 29473  00333C  6EDF               	movwf	indf2,c
 29474                           
 29475                           ; BSR set to: 0
 29476                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 29477  00333E  0E00               	movlw	0
 29478  003340  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29479  003342  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 29480  003344  EC8C  F02E         	call	_Led_SetLedStatus
 29481                           
 29482                           ;led.c: 218: }
 29483                           
 29484                           ;led.c: 217: break;
 29485                           
 29486                           ;led.c: 216: default:
 29487                           
 29488                           ;led.c: 214: break;
 29489  003348  D00E               	goto	l2075
 29490  00334A                     l2073:
 29491  00334A  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29492  00334E  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29493  003352  50DF               	movf	indf2,w,c
 29494                           
 29495                           ; Switch size 1, requested type "space"
 29496                           ; Number of cases is 3, Range of values is 0 to 2
 29497                           ; switch strategies available:
 29498                           ; Name         Instructions Cycles
 29499                           ; simple_byte           10     6 (average)
 29500                           ;	Chosen strategy is simple_byte
 29501  003354  0A00               	xorlw	0	; case 0
 29502  003356  B4D8               	btfsc	status,2,c
 29503  003358  D79C               	goto	l2074
 29504  00335A  0A01               	xorlw	1	; case 1
 29505  00335C  B4D8               	btfsc	status,2,c
 29506  00335E  D7A8               	goto	l2076
 29507  003360  0A03               	xorlw	3	; case 2
 29508  003362  B4D8               	btfsc	status,2,c
 29509  003364  D7DD               	goto	l2078
 29510  003366                     l2075:
 29511                           
 29512                           ;led.c: 221: return (LedPulse->LedOutState);
 29513  003366  0100               	movlb	0	; () banked
 29514  003368  EE20 F001          	lfsr	2,1
 29515  00336C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29516  00336E  26D9               	addwf	fsr2l,f,c
 29517  003370  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29518  003372  22DA               	addwfc	fsr2h,f,c
 29519  003374  50DF               	movf	indf2,w,c
 29520  003376  0012               	return	
 29521  003378                     __end_of_LedPulseStateMachine:
 29522                           	opt stack 0
 29523                           tosu	equ	0xFFF
 29524                           tosh	equ	0xFFE
 29525                           tosl	equ	0xFFD
 29526                           pclath	equ	0xFFA
 29527                           tblptru	equ	0xFF8
 29528                           tblptrh	equ	0xFF7
 29529                           tblptrl	equ	0xFF6
 29530                           tablat	equ	0xFF5
 29531                           prodh	equ	0xFF4
 29532                           prodl	equ	0xFF3
 29533                           intcon	equ	0xFF2
 29534                           intcon2	equ	0xFF1
 29535                           intcon3	equ	0xFF0
 29536                           indf0	equ	0xFEF
 29537                           postinc0	equ	0xFEE
 29538                           plusw0	equ	0xFEB
 29539                           fsr0h	equ	0xFEA
 29540                           fsr0l	equ	0xFE9
 29541                           wreg	equ	0xFE8
 29542                           indf1	equ	0xFE7
 29543                           postinc1	equ	0xFE6
 29544                           postdec1	equ	0xFE5
 29545                           plusw1	equ	0xFE3
 29546                           fsr1h	equ	0xFE2
 29547                           fsr1l	equ	0xFE1
 29548                           indf2	equ	0xFDF
 29549                           postinc2	equ	0xFDE
 29550                           postdec2	equ	0xFDD
 29551                           plusw2	equ	0xFDB
 29552                           fsr2h	equ	0xFDA
 29553                           fsr2l	equ	0xFD9
 29554                           status	equ	0xFD8
 29555                           
 29556 ;; *************** function _Led_SetLedStatus *****************
 29557 ;; Defined at:
 29558 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29559 ;; Parameters:    Size  Location     Type
 29560 ;;  Led             1    wreg     unsigned char 
 29561 ;;  LedSts          1   29[BANK0 ] enum E8937
 29562 ;; Auto vars:     Size  Location     Type
 29563 ;;  Led             1   30[BANK0 ] unsigned char 
 29564 ;; Return value:  Size  Location     Type
 29565 ;;                  1    wreg      void 
 29566 ;; Registers used:
 29567 ;;		wreg, status,2, status,0
 29568 ;; Tracked objects:
 29569 ;;		On entry : 0/0
 29570 ;;		On exit  : 0/0
 29571 ;;		Unchanged: 0/0
 29572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29573 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29577 ;;Total ram usage:        2 bytes
 29578 ;; Hardware stack levels used:    1
 29579 ;; Hardware stack levels required when called:   11
 29580 ;; This function calls:
 29581 ;;		Nothing
 29582 ;; This function is called by:
 29583 ;;		_LedPulseStateMachine
 29584 ;;		_LedStateMachine
 29585 ;;		_initGprsModem
 29586 ;;		_blinkForSeconds
 29587 ;; This function uses a non-reentrant model
 29588 ;;
 29589                           
 29590                           	psect	text134
 29591  005D18                     __ptext134:
 29592                           	opt stack 0
 29593  005D18                     _Led_SetLedStatus:
 29594                           	opt stack 15
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;incstack = 0
 29598                           ;Led_SetLedStatus@Led stored from wreg
 29599  005D18  0100               	movlb	0	; () banked
 29600  005D1A  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29601                           
 29602                           ;led.c: 341: switch (Led)
 29603  005D1C  D009               	goto	l2104
 29604  005D1E                     l2105:
 29605                           
 29606                           ; BSR set to: 0
 29607                           ;led.c: 344: Led1Sts = LedSts;
 29608  005D1E  C07D  F1FC         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29609                           
 29610                           ;led.c: 345: break;
 29611  005D22  0012               	return	
 29612  005D24                     l2107:
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;led.c: 348: Led2Sts = LedSts;
 29616  005D24  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29617                           
 29618                           ;led.c: 349: break;
 29619  005D28  0012               	return	
 29620  005D2A                     l2108:
 29621                           
 29622                           ; BSR set to: 0
 29623                           ;led.c: 352: Led3Sts = LedSts;
 29624  005D2A  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29625                           
 29626                           ; BSR set to: 0
 29627                           ;led.c: 357: }
 29628                           
 29629                           ; BSR set to: 0
 29630                           ;led.c: 356: break;
 29631                           
 29632                           ;led.c: 355: default:
 29633                           
 29634                           ;led.c: 353: break;
 29635  005D2E  0012               	return	
 29636  005D30                     l2104:
 29637                           
 29638                           ; BSR set to: 0
 29639  005D30  0100               	movlb	0	; () banked
 29640  005D32  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29641                           
 29642                           ; Switch size 1, requested type "space"
 29643                           ; Number of cases is 3, Range of values is 1 to 3
 29644                           ; switch strategies available:
 29645                           ; Name         Instructions Cycles
 29646                           ; simple_byte           10     6 (average)
 29647                           ;	Chosen strategy is simple_byte
 29648  005D34  0A01               	xorlw	1	; case 1
 29649  005D36  B4D8               	btfsc	status,2,c
 29650  005D38  D7F2               	goto	l2105
 29651  005D3A  0A03               	xorlw	3	; case 2
 29652  005D3C  B4D8               	btfsc	status,2,c
 29653  005D3E  D7F2               	goto	l2107
 29654  005D40  0A01               	xorlw	1	; case 3
 29655  005D42  A4D8               	btfss	status,2,c
 29656  005D44  0012               	return	
 29657  005D46  D7F1               	goto	l2108
 29658  005D48                     __end_of_Led_SetLedStatus:
 29659                           	opt stack 0
 29660                           tosu	equ	0xFFF
 29661                           tosh	equ	0xFFE
 29662                           tosl	equ	0xFFD
 29663                           pclath	equ	0xFFA
 29664                           tblptru	equ	0xFF8
 29665                           tblptrh	equ	0xFF7
 29666                           tblptrl	equ	0xFF6
 29667                           tablat	equ	0xFF5
 29668                           prodh	equ	0xFF4
 29669                           prodl	equ	0xFF3
 29670                           intcon	equ	0xFF2
 29671                           intcon2	equ	0xFF1
 29672                           intcon3	equ	0xFF0
 29673                           indf0	equ	0xFEF
 29674                           postinc0	equ	0xFEE
 29675                           plusw0	equ	0xFEB
 29676                           fsr0h	equ	0xFEA
 29677                           fsr0l	equ	0xFE9
 29678                           wreg	equ	0xFE8
 29679                           indf1	equ	0xFE7
 29680                           postinc1	equ	0xFE6
 29681                           postdec1	equ	0xFE5
 29682                           plusw1	equ	0xFE3
 29683                           fsr1h	equ	0xFE2
 29684                           fsr1l	equ	0xFE1
 29685                           indf2	equ	0xFDF
 29686                           postinc2	equ	0xFDE
 29687                           postdec2	equ	0xFDD
 29688                           plusw2	equ	0xFDB
 29689                           fsr2h	equ	0xFDA
 29690                           fsr2l	equ	0xFD9
 29691                           status	equ	0xFD8
 29692                           
 29693 ;; *************** function _LedBlinkStateMachine *****************
 29694 ;; Defined at:
 29695 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29696 ;; Parameters:    Size  Location     Type
 29697 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29698 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29699 ;; Auto vars:     Size  Location     Type
 29700 ;;		None
 29701 ;; Return value:  Size  Location     Type
 29702 ;;                  1    wreg      unsigned char 
 29703 ;; Registers used:
 29704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29705 ;; Tracked objects:
 29706 ;;		On entry : 0/0
 29707 ;;		On exit  : 0/0
 29708 ;;		Unchanged: 0/0
 29709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29710 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29713 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29714 ;;Total ram usage:        4 bytes
 29715 ;; Hardware stack levels used:    1
 29716 ;; Hardware stack levels required when called:   12
 29717 ;; This function calls:
 29718 ;;		___lwdiv
 29719 ;; This function is called by:
 29720 ;;		_LedStateMachine
 29721 ;; This function uses a non-reentrant model
 29722 ;;
 29723                           
 29724                           	psect	text135
 29725  0026FC                     __ptext135:
 29726                           	opt stack 0
 29727  0026FC                     _LedBlinkStateMachine:
 29728                           	opt stack 14
 29729                           
 29730                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 29731                           
 29732                           ; BSR set to: 0
 29733                           ;incstack = 0
 29734  0026FC  D08F               	goto	l2060
 29735  0026FE                     
 29736                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 29737  0026FE  0100               	movlb	0	; () banked
 29738  002700  EE20 F008          	lfsr	2,8
 29739  002704  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29740  002706  26D9               	addwf	fsr2l,f,c
 29741  002708  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29742  00270A  22DA               	addwfc	fsr2h,f,c
 29743  00270C  EE10 F001          	lfsr	1,1
 29744  002710  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29745  002712  26E1               	addwf	fsr1l,f,c
 29746  002714  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29747  002716  22E2               	addwfc	fsr1h,f,c
 29748  002718  CFDF FFE7          	movff	indf2,indf1
 29749                           
 29750                           ; BSR set to: 0
 29751                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 29752  00271C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29753  002720  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29754  002724  D040               	goto	L47
 29755  002726                     
 29756                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 29757                           
 29758                           ; BSR set to: 0
 29759  002726  0100               	movlb	0	; () banked
 29760  002728  EE20 F002          	lfsr	2,2
 29761  00272C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29762  00272E  26D9               	addwf	fsr2l,f,c
 29763  002730  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29764  002732  22DA               	addwfc	fsr2h,f,c
 29765  002734  2ADE               	incf	postinc2,f,c
 29766  002736  0E00               	movlw	0
 29767  002738  22DD               	addwfc	postdec2,f,c
 29768                           
 29769                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 29770  00273A  EE20 F001          	lfsr	2,1
 29771  00273E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29772  002740  26D9               	addwf	fsr2l,f,c
 29773  002742  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29774  002744  22DA               	addwfc	fsr2h,f,c
 29775  002746  50DF               	movf	indf2,w,c
 29776  002748  A4D8               	btfss	status,2,c
 29777  00274A  D02F               	goto	l2064
 29778                           
 29779                           ; BSR set to: 0
 29780                           ;led.c: 142: {
 29781                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 29782  00274C  EE20 F006          	lfsr	2,6
 29783  002750  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29784  002752  26D9               	addwf	fsr2l,f,c
 29785  002754  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29786  002756  22DA               	addwfc	fsr2h,f,c
 29787  002758  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29788  00275C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29789  002760  0E00               	movlw	0
 29790  002762  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29791  002764  0E32               	movlw	50
 29792  002766  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29793  002768  EC39  F02A         	call	___lwdiv	;wreg free
 29794  00276C  0100               	movlb	0	; () banked
 29795  00276E  EE20 F002          	lfsr	2,2
 29796  002772  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29797  002774  26D9               	addwf	fsr2l,f,c
 29798  002776  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29799  002778  22DA               	addwfc	fsr2h,f,c
 29800  00277A  5183               	movf	?___lwdiv& (0+255),w,b
 29801  00277C  5CDE               	subwf	postinc2,w,c
 29802  00277E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29803  002780  58DE               	subwfb	postinc2,w,c
 29804  002782  A0D8               	btfss	status,0,c
 29805  002784  D056               	goto	l2062
 29806                           
 29807                           ; BSR set to: 0
 29808                           ;led.c: 145: {
 29809                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 29810  002786  EE20 F002          	lfsr	2,2
 29811  00278A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29812  00278C  26D9               	addwf	fsr2l,f,c
 29813  00278E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29814  002790  22DA               	addwfc	fsr2h,f,c
 29815  002792  0E00               	movlw	0
 29816  002794  6EDE               	movwf	postinc2,c
 29817  002796  0E00               	movlw	0
 29818  002798  6EDD               	movwf	postdec2,c
 29819                           
 29820                           ;led.c: 149: LedBlink->LedOutState = OnState;
 29821  00279A  EE20 F001          	lfsr	2,1
 29822  00279E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29823  0027A0  26D9               	addwf	fsr2l,f,c
 29824  0027A2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29825  0027A4  22DA               	addwfc	fsr2h,f,c
 29826  0027A6                     L47:
 29827  0027A6  0E01               	movlw	1
 29828  0027A8  D037               	goto	L48
 29829  0027AA                     l2064:
 29830                           
 29831                           ; BSR set to: 0
 29832                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 29833                           
 29834                           ; BSR set to: 0
 29835  0027AA  EE20 F001          	lfsr	2,1
 29836  0027AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29837  0027B0  26D9               	addwf	fsr2l,f,c
 29838  0027B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29839  0027B4  22DA               	addwfc	fsr2h,f,c
 29840  0027B6  04DE               	decf	postinc2,w,c
 29841  0027B8  A4D8               	btfss	status,2,c
 29842  0027BA  D03B               	goto	l2062
 29843                           
 29844                           ; BSR set to: 0
 29845                           ;led.c: 153: {
 29846                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 29847  0027BC  EE20 F004          	lfsr	2,4
 29848  0027C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29849  0027C2  26D9               	addwf	fsr2l,f,c
 29850  0027C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29851  0027C6  22DA               	addwfc	fsr2h,f,c
 29852  0027C8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29853  0027CC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29854  0027D0  0E00               	movlw	0
 29855  0027D2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29856  0027D4  0E32               	movlw	50
 29857  0027D6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29858  0027D8  EC39  F02A         	call	___lwdiv	;wreg free
 29859  0027DC  0100               	movlb	0	; () banked
 29860  0027DE  EE20 F002          	lfsr	2,2
 29861  0027E2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29862  0027E4  26D9               	addwf	fsr2l,f,c
 29863  0027E6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29864  0027E8  22DA               	addwfc	fsr2h,f,c
 29865  0027EA  5183               	movf	?___lwdiv& (0+255),w,b
 29866  0027EC  5CDE               	subwf	postinc2,w,c
 29867  0027EE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29868  0027F0  58DE               	subwfb	postinc2,w,c
 29869  0027F2  A0D8               	btfss	status,0,c
 29870  0027F4  D01E               	goto	l2062
 29871                           
 29872                           ; BSR set to: 0
 29873                           ;led.c: 156: {
 29874                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 29875  0027F6  EE20 F002          	lfsr	2,2
 29876  0027FA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29877  0027FC  26D9               	addwf	fsr2l,f,c
 29878  0027FE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29879  002800  22DA               	addwfc	fsr2h,f,c
 29880  002802  0E00               	movlw	0
 29881  002804  6EDE               	movwf	postinc2,c
 29882  002806  0E00               	movlw	0
 29883  002808  6EDD               	movwf	postdec2,c
 29884                           
 29885                           ;led.c: 160: LedBlink->LedOutState = OffState;
 29886  00280A  EE20 F001          	lfsr	2,1
 29887  00280E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29888  002810  26D9               	addwf	fsr2l,f,c
 29889  002812  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29890  002814  22DA               	addwfc	fsr2h,f,c
 29891  002816  0E00               	movlw	0
 29892  002818                     L48:
 29893  002818  6EDF               	movwf	indf2,c
 29894                           
 29895                           ; BSR set to: 0
 29896                           ;led.c: 167: }
 29897                           
 29898                           ; BSR set to: 0
 29899                           ;led.c: 166: break;
 29900                           
 29901                           ;led.c: 165: default:
 29902                           
 29903                           ; BSR set to: 0
 29904                           ;led.c: 161: }
 29905                           ;led.c: 162: }
 29906                           ;led.c: 163: break;
 29907                           
 29908                           ; BSR set to: 0
 29909                           
 29910                           ; BSR set to: 0
 29911  00281A  D00B               	goto	l2062
 29912  00281C                     l2060:
 29913                           
 29914                           ; BSR set to: 0
 29915  00281C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29916  002820  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29917  002824  50DF               	movf	indf2,w,c
 29918                           
 29919                           ; Switch size 1, requested type "space"
 29920                           ; Number of cases is 2, Range of values is 0 to 1
 29921                           ; switch strategies available:
 29922                           ; Name         Instructions Cycles
 29923                           ; simple_byte            7     4 (average)
 29924                           ;	Chosen strategy is simple_byte
 29925  002826  0A00               	xorlw	0	; case 0
 29926  002828  B4D8               	btfsc	status,2,c
 29927  00282A  D769               	goto	l2061
 29928  00282C  0A01               	xorlw	1	; case 1
 29929  00282E  B4D8               	btfsc	status,2,c
 29930  002830  D77A               	goto	l2063
 29931  002832                     l2062:
 29932                           
 29933                           ;led.c: 170: return (LedBlink->LedOutState);
 29934  002832  0100               	movlb	0	; () banked
 29935  002834  EE20 F001          	lfsr	2,1
 29936  002838  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29937  00283A  26D9               	addwf	fsr2l,f,c
 29938  00283C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29939  00283E  22DA               	addwfc	fsr2h,f,c
 29940  002840  50DF               	movf	indf2,w,c
 29941  002842  0012               	return	
 29942  002844                     __end_of_LedBlinkStateMachine:
 29943                           	opt stack 0
 29944                           tosu	equ	0xFFF
 29945                           tosh	equ	0xFFE
 29946                           tosl	equ	0xFFD
 29947                           pclath	equ	0xFFA
 29948                           tblptru	equ	0xFF8
 29949                           tblptrh	equ	0xFF7
 29950                           tblptrl	equ	0xFF6
 29951                           tablat	equ	0xFF5
 29952                           prodh	equ	0xFF4
 29953                           prodl	equ	0xFF3
 29954                           intcon	equ	0xFF2
 29955                           intcon2	equ	0xFF1
 29956                           intcon3	equ	0xFF0
 29957                           indf0	equ	0xFEF
 29958                           postinc0	equ	0xFEE
 29959                           plusw0	equ	0xFEB
 29960                           fsr0h	equ	0xFEA
 29961                           fsr0l	equ	0xFE9
 29962                           wreg	equ	0xFE8
 29963                           indf1	equ	0xFE7
 29964                           postinc1	equ	0xFE6
 29965                           postdec1	equ	0xFE5
 29966                           plusw1	equ	0xFE3
 29967                           fsr1h	equ	0xFE2
 29968                           fsr1l	equ	0xFE1
 29969                           indf2	equ	0xFDF
 29970                           postinc2	equ	0xFDE
 29971                           postdec2	equ	0xFDD
 29972                           plusw2	equ	0xFDB
 29973                           fsr2h	equ	0xFDA
 29974                           fsr2l	equ	0xFD9
 29975                           status	equ	0xFD8
 29976                           
 29977 ;; *************** function ___lwdiv *****************
 29978 ;; Defined at:
 29979 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 29980 ;; Parameters:    Size  Location     Type
 29981 ;;  dividend        2   35[BANK0 ] unsigned int 
 29982 ;;  divisor         2   37[BANK0 ] unsigned int 
 29983 ;; Auto vars:     Size  Location     Type
 29984 ;;  quotient        2   40[BANK0 ] unsigned int 
 29985 ;;  counter         1   39[BANK0 ] unsigned char 
 29986 ;; Return value:  Size  Location     Type
 29987 ;;                  2   35[BANK0 ] unsigned int 
 29988 ;; Registers used:
 29989 ;;		wreg, status,2, status,0
 29990 ;; Tracked objects:
 29991 ;;		On entry : 0/0
 29992 ;;		On exit  : 0/0
 29993 ;;		Unchanged: 0/0
 29994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29996 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29998 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29999 ;;Total ram usage:        7 bytes
 30000 ;; Hardware stack levels used:    1
 30001 ;; Hardware stack levels required when called:   11
 30002 ;; This function calls:
 30003 ;;		Nothing
 30004 ;; This function is called by:
 30005 ;;		_LedBlinkStateMachine
 30006 ;;		_LedPulseStateMachine
 30007 ;;		_secondsAppTimer
 30008 ;;		_utoa
 30009 ;; This function uses a non-reentrant model
 30010 ;;
 30011                           
 30012                           	psect	text136
 30013  005472                     __ptext136:
 30014                           	opt stack 0
 30015  005472                     ___lwdiv:
 30016                           	opt stack 14
 30017                           
 30018                           ; BSR set to: 0
 30019                           ;incstack = 0
 30020  005472  0E00               	movlw	0
 30021  005474  0100               	movlb	0	; () banked
 30022  005476  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30023  005478  0E00               	movlw	0
 30024  00547A  6F88               	movwf	___lwdiv@quotient& (0+255),b
 30025                           
 30026                           ; BSR set to: 0
 30027  00547C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30028  00547E  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30029  005480  B4D8               	btfsc	status,2,c
 30030  005482  D01C               	goto	l3053
 30031                           
 30032                           ; BSR set to: 0
 30033  005484  0E01               	movlw	1
 30034  005486  6F87               	movwf	___lwdiv@counter& (0+255),b
 30035  005488  D004               	goto	l3048
 30036  00548A                     
 30037                           ; BSR set to: 0
 30038                           
 30039                           ; BSR set to: 0
 30040  00548A  90D8               	bcf	status,0,c
 30041  00548C  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 30042  00548E  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30043  005490  2B87               	incf	___lwdiv@counter& (0+255),f,b
 30044  005492                     l3048:
 30045                           
 30046                           ; BSR set to: 0
 30047                           
 30048                           ; BSR set to: 0
 30049  005492  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30050  005494  D7FA               	goto	l3049
 30051  005496                     u10810:
 30052                           
 30053                           ; BSR set to: 0
 30054                           
 30055                           ; BSR set to: 0
 30056                           
 30057                           ; BSR set to: 0
 30058  005496  90D8               	bcf	status,0,c
 30059  005498  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 30060  00549A  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30061                           
 30062                           ; BSR set to: 0
 30063  00549C  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30064  00549E  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 30065  0054A0  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30066  0054A2  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30067  0054A4  A0D8               	btfss	status,0,c
 30068  0054A6  D005               	goto	l3052
 30069                           
 30070                           ; BSR set to: 0
 30071  0054A8  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30072  0054AA  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 30073  0054AC  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30074  0054AE  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30075                           
 30076                           ; BSR set to: 0
 30077  0054B0  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 30078  0054B2                     l3052:
 30079                           
 30080                           ; BSR set to: 0
 30081                           
 30082                           ; BSR set to: 0
 30083  0054B2  90D8               	bcf	status,0,c
 30084  0054B4  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30085  0054B6  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 30086                           
 30087                           ; BSR set to: 0
 30088  0054B8  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 30089  0054BA  D7ED               	goto	u10810
 30090  0054BC                     l3053:
 30091                           
 30092                           ; BSR set to: 0
 30093                           
 30094                           ; BSR set to: 0
 30095  0054BC  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 30096  0054C0  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30097                           
 30098                           ; BSR set to: 0
 30099  0054C4  0012               	return		;funcret
 30100  0054C6                     __end_of___lwdiv:
 30101                           	opt stack 0
 30102                           tosu	equ	0xFFF
 30103                           tosh	equ	0xFFE
 30104                           tosl	equ	0xFFD
 30105                           pclath	equ	0xFFA
 30106                           tblptru	equ	0xFF8
 30107                           tblptrh	equ	0xFF7
 30108                           tblptrl	equ	0xFF6
 30109                           tablat	equ	0xFF5
 30110                           prodh	equ	0xFF4
 30111                           prodl	equ	0xFF3
 30112                           intcon	equ	0xFF2
 30113                           intcon2	equ	0xFF1
 30114                           intcon3	equ	0xFF0
 30115                           indf0	equ	0xFEF
 30116                           postinc0	equ	0xFEE
 30117                           plusw0	equ	0xFEB
 30118                           fsr0h	equ	0xFEA
 30119                           fsr0l	equ	0xFE9
 30120                           wreg	equ	0xFE8
 30121                           indf1	equ	0xFE7
 30122                           postinc1	equ	0xFE6
 30123                           postdec1	equ	0xFE5
 30124                           plusw1	equ	0xFE3
 30125                           fsr1h	equ	0xFE2
 30126                           fsr1l	equ	0xFE1
 30127                           indf2	equ	0xFDF
 30128                           postinc2	equ	0xFDE
 30129                           postdec2	equ	0xFDD
 30130                           plusw2	equ	0xFDB
 30131                           fsr2h	equ	0xFDA
 30132                           fsr2l	equ	0xFD9
 30133                           status	equ	0xFD8
 30134                           
 30135 ;; *************** function _OsAlrm_SetOsAlarm *****************
 30136 ;; Defined at:
 30137 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 30138 ;; Parameters:    Size  Location     Type
 30139 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 30140 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 30141 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 30142 ;;		 -> I2cDummyTx(1), 
 30143 ;; Auto vars:     Size  Location     Type
 30144 ;;		None
 30145 ;; Return value:  Size  Location     Type
 30146 ;;                  1    wreg      void 
 30147 ;; Registers used:
 30148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30149 ;; Tracked objects:
 30150 ;;		On entry : 0/0
 30151 ;;		On exit  : 0/0
 30152 ;;		Unchanged: 0/0
 30153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30154 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30157 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30158 ;;Total ram usage:        8 bytes
 30159 ;; Hardware stack levels used:    1
 30160 ;; Hardware stack levels required when called:   12
 30161 ;; This function calls:
 30162 ;;		___wmul
 30163 ;; This function is called by:
 30164 ;;		_I2cSlv_MainTask
 30165 ;; This function uses a non-reentrant model
 30166 ;;
 30167                           
 30168                           	psect	text137
 30169  003D74                     __ptext137:
 30170                           	opt stack 0
 30171  003D74                     _OsAlrm_SetOsAlarm:
 30172                           	opt stack 15
 30173                           
 30174                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 30175                           
 30176                           ; BSR set to: 0
 30177                           ;incstack = 0
 30178  003D74  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30179  003D78  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30180  003D7C  0E00               	movlw	0
 30181  003D7E  0100               	movlb	0	; () banked
 30182  003D80  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30183  003D82  0E0B               	movlw	11
 30184  003D84  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30185  003D86  EC12  F02F         	call	___wmul	;wreg free
 30186  003D8A  0E00               	movlw	low _OsAlarms
 30187  003D8C  0100               	movlb	0	; () banked
 30188  003D8E  257D               	addwf	?___wmul& (0+255),w,b
 30189  003D90  6ED9               	movwf	fsr2l,c
 30190  003D92  0E06               	movlw	high _OsAlarms
 30191  003D94  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30192  003D96  6EDA               	movwf	fsr2h,c
 30193  003D98  0E01               	movlw	1
 30194  003D9A  6EDF               	movwf	indf2,c
 30195                           
 30196                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 30197  003D9C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30198  003DA0  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30199  003DA4  0E00               	movlw	0
 30200  003DA6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30201  003DA8  0E0B               	movlw	11
 30202  003DAA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30203  003DAC  EC12  F02F         	call	___wmul	;wreg free
 30204  003DB0  0E01               	movlw	1
 30205  003DB2  0100               	movlb	0	; () banked
 30206  003DB4  277D               	addwf	?___wmul& (0+255),f,b
 30207  003DB6  0E00               	movlw	0
 30208  003DB8  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30209  003DBA  0E00               	movlw	low _OsAlarms
 30210  003DBC  257D               	addwf	?___wmul& (0+255),w,b
 30211  003DBE  6ED9               	movwf	fsr2l,c
 30212  003DC0  0E06               	movlw	high _OsAlarms
 30213  003DC2  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30214  003DC4  6EDA               	movwf	fsr2h,c
 30215  003DC6  6ADE               	clrf	postinc2,c
 30216  003DC8  6ADE               	clrf	postinc2,c
 30217  003DCA  6ADE               	clrf	postinc2,c
 30218  003DCC  6ADD               	clrf	postdec2,c
 30219                           
 30220                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 30221  003DCE  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30222  003DD2  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30223  003DD6  0E00               	movlw	0
 30224  003DD8  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30225  003DDA  0E0B               	movlw	11
 30226  003DDC  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30227  003DDE  EC12  F02F         	call	___wmul	;wreg free
 30228  003DE2  0E05               	movlw	5
 30229  003DE4  0100               	movlb	0	; () banked
 30230  003DE6  277D               	addwf	?___wmul& (0+255),f,b
 30231  003DE8  0E00               	movlw	0
 30232  003DEA  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30233  003DEC  0E00               	movlw	low _OsAlarms
 30234  003DEE  257D               	addwf	?___wmul& (0+255),w,b
 30235  003DF0  6ED9               	movwf	fsr2l,c
 30236  003DF2  0E06               	movlw	high _OsAlarms
 30237  003DF4  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30238  003DF6  6EDA               	movwf	fsr2h,c
 30239  003DF8  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30240  003DFC  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30241  003E00  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30242  003E04  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30243                           
 30244                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30245  003E08  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30246  003E0C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30247  003E10  0E00               	movlw	0
 30248  003E12  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30249  003E14  0E0B               	movlw	11
 30250  003E16  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30251  003E18  EC12  F02F         	call	___wmul	;wreg free
 30252  003E1C  0E09               	movlw	9
 30253  003E1E  0100               	movlb	0	; () banked
 30254  003E20  277D               	addwf	?___wmul& (0+255),f,b
 30255  003E22  0E00               	movlw	0
 30256  003E24  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30257  003E26  0E00               	movlw	low _OsAlarms
 30258  003E28  257D               	addwf	?___wmul& (0+255),w,b
 30259  003E2A  6ED9               	movwf	fsr2l,c
 30260  003E2C  0E06               	movlw	high _OsAlarms
 30261  003E2E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30262  003E30  6EDA               	movwf	fsr2h,c
 30263  003E32  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30264  003E36  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30265                           
 30266                           ; BSR set to: 0
 30267  003E3A  0012               	return		;funcret
 30268  003E3C                     __end_of_OsAlrm_SetOsAlarm:
 30269                           	opt stack 0
 30270                           tosu	equ	0xFFF
 30271                           tosh	equ	0xFFE
 30272                           tosl	equ	0xFFD
 30273                           pclath	equ	0xFFA
 30274                           tblptru	equ	0xFF8
 30275                           tblptrh	equ	0xFF7
 30276                           tblptrl	equ	0xFF6
 30277                           tablat	equ	0xFF5
 30278                           prodh	equ	0xFF4
 30279                           prodl	equ	0xFF3
 30280                           intcon	equ	0xFF2
 30281                           intcon2	equ	0xFF1
 30282                           intcon3	equ	0xFF0
 30283                           indf0	equ	0xFEF
 30284                           postinc0	equ	0xFEE
 30285                           plusw0	equ	0xFEB
 30286                           fsr0h	equ	0xFEA
 30287                           fsr0l	equ	0xFE9
 30288                           wreg	equ	0xFE8
 30289                           indf1	equ	0xFE7
 30290                           postinc1	equ	0xFE6
 30291                           postdec1	equ	0xFE5
 30292                           plusw1	equ	0xFE3
 30293                           fsr1h	equ	0xFE2
 30294                           fsr1l	equ	0xFE1
 30295                           indf2	equ	0xFDF
 30296                           postinc2	equ	0xFDE
 30297                           postdec2	equ	0xFDD
 30298                           plusw2	equ	0xFDB
 30299                           fsr2h	equ	0xFDA
 30300                           fsr2l	equ	0xFD9
 30301                           status	equ	0xFD8
 30302                           
 30303 ;; *************** function ___wmul *****************
 30304 ;; Defined at:
 30305 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 30306 ;; Parameters:    Size  Location     Type
 30307 ;;  multiplier      2   29[BANK0 ] unsigned int 
 30308 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 30309 ;; Auto vars:     Size  Location     Type
 30310 ;;  product         2   33[BANK0 ] unsigned int 
 30311 ;; Return value:  Size  Location     Type
 30312 ;;                  2   29[BANK0 ] unsigned int 
 30313 ;; Registers used:
 30314 ;;		wreg, status,2, status,0, prodl, prodh
 30315 ;; Tracked objects:
 30316 ;;		On entry : 0/0
 30317 ;;		On exit  : 0/0
 30318 ;;		Unchanged: 0/0
 30319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30321 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30323 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30324 ;;Total ram usage:        6 bytes
 30325 ;; Hardware stack levels used:    1
 30326 ;; Hardware stack levels required when called:   11
 30327 ;; This function calls:
 30328 ;;		Nothing
 30329 ;; This function is called by:
 30330 ;;		_OsAlrm_SetOsAlarm
 30331 ;;		_secondsAppTimer
 30332 ;;		_atoi
 30333 ;; This function uses a non-reentrant model
 30334 ;;
 30335                           
 30336                           	psect	text138
 30337  005E24                     __ptext138:
 30338                           	opt stack 0
 30339  005E24                     ___wmul:
 30340                           	opt stack 13
 30341                           
 30342                           ; BSR set to: 0
 30343                           ;incstack = 0
 30344  005E24  0100               	movlb	0	; () banked
 30345  005E26  517D               	movf	___wmul@multiplier& (0+255),w,b
 30346  005E28  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30347  005E2A  CFF3 F081          	movff	prodl,___wmul@product
 30348  005E2E  CFF4 F082          	movff	prodh,___wmul@product+1
 30349  005E32  517D               	movf	___wmul@multiplier& (0+255),w,b
 30350  005E34  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30351  005E36  50F3               	movf	prodl,w,c
 30352  005E38  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30353  005E3A  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30354  005E3C  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30355  005E3E  50F3               	movf	prodl,w,c
 30356  005E40  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30357                           
 30358                           ; BSR set to: 0
 30359  005E42  C081  F07D         	movff	___wmul@product,?___wmul
 30360  005E46  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 30361  005E4A  0012               	return	
 30362  005E4C                     __end_of___wmul:
 30363                           	opt stack 0
 30364                           tosu	equ	0xFFF
 30365                           tosh	equ	0xFFE
 30366                           tosl	equ	0xFFD
 30367                           pclath	equ	0xFFA
 30368                           tblptru	equ	0xFF8
 30369                           tblptrh	equ	0xFF7
 30370                           tblptrl	equ	0xFF6
 30371                           tablat	equ	0xFF5
 30372                           prodh	equ	0xFF4
 30373                           prodl	equ	0xFF3
 30374                           intcon	equ	0xFF2
 30375                           intcon2	equ	0xFF1
 30376                           intcon3	equ	0xFF0
 30377                           indf0	equ	0xFEF
 30378                           postinc0	equ	0xFEE
 30379                           plusw0	equ	0xFEB
 30380                           fsr0h	equ	0xFEA
 30381                           fsr0l	equ	0xFE9
 30382                           wreg	equ	0xFE8
 30383                           indf1	equ	0xFE7
 30384                           postinc1	equ	0xFE6
 30385                           postdec1	equ	0xFE5
 30386                           plusw1	equ	0xFE3
 30387                           fsr1h	equ	0xFE2
 30388                           fsr1l	equ	0xFE1
 30389                           indf2	equ	0xFDF
 30390                           postinc2	equ	0xFDE
 30391                           postdec2	equ	0xFDD
 30392                           plusw2	equ	0xFDB
 30393                           fsr2h	equ	0xFDA
 30394                           fsr2l	equ	0xFD9
 30395                           status	equ	0xFD8
 30396                           
 30397 ;; *************** function _I2c_InitI2cModule *****************
 30398 ;; Defined at:
 30399 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30400 ;; Parameters:    Size  Location     Type
 30401 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 30402 ;;		 -> I2cConfig(10), 
 30403 ;; Auto vars:     Size  Location     Type
 30404 ;;		None
 30405 ;; Return value:  Size  Location     Type
 30406 ;;                  1    wreg      void 
 30407 ;; Registers used:
 30408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30409 ;; Tracked objects:
 30410 ;;		On entry : 0/0
 30411 ;;		On exit  : 0/0
 30412 ;;		Unchanged: 0/0
 30413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30416 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30417 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30418 ;;Total ram usage:        4 bytes
 30419 ;; Hardware stack levels used:    1
 30420 ;; Hardware stack levels required when called:   13
 30421 ;; This function calls:
 30422 ;;		_SetBaudRate
 30423 ;; This function is called by:
 30424 ;;		_I2cSlv_MainTask
 30425 ;; This function uses a non-reentrant model
 30426 ;;
 30427                           
 30428                           	psect	text139
 30429  004E86                     __ptext139:
 30430                           	opt stack 0
 30431  004E86                     _I2c_InitI2cModule:
 30432                           	opt stack 14
 30433                           
 30434                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 30435                           
 30436                           ; BSR set to: 0
 30437                           ;incstack = 0
 30438  004E86  8295               	bsf	3989,1,c	;volatile
 30439                           
 30440                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 30441  004E88  8095               	bsf	3989,0,c	;volatile
 30442                           
 30443                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 30444  004E8A  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 30445  004E8E  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 30446  004E92  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 30447  004E96  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 30448  004E9A  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 30449  004E9E  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 30450  004EA2  0100               	movlb	0	; () banked
 30451  004EA4  EE20 F004          	lfsr	2,4
 30452  004EA8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30453  004EAA  26D9               	addwf	fsr2l,f,c
 30454  004EAC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30455  004EAE  22DA               	addwfc	fsr2h,f,c
 30456  004EB0  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 30457  004EB4  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 30458  004EB8  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 30459  004EBC  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 30460  004EC0  EC2B  F02B         	call	_SetBaudRate	;wreg free
 30461                           
 30462                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 30463  004EC4  0100               	movlb	0	; () banked
 30464  004EC6  EE20 F008          	lfsr	2,8
 30465  004ECA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30466  004ECC  26D9               	addwf	fsr2l,f,c
 30467  004ECE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30468  004ED0  22DA               	addwfc	fsr2h,f,c
 30469  004ED2  50DF               	movf	indf2,w,c
 30470  004ED4  1272               	iorwf	3954,f,c	;volatile
 30471                           
 30472                           ; BSR set to: 0
 30473                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 30474  004ED6  EE20 F009          	lfsr	2,9
 30475  004EDA  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30476  004EDC  26D9               	addwf	fsr2l,f,c
 30477  004EDE  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30478  004EE0  22DA               	addwfc	fsr2h,f,c
 30479  004EE2  50DF               	movf	indf2,w,c
 30480  004EE4  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 30481  004EE6  0E05               	movlw	5
 30482  004EE8  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 30483  004EEA                     u13105:
 30484  004EEA  90D8               	bcf	status,0,c
 30485  004EEC  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 30486  004EEE  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 30487  004EF0  D7FC               	goto	u13105
 30488  004EF2  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 30489  004EF4  1272               	iorwf	3954,f,c	;volatile
 30490                           
 30491                           ; BSR set to: 0
 30492  004EF6  0012               	return		;funcret
 30493  004EF8                     __end_of_I2c_InitI2cModule:
 30494                           	opt stack 0
 30495                           tosu	equ	0xFFF
 30496                           tosh	equ	0xFFE
 30497                           tosl	equ	0xFFD
 30498                           pclath	equ	0xFFA
 30499                           tblptru	equ	0xFF8
 30500                           tblptrh	equ	0xFF7
 30501                           tblptrl	equ	0xFF6
 30502                           tablat	equ	0xFF5
 30503                           prodh	equ	0xFF4
 30504                           prodl	equ	0xFF3
 30505                           intcon	equ	0xFF2
 30506                           intcon2	equ	0xFF1
 30507                           intcon3	equ	0xFF0
 30508                           indf0	equ	0xFEF
 30509                           postinc0	equ	0xFEE
 30510                           plusw0	equ	0xFEB
 30511                           fsr0h	equ	0xFEA
 30512                           fsr0l	equ	0xFE9
 30513                           wreg	equ	0xFE8
 30514                           indf1	equ	0xFE7
 30515                           postinc1	equ	0xFE6
 30516                           postdec1	equ	0xFE5
 30517                           plusw1	equ	0xFE3
 30518                           fsr1h	equ	0xFE2
 30519                           fsr1l	equ	0xFE1
 30520                           indf2	equ	0xFDF
 30521                           postinc2	equ	0xFDE
 30522                           postdec2	equ	0xFDD
 30523                           plusw2	equ	0xFDB
 30524                           fsr2h	equ	0xFDA
 30525                           fsr2l	equ	0xFD9
 30526                           status	equ	0xFD8
 30527                           
 30528 ;; *************** function _SetBaudRate *****************
 30529 ;; Defined at:
 30530 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30531 ;; Parameters:    Size  Location     Type
 30532 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 30533 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 30534 ;; Auto vars:     Size  Location     Type
 30535 ;;		None
 30536 ;; Return value:  Size  Location     Type
 30537 ;;                  1    wreg      void 
 30538 ;; Registers used:
 30539 ;;		wreg, status,2, status,0, cstack
 30540 ;; Tracked objects:
 30541 ;;		On entry : 0/0
 30542 ;;		On exit  : 0/0
 30543 ;;		Unchanged: 0/0
 30544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30545 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30547 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30548 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30549 ;;Total ram usage:       12 bytes
 30550 ;; Hardware stack levels used:    1
 30551 ;; Hardware stack levels required when called:   12
 30552 ;; This function calls:
 30553 ;;		___lldiv
 30554 ;; This function is called by:
 30555 ;;		_I2c_InitI2cModule
 30556 ;; This function uses a non-reentrant model
 30557 ;;
 30558                           
 30559                           	psect	text140
 30560  005656                     __ptext140:
 30561                           	opt stack 0
 30562  005656                     _SetBaudRate:
 30563                           	opt stack 14
 30564                           
 30565                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 30566                           
 30567                           ; BSR set to: 0
 30568                           ;incstack = 0
 30569  005656  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 30570  00565A  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 30571  00565E  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30572  005662  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30573  005666  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30574  00566A  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30575  00566E  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30576  005672  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30577  005676  0E02               	movlw	2
 30578  005678                     u12085:
 30579  005678  90D8               	bcf	status,0,c
 30580  00567A  0100               	movlb	0	; () banked
 30581  00567C  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30582  00567E  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30583  005680  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30584  005682  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30585  005684  2EE8               	decfsz	wreg,f,c
 30586  005686  D7F8               	goto	u12085
 30587  005688  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30588  00568C  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30589  005690  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30590  005694  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30591  005698  EC11  F026         	call	___lldiv	;wreg free
 30592  00569C  0100               	movlb	0	; () banked
 30593  00569E  0589               	decf	?___lldiv& (0+255),w,b
 30594  0056A0  6E74               	movwf	3956,c	;volatile
 30595                           
 30596                           ; BSR set to: 0
 30597  0056A2  0012               	return		;funcret
 30598  0056A4                     __end_of_SetBaudRate:
 30599                           	opt stack 0
 30600                           tosu	equ	0xFFF
 30601                           tosh	equ	0xFFE
 30602                           tosl	equ	0xFFD
 30603                           pclath	equ	0xFFA
 30604                           tblptru	equ	0xFF8
 30605                           tblptrh	equ	0xFF7
 30606                           tblptrl	equ	0xFF6
 30607                           tablat	equ	0xFF5
 30608                           prodh	equ	0xFF4
 30609                           prodl	equ	0xFF3
 30610                           intcon	equ	0xFF2
 30611                           intcon2	equ	0xFF1
 30612                           intcon3	equ	0xFF0
 30613                           indf0	equ	0xFEF
 30614                           postinc0	equ	0xFEE
 30615                           plusw0	equ	0xFEB
 30616                           fsr0h	equ	0xFEA
 30617                           fsr0l	equ	0xFE9
 30618                           wreg	equ	0xFE8
 30619                           indf1	equ	0xFE7
 30620                           postinc1	equ	0xFE6
 30621                           postdec1	equ	0xFE5
 30622                           plusw1	equ	0xFE3
 30623                           fsr1h	equ	0xFE2
 30624                           fsr1l	equ	0xFE1
 30625                           indf2	equ	0xFDF
 30626                           postinc2	equ	0xFDE
 30627                           postdec2	equ	0xFDD
 30628                           plusw2	equ	0xFDB
 30629                           fsr2h	equ	0xFDA
 30630                           fsr2l	equ	0xFD9
 30631                           status	equ	0xFD8
 30632                           
 30633 ;; *************** function ___lldiv *****************
 30634 ;; Defined at:
 30635 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30636 ;; Parameters:    Size  Location     Type
 30637 ;;  dividend        4   41[BANK0 ] unsigned long 
 30638 ;;  divisor         4   45[BANK0 ] unsigned long 
 30639 ;; Auto vars:     Size  Location     Type
 30640 ;;  quotient        4   49[BANK0 ] unsigned long 
 30641 ;;  counter         1   53[BANK0 ] unsigned char 
 30642 ;; Return value:  Size  Location     Type
 30643 ;;                  4   41[BANK0 ] unsigned long 
 30644 ;; Registers used:
 30645 ;;		wreg, status,2, status,0
 30646 ;; Tracked objects:
 30647 ;;		On entry : 0/0
 30648 ;;		On exit  : 0/0
 30649 ;;		Unchanged: 0/0
 30650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30651 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30652 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30654 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30655 ;;Total ram usage:       13 bytes
 30656 ;; Hardware stack levels used:    1
 30657 ;; Hardware stack levels required when called:   11
 30658 ;; This function calls:
 30659 ;;		Nothing
 30660 ;; This function is called by:
 30661 ;;		_SetBaudRate
 30662 ;;		_Tmr_TmrBPrSet
 30663 ;;		_SetUartBaudRate
 30664 ;; This function uses a non-reentrant model
 30665 ;;
 30666                           
 30667                           	psect	text141
 30668  004C22                     __ptext141:
 30669                           	opt stack 0
 30670  004C22                     ___lldiv:
 30671                           	opt stack 15
 30672                           
 30673                           ; BSR set to: 0
 30674                           ;incstack = 0
 30675  004C22  0E00               	movlw	0
 30676  004C24  0100               	movlb	0	; () banked
 30677  004C26  6F91               	movwf	___lldiv@quotient& (0+255),b
 30678  004C28  0E00               	movlw	0
 30679  004C2A  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30680  004C2C  0E00               	movlw	0
 30681  004C2E  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30682  004C30  0E00               	movlw	0
 30683  004C32  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30684                           
 30685                           ; BSR set to: 0
 30686  004C34  518D               	movf	___lldiv@divisor& (0+255),w,b
 30687  004C36  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30688  004C38  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30689  004C3A  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30690  004C3C  B4D8               	btfsc	status,2,c
 30691  004C3E  D02A               	goto	l3000
 30692                           
 30693                           ; BSR set to: 0
 30694  004C40  0E01               	movlw	1
 30695  004C42  6F95               	movwf	___lldiv@counter& (0+255),b
 30696  004C44  D006               	goto	l2995
 30697  004C46                     
 30698                           ; BSR set to: 0
 30699                           
 30700                           ; BSR set to: 0
 30701  004C46  90D8               	bcf	status,0,c
 30702  004C48  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30703  004C4A  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30704  004C4C  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30705  004C4E  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30706  004C50  2B95               	incf	___lldiv@counter& (0+255),f,b
 30707  004C52                     l2995:
 30708                           
 30709                           ; BSR set to: 0
 30710                           
 30711                           ; BSR set to: 0
 30712  004C52  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30713  004C54  D7F8               	goto	l2996
 30714  004C56                     u11180:
 30715                           
 30716                           ; BSR set to: 0
 30717                           
 30718                           ; BSR set to: 0
 30719                           
 30720                           ; BSR set to: 0
 30721  004C56  90D8               	bcf	status,0,c
 30722  004C58  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30723  004C5A  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30724  004C5C  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30725  004C5E  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30726                           
 30727                           ; BSR set to: 0
 30728  004C60  518D               	movf	___lldiv@divisor& (0+255),w,b
 30729  004C62  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 30730  004C64  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30731  004C66  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30732  004C68  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30733  004C6A  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30734  004C6C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30735  004C6E  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30736  004C70  A0D8               	btfss	status,0,c
 30737  004C72  D009               	goto	l2999
 30738                           
 30739                           ; BSR set to: 0
 30740  004C74  518D               	movf	___lldiv@divisor& (0+255),w,b
 30741  004C76  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 30742  004C78  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30743  004C7A  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30744  004C7C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30745  004C7E  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30746  004C80  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30747  004C82  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30748                           
 30749                           ; BSR set to: 0
 30750  004C84  8191               	bsf	___lldiv@quotient& (0+255),0,b
 30751  004C86                     l2999:
 30752                           
 30753                           ; BSR set to: 0
 30754                           
 30755                           ; BSR set to: 0
 30756  004C86  90D8               	bcf	status,0,c
 30757  004C88  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30758  004C8A  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30759  004C8C  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30760  004C8E  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 30761                           
 30762                           ; BSR set to: 0
 30763  004C90  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 30764  004C92  D7E1               	goto	u11180
 30765  004C94                     l3000:
 30766                           
 30767                           ; BSR set to: 0
 30768                           
 30769                           ; BSR set to: 0
 30770  004C94  C091  F089         	movff	___lldiv@quotient,?___lldiv
 30771  004C98  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 30772  004C9C  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 30773  004CA0  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 30774                           
 30775                           ; BSR set to: 0
 30776  004CA4  0012               	return		;funcret
 30777  004CA6                     __end_of___lldiv:
 30778                           	opt stack 0
 30779                           tosu	equ	0xFFF
 30780                           tosh	equ	0xFFE
 30781                           tosl	equ	0xFFD
 30782                           pclath	equ	0xFFA
 30783                           tblptru	equ	0xFF8
 30784                           tblptrh	equ	0xFF7
 30785                           tblptrl	equ	0xFF6
 30786                           tablat	equ	0xFF5
 30787                           prodh	equ	0xFF4
 30788                           prodl	equ	0xFF3
 30789                           intcon	equ	0xFF2
 30790                           intcon2	equ	0xFF1
 30791                           intcon3	equ	0xFF0
 30792                           indf0	equ	0xFEF
 30793                           postinc0	equ	0xFEE
 30794                           plusw0	equ	0xFEB
 30795                           fsr0h	equ	0xFEA
 30796                           fsr0l	equ	0xFE9
 30797                           wreg	equ	0xFE8
 30798                           indf1	equ	0xFE7
 30799                           postinc1	equ	0xFE6
 30800                           postdec1	equ	0xFE5
 30801                           plusw1	equ	0xFE3
 30802                           fsr1h	equ	0xFE2
 30803                           fsr1l	equ	0xFE1
 30804                           indf2	equ	0xFDF
 30805                           postinc2	equ	0xFDE
 30806                           postdec2	equ	0xFDD
 30807                           plusw2	equ	0xFDB
 30808                           fsr2h	equ	0xFDA
 30809                           fsr2l	equ	0xFD9
 30810                           status	equ	0xFD8
 30811                           
 30812 ;; *************** function _I2cSetConfig *****************
 30813 ;; Defined at:
 30814 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30815 ;; Parameters:    Size  Location     Type
 30816 ;;		None
 30817 ;; Auto vars:     Size  Location     Type
 30818 ;;		None
 30819 ;; Return value:  Size  Location     Type
 30820 ;;                  1    wreg      void 
 30821 ;; Registers used:
 30822 ;;		wreg, status,2
 30823 ;; Tracked objects:
 30824 ;;		On entry : 0/0
 30825 ;;		On exit  : 0/0
 30826 ;;		Unchanged: 0/0
 30827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30832 ;;Total ram usage:        0 bytes
 30833 ;; Hardware stack levels used:    1
 30834 ;; Hardware stack levels required when called:   11
 30835 ;; This function calls:
 30836 ;;		Nothing
 30837 ;; This function is called by:
 30838 ;;		_I2cSlv_MainTask
 30839 ;; This function uses a non-reentrant model
 30840 ;;
 30841                           
 30842                           	psect	text142
 30843  005DA4                     __ptext142:
 30844                           	opt stack 0
 30845  005DA4                     _I2cSetConfig:
 30846                           	opt stack 16
 30847                           
 30848                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 30849                           
 30850                           ; BSR set to: 0
 30851                           ;incstack = 0
 30852  005DA4  0E80               	movlw	128
 30853  005DA6  0103               	movlb	3	; () banked
 30854  005DA8  6F56               	movwf	_I2cConfig& (0+255),b
 30855  005DAA  0E1A               	movlw	26
 30856  005DAC  6F57               	movwf	(_I2cConfig+1)& (0+255),b
 30857  005DAE  0E06               	movlw	6
 30858  005DB0  6F58               	movwf	(_I2cConfig+2)& (0+255),b
 30859  005DB2  0E00               	movlw	0
 30860  005DB4  6F59               	movwf	(_I2cConfig+3)& (0+255),b
 30861                           
 30862                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 30863  005DB6  0E00               	movlw	0
 30864  005DB8  6F5A               	movwf	(_I2cConfig+4)& (0+255),b
 30865  005DBA  0E6C               	movlw	108
 30866  005DBC  6F5B               	movwf	(_I2cConfig+5)& (0+255),b
 30867  005DBE  0EDC               	movlw	220
 30868  005DC0  6F5C               	movwf	(_I2cConfig+6)& (0+255),b
 30869  005DC2  0E02               	movlw	2
 30870  005DC4  6F5D               	movwf	(_I2cConfig+7)& (0+255),b
 30871                           
 30872                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 30873  005DC6  0E08               	movlw	8
 30874  005DC8  6F5E               	movwf	(_I2cConfig+8)& (0+255),b
 30875                           
 30876                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 30877  005DCA  0E01               	movlw	1
 30878  005DCC  6F5F               	movwf	(_I2cConfig+9)& (0+255),b
 30879                           
 30880                           ; BSR set to: 3
 30881  005DCE  0012               	return		;funcret
 30882  005DD0                     __end_of_I2cSetConfig:
 30883                           	opt stack 0
 30884                           tosu	equ	0xFFF
 30885                           tosh	equ	0xFFE
 30886                           tosl	equ	0xFFD
 30887                           pclath	equ	0xFFA
 30888                           tblptru	equ	0xFF8
 30889                           tblptrh	equ	0xFF7
 30890                           tblptrl	equ	0xFF6
 30891                           tablat	equ	0xFF5
 30892                           prodh	equ	0xFF4
 30893                           prodl	equ	0xFF3
 30894                           intcon	equ	0xFF2
 30895                           intcon2	equ	0xFF1
 30896                           intcon3	equ	0xFF0
 30897                           indf0	equ	0xFEF
 30898                           postinc0	equ	0xFEE
 30899                           plusw0	equ	0xFEB
 30900                           fsr0h	equ	0xFEA
 30901                           fsr0l	equ	0xFE9
 30902                           wreg	equ	0xFE8
 30903                           indf1	equ	0xFE7
 30904                           postinc1	equ	0xFE6
 30905                           postdec1	equ	0xFE5
 30906                           plusw1	equ	0xFE3
 30907                           fsr1h	equ	0xFE2
 30908                           fsr1l	equ	0xFE1
 30909                           indf2	equ	0xFDF
 30910                           postinc2	equ	0xFDE
 30911                           postdec2	equ	0xFDD
 30912                           plusw2	equ	0xFDB
 30913                           fsr2h	equ	0xFDA
 30914                           fsr2l	equ	0xFD9
 30915                           status	equ	0xFD8
 30916                           
 30917 ;; *************** function _I2cSendMsgSm *****************
 30918 ;; Defined at:
 30919 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 30920 ;; Parameters:    Size  Location     Type
 30921 ;;		None
 30922 ;; Auto vars:     Size  Location     Type
 30923 ;;		None
 30924 ;; Return value:  Size  Location     Type
 30925 ;;                  1    wreg      void 
 30926 ;; Registers used:
 30927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30928 ;; Tracked objects:
 30929 ;;		On entry : 0/0
 30930 ;;		On exit  : 0/0
 30931 ;;		Unchanged: 0/0
 30932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30937 ;;Total ram usage:        0 bytes
 30938 ;; Hardware stack levels used:    1
 30939 ;; Hardware stack levels required when called:   13
 30940 ;; This function calls:
 30941 ;;		_I2c_ReadData
 30942 ;;		_I2c_WriteData
 30943 ;;		_ReceiveEvt
 30944 ;; This function is called by:
 30945 ;;		_I2cSlv_MainTask
 30946 ;; This function uses a non-reentrant model
 30947 ;;
 30948                           
 30949                           	psect	text143
 30950  003E3C                     __ptext143:
 30951                           	opt stack 0
 30952  003E3C                     _I2cSendMsgSm:
 30953                           	opt stack 14
 30954                           
 30955                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 30956                           ;i2c_slv.c: 122: switch(I2cComState)
 30957                           
 30958                           ; BSR set to: 3
 30959                           ;incstack = 0
 30960  003E3C  D04F               	goto	l1379
 30961  003E3E                     
 30962                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 30963  003E3E  0ED9               	movlw	low _I2cWriteDataEvt
 30964  003E40  0100               	movlb	0	; () banked
 30965  003E42  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30966  003E44  0E00               	movlw	high _I2cWriteDataEvt
 30967  003E46  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30968  003E48  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 30969  003E4C  0900               	iorlw	0
 30970  003E4E  B4D8               	btfsc	status,2,c
 30971  003E50  D007               	goto	l1381
 30972                           
 30973                           ;i2c_slv.c: 127: {
 30974                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 30975  003E52  0E01               	movlw	1
 30976  003E54  0101               	movlb	1	; () banked
 30977  003E56  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 30978                           
 30979                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 30980  003E58  0E01               	movlw	1
 30981  003E5A  0100               	movlb	0	; () banked
 30982  003E5C  6FD1               	movwf	_I2cComSts& (0+255),b
 30983                           
 30984                           ;i2c_slv.c: 132: }
 30985  003E5E  0012               	return	
 30986  003E60                     l1381:
 30987                           
 30988                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 30989                           
 30990                           ; BSR set to: 0
 30991  003E60  0E39               	movlw	low _I2cReadDataEvt
 30992  003E62  0100               	movlb	0	; () banked
 30993  003E64  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30994  003E66  0E00               	movlw	high _I2cReadDataEvt
 30995  003E68  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30996  003E6A  ECBB  F02E         	call	_ReceiveEvt	;wreg free
 30997  003E6E  0900               	iorlw	0
 30998  003E70  B4D8               	btfsc	status,2,c
 30999  003E72  D007               	goto	l1383
 31000                           
 31001                           ;i2c_slv.c: 134: {
 31002                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 31003  003E74  0E02               	movlw	2
 31004  003E76  0101               	movlb	1	; () banked
 31005  003E78  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31006                           
 31007                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 31008  003E7A  0E02               	movlw	2
 31009  003E7C  0100               	movlb	0	; () banked
 31010  003E7E  6FD1               	movwf	_I2cComSts& (0+255),b
 31011                           
 31012                           ;i2c_slv.c: 139: }
 31013  003E80  0012               	return	
 31014  003E82                     l1383:
 31015                           
 31016                           ;i2c_slv.c: 140: else
 31017                           ;i2c_slv.c: 141: {
 31018                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 31019                           
 31020                           ; BSR set to: 0
 31021  003E82  0E00               	movlw	0
 31022  003E84  0100               	movlb	0	; () banked
 31023  003E86  6FD1               	movwf	_I2cComSts& (0+255),b
 31024                           
 31025                           ; BSR set to: 0
 31026                           ;i2c_slv.c: 144: }
 31027                           ;i2c_slv.c: 145: break;
 31028                           
 31029                           ; BSR set to: 0
 31030  003E88  0012               	return	
 31031  003E8A                     
 31032                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 31033                           
 31034                           ; BSR set to: 0
 31035  003E8A  0EA2               	movlw	low _I2cTxPacket
 31036  003E8C  0100               	movlb	0	; () banked
 31037  003E8E  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 31038  003E90  0E03               	movlw	high _I2cTxPacket
 31039  003E92  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 31040  003E94  EC14  F010         	call	_I2c_WriteData	;wreg free
 31041  003E98  0900               	iorlw	0
 31042  003E9A  B4D8               	btfsc	status,2,c
 31043  003E9C  0012               	return	
 31044                           
 31045                           ;i2c_slv.c: 150: {
 31046                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 31047  003E9E  0E03               	movlw	3
 31048  003EA0  0101               	movlb	1	; () banked
 31049  003EA2  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31050                           
 31051                           ; BSR set to: 1
 31052                           ;i2c_slv.c: 153: }
 31053                           ;i2c_slv.c: 154: break;
 31054  003EA4  0012               	return	
 31055  003EA6                     
 31056                           ; BSR set to: 1
 31057                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 31058                           
 31059                           ; BSR set to: 1
 31060  003EA6  0E9C               	movlw	low _I2cRxPacket
 31061  003EA8  0100               	movlb	0	; () banked
 31062  003EAA  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 31063  003EAC  0E03               	movlw	high _I2cRxPacket
 31064  003EAE  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 31065  003EB0  EC7B  F011         	call	_I2c_ReadData	;wreg free
 31066  003EB4  0900               	iorlw	0
 31067  003EB6  B4D8               	btfsc	status,2,c
 31068  003EB8  0012               	return	
 31069                           
 31070                           ;i2c_slv.c: 159: {
 31071                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 31072  003EBA  0E04               	movlw	4
 31073  003EBC  0101               	movlb	1	; () banked
 31074  003EBE  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31075                           
 31076                           ; BSR set to: 1
 31077                           ;i2c_slv.c: 162: }
 31078                           ;i2c_slv.c: 164: break;
 31079  003EC0  0012               	return	
 31080  003EC2                     
 31081                           ; BSR set to: 1
 31082                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 31083                           
 31084                           ; BSR set to: 1
 31085  003EC2  0E00               	movlw	0
 31086  003EC4  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31087                           
 31088                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 31089  003EC6  0E00               	movlw	0
 31090  003EC8  0100               	movlb	0	; () banked
 31091  003ECA  6FD1               	movwf	_I2cComSts& (0+255),b
 31092                           
 31093                           ;i2c_slv.c: 171: break;
 31094  003ECC  0012               	return	
 31095  003ECE                     
 31096                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 31097                           
 31098                           ; BSR set to: 0
 31099  003ECE  0E00               	movlw	0
 31100  003ED0  0101               	movlb	1	; () banked
 31101  003ED2  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31102                           
 31103                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 31104  003ED4  0E00               	movlw	0
 31105  003ED6  0100               	movlb	0	; () banked
 31106  003ED8  6FD1               	movwf	_I2cComSts& (0+255),b
 31107                           
 31108                           ; BSR set to: 0
 31109                           ;i2c_slv.c: 182: }
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;i2c_slv.c: 181: break;
 31113                           
 31114                           ;i2c_slv.c: 180: default:
 31115                           
 31116                           ;i2c_slv.c: 178: break;
 31117  003EDA  0012               	return	
 31118  003EDC                     l1379:
 31119                           
 31120                           ; BSR set to: 0
 31121  003EDC  0101               	movlb	1	; () banked
 31122  003EDE  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 31123                           
 31124                           ; Switch size 1, requested type "space"
 31125                           ; Number of cases is 5, Range of values is 0 to 4
 31126                           ; switch strategies available:
 31127                           ; Name         Instructions Cycles
 31128                           ; simple_byte           16     9 (average)
 31129                           ;	Chosen strategy is simple_byte
 31130  003EE0  0A00               	xorlw	0	; case 0
 31131  003EE2  B4D8               	btfsc	status,2,c
 31132  003EE4  D7AC               	goto	l1380
 31133  003EE6  0A01               	xorlw	1	; case 1
 31134  003EE8  B4D8               	btfsc	status,2,c
 31135  003EEA  D7CF               	goto	l1386
 31136  003EEC  0A03               	xorlw	3	; case 2
 31137  003EEE  B4D8               	btfsc	status,2,c
 31138  003EF0  D7DA               	goto	l1388
 31139  003EF2  0A01               	xorlw	1	; case 3
 31140  003EF4  B4D8               	btfsc	status,2,c
 31141  003EF6  D7E5               	goto	l1390
 31142  003EF8  0A07               	xorlw	7	; case 4
 31143  003EFA  A4D8               	btfss	status,2,c
 31144  003EFC  0012               	return	
 31145  003EFE  D7E7               	goto	l1391
 31146  003F00                     __end_of_I2cSendMsgSm:
 31147                           	opt stack 0
 31148                           tosu	equ	0xFFF
 31149                           tosh	equ	0xFFE
 31150                           tosl	equ	0xFFD
 31151                           pclath	equ	0xFFA
 31152                           tblptru	equ	0xFF8
 31153                           tblptrh	equ	0xFF7
 31154                           tblptrl	equ	0xFF6
 31155                           tablat	equ	0xFF5
 31156                           prodh	equ	0xFF4
 31157                           prodl	equ	0xFF3
 31158                           intcon	equ	0xFF2
 31159                           intcon2	equ	0xFF1
 31160                           intcon3	equ	0xFF0
 31161                           indf0	equ	0xFEF
 31162                           postinc0	equ	0xFEE
 31163                           plusw0	equ	0xFEB
 31164                           fsr0h	equ	0xFEA
 31165                           fsr0l	equ	0xFE9
 31166                           wreg	equ	0xFE8
 31167                           indf1	equ	0xFE7
 31168                           postinc1	equ	0xFE6
 31169                           postdec1	equ	0xFE5
 31170                           plusw1	equ	0xFE3
 31171                           fsr1h	equ	0xFE2
 31172                           fsr1l	equ	0xFE1
 31173                           indf2	equ	0xFDF
 31174                           postinc2	equ	0xFDE
 31175                           postdec2	equ	0xFDD
 31176                           plusw2	equ	0xFDB
 31177                           fsr2h	equ	0xFDA
 31178                           fsr2l	equ	0xFD9
 31179                           status	equ	0xFD8
 31180                           
 31181 ;; *************** function _ReceiveEvt *****************
 31182 ;; Defined at:
 31183 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31184 ;; Parameters:    Size  Location     Type
 31185 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31186 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 31187 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 31188 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 31189 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 31190 ;;		 -> ActivateRiDetection(1), 
 31191 ;; Auto vars:     Size  Location     Type
 31192 ;;  EventStatus     1   32[BANK0 ] enum E7727
 31193 ;; Return value:  Size  Location     Type
 31194 ;;                  1    wreg      enum E7699
 31195 ;; Registers used:
 31196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31197 ;; Tracked objects:
 31198 ;;		On entry : 0/0
 31199 ;;		On exit  : 0/0
 31200 ;;		Unchanged: 0/0
 31201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31205 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31206 ;;Total ram usage:        4 bytes
 31207 ;; Hardware stack levels used:    1
 31208 ;; Hardware stack levels required when called:   11
 31209 ;; This function calls:
 31210 ;;		Nothing
 31211 ;; This function is called by:
 31212 ;;		_MdmCntSm
 31213 ;;		_CheckModem
 31214 ;;		_ModemEvtParser
 31215 ;;		_GetSmsSm
 31216 ;;		_SendSmsSm
 31217 ;;		_Mdm_GetSmsData
 31218 ;;		_Mdm_IsSmsReceived
 31219 ;;		_Mdm_IsRinging
 31220 ;;		_GetCallerNumber
 31221 ;;		_InitGprsNetwork
 31222 ;;		_HttpGetMethod
 31223 ;;		_I2cSendMsgSm
 31224 ;;		_I2cSlv_I2cReadMsgSts
 31225 ;;		_RiSm
 31226 ;;		_GsmGprsTerminal
 31227 ;; This function uses a non-reentrant model
 31228 ;;
 31229                           
 31230                           	psect	text144
 31231  005D76                     __ptext144:
 31232                           	opt stack 0
 31233  005D76                     _ReceiveEvt:
 31234                           	opt stack 13
 31235                           
 31236                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31237                           
 31238                           ;incstack = 0
 31239  005D76  0E00               	movlw	0
 31240  005D78  0100               	movlb	0	; () banked
 31241  005D7A  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31242                           
 31243                           ; BSR set to: 0
 31244                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31245  005D7C  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31246  005D80  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31247  005D84  0E02               	movlw	2
 31248  005D86  18DE               	xorwf	postinc2,w,c
 31249  005D88  A4D8               	btfss	status,2,c
 31250  005D8A  D008               	goto	l832
 31251                           
 31252                           ; BSR set to: 0
 31253                           ;os_ser.c: 106: {
 31254                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31255  005D8C  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31256  005D90  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31257  005D94  0E01               	movlw	1
 31258  005D96  6EDF               	movwf	indf2,c
 31259                           
 31260                           ; BSR set to: 0
 31261                           ;os_ser.c: 110: EventStatus = EventReceived;
 31262  005D98  0E01               	movlw	1
 31263  005D9A  D001               	goto	L49
 31264  005D9C                     l832:
 31265                           
 31266                           ; BSR set to: 0
 31267                           ;os_ser.c: 112: else
 31268                           ;os_ser.c: 113: {
 31269                           ;os_ser.c: 115: EventStatus = EventIdle;
 31270                           
 31271                           ; BSR set to: 0
 31272  005D9C  0E00               	movlw	0
 31273  005D9E                     L49:
 31274  005D9E  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31275                           
 31276                           ; BSR set to: 0
 31277                           ;os_ser.c: 116: }
 31278                           ;os_ser.c: 119: return(EventStatus);
 31279  005DA0  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31280  005DA2  0012               	return	
 31281  005DA4                     __end_of_ReceiveEvt:
 31282                           	opt stack 0
 31283                           tosu	equ	0xFFF
 31284                           tosh	equ	0xFFE
 31285                           tosl	equ	0xFFD
 31286                           pclath	equ	0xFFA
 31287                           tblptru	equ	0xFF8
 31288                           tblptrh	equ	0xFF7
 31289                           tblptrl	equ	0xFF6
 31290                           tablat	equ	0xFF5
 31291                           prodh	equ	0xFF4
 31292                           prodl	equ	0xFF3
 31293                           intcon	equ	0xFF2
 31294                           intcon2	equ	0xFF1
 31295                           intcon3	equ	0xFF0
 31296                           indf0	equ	0xFEF
 31297                           postinc0	equ	0xFEE
 31298                           plusw0	equ	0xFEB
 31299                           fsr0h	equ	0xFEA
 31300                           fsr0l	equ	0xFE9
 31301                           wreg	equ	0xFE8
 31302                           indf1	equ	0xFE7
 31303                           postinc1	equ	0xFE6
 31304                           postdec1	equ	0xFE5
 31305                           plusw1	equ	0xFE3
 31306                           fsr1h	equ	0xFE2
 31307                           fsr1l	equ	0xFE1
 31308                           indf2	equ	0xFDF
 31309                           postinc2	equ	0xFDE
 31310                           postdec2	equ	0xFDD
 31311                           plusw2	equ	0xFDB
 31312                           fsr2h	equ	0xFDA
 31313                           fsr2l	equ	0xFD9
 31314                           status	equ	0xFD8
 31315                           
 31316 ;; *************** function _I2c_WriteData *****************
 31317 ;; Defined at:
 31318 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31319 ;; Parameters:    Size  Location     Type
 31320 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 31321 ;;		 -> I2cTxPacket(5), 
 31322 ;; Auto vars:     Size  Location     Type
 31323 ;;		None
 31324 ;; Return value:  Size  Location     Type
 31325 ;;                  1    wreg      enum E7740
 31326 ;; Registers used:
 31327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31328 ;; Tracked objects:
 31329 ;;		On entry : 0/0
 31330 ;;		On exit  : 0/0
 31331 ;;		Unchanged: 0/0
 31332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31335 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31336 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31337 ;;Total ram usage:        4 bytes
 31338 ;; Hardware stack levels used:    1
 31339 ;; Hardware stack levels required when called:   12
 31340 ;; This function calls:
 31341 ;;		_CheckAckStatus
 31342 ;;		_CheckTxStatus
 31343 ;;		_StartCondition
 31344 ;;		_StopCondition
 31345 ;;		_WriteByte
 31346 ;; This function is called by:
 31347 ;;		_I2cSendMsgSm
 31348 ;; This function uses a non-reentrant model
 31349 ;;
 31350                           
 31351                           	psect	text145
 31352  002028                     __ptext145:
 31353                           	opt stack 0
 31354  002028                     _I2c_WriteData:
 31355                           	opt stack 14
 31356                           
 31357                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 31358                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 31359                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 31360                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 31361                           ;i2c_drv.c: 260: switch (I2cWriteState)
 31362                           
 31363                           ; BSR set to: 0
 31364                           ;incstack = 0
 31365  002028  D095               	goto	l160
 31366  00202A                     
 31367                           ;i2c_drv.c: 264: StartCondition();
 31368  00202A  EC36  F031         	call	_StartCondition	;wreg free
 31369                           
 31370                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 31371  00202E  0E00               	movlw	0
 31372  002030  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31373                           
 31374                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 31375  002032  0E01               	movlw	1
 31376  002034  D084               	goto	L56
 31377  002036                     
 31378                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 31379  002036  0100               	movlb	0	; () banked
 31380  002038  EE20 F001          	lfsr	2,1
 31381  00203C  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31382  00203E  26D9               	addwf	fsr2l,f,c
 31383  002040  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31384  002042  22DA               	addwfc	fsr2h,f,c
 31385  002044  50DF               	movf	indf2,w,c
 31386  002046  6F80               	movwf	??_I2c_WriteData& (0+255),b
 31387  002048  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31388  00204C  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31389  002050  50DF               	movf	indf2,w,c
 31390  002052  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 31391  002054  90D8               	bcf	status,0,c
 31392  002056  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 31393  002058  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 31394  00205A  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31395  00205E  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31396  002062  6EDF               	movwf	indf2,c
 31397                           
 31398                           ; BSR set to: 0
 31399                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 31400  002064  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31401  002068  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31402  00206C  50DF               	movf	indf2,w,c
 31403  00206E  EC14  F031         	call	_WriteByte
 31404                           
 31405                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 31406  002072  0E02               	movlw	2
 31407  002074  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31408  002076                     
 31409                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 31410  002076  EC1E  F031         	call	_CheckTxStatus	;wreg free
 31411  00207A  0900               	iorlw	0
 31412  00207C  A4D8               	btfss	status,2,c
 31413  00207E  D089               	goto	l162
 31414                           
 31415                           ;i2c_drv.c: 282: {
 31416                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 31417  002080  0E03               	movlw	3
 31418  002082  D01A               	goto	L58
 31419  002084                     
 31420                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 31421  002084  0100               	movlb	0	; () banked
 31422  002086  EE20 F002          	lfsr	2,2
 31423  00208A  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31424  00208C  26D9               	addwf	fsr2l,f,c
 31425  00208E  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31426  002090  22DA               	addwfc	fsr2h,f,c
 31427  002092  CFDE F080          	movff	postinc2,??_I2c_WriteData
 31428  002096  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 31429  00209A  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 31430  00209E  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 31431  0020A2  50DF               	movf	indf2,w,c
 31432  0020A4  EC14  F031         	call	_WriteByte
 31433                           
 31434                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 31435  0020A8  0E04               	movlw	4
 31436  0020AA  D049               	goto	L56
 31437  0020AC                     
 31438                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 31439  0020AC  EC1E  F031         	call	_CheckTxStatus	;wreg free
 31440  0020B0  0900               	iorlw	0
 31441  0020B2  A4D8               	btfss	status,2,c
 31442  0020B4  D06E               	goto	l162
 31443                           
 31444                           ;i2c_drv.c: 300: {
 31445                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 31446  0020B6  0E05               	movlw	5
 31447  0020B8                     L58:
 31448  0020B8  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31449                           
 31450                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 31451  0020BA  0E08               	movlw	8
 31452  0020BC  D040               	goto	L56
 31453  0020BE                     
 31454                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 31455  0020BE  0100               	movlb	0	; () banked
 31456  0020C0  EE20 F004          	lfsr	2,4
 31457  0020C4  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31458  0020C6  26D9               	addwf	fsr2l,f,c
 31459  0020C8  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31460  0020CA  22DA               	addwfc	fsr2h,f,c
 31461  0020CC  50DF               	movf	indf2,w,c
 31462  0020CE  B4D8               	btfsc	status,2,c
 31463  0020D0  D010               	goto	l170
 31464                           
 31465                           ; BSR set to: 0
 31466                           ;i2c_drv.c: 310: {
 31467                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 31468  0020D2  EE20 F004          	lfsr	2,4
 31469  0020D6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31470  0020D8  26D9               	addwf	fsr2l,f,c
 31471  0020DA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31472  0020DC  22DA               	addwfc	fsr2h,f,c
 31473  0020DE  06DF               	decf	indf2,f,c
 31474                           
 31475                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 31476  0020E0  EE20 F002          	lfsr	2,2
 31477  0020E4  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31478  0020E6  26D9               	addwf	fsr2l,f,c
 31479  0020E8  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31480  0020EA  22DA               	addwfc	fsr2h,f,c
 31481  0020EC  2ADE               	incf	postinc2,f,c
 31482  0020EE  0E00               	movlw	0
 31483  0020F0  22DD               	addwfc	postdec2,f,c
 31484  0020F2                     l170:
 31485                           
 31486                           ; BSR set to: 0
 31487                           ;i2c_drv.c: 315: }
 31488                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 31489  0020F2  EE20 F004          	lfsr	2,4
 31490  0020F6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31491  0020F8  26D9               	addwf	fsr2l,f,c
 31492  0020FA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31493  0020FC  22DA               	addwfc	fsr2h,f,c
 31494  0020FE  50DF               	movf	indf2,w,c
 31495  002100  A4D8               	btfss	status,2,c
 31496  002102  D002               	goto	l171
 31497                           
 31498                           ; BSR set to: 0
 31499                           ;i2c_drv.c: 319: {
 31500                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 31501  002104  0E06               	movlw	6
 31502  002106  D01B               	goto	L56
 31503  002108                     l171:
 31504                           
 31505                           ; BSR set to: 0
 31506                           ;i2c_drv.c: 323: else
 31507                           ;i2c_drv.c: 324: {
 31508                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 31509                           
 31510                           ; BSR set to: 0
 31511  002108  0E03               	movlw	3
 31512  00210A  D019               	goto	L56
 31513  00210C                     
 31514                           ;i2c_drv.c: 332: StopCondition();
 31515                           
 31516                           ; BSR set to: 0
 31517  00210C  EC34  F031         	call	_StopCondition	;wreg free
 31518                           
 31519                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 31520  002110  0E07               	movlw	7
 31521  002112  D015               	goto	L56
 31522  002114                     
 31523                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 31524  002114  0E00               	movlw	0
 31525  002116  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31526                           
 31527                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 31528  002118  0E00               	movlw	0
 31529  00211A  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31530                           
 31531                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 31532  00211C  0E02               	movlw	2
 31533  00211E  D018               	goto	L57
 31534  002120                     
 31535                           ;i2c_drv.c: 347: TentativeCounter++;
 31536  002120  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 31537                           
 31538                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 31539  002122  EC23  F031         	call	_CheckAckStatus	;wreg free
 31540  002126  0900               	iorlw	0
 31541  002128  A4D8               	btfss	status,2,c
 31542  00212A  D005               	goto	l176
 31543                           
 31544                           ;i2c_drv.c: 350: {
 31545                           ;i2c_drv.c: 352: TentativeCounter = 0;
 31546  00212C  0E00               	movlw	0
 31547  00212E  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31548                           
 31549                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 31550  002130  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 31551                           
 31552                           ;i2c_drv.c: 355: }
 31553  002134  D02E               	goto	l162
 31554  002136                     l176:
 31555                           
 31556                           ;i2c_drv.c: 356: else
 31557                           ;i2c_drv.c: 357: {
 31558                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 31559  002136  0E02               	movlw	2
 31560  002138  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 31561  00213A  D02B               	goto	l162
 31562                           
 31563                           ;i2c_drv.c: 360: {
 31564                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 31565  00213C  0E09               	movlw	9
 31566  00213E                     L56:
 31567  00213E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31568                           
 31569                           ;i2c_drv.c: 363: }
 31570                           ;i2c_drv.c: 364: }
 31571                           ;i2c_drv.c: 365: break;
 31572  002140  D028               	goto	l162
 31573  002142                     
 31574                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31575  002142  0E00               	movlw	0
 31576  002144  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31577                           
 31578                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31579  002146  0E00               	movlw	0
 31580  002148  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31581                           
 31582                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31583  00214A  0E00               	movlw	0
 31584  00214C  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31585                           
 31586                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31587  00214E  0E01               	movlw	1
 31588  002150                     L57:
 31589  002150  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31590                           
 31591                           ;i2c_drv.c: 379: }
 31592                           
 31593                           ;i2c_drv.c: 378: break;
 31594                           
 31595                           ;i2c_drv.c: 377: default:
 31596                           
 31597                           ;i2c_drv.c: 375: break;
 31598  002152  D01F               	goto	l162
 31599  002154                     l160:
 31600  002154  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 31601                           
 31602                           ; Switch size 1, requested type "space"
 31603                           ; Number of cases is 10, Range of values is 0 to 9
 31604                           ; switch strategies available:
 31605                           ; Name         Instructions Cycles
 31606                           ; simple_byte           31    16 (average)
 31607                           ;	Chosen strategy is simple_byte
 31608  002156  0A00               	xorlw	0	; case 0
 31609  002158  B4D8               	btfsc	status,2,c
 31610  00215A  D767               	goto	l161
 31611  00215C  0A01               	xorlw	1	; case 1
 31612  00215E  B4D8               	btfsc	status,2,c
 31613  002160  D76A               	goto	l163
 31614  002162  0A03               	xorlw	3	; case 2
 31615  002164  B4D8               	btfsc	status,2,c
 31616  002166  D787               	goto	l164
 31617  002168  0A01               	xorlw	1	; case 3
 31618  00216A  B4D8               	btfsc	status,2,c
 31619  00216C  D78B               	goto	l166
 31620  00216E  0A07               	xorlw	7	; case 4
 31621  002170  B4D8               	btfsc	status,2,c
 31622  002172  D79C               	goto	l167
 31623  002174  0A01               	xorlw	1	; case 5
 31624  002176  B4D8               	btfsc	status,2,c
 31625  002178  D7A2               	goto	l169
 31626  00217A  0A03               	xorlw	3	; case 6
 31627  00217C  B4D8               	btfsc	status,2,c
 31628  00217E  D7C6               	goto	l173
 31629  002180  0A01               	xorlw	1	; case 7
 31630  002182  B4D8               	btfsc	status,2,c
 31631  002184  D7C7               	goto	l174
 31632  002186  0A0F               	xorlw	15	; case 8
 31633  002188  B4D8               	btfsc	status,2,c
 31634  00218A  D7CA               	goto	l175
 31635  00218C  0A01               	xorlw	1	; case 9
 31636  00218E  B4D8               	btfsc	status,2,c
 31637  002190  D7D8               	goto	l179
 31638  002192                     l162:
 31639                           
 31640                           ;i2c_drv.c: 382: return WriteStatus;
 31641  002192  5035               	movf	I2c_WriteData@WriteStatus,w,c
 31642  002194  0012               	return	
 31643  002196                     __end_of_I2c_WriteData:
 31644                           	opt stack 0
 31645                           tosu	equ	0xFFF
 31646                           tosh	equ	0xFFE
 31647                           tosl	equ	0xFFD
 31648                           pclath	equ	0xFFA
 31649                           tblptru	equ	0xFF8
 31650                           tblptrh	equ	0xFF7
 31651                           tblptrl	equ	0xFF6
 31652                           tablat	equ	0xFF5
 31653                           prodh	equ	0xFF4
 31654                           prodl	equ	0xFF3
 31655                           intcon	equ	0xFF2
 31656                           intcon2	equ	0xFF1
 31657                           intcon3	equ	0xFF0
 31658                           indf0	equ	0xFEF
 31659                           postinc0	equ	0xFEE
 31660                           plusw0	equ	0xFEB
 31661                           fsr0h	equ	0xFEA
 31662                           fsr0l	equ	0xFE9
 31663                           wreg	equ	0xFE8
 31664                           indf1	equ	0xFE7
 31665                           postinc1	equ	0xFE6
 31666                           postdec1	equ	0xFE5
 31667                           plusw1	equ	0xFE3
 31668                           fsr1h	equ	0xFE2
 31669                           fsr1l	equ	0xFE1
 31670                           indf2	equ	0xFDF
 31671                           postinc2	equ	0xFDE
 31672                           postdec2	equ	0xFDD
 31673                           plusw2	equ	0xFDB
 31674                           fsr2h	equ	0xFDA
 31675                           fsr2l	equ	0xFD9
 31676                           status	equ	0xFD8
 31677                           
 31678 ;; *************** function _I2c_ReadData *****************
 31679 ;; Defined at:
 31680 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31681 ;; Parameters:    Size  Location     Type
 31682 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31683 ;;		 -> I2cRxPacket(6), 
 31684 ;; Auto vars:     Size  Location     Type
 31685 ;;		None
 31686 ;; Return value:  Size  Location     Type
 31687 ;;                  1    wreg      enum E7787
 31688 ;; Registers used:
 31689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31690 ;; Tracked objects:
 31691 ;;		On entry : 0/0
 31692 ;;		On exit  : 0/0
 31693 ;;		Unchanged: 0/0
 31694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31699 ;;Total ram usage:        4 bytes
 31700 ;; Hardware stack levels used:    1
 31701 ;; Hardware stack levels required when called:   12
 31702 ;; This function calls:
 31703 ;;		_CheckAckStatus
 31704 ;;		_CheckTxStatus
 31705 ;;		_EnableReceiver
 31706 ;;		_GenerateEvt
 31707 ;;		_ReadByte
 31708 ;;		_SetAckStatus
 31709 ;;		_StartCondition
 31710 ;;		_StopCondition
 31711 ;;		_WriteByte
 31712 ;; This function is called by:
 31713 ;;		_I2cSendMsgSm
 31714 ;; This function uses a non-reentrant model
 31715 ;;
 31716                           
 31717                           	psect	text146
 31718  0022F6                     __ptext146:
 31719                           	opt stack 0
 31720  0022F6                     _I2c_ReadData:
 31721                           	opt stack 14
 31722                           
 31723                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31724                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 31725                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 31726                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 31727                           ;i2c_drv.c: 402: switch (I2cReadState)
 31728                           
 31729                           ;incstack = 0
 31730  0022F6  D090               	goto	l192
 31731  0022F8                     
 31732                           ;i2c_drv.c: 406: StartCondition();
 31733  0022F8  EC36  F031         	call	_StartCondition	;wreg free
 31734                           
 31735                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 31736  0022FC  0E00               	movlw	0
 31737  0022FE  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31738                           
 31739                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 31740  002300  0E01               	movlw	1
 31741  002302  D083               	goto	L66
 31742  002304                     
 31743                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 31744  002304  0100               	movlb	0	; () banked
 31745  002306  EE20 F001          	lfsr	2,1
 31746  00230A  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31747  00230C  26D9               	addwf	fsr2l,f,c
 31748  00230E  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31749  002310  22DA               	addwfc	fsr2h,f,c
 31750  002312  50DF               	movf	indf2,w,c
 31751  002314  6F82               	movwf	??_I2c_ReadData& (0+255),b
 31752  002316  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31753  00231A  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31754  00231E  50DF               	movf	indf2,w,c
 31755  002320  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 31756  002322  90D8               	bcf	status,0,c
 31757  002324  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 31758  002326  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 31759  002328  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31760  00232C  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31761  002330  6EDF               	movwf	indf2,c
 31762                           
 31763                           ; BSR set to: 0
 31764                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 31765  002332  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31766  002336  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31767  00233A  50DF               	movf	indf2,w,c
 31768  00233C  EC14  F031         	call	_WriteByte
 31769                           
 31770                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 31771  002340  0E02               	movlw	2
 31772  002342  D063               	goto	L66
 31773  002344                     
 31774                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 31775  002344  EC1E  F031         	call	_CheckTxStatus	;wreg free
 31776  002348  0900               	iorlw	0
 31777  00234A  A4D8               	btfss	status,2,c
 31778  00234C  D081               	goto	l194
 31779                           
 31780                           ;i2c_drv.c: 425: {
 31781                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 31782  00234E  0E03               	movlw	3
 31783  002350  D05C               	goto	L66
 31784  002352                     
 31785                           ;i2c_drv.c: 433: TentativeCounter++;
 31786  002352  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 31787                           
 31788                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 31789  002354  EC23  F031         	call	_CheckAckStatus	;wreg free
 31790  002358  0900               	iorlw	0
 31791  00235A  A4D8               	btfss	status,2,c
 31792  00235C  D004               	goto	l199
 31793                           
 31794                           ;i2c_drv.c: 436: {
 31795                           ;i2c_drv.c: 438: TentativeCounter = 0;
 31796  00235E  0E00               	movlw	0
 31797  002360  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 31798  002362                     
 31799                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 31800  002362  0E04               	movlw	4
 31801  002364  D052               	goto	L66
 31802  002366                     l199:
 31803                           
 31804                           ;i2c_drv.c: 442: else
 31805                           ;i2c_drv.c: 443: {
 31806                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 31807  002366  0E02               	movlw	2
 31808  002368  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 31809  00236A  D072               	goto	l194
 31810                           
 31811                           ;i2c_drv.c: 446: {
 31812                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 31813  00236C  0E08               	movlw	8
 31814  00236E  D04D               	goto	L66
 31815  002370                     
 31816                           ;i2c_drv.c: 455: EnableReceiver();
 31817  002370  EC38  F031         	call	_EnableReceiver	;wreg free
 31818                           
 31819                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 31820  002374  0E05               	movlw	5
 31821  002376  D049               	goto	L66
 31822  002378                     
 31823                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 31824  002378  EC1E  F031         	call	_CheckTxStatus	;wreg free
 31825  00237C  0900               	iorlw	0
 31826  00237E  A4D8               	btfss	status,2,c
 31827  002380  D067               	goto	l194
 31828                           
 31829                           ;i2c_drv.c: 463: {
 31830                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 31831  002382  0100               	movlb	0	; () banked
 31832  002384  EE20 F002          	lfsr	2,2
 31833  002388  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31834  00238A  26D9               	addwf	fsr2l,f,c
 31835  00238C  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31836  00238E  22DA               	addwfc	fsr2h,f,c
 31837  002390  CFDE F082          	movff	postinc2,??_I2c_ReadData
 31838  002394  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 31839  002398  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 31840  00239C  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 31841  0023A0  EC19  F031         	call	_ReadByte	;wreg free
 31842  0023A4  6EDF               	movwf	indf2,c
 31843                           
 31844                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 31845  0023A6  0100               	movlb	0	; () banked
 31846  0023A8  EE20 F002          	lfsr	2,2
 31847  0023AC  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31848  0023AE  26D9               	addwf	fsr2l,f,c
 31849  0023B0  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31850  0023B2  22DA               	addwfc	fsr2h,f,c
 31851  0023B4  2ADE               	incf	postinc2,f,c
 31852  0023B6  0E00               	movlw	0
 31853  0023B8  22DD               	addwfc	postdec2,f,c
 31854                           
 31855                           ; BSR set to: 0
 31856                           ;i2c_drv.c: 469: DataCounter++;
 31857  0023BA  2A33               	incf	I2c_ReadData@DataCounter,f,c
 31858                           
 31859                           ; BSR set to: 0
 31860                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 31861  0023BC  0E06               	movlw	6
 31862  0023BE  D025               	goto	L66
 31863  0023C0                     
 31864                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 31865                           
 31866                           ; BSR set to: 0
 31867  0023C0  0100               	movlb	0	; () banked
 31868  0023C2  EE20 F004          	lfsr	2,4
 31869  0023C6  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31870  0023C8  26D9               	addwf	fsr2l,f,c
 31871  0023CA  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31872  0023CC  22DA               	addwfc	fsr2h,f,c
 31873  0023CE  50DE               	movf	postinc2,w,c
 31874  0023D0  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 31875  0023D2  A0D8               	btfss	status,0,c
 31876  0023D4  D008               	goto	l206
 31877                           
 31878                           ; BSR set to: 0
 31879                           ;i2c_drv.c: 478: {
 31880                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 31881  0023D6  0E01               	movlw	1
 31882  0023D8  ECB7  F030         	call	_SetAckStatus
 31883                           
 31884                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 31885  0023DC  0E07               	movlw	7
 31886  0023DE  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31887                           
 31888                           ;i2c_drv.c: 484: DataCounter = 0;
 31889  0023E0  0E00               	movlw	0
 31890  0023E2  6E33               	movwf	I2c_ReadData@DataCounter,c
 31891                           
 31892                           ;i2c_drv.c: 485: }
 31893  0023E4  D035               	goto	l194
 31894  0023E6                     l206:
 31895                           
 31896                           ;i2c_drv.c: 486: else
 31897                           ;i2c_drv.c: 487: {
 31898                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 31899  0023E6  0E00               	movlw	0
 31900  0023E8  ECB7  F030         	call	_SetAckStatus
 31901  0023EC  D7BA               	goto	L67
 31902  0023EE                     
 31903                           ;i2c_drv.c: 497: StopCondition();
 31904  0023EE  EC34  F031         	call	_StopCondition	;wreg free
 31905                           
 31906                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 31907  0023F2  0E02               	movlw	2
 31908  0023F4  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31909                           
 31910                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 31911  0023F6  0E05               	movlw	5
 31912  0023F8  0100               	movlb	0	; () banked
 31913  0023FA  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 31914  0023FC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 31915  0023FE  0E00               	movlw	0
 31916  002400  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31917  002402  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 31918  002404  EC7F  F030         	call	_GenerateEvt	;wreg free
 31919                           
 31920                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 31921  002408  0E00               	movlw	0
 31922  00240A                     L66:
 31923  00240A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31924                           
 31925                           ;i2c_drv.c: 504: break;
 31926  00240C  D021               	goto	l194
 31927  00240E                     
 31928                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 31929  00240E  0E00               	movlw	0
 31930  002410  6E34               	movwf	I2c_ReadData@I2cReadState,c
 31931                           
 31932                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 31933  002412  0E01               	movlw	1
 31934  002414  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31935                           
 31936                           ;i2c_drv.c: 515: }
 31937                           
 31938                           ;i2c_drv.c: 514: break;
 31939                           
 31940                           ;i2c_drv.c: 513: default:
 31941                           
 31942                           ;i2c_drv.c: 511: break;
 31943  002416  D01C               	goto	l194
 31944  002418                     l192:
 31945  002418  5034               	movf	I2c_ReadData@I2cReadState,w,c
 31946                           
 31947                           ; Switch size 1, requested type "space"
 31948                           ; Number of cases is 9, Range of values is 0 to 8
 31949                           ; switch strategies available:
 31950                           ; Name         Instructions Cycles
 31951                           ; simple_byte           28    15 (average)
 31952                           ;	Chosen strategy is simple_byte
 31953  00241A  0A00               	xorlw	0	; case 0
 31954  00241C  B4D8               	btfsc	status,2,c
 31955  00241E  D76C               	goto	l193
 31956  002420  0A01               	xorlw	1	; case 1
 31957  002422  B4D8               	btfsc	status,2,c
 31958  002424  D76F               	goto	l195
 31959  002426  0A03               	xorlw	3	; case 2
 31960  002428  B4D8               	btfsc	status,2,c
 31961  00242A  D78C               	goto	l196
 31962  00242C  0A01               	xorlw	1	; case 3
 31963  00242E  B4D8               	btfsc	status,2,c
 31964  002430  D790               	goto	l198
 31965  002432  0A07               	xorlw	7	; case 4
 31966  002434  B4D8               	btfsc	status,2,c
 31967  002436  D79C               	goto	l202
 31968  002438  0A01               	xorlw	1	; case 5
 31969  00243A  B4D8               	btfsc	status,2,c
 31970  00243C  D79D               	goto	l203
 31971  00243E  0A03               	xorlw	3	; case 6
 31972  002440  B4D8               	btfsc	status,2,c
 31973  002442  D7BE               	goto	l205
 31974  002444  0A01               	xorlw	1	; case 7
 31975  002446  B4D8               	btfsc	status,2,c
 31976  002448  D7D2               	goto	l208
 31977  00244A  0A0F               	xorlw	15	; case 8
 31978  00244C  B4D8               	btfsc	status,2,c
 31979  00244E  D7DF               	goto	l209
 31980  002450                     l194:
 31981                           
 31982                           ;i2c_drv.c: 518: return ReadStatus;
 31983  002450  5031               	movf	I2c_ReadData@ReadStatus,w,c
 31984  002452  0012               	return	
 31985  002454                     __end_of_I2c_ReadData:
 31986                           	opt stack 0
 31987                           tosu	equ	0xFFF
 31988                           tosh	equ	0xFFE
 31989                           tosl	equ	0xFFD
 31990                           pclath	equ	0xFFA
 31991                           tblptru	equ	0xFF8
 31992                           tblptrh	equ	0xFF7
 31993                           tblptrl	equ	0xFF6
 31994                           tablat	equ	0xFF5
 31995                           prodh	equ	0xFF4
 31996                           prodl	equ	0xFF3
 31997                           intcon	equ	0xFF2
 31998                           intcon2	equ	0xFF1
 31999                           intcon3	equ	0xFF0
 32000                           indf0	equ	0xFEF
 32001                           postinc0	equ	0xFEE
 32002                           plusw0	equ	0xFEB
 32003                           fsr0h	equ	0xFEA
 32004                           fsr0l	equ	0xFE9
 32005                           wreg	equ	0xFE8
 32006                           indf1	equ	0xFE7
 32007                           postinc1	equ	0xFE6
 32008                           postdec1	equ	0xFE5
 32009                           plusw1	equ	0xFE3
 32010                           fsr1h	equ	0xFE2
 32011                           fsr1l	equ	0xFE1
 32012                           indf2	equ	0xFDF
 32013                           postinc2	equ	0xFDE
 32014                           postdec2	equ	0xFDD
 32015                           plusw2	equ	0xFDB
 32016                           fsr2h	equ	0xFDA
 32017                           fsr2l	equ	0xFD9
 32018                           status	equ	0xFD8
 32019                           
 32020 ;; *************** function _WriteByte *****************
 32021 ;; Defined at:
 32022 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32023 ;; Parameters:    Size  Location     Type
 32024 ;;  Byte            1    wreg     unsigned char 
 32025 ;; Auto vars:     Size  Location     Type
 32026 ;;  Byte            1   29[BANK0 ] unsigned char 
 32027 ;; Return value:  Size  Location     Type
 32028 ;;                  1    wreg      void 
 32029 ;; Registers used:
 32030 ;;		wreg
 32031 ;; Tracked objects:
 32032 ;;		On entry : 0/0
 32033 ;;		On exit  : 0/0
 32034 ;;		Unchanged: 0/0
 32035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32039 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32040 ;;Total ram usage:        1 bytes
 32041 ;; Hardware stack levels used:    1
 32042 ;; Hardware stack levels required when called:   11
 32043 ;; This function calls:
 32044 ;;		Nothing
 32045 ;; This function is called by:
 32046 ;;		_I2c_WriteData
 32047 ;;		_I2c_ReadData
 32048 ;; This function uses a non-reentrant model
 32049 ;;
 32050                           
 32051                           	psect	text147
 32052  006228                     __ptext147:
 32053                           	opt stack 0
 32054  006228                     _WriteByte:
 32055                           	opt stack 14
 32056                           
 32057                           ;incstack = 0
 32058                           ;WriteByte@Byte stored from wreg
 32059  006228  0100               	movlb	0	; () banked
 32060  00622A  6F7D               	movwf	WriteByte@Byte& (0+255),b
 32061                           
 32062                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 32063  00622C  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 32064  006230  0012               	return		;funcret
 32065  006232                     __end_of_WriteByte:
 32066                           	opt stack 0
 32067                           tosu	equ	0xFFF
 32068                           tosh	equ	0xFFE
 32069                           tosl	equ	0xFFD
 32070                           pclath	equ	0xFFA
 32071                           tblptru	equ	0xFF8
 32072                           tblptrh	equ	0xFF7
 32073                           tblptrl	equ	0xFF6
 32074                           tablat	equ	0xFF5
 32075                           prodh	equ	0xFF4
 32076                           prodl	equ	0xFF3
 32077                           intcon	equ	0xFF2
 32078                           intcon2	equ	0xFF1
 32079                           intcon3	equ	0xFF0
 32080                           indf0	equ	0xFEF
 32081                           postinc0	equ	0xFEE
 32082                           plusw0	equ	0xFEB
 32083                           fsr0h	equ	0xFEA
 32084                           fsr0l	equ	0xFE9
 32085                           wreg	equ	0xFE8
 32086                           indf1	equ	0xFE7
 32087                           postinc1	equ	0xFE6
 32088                           postdec1	equ	0xFE5
 32089                           plusw1	equ	0xFE3
 32090                           fsr1h	equ	0xFE2
 32091                           fsr1l	equ	0xFE1
 32092                           indf2	equ	0xFDF
 32093                           postinc2	equ	0xFDE
 32094                           postdec2	equ	0xFDD
 32095                           plusw2	equ	0xFDB
 32096                           fsr2h	equ	0xFDA
 32097                           fsr2l	equ	0xFD9
 32098                           status	equ	0xFD8
 32099                           
 32100 ;; *************** function _StopCondition *****************
 32101 ;; Defined at:
 32102 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32103 ;; Parameters:    Size  Location     Type
 32104 ;;		None
 32105 ;; Auto vars:     Size  Location     Type
 32106 ;;		None
 32107 ;; Return value:  Size  Location     Type
 32108 ;;                  1    wreg      void 
 32109 ;; Registers used:
 32110 ;;		status,2, status,0
 32111 ;; Tracked objects:
 32112 ;;		On entry : 0/0
 32113 ;;		On exit  : 0/0
 32114 ;;		Unchanged: 0/0
 32115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32120 ;;Total ram usage:        0 bytes
 32121 ;; Hardware stack levels used:    1
 32122 ;; Hardware stack levels required when called:   11
 32123 ;; This function calls:
 32124 ;;		Nothing
 32125 ;; This function is called by:
 32126 ;;		_I2c_WriteData
 32127 ;;		_I2c_ReadData
 32128 ;; This function uses a non-reentrant model
 32129 ;;
 32130                           
 32131                           	psect	text148
 32132  006268                     __ptext148:
 32133                           	opt stack 0
 32134  006268                     _StopCondition:
 32135                           	opt stack 14
 32136                           
 32137                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 32138                           
 32139                           ;incstack = 0
 32140  006268  8471               	bsf	3953,2,c	;volatile
 32141  00626A  0012               	return		;funcret
 32142  00626C                     __end_of_StopCondition:
 32143                           	opt stack 0
 32144                           tosu	equ	0xFFF
 32145                           tosh	equ	0xFFE
 32146                           tosl	equ	0xFFD
 32147                           pclath	equ	0xFFA
 32148                           tblptru	equ	0xFF8
 32149                           tblptrh	equ	0xFF7
 32150                           tblptrl	equ	0xFF6
 32151                           tablat	equ	0xFF5
 32152                           prodh	equ	0xFF4
 32153                           prodl	equ	0xFF3
 32154                           intcon	equ	0xFF2
 32155                           intcon2	equ	0xFF1
 32156                           intcon3	equ	0xFF0
 32157                           indf0	equ	0xFEF
 32158                           postinc0	equ	0xFEE
 32159                           plusw0	equ	0xFEB
 32160                           fsr0h	equ	0xFEA
 32161                           fsr0l	equ	0xFE9
 32162                           wreg	equ	0xFE8
 32163                           indf1	equ	0xFE7
 32164                           postinc1	equ	0xFE6
 32165                           postdec1	equ	0xFE5
 32166                           plusw1	equ	0xFE3
 32167                           fsr1h	equ	0xFE2
 32168                           fsr1l	equ	0xFE1
 32169                           indf2	equ	0xFDF
 32170                           postinc2	equ	0xFDE
 32171                           postdec2	equ	0xFDD
 32172                           plusw2	equ	0xFDB
 32173                           fsr2h	equ	0xFDA
 32174                           fsr2l	equ	0xFD9
 32175                           status	equ	0xFD8
 32176                           
 32177 ;; *************** function _StartCondition *****************
 32178 ;; Defined at:
 32179 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32180 ;; Parameters:    Size  Location     Type
 32181 ;;		None
 32182 ;; Auto vars:     Size  Location     Type
 32183 ;;		None
 32184 ;; Return value:  Size  Location     Type
 32185 ;;                  1    wreg      void 
 32186 ;; Registers used:
 32187 ;;		status,2, status,0
 32188 ;; Tracked objects:
 32189 ;;		On entry : 0/0
 32190 ;;		On exit  : 0/0
 32191 ;;		Unchanged: 0/0
 32192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32197 ;;Total ram usage:        0 bytes
 32198 ;; Hardware stack levels used:    1
 32199 ;; Hardware stack levels required when called:   11
 32200 ;; This function calls:
 32201 ;;		Nothing
 32202 ;; This function is called by:
 32203 ;;		_I2c_WriteData
 32204 ;;		_I2c_ReadData
 32205 ;; This function uses a non-reentrant model
 32206 ;;
 32207                           
 32208                           	psect	text149
 32209  00626C                     __ptext149:
 32210                           	opt stack 0
 32211  00626C                     _StartCondition:
 32212                           	opt stack 14
 32213                           
 32214                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 32215                           
 32216                           ;incstack = 0
 32217  00626C  8071               	bsf	3953,0,c	;volatile
 32218  00626E  0012               	return		;funcret
 32219  006270                     __end_of_StartCondition:
 32220                           	opt stack 0
 32221                           tosu	equ	0xFFF
 32222                           tosh	equ	0xFFE
 32223                           tosl	equ	0xFFD
 32224                           pclath	equ	0xFFA
 32225                           tblptru	equ	0xFF8
 32226                           tblptrh	equ	0xFF7
 32227                           tblptrl	equ	0xFF6
 32228                           tablat	equ	0xFF5
 32229                           prodh	equ	0xFF4
 32230                           prodl	equ	0xFF3
 32231                           intcon	equ	0xFF2
 32232                           intcon2	equ	0xFF1
 32233                           intcon3	equ	0xFF0
 32234                           indf0	equ	0xFEF
 32235                           postinc0	equ	0xFEE
 32236                           plusw0	equ	0xFEB
 32237                           fsr0h	equ	0xFEA
 32238                           fsr0l	equ	0xFE9
 32239                           wreg	equ	0xFE8
 32240                           indf1	equ	0xFE7
 32241                           postinc1	equ	0xFE6
 32242                           postdec1	equ	0xFE5
 32243                           plusw1	equ	0xFE3
 32244                           fsr1h	equ	0xFE2
 32245                           fsr1l	equ	0xFE1
 32246                           indf2	equ	0xFDF
 32247                           postinc2	equ	0xFDE
 32248                           postdec2	equ	0xFDD
 32249                           plusw2	equ	0xFDB
 32250                           fsr2h	equ	0xFDA
 32251                           fsr2l	equ	0xFD9
 32252                           status	equ	0xFD8
 32253                           
 32254 ;; *************** function _SetAckStatus *****************
 32255 ;; Defined at:
 32256 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32257 ;; Parameters:    Size  Location     Type
 32258 ;;  AckSts          1    wreg     unsigned char 
 32259 ;; Auto vars:     Size  Location     Type
 32260 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32261 ;; Return value:  Size  Location     Type
 32262 ;;                  1    wreg      void 
 32263 ;; Registers used:
 32264 ;;		wreg
 32265 ;; Tracked objects:
 32266 ;;		On entry : 0/0
 32267 ;;		On exit  : 0/0
 32268 ;;		Unchanged: 0/0
 32269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32274 ;;Total ram usage:        1 bytes
 32275 ;; Hardware stack levels used:    1
 32276 ;; Hardware stack levels required when called:   11
 32277 ;; This function calls:
 32278 ;;		Nothing
 32279 ;; This function is called by:
 32280 ;;		_I2c_ReadData
 32281 ;; This function uses a non-reentrant model
 32282 ;;
 32283                           
 32284                           	psect	text150
 32285  00616E                     __ptext150:
 32286                           	opt stack 0
 32287  00616E                     _SetAckStatus:
 32288                           	opt stack 14
 32289                           
 32290                           ;incstack = 0
 32291                           ;SetAckStatus@AckSts stored from wreg
 32292  00616E  0100               	movlb	0	; () banked
 32293  006170  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32294                           
 32295                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32296  006172  0100               	movlb	0	; () banked
 32297  006174  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32298  006176  D002               	bra	u11355
 32299  006178  9A71               	bcf	3953,5,c	;volatile
 32300  00617A  D001               	bra	u11356
 32301  00617C                     u11355:
 32302  00617C  8A71               	bsf	3953,5,c	;volatile
 32303  00617E                     u11356:
 32304                           
 32305                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 32306  00617E  8871               	bsf	3953,4,c	;volatile
 32307  006180  0012               	return		;funcret
 32308  006182                     __end_of_SetAckStatus:
 32309                           	opt stack 0
 32310                           tosu	equ	0xFFF
 32311                           tosh	equ	0xFFE
 32312                           tosl	equ	0xFFD
 32313                           pclath	equ	0xFFA
 32314                           tblptru	equ	0xFF8
 32315                           tblptrh	equ	0xFF7
 32316                           tblptrl	equ	0xFF6
 32317                           tablat	equ	0xFF5
 32318                           prodh	equ	0xFF4
 32319                           prodl	equ	0xFF3
 32320                           intcon	equ	0xFF2
 32321                           intcon2	equ	0xFF1
 32322                           intcon3	equ	0xFF0
 32323                           indf0	equ	0xFEF
 32324                           postinc0	equ	0xFEE
 32325                           plusw0	equ	0xFEB
 32326                           fsr0h	equ	0xFEA
 32327                           fsr0l	equ	0xFE9
 32328                           wreg	equ	0xFE8
 32329                           indf1	equ	0xFE7
 32330                           postinc1	equ	0xFE6
 32331                           postdec1	equ	0xFE5
 32332                           plusw1	equ	0xFE3
 32333                           fsr1h	equ	0xFE2
 32334                           fsr1l	equ	0xFE1
 32335                           indf2	equ	0xFDF
 32336                           postinc2	equ	0xFDE
 32337                           postdec2	equ	0xFDD
 32338                           plusw2	equ	0xFDB
 32339                           fsr2h	equ	0xFDA
 32340                           fsr2l	equ	0xFD9
 32341                           status	equ	0xFD8
 32342                           
 32343 ;; *************** function _ReadByte *****************
 32344 ;; Defined at:
 32345 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32346 ;; Parameters:    Size  Location     Type
 32347 ;;		None
 32348 ;; Auto vars:     Size  Location     Type
 32349 ;;  Byte            1   29[BANK0 ] unsigned char 
 32350 ;; Return value:  Size  Location     Type
 32351 ;;                  1    wreg      unsigned char 
 32352 ;; Registers used:
 32353 ;;		wreg, status,2
 32354 ;; Tracked objects:
 32355 ;;		On entry : 0/0
 32356 ;;		On exit  : 0/0
 32357 ;;		Unchanged: 0/0
 32358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;Total ram usage:        1 bytes
 32364 ;; Hardware stack levels used:    1
 32365 ;; Hardware stack levels required when called:   11
 32366 ;; This function calls:
 32367 ;;		Nothing
 32368 ;; This function is called by:
 32369 ;;		_I2c_ReadData
 32370 ;; This function uses a non-reentrant model
 32371 ;;
 32372                           
 32373                           	psect	text151
 32374  006232                     __ptext151:
 32375                           	opt stack 0
 32376  006232                     _ReadByte:
 32377                           	opt stack 14
 32378                           
 32379                           ;i2c_drv.c: 207: UINT8 Byte;
 32380                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 32381                           
 32382                           ;incstack = 0
 32383  006232  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 32384                           
 32385                           ;i2c_drv.c: 213: return Byte;
 32386  006236  0100               	movlb	0	; () banked
 32387  006238  517D               	movf	ReadByte@Byte& (0+255),w,b
 32388  00623A  0012               	return	
 32389  00623C                     __end_of_ReadByte:
 32390                           	opt stack 0
 32391                           tosu	equ	0xFFF
 32392                           tosh	equ	0xFFE
 32393                           tosl	equ	0xFFD
 32394                           pclath	equ	0xFFA
 32395                           tblptru	equ	0xFF8
 32396                           tblptrh	equ	0xFF7
 32397                           tblptrl	equ	0xFF6
 32398                           tablat	equ	0xFF5
 32399                           prodh	equ	0xFF4
 32400                           prodl	equ	0xFF3
 32401                           intcon	equ	0xFF2
 32402                           intcon2	equ	0xFF1
 32403                           intcon3	equ	0xFF0
 32404                           indf0	equ	0xFEF
 32405                           postinc0	equ	0xFEE
 32406                           plusw0	equ	0xFEB
 32407                           fsr0h	equ	0xFEA
 32408                           fsr0l	equ	0xFE9
 32409                           wreg	equ	0xFE8
 32410                           indf1	equ	0xFE7
 32411                           postinc1	equ	0xFE6
 32412                           postdec1	equ	0xFE5
 32413                           plusw1	equ	0xFE3
 32414                           fsr1h	equ	0xFE2
 32415                           fsr1l	equ	0xFE1
 32416                           indf2	equ	0xFDF
 32417                           postinc2	equ	0xFDE
 32418                           postdec2	equ	0xFDD
 32419                           plusw2	equ	0xFDB
 32420                           fsr2h	equ	0xFDA
 32421                           fsr2l	equ	0xFD9
 32422                           status	equ	0xFD8
 32423                           
 32424 ;; *************** function _GenerateEvt *****************
 32425 ;; Defined at:
 32426 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32427 ;; Parameters:    Size  Location     Type
 32428 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32429 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32430 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32431 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 32432 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 32433 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32434 ;; Auto vars:     Size  Location     Type
 32435 ;;  EventStatus     1   31[BANK0 ] enum E7727
 32436 ;; Return value:  Size  Location     Type
 32437 ;;                  1    wreg      enum E7699
 32438 ;; Registers used:
 32439 ;;		wreg, fsr2l, fsr2h, status,2
 32440 ;; Tracked objects:
 32441 ;;		On entry : 0/0
 32442 ;;		On exit  : 0/0
 32443 ;;		Unchanged: 0/0
 32444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32448 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32449 ;;Total ram usage:        3 bytes
 32450 ;; Hardware stack levels used:    1
 32451 ;; Hardware stack levels required when called:   11
 32452 ;; This function calls:
 32453 ;;		Nothing
 32454 ;; This function is called by:
 32455 ;;		_I2c_ReadData
 32456 ;;		_CheckModem
 32457 ;;		_TurnOnModem
 32458 ;;		_ConfigureModem
 32459 ;;		_ModemEvtParser
 32460 ;;		_GetSmsSm
 32461 ;;		_Mdm_RequestSmsData
 32462 ;;		_I2cSlv_SendI2cMsg
 32463 ;;		_I2cSlv_ReceiveI2cMsg
 32464 ;;		_RiSm
 32465 ;;		_Mdm_SendSmsData
 32466 ;;		_MdmHttp_InitGprsNetwork
 32467 ;;		_MdmHttp_GetMethod
 32468 ;;		_Alarm
 32469 ;; This function uses a non-reentrant model
 32470 ;;
 32471                           
 32472                           	psect	text152
 32473  0060FE                     __ptext152:
 32474                           	opt stack 0
 32475  0060FE                     _GenerateEvt:
 32476                           	opt stack 13
 32477                           
 32478                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32479                           
 32480                           ; BSR set to: 0
 32481                           ;incstack = 0
 32482  0060FE  0E00               	movlw	0
 32483  006100  0100               	movlb	0	; () banked
 32484  006102  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32485                           
 32486                           ; BSR set to: 0
 32487                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32488  006104  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 32489  006108  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 32490  00610C  0E02               	movlw	2
 32491  00610E  6EDF               	movwf	indf2,c
 32492                           
 32493                           ; BSR set to: 0
 32494                           ;os_ser.c: 83: EventStatus = EventSent;
 32495  006110  0E02               	movlw	2
 32496  006112  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32497  006114  0012               	return	
 32498  006116                     __end_of_GenerateEvt:
 32499                           	opt stack 0
 32500                           tosu	equ	0xFFF
 32501                           tosh	equ	0xFFE
 32502                           tosl	equ	0xFFD
 32503                           pclath	equ	0xFFA
 32504                           tblptru	equ	0xFF8
 32505                           tblptrh	equ	0xFF7
 32506                           tblptrl	equ	0xFF6
 32507                           tablat	equ	0xFF5
 32508                           prodh	equ	0xFF4
 32509                           prodl	equ	0xFF3
 32510                           intcon	equ	0xFF2
 32511                           intcon2	equ	0xFF1
 32512                           intcon3	equ	0xFF0
 32513                           indf0	equ	0xFEF
 32514                           postinc0	equ	0xFEE
 32515                           plusw0	equ	0xFEB
 32516                           fsr0h	equ	0xFEA
 32517                           fsr0l	equ	0xFE9
 32518                           wreg	equ	0xFE8
 32519                           indf1	equ	0xFE7
 32520                           postinc1	equ	0xFE6
 32521                           postdec1	equ	0xFE5
 32522                           plusw1	equ	0xFE3
 32523                           fsr1h	equ	0xFE2
 32524                           fsr1l	equ	0xFE1
 32525                           indf2	equ	0xFDF
 32526                           postinc2	equ	0xFDE
 32527                           postdec2	equ	0xFDD
 32528                           plusw2	equ	0xFDB
 32529                           fsr2h	equ	0xFDA
 32530                           fsr2l	equ	0xFD9
 32531                           status	equ	0xFD8
 32532                           
 32533 ;; *************** function _EnableReceiver *****************
 32534 ;; Defined at:
 32535 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32536 ;; Parameters:    Size  Location     Type
 32537 ;;		None
 32538 ;; Auto vars:     Size  Location     Type
 32539 ;;		None
 32540 ;; Return value:  Size  Location     Type
 32541 ;;                  1    wreg      void 
 32542 ;; Registers used:
 32543 ;;		status,2, status,0
 32544 ;; Tracked objects:
 32545 ;;		On entry : 0/0
 32546 ;;		On exit  : 0/0
 32547 ;;		Unchanged: 0/0
 32548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32553 ;;Total ram usage:        0 bytes
 32554 ;; Hardware stack levels used:    1
 32555 ;; Hardware stack levels required when called:   11
 32556 ;; This function calls:
 32557 ;;		Nothing
 32558 ;; This function is called by:
 32559 ;;		_I2c_ReadData
 32560 ;; This function uses a non-reentrant model
 32561 ;;
 32562                           
 32563                           	psect	text153
 32564  006270                     __ptext153:
 32565                           	opt stack 0
 32566  006270                     _EnableReceiver:
 32567                           	opt stack 14
 32568                           
 32569                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 32570                           
 32571                           ; BSR set to: 0
 32572                           ;incstack = 0
 32573  006270  8671               	bsf	3953,3,c	;volatile
 32574  006272  0012               	return		;funcret
 32575  006274                     __end_of_EnableReceiver:
 32576                           	opt stack 0
 32577                           tosu	equ	0xFFF
 32578                           tosh	equ	0xFFE
 32579                           tosl	equ	0xFFD
 32580                           pclath	equ	0xFFA
 32581                           tblptru	equ	0xFF8
 32582                           tblptrh	equ	0xFF7
 32583                           tblptrl	equ	0xFF6
 32584                           tablat	equ	0xFF5
 32585                           prodh	equ	0xFF4
 32586                           prodl	equ	0xFF3
 32587                           intcon	equ	0xFF2
 32588                           intcon2	equ	0xFF1
 32589                           intcon3	equ	0xFF0
 32590                           indf0	equ	0xFEF
 32591                           postinc0	equ	0xFEE
 32592                           plusw0	equ	0xFEB
 32593                           fsr0h	equ	0xFEA
 32594                           fsr0l	equ	0xFE9
 32595                           wreg	equ	0xFE8
 32596                           indf1	equ	0xFE7
 32597                           postinc1	equ	0xFE6
 32598                           postdec1	equ	0xFE5
 32599                           plusw1	equ	0xFE3
 32600                           fsr1h	equ	0xFE2
 32601                           fsr1l	equ	0xFE1
 32602                           indf2	equ	0xFDF
 32603                           postinc2	equ	0xFDE
 32604                           postdec2	equ	0xFDD
 32605                           plusw2	equ	0xFDB
 32606                           fsr2h	equ	0xFDA
 32607                           fsr2l	equ	0xFD9
 32608                           status	equ	0xFD8
 32609                           
 32610 ;; *************** function _CheckTxStatus *****************
 32611 ;; Defined at:
 32612 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32613 ;; Parameters:    Size  Location     Type
 32614 ;;		None
 32615 ;; Auto vars:     Size  Location     Type
 32616 ;;		None
 32617 ;; Return value:  Size  Location     Type
 32618 ;;                  1    wreg      unsigned char 
 32619 ;; Registers used:
 32620 ;;		wreg, status,2, status,0
 32621 ;; Tracked objects:
 32622 ;;		On entry : 0/0
 32623 ;;		On exit  : 0/0
 32624 ;;		Unchanged: 0/0
 32625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32630 ;;Total ram usage:        0 bytes
 32631 ;; Hardware stack levels used:    1
 32632 ;; Hardware stack levels required when called:   11
 32633 ;; This function calls:
 32634 ;;		Nothing
 32635 ;; This function is called by:
 32636 ;;		_I2c_WriteData
 32637 ;;		_I2c_ReadData
 32638 ;; This function uses a non-reentrant model
 32639 ;;
 32640                           
 32641                           	psect	text154
 32642  00623C                     __ptext154:
 32643                           	opt stack 0
 32644  00623C                     _CheckTxStatus:
 32645                           	opt stack 14
 32646                           
 32647                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32648                           
 32649                           ;incstack = 0
 32650  00623C  4073               	rrncf	3955,w,c	;volatile
 32651  00623E  42E8               	rrncf	wreg,f,c
 32652  006240  0B3F               	andlw	63
 32653  006242  0B01               	andlw	1
 32654  006244  0012               	return	
 32655  006246                     __end_of_CheckTxStatus:
 32656                           	opt stack 0
 32657                           tosu	equ	0xFFF
 32658                           tosh	equ	0xFFE
 32659                           tosl	equ	0xFFD
 32660                           pclath	equ	0xFFA
 32661                           tblptru	equ	0xFF8
 32662                           tblptrh	equ	0xFF7
 32663                           tblptrl	equ	0xFF6
 32664                           tablat	equ	0xFF5
 32665                           prodh	equ	0xFF4
 32666                           prodl	equ	0xFF3
 32667                           intcon	equ	0xFF2
 32668                           intcon2	equ	0xFF1
 32669                           intcon3	equ	0xFF0
 32670                           indf0	equ	0xFEF
 32671                           postinc0	equ	0xFEE
 32672                           plusw0	equ	0xFEB
 32673                           fsr0h	equ	0xFEA
 32674                           fsr0l	equ	0xFE9
 32675                           wreg	equ	0xFE8
 32676                           indf1	equ	0xFE7
 32677                           postinc1	equ	0xFE6
 32678                           postdec1	equ	0xFE5
 32679                           plusw1	equ	0xFE3
 32680                           fsr1h	equ	0xFE2
 32681                           fsr1l	equ	0xFE1
 32682                           indf2	equ	0xFDF
 32683                           postinc2	equ	0xFDE
 32684                           postdec2	equ	0xFDD
 32685                           plusw2	equ	0xFDB
 32686                           fsr2h	equ	0xFDA
 32687                           fsr2l	equ	0xFD9
 32688                           status	equ	0xFD8
 32689                           
 32690 ;; *************** function _CheckAckStatus *****************
 32691 ;; Defined at:
 32692 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32693 ;; Parameters:    Size  Location     Type
 32694 ;;		None
 32695 ;; Auto vars:     Size  Location     Type
 32696 ;;		None
 32697 ;; Return value:  Size  Location     Type
 32698 ;;                  1    wreg      unsigned char 
 32699 ;; Registers used:
 32700 ;;		wreg, status,2, status,0
 32701 ;; Tracked objects:
 32702 ;;		On entry : 0/0
 32703 ;;		On exit  : 0/0
 32704 ;;		Unchanged: 0/0
 32705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32710 ;;Total ram usage:        0 bytes
 32711 ;; Hardware stack levels used:    1
 32712 ;; Hardware stack levels required when called:   11
 32713 ;; This function calls:
 32714 ;;		Nothing
 32715 ;; This function is called by:
 32716 ;;		_I2c_WriteData
 32717 ;;		_I2c_ReadData
 32718 ;; This function uses a non-reentrant model
 32719 ;;
 32720                           
 32721                           	psect	text155
 32722  006246                     __ptext155:
 32723                           	opt stack 0
 32724  006246                     _CheckAckStatus:
 32725                           	opt stack 14
 32726                           
 32727                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 32728                           
 32729                           ;incstack = 0
 32730  006246  4471               	rlncf	3953,w,c	;volatile
 32731  006248  46E8               	rlncf	wreg,f,c
 32732  00624A  0B03               	andlw	3
 32733  00624C  0B01               	andlw	1
 32734  00624E  0012               	return	
 32735  006250                     __end_of_CheckAckStatus:
 32736                           	opt stack 0
 32737                           tosu	equ	0xFFF
 32738                           tosh	equ	0xFFE
 32739                           tosl	equ	0xFFD
 32740                           pclath	equ	0xFFA
 32741                           tblptru	equ	0xFF8
 32742                           tblptrh	equ	0xFF7
 32743                           tblptrl	equ	0xFF6
 32744                           tablat	equ	0xFF5
 32745                           prodh	equ	0xFF4
 32746                           prodl	equ	0xFF3
 32747                           intcon	equ	0xFF2
 32748                           intcon2	equ	0xFF1
 32749                           intcon3	equ	0xFF0
 32750                           indf0	equ	0xFEF
 32751                           postinc0	equ	0xFEE
 32752                           plusw0	equ	0xFEB
 32753                           fsr0h	equ	0xFEA
 32754                           fsr0l	equ	0xFE9
 32755                           wreg	equ	0xFE8
 32756                           indf1	equ	0xFE7
 32757                           postinc1	equ	0xFE6
 32758                           postdec1	equ	0xFE5
 32759                           plusw1	equ	0xFE3
 32760                           fsr1h	equ	0xFE2
 32761                           fsr1l	equ	0xFE1
 32762                           indf2	equ	0xFDF
 32763                           postinc2	equ	0xFDE
 32764                           postdec2	equ	0xFDD
 32765                           plusw2	equ	0xFDB
 32766                           fsr2h	equ	0xFDA
 32767                           fsr2l	equ	0xFD9
 32768                           status	equ	0xFD8
 32769                           
 32770 ;; *************** function _LowPriorityIsr *****************
 32771 ;; Defined at:
 32772 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32773 ;; Parameters:    Size  Location     Type
 32774 ;;		None
 32775 ;; Auto vars:     Size  Location     Type
 32776 ;;		None
 32777 ;; Return value:  Size  Location     Type
 32778 ;;                  1    wreg      void 
 32779 ;; Registers used:
 32780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32781 ;; Tracked objects:
 32782 ;;		On entry : 0/0
 32783 ;;		On exit  : 0/0
 32784 ;;		Unchanged: 0/0
 32785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32788 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32789 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;Total ram usage:       21 bytes
 32791 ;; Hardware stack levels used:    1
 32792 ;; Hardware stack levels required when called:   10
 32793 ;; This function calls:
 32794 ;;		_Tmr_Tmr2Isr
 32795 ;; This function is called by:
 32796 ;;		Interrupt level 1
 32797 ;; This function uses a non-reentrant model
 32798 ;;
 32799                           
 32800                           	psect	intcodelo
 32801  000018                     __pintcodelo:
 32802                           	opt stack 0
 32803  000018                     _LowPriorityIsr:
 32804                           	opt stack 8
 32805                           
 32806                           ;incstack = 0
 32807  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 32808  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 32809  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 32810  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 32811  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 32812  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 32813  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 32814  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 32815  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 32816  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 32817  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 32818  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 32819  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 32820  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 32821  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 32822  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 32823  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 32824  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 32825  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 32826  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 32827  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 32828  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 32829                           
 32830                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 32831  00006E  B29E               	btfsc	3998,1,c	;volatile
 32832                           
 32833                           ;irq.c: 259: {
 32834                           ;irq.c: 261: Tmr_Tmr2Isr();
 32835  000070  EC6F  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 32836  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 32837  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 32838  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 32839  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 32840  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 32841  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 32842  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 32843  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 32844  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 32845  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 32846  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 32847  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 32848  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 32849  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 32850  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 32851  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 32852  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 32853  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 32854  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 32855  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 32856  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 32857  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 32858  0000CA  0010               	retfie	
 32859  0000CC                     __end_of_LowPriorityIsr:
 32860                           	opt stack 0
 32861                           tosu	equ	0xFFF
 32862                           tosh	equ	0xFFE
 32863                           tosl	equ	0xFFD
 32864                           pclatu	equ	0xFFB
 32865                           pclath	equ	0xFFA
 32866                           tblptru	equ	0xFF8
 32867                           tblptrh	equ	0xFF7
 32868                           tblptrl	equ	0xFF6
 32869                           tablat	equ	0xFF5
 32870                           prodh	equ	0xFF4
 32871                           prodl	equ	0xFF3
 32872                           intcon	equ	0xFF2
 32873                           intcon2	equ	0xFF1
 32874                           intcon3	equ	0xFF0
 32875                           indf0	equ	0xFEF
 32876                           postinc0	equ	0xFEE
 32877                           plusw0	equ	0xFEB
 32878                           fsr0h	equ	0xFEA
 32879                           fsr0l	equ	0xFE9
 32880                           wreg	equ	0xFE8
 32881                           indf1	equ	0xFE7
 32882                           postinc1	equ	0xFE6
 32883                           postdec1	equ	0xFE5
 32884                           plusw1	equ	0xFE3
 32885                           fsr1h	equ	0xFE2
 32886                           fsr1l	equ	0xFE1
 32887                           bsr	equ	0xFE0
 32888                           indf2	equ	0xFDF
 32889                           postinc2	equ	0xFDE
 32890                           postdec2	equ	0xFDD
 32891                           plusw2	equ	0xFDB
 32892                           fsr2h	equ	0xFDA
 32893                           fsr2l	equ	0xFD9
 32894                           status	equ	0xFD8
 32895                           
 32896 ;; *************** function _Tmr_Tmr2Isr *****************
 32897 ;; Defined at:
 32898 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 32899 ;; Parameters:    Size  Location     Type
 32900 ;;		None
 32901 ;; Auto vars:     Size  Location     Type
 32902 ;;		None
 32903 ;; Return value:  Size  Location     Type
 32904 ;;                  1    wreg      void 
 32905 ;; Registers used:
 32906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 32907 ;; Tracked objects:
 32908 ;;		On entry : 0/0
 32909 ;;		On exit  : 0/0
 32910 ;;		Unchanged: 0/0
 32911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32916 ;;Total ram usage:        0 bytes
 32917 ;; Hardware stack levels used:    1
 32918 ;; Hardware stack levels required when called:    9
 32919 ;; This function calls:
 32920 ;;		Absolute function
 32921 ;;		_Sch_SchmIntService
 32922 ;; This function is called by:
 32923 ;;		_LowPriorityIsr
 32924 ;; This function uses a non-reentrant model
 32925 ;;
 32926                           
 32927                           	psect	text157
 32928  005EDE                     __ptext157:
 32929                           	opt stack 0
 32930  005EDE                     _Tmr_Tmr2Isr:
 32931                           	opt stack 8
 32932                           
 32933                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 32934                           
 32935                           ;incstack = 0
 32936  005EDE  929E               	bcf	3998,1,c	;volatile
 32937                           
 32938                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 32939  005EE0  0102               	movlb	2	; () banked
 32940  005EE2  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 32941  005EE4  11EA               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32942  005EE6  B4D8               	btfsc	status,2,c
 32943  005EE8  0012               	return	
 32944                           
 32945                           ; BSR set to: 2
 32946                           ;tmr_drv.c: 315: {
 32947                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 32948  005EEA  D801               	call	i1u1470_28
 32949  005EEC  0012               	return	
 32950  005EEE                     i1u1470_28:
 32951  005EEE  0005               	push	
 32952  005EF0  6EFA               	movwf	pclath,c
 32953  005EF2  51E9               	movf	_Tmr2IsrCallback& (0+255),w,b
 32954  005EF4  6EFD               	movwf	tosl,c
 32955  005EF6  51EA               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 32956  005EF8  6EFE               	movwf	tosh,c
 32957  005EFA  50F8               	movf	tblptru,w,c
 32958  005EFC  6EFF               	movwf	tosu,c
 32959  005EFE  50FA               	movf	pclath,w,c
 32960  005F00  0012               	return		;indir
 32961  005F02                     __end_of_Tmr_Tmr2Isr:
 32962                           	opt stack 0
 32963                           tosu	equ	0xFFF
 32964                           tosh	equ	0xFFE
 32965                           tosl	equ	0xFFD
 32966                           pclatu	equ	0xFFB
 32967                           pclath	equ	0xFFA
 32968                           tblptru	equ	0xFF8
 32969                           tblptrh	equ	0xFF7
 32970                           tblptrl	equ	0xFF6
 32971                           tablat	equ	0xFF5
 32972                           prodh	equ	0xFF4
 32973                           prodl	equ	0xFF3
 32974                           intcon	equ	0xFF2
 32975                           intcon2	equ	0xFF1
 32976                           intcon3	equ	0xFF0
 32977                           indf0	equ	0xFEF
 32978                           postinc0	equ	0xFEE
 32979                           plusw0	equ	0xFEB
 32980                           fsr0h	equ	0xFEA
 32981                           fsr0l	equ	0xFE9
 32982                           wreg	equ	0xFE8
 32983                           indf1	equ	0xFE7
 32984                           postinc1	equ	0xFE6
 32985                           postdec1	equ	0xFE5
 32986                           plusw1	equ	0xFE3
 32987                           fsr1h	equ	0xFE2
 32988                           fsr1l	equ	0xFE1
 32989                           bsr	equ	0xFE0
 32990                           indf2	equ	0xFDF
 32991                           postinc2	equ	0xFDE
 32992                           postdec2	equ	0xFDD
 32993                           plusw2	equ	0xFDB
 32994                           fsr2h	equ	0xFDA
 32995                           fsr2l	equ	0xFD9
 32996                           status	equ	0xFD8
 32997                           
 32998 ;; *************** function _Sch_SchmIntService *****************
 32999 ;; Defined at:
 33000 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33001 ;; Parameters:    Size  Location     Type
 33002 ;;		None
 33003 ;; Auto vars:     Size  Location     Type
 33004 ;;		None
 33005 ;; Return value:  Size  Location     Type
 33006 ;;                  1    wreg      void 
 33007 ;; Registers used:
 33008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33009 ;; Tracked objects:
 33010 ;;		On entry : 0/0
 33011 ;;		On exit  : 0/0
 33012 ;;		Unchanged: 0/0
 33013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33018 ;;Total ram usage:        0 bytes
 33019 ;; Hardware stack levels used:    1
 33020 ;; Hardware stack levels required when called:    8
 33021 ;; This function calls:
 33022 ;;		_OsAlrm_ProcessOsAlarms
 33023 ;;		_UpdateOsCounters
 33024 ;;		_UpdateSchFlag
 33025 ;; This function is called by:
 33026 ;;		_SystemInit
 33027 ;;		_Tmr_Tmr2Isr
 33028 ;; This function uses a non-reentrant model
 33029 ;;
 33030                           
 33031                           	psect	text158
 33032  0061F6                     __ptext158:
 33033                           	opt stack 0
 33034  0061F6                     _Sch_SchmIntService:
 33035                           	opt stack 8
 33036                           
 33037                           ;os_sched.c: 217: UpdateSchFlag();
 33038                           
 33039                           ;incstack = 0
 33040  0061F6  EC25  F030         	call	_UpdateSchFlag	;wreg free
 33041                           
 33042                           ;os_sched.c: 219: UpdateOsCounters();
 33043  0061FA  ECEB  F030         	call	_UpdateOsCounters	;wreg free
 33044                           
 33045                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 33046  0061FE  EC2A  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 33047  006202  0012               	return		;funcret
 33048  006204                     __end_of_Sch_SchmIntService:
 33049                           	opt stack 0
 33050                           tosu	equ	0xFFF
 33051                           tosh	equ	0xFFE
 33052                           tosl	equ	0xFFD
 33053                           pclatu	equ	0xFFB
 33054                           pclath	equ	0xFFA
 33055                           tblptru	equ	0xFF8
 33056                           tblptrh	equ	0xFF7
 33057                           tblptrl	equ	0xFF6
 33058                           tablat	equ	0xFF5
 33059                           prodh	equ	0xFF4
 33060                           prodl	equ	0xFF3
 33061                           intcon	equ	0xFF2
 33062                           intcon2	equ	0xFF1
 33063                           intcon3	equ	0xFF0
 33064                           indf0	equ	0xFEF
 33065                           postinc0	equ	0xFEE
 33066                           plusw0	equ	0xFEB
 33067                           fsr0h	equ	0xFEA
 33068                           fsr0l	equ	0xFE9
 33069                           wreg	equ	0xFE8
 33070                           indf1	equ	0xFE7
 33071                           postinc1	equ	0xFE6
 33072                           postdec1	equ	0xFE5
 33073                           plusw1	equ	0xFE3
 33074                           fsr1h	equ	0xFE2
 33075                           fsr1l	equ	0xFE1
 33076                           bsr	equ	0xFE0
 33077                           indf2	equ	0xFDF
 33078                           postinc2	equ	0xFDE
 33079                           postdec2	equ	0xFDD
 33080                           plusw2	equ	0xFDB
 33081                           fsr2h	equ	0xFDA
 33082                           fsr2l	equ	0xFD9
 33083                           status	equ	0xFD8
 33084                           
 33085 ;; *************** function _UpdateSchFlag *****************
 33086 ;; Defined at:
 33087 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33088 ;; Parameters:    Size  Location     Type
 33089 ;;		None
 33090 ;; Auto vars:     Size  Location     Type
 33091 ;;		None
 33092 ;; Return value:  Size  Location     Type
 33093 ;;                  1    wreg      void 
 33094 ;; Registers used:
 33095 ;;		wreg, status,2, status,0
 33096 ;; Tracked objects:
 33097 ;;		On entry : 0/0
 33098 ;;		On exit  : 0/0
 33099 ;;		Unchanged: 0/0
 33100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33105 ;;Total ram usage:        0 bytes
 33106 ;; Hardware stack levels used:    1
 33107 ;; Hardware stack levels required when called:    4
 33108 ;; This function calls:
 33109 ;;		Nothing
 33110 ;; This function is called by:
 33111 ;;		_Sch_SchmIntService
 33112 ;; This function uses a non-reentrant model
 33113 ;;
 33114                           
 33115                           	psect	text159
 33116  00604A                     __ptext159:
 33117                           	opt stack 0
 33118  00604A                     _UpdateSchFlag:
 33119                           	opt stack 11
 33120                           
 33121                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 33122                           ;os_sched.c: 138: InterruptCounter++;
 33123                           
 33124                           ;incstack = 0
 33125  00604A  0102               	movlb	2	; () banked
 33126  00604C  4BDB               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 33127  00604E  2BDC               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 33128                           
 33129                           ; BSR set to: 2
 33130                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 33131  006050  51DB               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 33132  006052  11DC               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 33133  006054  B4D8               	btfsc	status,2,c
 33134  006056  0012               	return	
 33135                           
 33136                           ; BSR set to: 2
 33137                           ;os_sched.c: 141: {
 33138                           ;os_sched.c: 143: InterruptCounter = 0;
 33139  006058  0E00               	movlw	0
 33140  00605A  6FDC               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 33141  00605C  0E00               	movlw	0
 33142  00605E  6FDB               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 33143                           
 33144                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 33145  006060  0E00               	movlw	0
 33146  006062  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 33147  006064  0012               	return	
 33148  006066                     __end_of_UpdateSchFlag:
 33149                           	opt stack 0
 33150                           tosu	equ	0xFFF
 33151                           tosh	equ	0xFFE
 33152                           tosl	equ	0xFFD
 33153                           pclatu	equ	0xFFB
 33154                           pclath	equ	0xFFA
 33155                           tblptru	equ	0xFF8
 33156                           tblptrh	equ	0xFF7
 33157                           tblptrl	equ	0xFF6
 33158                           tablat	equ	0xFF5
 33159                           prodh	equ	0xFF4
 33160                           prodl	equ	0xFF3
 33161                           intcon	equ	0xFF2
 33162                           intcon2	equ	0xFF1
 33163                           intcon3	equ	0xFF0
 33164                           indf0	equ	0xFEF
 33165                           postinc0	equ	0xFEE
 33166                           plusw0	equ	0xFEB
 33167                           fsr0h	equ	0xFEA
 33168                           fsr0l	equ	0xFE9
 33169                           wreg	equ	0xFE8
 33170                           indf1	equ	0xFE7
 33171                           postinc1	equ	0xFE6
 33172                           postdec1	equ	0xFE5
 33173                           plusw1	equ	0xFE3
 33174                           fsr1h	equ	0xFE2
 33175                           fsr1l	equ	0xFE1
 33176                           bsr	equ	0xFE0
 33177                           indf2	equ	0xFDF
 33178                           postinc2	equ	0xFDE
 33179                           postdec2	equ	0xFDD
 33180                           plusw2	equ	0xFDB
 33181                           fsr2h	equ	0xFDA
 33182                           fsr2l	equ	0xFD9
 33183                           status	equ	0xFD8
 33184                           
 33185 ;; *************** function _UpdateOsCounters *****************
 33186 ;; Defined at:
 33187 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33188 ;; Parameters:    Size  Location     Type
 33189 ;;		None
 33190 ;; Auto vars:     Size  Location     Type
 33191 ;;		None
 33192 ;; Return value:  Size  Location     Type
 33193 ;;                  1    wreg      void 
 33194 ;; Registers used:
 33195 ;;		wreg, status,2, status,0
 33196 ;; Tracked objects:
 33197 ;;		On entry : 0/0
 33198 ;;		On exit  : 0/0
 33199 ;;		Unchanged: 0/0
 33200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33205 ;;Total ram usage:        0 bytes
 33206 ;; Hardware stack levels used:    1
 33207 ;; Hardware stack levels required when called:    4
 33208 ;; This function calls:
 33209 ;;		Nothing
 33210 ;; This function is called by:
 33211 ;;		_Sch_SchmIntService
 33212 ;; This function uses a non-reentrant model
 33213 ;;
 33214                           
 33215                           	psect	text160
 33216  0061D6                     __ptext160:
 33217                           	opt stack 0
 33218  0061D6                     _UpdateOsCounters:
 33219                           	opt stack 11
 33220                           
 33221                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 33222                           
 33223                           ; BSR set to: 2
 33224                           ;incstack = 0
 33225  0061D6  0E01               	movlw	1
 33226  0061D8  0103               	movlb	3	; () banked
 33227  0061DA  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33228  0061DC  0E00               	movlw	0
 33229  0061DE  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33230  0061E0  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33231  0061E2  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33232                           
 33233                           ; BSR set to: 3
 33234  0061E4  0012               	return		;funcret
 33235  0061E6                     __end_of_UpdateOsCounters:
 33236                           	opt stack 0
 33237                           tosu	equ	0xFFF
 33238                           tosh	equ	0xFFE
 33239                           tosl	equ	0xFFD
 33240                           pclatu	equ	0xFFB
 33241                           pclath	equ	0xFFA
 33242                           tblptru	equ	0xFF8
 33243                           tblptrh	equ	0xFF7
 33244                           tblptrl	equ	0xFF6
 33245                           tablat	equ	0xFF5
 33246                           prodh	equ	0xFF4
 33247                           prodl	equ	0xFF3
 33248                           intcon	equ	0xFF2
 33249                           intcon2	equ	0xFF1
 33250                           intcon3	equ	0xFF0
 33251                           indf0	equ	0xFEF
 33252                           postinc0	equ	0xFEE
 33253                           plusw0	equ	0xFEB
 33254                           fsr0h	equ	0xFEA
 33255                           fsr0l	equ	0xFE9
 33256                           wreg	equ	0xFE8
 33257                           indf1	equ	0xFE7
 33258                           postinc1	equ	0xFE6
 33259                           postdec1	equ	0xFE5
 33260                           plusw1	equ	0xFE3
 33261                           fsr1h	equ	0xFE2
 33262                           fsr1l	equ	0xFE1
 33263                           bsr	equ	0xFE0
 33264                           indf2	equ	0xFDF
 33265                           postinc2	equ	0xFDE
 33266                           postdec2	equ	0xFDD
 33267                           plusw2	equ	0xFDB
 33268                           fsr2h	equ	0xFDA
 33269                           fsr2l	equ	0xFD9
 33270                           status	equ	0xFD8
 33271                           
 33272 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33273 ;; Defined at:
 33274 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33275 ;; Parameters:    Size  Location     Type
 33276 ;;		None
 33277 ;; Auto vars:     Size  Location     Type
 33278 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33279 ;; Return value:  Size  Location     Type
 33280 ;;                  1    wreg      void 
 33281 ;; Registers used:
 33282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33283 ;; Tracked objects:
 33284 ;;		On entry : 0/0
 33285 ;;		On exit  : 0/0
 33286 ;;		Unchanged: 0/0
 33287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33289 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33290 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33291 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33292 ;;Total ram usage:       10 bytes
 33293 ;; Hardware stack levels used:    1
 33294 ;; Hardware stack levels required when called:    7
 33295 ;; This function calls:
 33296 ;;		_I2cDummyTx
 33297 ;;		_OsAlrm_ClearOsAlarm
 33298 ;;		i1___wmul
 33299 ;; This function is called by:
 33300 ;;		_Sch_SchmIntService
 33301 ;; This function uses a non-reentrant model
 33302 ;;
 33303                           
 33304                           	psect	text161
 33305  002454                     __ptext161:
 33306                           	opt stack 0
 33307  002454                     _OsAlrm_ProcessOsAlarms:
 33308                           	opt stack 8
 33309                           
 33310                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 33311                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 33312                           
 33313                           ; BSR set to: 3
 33314                           ;incstack = 0
 33315  002454  0E00               	movlw	0
 33316  002456  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 33317  002458  0E00               	movlw	0
 33318  00245A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 33319  00245C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33320  00245E  E105               	bnz	i1u1442_20
 33321  002460  0E14               	movlw	20
 33322  002462  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33323  002464  B0D8               	btfsc	status,0,c
 33324  002466  0012               	return	
 33325  002468  D001               	goto	i1l742
 33326  00246A                     i1u1442_20:
 33327  00246A  0012               	return	
 33328  00246C                     i1l742:
 33329                           
 33330                           ;os_alarms.c: 121: {
 33331                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 33332  00246C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33333  002470  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33334  002474  0E00               	movlw	0
 33335  002476  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33336  002478  0E0B               	movlw	11
 33337  00247A  6E1B               	movwf	i1___wmul@multiplicand,c
 33338  00247C  EC26  F02F         	call	i1___wmul	;wreg free
 33339  002480  0E00               	movlw	low _OsAlarms
 33340  002482  2419               	addwf	?i1___wmul,w,c
 33341  002484  6ED9               	movwf	fsr2l,c
 33342  002486  0E06               	movlw	high _OsAlarms
 33343  002488  201A               	addwfc	?i1___wmul+1,w,c
 33344  00248A  6EDA               	movwf	fsr2h,c
 33345  00248C  04DE               	decf	postinc2,w,c
 33346  00248E  A4D8               	btfss	status,2,c
 33347  002490  D086               	goto	i1u1446_29
 33348                           
 33349                           ;os_alarms.c: 124: {
 33350                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 33351  002492  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33352  002496  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33353  00249A  0E00               	movlw	0
 33354  00249C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33355  00249E  0E0B               	movlw	11
 33356  0024A0  6E1B               	movwf	i1___wmul@multiplicand,c
 33357  0024A2  EC26  F02F         	call	i1___wmul	;wreg free
 33358  0024A6  0E01               	movlw	1
 33359  0024A8  2619               	addwf	?i1___wmul,f,c
 33360  0024AA  0E00               	movlw	0
 33361  0024AC  221A               	addwfc	?i1___wmul+1,f,c
 33362  0024AE  0E00               	movlw	low _OsAlarms
 33363  0024B0  2419               	addwf	?i1___wmul,w,c
 33364  0024B2  6ED9               	movwf	fsr2l,c
 33365  0024B4  0E06               	movlw	high _OsAlarms
 33366  0024B6  201A               	addwfc	?i1___wmul+1,w,c
 33367  0024B8  6EDA               	movwf	fsr2h,c
 33368  0024BA  2ADE               	incf	postinc2,f,c
 33369  0024BC  0E00               	movlw	0
 33370  0024BE  22DE               	addwfc	postinc2,f,c
 33371  0024C0  22DE               	addwfc	postinc2,f,c
 33372  0024C2  22DE               	addwfc	postinc2,f,c
 33373                           
 33374                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 33375  0024C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33376  0024C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33377  0024CC  0E00               	movlw	0
 33378  0024CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33379  0024D0  0E0B               	movlw	11
 33380  0024D2  6E1B               	movwf	i1___wmul@multiplicand,c
 33381  0024D4  EC26  F02F         	call	i1___wmul	;wreg free
 33382  0024D8  0E05               	movlw	5
 33383  0024DA  2619               	addwf	?i1___wmul,f,c
 33384  0024DC  0E00               	movlw	0
 33385  0024DE  221A               	addwfc	?i1___wmul+1,f,c
 33386  0024E0  0E00               	movlw	low _OsAlarms
 33387  0024E2  2419               	addwf	?i1___wmul,w,c
 33388  0024E4  6ED9               	movwf	fsr2l,c
 33389  0024E6  0E06               	movlw	high _OsAlarms
 33390  0024E8  201A               	addwfc	?i1___wmul+1,w,c
 33391  0024EA  6EDA               	movwf	fsr2h,c
 33392  0024EC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33393  0024F0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33394  0024F4  0E00               	movlw	0
 33395  0024F6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33396  0024F8  0E0B               	movlw	11
 33397  0024FA  6E1B               	movwf	i1___wmul@multiplicand,c
 33398  0024FC  EC26  F02F         	call	i1___wmul	;wreg free
 33399  002500  0E01               	movlw	1
 33400  002502  2619               	addwf	?i1___wmul,f,c
 33401  002504  0E00               	movlw	0
 33402  002506  221A               	addwfc	?i1___wmul+1,f,c
 33403  002508  0E00               	movlw	low _OsAlarms
 33404  00250A  2419               	addwf	?i1___wmul,w,c
 33405  00250C  6EE1               	movwf	fsr1l,c
 33406  00250E  0E06               	movlw	high _OsAlarms
 33407  002510  201A               	addwfc	?i1___wmul+1,w,c
 33408  002512  6EE2               	movwf	fsr1h,c
 33409  002514  50DE               	movf	postinc2,w,c
 33410  002516  5CE6               	subwf	postinc1,w,c
 33411  002518  50DE               	movf	postinc2,w,c
 33412  00251A  58E6               	subwfb	postinc1,w,c
 33413  00251C  50DE               	movf	postinc2,w,c
 33414  00251E  58E6               	subwfb	postinc1,w,c
 33415  002520  50DE               	movf	postinc2,w,c
 33416  002522  58E6               	subwfb	postinc1,w,c
 33417  002524  A0D8               	btfss	status,0,c
 33418  002526  D03B               	goto	i1u1446_29
 33419                           
 33420                           ;os_alarms.c: 129: {
 33421                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 33422  002528  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33423  00252A  EC8F  F029         	call	_OsAlrm_ClearOsAlarm
 33424                           
 33425                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 33426  00252E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33427  002532  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33428  002536  0E00               	movlw	0
 33429  002538  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33430  00253A  0E0B               	movlw	11
 33431  00253C  6E1B               	movwf	i1___wmul@multiplicand,c
 33432  00253E  EC26  F02F         	call	i1___wmul	;wreg free
 33433  002542  0E09               	movlw	9
 33434  002544  2619               	addwf	?i1___wmul,f,c
 33435  002546  0E00               	movlw	0
 33436  002548  221A               	addwfc	?i1___wmul+1,f,c
 33437  00254A  0E00               	movlw	low _OsAlarms
 33438  00254C  2419               	addwf	?i1___wmul,w,c
 33439  00254E  6ED9               	movwf	fsr2l,c
 33440  002550  0E06               	movlw	high _OsAlarms
 33441  002552  201A               	addwfc	?i1___wmul+1,w,c
 33442  002554  6EDA               	movwf	fsr2h,c
 33443  002556  50DE               	movf	postinc2,w,c
 33444  002558  10DE               	iorwf	postinc2,w,c
 33445  00255A  B4D8               	btfsc	status,2,c
 33446  00255C  D020               	goto	i1u1446_29
 33447                           
 33448                           ;os_alarms.c: 134: {
 33449                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 33450  00255E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33451  002562  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33452  002566  0E00               	movlw	0
 33453  002568  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33454  00256A  0E0B               	movlw	11
 33455  00256C  6E1B               	movwf	i1___wmul@multiplicand,c
 33456  00256E  EC26  F02F         	call	i1___wmul	;wreg free
 33457  002572  0E09               	movlw	9
 33458  002574  2619               	addwf	?i1___wmul,f,c
 33459  002576  0E00               	movlw	0
 33460  002578  221A               	addwfc	?i1___wmul+1,f,c
 33461  00257A  0E00               	movlw	low _OsAlarms
 33462  00257C  2419               	addwf	?i1___wmul,w,c
 33463  00257E  6ED9               	movwf	fsr2l,c
 33464  002580  0E06               	movlw	high _OsAlarms
 33465  002582  201A               	addwfc	?i1___wmul+1,w,c
 33466  002584  6EDA               	movwf	fsr2h,c
 33467  002586  D801               	call	i1u1446_28
 33468  002588  D00A               	goto	i1u1446_29
 33469  00258A                     i1u1446_28:
 33470  00258A  0005               	push	
 33471  00258C  6EFA               	movwf	pclath,c
 33472  00258E  50DE               	movf	postinc2,w,c
 33473  002590  6EFD               	movwf	tosl,c
 33474  002592  50DE               	movf	postinc2,w,c
 33475  002594  6EFE               	movwf	tosh,c
 33476  002596  50F8               	movf	tblptru,w,c
 33477  002598  6EFF               	movwf	tosu,c
 33478  00259A  50FA               	movf	pclath,w,c
 33479  00259C  0012               	return		;indir
 33480  00259E                     i1u1446_29:
 33481  00259E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 33482  0025A0  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 33483  0025A2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33484  0025A4  E101               	bnz	i1l747
 33485  0025A6  D75C               	goto	L68
 33486  0025A8                     i1l747:
 33487  0025A8  0012               	return		;funcret
 33488  0025AA                     __end_of_OsAlrm_ProcessOsAlarms:
 33489                           	opt stack 0
 33490                           tosu	equ	0xFFF
 33491                           tosh	equ	0xFFE
 33492                           tosl	equ	0xFFD
 33493                           pclatu	equ	0xFFB
 33494                           pclath	equ	0xFFA
 33495                           tblptru	equ	0xFF8
 33496                           tblptrh	equ	0xFF7
 33497                           tblptrl	equ	0xFF6
 33498                           tablat	equ	0xFF5
 33499                           prodh	equ	0xFF4
 33500                           prodl	equ	0xFF3
 33501                           intcon	equ	0xFF2
 33502                           intcon2	equ	0xFF1
 33503                           intcon3	equ	0xFF0
 33504                           indf0	equ	0xFEF
 33505                           postinc0	equ	0xFEE
 33506                           plusw0	equ	0xFEB
 33507                           fsr0h	equ	0xFEA
 33508                           fsr0l	equ	0xFE9
 33509                           wreg	equ	0xFE8
 33510                           indf1	equ	0xFE7
 33511                           postinc1	equ	0xFE6
 33512                           postdec1	equ	0xFE5
 33513                           plusw1	equ	0xFE3
 33514                           fsr1h	equ	0xFE2
 33515                           fsr1l	equ	0xFE1
 33516                           bsr	equ	0xFE0
 33517                           indf2	equ	0xFDF
 33518                           postinc2	equ	0xFDE
 33519                           postdec2	equ	0xFDD
 33520                           plusw2	equ	0xFDB
 33521                           fsr2h	equ	0xFDA
 33522                           fsr2l	equ	0xFD9
 33523                           status	equ	0xFD8
 33524                           
 33525 ;; *************** function i1___wmul *****************
 33526 ;; Defined at:
 33527 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33528 ;; Parameters:    Size  Location     Type
 33529 ;;  multiplier      2   24[COMRAM] unsigned int 
 33530 ;;  multiplicand    2   26[COMRAM] unsigned int 
 33531 ;; Auto vars:     Size  Location     Type
 33532 ;;  __wmul          2   28[COMRAM] unsigned int 
 33533 ;; Return value:  Size  Location     Type
 33534 ;;                  2   24[COMRAM] unsigned int 
 33535 ;; Registers used:
 33536 ;;		wreg, status,2, status,0, prodl, prodh
 33537 ;; Tracked objects:
 33538 ;;		On entry : 0/0
 33539 ;;		On exit  : 0/0
 33540 ;;		Unchanged: 0/0
 33541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33545 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33546 ;;Total ram usage:        6 bytes
 33547 ;; Hardware stack levels used:    1
 33548 ;; Hardware stack levels required when called:    4
 33549 ;; This function calls:
 33550 ;;		Nothing
 33551 ;; This function is called by:
 33552 ;;		_OsAlrm_ProcessOsAlarms
 33553 ;; This function uses a non-reentrant model
 33554 ;;
 33555                           
 33556                           	psect	text162
 33557  005E4C                     __ptext162:
 33558                           	opt stack 0
 33559  005E4C                     i1___wmul:
 33560                           	opt stack 10
 33561                           
 33562                           ;incstack = 0
 33563  005E4C  5019               	movf	i1___wmul@multiplier,w,c
 33564  005E4E  021B               	mulwf	i1___wmul@multiplicand,c
 33565  005E50  CFF3 F01D          	movff	prodl,i1___wmul@product
 33566  005E54  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 33567  005E58  5019               	movf	i1___wmul@multiplier,w,c
 33568  005E5A  021C               	mulwf	i1___wmul@multiplicand+1,c
 33569  005E5C  50F3               	movf	prodl,w,c
 33570  005E5E  261E               	addwf	i1___wmul@product+1,f,c
 33571  005E60  501A               	movf	i1___wmul@multiplier+1,w,c
 33572  005E62  021B               	mulwf	i1___wmul@multiplicand,c
 33573  005E64  50F3               	movf	prodl,w,c
 33574  005E66  261E               	addwf	i1___wmul@product+1,f,c
 33575  005E68  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33576  005E6C  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33577  005E70  0012               	return	
 33578  005E72                     __end_ofi1___wmul:
 33579                           	opt stack 0
 33580                           tosu	equ	0xFFF
 33581                           tosh	equ	0xFFE
 33582                           tosl	equ	0xFFD
 33583                           pclatu	equ	0xFFB
 33584                           pclath	equ	0xFFA
 33585                           tblptru	equ	0xFF8
 33586                           tblptrh	equ	0xFF7
 33587                           tblptrl	equ	0xFF6
 33588                           tablat	equ	0xFF5
 33589                           prodh	equ	0xFF4
 33590                           prodl	equ	0xFF3
 33591                           intcon	equ	0xFF2
 33592                           intcon2	equ	0xFF1
 33593                           intcon3	equ	0xFF0
 33594                           indf0	equ	0xFEF
 33595                           postinc0	equ	0xFEE
 33596                           plusw0	equ	0xFEB
 33597                           fsr0h	equ	0xFEA
 33598                           fsr0l	equ	0xFE9
 33599                           wreg	equ	0xFE8
 33600                           indf1	equ	0xFE7
 33601                           postinc1	equ	0xFE6
 33602                           postdec1	equ	0xFE5
 33603                           plusw1	equ	0xFE3
 33604                           fsr1h	equ	0xFE2
 33605                           fsr1l	equ	0xFE1
 33606                           bsr	equ	0xFE0
 33607                           indf2	equ	0xFDF
 33608                           postinc2	equ	0xFDE
 33609                           postdec2	equ	0xFDD
 33610                           plusw2	equ	0xFDB
 33611                           fsr2h	equ	0xFDA
 33612                           fsr2l	equ	0xFD9
 33613                           status	equ	0xFD8
 33614                           
 33615 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33616 ;; Defined at:
 33617 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33618 ;; Parameters:    Size  Location     Type
 33619 ;;  OsAlarmId       1    wreg     unsigned char 
 33620 ;; Auto vars:     Size  Location     Type
 33621 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33622 ;; Return value:  Size  Location     Type
 33623 ;;                  1    wreg      void 
 33624 ;; Registers used:
 33625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33626 ;; Tracked objects:
 33627 ;;		On entry : 0/0
 33628 ;;		On exit  : 0/0
 33629 ;;		Unchanged: 0/0
 33630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33635 ;;Total ram usage:        1 bytes
 33636 ;; Hardware stack levels used:    1
 33637 ;; Hardware stack levels required when called:    4
 33638 ;; This function calls:
 33639 ;;		Nothing
 33640 ;; This function is called by:
 33641 ;;		_OsAlrm_ProcessOsAlarms
 33642 ;; This function uses a non-reentrant model
 33643 ;;
 33644                           
 33645                           	psect	text163
 33646  00531E                     __ptext163:
 33647                           	opt stack 0
 33648  00531E                     _OsAlrm_ClearOsAlarm:
 33649                           	opt stack 10
 33650                           
 33651                           ;incstack = 0
 33652                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33653  00531E  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33654                           
 33655                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33656  005320  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33657  005322  0D0B               	mullw	11
 33658  005324  0E00               	movlw	low _OsAlarms
 33659  005326  24F3               	addwf	prodl,w,c
 33660  005328  6ED9               	movwf	fsr2l,c
 33661  00532A  0E06               	movlw	high _OsAlarms
 33662  00532C  20F4               	addwfc	prodh,w,c
 33663  00532E  6EDA               	movwf	fsr2h,c
 33664  005330  0E00               	movlw	0
 33665  005332  6EDF               	movwf	indf2,c
 33666                           
 33667                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33668  005334  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33669  005336  0D0B               	mullw	11
 33670  005338  0E01               	movlw	1
 33671  00533A  26F3               	addwf	prodl,f,c
 33672  00533C  0E00               	movlw	0
 33673  00533E  22F4               	addwfc	prodh,f,c
 33674  005340  0E00               	movlw	low _OsAlarms
 33675  005342  24F3               	addwf	prodl,w,c
 33676  005344  6ED9               	movwf	fsr2l,c
 33677  005346  0E06               	movlw	high _OsAlarms
 33678  005348  20F4               	addwfc	prodh,w,c
 33679  00534A  6EDA               	movwf	fsr2h,c
 33680  00534C  6ADE               	clrf	postinc2,c
 33681  00534E  6ADE               	clrf	postinc2,c
 33682  005350  6ADE               	clrf	postinc2,c
 33683  005352  6ADD               	clrf	postdec2,c
 33684                           
 33685                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33686  005354  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33687  005356  0D0B               	mullw	11
 33688  005358  0E05               	movlw	5
 33689  00535A  26F3               	addwf	prodl,f,c
 33690  00535C  0E00               	movlw	0
 33691  00535E  22F4               	addwfc	prodh,f,c
 33692  005360  0E00               	movlw	low _OsAlarms
 33693  005362  24F3               	addwf	prodl,w,c
 33694  005364  6ED9               	movwf	fsr2l,c
 33695  005366  0E06               	movlw	high _OsAlarms
 33696  005368  20F4               	addwfc	prodh,w,c
 33697  00536A  6EDA               	movwf	fsr2h,c
 33698  00536C  6ADE               	clrf	postinc2,c
 33699  00536E  6ADE               	clrf	postinc2,c
 33700  005370  6ADE               	clrf	postinc2,c
 33701  005372  6ADD               	clrf	postdec2,c
 33702  005374  0012               	return		;funcret
 33703  005376                     __end_of_OsAlrm_ClearOsAlarm:
 33704                           	opt stack 0
 33705                           tosu	equ	0xFFF
 33706                           tosh	equ	0xFFE
 33707                           tosl	equ	0xFFD
 33708                           pclatu	equ	0xFFB
 33709                           pclath	equ	0xFFA
 33710                           tblptru	equ	0xFF8
 33711                           tblptrh	equ	0xFF7
 33712                           tblptrl	equ	0xFF6
 33713                           tablat	equ	0xFF5
 33714                           prodh	equ	0xFF4
 33715                           prodl	equ	0xFF3
 33716                           intcon	equ	0xFF2
 33717                           intcon2	equ	0xFF1
 33718                           intcon3	equ	0xFF0
 33719                           indf0	equ	0xFEF
 33720                           postinc0	equ	0xFEE
 33721                           plusw0	equ	0xFEB
 33722                           fsr0h	equ	0xFEA
 33723                           fsr0l	equ	0xFE9
 33724                           wreg	equ	0xFE8
 33725                           indf1	equ	0xFE7
 33726                           postinc1	equ	0xFE6
 33727                           postdec1	equ	0xFE5
 33728                           plusw1	equ	0xFE3
 33729                           fsr1h	equ	0xFE2
 33730                           fsr1l	equ	0xFE1
 33731                           bsr	equ	0xFE0
 33732                           indf2	equ	0xFDF
 33733                           postinc2	equ	0xFDE
 33734                           postdec2	equ	0xFDD
 33735                           plusw2	equ	0xFDB
 33736                           fsr2h	equ	0xFDA
 33737                           fsr2l	equ	0xFD9
 33738                           status	equ	0xFD8
 33739                           
 33740 ;; *************** function _I2cDummyTx *****************
 33741 ;; Defined at:
 33742 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33743 ;; Parameters:    Size  Location     Type
 33744 ;;		None
 33745 ;; Auto vars:     Size  Location     Type
 33746 ;;		None
 33747 ;; Return value:  Size  Location     Type
 33748 ;;                  1    wreg      void 
 33749 ;; Registers used:
 33750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33751 ;; Tracked objects:
 33752 ;;		On entry : 0/0
 33753 ;;		On exit  : 0/0
 33754 ;;		Unchanged: 0/0
 33755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33760 ;;Total ram usage:        0 bytes
 33761 ;; Hardware stack levels used:    1
 33762 ;; Hardware stack levels required when called:    6
 33763 ;; This function calls:
 33764 ;;		i1_I2cSlv_SendI2cMsg
 33765 ;; This function is called by:
 33766 ;;		_I2cSlv_MainTask
 33767 ;;		_OsAlrm_ProcessOsAlarms
 33768 ;; This function uses a non-reentrant model
 33769 ;;
 33770                           
 33771                           	psect	text164
 33772  006066                     __ptext164:
 33773                           	opt stack 0
 33774  006066                     _I2cDummyTx:
 33775                           	opt stack 8
 33776                           
 33777                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 33778                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 33779                           
 33780                           ;incstack = 0
 33781  006066  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 33782  006068  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 33783  00606A  0E01               	movlw	high I2cDummyTx@DummyBuffer
 33784  00606C  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 33785  00606E  0E00               	movlw	0
 33786  006070  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 33787  006072  0E01               	movlw	1
 33788  006074  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 33789  006076  ECA5  F02D         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 33790                           
 33791                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 33792  00607A  0E01               	movlw	1
 33793  00607C  0101               	movlb	1	; () banked
 33794  00607E  6FE7               	movwf	_I2cBusStatus& (0+255),b
 33795                           
 33796                           ; BSR set to: 1
 33797  006080  0012               	return		;funcret
 33798  006082                     __end_of_I2cDummyTx:
 33799                           	opt stack 0
 33800                           tosu	equ	0xFFF
 33801                           tosh	equ	0xFFE
 33802                           tosl	equ	0xFFD
 33803                           pclatu	equ	0xFFB
 33804                           pclath	equ	0xFFA
 33805                           tblptru	equ	0xFF8
 33806                           tblptrh	equ	0xFF7
 33807                           tblptrl	equ	0xFF6
 33808                           tablat	equ	0xFF5
 33809                           prodh	equ	0xFF4
 33810                           prodl	equ	0xFF3
 33811                           intcon	equ	0xFF2
 33812                           intcon2	equ	0xFF1
 33813                           intcon3	equ	0xFF0
 33814                           indf0	equ	0xFEF
 33815                           postinc0	equ	0xFEE
 33816                           plusw0	equ	0xFEB
 33817                           fsr0h	equ	0xFEA
 33818                           fsr0l	equ	0xFE9
 33819                           wreg	equ	0xFE8
 33820                           indf1	equ	0xFE7
 33821                           postinc1	equ	0xFE6
 33822                           postdec1	equ	0xFE5
 33823                           plusw1	equ	0xFE3
 33824                           fsr1h	equ	0xFE2
 33825                           fsr1l	equ	0xFE1
 33826                           bsr	equ	0xFE0
 33827                           indf2	equ	0xFDF
 33828                           postinc2	equ	0xFDE
 33829                           postdec2	equ	0xFDD
 33830                           plusw2	equ	0xFDB
 33831                           fsr2h	equ	0xFDA
 33832                           fsr2l	equ	0xFD9
 33833                           status	equ	0xFD8
 33834                           
 33835 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 33836 ;; Defined at:
 33837 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33838 ;; Parameters:    Size  Location     Type
 33839 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 33840 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 33841 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 33842 ;;  DataLenght      1   30[COMRAM] unsigned char 
 33843 ;; Auto vars:     Size  Location     Type
 33844 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 33845 ;; Return value:  Size  Location     Type
 33846 ;;                  1    wreg      unsigned char 
 33847 ;; Registers used:
 33848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33849 ;; Tracked objects:
 33850 ;;		On entry : 0/0
 33851 ;;		On exit  : 0/0
 33852 ;;		Unchanged: 0/0
 33853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33857 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33858 ;;Total ram usage:        5 bytes
 33859 ;; Hardware stack levels used:    1
 33860 ;; Hardware stack levels required when called:    5
 33861 ;; This function calls:
 33862 ;;		i1_GenerateEvt
 33863 ;; This function is called by:
 33864 ;;		_I2cDummyTx
 33865 ;; This function uses a non-reentrant model
 33866 ;;
 33867                           
 33868                           	psect	text165
 33869  005B4A                     __ptext165:
 33870                           	opt stack 0
 33871  005B4A                     i1_I2cSlv_SendI2cMsg:
 33872                           	opt stack 8
 33873                           
 33874                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 33875                           
 33876                           ; BSR set to: 1
 33877                           ;incstack = 0
 33878  005B4A  0E00               	movlw	0
 33879  005B4C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33880                           
 33881                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 33882  005B4E  0100               	movlb	0	; () banked
 33883  005B50  05D1               	decf	_I2cComSts& (0+255),w,b
 33884  005B52  B4D8               	btfsc	status,2,c
 33885  005B54  D014               	goto	i1l1409
 33886                           
 33887                           ; BSR set to: 0
 33888                           ;i2c_slv.c: 257: {
 33889                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 33890  005B56  C01E  F3A2         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 33891                           
 33892                           ; BSR set to: 0
 33893                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 33894  005B5A  0E00               	movlw	0
 33895  005B5C  0103               	movlb	3	; () banked
 33896  005B5E  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 33897                           
 33898                           ; BSR set to: 3
 33899                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 33900  005B60  C01F  F3A6         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 33901                           
 33902                           ; BSR set to: 3
 33903                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 33904  005B64  C01C  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 33905  005B68  C01D  F3A5         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 33906                           
 33907                           ; BSR set to: 3
 33908                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 33909  005B6C  0ED9               	movlw	low _I2cWriteDataEvt
 33910  005B6E  6E19               	movwf	i1GenerateEvt@Event,c
 33911  005B70  0E00               	movlw	high _I2cWriteDataEvt
 33912  005B72  6E1A               	movwf	i1GenerateEvt@Event+1,c
 33913  005B74  ECA1  F030         	call	i1_GenerateEvt	;wreg free
 33914                           
 33915                           ;i2c_slv.c: 267: TxSts = 1u;
 33916  005B78  0E01               	movlw	1
 33917  005B7A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33918                           
 33919                           ;i2c_slv.c: 268: }
 33920  005B7C  0012               	return	
 33921  005B7E                     i1l1409:
 33922                           
 33923                           ;i2c_slv.c: 269: else
 33924                           ;i2c_slv.c: 270: {
 33925                           ;i2c_slv.c: 272: TxSts = 0u;
 33926  005B7E  0E00               	movlw	0
 33927  005B80  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 33928  005B82  0012               	return	
 33929  005B84                     __end_ofi1_I2cSlv_SendI2cMsg:
 33930                           	opt stack 0
 33931                           tosu	equ	0xFFF
 33932                           tosh	equ	0xFFE
 33933                           tosl	equ	0xFFD
 33934                           pclatu	equ	0xFFB
 33935                           pclath	equ	0xFFA
 33936                           tblptru	equ	0xFF8
 33937                           tblptrh	equ	0xFF7
 33938                           tblptrl	equ	0xFF6
 33939                           tablat	equ	0xFF5
 33940                           prodh	equ	0xFF4
 33941                           prodl	equ	0xFF3
 33942                           intcon	equ	0xFF2
 33943                           intcon2	equ	0xFF1
 33944                           intcon3	equ	0xFF0
 33945                           indf0	equ	0xFEF
 33946                           postinc0	equ	0xFEE
 33947                           plusw0	equ	0xFEB
 33948                           fsr0h	equ	0xFEA
 33949                           fsr0l	equ	0xFE9
 33950                           wreg	equ	0xFE8
 33951                           indf1	equ	0xFE7
 33952                           postinc1	equ	0xFE6
 33953                           postdec1	equ	0xFE5
 33954                           plusw1	equ	0xFE3
 33955                           fsr1h	equ	0xFE2
 33956                           fsr1l	equ	0xFE1
 33957                           bsr	equ	0xFE0
 33958                           indf2	equ	0xFDF
 33959                           postinc2	equ	0xFDE
 33960                           postdec2	equ	0xFDD
 33961                           plusw2	equ	0xFDB
 33962                           fsr2h	equ	0xFDA
 33963                           fsr2l	equ	0xFD9
 33964                           status	equ	0xFD8
 33965                           
 33966 ;; *************** function i1_GenerateEvt *****************
 33967 ;; Defined at:
 33968 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33969 ;; Parameters:    Size  Location     Type
 33970 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 33971 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33972 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33973 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 33974 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 33975 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33976 ;; Auto vars:     Size  Location     Type
 33977 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 33978 ;; Return value:  Size  Location     Type
 33979 ;;                  1    wreg      enum E7699
 33980 ;; Registers used:
 33981 ;;		wreg, fsr2l, fsr2h, status,2
 33982 ;; Tracked objects:
 33983 ;;		On entry : 0/0
 33984 ;;		On exit  : 0/0
 33985 ;;		Unchanged: 0/0
 33986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33990 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33991 ;;Total ram usage:        3 bytes
 33992 ;; Hardware stack levels used:    1
 33993 ;; Hardware stack levels required when called:    4
 33994 ;; This function calls:
 33995 ;;		Nothing
 33996 ;; This function is called by:
 33997 ;;		i1_I2cSlv_SendI2cMsg
 33998 ;; This function uses a non-reentrant model
 33999 ;;
 34000                           
 34001                           	psect	text166
 34002  006142                     __ptext166:
 34003                           	opt stack 0
 34004  006142                     i1_GenerateEvt:
 34005                           	opt stack 8
 34006                           
 34007                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34008                           
 34009                           ;incstack = 0
 34010  006142  0E00               	movlw	0
 34011  006144  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34012                           
 34013                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34014  006146  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 34015  00614A  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 34016  00614E  0E02               	movlw	2
 34017  006150  6EDF               	movwf	indf2,c
 34018                           
 34019                           ;os_ser.c: 83: EventStatus = EventSent;
 34020  006152  0E02               	movlw	2
 34021  006154  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34022  006156  0012               	return	
 34023  006158                     __end_ofi1_GenerateEvt:
 34024                           	opt stack 0
 34025                           tosu	equ	0xFFF
 34026                           tosh	equ	0xFFE
 34027                           tosl	equ	0xFFD
 34028                           pclatu	equ	0xFFB
 34029                           pclath	equ	0xFFA
 34030                           tblptru	equ	0xFF8
 34031                           tblptrh	equ	0xFF7
 34032                           tblptrl	equ	0xFF6
 34033                           tablat	equ	0xFF5
 34034                           prodh	equ	0xFF4
 34035                           prodl	equ	0xFF3
 34036                           intcon	equ	0xFF2
 34037                           intcon2	equ	0xFF1
 34038                           intcon3	equ	0xFF0
 34039                           indf0	equ	0xFEF
 34040                           postinc0	equ	0xFEE
 34041                           plusw0	equ	0xFEB
 34042                           fsr0h	equ	0xFEA
 34043                           fsr0l	equ	0xFE9
 34044                           wreg	equ	0xFE8
 34045                           indf1	equ	0xFE7
 34046                           postinc1	equ	0xFE6
 34047                           postdec1	equ	0xFE5
 34048                           plusw1	equ	0xFE3
 34049                           fsr1h	equ	0xFE2
 34050                           fsr1l	equ	0xFE1
 34051                           bsr	equ	0xFE0
 34052                           indf2	equ	0xFDF
 34053                           postinc2	equ	0xFDE
 34054                           postdec2	equ	0xFDD
 34055                           plusw2	equ	0xFDB
 34056                           fsr2h	equ	0xFDA
 34057                           fsr2l	equ	0xFD9
 34058                           status	equ	0xFD8
 34059                           
 34060 ;; *************** function _HighPriorityIsr *****************
 34061 ;; Defined at:
 34062 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34063 ;; Parameters:    Size  Location     Type
 34064 ;;		None
 34065 ;; Auto vars:     Size  Location     Type
 34066 ;;		None
 34067 ;; Return value:  Size  Location     Type
 34068 ;;                  1    wreg      void 
 34069 ;; Registers used:
 34070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34071 ;; Tracked objects:
 34072 ;;		On entry : 0/0
 34073 ;;		On exit  : 0/0
 34074 ;;		Unchanged: 0/0
 34075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34078 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34079 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34080 ;;Total ram usage:       18 bytes
 34081 ;; Hardware stack levels used:    1
 34082 ;; Hardware stack levels required when called:    3
 34083 ;; This function calls:
 34084 ;;		_Mcu_Int0Isr
 34085 ;;		_Mcu_Int1Isr
 34086 ;;		_Rtcc_RtcIsr
 34087 ;;		_Uart_Uart1RxIsr
 34088 ;; This function is called by:
 34089 ;;		Interrupt level 2
 34090 ;; This function uses a non-reentrant model
 34091 ;;
 34092                           
 34093                           	psect	intcode
 34094  000008                     __pintcode:
 34095                           	opt stack 0
 34096  000008                     _HighPriorityIsr:
 34097                           	opt stack 8
 34098                           
 34099                           ;incstack = 0
 34100  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34101  00000A  EFF1  F020         	goto	int_func
 34102                           tosu	equ	0xFFF
 34103                           tosh	equ	0xFFE
 34104                           tosl	equ	0xFFD
 34105                           pclatu	equ	0xFFB
 34106                           pclath	equ	0xFFA
 34107                           tblptru	equ	0xFF8
 34108                           tblptrh	equ	0xFF7
 34109                           tblptrl	equ	0xFF6
 34110                           tablat	equ	0xFF5
 34111                           prodh	equ	0xFF4
 34112                           prodl	equ	0xFF3
 34113                           intcon	equ	0xFF2
 34114                           intcon2	equ	0xFF1
 34115                           intcon3	equ	0xFF0
 34116                           indf0	equ	0xFEF
 34117                           postinc0	equ	0xFEE
 34118                           plusw0	equ	0xFEB
 34119                           fsr0h	equ	0xFEA
 34120                           fsr0l	equ	0xFE9
 34121                           wreg	equ	0xFE8
 34122                           indf1	equ	0xFE7
 34123                           postinc1	equ	0xFE6
 34124                           postdec1	equ	0xFE5
 34125                           plusw1	equ	0xFE3
 34126                           fsr1h	equ	0xFE2
 34127                           fsr1l	equ	0xFE1
 34128                           bsr	equ	0xFE0
 34129                           indf2	equ	0xFDF
 34130                           postinc2	equ	0xFDE
 34131                           postdec2	equ	0xFDD
 34132                           plusw2	equ	0xFDB
 34133                           fsr2h	equ	0xFDA
 34134                           fsr2l	equ	0xFD9
 34135                           status	equ	0xFD8
 34136                           
 34137                           	psect	intcode_body
 34138  0041E2                     __pintcode_body:
 34139                           	opt stack 8
 34140  0041E2                     int_func:
 34141                           	opt stack 8
 34142  0041E2  CFFA F007          	movff	pclath,??_HighPriorityIsr
 34143  0041E6  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 34144  0041EA  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 34145  0041EE  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 34146  0041F2  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 34147  0041F6  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 34148  0041FA  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 34149  0041FE  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 34150  004202  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 34151  004206  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 34152  00420A  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 34153  00420E  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 34154  004212  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 34155  004216  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 34156  00421A  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 34157  00421E  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 34158  004222  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 34159  004226  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 34160                           
 34161                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 34162  00422A  B2F2               	btfsc	intcon,1,c	;volatile
 34163                           
 34164                           ;irq.c: 158: {
 34165                           ;irq.c: 160: Mcu_Int0Isr();
 34166  00422C  EC3E  F031         	call	_Mcu_Int0Isr	;wreg free
 34167                           
 34168                           ;irq.c: 161: }
 34169                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 34170  004230  B0F0               	btfsc	intcon3,0,c	;volatile
 34171                           
 34172                           ;irq.c: 167: {
 34173                           ;irq.c: 169: Mcu_Int1Isr();
 34174  004232  EC3C  F031         	call	_Mcu_Int1Isr	;wreg free
 34175                           
 34176                           ;irq.c: 170: }
 34177                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 34178  004236  B0A4               	btfsc	4004,0,c	;volatile
 34179                           
 34180                           ;irq.c: 203: {
 34181                           ;irq.c: 205: Rtcc_RtcIsr();
 34182  004238  EC3A  F031         	call	_Rtcc_RtcIsr	;wreg free
 34183                           
 34184                           ;irq.c: 206: }
 34185                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 34186  00423C  BA9E               	btfsc	3998,5,c	;volatile
 34187                           
 34188                           ;irq.c: 212: {
 34189                           ;irq.c: 214: Uart_Uart1RxIsr();
 34190  00423E  ECF3  F030         	call	_Uart_Uart1RxIsr	;wreg free
 34191  004242  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 34192  004246  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 34193  00424A  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 34194  00424E  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 34195  004252  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 34196  004256  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 34197  00425A  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 34198  00425E  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 34199  004262  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 34200  004266  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 34201  00426A  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 34202  00426E  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 34203  004272  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 34204  004276  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 34205  00427A  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 34206  00427E  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 34207  004282  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 34208  004286  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 34209  00428A  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34210  00428C  0011               	retfie		f
 34211  00428E                     __end_of_HighPriorityIsr:
 34212                           	opt stack 0
 34213                           tosu	equ	0xFFF
 34214                           tosh	equ	0xFFE
 34215                           tosl	equ	0xFFD
 34216                           pclatu	equ	0xFFB
 34217                           pclath	equ	0xFFA
 34218                           tblptru	equ	0xFF8
 34219                           tblptrh	equ	0xFF7
 34220                           tblptrl	equ	0xFF6
 34221                           tablat	equ	0xFF5
 34222                           prodh	equ	0xFF4
 34223                           prodl	equ	0xFF3
 34224                           intcon	equ	0xFF2
 34225                           intcon2	equ	0xFF1
 34226                           intcon3	equ	0xFF0
 34227                           indf0	equ	0xFEF
 34228                           postinc0	equ	0xFEE
 34229                           plusw0	equ	0xFEB
 34230                           fsr0h	equ	0xFEA
 34231                           fsr0l	equ	0xFE9
 34232                           wreg	equ	0xFE8
 34233                           indf1	equ	0xFE7
 34234                           postinc1	equ	0xFE6
 34235                           postdec1	equ	0xFE5
 34236                           plusw1	equ	0xFE3
 34237                           fsr1h	equ	0xFE2
 34238                           fsr1l	equ	0xFE1
 34239                           bsr	equ	0xFE0
 34240                           indf2	equ	0xFDF
 34241                           postinc2	equ	0xFDE
 34242                           postdec2	equ	0xFDD
 34243                           plusw2	equ	0xFDB
 34244                           fsr2h	equ	0xFDA
 34245                           fsr2l	equ	0xFD9
 34246                           status	equ	0xFD8
 34247                           
 34248 ;; *************** function _Uart_Uart1RxIsr *****************
 34249 ;; Defined at:
 34250 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34251 ;; Parameters:    Size  Location     Type
 34252 ;;		None
 34253 ;; Auto vars:     Size  Location     Type
 34254 ;;		None
 34255 ;; Return value:  Size  Location     Type
 34256 ;;                  1    wreg      void 
 34257 ;; Registers used:
 34258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34259 ;; Tracked objects:
 34260 ;;		On entry : 0/0
 34261 ;;		On exit  : 0/0
 34262 ;;		Unchanged: 0/0
 34263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34268 ;;Total ram usage:        0 bytes
 34269 ;; Hardware stack levels used:    1
 34270 ;; Hardware stack levels required when called:    2
 34271 ;; This function calls:
 34272 ;;		_Uart_MdmGsmGprsReadService
 34273 ;; This function is called by:
 34274 ;;		_HighPriorityIsr
 34275 ;; This function uses a non-reentrant model
 34276 ;;
 34277                           
 34278                           	psect	text168
 34279  0061E6                     __ptext168:
 34280                           	opt stack 0
 34281  0061E6                     _Uart_Uart1RxIsr:
 34282                           	opt stack 8
 34283                           
 34284                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34285                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34286                           
 34287                           ;incstack = 0
 34288  0061E6  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34289                           
 34290                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34291  0061EA  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34292  0061EE  0E01               	movlw	1
 34293  0061F0  EC8D  F01D         	call	_Uart_MdmGsmGprsReadService
 34294  0061F4  0012               	return		;funcret
 34295  0061F6                     __end_of_Uart_Uart1RxIsr:
 34296                           	opt stack 0
 34297                           tosu	equ	0xFFF
 34298                           tosh	equ	0xFFE
 34299                           tosl	equ	0xFFD
 34300                           pclatu	equ	0xFFB
 34301                           pclath	equ	0xFFA
 34302                           tblptru	equ	0xFF8
 34303                           tblptrh	equ	0xFF7
 34304                           tblptrl	equ	0xFF6
 34305                           tablat	equ	0xFF5
 34306                           prodh	equ	0xFF4
 34307                           prodl	equ	0xFF3
 34308                           intcon	equ	0xFF2
 34309                           intcon2	equ	0xFF1
 34310                           intcon3	equ	0xFF0
 34311                           indf0	equ	0xFEF
 34312                           postinc0	equ	0xFEE
 34313                           plusw0	equ	0xFEB
 34314                           fsr0h	equ	0xFEA
 34315                           fsr0l	equ	0xFE9
 34316                           wreg	equ	0xFE8
 34317                           indf1	equ	0xFE7
 34318                           postinc1	equ	0xFE6
 34319                           postdec1	equ	0xFE5
 34320                           plusw1	equ	0xFE3
 34321                           fsr1h	equ	0xFE2
 34322                           fsr1l	equ	0xFE1
 34323                           bsr	equ	0xFE0
 34324                           indf2	equ	0xFDF
 34325                           postinc2	equ	0xFDE
 34326                           postdec2	equ	0xFDD
 34327                           plusw2	equ	0xFDB
 34328                           fsr2h	equ	0xFDA
 34329                           fsr2l	equ	0xFD9
 34330                           status	equ	0xFD8
 34331                           
 34332 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 34333 ;; Defined at:
 34334 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34335 ;; Parameters:    Size  Location     Type
 34336 ;;  Module          1    wreg     unsigned char 
 34337 ;;  UartData        1    3[COMRAM] unsigned char 
 34338 ;; Auto vars:     Size  Location     Type
 34339 ;;  Module          1    0[COMRAM] unsigned char 
 34340 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 34341 ;; Return value:  Size  Location     Type
 34342 ;;                  1    wreg      void 
 34343 ;; Registers used:
 34344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34345 ;; Tracked objects:
 34346 ;;		On entry : 0/0
 34347 ;;		On exit  : 0/0
 34348 ;;		Unchanged: 0/0
 34349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34350 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34354 ;;Total ram usage:        3 bytes
 34355 ;; Hardware stack levels used:    1
 34356 ;; Hardware stack levels required when called:    1
 34357 ;; This function calls:
 34358 ;;		i2_GenerateEvt
 34359 ;; This function is called by:
 34360 ;;		_Uart_Uart1RxIsr
 34361 ;; This function uses a non-reentrant model
 34362 ;;
 34363                           
 34364                           	psect	text169
 34365  003B1A                     __ptext169:
 34366                           	opt stack 0
 34367  003B1A                     _Uart_MdmGsmGprsReadService:
 34368                           	opt stack 8
 34369                           
 34370                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 34371                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 34372                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 34373                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 34374                           
 34375                           ;incstack = 0
 34376  003B1A  0E00               	movlw	0
 34377  003B1C  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34378  003B1E  0E00               	movlw	0
 34379  003B20  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34380                           
 34381                           ;uart_drv.c: 383: switch (RxState)
 34382  003B22  D058               	goto	i2l680
 34383  003B24                     
 34384                           ;uart_drv.c: 387: if (UartData == '\r')
 34385  003B24  0E0D               	movlw	13
 34386  003B26  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34387  003B28  A4D8               	btfss	status,2,c
 34388  003B2A  D003               	goto	i2l682
 34389                           
 34390                           ;uart_drv.c: 388: {
 34391                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 34392  003B2C  0E01               	movlw	1
 34393  003B2E  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34394                           
 34395                           ;uart_drv.c: 391: }
 34396  003B30  0012               	return	
 34397  003B32                     i2l682:
 34398                           
 34399                           ;uart_drv.c: 392: else
 34400                           ;uart_drv.c: 393: {
 34401                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 34402  003B32  0E90               	movlw	144
 34403  003B34  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34404  003B36  0E01               	movlw	1
 34405  003B38  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34406  003B3A  B0D8               	btfsc	status,0,c
 34407  003B3C  0012               	return	
 34408                           
 34409                           ;uart_drv.c: 395: {
 34410                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 34411  003B3E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34412  003B40  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34413  003B42  6ED9               	movwf	fsr2l,c
 34414  003B44  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34415  003B46  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34416  003B48  6EDA               	movwf	fsr2h,c
 34417  003B4A  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 34418                           
 34419                           ;uart_drv.c: 399: RxCounter++;
 34420  003B4E  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 34421  003B50  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 34422                           
 34423                           ;uart_drv.c: 400: }
 34424                           ;uart_drv.c: 401: }
 34425                           ;uart_drv.c: 402: break;
 34426  003B52  0012               	return	
 34427  003B54                     
 34428                           ;uart_drv.c: 406: if (UartData == '\n')
 34429  003B54  0E0A               	movlw	10
 34430  003B56  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34431  003B58  A4D8               	btfss	status,2,c
 34432  003B5A  D035               	goto	i2l688
 34433                           
 34434                           ;uart_drv.c: 407: {
 34435                           ;uart_drv.c: 409: if (RxCounter > 0)
 34436  003B5C  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34437  003B5E  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34438  003B60  B4D8               	btfsc	status,2,c
 34439  003B62  D031               	goto	i2l688
 34440                           
 34441                           ;uart_drv.c: 410: {
 34442                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 34443  003B64  0E00               	movlw	0
 34444  003B66  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34445  003B68  0E00               	movlw	0
 34446  003B6A  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34447  003B6C  D010               	goto	i2l689
 34448  003B6E                     
 34449                           ;uart_drv.c: 413: {
 34450                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 34451  003B6E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34452  003B70  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34453  003B72  6ED9               	movwf	fsr2l,c
 34454  003B74  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34455  003B76  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34456  003B78  6EDA               	movwf	fsr2h,c
 34457  003B7A  0E58               	movlw	low _RxBuffer
 34458  003B7C  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34459  003B7E  6EE1               	movwf	fsr1l,c
 34460  003B80  0E0C               	movlw	high _RxBuffer
 34461  003B82  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34462  003B84  6EE2               	movwf	fsr1h,c
 34463  003B86  CFDF FFE7          	movff	indf2,indf1
 34464  003B8A  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 34465  003B8C  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 34466  003B8E                     i2l689:
 34467  003B8E  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34468  003B90  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34469  003B92  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34470  003B94  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34471  003B96  A0D8               	btfss	status,0,c
 34472  003B98  D7EA               	goto	i2l690
 34473                           
 34474                           ;uart_drv.c: 415: }
 34475                           ;uart_drv.c: 417: RxLen = RxCounter;
 34476  003B9A  C023  F0C7         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 34477  003B9E  C024  F0C8         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 34478                           
 34479                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 34480  003BA2  0E3C               	movlw	low _NewStringReceived
 34481  003BA4  6E01               	movwf	i2GenerateEvt@Event,c
 34482  003BA6  0E00               	movlw	high _NewStringReceived
 34483  003BA8  6E02               	movwf	i2GenerateEvt@Event+1,c
 34484  003BAA  ECAC  F030         	call	i2_GenerateEvt	;wreg free
 34485                           
 34486                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 34487  003BAE  0E3B               	movlw	low _NewMdmEvtParserRequest
 34488  003BB0  6E01               	movwf	i2GenerateEvt@Event,c
 34489  003BB2  0E00               	movlw	high _NewMdmEvtParserRequest
 34490  003BB4  6E02               	movwf	i2GenerateEvt@Event+1,c
 34491  003BB6  ECAC  F030         	call	i2_GenerateEvt	;wreg free
 34492                           
 34493                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 34494  003BBA  0E3A               	movlw	low _NewStringMdmTerminal
 34495  003BBC  6E01               	movwf	i2GenerateEvt@Event,c
 34496  003BBE  0E00               	movlw	high _NewStringMdmTerminal
 34497  003BC0  6E02               	movwf	i2GenerateEvt@Event+1,c
 34498  003BC2  ECAC  F030         	call	i2_GenerateEvt	;wreg free
 34499  003BC6                     i2l688:
 34500                           
 34501                           ;uart_drv.c: 427: }
 34502                           ;uart_drv.c: 429: RxState = ReadData;
 34503                           
 34504                           ;uart_drv.c: 424: else
 34505                           ;uart_drv.c: 425: {
 34506                           
 34507                           ;uart_drv.c: 422: }
 34508                           ;uart_drv.c: 423: }
 34509  003BC6  0E00               	movlw	0
 34510  003BC8  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34511                           
 34512                           ;uart_drv.c: 431: RxCounter = 0;
 34513  003BCA  0E00               	movlw	0
 34514  003BCC  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 34515  003BCE  0E00               	movlw	0
 34516  003BD0  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 34517                           
 34518                           ;uart_drv.c: 436: }
 34519                           
 34520                           ;uart_drv.c: 435: break;
 34521                           
 34522                           ;uart_drv.c: 434: default:
 34523                           
 34524                           ;uart_drv.c: 432: break;
 34525  003BD2  0012               	return	
 34526  003BD4                     i2l680:
 34527  003BD4  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 34528                           
 34529                           ; Switch size 1, requested type "space"
 34530                           ; Number of cases is 2, Range of values is 0 to 1
 34531                           ; switch strategies available:
 34532                           ; Name         Instructions Cycles
 34533                           ; simple_byte            7     4 (average)
 34534                           ;	Chosen strategy is simple_byte
 34535  003BD6  0A00               	xorlw	0	; case 0
 34536  003BD8  B4D8               	btfsc	status,2,c
 34537  003BDA  D7A4               	goto	i2l681
 34538  003BDC  0A01               	xorlw	1	; case 1
 34539  003BDE  A4D8               	btfss	status,2,c
 34540  003BE0  0012               	return	
 34541  003BE2  D7B8               	goto	i2l686
 34542  003BE4                     __end_of_Uart_MdmGsmGprsReadService:
 34543                           	opt stack 0
 34544                           tosu	equ	0xFFF
 34545                           tosh	equ	0xFFE
 34546                           tosl	equ	0xFFD
 34547                           pclatu	equ	0xFFB
 34548                           pclath	equ	0xFFA
 34549                           tblptru	equ	0xFF8
 34550                           tblptrh	equ	0xFF7
 34551                           tblptrl	equ	0xFF6
 34552                           tablat	equ	0xFF5
 34553                           prodh	equ	0xFF4
 34554                           prodl	equ	0xFF3
 34555                           intcon	equ	0xFF2
 34556                           intcon2	equ	0xFF1
 34557                           intcon3	equ	0xFF0
 34558                           indf0	equ	0xFEF
 34559                           postinc0	equ	0xFEE
 34560                           plusw0	equ	0xFEB
 34561                           fsr0h	equ	0xFEA
 34562                           fsr0l	equ	0xFE9
 34563                           wreg	equ	0xFE8
 34564                           indf1	equ	0xFE7
 34565                           postinc1	equ	0xFE6
 34566                           postdec1	equ	0xFE5
 34567                           plusw1	equ	0xFE3
 34568                           fsr1h	equ	0xFE2
 34569                           fsr1l	equ	0xFE1
 34570                           bsr	equ	0xFE0
 34571                           indf2	equ	0xFDF
 34572                           postinc2	equ	0xFDE
 34573                           postdec2	equ	0xFDD
 34574                           plusw2	equ	0xFDB
 34575                           fsr2h	equ	0xFDA
 34576                           fsr2l	equ	0xFD9
 34577                           status	equ	0xFD8
 34578                           
 34579 ;; *************** function i2_GenerateEvt *****************
 34580 ;; Defined at:
 34581 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34582 ;; Parameters:    Size  Location     Type
 34583 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34584 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34585 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34586 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34587 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34588 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34589 ;; Auto vars:     Size  Location     Type
 34590 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34591 ;; Return value:  Size  Location     Type
 34592 ;;                  1    wreg      enum E7699
 34593 ;; Registers used:
 34594 ;;		wreg, fsr2l, fsr2h, status,2
 34595 ;; Tracked objects:
 34596 ;;		On entry : 0/0
 34597 ;;		On exit  : 0/0
 34598 ;;		Unchanged: 0/0
 34599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34603 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34604 ;;Total ram usage:        3 bytes
 34605 ;; Hardware stack levels used:    1
 34606 ;; This function calls:
 34607 ;;		Nothing
 34608 ;; This function is called by:
 34609 ;;		_Uart_MdmGsmGprsReadService
 34610 ;; This function uses a non-reentrant model
 34611 ;;
 34612                           
 34613                           	psect	text170
 34614  006158                     __ptext170:
 34615                           	opt stack 0
 34616  006158                     i2_GenerateEvt:
 34617                           	opt stack 8
 34618                           
 34619                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34620                           
 34621                           ;incstack = 0
 34622  006158  0E00               	movlw	0
 34623  00615A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34624                           
 34625                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34626  00615C  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34627  006160  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34628  006164  0E02               	movlw	2
 34629  006166  6EDF               	movwf	indf2,c
 34630                           
 34631                           ;os_ser.c: 83: EventStatus = EventSent;
 34632  006168  0E02               	movlw	2
 34633  00616A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34634  00616C  0012               	return	
 34635  00616E                     __end_ofi2_GenerateEvt:
 34636                           	opt stack 0
 34637                           tosu	equ	0xFFF
 34638                           tosh	equ	0xFFE
 34639                           tosl	equ	0xFFD
 34640                           pclatu	equ	0xFFB
 34641                           pclath	equ	0xFFA
 34642                           tblptru	equ	0xFF8
 34643                           tblptrh	equ	0xFF7
 34644                           tblptrl	equ	0xFF6
 34645                           tablat	equ	0xFF5
 34646                           prodh	equ	0xFF4
 34647                           prodl	equ	0xFF3
 34648                           intcon	equ	0xFF2
 34649                           intcon2	equ	0xFF1
 34650                           intcon3	equ	0xFF0
 34651                           indf0	equ	0xFEF
 34652                           postinc0	equ	0xFEE
 34653                           plusw0	equ	0xFEB
 34654                           fsr0h	equ	0xFEA
 34655                           fsr0l	equ	0xFE9
 34656                           wreg	equ	0xFE8
 34657                           indf1	equ	0xFE7
 34658                           postinc1	equ	0xFE6
 34659                           postdec1	equ	0xFE5
 34660                           plusw1	equ	0xFE3
 34661                           fsr1h	equ	0xFE2
 34662                           fsr1l	equ	0xFE1
 34663                           bsr	equ	0xFE0
 34664                           indf2	equ	0xFDF
 34665                           postinc2	equ	0xFDE
 34666                           postdec2	equ	0xFDD
 34667                           plusw2	equ	0xFDB
 34668                           fsr2h	equ	0xFDA
 34669                           fsr2l	equ	0xFD9
 34670                           status	equ	0xFD8
 34671                           
 34672 ;; *************** function _Rtcc_RtcIsr *****************
 34673 ;; Defined at:
 34674 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34675 ;; Parameters:    Size  Location     Type
 34676 ;;		None
 34677 ;; Auto vars:     Size  Location     Type
 34678 ;;		None
 34679 ;; Return value:  Size  Location     Type
 34680 ;;                  1    wreg      void 
 34681 ;; Registers used:
 34682 ;;		wreg, status,2, status,0
 34683 ;; Tracked objects:
 34684 ;;		On entry : 0/0
 34685 ;;		On exit  : 0/0
 34686 ;;		Unchanged: 0/0
 34687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34692 ;;Total ram usage:        0 bytes
 34693 ;; Hardware stack levels used:    1
 34694 ;; This function calls:
 34695 ;;		Nothing
 34696 ;; This function is called by:
 34697 ;;		_HighPriorityIsr
 34698 ;; This function uses a non-reentrant model
 34699 ;;
 34700                           
 34701                           	psect	text171
 34702  006274                     __ptext171:
 34703                           	opt stack 0
 34704  006274                     _Rtcc_RtcIsr:
 34705                           	opt stack 10
 34706                           
 34707                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34708                           
 34709                           ;incstack = 0
 34710  006274  90A4               	bcf	4004,0,c	;volatile
 34711  006276  0012               	return	
 34712  006278                     __end_of_Rtcc_RtcIsr:
 34713                           	opt stack 0
 34714                           tosu	equ	0xFFF
 34715                           tosh	equ	0xFFE
 34716                           tosl	equ	0xFFD
 34717                           pclatu	equ	0xFFB
 34718                           pclath	equ	0xFFA
 34719                           tblptru	equ	0xFF8
 34720                           tblptrh	equ	0xFF7
 34721                           tblptrl	equ	0xFF6
 34722                           tablat	equ	0xFF5
 34723                           prodh	equ	0xFF4
 34724                           prodl	equ	0xFF3
 34725                           intcon	equ	0xFF2
 34726                           intcon2	equ	0xFF1
 34727                           intcon3	equ	0xFF0
 34728                           indf0	equ	0xFEF
 34729                           postinc0	equ	0xFEE
 34730                           plusw0	equ	0xFEB
 34731                           fsr0h	equ	0xFEA
 34732                           fsr0l	equ	0xFE9
 34733                           wreg	equ	0xFE8
 34734                           indf1	equ	0xFE7
 34735                           postinc1	equ	0xFE6
 34736                           postdec1	equ	0xFE5
 34737                           plusw1	equ	0xFE3
 34738                           fsr1h	equ	0xFE2
 34739                           fsr1l	equ	0xFE1
 34740                           bsr	equ	0xFE0
 34741                           indf2	equ	0xFDF
 34742                           postinc2	equ	0xFDE
 34743                           postdec2	equ	0xFDD
 34744                           plusw2	equ	0xFDB
 34745                           fsr2h	equ	0xFDA
 34746                           fsr2l	equ	0xFD9
 34747                           status	equ	0xFD8
 34748                           
 34749 ;; *************** function _Mcu_Int1Isr *****************
 34750 ;; Defined at:
 34751 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34752 ;; Parameters:    Size  Location     Type
 34753 ;;		None
 34754 ;; Auto vars:     Size  Location     Type
 34755 ;;		None
 34756 ;; Return value:  Size  Location     Type
 34757 ;;                  1    wreg      void 
 34758 ;; Registers used:
 34759 ;;		wreg, status,2, status,0
 34760 ;; Tracked objects:
 34761 ;;		On entry : 0/0
 34762 ;;		On exit  : 0/0
 34763 ;;		Unchanged: 0/0
 34764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34769 ;;Total ram usage:        0 bytes
 34770 ;; Hardware stack levels used:    1
 34771 ;; This function calls:
 34772 ;;		Nothing
 34773 ;; This function is called by:
 34774 ;;		_HighPriorityIsr
 34775 ;; This function uses a non-reentrant model
 34776 ;;
 34777                           
 34778                           	psect	text172
 34779  006278                     __ptext172:
 34780                           	opt stack 0
 34781  006278                     _Mcu_Int1Isr:
 34782                           	opt stack 10
 34783                           
 34784                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 34785                           
 34786                           ;incstack = 0
 34787  006278  90F0               	bcf	intcon3,0,c	;volatile
 34788  00627A  0012               	return	
 34789  00627C                     __end_of_Mcu_Int1Isr:
 34790                           	opt stack 0
 34791                           tosu	equ	0xFFF
 34792                           tosh	equ	0xFFE
 34793                           tosl	equ	0xFFD
 34794                           pclatu	equ	0xFFB
 34795                           pclath	equ	0xFFA
 34796                           tblptru	equ	0xFF8
 34797                           tblptrh	equ	0xFF7
 34798                           tblptrl	equ	0xFF6
 34799                           tablat	equ	0xFF5
 34800                           prodh	equ	0xFF4
 34801                           prodl	equ	0xFF3
 34802                           intcon	equ	0xFF2
 34803                           intcon2	equ	0xFF1
 34804                           intcon3	equ	0xFF0
 34805                           indf0	equ	0xFEF
 34806                           postinc0	equ	0xFEE
 34807                           plusw0	equ	0xFEB
 34808                           fsr0h	equ	0xFEA
 34809                           fsr0l	equ	0xFE9
 34810                           wreg	equ	0xFE8
 34811                           indf1	equ	0xFE7
 34812                           postinc1	equ	0xFE6
 34813                           postdec1	equ	0xFE5
 34814                           plusw1	equ	0xFE3
 34815                           fsr1h	equ	0xFE2
 34816                           fsr1l	equ	0xFE1
 34817                           bsr	equ	0xFE0
 34818                           indf2	equ	0xFDF
 34819                           postinc2	equ	0xFDE
 34820                           postdec2	equ	0xFDD
 34821                           plusw2	equ	0xFDB
 34822                           fsr2h	equ	0xFDA
 34823                           fsr2l	equ	0xFD9
 34824                           status	equ	0xFD8
 34825                           
 34826 ;; *************** function _Mcu_Int0Isr *****************
 34827 ;; Defined at:
 34828 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34829 ;; Parameters:    Size  Location     Type
 34830 ;;		None
 34831 ;; Auto vars:     Size  Location     Type
 34832 ;;		None
 34833 ;; Return value:  Size  Location     Type
 34834 ;;                  1    wreg      void 
 34835 ;; Registers used:
 34836 ;;		wreg, status,2, status,0
 34837 ;; Tracked objects:
 34838 ;;		On entry : 0/0
 34839 ;;		On exit  : 0/0
 34840 ;;		Unchanged: 0/0
 34841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34846 ;;Total ram usage:        0 bytes
 34847 ;; Hardware stack levels used:    1
 34848 ;; This function calls:
 34849 ;;		Nothing
 34850 ;; This function is called by:
 34851 ;;		_HighPriorityIsr
 34852 ;; This function uses a non-reentrant model
 34853 ;;
 34854                           
 34855                           	psect	text173
 34856  00627C                     __ptext173:
 34857                           	opt stack 0
 34858  00627C                     _Mcu_Int0Isr:
 34859                           	opt stack 10
 34860                           
 34861                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 34862                           
 34863                           ;incstack = 0
 34864  00627C  92F2               	bcf	intcon,1,c	;volatile
 34865  00627E  0012               	return	
 34866  006280                     __end_of_Mcu_Int0Isr:
 34867                           	opt stack 0
 34868                           tosu	equ	0xFFF
 34869                           tosh	equ	0xFFE
 34870                           tosl	equ	0xFFD
 34871                           pclatu	equ	0xFFB
 34872                           pclath	equ	0xFFA
 34873                           tblptru	equ	0xFF8
 34874                           tblptrh	equ	0xFF7
 34875                           tblptrl	equ	0xFF6
 34876                           tablat	equ	0xFF5
 34877                           prodh	equ	0xFF4
 34878                           prodl	equ	0xFF3
 34879                           intcon	equ	0xFF2
 34880                           intcon2	equ	0xFF1
 34881                           intcon3	equ	0xFF0
 34882                           indf0	equ	0xFEF
 34883                           postinc0	equ	0xFEE
 34884                           plusw0	equ	0xFEB
 34885                           fsr0h	equ	0xFEA
 34886                           fsr0l	equ	0xFE9
 34887                           wreg	equ	0xFE8
 34888                           indf1	equ	0xFE7
 34889                           postinc1	equ	0xFE6
 34890                           postdec1	equ	0xFE5
 34891                           plusw1	equ	0xFE3
 34892                           fsr1h	equ	0xFE2
 34893                           fsr1l	equ	0xFE1
 34894                           bsr	equ	0xFE0
 34895                           indf2	equ	0xFDF
 34896                           postinc2	equ	0xFDE
 34897                           postdec2	equ	0xFDD
 34898                           plusw2	equ	0xFDB
 34899                           fsr2h	equ	0xFDA
 34900                           fsr2l	equ	0xFD9
 34901                           status	equ	0xFD8
 34902                           tosu	equ	0xFFF
 34903                           tosh	equ	0xFFE
 34904                           tosl	equ	0xFFD
 34905                           pclatu	equ	0xFFB
 34906                           pclath	equ	0xFFA
 34907                           tblptru	equ	0xFF8
 34908                           tblptrh	equ	0xFF7
 34909                           tblptrl	equ	0xFF6
 34910                           tablat	equ	0xFF5
 34911                           prodh	equ	0xFF4
 34912                           prodl	equ	0xFF3
 34913                           intcon	equ	0xFF2
 34914                           intcon2	equ	0xFF1
 34915                           intcon3	equ	0xFF0
 34916                           indf0	equ	0xFEF
 34917                           postinc0	equ	0xFEE
 34918                           plusw0	equ	0xFEB
 34919                           fsr0h	equ	0xFEA
 34920                           fsr0l	equ	0xFE9
 34921                           wreg	equ	0xFE8
 34922                           indf1	equ	0xFE7
 34923                           postinc1	equ	0xFE6
 34924                           postdec1	equ	0xFE5
 34925                           plusw1	equ	0xFE3
 34926                           fsr1h	equ	0xFE2
 34927                           fsr1l	equ	0xFE1
 34928                           bsr	equ	0xFE0
 34929                           indf2	equ	0xFDF
 34930                           postinc2	equ	0xFDE
 34931                           postdec2	equ	0xFDD
 34932                           plusw2	equ	0xFDB
 34933                           fsr2h	equ	0xFDA
 34934                           fsr2l	equ	0xFD9
 34935                           status	equ	0xFD8
 34936                           
 34937                           	psect	text174
 34938  000000                     __ptext174:
 34939                           	opt stack 0
 34940                           tosu	equ	0xFFF
 34941                           tosh	equ	0xFFE
 34942                           tosl	equ	0xFFD
 34943                           pclatu	equ	0xFFB
 34944                           pclath	equ	0xFFA
 34945                           tblptru	equ	0xFF8
 34946                           tblptrh	equ	0xFF7
 34947                           tblptrl	equ	0xFF6
 34948                           tablat	equ	0xFF5
 34949                           prodh	equ	0xFF4
 34950                           prodl	equ	0xFF3
 34951                           intcon	equ	0xFF2
 34952                           intcon2	equ	0xFF1
 34953                           intcon3	equ	0xFF0
 34954                           indf0	equ	0xFEF
 34955                           postinc0	equ	0xFEE
 34956                           plusw0	equ	0xFEB
 34957                           fsr0h	equ	0xFEA
 34958                           fsr0l	equ	0xFE9
 34959                           wreg	equ	0xFE8
 34960                           indf1	equ	0xFE7
 34961                           postinc1	equ	0xFE6
 34962                           postdec1	equ	0xFE5
 34963                           plusw1	equ	0xFE3
 34964                           fsr1h	equ	0xFE2
 34965                           fsr1l	equ	0xFE1
 34966                           bsr	equ	0xFE0
 34967                           indf2	equ	0xFDF
 34968                           postinc2	equ	0xFDE
 34969                           postdec2	equ	0xFDD
 34970                           plusw2	equ	0xFDB
 34971                           fsr2h	equ	0xFDA
 34972                           fsr2l	equ	0xFD9
 34973                           status	equ	0xFD8
 34974                           
 34975                           	psect	rparam
 34976  0000                     tosu	equ	0xFFF
 34977                           tosh	equ	0xFFE
 34978                           tosl	equ	0xFFD
 34979                           pclatu	equ	0xFFB
 34980                           pclath	equ	0xFFA
 34981                           tblptru	equ	0xFF8
 34982                           tblptrh	equ	0xFF7
 34983                           tblptrl	equ	0xFF6
 34984                           tablat	equ	0xFF5
 34985                           prodh	equ	0xFF4
 34986                           prodl	equ	0xFF3
 34987                           intcon	equ	0xFF2
 34988                           intcon2	equ	0xFF1
 34989                           intcon3	equ	0xFF0
 34990                           indf0	equ	0xFEF
 34991                           postinc0	equ	0xFEE
 34992                           plusw0	equ	0xFEB
 34993                           fsr0h	equ	0xFEA
 34994                           fsr0l	equ	0xFE9
 34995                           wreg	equ	0xFE8
 34996                           indf1	equ	0xFE7
 34997                           postinc1	equ	0xFE6
 34998                           postdec1	equ	0xFE5
 34999                           plusw1	equ	0xFE3
 35000                           fsr1h	equ	0xFE2
 35001                           fsr1l	equ	0xFE1
 35002                           bsr	equ	0xFE0
 35003                           indf2	equ	0xFDF
 35004                           postinc2	equ	0xFDE
 35005                           postdec2	equ	0xFDD
 35006                           plusw2	equ	0xFDB
 35007                           fsr2h	equ	0xFDA
 35008                           fsr2l	equ	0xFD9
 35009                           status	equ	0xFD8
 35010                           
 35011                           	psect	temp
 35012  000042                     btemp:
 35013                           	opt stack 0
 35014  000042                     	ds	1
 35015  0000                     int$flags	set	btemp
 35016  0000                     wtemp6	set	btemp+1
 35017                           tosu	equ	0xFFF
 35018                           tosh	equ	0xFFE
 35019                           tosl	equ	0xFFD
 35020                           pclatu	equ	0xFFB
 35021                           pclath	equ	0xFFA
 35022                           tblptru	equ	0xFF8
 35023                           tblptrh	equ	0xFF7
 35024                           tblptrl	equ	0xFF6
 35025                           tablat	equ	0xFF5
 35026                           prodh	equ	0xFF4
 35027                           prodl	equ	0xFF3
 35028                           intcon	equ	0xFF2
 35029                           intcon2	equ	0xFF1
 35030                           intcon3	equ	0xFF0
 35031                           indf0	equ	0xFEF
 35032                           postinc0	equ	0xFEE
 35033                           plusw0	equ	0xFEB
 35034                           fsr0h	equ	0xFEA
 35035                           fsr0l	equ	0xFE9
 35036                           wreg	equ	0xFE8
 35037                           indf1	equ	0xFE7
 35038                           postinc1	equ	0xFE6
 35039                           postdec1	equ	0xFE5
 35040                           plusw1	equ	0xFE3
 35041                           fsr1h	equ	0xFE2
 35042                           fsr1l	equ	0xFE1
 35043                           bsr	equ	0xFE0
 35044                           indf2	equ	0xFDF
 35045                           postinc2	equ	0xFDE
 35046                           postdec2	equ	0xFDD
 35047                           plusw2	equ	0xFDB
 35048                           fsr2h	equ	0xFDA
 35049                           fsr2l	equ	0xFD9
 35050                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    567
    Data        183
    BSS         2335
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     85     131
    BANK1           256    201     256
    BANK2           256    201     256
    BANK3           256      0     255
    BANK4           192      4     190
    BANK5           256      0     224
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    blinkForSeconds@blickTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blickTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK7[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> MessageText(BANK7[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 
		 -> callerNumber(BANK3[14]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@cmpString(BANK1[3]), MyApp_Task@phone(BANK1[14]), callerNumber(BANK3[14]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsNumber(BANK1[14]), MyApp_Task@smsText(BANK1[50]), MyApp_Task@phone(BANK1[14]), ModemEvtParser@CallReadyString(BANK0[10]), 
		 -> ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8937 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK4[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4613$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4613$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3066$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3056$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3056$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3032$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3032$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3032$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3032$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2533_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2533_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 14
		 -> callerNumber(BANK3[14]), 

    Mdm_GetSmsData@MessageHeader	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@smsNumber(BANK1[14]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@smsText(BANK1[50]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[14]), STR_30(CODE[12]), STR_29(CODE[19]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_InitializeTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _StringCompare->_GetCallerNumber
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Sch_MainScheduler->_InitializeTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  639967
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  635336
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  317761
                                             83 BANK0      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  317575
                                             83 BANK0      2     2      0
                                            200 BANK2      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   58730
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   58730
                                             71 BANK0     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41520
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3399
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          82    82      0   57303
                                              0 BANK1     81    81      0
                        _ClearBuffer
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                     _Mdm_GetSmsData
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
              _Uart_WriteConstString
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   16185
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       5     1      4    7291
                                             39 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5539
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70556
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15261
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11890
                                             48 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    2416
                                             37 BANK0     11     5      6
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    4251
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2837
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      E0      16       87.5%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C9     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      BE      14       99.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     98B       8        0.0%
DATA                 0      0     CAB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 16 10:56:07 2022

                  __size_of_StringCompare 0052               Mdm_GetSmsData@MessageHeader 0089  
                __end_of_UartSetConfigLow 531E                                _USB_SD_Ptr FC27  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 600E  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 25AA                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0031                                       l202 2370  
                                     l203 2378                                       l205 23C0  
                                     l206 23E6                                       l208 23EE  
                                     l160 2154                                       l209 240E  
                                     l161 202A                                       l162 2192  
                                     l170 20F2                                       l171 2108  
                                     l163 2036                                       l315 43C4  
                                     l323 4390                                       l164 2076  
                                     l316 433A                                       l420 4972  
                                     l500 4822                                       l173 210C  
                                     l325 43AA                                       l421 4992  
                                     l237 601A                                       l174 2114  
                                     l166 2084                                       l318 4344  
                                     l422 499E               __end_of_USBStdGetDscHandler 2E5A  
                                     l510 47F4                                       l502 47B4  
                                     l175 2120                                       l167 20AC  
                                     l319 436A                                       l423 49AA  
                                     l511 47E4                                       l503 47A4  
                                     l192 2418                                       l176 2136  
                                     l416 49BE                                       l424 49B6  
                                     l512 4808                                       l504 47CA  
                                     l520 56DE                                       l193 22F8  
                                     l169 20BE                                       l417 4964  
                                     l441 17EC                                       l513 47E8  
                                     l505 47A8                                       l521 56AA  
                                     l194 2450                                       l418 49EC  
                                     l442 15F4                                       l514 47EE  
                                     l506 47AE                                       l530 321E  
                                     l195 2304                                       l179 2142  
                                     l419 496C                                       l523 56C4  
                                     l531 3284                                       l196 2344  
                                     l700 58FC                                       l444 163C  
                                     l532 324A                                       l445 1684  
                                     l541 5FD8                                       l198 2352  
                                     l446 16CC                                       l199 2366  
                                     l631 2B70                                       l447 1714  
                                     l448 175C                                       l528 328A  
                                     l633 2BE8                                       l625 2AFC  
                                     l449 17A4                                       l529 3276  
                                     l538 5FDC                                       l546 3C3C  
                                     l651 562E                                       l707 5A62  
                                     l627 2B20                                       l715 59D6  
                                     l539 5FD4                                       l547 3C58  
                                     l660 5652                                       l652 5628  
                                     l716 59AC                                       l709 5A7C  
                                     l629 2B48                                       l718 59C4  
                                     l639 6000                                       l832 5D9C  
                                     l844 3D10                                       l668 0C44  
                                     _BDT 000400                                       l790 6036  
                                     l855 4D08                                       l775 2F7C  
                                     l864 4A60                                       l856 4CAE  
                                     l857 4D22                                       l698 58E0  
                                     l858 4CDE                                       l867 4A72  
                                     l982 22D0                                       l983 2198  
                                     l985 21BE                                       l987 21DA  
                                     l988 2210                                       l989 2284  
                                     l998 22AA                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                          ?_blinkForSeconds 0093  
                 __end_of_HighPriorityIsr 428E                            ??_Mdm_MainTask 00AA  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 5C24  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1D32                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00D0               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 59A0                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 2196             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 56F2           InitGprsNetwork@GprsNetInitState 01EA  
                                    l1100 1B1A                                      l1101 1B66  
                                    l1013 570C                                      l1110 5580  
                             RiSm@Counter 02DF                                      l1031 363C  
                                    l1111 5594                                      l1032 3676  
                                    l1033 369C                                      l1009 5728  
                                    l1121 55EC                                      l1027 36DE  
                                    l1035 36C4                                      l2003 5100  
                                    l1107 55A6                                      l1220 0DE8  
                                    l1028 362A                                      l1052 1D06  
                                    l1060 1CD8                                      l1108 556A  
                                    l1221 0E22                                      l1053 1C1A  
                                    l2005 5106                                      l1222 0E96  
                                    l1070 2D0E                                      l1223 0E5E  
                                    l1071 2C06                                      l1055 1D20  
                                    l3000 4C94                                      l2104 5D30  
                                    l1216 1078                                      l1056 1C4C  
                                    l1152 5ED8                                      l1136 5EB4  
                                    l2105 5D1E                                      l1233 1010  
                                    l1225 0F3E                                      l1217 0DD0  
                                    l2113 545A                                      l1129 4D9A  
                                    l1401 53B8                                      l1250 05F4  
                                    l1234 1054                                      l1226 0F78  
                                    l1074 2C22                                      l1058 1CA2  
                                    l2114 5424                                      l1402 5378  
                                    l2107 5D24                                      l1219 10B0  
                                    l1227 0FB8                                      l1075 2C3A  
                                    l2211 5508                                      l1091 1B80  
                                    l2060 281C                                      l2108 5D2A  
                                    l1252 0AB6                                      l1260 07F2  
                                    l1228 0FBC                                      l2212 54DE  
                                    l1092 19FE                                      l1156 5BAE  
                                    l2116 5436                                      l1404 53B2  
                                    l2061 26FE                                      l1261 082C  
                                    l1253 060C                                      l1229 1000  
                                    l2213 5504                                      l2117 5448  
                                    l2062 2832                                      l1270 096E  
                                    l1262 0856                                      l1254 0646  
                                    l1238 106E                                      l1078 2CAC  
                                    l1414 599A                                      l2063 2726  
                                    l1263 0890                                      l1255 0680  
                                    l1095 1A1A                                      l2064 27AA  
                                    l2224 5BE2                                      l1264 08CA  
                                    l1256 06BA                                      l1096 1AD0  
                                    l2073 334A                                      l2225 5BCE  
                                    l1249 0A54                                      l1265 090E  
                                    l1257 073E                                      l1097 1AF4  
                                    l1409 5A54                                      l1601 25F4  
                                    l2074 3292                                      l2090 4436  
                                    l2218 50F0                                      l1282 0A42  
                                    l1274 097E                                      l1258 06F6  
                                    l2075 3366                                      l2083 445A  
                                    l2091 4444                                      l2219 50B0  
                                    l1283 0A4A                                      l1275 09AA  
                                    l1419 5FC4                                      l2403 041E  
                                    l1603 261C                                      l1291 5786  
                                    l1380 3E3E                                      l3052 54B2  
                                    l2076 32B0                                      l2084 43EC  
                                    l2412 0524                                      l3204 51CA  
                                    l3220 59EA                                      l1700 3758  
                                    l1620 1DA8                                      l1612 1D5E  
                                    l1381 3E60                                      l3053 54BC  
                                    l2085 4482                                      l1277 09C4  
                                    l1269 092A                                      l3213 5C6A  
                                    l2413 0570                                      l2405 045E  
                                    l3205 51C4                                      l1605 2658  
                                    l1621 1DB4                                      l1613 1D54  
                                    l1390 3EC2                                      l2078 3320  
                                    l2086 43FC                                      l1278 0A32  
                                    l3062 58C6                                      l3214 5C60  
                                    l2406 0578                                      l2430 10DE  
                                    l1710 2FDC                                      l1630 1E46  
                                    l1614 1D52                                      l2182 4AFE  
                                    l1391 3ECE                                      l1383 3E82  
                                    l2087 440E                                      l3063 58D0  
                                    l3311 5D0E                                      l3207 51E4  
                                    l1703 37D4                                      l1711 2FB6  
                                    l1623 1DDC                                      l2183 4A84  
                                    l3048 5492                                      l2088 4428  
                                    l2408 04B4                                      l3208 51DA  
                                    l2432 10FA                                      l1704 379A  
                                    l1640 5822                                      l3072 5770  
                                    l1288 57B8                                      l2096 3A3C  
                                    l3049 548A                                      l3321 5F60  
                                    l2409 0478                                      l2441 114E  
                                    l1713 3054                                      l1641 5832  
                                    l3073 574E                                      l1633 1E6C  
                                    l1625 1DF0                                      l1617 1D7A  
                                    l2097 3984                                      l2185 4AEA  
                                    l1386 3E8A                                      l3058 58AE  
                                    l2602 38E0                                      l1714 303A  
                                    l1730 2E42                                      l1722 33C6  
                                    l1810 356A                                      l1626 1DFC  
                                    l1618 1D8A                                      l1379 3EDC  
                                    l3059 58A6                                      l3251 1914  
                                    l3235 185C                                      l2371 0152  
                                    l3219 59F0                                      l2427 131E  
                                    l2443 128E                                      l1731 2D3E  
                                    l1811 357E                                      l1635 1E90  
                                    l1627 1E26                                      l1619 1D92  
                                    l2099 3992                                      l1388 3EA6  
                                    l2540 4516                                      l3316 5E1C  
                                    l3252 1980                                      l3332 60E2  
                                    l2372 01E2                                      l2380 01D0  
                                    l2604 3928                                      l2428 10B8  
                                    l1900 4158                                      l1724 343A  
                                    l1812 3584                                      l1628 1E32  
                                    l2452 60A4                USBConfigureEndpoint@handle 0083  
                                    l2541 4526                                      l1645 3FDC  
                                    l3245 18D8                                      l3237 1874  
                                    l2605 390A                                      l2445 12F8  
                                    l2437 110E                                      l1733 2D52  
                                    l1805 35E4                                      l1637 1EAE  
                                    l2622 5280                                      l3254 19A6  
                                    l3246 18E8                                      l2390 0304  
                                    l2374 01AE                                      l3078 5CD4  
                                    l1902 4170                                      l1822 137E  
                                    l1734 2DDA                                      l1750 40C4  
                                    l1814 358A                                      l1806 3554  
                                    l1670 461A                                      l2623 5294  
                                    l2551 46EA                                      l1647 4006  
                                    l3255 19E0                                      l3239 18C8  
                                    l2367 05D2                                      l2391 02C6  
                                    l2375 019C                                      l3079 5CC2  
                                    l2447 1318                                      l2439 112E  
                                    l1903 417E                                      l1831 14EA  
                                    l1823 1384                                      l1743 4106  
                                    l1815 35A8                                      l2455 609E  
                                    l2552 466A                                      l2800 4C00  
                                    l3248 1902                                      l3328 5ACC  
                                    l3280 34B4                                      l2368 00E2  
                                    l2608 395C                                      l1664 3A96  
                                    l1904 419C                                      l1736 2DE2  
                                    l1744 408C                                      l1816 35C4  
                                    l1808 355E                                      l1672 4634  
                                    l2472 5F12                                      l2801 4C0A  
                                    l1649 4062                                      l1921 48C4  
                                    l3281 34CC                                      l3273 3474  
                                    l2385 0392                                      l1905 41B4  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2E32  
                                    l1809 3564                                      l1681 3122  
                                    l2473 5F04                                      l2538 44EA  
                                    l2802 4C18                                      l2810 4E44  
                                    l3282 34DC                                      l3274 346E  
                                    l2386 0326                                      l1834 14D0  
                                    l1682 30CA                                      l3259 60FA  
                                    l2387 02B4                                      l1843 15C6  
                                    l1827 143E                                      l1739 2E3A  
                                    l1747 411C                                      l1771 494C  
                                    l2475 5F0C                                      l2564 5B3C  
                                    l1924 4872                                      l3276 349C  
                                    l2388 0250                                      l1676 476C  
                                    l1836 1532                                      l1828 1440  
                                    l1748 409E                                      l1772 4946  
                                    l2580 1EF2                                      l2557 4700  
                                    l2813 4E64                                      l1925 489E  
                                    l3285 353A                                      l2397 0402  
                                    l1837 153E                                      l1829 145C  
                                    l1749 40A4                                      l1757 580A  
                                    l1765 5B04                                      l2558 46A8  
                                    l2814 4E6E                                      l2806 4E2A  
                                    l1926 4878                                      l2398 03D2  
                                    l1790 3F32                                      l1782 4FE0  
                                    l1838 15BA                                      l1686 314C  
                                    l1758 5808                                      l1766 5B02  
                                    l2559 46C0                                      l2815 4E7C  
                                    l2807 4E36                                      l3279 34FC  
                                    l1951 2868                                      l1695 3724  
                                    l1791 3F38                                      l2583 1F40  
                                    l1960 28D2                                      l1792 3FB4  
                                    l1784 502E                                      l2809 4E4C  
                                    l1953 289C                                      l1697 372E  
                                    l1793 3F7A                                      l2577 2016  
                                    l2585 2002                                      l2578 1ED8  
                                    l1963 294C                                      l1699 3792  
                                    l1795 3F9A                                      l2587 1FD6  
                                    l2780 3876                                      l1964 2914  
                                    l1956 28AE                                      l2781 3838  
                                    l2597 38C0                                      l1957 28B2  
                                    l1949 285A                                      l2774 37E4  
                                    l2598 38DA                                      l1990 5E74  
                                    l2783 38AA                                      l2775 37DE  
                                    l2599 393C                                      l1967 2966  
                                    l1959 290A                __size_of_Mdm_IsSmsReceived 0024  
                                    l1968 296A                                      l1992 5E7A  
                              _Led1OutSts 01FB                                      l2793 4BB2  
                                    l2777 3826                                      l2961 5878  
                                    l2794 4BC2                                      l2955 5FA4  
                                    l1899 41BE                                      l2796 4BE0  
                                    l2797 4BD8                                      l2965 4296  
                                    l1997 510C                                      l1989 5E84  
                                    l2967 42D2                                      l2968 4314  
                                    l2995 4C52                                      l2996 4C46  
                                    l2999 4C86                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE88                                      STR_9 FEBC  
                              _Led2OutSts 01F9                                _Led3OutSts 01F7  
                                    u8115 56B4                                      u8116 56B6  
                                    u8125 56C0                                      u8126 56C2  
                                    u8135 56CE                     ??_USBCtrlTrfTxService 007D  
                                    u8136 56D0                                      u8145 56DA  
                                    u8146 56DC                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      u9605 5DEA  
                __size_of_Uart_Uart1RxIsr 0010                                      u9606 5DEC  
                                    u9615 5DF6                                      u9616 5DF8  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9595 5DDE                                      u9596 5DE0  
                              _AlarmEvent 01F6                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6250  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D5  
                    _NewStringMdmTerminal 003A                                      _atoi 37DC  
                                    _main 6212                           ??_Mdm_IsRinging 0081  
                                    _itoa 5852                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 5BBA                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 428E                                      _xtoi 345E  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 6258  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 495E  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 59E0                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6116                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D                __end_of_USBCheckStdRequest 3628  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 61A6                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 008E  
                          _GetElapsedTime 3CAC             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 007D               __end_of_OsAlrm_ClearOsAlarm 5376  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 008B                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5A5C  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDAA  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DD                                     l11019 601A  
                                   l11701 5CC2                                     l13313 2650  
                                   l13219 5C02                                     l13083 4978  
                                   l14161 0FB0                                     l11739 372E  
                                   l12717 3872                                     l15301 5156  
                                   l11845 33BE                                     l13285 25EC  
                                   l14327 09A4                                     l12567 574E  
                                   l13721 4526                                     l13801 328A  
                                   l13951 1CD2                                     l13927 1C12  
                                   l14479 1E3E                                     l15299 5126  
                                   l14931 4DAA                                     l14943 2E64  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4C22  
                                   STR_10 FF4A                                     STR_11 FF58  
                                   STR_12 FF9C                                     STR_20 FF3C  
                                   STR_13 FF66                                     STR_21 FE5E  
                                   STR_30 FFA9                                     STR_14 FEA7  
                                   STR_31 FF2E                                     STR_15 FEE5  
                                   STR_23 FED1                                     STR_24 FFF4  
                                   STR_32 FFD7                                     STR_16 FF1D  
                                   STR_25 FFF4                                     STR_17 FF82  
                                   STR_26 FE85                                     STR_18 FF8F  
                                   STR_27 FF0C                                     STR_28 FFB5  
                         __end_of___awmod 4E86                                     STR_29 FEF9  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 4CA6  
                                   ?_utoa 008A                                     u11220 5E18  
                                   u11310 5AB0                                     u10350 3780  
                                   u10510 2DA4                                     u11240 5CFE  
                                   u13000 520C                                     u10520 2DD4  
                                   u11410 2B44                                     u12050 4E50  
                                   u11330 5ABC                                     u10370 37C2  
                                   u11180 4C56                                     u10540 2E26  
                         ___awdiv@divisor 007F                                     u12205 613C  
                                   u10357 3776                                     u10517 2D9A  
                                   u12206 613E                                     u10470 33F2  
                                   u13007 5202                                     u10527 2DCA  
                                   u13105 4EEA                                     u12225 0AF4  
                                   u10377 37B8                                     u10810 5496  
                  __end_of_USBDeviceTasks 1EB8                                     u11355 617C  
                                   u12235 0B14                                     u10547 2E1C  
                                   u13115 6190                                     u11356 617E  
                                   u11460 5A8A                                     u13140 43A2  
                                   u13220 2238                                     u11620 484E  
                                   u13060 3974                                     u12420 2610  
                                   u13116 6192                                     u12085 5678  
                                   u12245 0B9E                                     u13301 1BC4  
                                   u13150 43BC                                     u14110 1EB4  
                                   u13311 1BD6                                     ?_xtoi 0083  
                                   u10920 5624                                     u13240 224C  
                                   u12360 5514                                     u10840 58B2  
                                   u14200 28FA                                     u10760 1554  
                                   u12265 0C78                                     u13321 1BE8  
                                   u12370 50E8                                     u12290 590A  
                                   u11810 1864                                     u12450 26B4  
                                   u12275 0C98                                     u14220 293C  
                                   u12285 0D22                                     u14230 2954  
                                   u13175 6126                                     u14207 28F0  
                                   u13176 612A                                     u11840 189E  
                                   u12377 50DE                                     u14227 2932  
                                   u11860 18AE                                     u13390 1D26  
                                   u14271 5092                                     u14511 4ADC  
                                   u14521 4AF4                                     u14370 467A  
               ?_USBCtrlEPServiceComplete 0001                                     u14531 1EC2  
                                   u12940 04BE                                     u11990 4BE4  
                                   u14628 4DE0                                     u14629 4E0E  
                                   u14668 2F30                                     u14669 2F5E  
                         __end_of___lwdiv 54C6                           __end_of___lwmod 58DA  
               TurnOnModem@TurnOnMdmState 01F4                        ??_UpdateOsCounters 0019  
                                   i1l742 246C                                     i1l747 25A8  
                                   i2l680 3BD4                                     i2l681 3B24  
                                   i2l690 3B6E                                     i2l682 3B32  
                                   i2l686 3B54                                     i2l688 3BC6  
                                   i2l689 3B8E                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B4  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E6  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4488  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C7  
         __end_of_USBCtrlEPAllowDataStage 4668                             _StringCompare 54C6  
                                   _sd000 FE5A                                     _sd001 FE13  
                                   _sd002 FDED            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3A4E  
                             _ApnLenLocal 01EE                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5D18  
                         __end_of_isdigit 5FAC                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 5BBA  
                         __end_of_isspace 5E24                I2c_WriteData@I2cWriteState 0038  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 5F68                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 5E72  
               __end_of_Rtcc_GetRtccValue 49F2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4F64                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5376  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3982  
                         __end_of_tolower 60E6                       __end_of_Mcu_Int0Isr 6280  
                     __end_of_Mcu_Int1Isr 627C                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 60FE  
                  __end_of_GetElapsedTime 3D74                     __end_of_UartSetConfig 526E  
                  __size_of_initGprsModem 009E               Rtcc_SetRtccValue@RtccPtrVal 0088  
                   __end_of_Term_MainTask 60B6                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2D2C                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 5DD0  
                          _InitSchedTimer 5D48                           __initialization 298A  
                        __end_of_MdmCntSm 43E0                      __end_of_I2c_ReadData 2454  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 3F00  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 1EB8  
                            __end_of_atoi 38B4                              __end_of_main 621E  
                     StringCompare@Result 008D                              __end_of_itoa 5896  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DE  
                            __end_of_utoa 4338                              __end_of_xtoi 3544  
                __end_of_Rtcm_SetRtccDate 541E                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 623C  
                    initGprsModem@initMdm 01D4                      Term_MainSm@TermDelay 03D1  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE48  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B5              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4834  
                              _ReceiveEvt 5D76          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 61C6  
                          ?_StringCompare 0085                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4CA6                              _cdc_mem_type 01DF  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F2  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00C1                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3BE4                _Uart_MdmGsmGprsReadService 3B1A  
              __end_of_UsbDevice_MainTask 5E96                           getsUSBUSART@len 0086  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 600E  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1409 5B7E  
                             _GenerateEvt 60FE                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC2F                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                        ?_GetCallerNumber 0083                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                               _ConnTimeout 02F5  
                    Mdm_IsSmsReceived@Ret 0081                  __end_of_Rtcc_AlarmConfig 4FD0  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 5D76  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 6270                                _UartConfig 0328  
                    __end_of_Mdm_MainTask 55B8                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CF                             ??_Term_MainSm 00A7  
                                  _Relay1 01D9                                    _Relay2 01D8  
                                  _Relay3 01D7                                    _Relay4 01D6  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 57CA                                    _SmsLen 00D5  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 56A4  
                                  ___lmul 526E                      _I2cSlv_ReceiveI2cMsg 5960  
                      TurnOnModem@Counter 02D9                              ?_putUSBUSART 0083  
                                  ___wmul 5E24                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                        _Mdm_SetSmsFormat 55B8                                 ??___awmod 0081  
                      __size_of_SendSmsSm 01B8                         ?_Rtcm_GetRtccDate 0081  
                     _Led_SetLedBlinkTime 541E                                 ??___lldiv 0091  
                    __end_of_getsUSBUSART 48CA                      ??_Mdm_RequestSmsData 0080  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 580E  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 573C  
                  __size_of_HttpGetMethod 04D0                                    _memset 5CB8  
                                  clear_0 2A24                                    clear_1 2A36  
                                  clear_2 2A42                                    clear_3 2A4E  
                                  clear_4 2A5A                                    clear_5 2A66  
                                  clear_6 2A72                                    clear_7 2A7E  
                                  clear_8 2A8A                                    clear_9 2A96  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E3  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EB  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01F1                        ?_USBEnableEndpoint 0085  
                                  _strcat 51BA                                    _strcpy 5C56  
                                  _strlen 59E0                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 5AD6                  HttpGetMethod@UartMessage 0100  
                           _initGprsModem 4668                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                            _CDCTxService 2844                       ModemEvtParser@F9091 03C8  
                     ModemEvtParser@F9093 03C3                       ModemEvtParser@F9095 03BE  
                     ModemEvtParser@F9097 04F0                       MdmCntSm@MdmCntState 002E  
              Mdm_SetSmsFormat@TextFormat 0098                          ?_LedStateMachine 008F  
                            __mediumconst FC26                                 ??_isspace 007D  
                  __size_of_CheckTxStatus 000A                              _callerNumber 033D  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 6268                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 01FE                   __end_of_I2cSlv_MainTask 53CA  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 627C                               _Mcu_Int1Isr 6278  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                    __size_of_ScheduleTasks 0126  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A8                      _controlTransferState 00CE  
                   __end_ofi1_GenerateEvt 6158                     __end_of_Rtcm_MainTask 4B10  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 02E1  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2AB4                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                    __end_of_EnableReceiver 6274  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0188  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5656  
         I2cSlv_QueryI2cData@TimeoutTimer 034B                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 509C  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02DD  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5852                               _InitNetwork 00DB  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE5E                             __end_of_sd001 FE31  
                           __end_of_sd002 FE13                              __pidataBANK1 6280  
                            __pidataBANK2 6204                              __pidataBANK3 591E  
                            __pidataBANK4 60B6                              __pidataBANK5 5518  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 58DA                       __size_of_CheckModem 0160  
              __end_of_Uart_ClearRxBuffer 5C24             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 0074                        __end_of_I2cDummyTx 6082  
             __end_of_USBCtrlTrfInHandler 3FC2                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 0085                      StringCompare@String2 0087  
                      ??_UartSetConfigLow 007D                       __end_of_Term_MainSm 135A  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6142  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 008B  
           I2cSlv_QueryI2cData@I2cOpState 01E5                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 5C88  
                              _cdc_notice 044A                     __end_of_Tmr_TmrBPrSet 3290  
                     __end_of_Rtcc_RtcIsr 6278                                _cdc_rx_len 00CB  
                       __end_of_MsgFormat FD21                                _cdc_tx_len 00C9  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 5B84  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E0  
                          ClearBuffer@Len 007F                           _secondsAppTimer 4488  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 5DD0  
                  _USBStdGetStatusHandler 4080                         __end_of_SendSmsSm 1BAA  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01ED  
                          _Rtcc_RtcConfig 452A                                __pbssBANK0 00B5  
                              __pbssBANK1 01C9                                __pbssBANK2 02C9  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 07C4  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 616E  
                __end_of_Uart_WriteString 5A9A                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 5F02  
                             _SetBaudRate 5656                 initGprsModem@modemCounter 03BC  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01EF  
                             _pBDTEntryIn 00BB          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 31A2                                 ?_TmrBInit 007D  
                           _CheckTxStatus 623C                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 014E                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 3982  
                          _Rtcc_UnlockRtc 61A6                              _I2cBusStatus 01E7  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2E5A                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2196                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE48  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 48CA  
                   __end_of_UpdateSchFlag 6066                         MyApp_Task@smsText 0100  
                              _ep_data_in 02D2                           _I2cWriteDataEvt 00D9  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 30A4  
                       __end_of_WriteByte 6232                        _USBCheckStdRequest 3544  
                       _configDescriptor1 FDAA                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 04B8               __end_of_USBCtrlTrfTxService 37DC  
                     _USBStdSetCfgHandler 3378                         triggerRelay@F8969 03CF  
                 __size_of_ConfigureModem 00DC                    I2cSlv_QueryI2cData@Ret 01E4  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 5DA4  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 45CA                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 22F6                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3E3C  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DC  
          __end_of_Pm_DsReleasePinControl 625E                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 0170  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E2  
                __size_of_blinkForSeconds 003A                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 01F5                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FC                                   _Led2Sts 01FA  
                                 _Led3Sts 01F8                __end_of_Sch_SchmIntService 6204  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0090  
                           _cdc_trf_state 00CA                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 6264  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C9  
                   __end_of_Mdm_IsRinging 5EDE                     InitGprsNetwork@ApnLen 009D  
                                 _pCDCSrc 02CC                     __size_of_getsUSBUSART 0096  
                                 _RelayB1 01DB                                   _RelayB2 01DA  
                             ?_StringCopy 007D                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 007F  
                  ??_I2cSlv_ReceiveI2cMsg 0084           ??_USBIncrement1msInternalTimers 007D  
                          _I2cReadDataEvt 0039                                 ?_isxdigit 0001  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 4EF8  
                  __end_of_Rtcc_UnlockRtc 61B6                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0085                      __end_of_SetAckStatus 6182  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD21                __size_of_USBEnableEndpoint 0044  
                     MyApp_Task@smsNumber 0140                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 602C  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 612C  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4B9C  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4E14  
                                 ___lldiv 4C22                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 5472  
                       ??_USBStallHandler 007D                                   ___lwmod 5896  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6274                      __size_of_putUSBUSART 0022  
                                 __pcinit 298A                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00D1  
                     __end_of_TurnOnModem 573C                           __size_of_memset 0030  
                               _I2cConfig 0356                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDED                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 008B                               Terminal@Len 03B0  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6212  
                                 __ptext1 5C88                                   __ptext2 621E  
                                 __ptext3 6258                                   __ptext4 600E  
                                 __ptext5 6082                                   __ptext6 5DD0  
                                 __ptext7 5D48                                   __ptext8 3BE4  
                                 __ptext9 31A2                                   _inPipes 00B5  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 452A                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 5CE8  
                                 _isdigit 5F8A                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B5                               ?_SystemInit 0001  
                                 clear_10 2AA2                                   clear_11 2AAE  
                        ___awmod@dividend 007D                         ??_InitializeTasks 00B3  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E9  
     __end_of_Tmr_RegisterTmr2IsrCallback 6228               _Tmr_RegisterTmr2IsrCallback 621E  
                                 _isspace 5DFA                              _Mdm_MainTask 5568  
                                 _isupper 5F46               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                  Term_MainSm@FwkBuildStr 00AF                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2454                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC2F                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 5EDE                                   _sprintf 38B4  
                                 _tolower 60CE           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 61E6                          _HttpGetDataLocal 03A7  
                __end_of_Mdm_SetSmsFormat 5608                    Term_MainSm@FwkMajorStr 00A7  
                          __pintcode_body 41E2                                   _toupper 60E6  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2AB4                              _getsUSBUSART 4834  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DC  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC2D  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00C3                                   itoa@buf 0093  
                                 memset@c 007F                    Term_MainSm@FwkMinorStr 00AB  
                                 itoa@val 0095                                   memset@n 0081  
                                 memset@p 0083                             __Lmediumconst FC26  
                          _ModemEvtParser 1BAA                                   int_func 41E2  
                               i1u1442_20 246A                           _USB1msTickCount 0318  
         _dummy_encapsulated_cmd_response 037B                                 i1u1446_28 258A  
                               i1u1470_28 5EEE                                 i1u1446_29 259E  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 604A  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 6116  
                     _ActivateRiDetection 0041                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 5C56  
                           StringCopy@Len 0081                         ?_MdmHttp_MainTask 0001  
                 _USBCtrlEPAllowDataStage 45CA                        _UsbDevice_MainTask 5E72  
                            _Mcu_ClearWdg 6264                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0085  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 30A4                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E8                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 22F6                           _RtccIsrCallback 02E5  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
              _USBStatusStageEnabledFlag1 0028                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 5F24  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0308                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                            ??_Tmr_StartTmr 007D  
            __end_of_I2cSlv_I2cReadMsgSts 5FCE                  i1I2cSlv_SendI2cMsg@TxSts 0020  
                       StringCopy@DestStr 007F                          __CFG_CPUDIV$OSC1 000000  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E7  
                        _HttpGetMethodSts 01EC                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                        _BothEP0OutUOWNsSet 01E1  
                         ??_HttpGetMethod 009D                   __size_of_Mdm_GetSmsData 0078  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 1D32                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D7  
                   __end_of_StopCondition 626C                  __size_of_HighPriorityIsr 4286  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0372  
                               _Led2Blink 0369                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0360              __end_of_USBTransferOnePacket 4080  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0396  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 612C  
                               _Led2Pulse 0390                                 _Led3Pulse 038A  
                       _I2cSlv_SendI2cMsg 5A1E           SetBaudRate@DesiredI2cBusClockHz 0096  
                       ??_blinkForSeconds 0095                           ??_ScheduleTasks 04FA  
                          _Tmr_TmrBConfig 3BE4                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6194                         _OsAlrm_SetOsAlarm 3D74  
                    Terminal@TermRxBuffer 0486                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 56A4  
                     __CFG_MSSP7B_EN$MSK7 000000                               _TurnOnModem 56F0  
                               _ClipEvent 00DF                              ??_MyApp_Task 0099  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00DA  
                  _USBCtrlTrfSetupHandler 4B10                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 26FC  
   __end_of_USBIncrement1msInternalTimers 5F46    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 5F24               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 52C6                            _CheckAckStatus 6246  
                          __end_of___wmul 5E4C                       ??_I2cSlv_SendI2cMsg 0084  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 5784  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002D  
                          __end_of_memset 5CE8                        _UartTxBufferStatus 5608  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E2  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 61F6  
                               _MdmStatus 00D3                            __end_of_strcat 5216  
                          __end_of_strcpy 5C88                            __end_of_strlen 5A1E  
                          __end_of_strtol 19F2                       start_initialization 298A  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 3628                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 5BF0                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0550  
                             _cdc_data_tx 0784              __end_of_USBConfigureEndpoint 479E  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC31  
                      __end_of_MyApp_Task 2028                          _UpdateOsCounters 61D6  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3B1A  
               __end_of_I2cSlv_SendI2cMsg 5A5C                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 495E  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 61C6                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3CAC  
                               _SendSmsSm 19F2                 __end_of_OsAlrm_SetOsAlarm 3E3C  
                  __end_of_Tmr_TmrBIrqSet 56F0                                 _TaskTable 0590  
                               _RingEvent 00E0                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D6  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B8  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 5216                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 5DA4                    _pBDTEntryEP0OutCurrent 00C5  
                           _Term_MainTask 609C                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6250                                  ??___lmul 0085  
                           _isxdigit$6425 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2D2C  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 4D28  
                      HttpGetMethod@Index 01C8                               __pdataBANK1 01FF  
                             __pdataBANK2 02F3                               __pdataBANK3 03BE  
                             __pdataBANK4 04E2                               __pdataBANK5 0590  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5472  
                  __end_of_ConfigureModem 3704                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D8            __end_of_USBStdGetStatusHandler 4132  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC31  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5518                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04FA                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D3                              _SetAckStatus 616E  
                            _isalpha$6415 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6228                              _isdigit$6149 007E  
                    ?_USBStdGetDscHandler 0001             UpdateSchFlag@InterruptCounter 02DB  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 59A0  
     InitGprsNetwork@GprsNetInitNextState 002A                      MyApp_Task@blickTicks 03FD  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 5FEE  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 5B10  
            __end_of_LedBlinkStateMachine 2844                               sprintf@flag 0083  
                         _USBStallHandler 57CA                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 6082  
              __end_of_USBCheckCDCRequest 41E2              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 531E                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 5FEE                              ??_StringCopy 0083  
                        _Led_SetLedStatus 5D18                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 5FAC  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC26  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5EBA  
                               __ptext101 4D28                                 __ptext110 54C6  
                               __ptext102 541E                                 __ptext111 2BFA  
                               __ptext103 5B84                                 __ptext120 0DC8  
                               __ptext112 3628                                 __ptext104 5216  
                               __ptext121 05EC                                 __ptext113 0ABC  
                               __ptext105 56F0                                 __ptext130 6194  
                               __ptext122 5A5C                                 __ptext114 2AC2  
                               __ptext106 19F2                             Terminal@Index 00A6  
                               __ptext131 5BBA                                 __ptext123 58DA  
                               __ptext115 526E                                 __ptext107 59A0  
                               __ptext140 5656                                 __ptext132 43E0  
                               __ptext124 5FEE                                 __ptext116 52C6  
                               __ptext108 1BAA                                 __ptext141 4C22  
                               __ptext133 3290                                 __ptext125 5608  
                               __ptext117 2196                                 __ptext109 5BF0  
                               __ptext150 616E                                 __ptext142 5DA4  
                               __ptext134 5D18                                 __ptext126 509C  
                               __ptext118 4338                                 __ptext151 6232  
                               __ptext143 3E3C                                 __ptext135 26FC  
                               __ptext127 515C                                 __ptext119 6250  
                               __ptext160 61D6                                 __ptext152 60FE  
                               __ptext144 5D76                                 __ptext136 5472  
                               __ptext128 49F2                                 __ptext161 2454  
                               __ptext153 6270                                 __ptext145 2028  
                               __ptext137 3D74                                 __ptext129 3CAC  
                               __ptext170 6158                                 __ptext162 5E4C  
                               __ptext154 623C                                 __ptext146 22F6  
                               __ptext138 5E24                                 __ptext171 6274  
                               __ptext163 531E                                 __ptext155 6246  
                               __ptext147 6228                                 __ptext139 4E86  
                               __ptext172 6278                                 __ptext164 6066  
                               __ptext148 6268                                 __ptext173 627C  
                               __ptext165 5B4A                                 __ptext157 5EDE  
                               __ptext149 626C                                 __ptext174 0000  
                               __ptext166 6142                                 __ptext158 61F6  
                               __ptext159 604A                                 __ptext168 61E6  
                               __ptext169 3B1A                                  ?___awmod 007D  
                      _Sch_SchmIntService 61F6                           _InitializeTasks 4DA0  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                         _CallClosedEvent 003E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04D7                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 039C  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 3FC2                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 0440                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 03A2  
          InitializeTasks@ActiveTaskIndex 02C8                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 4D28  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                           Terminal@Payload 0500  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 5036  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 5036                ConfigureModem@DelayCounter 0326  
                      __end_of_StringCopy 50FE                               _ep_data_out 02CF  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00E1                           Terminal@SwTimer 04CC  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                                _I2cReady 02EB                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D7                          _OsTmr_StartTimer 515C  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 6142                __end_of_Mcu_StartSystemPll 602C  
                            _PhoneNumbLen 00D4                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 5F02                             _Rtcm_MainTask 4A82  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 009A  
                        SendSmsSm@SwTimer 03E7                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F3           HttpGetMethod@GetMethodNextState 00D2  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4E86  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 5CB8  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4A82  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A9                      _USBConfigureEndpoint 4706  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 25AA                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5E4C                     __end_of_initGprsModem 4706  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 6258                    __end_of_Mdm_GetSmsData 4DA0  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E3  
                                _ApnLocal 0324                            _StartCondition 626C  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0089  
             HttpGetMethod@GetMethodState 01E9                             _Tmr_TmrBPrSet 31A2  
                       _NewStringReceived 003C                              _isspace$6418 007E  
                        _UartSetConfigLow 52C6                                  _GetSmsSm 2BFA  
                 __end_of_USBStallHandler 580E                      Mdm_DrvMainFn@Options 0001  
                         _blinkForSeconds 5B10                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DC                                  _MdmCntSm 4338  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 299E                                 copy_data1 29BE  
                               copy_data2 29DE                                 copy_data3 2A10  
            __end_of_LedPulseStateMachine 3378                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 345E  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6232                             i2_GenerateEvt 6158  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE5A                 __end_of_I2c_InitI2cModule 4EF8  
                                _MsgReady FE31                           ??_Term_MainTask 00B3  
                 __end_of_InitializeTasks 4E14                initGprsModem@isInitialized 01D5  
                 ?_USBCtrlTrfSetupHandler 0001                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 479E  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0320                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DE  
                         _SetUartBaudRate 2AC2              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 2028                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 61E6  
                        __size_of___lldiv 0084                           MyApp_Task@F8996 03CC  
                         MyApp_Task@F8989 04E2                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 604A                       __end_of_putUSBUSART 5F8A  
                             _line_coding 0383                              _Rtcc_LockRtc 61B6  
                    _LedBlinkStateMachine 26FC                    __end_of_StartCondition 6270  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F0                 Rtcm_GetRtccDate@LocalDate 008A  
                         ?_Mdm_GetSmsData 0087                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6421 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        ??_ModemEvtParser 0090                          _GetOsTickCounter 6194  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0186                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AC                  ModemEvtParser@RingString 00A4  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                           MyApp_Task@phone 0132  
                                __ptext10 56A4                                  __ptext11 5FCE  
                                __ptext20 5E72                                  __ptext12 479E  
                                __ptext21 5784                                  __ptext13 602C  
                         ??_UartWriteByte 007E                                  __ptext30 5C24  
                                __ptext22 5568                                  __ptext14 2E5A  
                                __ptext31 57CA                                  __ptext23 5376  
                                __ptext15 4DA0                                  __ptext40 3378  
                                __ptext32 5F24                                  __ptext24 625E  
                                __ptext16 1EB8                                  __ptext41 4080  
                                __ptext33 25AA                                  __ptext25 5F02  
                                __ptext17 609C                                  __ptext50 2F80  
                                __ptext42 2D2C                                  __ptext34 48CA  
                                __ptext26 6182                                  __ptext18 4A82  
                                __ptext51 3A4E                                  __ptext43 135A  
                                __ptext35 573C                                  __ptext27 6264  
                                __ptext19 3982                                  __ptext60 00D0  
                                __ptext52 3F00                                  __ptext44 50FE  
                                __ptext36 4B10                                  __ptext28 1D32  
                                __ptext61 345E                                  __ptext53 3704  
                                __ptext45 4132                                  __ptext37 30A4  
                                __ptext29 5AD6                                  __ptext70 5F68  
                                __ptext62 60CE                                  __ptext54 2844  
                                __ptext46 4EF8                                  __ptext38 45CA  
                                __ptext71 5852                                  __ptext63 5A9A  
                                __ptext55 10B6                                  __ptext47 580E  
                                __ptext39 3544                                  __ptext80 5960  
                                __ptext72 428E                                  __ptext64 181C  
                                __ptext56 59E0                                  __ptext48 4706  
                                __ptext81 5FAC                                  __ptext73 5896  
                                __ptext65 60E6                                  __ptext57 51BA  
                                __ptext49 4FD0                                  __ptext90 6116  
                                __ptext82 53CA                                  __ptext74 4834  
                                __ptext66 5DFA                                  __ptext58 38B4  
                                __ptext91 452A                                  __ptext83 61A6  
                                __ptext75 3FC2                                  __ptext67 5CE8  
                                __ptext59 5CB8                                  __ptext92 612C  
                                __ptext84 15EE                                  __ptext76 37DC  
                                __ptext68 5F46                                  __ptext93 4F64  
                                __ptext85 4E14                                  __ptext77 5F8A  
                                __ptext69 5C56                                  __ptext94 4668  
                                __ptext86 4B9C                                  __ptext78 4CA6  
                                __ptext95 55B8                                  __ptext87 61B6  
                                __ptext79 5A1E                                  __ptext96 5B10  
                                __ptext88 5036                                  __ptext97 4488  
                                __ptext89 495E                                  __ptext98 61C6  
                                __ptext99 5E96                          __size_of_isupper 0022  
                              _I2cDummyTx 6066                    Tmr_TmrBIrqSet@Priority 007D  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 5E96               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4B9C                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 0087                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6246                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 625E                        ??_USBCtrlEPService 0097  
                                _isxdigit 5A9A                             _Mdm_IsRinging 5EBA  
                     _USBCtrlTrfInHandler 3F00                  I2c_ReadData@I2cReadState 0034  
              __end_of_Mdm_RequestSmsData 61D6                     __end_of_ScheduleTasks 2F80  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
               blinkForSeconds@blickTicks 0093                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 4FD0                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 0085  
               _USBCtrlEPAllowStatusStage 3A4E                       ??_Mdm_IsSmsReceived 0081  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 00B3  
                              strtol@sign 0093                           Term_MainSm@Data 0454  
                          _PhoneNumberLen 0322                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5B4A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5B4A  
                __end_of_Mcu_ConfigExtInt 609C                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00CC                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 5FCE                  __end_of_Led_SetLedStatus 5D48  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 53CA                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 5EBA                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 49F2  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 515C  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 50FE                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2BFA  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                    blinkForSeconds@seconds 0095  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009F  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 591E  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 5B84                  __end_of_Rtcm_GetRtccDate 509C  
                             _putUSBUSART 5F68                       _USBCtrlTrfRxService 2F80  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 5AD6                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 51BA                      _LedPulseStateMachine 3290  
                      _USBCheckCDCRequest 4132                       _USBCtrlTrfTxService 3704  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                        _Rtcc_AlarmConfig 4F64                           ??_Tmr_TmrBPrSet 009A  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01DD                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 5784                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 5DFA  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CD  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 43E0          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                           _StopCondition 6268                     ??i1_I2cSlv_SendI2cMsg 0020  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 0029  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 5BF0                      __end_of_CDCTxService 298A  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2D                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F2                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 6182  
