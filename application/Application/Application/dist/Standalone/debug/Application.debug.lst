

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 13 14:51:31 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    27                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    28                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	text0,global,reloc=2,class=CODE,delta=1
    33                           	psect	text1,global,reloc=2,class=CODE,delta=1
    34                           	psect	text2,global,reloc=2,class=CODE,delta=1
    35                           	psect	text3,global,reloc=2,class=CODE,delta=1
    36                           	psect	text4,global,reloc=2,class=CODE,delta=1
    37                           	psect	text5,global,reloc=2,class=CODE,delta=1
    38                           	psect	text6,global,reloc=2,class=CODE,delta=1
    39                           	psect	text7,global,reloc=2,class=CODE,delta=1
    40                           	psect	text8,global,reloc=2,class=CODE,delta=1
    41                           	psect	text9,global,reloc=2,class=CODE,delta=1
    42                           	psect	text10,global,reloc=2,class=CODE,delta=1
    43                           	psect	text11,global,reloc=2,class=CODE,delta=1
    44                           	psect	text12,global,reloc=2,class=CODE,delta=1
    45                           	psect	text13,global,reloc=2,class=CODE,delta=1
    46                           	psect	text14,global,reloc=2,class=CODE,delta=1
    47                           	psect	text15,global,reloc=2,class=CODE,delta=1
    48                           	psect	text16,global,reloc=2,class=CODE,delta=1
    49                           	psect	text17,global,reloc=2,class=CODE,delta=1
    50                           	psect	text18,global,reloc=2,class=CODE,delta=1
    51                           	psect	text19,global,reloc=2,class=CODE,delta=1
    52                           	psect	text20,global,reloc=2,class=CODE,delta=1
    53                           	psect	text21,global,reloc=2,class=CODE,delta=1
    54                           	psect	text22,global,reloc=2,class=CODE,delta=1
    55                           	psect	text23,global,reloc=2,class=CODE,delta=1
    56                           	psect	text24,global,reloc=2,class=CODE,delta=1
    57                           	psect	text25,global,reloc=2,class=CODE,delta=1
    58                           	psect	text26,global,reloc=2,class=CODE,delta=1
    59                           	psect	text27,global,reloc=2,class=CODE,delta=1
    60                           	psect	text28,global,reloc=2,class=CODE,delta=1
    61                           	psect	text29,global,reloc=2,class=CODE,delta=1
    62                           	psect	text30,global,reloc=2,class=CODE,delta=1
    63                           	psect	text31,global,reloc=2,class=CODE,delta=1
    64                           	psect	text32,global,reloc=2,class=CODE,delta=1
    65                           	psect	text33,global,reloc=2,class=CODE,delta=1
    66                           	psect	text34,global,reloc=2,class=CODE,delta=1
    67                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text36,global,reloc=2,class=CODE,delta=1
    69                           	psect	text37,global,reloc=2,class=CODE,delta=1
    70                           	psect	text38,global,reloc=2,class=CODE,delta=1
    71                           	psect	text39,global,reloc=2,class=CODE,delta=1
    72                           	psect	text40,global,reloc=2,class=CODE,delta=1
    73                           	psect	text41,global,reloc=2,class=CODE,delta=1
    74                           	psect	text42,global,reloc=2,class=CODE,delta=1
    75                           	psect	text43,global,reloc=2,class=CODE,delta=1
    76                           	psect	text44,global,reloc=2,class=CODE,delta=1
    77                           	psect	text45,global,reloc=2,class=CODE,delta=1
    78                           	psect	text46,global,reloc=2,class=CODE,delta=1
    79                           	psect	text47,global,reloc=2,class=CODE,delta=1
    80                           	psect	text48,global,reloc=2,class=CODE,delta=1
    81                           	psect	text49,global,reloc=2,class=CODE,delta=1
    82                           	psect	text50,global,reloc=2,class=CODE,delta=1
    83                           	psect	text51,global,reloc=2,class=CODE,delta=1
    84                           	psect	text52,global,reloc=2,class=CODE,delta=1
    85                           	psect	text53,global,reloc=2,class=CODE,delta=1
    86                           	psect	text54,global,reloc=2,class=CODE,delta=1
    87                           	psect	text55,global,reloc=2,class=CODE,delta=1
    88                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text58,global,reloc=2,class=CODE,delta=1
    91                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text60,global,reloc=2,class=CODE,delta=1
    93                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text70,global,reloc=2,class=CODE,delta=1
   103                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text74,global,reloc=2,class=CODE,delta=1
   107                           	psect	text75,global,reloc=2,class=CODE,delta=1
   108                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text78,global,reloc=2,class=CODE,delta=1
   111                           	psect	text79,global,reloc=2,class=CODE,delta=1
   112                           	psect	text80,global,reloc=2,class=CODE,delta=1
   113                           	psect	text81,global,reloc=2,class=CODE,delta=1
   114                           	psect	text82,global,reloc=2,class=CODE,delta=1
   115                           	psect	text83,global,reloc=2,class=CODE,delta=1
   116                           	psect	text84,global,reloc=2,class=CODE,delta=1
   117                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text87,global,reloc=2,class=CODE,delta=1
   120                           	psect	text88,global,reloc=2,class=CODE,delta=1
   121                           	psect	text89,global,reloc=2,class=CODE,delta=1
   122                           	psect	text90,global,reloc=2,class=CODE,delta=1
   123                           	psect	text91,global,reloc=2,class=CODE,delta=1
   124                           	psect	text92,global,reloc=2,class=CODE,delta=1
   125                           	psect	text93,global,reloc=2,class=CODE,delta=1
   126                           	psect	text94,global,reloc=2,class=CODE,delta=1
   127                           	psect	text95,global,reloc=2,class=CODE,delta=1
   128                           	psect	text96,global,reloc=2,class=CODE,delta=1
   129                           	psect	text97,global,reloc=2,class=CODE,delta=1
   130                           	psect	text98,global,reloc=2,class=CODE,delta=1
   131                           	psect	text99,global,reloc=2,class=CODE,delta=1
   132                           	psect	text100,global,reloc=2,class=CODE,delta=1
   133                           	psect	text101,global,reloc=2,class=CODE,delta=1
   134                           	psect	text102,global,reloc=2,class=CODE,delta=1
   135                           	psect	text103,global,reloc=2,class=CODE,delta=1
   136                           	psect	text104,global,reloc=2,class=CODE,delta=1
   137                           	psect	text105,global,reloc=2,class=CODE,delta=1
   138                           	psect	text106,global,reloc=2,class=CODE,delta=1
   139                           	psect	text107,global,reloc=2,class=CODE,delta=1
   140                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text109,global,reloc=2,class=CODE,delta=1
   142                           	psect	text110,global,reloc=2,class=CODE,delta=1
   143                           	psect	text111,global,reloc=2,class=CODE,delta=1
   144                           	psect	text112,global,reloc=2,class=CODE,delta=1
   145                           	psect	text113,global,reloc=2,class=CODE,delta=1
   146                           	psect	text114,global,reloc=2,class=CODE,delta=1
   147                           	psect	text115,global,reloc=2,class=CODE,delta=1
   148                           	psect	text116,global,reloc=2,class=CODE,delta=1
   149                           	psect	text117,global,reloc=2,class=CODE,delta=1
   150                           	psect	text118,global,reloc=2,class=CODE,delta=1
   151                           	psect	text119,global,reloc=2,class=CODE,delta=1
   152                           	psect	text120,global,reloc=2,class=CODE,delta=1
   153                           	psect	text121,global,reloc=2,class=CODE,delta=1
   154                           	psect	text122,global,reloc=2,class=CODE,delta=1
   155                           	psect	text123,global,reloc=2,class=CODE,delta=1
   156                           	psect	text124,global,reloc=2,class=CODE,delta=1
   157                           	psect	text125,global,reloc=2,class=CODE,delta=1
   158                           	psect	text126,global,reloc=2,class=CODE,delta=1
   159                           	psect	text127,global,reloc=2,class=CODE,delta=1
   160                           	psect	text128,global,reloc=2,class=CODE,delta=1
   161                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text130,global,reloc=2,class=CODE,delta=1
   163                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=1
   164                           	psect	text132,global,reloc=2,class=CODE,delta=1
   165                           	psect	text133,global,reloc=2,class=CODE,delta=1
   166                           	psect	text134,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text135,global,reloc=2,class=CODE,delta=1
   168                           	psect	text136,global,reloc=2,class=CODE,delta=1
   169                           	psect	text137,global,reloc=2,class=CODE,delta=1
   170                           	psect	text138,global,reloc=2,class=CODE,delta=1
   171                           	psect	text139,global,reloc=2,class=CODE,delta=1
   172                           	psect	text140,global,reloc=2,class=CODE,delta=1
   173                           	psect	text141,global,reloc=2,class=CODE,delta=1
   174                           	psect	text142,global,reloc=2,class=CODE,delta=1
   175                           	psect	text143,global,reloc=2,class=CODE,delta=1
   176                           	psect	text144,global,reloc=2,class=CODE,delta=1
   177                           	psect	text145,global,reloc=2,class=CODE,delta=1
   178                           	psect	text146,global,reloc=2,class=CODE,delta=1
   179                           	psect	text147,global,reloc=2,class=CODE,delta=1
   180                           	psect	text148,global,reloc=2,class=CODE,delta=1
   181                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   182                           	psect	text150,global,reloc=2,class=CODE,delta=1
   183                           	psect	text151,global,reloc=2,class=CODE,delta=1
   184                           	psect	text152,global,reloc=2,class=CODE,delta=1
   185                           	psect	text153,global,reloc=2,class=CODE,delta=1
   186                           	psect	text154,global,reloc=2,class=CODE,delta=1
   187                           	psect	text155,global,reloc=2,class=CODE,delta=1
   188                           	psect	text156,global,reloc=2,class=CODE,delta=1
   189                           	psect	text157,global,reloc=2,class=CODE,delta=1
   190                           	psect	text158,global,reloc=2,class=CODE,delta=1
   191                           	psect	text159,global,reloc=2,class=CODE,delta=1
   192                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   193                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   194                           	psect	text161,global,reloc=2,class=CODE,delta=1
   195                           	psect	text162,global,reloc=2,class=CODE,delta=1
   196                           	psect	text163,global,reloc=2,class=CODE,delta=1
   197                           	psect	text164,global,reloc=2,class=CODE,delta=1
   198                           	psect	text165,global,reloc=2,class=CODE,delta=1
   199                           	psect	text166,global,reloc=2,class=CODE,delta=1
   200                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   201                           	psect	text167,global,reloc=2,class=CODE,delta=1
   202                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   203                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   204                           	dabs	1,0x400,48,_BDT
   205                           	dabs	1,0x438,8,_CtrlTrfData
   206                           	dabs	1,0x430,8,_SetupPkt
   207  0000                     
   208                           ; Version 1.45
   209                           ; Generated 16/11/2017 GMT
   210                           ; 
   211                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   212                           ; All rights reserved.
   213                           ; 
   214                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   215                           ; 
   216                           ; Redistribution and use in source and binary forms, with or without modification, are
   217                           ; permitted provided that the following conditions are met:
   218                           ; 
   219                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   220                           ;        conditions and the following disclaimer.
   221                           ; 
   222                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   223                           ;        of conditions and the following disclaimer in the documentation and/or other
   224                           ;        materials provided with the distribution.
   225                           ; 
   226                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   227                           ;        software without specific prior written permission.
   228                           ; 
   229                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   230                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   231                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   232                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   233                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   234                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   235                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   236                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   237                           ; 
   238                           ; 
   239                           ; Code-generator required, PIC18F46J50 Definitions
   240                           ; 
   241                           ; SFR Addresses
   242  0000                     
   243                           	psect	idataBANK1
   244  005EBA                     __pidataBANK1:
   245                           	opt stack 0
   246                           
   247                           ;initializer for MyApp_Task@countRelay1
   248  005EBA  01                 	db	1
   249                           
   250                           ;initializer for InitGprsNetwork@GprsInitSts
   251  005EBB  01                 	db	1
   252                           
   253                           	psect	idataBANK2
   254  005E3E                     __pidataBANK2:
   255                           	opt stack 0
   256                           
   257                           ;initializer for Terminal@EchoOption
   258  005E3E  01                 	db	1
   259                           
   260                           ;initializer for _MainSystemTimebaseFlag
   261  005E3F  01                 	db	1
   262                           
   263                           ;initializer for _ConnTimeout
   264  005E40  00                 	db	0
   265  005E41  01                 	db	1
   266  005E42  0000               	dw	0
   267  005E44  0000               	dw	0
   268  005E46  0000               	dw	0
   269  005E48  0000               	dw	0
   270  005E4A  00                 	db	0
   271                           
   272                           	psect	idataBANK3
   273  005452                     __pidataBANK3:
   274                           	opt stack 0
   275                           
   276                           ;initializer for ModemEvtParser@F9090
   277  005452  43                 	db	67
   278  005453  61                 	db	97
   279  005454  6C                 	db	108
   280  005455  6C                 	db	108
   281  005456  20                 	db	32
   282  005457  52                 	db	82
   283  005458  65                 	db	101
   284  005459  61                 	db	97
   285  00545A  64                 	db	100
   286  00545B  79                 	db	121
   287                           
   288                           ;initializer for ModemEvtParser@F9088
   289  00545C  2B                 	db	43
   290  00545D  43                 	db	67
   291  00545E  4D                 	db	77
   292  00545F  54                 	db	84
   293  005460  49                 	db	73
   294                           
   295                           ;initializer for ModemEvtParser@F9086
   296  005461  52                 	db	82
   297  005462  49                 	db	73
   298  005463  4E                 	db	78
   299  005464  47                 	db	71
   300                           
   301                           ;initializer for MyApp_Task@F8989
   302  005465  50                 	db	80
   303  005466  01                 	db	1
   304                           
   305                           ;initializer for MyApp_Task@F8986
   306  005467  50                 	db	80
   307  005468  00                 	db	0
   308                           
   309                           ;initializer for MyApp_Task@countRelay2
   310  005469  0001               	dw	1
   311                           
   312                           ;initializer for triggerRelay@F8966
   313  00546B  50                 	db	80
   314  00546C  00                 	db	0
   315                           
   316                           ;initializer for Term_MainSm@TermDelay
   317  00546D  01                 	db	1
   318  00546E  01                 	db	1
   319  00546F  0000               	dw	0
   320  005471  0000               	dw	0
   321  005473  0000               	dw	0
   322  005475  0000               	dw	0
   323  005477  00                 	db	0
   324                           
   325                           ;initializer for _ConnWait
   326  005478  00                 	db	0
   327  005479  01                 	db	1
   328  00547A  0000               	dw	0
   329  00547C  0000               	dw	0
   330  00547E  0000               	dw	0
   331  005480  0000               	dw	0
   332  005482  00                 	db	0
   333                           
   334                           ;initializer for SendSmsSm@SwTimer
   335  005483  01                 	db	1
   336  005484  01                 	db	1
   337  005485  0000               	dw	0
   338  005487  0000               	dw	0
   339  005489  0000               	dw	0
   340  00548B  0000               	dw	0
   341  00548D  00                 	db	0
   342                           
   343                           ;initializer for CheckModem@Timeout
   344  00548E  00                 	db	0
   345  00548F  01                 	db	1
   346  005490  0000               	dw	0
   347  005492  0000               	dw	0
   348  005494  0000               	dw	0
   349  005496  0000               	dw	0
   350  005498  00                 	db	0
   351                           
   352                           	psect	idataBANK4
   353  004F22                     __pidataBANK4:
   354                           	opt stack 0
   355                           
   356                           ;initializer for MyApp_Task@F8995
   357  004F22  33                 	db	51
   358  004F23  32                 	db	50
   359  004F24  30                 	db	48
   360  004F25  30                 	db	48
   361  004F26  32                 	db	50
   362  004F27  37                 	db	55
   363  004F28  36                 	db	54
   364  004F29  33                 	db	51
   365  004F2A  31                 	db	49
   366  004F2B  38                 	db	56
   367                           
   368                           ;initializer for _TaskTable
   369  004F2C  98                 	db	low _Mdm_DrvMainFn
   370  004F2D  5E                 	db	high _Mdm_DrvMainFn
   371  004F2E  00                 	db	0
   372  004F2F  0000               	dw	0
   373  004F31  000A               	dw	10
   374  004F33  00                 	db	0
   375  004F34  DC                 	db	low _I2cSlv_MainTask
   376  004F35  50                 	db	high _I2cSlv_MainTask
   377  004F36  00                 	db	0
   378  004F37  0000               	dw	0
   379  004F39  0001               	dw	1
   380  004F3B  00                 	db	0
   381  004F3C  D2                 	db	low _Mdm_MainTask
   382  004F3D  52                 	db	high _Mdm_MainTask
   383  004F3E  00                 	db	0
   384  004F3F  0000               	dw	0
   385  004F41  0001               	dw	1
   386  004F43  00                 	db	0
   387  004F44  9A                 	db	low _MdmHttp_MainTask
   388  004F45  54                 	db	high _MdmHttp_MainTask
   389  004F46  00                 	db	0
   390  004F47  0000               	dw	0
   391  004F49  0001               	dw	1
   392  004F4B  00                 	db	0
   393  004F4C  1C                 	db	low _UsbDevice_MainTask
   394  004F4D  5B                 	db	high _UsbDevice_MainTask
   395  004F4E  00                 	db	0
   396  004F4F  0000               	dw	0
   397  004F51  0001               	dw	1
   398  004F53  00                 	db	0
   399  004F54  64                 	db	low _Wdg_MainTask
   400  004F55  5B                 	db	high _Wdg_MainTask
   401  004F56  00                 	db	0
   402  004F57  0000               	dw	0
   403  004F59  0064               	dw	100
   404  004F5B  00                 	db	0
   405  004F5C  5A                 	db	low _Led_MainTask
   406  004F5D  36                 	db	high _Led_MainTask
   407  004F5E  00                 	db	0
   408  004F5F  0000               	dw	0
   409  004F61  0032               	dw	50
   410  004F63  00                 	db	0
   411  004F64  86                 	db	low _Rtcm_MainTask
   412  004F65  47                 	db	high _Rtcm_MainTask
   413  004F66  00                 	db	0
   414  004F67  0000               	dw	0
   415  004F69  0064               	dw	100
   416  004F6B  00                 	db	0
   417  004F6C  FE                 	db	low _Term_MainTask
   418  004F6D  5C                 	db	high _Term_MainTask
   419  004F6E  00                 	db	0
   420  004F6F  0000               	dw	0
   421  004F71  0001               	dw	1
   422  004F73  00                 	db	0
   423  004F74  26                 	db	low _MyApp_Task
   424  004F75  49                 	db	high _MyApp_Task
   425  004F76  00                 	db	0
   426  004F77  0000               	dw	0
   427  004F79  0064               	dw	100
   428  004F7B  00                 	db	0
   429                           
   430                           	psect	mediumconst
   431  00FC54                     __pmediumconst:
   432                           	opt stack 0
   433  00FC54  00                 	db	0
   434  00FC55                     _USB_SD_Ptr:
   435                           	opt stack 0
   436  00FC55  88                 	db	low _sd000
   437  00FC56  FE                 	db	high _sd000
   438  00FC57  41                 	db	low _sd001
   439  00FC58  FE                 	db	high _sd001
   440  00FC59  1B                 	db	low _sd002
   441  00FC5A  FE                 	db	high _sd002
   442  00FC5B                     __end_of_USB_SD_Ptr:
   443                           	opt stack 0
   444  00FC5B                     _USB_CD_Ptr:
   445                           	opt stack 0
   446  00FC5B  D8                 	db	low _configDescriptor1
   447  00FC5C  FD                 	db	high _configDescriptor1
   448  00FC5D                     __end_of_USB_CD_Ptr:
   449                           	opt stack 0
   450  00FC5D                     _TaskNumber:
   451                           	opt stack 0
   452  00FC5D  000A               	dw	10
   453  00FC5F                     __end_of_TaskNumber:
   454                           	opt stack 0
   455  00FC5F                     _MsgFormat:
   456                           	opt stack 0
   457  00FC5F  48                 	db	72
   458  00FC60  6F                 	db	111
   459  00FC61  73                 	db	115
   460  00FC62  74                 	db	116
   461  00FC63  20                 	db	32
   462  00FC64  6D                 	db	109
   463  00FC65  65                 	db	101
   464  00FC66  73                 	db	115
   465  00FC67  73                 	db	115
   466  00FC68  61                 	db	97
   467  00FC69  67                 	db	103
   468  00FC6A  65                 	db	101
   469  00FC6B  20                 	db	32
   470  00FC6C  66                 	db	102
   471  00FC6D  6F                 	db	111
   472  00FC6E  72                 	db	114
   473  00FC6F  6D                 	db	109
   474  00FC70  61                 	db	97
   475  00FC71  74                 	db	116
   476  00FC72  3A                 	db	58
   477  00FC73  20                 	db	32
   478  00FC74  0D                 	db	13
   479  00FC75  0A                 	db	10
   480  00FC76  5B                 	db	91
   481  00FC77  6F                 	db	111
   482  00FC78  70                 	db	112
   483  00FC79  5F                 	db	95
   484  00FC7A  74                 	db	116
   485  00FC7B  79                 	db	121
   486  00FC7C  70                 	db	112
   487  00FC7D  65                 	db	101
   488  00FC7E  5D                 	db	93
   489  00FC7F  3A                 	db	58
   490  00FC80  5B                 	db	91
   491  00FC81  6F                 	db	111
   492  00FC82  70                 	db	112
   493  00FC83  5D                 	db	93
   494  00FC84  3A                 	db	58
   495  00FC85  5B                 	db	91
   496  00FC86  6C                 	db	108
   497  00FC87  65                 	db	101
   498  00FC88  6E                 	db	110
   499  00FC89  5D                 	db	93
   500  00FC8A  3A                 	db	58
   501  00FC8B  5B                 	db	91
   502  00FC8C  61                 	db	97
   503  00FC8D  64                 	db	100
   504  00FC8E  64                 	db	100
   505  00FC8F  72                 	db	114
   506  00FC90  5D                 	db	93
   507  00FC91  3A                 	db	58
   508  00FC92  5B                 	db	91
   509  00FC93  70                 	db	112
   510  00FC94  61                 	db	97
   511  00FC95  79                 	db	121
   512  00FC96  6C                 	db	108
   513  00FC97  6F                 	db	111
   514  00FC98  61                 	db	97
   515  00FC99  64                 	db	100
   516  00FC9A  5D                 	db	93
   517  00FC9B  0D                 	db	13
   518  00FC9C  0A                 	db	10
   519  00FC9D  0D                 	db	13
   520  00FC9E  0A                 	db	10
   521  00FC9F  5B                 	db	91
   522  00FCA0  6F                 	db	111
   523  00FCA1  70                 	db	112
   524  00FCA2  5F                 	db	95
   525  00FCA3  74                 	db	116
   526  00FCA4  79                 	db	121
   527  00FCA5  70                 	db	112
   528  00FCA6  65                 	db	101
   529  00FCA7  5D                 	db	93
   530  00FCA8  20                 	db	32
   531  00FCA9  3D                 	db	61
   532  00FCAA  20                 	db	32
   533  00FCAB  53                 	db	83
   534  00FCAC  4F                 	db	79
   535  00FCAD  2C                 	db	44
   536  00FCAE  53                 	db	83
   537  00FCAF  42                 	db	66
   538  00FCB0  0D                 	db	13
   539  00FCB1  0A                 	db	10
   540  00FCB2  5B                 	db	91
   541  00FCB3  6F                 	db	111
   542  00FCB4  70                 	db	112
   543  00FCB5  5D                 	db	93
   544  00FCB6  20                 	db	32
   545  00FCB7  3D                 	db	61
   546  00FCB8  20                 	db	32
   547  00FCB9  52                 	db	82
   548  00FCBA  3A                 	db	58
   549  00FCBB  20                 	db	32
   550  00FCBC  72                 	db	114
   551  00FCBD  65                 	db	101
   552  00FCBE  61                 	db	97
   553  00FCBF  64                 	db	100
   554  00FCC0  2C                 	db	44
   555  00FCC1  57                 	db	87
   556  00FCC2  3A                 	db	58
   557  00FCC3  20                 	db	32
   558  00FCC4  77                 	db	119
   559  00FCC5  72                 	db	114
   560  00FCC6  69                 	db	105
   561  00FCC7  74                 	db	116
   562  00FCC8  65                 	db	101
   563  00FCC9  0D                 	db	13
   564  00FCCA  0A                 	db	10
   565  00FCCB  5B                 	db	91
   566  00FCCC  6C                 	db	108
   567  00FCCD  65                 	db	101
   568  00FCCE  6E                 	db	110
   569  00FCCF  5D                 	db	93
   570  00FCD0  20                 	db	32
   571  00FCD1  3D                 	db	61
   572  00FCD2  20                 	db	32
   573  00FCD3  32                 	db	50
   574  00FCD4  20                 	db	32
   575  00FCD5  62                 	db	98
   576  00FCD6  79                 	db	121
   577  00FCD7  74                 	db	116
   578  00FCD8  65                 	db	101
   579  00FCD9  20                 	db	32
   580  00FCDA  41                 	db	65
   581  00FCDB  53                 	db	83
   582  00FCDC  43                 	db	67
   583  00FCDD  49                 	db	73
   584  00FCDE  49                 	db	73
   585  00FCDF  0D                 	db	13
   586  00FCE0  0A                 	db	10
   587  00FCE1  5B                 	db	91
   588  00FCE2  61                 	db	97
   589  00FCE3  64                 	db	100
   590  00FCE4  64                 	db	100
   591  00FCE5  72                 	db	114
   592  00FCE6  5D                 	db	93
   593  00FCE7  20                 	db	32
   594  00FCE8  3D                 	db	61
   595  00FCE9  20                 	db	32
   596  00FCEA  32                 	db	50
   597  00FCEB  20                 	db	32
   598  00FCEC  62                 	db	98
   599  00FCED  79                 	db	121
   600  00FCEE  74                 	db	116
   601  00FCEF  65                 	db	101
   602  00FCF0  20                 	db	32
   603  00FCF1  41                 	db	65
   604  00FCF2  53                 	db	83
   605  00FCF3  43                 	db	67
   606  00FCF4  49                 	db	73
   607  00FCF5  49                 	db	73
   608  00FCF6  0D                 	db	13
   609  00FCF7  0A                 	db	10
   610  00FCF8  5B                 	db	91
   611  00FCF9  70                 	db	112
   612  00FCFA  61                 	db	97
   613  00FCFB  79                 	db	121
   614  00FCFC  6C                 	db	108
   615  00FCFD  6F                 	db	111
   616  00FCFE  61                 	db	97
   617  00FCFF  64                 	db	100
   618  00FD00  5D                 	db	93
   619  00FD01  20                 	db	32
   620  00FD02  3D                 	db	61
   621  00FD03  20                 	db	32
   622  00FD04  6D                 	db	109
   623  00FD05  61                 	db	97
   624  00FD06  78                 	db	120
   625  00FD07  20                 	db	32
   626  00FD08  32                 	db	50
   627  00FD09  30                 	db	48
   628  00FD0A  20                 	db	32
   629  00FD0B  62                 	db	98
   630  00FD0C  79                 	db	121
   631  00FD0D  74                 	db	116
   632  00FD0E  65                 	db	101
   633  00FD0F  20                 	db	32
   634  00FD10  41                 	db	65
   635  00FD11  53                 	db	83
   636  00FD12  43                 	db	67
   637  00FD13  49                 	db	73
   638  00FD14  49                 	db	73
   639  00FD15  0D                 	db	13
   640  00FD16  0A                 	db	10
   641  00FD17  0D                 	db	13
   642  00FD18  0A                 	db	10
   643  00FD19  54                 	db	84
   644  00FD1A  65                 	db	101
   645  00FD1B  72                 	db	114
   646  00FD1C  6D                 	db	109
   647  00FD1D  69                 	db	105
   648  00FD1E  6E                 	db	110
   649  00FD1F  61                 	db	97
   650  00FD20  6C                 	db	108
   651  00FD21  20                 	db	32
   652  00FD22  4D                 	db	77
   653  00FD23  6F                 	db	111
   654  00FD24  64                 	db	100
   655  00FD25  65                 	db	101
   656  00FD26  3A                 	db	58
   657  00FD27  20                 	db	32
   658  00FD28  43                 	db	67
   659  00FD29  4F                 	db	79
   660  00FD2A  4D                 	db	77
   661  00FD2B  4D                 	db	77
   662  00FD2C  41                 	db	65
   663  00FD2D  4E                 	db	78
   664  00FD2E  44                 	db	68
   665  00FD2F  20                 	db	32
   666  00FD30  4D                 	db	77
   667  00FD31  4F                 	db	79
   668  00FD32  44                 	db	68
   669  00FD33  45                 	db	69
   670  00FD34  0D                 	db	13
   671  00FD35  0A                 	db	10
   672  00FD36  4D                 	db	77
   673  00FD37  6F                 	db	111
   674  00FD38  64                 	db	100
   675  00FD39  65                 	db	101
   676  00FD3A  6D                 	db	109
   677  00FD3B  20                 	db	32
   678  00FD3C  54                 	db	84
   679  00FD3D  79                 	db	121
   680  00FD3E  70                 	db	112
   681  00FD3F  65                 	db	101
   682  00FD40  3A                 	db	58
   683  00FD41  20                 	db	32
   684  00FD42  47                 	db	71
   685  00FD43  53                 	db	83
   686  00FD44  4D                 	db	77
   687  00FD45  2F                 	db	47
   688  00FD46  47                 	db	71
   689  00FD47  50                 	db	80
   690  00FD48  52                 	db	82
   691  00FD49  53                 	db	83
   692  00FD4A  0D                 	db	13
   693  00FD4B  0A                 	db	10
   694  00FD4C  0D                 	db	13
   695  00FD4D  0A                 	db	10
   696  00FD4E  00                 	db	0
   697  00FD4F                     __end_of_MsgFormat:
   698                           	opt stack 0
   699  00FD4F                     _Welcome:
   700                           	opt stack 0
   701  00FD4F  2A                 	db	42
   702  00FD50  2A                 	db	42
   703  00FD51  2A                 	db	42
   704  00FD52  2A                 	db	42
   705  00FD53  2A                 	db	42
   706  00FD54  2A                 	db	42
   707  00FD55  2A                 	db	42
   708  00FD56  2A                 	db	42
   709  00FD57  2A                 	db	42
   710  00FD58  2A                 	db	42
   711  00FD59  2A                 	db	42
   712  00FD5A  2A                 	db	42
   713  00FD5B  2A                 	db	42
   714  00FD5C  2A                 	db	42
   715  00FD5D  2A                 	db	42
   716  00FD5E  2A                 	db	42
   717  00FD5F  2A                 	db	42
   718  00FD60  2A                 	db	42
   719  00FD61  2A                 	db	42
   720  00FD62  2A                 	db	42
   721  00FD63  2A                 	db	42
   722  00FD64  2A                 	db	42
   723  00FD65  2A                 	db	42
   724  00FD66  2A                 	db	42
   725  00FD67  2A                 	db	42
   726  00FD68  2A                 	db	42
   727  00FD69  2A                 	db	42
   728  00FD6A  2A                 	db	42
   729  00FD6B  2A                 	db	42
   730  00FD6C  2A                 	db	42
   731  00FD6D  2A                 	db	42
   732  00FD6E  2A                 	db	42
   733  00FD6F  2A                 	db	42
   734  00FD70  2A                 	db	42
   735  00FD71  2A                 	db	42
   736  00FD72  2A                 	db	42
   737  00FD73  2A                 	db	42
   738  00FD74  2A                 	db	42
   739  00FD75  2A                 	db	42
   740  00FD76  2A                 	db	42
   741  00FD77  2A                 	db	42
   742  00FD78  2A                 	db	42
   743  00FD79  2A                 	db	42
   744  00FD7A  2A                 	db	42
   745  00FD7B  2A                 	db	42
   746  00FD7C  2A                 	db	42
   747  00FD7D  2A                 	db	42
   748  00FD7E  2A                 	db	42
   749  00FD7F  2A                 	db	42
   750  00FD80  0D                 	db	13
   751  00FD81  0A                 	db	10
   752  00FD82  20                 	db	32
   753  00FD83  20                 	db	32
   754  00FD84  20                 	db	32
   755  00FD85  20                 	db	32
   756  00FD86  20                 	db	32
   757  00FD87  20                 	db	32
   758  00FD88  20                 	db	32
   759  00FD89  20                 	db	32
   760  00FD8A  20                 	db	32
   761  00FD8B  20                 	db	32
   762  00FD8C  20                 	db	32
   763  00FD8D  20                 	db	32
   764  00FD8E  20                 	db	32
   765  00FD8F  20                 	db	32
   766  00FD90  20                 	db	32
   767  00FD91  20                 	db	32
   768  00FD92  20                 	db	32
   769  00FD93  20                 	db	32
   770  00FD94  4D                 	db	77
   771  00FD95  45                 	db	69
   772  00FD96  52                 	db	82
   773  00FD97  43                 	db	67
   774  00FD98  55                 	db	85
   775  00FD99  52                 	db	82
   776  00FD9A  59                 	db	89
   777  00FD9B  20                 	db	32
   778  00FD9C  53                 	db	83
   779  00FD9D  59                 	db	89
   780  00FD9E  53                 	db	83
   781  00FD9F  54                 	db	84
   782  00FDA0  45                 	db	69
   783  00FDA1  4D                 	db	77
   784  00FDA2  0D                 	db	13
   785  00FDA3  0A                 	db	10
   786  00FDA4  2A                 	db	42
   787  00FDA5  2A                 	db	42
   788  00FDA6  2A                 	db	42
   789  00FDA7  2A                 	db	42
   790  00FDA8  2A                 	db	42
   791  00FDA9  2A                 	db	42
   792  00FDAA  2A                 	db	42
   793  00FDAB  2A                 	db	42
   794  00FDAC  2A                 	db	42
   795  00FDAD  2A                 	db	42
   796  00FDAE  2A                 	db	42
   797  00FDAF  2A                 	db	42
   798  00FDB0  2A                 	db	42
   799  00FDB1  2A                 	db	42
   800  00FDB2  2A                 	db	42
   801  00FDB3  2A                 	db	42
   802  00FDB4  2A                 	db	42
   803  00FDB5  2A                 	db	42
   804  00FDB6  2A                 	db	42
   805  00FDB7  2A                 	db	42
   806  00FDB8  2A                 	db	42
   807  00FDB9  2A                 	db	42
   808  00FDBA  2A                 	db	42
   809  00FDBB  2A                 	db	42
   810  00FDBC  2A                 	db	42
   811  00FDBD  2A                 	db	42
   812  00FDBE  2A                 	db	42
   813  00FDBF  2A                 	db	42
   814  00FDC0  2A                 	db	42
   815  00FDC1  2A                 	db	42
   816  00FDC2  2A                 	db	42
   817  00FDC3  2A                 	db	42
   818  00FDC4  2A                 	db	42
   819  00FDC5  2A                 	db	42
   820  00FDC6  2A                 	db	42
   821  00FDC7  2A                 	db	42
   822  00FDC8  2A                 	db	42
   823  00FDC9  2A                 	db	42
   824  00FDCA  2A                 	db	42
   825  00FDCB  2A                 	db	42
   826  00FDCC  2A                 	db	42
   827  00FDCD  2A                 	db	42
   828  00FDCE  2A                 	db	42
   829  00FDCF  2A                 	db	42
   830  00FDD0  2A                 	db	42
   831  00FDD1  2A                 	db	42
   832  00FDD2  2A                 	db	42
   833  00FDD3  2A                 	db	42
   834  00FDD4  2A                 	db	42
   835  00FDD5  0D                 	db	13
   836  00FDD6  0A                 	db	10
   837  00FDD7  00                 	db	0
   838  00FDD8                     __end_of_Welcome:
   839                           	opt stack 0
   840  00FDD8                     _configDescriptor1:
   841                           	opt stack 0
   842  00FDD8  09                 	db	9
   843  00FDD9  02                 	db	2
   844  00FDDA  43                 	db	67
   845  00FDDB  00                 	db	0
   846  00FDDC  02                 	db	2
   847  00FDDD  01                 	db	1
   848  00FDDE  00                 	db	0
   849  00FDDF  C0                 	db	192
   850  00FDE0  32                 	db	50
   851  00FDE1  09                 	db	9
   852  00FDE2  04                 	db	4
   853  00FDE3  00                 	db	0
   854  00FDE4  00                 	db	0
   855  00FDE5  01                 	db	1
   856  00FDE6  02                 	db	2
   857  00FDE7  02                 	db	2
   858  00FDE8  01                 	db	1
   859  00FDE9  00                 	db	0
   860  00FDEA  05                 	db	5
   861  00FDEB  24                 	db	36
   862  00FDEC  00                 	db	0
   863  00FDED  10                 	db	16
   864  00FDEE  01                 	db	1
   865  00FDEF  04                 	db	4
   866  00FDF0  24                 	db	36
   867  00FDF1  02                 	db	2
   868  00FDF2  02                 	db	2
   869  00FDF3  05                 	db	5
   870  00FDF4  24                 	db	36
   871  00FDF5  06                 	db	6
   872  00FDF6  00                 	db	0
   873  00FDF7  01                 	db	1
   874  00FDF8  05                 	db	5
   875  00FDF9  24                 	db	36
   876  00FDFA  01                 	db	1
   877  00FDFB  00                 	db	0
   878  00FDFC  01                 	db	1
   879  00FDFD  07                 	db	7
   880  00FDFE  05                 	db	5
   881  00FDFF  81                 	db	129
   882  00FE00  03                 	db	3
   883  00FE01  08                 	db	8
   884  00FE02  00                 	db	0
   885  00FE03  02                 	db	2
   886  00FE04  09                 	db	9
   887  00FE05  04                 	db	4
   888  00FE06  01                 	db	1
   889  00FE07  00                 	db	0
   890  00FE08  02                 	db	2
   891  00FE09  0A                 	db	10
   892  00FE0A  00                 	db	0
   893  00FE0B  00                 	db	0
   894  00FE0C  00                 	db	0
   895  00FE0D  07                 	db	7
   896  00FE0E  05                 	db	5
   897  00FE0F  02                 	db	2
   898  00FE10  02                 	db	2
   899  00FE11  40                 	db	64
   900  00FE12  00                 	db	0
   901  00FE13  00                 	db	0
   902  00FE14  07                 	db	7
   903  00FE15  05                 	db	5
   904  00FE16  82                 	db	130
   905  00FE17  02                 	db	2
   906  00FE18  40                 	db	64
   907  00FE19  00                 	db	0
   908  00FE1A  00                 	db	0
   909  00FE1B                     __end_of_configDescriptor1:
   910                           	opt stack 0
   911  00FE1B                     _sd002:
   912                           	opt stack 0
   913  00FE1B  26                 	db	38
   914  00FE1C  03                 	db	3
   915  00FE1D  0054               	dw	84
   916  00FE1F  0065               	dw	101
   917  00FE21  0072               	dw	114
   918  00FE23  006D               	dw	109
   919  00FE25  0069               	dw	105
   920  00FE27  006E               	dw	110
   921  00FE29  0061               	dw	97
   922  00FE2B  006C               	dw	108
   923  00FE2D  0020               	dw	32
   924  00FE2F  0049               	dw	73
   925  00FE31  006E               	dw	110
   926  00FE33  0074               	dw	116
   927  00FE35  0065               	dw	101
   928  00FE37  0072               	dw	114
   929  00FE39  0066               	dw	102
   930  00FE3B  0061               	dw	97
   931  00FE3D  0063               	dw	99
   932  00FE3F  0065               	dw	101
   933  00FE41                     __end_of_sd002:
   934                           	opt stack 0
   935  00FE41                     _sd001:
   936                           	opt stack 0
   937  00FE41  1E                 	db	30
   938  00FE42  03                 	db	3
   939  00FE43  004D               	dw	77
   940  00FE45  0065               	dw	101
   941  00FE47  0072               	dw	114
   942  00FE49  0063               	dw	99
   943  00FE4B  0075               	dw	117
   944  00FE4D  0072               	dw	114
   945  00FE4F  0079               	dw	121
   946  00FE51  0020               	dw	32
   947  00FE53  0053               	dw	83
   948  00FE55  0079               	dw	121
   949  00FE57  0073               	dw	115
   950  00FE59  0074               	dw	116
   951  00FE5B  0065               	dw	101
   952  00FE5D  006D               	dw	109
   953  00FE5F                     __end_of_sd001:
   954                           	opt stack 0
   955  00FE5F                     _MsgReady:
   956                           	opt stack 0
   957  00FE5F  0D                 	db	13
   958  00FE60  0A                 	db	10
   959  00FE61  53                 	db	83
   960  00FE62  79                 	db	121
   961  00FE63  73                 	db	115
   962  00FE64  74                 	db	116
   963  00FE65  65                 	db	101
   964  00FE66  6D                 	db	109
   965  00FE67  20                 	db	32
   966  00FE68  52                 	db	82
   967  00FE69  65                 	db	101
   968  00FE6A  61                 	db	97
   969  00FE6B  64                 	db	100
   970  00FE6C  79                 	db	121
   971  00FE6D  2E                 	db	46
   972  00FE6E  2E                 	db	46
   973  00FE6F  2E                 	db	46
   974  00FE70  20                 	db	32
   975  00FE71  0D                 	db	13
   976  00FE72  0A                 	db	10
   977  00FE73  0D                 	db	13
   978  00FE74  0A                 	db	10
   979  00FE75  00                 	db	0
   980  00FE76                     __end_of_MsgReady:
   981                           	opt stack 0
   982  00FE76                     _device_dsc:
   983                           	opt stack 0
   984  00FE76  12                 	db	18
   985  00FE77  01                 	db	1
   986  00FE78  0200               	dw	512
   987  00FE7A  02                 	db	2
   988  00FE7B  00                 	db	0
   989  00FE7C  00                 	db	0
   990  00FE7D  08                 	db	8
   991  00FE7E  04D8               	dw	1240
   992  00FE80  000A               	dw	10
   993  00FE82  0100               	dw	256
   994  00FE84  01                 	db	1
   995  00FE85  02                 	db	2
   996  00FE86  00                 	db	0
   997  00FE87  01                 	db	1
   998  00FE88                     __end_of_device_dsc:
   999                           	opt stack 0
  1000  00FE88                     _sd000:
  1001                           	opt stack 0
  1002  00FE88  04                 	db	4
  1003  00FE89  03                 	db	3
  1004  00FE8A  0409               	dw	1033
  1005  00FE8C                     __end_of_sd000:
  1006                           	opt stack 0
  1007  0000                     _RPINR1	set	3815
  1008  0000                     _UEP0bits	set	3878
  1009  0000                     _UIEbits	set	3894
  1010  0000                     _UADDR	set	3896
  1011  0000                     _UIE	set	3894
  1012  0000                     _UEIE	set	3895
  1013  0000                     _UCFG	set	3897
  1014  0000                     _RTCCAL	set	3902
  1015  0000                     _PADCFG1bits	set	3900
  1016  0000                     _RTCCFGbits	set	3903
  1017  0000                     _DSCONLbits	set	3916
  1018  0000                     _DSGPR1	set	3919
  1019  0000                     _DSGPR0	set	3918
  1020  0000                     _DSCONHbits	set	3917
  1021  0000                     _ANCON1bits	set	3913
  1022  0000                     _UEP1	set	3879
  1023  0000                     _UEP0	set	3878
  1024  0000                     _T1CONbits	set	4045
  1025  0000                     _PORTDbits	set	3971
  1026  0000                     _USTAT	set	3940
  1027  0000                     _PIR2bits	set	4001
  1028  0000                     _UCON	set	3941
  1029  0000                     _UIRbits	set	3938
  1030  0000                     _UCONbits	set	3941
  1031  0000                     _UIR	set	3938
  1032  0000                     _UEIR	set	3939
  1033  0000                     _PIE2bits	set	4000
  1034  0000                     _BAUDCON2	set	3964
  1035  0000                     _RCSTA2	set	3996
  1036  0000                     _BAUDCON1	set	3966
  1037  0000                     _RCSTA1	set	4012
  1038  0000                     _TRISCbits	set	3988
  1039  0000                     _TXSTA2	set	4008
  1040  0000                     _TXSTA1	set	4013
  1041  0000                     _RCREG2	set	4010
  1042  0000                     _RCREG1	set	4015
  1043  0000                     _TXREG2	set	4009
  1044  0000                     _TXREG1	set	4014
  1045  0000                     _SPBRG2	set	4011
  1046  0000                     _SPBRGH2	set	3965
  1047  0000                     _SPBRG1	set	4016
  1048  0000                     _SPBRGH1	set	3967
  1049  0000                     _PR4	set	3959
  1050  0000                     _PR2	set	4043
  1051  0000                     _PIE1bits	set	3997
  1052  0000                     _IPR1bits	set	3999
  1053  0000                     _T4CONbits	set	3958
  1054  0000                     _T2CONbits	set	4042
  1055  0000                     _ALRMVALL	set	3982
  1056  0000                     _ALRMVALH	set	3983
  1057  0000                     _RTCVALH	set	3993
  1058  0000                     _RTCVALL	set	3992
  1059  0000                     _ALRMRPTbits	set	3984
  1060  0000                     _ALRMCFGbits	set	3985
  1061  0000                     _PIE3bits	set	4003
  1062  0000                     _IPR3bits	set	4005
  1063  0000                     _OSCCONbits	set	4051
  1064  0000                     _PORTEbits	set	3972
  1065  0000                     _TRISEbits	set	3990
  1066  0000                     _WDTCONbits	set	4032
  1067  0000                     _INTCON2bits	set	4081
  1068  0000                     _TRISBbits	set	3987
  1069  0000                     _OSCTUNEbits	set	3995
  1070  0000                     _SSP2CON1	set	3954
  1071  0000                     _TRISDbits	set	3989
  1072  0000                     _SSP2BUF	set	3957
  1073  0000                     _SSP2CON2bits	set	3953
  1074  0000                     _SSP2STAT	set	3955
  1075  0000                     _SSP2CON2	set	3953
  1076  0000                     _SSP2ADD	set	3956
  1077  0000                     _PIR1bits	set	3998
  1078  0000                     _PIR3bits	set	4004
  1079  0000                     _INTCON3bits	set	4080
  1080  0000                     _INTCONbits	set	4082
  1081  0000                     _RCONbits	set	4048
  1082  00FE8C                     STR_21:
  1083  00FE8C  20                 	db	32
  1084  00FE8D  4C                 	db	76	;'L'
  1085  00FE8E  61                 	db	97	;'a'
  1086  00FE8F  7A                 	db	122	;'z'
  1087  00FE90  79                 	db	121	;'y'
  1088  00FE91  20                 	db	32
  1089  00FE92  64                 	db	100	;'d'
  1090  00FE93  65                 	db	101	;'e'
  1091  00FE94  76                 	db	118	;'v'
  1092  00FE95  69                 	db	105	;'i'
  1093  00FE96  63                 	db	99	;'c'
  1094  00FE97  65                 	db	101	;'e'
  1095  00FE98  2E                 	db	46
  1096  00FE99  2E                 	db	46
  1097  00FE9A  2E                 	db	46
  1098  00FE9B  79                 	db	121	;'y'
  1099  00FE9C  6F                 	db	111	;'o'
  1100  00FE9D  75                 	db	117	;'u'
  1101  00FE9E  27                 	db	39
  1102  00FE9F  76                 	db	118	;'v'
  1103  00FEA0  65                 	db	101	;'e'
  1104  00FEA1  20                 	db	32
  1105  00FEA2  62                 	db	98	;'b'
  1106  00FEA3  65                 	db	101	;'e'
  1107  00FEA4  65                 	db	101	;'e'
  1108  00FEA5  6E                 	db	110	;'n'
  1109  00FEA6  20                 	db	32
  1110  00FEA7  74                 	db	116	;'t'
  1111  00FEA8  69                 	db	105	;'i'
  1112  00FEA9  6D                 	db	109	;'m'
  1113  00FEAA  65                 	db	101	;'e'
  1114  00FEAB  64                 	db	100	;'d'
  1115  00FEAC  2D                 	db	45
  1116  00FEAD  6F                 	db	111	;'o'
  1117  00FEAE  75                 	db	117	;'u'
  1118  00FEAF  74                 	db	116	;'t'
  1119  00FEB0  21                 	db	33
  1120  00FEB1  21                 	db	33
  1121  00FEB2  21                 	db	33
  1122  00FEB3  0D                 	db	13
  1123  00FEB4  0A                 	db	10
  1124  00FEB5  00                 	db	0
  1125  00FEB6                     STR_8:
  1126  00FEB6  41                 	db	65	;'A'
  1127  00FEB7  54                 	db	84	;'T'
  1128  00FEB8  2B                 	db	43
  1129  00FEB9  53                 	db	83	;'S'
  1130  00FEBA  41                 	db	65	;'A'
  1131  00FEBB  50                 	db	80	;'P'
  1132  00FEBC  42                 	db	66	;'B'
  1133  00FEBD  52                 	db	82	;'R'
  1134  00FEBE  3D                 	db	61	;'='
  1135  00FEBF  33                 	db	51	;'3'
  1136  00FEC0  2C                 	db	44
  1137  00FEC1  31                 	db	49	;'1'
  1138  00FEC2  2C                 	db	44
  1139  00FEC3  22                 	db	34
  1140  00FEC4  43                 	db	67	;'C'
  1141  00FEC5  6F                 	db	111	;'o'
  1142  00FEC6  6E                 	db	110	;'n'
  1143  00FEC7  74                 	db	116	;'t'
  1144  00FEC8  79                 	db	121	;'y'
  1145  00FEC9  70                 	db	112	;'p'
  1146  00FECA  65                 	db	101	;'e'
  1147  00FECB  22                 	db	34
  1148  00FECC  2C                 	db	44
  1149  00FECD  22                 	db	34
  1150  00FECE  47                 	db	71	;'G'
  1151  00FECF  50                 	db	80	;'P'
  1152  00FED0  52                 	db	82	;'R'
  1153  00FED1  53                 	db	83	;'S'
  1154  00FED2  22                 	db	34
  1155  00FED3  0D                 	db	13
  1156  00FED4  00                 	db	0
  1157  00FED5                     STR_14:
  1158  00FED5  41                 	db	65	;'A'
  1159  00FED6  54                 	db	84	;'T'
  1160  00FED7  2B                 	db	43
  1161  00FED8  48                 	db	72	;'H'
  1162  00FED9  54                 	db	84	;'T'
  1163  00FEDA  54                 	db	84	;'T'
  1164  00FEDB  50                 	db	80	;'P'
  1165  00FEDC  50                 	db	80	;'P'
  1166  00FEDD  41                 	db	65	;'A'
  1167  00FEDE  52                 	db	82	;'R'
  1168  00FEDF  41                 	db	65	;'A'
  1169  00FEE0  3D                 	db	61	;'='
  1170  00FEE1  22                 	db	34
  1171  00FEE2  43                 	db	67	;'C'
  1172  00FEE3  49                 	db	73	;'I'
  1173  00FEE4  44                 	db	68	;'D'
  1174  00FEE5  22                 	db	34
  1175  00FEE6  2C                 	db	44
  1176  00FEE7  31                 	db	49	;'1'
  1177  00FEE8  0D                 	db	13
  1178  00FEE9  00                 	db	0
  1179  00FEEA                     STR_9:
  1180  00FEEA  41                 	db	65	;'A'
  1181  00FEEB  54                 	db	84	;'T'
  1182  00FEEC  2B                 	db	43
  1183  00FEED  53                 	db	83	;'S'
  1184  00FEEE  41                 	db	65	;'A'
  1185  00FEEF  50                 	db	80	;'P'
  1186  00FEF0  42                 	db	66	;'B'
  1187  00FEF1  52                 	db	82	;'R'
  1188  00FEF2  3D                 	db	61	;'='
  1189  00FEF3  33                 	db	51	;'3'
  1190  00FEF4  2C                 	db	44
  1191  00FEF5  31                 	db	49	;'1'
  1192  00FEF6  2C                 	db	44
  1193  00FEF7  22                 	db	34
  1194  00FEF8  41                 	db	65	;'A'
  1195  00FEF9  50                 	db	80	;'P'
  1196  00FEFA  4E                 	db	78	;'N'
  1197  00FEFB  22                 	db	34
  1198  00FEFC  2C                 	db	44
  1199  00FEFD  22                 	db	34
  1200  00FEFE  00                 	db	0
  1201  00FEFF                     STR_23:
  1202  00FEFF  46                 	db	70	;'F'
  1203  00FF00  72                 	db	114	;'r'
  1204  00FF01  61                 	db	97	;'a'
  1205  00FF02  6D                 	db	109	;'m'
  1206  00FF03  65                 	db	101	;'e'
  1207  00FF04  77                 	db	119	;'w'
  1208  00FF05  6F                 	db	111	;'o'
  1209  00FF06  72                 	db	114	;'r'
  1210  00FF07  6B                 	db	107	;'k'
  1211  00FF08  20                 	db	32
  1212  00FF09  56                 	db	86	;'V'
  1213  00FF0A  65                 	db	101	;'e'
  1214  00FF0B  72                 	db	114	;'r'
  1215  00FF0C  73                 	db	115	;'s'
  1216  00FF0D  69                 	db	105	;'i'
  1217  00FF0E  6F                 	db	111	;'o'
  1218  00FF0F  6E                 	db	110	;'n'
  1219  00FF10  3A                 	db	58	;':'
  1220  00FF11  20                 	db	32
  1221  00FF12  00                 	db	0
  1222  00FF13                     STR_15:
  1223  00FF13  41                 	db	65	;'A'
  1224  00FF14  54                 	db	84	;'T'
  1225  00FF15  2B                 	db	43
  1226  00FF16  48                 	db	72	;'H'
  1227  00FF17  54                 	db	84	;'T'
  1228  00FF18  54                 	db	84	;'T'
  1229  00FF19  50                 	db	80	;'P'
  1230  00FF1A  50                 	db	80	;'P'
  1231  00FF1B  41                 	db	65	;'A'
  1232  00FF1C  52                 	db	82	;'R'
  1233  00FF1D  41                 	db	65	;'A'
  1234  00FF1E  3D                 	db	61	;'='
  1235  00FF1F  22                 	db	34
  1236  00FF20  55                 	db	85	;'U'
  1237  00FF21  52                 	db	82	;'R'
  1238  00FF22  4C                 	db	76	;'L'
  1239  00FF23  22                 	db	34
  1240  00FF24  2C                 	db	44
  1241  00FF25  22                 	db	34
  1242  00FF26  00                 	db	0
  1243  00FF27                     STR_27:
  1244  00FF27  42                 	db	66	;'B'
  1245  00FF28  75                 	db	117	;'u'
  1246  00FF29  69                 	db	105	;'i'
  1247  00FF2A  6C                 	db	108	;'l'
  1248  00FF2B  64                 	db	100	;'d'
  1249  00FF2C  20                 	db	32
  1250  00FF2D  44                 	db	68	;'D'
  1251  00FF2E  61                 	db	97	;'a'
  1252  00FF2F  74                 	db	116	;'t'
  1253  00FF30  65                 	db	101	;'e'
  1254  00FF31  3A                 	db	58	;':'
  1255  00FF32  20                 	db	32
  1256  00FF33  25                 	db	37
  1257  00FF34  73                 	db	115	;'s'
  1258  00FF35  0D                 	db	13
  1259  00FF36  0A                 	db	10
  1260  00FF37  00                 	db	0
  1261  00FF38                     STR_16:
  1262  00FF38  41                 	db	65	;'A'
  1263  00FF39  54                 	db	84	;'T'
  1264  00FF3A  2B                 	db	43
  1265  00FF3B  48                 	db	72	;'H'
  1266  00FF3C  54                 	db	84	;'T'
  1267  00FF3D  54                 	db	84	;'T'
  1268  00FF3E  50                 	db	80	;'P'
  1269  00FF3F  41                 	db	65	;'A'
  1270  00FF40  43                 	db	67	;'C'
  1271  00FF41  54                 	db	84	;'T'
  1272  00FF42  49                 	db	73	;'I'
  1273  00FF43  4F                 	db	79	;'O'
  1274  00FF44  4E                 	db	78	;'N'
  1275  00FF45  3D                 	db	61	;'='
  1276  00FF46  30                 	db	48	;'0'
  1277  00FF47  0D                 	db	13
  1278  00FF48  00                 	db	0
  1279  00FF49  41                 	db	65	;'A'
  1280  00FF4A  54                 	db	84	;'T'
  1281  00FF4B  2B                 	db	43
  1282  00FF4C  48                 	db	72	;'H'
  1283  00FF4D  54                 	db	84	;'T'
  1284  00FF4E  54                 	db	84	;'T'
  1285  00FF4F  50                 	db	80	;'P'
  1286  00FF50  53                 	db	83	;'S'
  1287  00FF51  53                 	db	83	;'S'
  1288  00FF52  4C                 	db	76	;'L'
  1289  00FF53  3D                 	db	61	;'='
  1290  00FF54  30                 	db	48	;'0'
  1291  00FF55  0D                 	db	13
  1292  00FF56  00                 	db	0
  1293  00FF57                     STR_10:
  1294  00FF57  41                 	db	65	;'A'
  1295  00FF58  54                 	db	84	;'T'
  1296  00FF59  2B                 	db	43
  1297  00FF5A  53                 	db	83	;'S'
  1298  00FF5B  41                 	db	65	;'A'
  1299  00FF5C  50                 	db	80	;'P'
  1300  00FF5D  42                 	db	66	;'B'
  1301  00FF5E  52                 	db	82	;'R'
  1302  00FF5F  3D                 	db	61	;'='
  1303  00FF60  31                 	db	49	;'1'
  1304  00FF61  2C                 	db	44
  1305  00FF62  31                 	db	49	;'1'
  1306  00FF63  0D                 	db	13
  1307  00FF64  00                 	db	0
  1308  00FF65                     STR_11:
  1309  00FF65  41                 	db	65	;'A'
  1310  00FF66  54                 	db	84	;'T'
  1311  00FF67  2B                 	db	43
  1312  00FF68  53                 	db	83	;'S'
  1313  00FF69  41                 	db	65	;'A'
  1314  00FF6A  50                 	db	80	;'P'
  1315  00FF6B  42                 	db	66	;'B'
  1316  00FF6C  52                 	db	82	;'R'
  1317  00FF6D  3D                 	db	61	;'='
  1318  00FF6E  32                 	db	50	;'2'
  1319  00FF6F  2C                 	db	44
  1320  00FF70  31                 	db	49	;'1'
  1321  00FF71  0D                 	db	13
  1322  00FF72  00                 	db	0
  1323  00FF73                     STR_13:
  1324  00FF73  41                 	db	65	;'A'
  1325  00FF74  54                 	db	84	;'T'
  1326  00FF75  2B                 	db	43
  1327  00FF76  48                 	db	72	;'H'
  1328  00FF77  54                 	db	84	;'T'
  1329  00FF78  54                 	db	84	;'T'
  1330  00FF79  50                 	db	80	;'P'
  1331  00FF7A  53                 	db	83	;'S'
  1332  00FF7B  53                 	db	83	;'S'
  1333  00FF7C  4C                 	db	76	;'L'
  1334  00FF7D  3D                 	db	61	;'='
  1335  00FF7E  31                 	db	49	;'1'
  1336  00FF7F  0D                 	db	13
  1337  00FF80  00                 	db	0
  1338  00FF81                     STR_2:
  1339  00FF81  41                 	db	65	;'A'
  1340  00FF82  54                 	db	84	;'T'
  1341  00FF83  2B                 	db	43
  1342  00FF84  49                 	db	73	;'I'
  1343  00FF85  50                 	db	80	;'P'
  1344  00FF86  52                 	db	82	;'R'
  1345  00FF87  3D                 	db	61	;'='
  1346  00FF88  39                 	db	57	;'9'
  1347  00FF89  36                 	db	54	;'6'
  1348  00FF8A  30                 	db	48	;'0'
  1349  00FF8B  30                 	db	48	;'0'
  1350  00FF8C  0D                 	db	13
  1351  00FF8D  0A                 	db	10
  1352  00FF8E  00                 	db	0
  1353  00FF8F                     STR_17:
  1354  00FF8F  41                 	db	65	;'A'
  1355  00FF90  54                 	db	84	;'T'
  1356  00FF91  2B                 	db	43
  1357  00FF92  48                 	db	72	;'H'
  1358  00FF93  54                 	db	84	;'T'
  1359  00FF94  54                 	db	84	;'T'
  1360  00FF95  50                 	db	80	;'P'
  1361  00FF96  52                 	db	82	;'R'
  1362  00FF97  45                 	db	69	;'E'
  1363  00FF98  41                 	db	65	;'A'
  1364  00FF99  44                 	db	68	;'D'
  1365  00FF9A  0D                 	db	13
  1366  00FF9B  00                 	db	0
  1367  00FF9C                     STR_18:
  1368  00FF9C  41                 	db	65	;'A'
  1369  00FF9D  54                 	db	84	;'T'
  1370  00FF9E  2B                 	db	43
  1371  00FF9F  48                 	db	72	;'H'
  1372  00FFA0  54                 	db	84	;'T'
  1373  00FFA1  54                 	db	84	;'T'
  1374  00FFA2  50                 	db	80	;'P'
  1375  00FFA3  54                 	db	84	;'T'
  1376  00FFA4  45                 	db	69	;'E'
  1377  00FFA5  52                 	db	82	;'R'
  1378  00FFA6  4D                 	db	77	;'M'
  1379  00FFA7  0D                 	db	13
  1380  00FFA8  00                 	db	0
  1381  00FFA9                     STR_12:
  1382  00FFA9  41                 	db	65	;'A'
  1383  00FFAA  54                 	db	84	;'T'
  1384  00FFAB  2B                 	db	43
  1385  00FFAC  48                 	db	72	;'H'
  1386  00FFAD  54                 	db	84	;'T'
  1387  00FFAE  54                 	db	84	;'T'
  1388  00FFAF  50                 	db	80	;'P'
  1389  00FFB0  49                 	db	73	;'I'
  1390  00FFB1  4E                 	db	78	;'N'
  1391  00FFB2  49                 	db	73	;'I'
  1392  00FFB3  54                 	db	84	;'T'
  1393  00FFB4  0D                 	db	13
  1394  00FFB5  00                 	db	0
  1395  00FFB6                     STR_28:
  1396  00FFB6  4D                 	db	77	;'M'
  1397  00FFB7  61                 	db	97	;'a'
  1398  00FFB8  72                 	db	114	;'r'
  1399  00FFB9  20                 	db	32
  1400  00FFBA  31                 	db	49	;'1'
  1401  00FFBB  33                 	db	51	;'3'
  1402  00FFBC  20                 	db	32
  1403  00FFBD  32                 	db	50	;'2'
  1404  00FFBE  30                 	db	48	;'0'
  1405  00FFBF  32                 	db	50	;'2'
  1406  00FFC0  32                 	db	50	;'2'
  1407  00FFC1  00                 	db	0
  1408  00FFC2                     STR_4:
  1409  00FFC2  41                 	db	65	;'A'
  1410  00FFC3  54                 	db	84	;'T'
  1411  00FFC4  2B                 	db	43
  1412  00FFC5  43                 	db	67	;'C'
  1413  00FFC6  4D                 	db	77	;'M'
  1414  00FFC7  47                 	db	71	;'G'
  1415  00FFC8  52                 	db	82	;'R'
  1416  00FFC9  3D                 	db	61	;'='
  1417  00FFCA  31                 	db	49	;'1'
  1418  00FFCB  0D                 	db	13
  1419  00FFCC  00                 	db	0
  1420  00FFCD                     STR_5:
  1421  00FFCD  41                 	db	65	;'A'
  1422  00FFCE  54                 	db	84	;'T'
  1423  00FFCF  2B                 	db	43
  1424  00FFD0  43                 	db	67	;'C'
  1425  00FFD1  4D                 	db	77	;'M'
  1426  00FFD2  47                 	db	71	;'G'
  1427  00FFD3  53                 	db	83	;'S'
  1428  00FFD4  3D                 	db	61	;'='
  1429  00FFD5  22                 	db	34
  1430  00FFD6  00                 	db	0
  1431  00FFD7                     STR_30:
  1432  00FFD7  28                 	db	40
  1433  00FFD8  6E                 	db	110	;'n'
  1434  00FFD9  75                 	db	117	;'u'
  1435  00FFDA  6C                 	db	108	;'l'
  1436  00FFDB  6C                 	db	108	;'l'
  1437  00FFDC  29                 	db	41
  1438  00FFDD  00                 	db	0
  1439  00FFDE                     STR_3:
  1440  00FFDE  41                 	db	65	;'A'
  1441  00FFDF  54                 	db	84	;'T'
  1442  00FFE0  45                 	db	69	;'E'
  1443  00FFE1  30                 	db	48	;'0'
  1444  00FFE2  0D                 	db	13
  1445  00FFE3  0A                 	db	10
  1446  00FFE4  00                 	db	0
  1447  00FFE5                     STR_1:
  1448  00FFE5  41                 	db	65	;'A'
  1449  00FFE6  54                 	db	84	;'T'
  1450  00FFE7  0D                 	db	13
  1451  00FFE8  0A                 	db	10
  1452  00FFE9  00                 	db	0
  1453  00FFEA  41                 	db	65	;'A'
  1454  00FFEB  54                 	db	84	;'T'
  1455  00FFEC  41                 	db	65	;'A'
  1456  00FFED  0D                 	db	13
  1457  00FFEE  00                 	db	0
  1458  00FFEF  41                 	db	65	;'A'
  1459  00FFF0  54                 	db	84	;'T'
  1460  00FFF1  48                 	db	72	;'H'
  1461  00FFF2  0D                 	db	13
  1462  00FFF3  00                 	db	0
  1463  00FFF4                     STR_24:
  1464  00FFF4  2E                 	db	46
  1465  00FFF5  00                 	db	0
  1466  0000                     
  1467                           ; #config settings
  1468  00FFF6  00                 	db	0	; dummy byte at the end
  1469  0000                     
  1470                           	psect	cinit
  1471  002B36                     __pcinit:
  1472                           	opt stack 0
  1473  002B36                     start_initialization:
  1474                           	opt stack 0
  1475  002B36                     __initialization:
  1476                           	opt stack 0
  1477                           
  1478                           ; Initialize objects allocated to BANK3 (71 bytes)
  1479                           ; load TBLPTR registers with __pidataBANK3
  1480  002B36  0E52               	movlw	low __pidataBANK3
  1481  002B38  6EF6               	movwf	tblptrl,c
  1482  002B3A  0E54               	movlw	high __pidataBANK3
  1483  002B3C  6EF7               	movwf	tblptrh,c
  1484  002B3E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1485  002B40  6EF8               	movwf	tblptru,c
  1486  002B42  EE03  F0B9         	lfsr	0,__pdataBANK3
  1487  002B46  EE10 F047          	lfsr	1,71
  1488  002B4A                     copy_data0:
  1489  002B4A  0009               	tblrd		*+
  1490  002B4C  CFF5 FFEE          	movff	tablat,postinc0
  1491  002B50  50E5               	movf	postdec1,w,c
  1492  002B52  50E1               	movf	fsr1l,w,c
  1493  002B54  E1FA               	bnz	copy_data0
  1494                           
  1495                           ; Initialize objects allocated to BANK2 (13 bytes)
  1496                           ; load TBLPTR registers with __pidataBANK2
  1497  002B56  0E3E               	movlw	low __pidataBANK2
  1498  002B58  6EF6               	movwf	tblptrl,c
  1499  002B5A  0E5E               	movlw	high __pidataBANK2
  1500  002B5C  6EF7               	movwf	tblptrh,c
  1501  002B5E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1502  002B60  6EF8               	movwf	tblptru,c
  1503  002B62  EE02  F0F3         	lfsr	0,__pdataBANK2
  1504  002B66  EE10 F00D          	lfsr	1,13
  1505  002B6A                     copy_data1:
  1506  002B6A  0009               	tblrd		*+
  1507  002B6C  CFF5 FFEE          	movff	tablat,postinc0
  1508  002B70  50E5               	movf	postdec1,w,c
  1509  002B72  50E1               	movf	fsr1l,w,c
  1510  002B74  E1FA               	bnz	copy_data1
  1511                           
  1512                           ; Initialize objects allocated to BANK1 (2 bytes)
  1513                           ; load TBLPTR registers with __pidataBANK1
  1514  002B76  0EBA               	movlw	low __pidataBANK1
  1515  002B78  6EF6               	movwf	tblptrl,c
  1516  002B7A  0E5E               	movlw	high __pidataBANK1
  1517  002B7C  6EF7               	movwf	tblptrh,c
  1518  002B7E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1519  002B80  6EF8               	movwf	tblptru,c
  1520  002B82  0009               	tblrd		*+	;fetch initializer
  1521  002B84  CFF5 F1FD          	movff	tablat,__pdataBANK1
  1522  002B88  0009               	tblrd		*+	;fetch initializer
  1523  002B8A  CFF5 F1FE          	movff	tablat,__pdataBANK1+1
  1524                           
  1525                           ; Initialize objects allocated to BANK4 (90 bytes)
  1526                           ; load TBLPTR registers with __pidataBANK4
  1527  002B8E  0E22               	movlw	low __pidataBANK4
  1528  002B90  6EF6               	movwf	tblptrl,c
  1529  002B92  0E4F               	movlw	high __pidataBANK4
  1530  002B94  6EF7               	movwf	tblptrh,c
  1531  002B96  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1532  002B98  6EF8               	movwf	tblptru,c
  1533  002B9A  EE04  F0A5         	lfsr	0,__pdataBANK4
  1534  002B9E  EE10 F05A          	lfsr	1,90
  1535  002BA2                     copy_data2:
  1536  002BA2  0009               	tblrd		*+
  1537  002BA4  CFF5 FFEE          	movff	tablat,postinc0
  1538  002BA8  50E5               	movf	postdec1,w,c
  1539  002BAA  50E1               	movf	fsr1l,w,c
  1540  002BAC  E1FA               	bnz	copy_data2
  1541                           
  1542                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1543  002BAE  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1544  002BB2  EE13 F020          	lfsr	1,800
  1545  002BB6                     clear_0:
  1546  002BB6  6AEE               	clrf	postinc0,c
  1547  002BB8  50E5               	movf	postdec1,w,c
  1548  002BBA  50E1               	movf	fsr1l,w,c
  1549  002BBC  E1FC               	bnz	clear_0
  1550  002BBE  50E2               	movf	fsr1h,w,c
  1551  002BC0  E1FA               	bnz	clear_0
  1552                           
  1553                           ; Clear objects allocated to BANK9 (200 bytes)
  1554  002BC2  EE09  F000         	lfsr	0,__pbssBANK9
  1555  002BC6  0EC8               	movlw	200
  1556  002BC8                     clear_1:
  1557  002BC8  6AEE               	clrf	postinc0,c
  1558  002BCA  06E8               	decf	wreg,f,c
  1559  002BCC  E1FD               	bnz	clear_1
  1560                           
  1561                           ; Clear objects allocated to BANK8 (200 bytes)
  1562  002BCE  EE08  F000         	lfsr	0,__pbssBANK8
  1563  002BD2  0EC8               	movlw	200
  1564  002BD4                     clear_2:
  1565  002BD4  6AEE               	clrf	postinc0,c
  1566  002BD6  06E8               	decf	wreg,f,c
  1567  002BD8  E1FD               	bnz	clear_2
  1568                           
  1569                           ; Clear objects allocated to BANK7 (196 bytes)
  1570  002BDA  EE07  F000         	lfsr	0,__pbssBANK7
  1571  002BDE  0EC4               	movlw	196
  1572  002BE0                     clear_3:
  1573  002BE0  6AEE               	clrf	postinc0,c
  1574  002BE2  06E8               	decf	wreg,f,c
  1575  002BE4  E1FD               	bnz	clear_3
  1576                           
  1577                           ; Clear objects allocated to BANK6 (220 bytes)
  1578  002BE6  EE06  F000         	lfsr	0,__pbssBANK6
  1579  002BEA  0EDC               	movlw	220
  1580  002BEC                     clear_4:
  1581  002BEC  6AEE               	clrf	postinc0,c
  1582  002BEE  06E8               	decf	wreg,f,c
  1583  002BF0  E1FD               	bnz	clear_4
  1584                           
  1585                           ; Clear objects allocated to BANK5 (244 bytes)
  1586  002BF2  EE05  F000         	lfsr	0,__pbssBANK5
  1587  002BF6  0EF4               	movlw	244
  1588  002BF8                     clear_5:
  1589  002BF8  6AEE               	clrf	postinc0,c
  1590  002BFA  06E8               	decf	wreg,f,c
  1591  002BFC  E1FD               	bnz	clear_5
  1592                           
  1593                           ; Clear objects allocated to BANK3 (185 bytes)
  1594  002BFE  EE03  F000         	lfsr	0,__pbssBANK3
  1595  002C02  0EB9               	movlw	185
  1596  002C04                     clear_6:
  1597  002C04  6AEE               	clrf	postinc0,c
  1598  002C06  06E8               	decf	wreg,f,c
  1599  002C08  E1FD               	bnz	clear_6
  1600                           
  1601                           ; Clear objects allocated to BANK2 (43 bytes)
  1602  002C0A  EE02  F0C8         	lfsr	0,__pbssBANK2
  1603  002C0E  0E2B               	movlw	43
  1604  002C10                     clear_7:
  1605  002C10  6AEE               	clrf	postinc0,c
  1606  002C12  06E8               	decf	wreg,f,c
  1607  002C14  E1FD               	bnz	clear_7
  1608                           
  1609                           ; Clear objects allocated to BANK1 (52 bytes)
  1610  002C16  EE01  F0C9         	lfsr	0,__pbssBANK1
  1611  002C1A  0E34               	movlw	52
  1612  002C1C                     clear_8:
  1613  002C1C  6AEE               	clrf	postinc0,c
  1614  002C1E  06E8               	decf	wreg,f,c
  1615  002C20  E1FD               	bnz	clear_8
  1616                           
  1617                           ; Clear objects allocated to BANK4 (101 bytes)
  1618  002C22  EE04  F040         	lfsr	0,__pbssBANK4
  1619  002C26  0E65               	movlw	101
  1620  002C28                     clear_9:
  1621  002C28  6AEE               	clrf	postinc0,c
  1622  002C2A  06E8               	decf	wreg,f,c
  1623  002C2C  E1FD               	bnz	clear_9
  1624                           
  1625                           ; Clear objects allocated to BANK0 (51 bytes)
  1626  002C2E  EE00  F0AC         	lfsr	0,__pbssBANK0
  1627  002C32  0E33               	movlw	51
  1628  002C34                     clear_10:
  1629  002C34  6AEE               	clrf	postinc0,c
  1630  002C36  06E8               	decf	wreg,f,c
  1631  002C38  E1FD               	bnz	clear_10
  1632                           
  1633                           ; Clear objects allocated to COMRAM (31 bytes)
  1634  002C3A  EE00  F023         	lfsr	0,__pbssCOMRAM
  1635  002C3E  0E1F               	movlw	31
  1636  002C40                     clear_11:
  1637  002C40  6AEE               	clrf	postinc0,c
  1638  002C42  06E8               	decf	wreg,f,c
  1639  002C44  E1FD               	bnz	clear_11
  1640  002C46                     end_of_initialization:
  1641                           	opt stack 0
  1642  002C46                     __end_of__initialization:
  1643                           	opt stack 0
  1644  002C46  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1645  002C48  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1646  002C4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1647  002C4C  6EF8               	movwf	tblptru,c
  1648  002C4E  0100               	movlb	0
  1649  002C50  EF26  F02F         	goto	_main	;jump to C main() function
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           postdec1	equ	0xFE5
  1657                           fsr1h	equ	0xFE2
  1658                           fsr1l	equ	0xFE1
  1659                           
  1660                           	psect	bssCOMRAM
  1661  000023                     __pbssCOMRAM:
  1662                           	opt stack 0
  1663  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1664                           	opt stack 0
  1665  000023                     	ds	2
  1666  000025                     _USBDeferOUTDataStagePackets:
  1667                           	opt stack 0
  1668  000025                     	ds	1
  1669  000026                     GetSmsSm@GetSmsState:
  1670                           	opt stack 0
  1671  000026                     	ds	1
  1672  000027                     ConfigureModem@NextState:
  1673                           	opt stack 0
  1674  000027                     	ds	1
  1675  000028                     ConfigureModem@MdmConfigState:
  1676                           	opt stack 0
  1677  000028                     	ds	1
  1678  000029                     TurnOnModem@TurnOnMdmState:
  1679                           	opt stack 0
  1680  000029                     	ds	1
  1681  00002A                     CheckModem@CheckMdmSts:
  1682                           	opt stack 0
  1683  00002A                     	ds	1
  1684  00002B                     _ComChecCompleted:
  1685                           	opt stack 0
  1686  00002B                     	ds	1
  1687  00002C                     Uart_Uart1RxIsr@UartRxData:
  1688                           	opt stack 0
  1689  00002C                     	ds	1
  1690  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1691                           	opt stack 0
  1692  00002D                     	ds	1
  1693  00002E                     MdmCntSm@MdmCntState:
  1694                           	opt stack 0
  1695  00002E                     	ds	1
  1696  00002F                     RiSm@MdmDrvState:
  1697                           	opt stack 0
  1698  00002F                     	ds	1
  1699  000030                     _Mmd_RingIndicator:
  1700                           	opt stack 0
  1701  000030                     	ds	1
  1702  000031                     I2c_ReadData@ReadStatus:
  1703                           	opt stack 0
  1704  000031                     	ds	1
  1705  000032                     I2c_ReadData@TentativeCounter:
  1706                           	opt stack 0
  1707  000032                     	ds	1
  1708  000033                     I2c_ReadData@DataCounter:
  1709                           	opt stack 0
  1710  000033                     	ds	1
  1711  000034                     I2c_ReadData@I2cReadState:
  1712                           	opt stack 0
  1713  000034                     	ds	1
  1714  000035                     I2c_WriteData@WriteStatus:
  1715                           	opt stack 0
  1716  000035                     	ds	1
  1717  000036                     I2c_WriteData@TentativeCounter:
  1718                           	opt stack 0
  1719  000036                     	ds	1
  1720  000037                     I2c_WriteData@I2cNextState:
  1721                           	opt stack 0
  1722  000037                     	ds	1
  1723  000038                     I2c_WriteData@I2cWriteState:
  1724                           	opt stack 0
  1725  000038                     	ds	1
  1726  000039                     _MdmStsReady:
  1727                           	opt stack 0
  1728  000039                     	ds	1
  1729  00003A                     _NewStringMdmTerminal:
  1730                           	opt stack 0
  1731  00003A                     	ds	1
  1732  00003B                     _NewMdmEvtParserRequest:
  1733                           	opt stack 0
  1734  00003B                     	ds	1
  1735  00003C                     _NewStringReceived:
  1736                           	opt stack 0
  1737  00003C                     	ds	1
  1738  00003D                     _MdmResetRequest:
  1739                           	opt stack 0
  1740  00003D                     	ds	1
  1741  00003E                     _CallClosedEvent:
  1742                           	opt stack 0
  1743  00003E                     	ds	1
  1744  00003F                     _IncomingCallEvent:
  1745                           	opt stack 0
  1746  00003F                     	ds	1
  1747  000040                     _NewSmsEvent:
  1748                           	opt stack 0
  1749  000040                     	ds	1
  1750  000041                     _ActivateRiDetection:
  1751                           	opt stack 0
  1752  000041                     	ds	1
  1753                           tblptru	equ	0xFF8
  1754                           tblptrh	equ	0xFF7
  1755                           tblptrl	equ	0xFF6
  1756                           tablat	equ	0xFF5
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postdec1	equ	0xFE5
  1760                           fsr1h	equ	0xFE2
  1761                           fsr1l	equ	0xFE1
  1762                           
  1763                           	psect	bssBANK0
  1764  0000AC                     __pbssBANK0:
  1765                           	opt stack 0
  1766  0000AC                     _inPipes:
  1767                           	opt stack 0
  1768  0000AC                     	ds	6
  1769  0000B2                     _pBDTEntryIn:
  1770                           	opt stack 0
  1771  0000B2                     	ds	6
  1772  0000B8                     _CDCDataOutHandle:
  1773                           	opt stack 0
  1774  0000B8                     	ds	2
  1775  0000BA                     _pBDTEntryEP0OutNext:
  1776                           	opt stack 0
  1777  0000BA                     	ds	2
  1778  0000BC                     _pBDTEntryEP0OutCurrent:
  1779                           	opt stack 0
  1780  0000BC                     	ds	2
  1781  0000BE                     _RxLen:
  1782                           	opt stack 0
  1783  0000BE                     	ds	2
  1784  0000C0                     _cdc_tx_len:
  1785                           	opt stack 0
  1786  0000C0                     	ds	1
  1787  0000C1                     _cdc_trf_state:
  1788                           	opt stack 0
  1789  0000C1                     	ds	1
  1790  0000C2                     _cdc_rx_len:
  1791                           	opt stack 0
  1792  0000C2                     	ds	1
  1793  0000C3                     _USBDeferINDataStagePackets:
  1794                           	opt stack 0
  1795  0000C3                     	ds	1
  1796  0000C4                     _USBStatusStageEnabledFlag2:
  1797                           	opt stack 0
  1798  0000C4                     	ds	1
  1799  0000C5                     _USBStatusStageEnabledFlag1:
  1800                           	opt stack 0
  1801  0000C5                     	ds	1
  1802  0000C6                     _USBDeferStatusStagePacket:
  1803                           	opt stack 0
  1804  0000C6                     	ds	1
  1805  0000C7                     _USBStatusStageTimeoutCounter:
  1806                           	opt stack 0
  1807  0000C7                     	ds	1
  1808  0000C8                     _endpoint_number:
  1809                           	opt stack 0
  1810  0000C8                     	ds	1
  1811  0000C9                     _controlTransferState:
  1812                           	opt stack 0
  1813  0000C9                     	ds	1
  1814  0000CA                     _shortPacketStatus:
  1815                           	opt stack 0
  1816  0000CA                     	ds	1
  1817  0000CB                     _USBDeviceState:
  1818                           	opt stack 0
  1819  0000CB                     	ds	1
  1820  0000CC                     _I2cComSts:
  1821                           	opt stack 0
  1822  0000CC                     	ds	1
  1823  0000CD                     HttpGetMethod@GetMethodNextState:
  1824                           	opt stack 0
  1825  0000CD                     	ds	1
  1826  0000CE                     InitGprsNetwork@GprsNetInitNextState:
  1827                           	opt stack 0
  1828  0000CE                     	ds	1
  1829  0000CF                     _MdmStatus:
  1830                           	opt stack 0
  1831  0000CF                     	ds	1
  1832  0000D0                     _PhoneNumbLen:
  1833                           	opt stack 0
  1834  0000D0                     	ds	1
  1835  0000D1                     _SmsLen:
  1836                           	opt stack 0
  1837  0000D1                     	ds	1
  1838  0000D2                     _SystemState:
  1839                           	opt stack 0
  1840  0000D2                     	ds	1
  1841  0000D3                     _USTATcopy:
  1842                           	opt stack 0
  1843  0000D3                     	ds	1
  1844  0000D4                     _USBActiveConfiguration:
  1845                           	opt stack 0
  1846  0000D4                     	ds	1
  1847  0000D5                     _I2cReadDataEvt:
  1848                           	opt stack 0
  1849  0000D5                     	ds	1
  1850  0000D6                     _I2cWriteDataEvt:
  1851                           	opt stack 0
  1852  0000D6                     	ds	1
  1853  0000D7                     _GetMethod:
  1854                           	opt stack 0
  1855  0000D7                     	ds	1
  1856  0000D8                     _InitNetwork:
  1857                           	opt stack 0
  1858  0000D8                     	ds	1
  1859  0000D9                     _SmsTxtReady:
  1860                           	opt stack 0
  1861  0000D9                     	ds	1
  1862  0000DA                     _GetSmsText:
  1863                           	opt stack 0
  1864  0000DA                     	ds	1
  1865  0000DB                     _SmsEvent:
  1866                           	opt stack 0
  1867  0000DB                     	ds	1
  1868  0000DC                     _RingEvent:
  1869                           	opt stack 0
  1870  0000DC                     	ds	1
  1871  0000DD                     _SendSmsEvent:
  1872                           	opt stack 0
  1873  0000DD                     	ds	1
  1874  0000DE                     _MdmOnOffPulseRequest:
  1875                           	opt stack 0
  1876  0000DE                     	ds	1
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1h	equ	0xFE2
  1885                           fsr1l	equ	0xFE1
  1886                           
  1887                           	psect	bssBANK1
  1888  0001C9                     __pbssBANK1:
  1889                           	opt stack 0
  1890  0001C9                     _outPipes:
  1891                           	opt stack 0
  1892  0001C9                     	ds	8
  1893  0001D1                     _CDCDataInHandle:
  1894                           	opt stack 0
  1895  0001D1                     	ds	2
  1896  0001D3                     _Tmr2IsrCallback:
  1897                           	opt stack 0
  1898  0001D3                     	ds	2
  1899  0001D5                     	ds	1
  1900  0001D6                     	ds	1
  1901  0001D7                     	ds	1
  1902  0001D8                     	ds	1
  1903  0001D9                     	ds	1
  1904  0001DA                     	ds	1
  1905  0001DB                     	ds	1
  1906  0001DC                     	ds	1
  1907  0001DD                     	ds	1
  1908  0001DE                     	ds	1
  1909  0001DF                     	ds	1
  1910  0001E0                     GsmGprsTerminal@SMS:
  1911                           	opt stack 0
  1912  0001E0                     	ds	1
  1913  0001E1                     	ds	1
  1914  0001E2                     _control_signal_bitmap:
  1915                           	opt stack 0
  1916  0001E2                     	ds	1
  1917  0001E3                     _cdc_mem_type:
  1918                           	opt stack 0
  1919  0001E3                     	ds	1
  1920  0001E4                     _USBTicksSinceSuspendEnd:
  1921                           	opt stack 0
  1922  0001E4                     	ds	1
  1923  0001E5                     _BothEP0OutUOWNsSet:
  1924                           	opt stack 0
  1925  0001E5                     	ds	1
  1926  0001E6                     _USBBusIsSuspended:
  1927                           	opt stack 0
  1928  0001E6                     	ds	1
  1929  0001E7                     _RemoteWakeup:
  1930                           	opt stack 0
  1931  0001E7                     	ds	1
  1932  0001E8                     I2cSlv_QueryI2cData@Ret:
  1933                           	opt stack 0
  1934  0001E8                     	ds	1
  1935  0001E9                     I2cSlv_QueryI2cData@I2cOpState:
  1936                           	opt stack 0
  1937  0001E9                     	ds	1
  1938  0001EA                     I2cSendMsgSm@I2cComState:
  1939                           	opt stack 0
  1940  0001EA                     	ds	1
  1941  0001EB                     _I2cBusStatus:
  1942                           	opt stack 0
  1943  0001EB                     	ds	1
  1944  0001EC                     HttpGetMethod@GetMOutSts:
  1945                           	opt stack 0
  1946  0001EC                     	ds	1
  1947  0001ED                     HttpGetMethod@GetMethodState:
  1948                           	opt stack 0
  1949  0001ED                     	ds	1
  1950  0001EE                     InitGprsNetwork@GprsNetInitState:
  1951                           	opt stack 0
  1952  0001EE                     	ds	1
  1953  0001EF                     _PostMethod:
  1954                           	opt stack 0
  1955  0001EF                     	ds	1
  1956  0001F0                     _HttpGetMethodSts:
  1957                           	opt stack 0
  1958  0001F0                     	ds	1
  1959  0001F1                     _GprsNetworkSts:
  1960                           	opt stack 0
  1961  0001F1                     	ds	1
  1962  0001F2                     _ApnLenLocal:
  1963                           	opt stack 0
  1964  0001F2                     	ds	1
  1965  0001F3                     SendSmsSm@SendSms_NextState:
  1966                           	opt stack 0
  1967  0001F3                     	ds	1
  1968  0001F4                     SendSmsSm@SendSms_State:
  1969                           	opt stack 0
  1970  0001F4                     	ds	1
  1971  0001F5                     _AlarmEvent:
  1972                           	opt stack 0
  1973  0001F5                     	ds	1
  1974  0001F6                     _Led3OutSts:
  1975                           	opt stack 0
  1976  0001F6                     	ds	1
  1977  0001F7                     _Led3Sts:
  1978                           	opt stack 0
  1979  0001F7                     	ds	1
  1980  0001F8                     _Led2OutSts:
  1981                           	opt stack 0
  1982  0001F8                     	ds	1
  1983  0001F9                     _Led2Sts:
  1984                           	opt stack 0
  1985  0001F9                     	ds	1
  1986  0001FA                     _Led1OutSts:
  1987                           	opt stack 0
  1988  0001FA                     	ds	1
  1989  0001FB                     _Led1Sts:
  1990                           	opt stack 0
  1991  0001FB                     	ds	1
  1992  0001FC                     I2cDummyTx@DummyBuffer:
  1993                           	opt stack 0
  1994  0001FC                     	ds	1
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           postdec1	equ	0xFE5
  2002                           fsr1h	equ	0xFE2
  2003                           fsr1l	equ	0xFE1
  2004                           
  2005                           	psect	dataBANK1
  2006  0001FD                     __pdataBANK1:
  2007                           	opt stack 0
  2008  0001FD                     	ds	1
  2009  0001FE                     InitGprsNetwork@GprsInitSts:
  2010                           	opt stack 0
  2011  0001FE                     	ds	1
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           postdec1	equ	0xFE5
  2019                           fsr1h	equ	0xFE2
  2020                           fsr1l	equ	0xFE1
  2021                           
  2022                           	psect	bssBANK2
  2023  0002C8                     __pbssBANK2:
  2024                           	opt stack 0
  2025  0002C8                     _pCDCDst:
  2026                           	opt stack 0
  2027  0002C8                     	ds	3
  2028  0002CB                     _pCDCSrc:
  2029                           	opt stack 0
  2030  0002CB                     	ds	3
  2031  0002CE                     _ep_data_out:
  2032                           	opt stack 0
  2033  0002CE                     	ds	3
  2034  0002D1                     _ep_data_in:
  2035                           	opt stack 0
  2036  0002D1                     	ds	3
  2037  0002D4                     _pDst:
  2038                           	opt stack 0
  2039  0002D4                     	ds	2
  2040  0002D6                     _ApnLocal:
  2041                           	opt stack 0
  2042  0002D6                     	ds	2
  2043  0002D8                     ConfigureModem@DelayCounter:
  2044                           	opt stack 0
  2045  0002D8                     	ds	2
  2046  0002DA                     ConfigureModem@DelayValueMs:
  2047                           	opt stack 0
  2048  0002DA                     	ds	2
  2049  0002DC                     TurnOnModem@Counter:
  2050                           	opt stack 0
  2051  0002DC                     	ds	2
  2052  0002DE                     UpdateSchFlag@InterruptCounter:
  2053                           	opt stack 0
  2054  0002DE                     	ds	2
  2055  0002E0                     MdmCntSm@Counter:
  2056                           	opt stack 0
  2057  0002E0                     	ds	2
  2058  0002E2                     RiSm@Counter:
  2059                           	opt stack 0
  2060  0002E2                     	ds	2
  2061  0002E4                     _ExtInt1IsrCallback:
  2062                           	opt stack 0
  2063  0002E4                     	ds	2
  2064  0002E6                     _ExtInt0IsrCallback:
  2065                           	opt stack 0
  2066  0002E6                     	ds	2
  2067  0002E8                     _RtccIsrCallback:
  2068                           	opt stack 0
  2069  0002E8                     	ds	2
  2070  0002EA                     _Tmr4IsrCallback:
  2071                           	opt stack 0
  2072  0002EA                     	ds	2
  2073  0002EC                     Term_MainSm@TermMainSmState:
  2074                           	opt stack 0
  2075  0002EC                     	ds	1
  2076  0002ED                     Terminal@FormatOption:
  2077                           	opt stack 0
  2078  0002ED                     	ds	1
  2079  0002EE                     Terminal@SlaveAddr:
  2080                           	opt stack 0
  2081  0002EE                     	ds	1
  2082  0002EF                     Terminal@PackageLen:
  2083                           	opt stack 0
  2084  0002EF                     	ds	1
  2085  0002F0                     Terminal@TermState:
  2086                           	opt stack 0
  2087  0002F0                     	ds	1
  2088  0002F1                     _USBAlternateInterface:
  2089                           	opt stack 0
  2090  0002F1                     	ds	2
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           postinc0	equ	0xFEE
  2096                           wreg	equ	0xFE8
  2097                           postdec1	equ	0xFE5
  2098                           fsr1h	equ	0xFE2
  2099                           fsr1l	equ	0xFE1
  2100                           
  2101                           	psect	dataBANK2
  2102  0002F3                     __pdataBANK2:
  2103                           	opt stack 0
  2104  0002F3                     Terminal@EchoOption:
  2105                           	opt stack 0
  2106  0002F3                     	ds	1
  2107  0002F4                     _MainSystemTimebaseFlag:
  2108                           	opt stack 0
  2109  0002F4                     	ds	1
  2110  0002F5                     _ConnTimeout:
  2111                           	opt stack 0
  2112  0002F5                     	ds	11
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           
  2123                           	psect	bssBANK3
  2124  000300                     __pbssBANK3:
  2125                           	opt stack 0
  2126  000300                     _Rtcm_SystemDate:
  2127                           	opt stack 0
  2128  000300                     	ds	8
  2129  000308                     _Rtcm_RtccAlarm:
  2130                           	opt stack 0
  2131  000308                     	ds	6
  2132  00030E                     _pBDTEntryOut:
  2133                           	opt stack 0
  2134  00030E                     	ds	6
  2135  000314                     _BaudRateGen:
  2136                           	opt stack 0
  2137  000314                     	ds	4
  2138  000318                     _USB1msTickCount:
  2139                           	opt stack 0
  2140  000318                     	ds	4
  2141  00031C                     _OsTmr_OsTickCounter:
  2142                           	opt stack 0
  2143  00031C                     	ds	4
  2144  000320                     MyApp_Task@F8992:
  2145                           	opt stack 0
  2146  000320                     	ds	2
  2147  000322                     	ds	2
  2148  000324                     _PhoneNumberLen:
  2149                           	opt stack 0
  2150  000324                     	ds	2
  2151  000326                     _UartConfig:
  2152                           	opt stack 0
  2153  000326                     	ds	21
  2154  00033B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2155                           	opt stack 0
  2156  00033B                     	ds	11
  2157  000346                     I2cSlv_QueryI2cData@QueryTimer:
  2158                           	opt stack 0
  2159  000346                     	ds	11
  2160  000351                     _I2cConfig:
  2161                           	opt stack 0
  2162  000351                     	ds	10
  2163  00035B                     _Led3Blink:
  2164                           	opt stack 0
  2165  00035B                     	ds	9
  2166  000364                     _Led2Blink:
  2167                           	opt stack 0
  2168  000364                     	ds	9
  2169  00036D                     _Led1Blink:
  2170                           	opt stack 0
  2171  00036D                     	ds	9
  2172  000376                     _dummy_encapsulated_cmd_response:
  2173                           	opt stack 0
  2174  000376                     	ds	8
  2175  00037E                     _line_coding:
  2176                           	opt stack 0
  2177  00037E                     	ds	7
  2178  000385                     _Led3Pulse:
  2179                           	opt stack 0
  2180  000385                     	ds	6
  2181  00038B                     _Led2Pulse:
  2182                           	opt stack 0
  2183  00038B                     	ds	6
  2184  000391                     _Led1Pulse:
  2185                           	opt stack 0
  2186  000391                     	ds	6
  2187  000397                     _I2cRxPacket:
  2188                           	opt stack 0
  2189  000397                     	ds	6
  2190  00039D                     _I2cTxPacket:
  2191                           	opt stack 0
  2192  00039D                     	ds	5
  2193  0003A2                     _HttpGetDataLocal:
  2194                           	opt stack 0
  2195  0003A2                     	ds	5
  2196  0003A7                     Terminal@Addr:
  2197                           	opt stack 0
  2198  0003A7                     	ds	4
  2199  0003AB                     Terminal@Len:
  2200                           	opt stack 0
  2201  0003AB                     	ds	4
  2202  0003AF                     _AlCfg:
  2203                           	opt stack 0
  2204  0003AF                     	ds	4
  2205  0003B3                     _RtcConfig:
  2206                           	opt stack 0
  2207  0003B3                     	ds	4
  2208  0003B7                     initGprsModem@modemCounter:
  2209                           	opt stack 0
  2210  0003B7                     	ds	2
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           postinc0	equ	0xFEE
  2216                           wreg	equ	0xFE8
  2217                           postdec1	equ	0xFE5
  2218                           fsr1h	equ	0xFE2
  2219                           fsr1l	equ	0xFE1
  2220                           
  2221                           	psect	dataBANK3
  2222  0003B9                     __pdataBANK3:
  2223                           	opt stack 0
  2224  0003B9                     ModemEvtParser@F9090:
  2225                           	opt stack 0
  2226  0003B9                     	ds	10
  2227  0003C3                     ModemEvtParser@F9088:
  2228                           	opt stack 0
  2229  0003C3                     	ds	5
  2230  0003C8                     ModemEvtParser@F9086:
  2231                           	opt stack 0
  2232  0003C8                     	ds	4
  2233  0003CC                     MyApp_Task@F8989:
  2234                           	opt stack 0
  2235  0003CC                     	ds	2
  2236  0003CE                     MyApp_Task@F8986:
  2237                           	opt stack 0
  2238  0003CE                     	ds	2
  2239  0003D0                     	ds	2
  2240  0003D2                     triggerRelay@F8966:
  2241                           	opt stack 0
  2242  0003D2                     	ds	2
  2243  0003D4                     Term_MainSm@TermDelay:
  2244                           	opt stack 0
  2245  0003D4                     	ds	11
  2246  0003DF                     _ConnWait:
  2247                           	opt stack 0
  2248  0003DF                     	ds	11
  2249  0003EA                     SendSmsSm@SwTimer:
  2250                           	opt stack 0
  2251  0003EA                     	ds	11
  2252  0003F5                     CheckModem@Timeout:
  2253                           	opt stack 0
  2254  0003F5                     	ds	11
  2255                           tblptru	equ	0xFF8
  2256                           tblptrh	equ	0xFF7
  2257                           tblptrl	equ	0xFF6
  2258                           tablat	equ	0xFF5
  2259                           postinc0	equ	0xFEE
  2260                           wreg	equ	0xFE8
  2261                           postdec1	equ	0xFE5
  2262                           fsr1h	equ	0xFE2
  2263                           fsr1l	equ	0xFE1
  2264                           
  2265                           	psect	bssBANK4
  2266  000440                     __pbssBANK4:
  2267                           	opt stack 0
  2268  000440                     	ds	10
  2269  00044A                     _cdc_notice:
  2270                           	opt stack 0
  2271  00044A                     	ds	10
  2272  000454                     Term_MainSm@Data:
  2273                           	opt stack 0
  2274  000454                     	ds	50
  2275  000486                     _PhoneNumber:
  2276                           	opt stack 0
  2277  000486                     	ds	20
  2278  00049A                     Terminal@SwTimer:
  2279                           	opt stack 0
  2280  00049A                     	ds	11
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           postdec1	equ	0xFE5
  2288                           fsr1h	equ	0xFE2
  2289                           fsr1l	equ	0xFE1
  2290                           
  2291                           	psect	dataBANK4
  2292  0004A5                     __pdataBANK4:
  2293                           	opt stack 0
  2294  0004A5                     MyApp_Task@F8995:
  2295                           	opt stack 0
  2296  0004A5                     	ds	10
  2297  0004AF                     _TaskTable:
  2298                           	opt stack 0
  2299  0004AF                     	ds	80
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           postinc0	equ	0xFEE
  2305                           wreg	equ	0xFE8
  2306                           postdec1	equ	0xFE5
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           
  2310                           	psect	bssBANK5
  2311  000500                     __pbssBANK5:
  2312                           	opt stack 0
  2313  000500                     Terminal@Payload:
  2314                           	opt stack 0
  2315  000500                     	ds	80
  2316  000550                     _cdc_data_rx:
  2317                           	opt stack 0
  2318  000550                     	ds	64
  2319  000590                     Terminal@TermRxBuffer:
  2320                           	opt stack 0
  2321  000590                     	ds	50
  2322  0005C2                     _MessageText:
  2323                           	opt stack 0
  2324  0005C2                     	ds	50
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           
  2335                           	psect	bssBANK6
  2336  000600                     __pbssBANK6:
  2337                           	opt stack 0
  2338  000600                     _OsAlarms:
  2339                           	opt stack 0
  2340  000600                     	ds	220
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           
  2351                           	psect	bssBANK7
  2352  000700                     __pbssBANK7:
  2353                           	opt stack 0
  2354  000700                     _Mdm_SmsRx:
  2355                           	opt stack 0
  2356  000700                     	ds	132
  2357  000784                     _cdc_data_tx:
  2358                           	opt stack 0
  2359  000784                     	ds	64
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           postdec1	equ	0xFE5
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           
  2370                           	psect	bssBANK8
  2371  000800                     __pbssBANK8:
  2372                           	opt stack 0
  2373  000800                     GsmGprsTerminal@UsbBuffer:
  2374                           	opt stack 0
  2375  000800                     	ds	200
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           postinc0	equ	0xFEE
  2381                           wreg	equ	0xFE8
  2382                           postdec1	equ	0xFE5
  2383                           fsr1h	equ	0xFE2
  2384                           fsr1l	equ	0xFE1
  2385                           
  2386                           	psect	bssBANK9
  2387  000900                     __pbssBANK9:
  2388                           	opt stack 0
  2389  000900                     GsmGprsTerminal@UartBuffer:
  2390                           	opt stack 0
  2391  000900                     	ds	200
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           
  2402                           	psect	bssBIGRAMl
  2403  000AC8                     __pbssBIGRAMl:
  2404                           	opt stack 0
  2405  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2406                           	opt stack 0
  2407  000AC8                     	ds	400
  2408  000C58                     _RxBuffer:
  2409                           	opt stack 0
  2410  000C58                     	ds	400
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           
  2421                           	psect	cstackBANK10
  2422  000A00                     __pcstackBANK10:
  2423                           	opt stack 0
  2424  000A00                     Terminal@UsbRxBuffer:
  2425                           	opt stack 0
  2426                           
  2427                           ; 200 bytes @ 0x0
  2428  000A00                     	ds	200
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439                           	psect	cstackBANK2
  2440  000200                     __pcstackBANK2:
  2441                           	opt stack 0
  2442  000200                     Terminal@UsbTxBuffer:
  2443                           	opt stack 0
  2444                           
  2445                           ; 200 bytes @ 0x0
  2446  000200                     	ds	200
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           postinc0	equ	0xFEE
  2452                           wreg	equ	0xFE8
  2453                           postdec1	equ	0xFE5
  2454                           fsr1h	equ	0xFE2
  2455                           fsr1l	equ	0xFE1
  2456                           
  2457                           	psect	cstackBANK1
  2458  000100                     __pcstackBANK1:
  2459                           	opt stack 0
  2460  000100                     SendSmsSm@UartMessage:
  2461                           	opt stack 0
  2462  000100                     InitGprsNetwork@UartMessage:
  2463                           	opt stack 0
  2464  000100                     Terminal@TermTxBuffer:
  2465                           	opt stack 0
  2466  000100                     HttpGetMethod@UartMessage:
  2467                           	opt stack 0
  2468                           
  2469                           ; 200 bytes @ 0x0
  2470  000100                     	ds	50
  2471  000132                     InitGprsNetwork@Index:
  2472                           	opt stack 0
  2473  000132                     Term_MainSm@FwkMajorStr:
  2474                           	opt stack 0
  2475                           
  2476                           ; 4 bytes @ 0x32
  2477  000132                     	ds	4
  2478  000136                     Term_MainSm@FwkMinorStr:
  2479                           	opt stack 0
  2480                           
  2481                           ; 4 bytes @ 0x36
  2482  000136                     	ds	4
  2483  00013A                     Term_MainSm@FwkBuildStr:
  2484                           	opt stack 0
  2485                           
  2486                           ; 4 bytes @ 0x3A
  2487  00013A                     	ds	142
  2488  0001C8                     HttpGetMethod@Index:
  2489                           	opt stack 0
  2490                           
  2491                           ; 1 bytes @ 0xC8
  2492  0001C8                     	ds	1
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           postdec1	equ	0xFE5
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           
  2503                           	psect	cstackBANK0
  2504  000060                     __pcstackBANK0:
  2505                           	opt stack 0
  2506  000060                     
  2507                           ; 1 bytes @ 0x0
  2508  000060                     	ds	8
  2509  000068                     ??_LowPriorityIsr:
  2510                           
  2511                           ; 1 bytes @ 0x8
  2512  000068                     	ds	21
  2513  00007D                     ??_isdigit:
  2514  00007D                     ??_isspace:
  2515  00007D                     ??_isupper:
  2516  00007D                     ??_Rtcc_GetRtccValue:
  2517  00007D                     ??_UartTxBufferStatus:
  2518  00007D                     ??_USBStdGetDscHandler:
  2519  00007D                     ??_USBStdGetStatusHandler:
  2520  00007D                     ?_USBTransferOnePacket:
  2521                           	opt stack 0
  2522  00007D                     ?_strlen:
  2523                           	opt stack 0
  2524  00007D                     ?_sprintf:
  2525                           	opt stack 0
  2526  00007D                     ?___wmul:
  2527                           	opt stack 0
  2528  00007D                     ?___awdiv:
  2529                           	opt stack 0
  2530  00007D                     ?___awmod:
  2531                           	opt stack 0
  2532  00007D                     ?___lwmod:
  2533                           	opt stack 0
  2534  00007D                     ?_GetOsTickCounter:
  2535                           	opt stack 0
  2536  00007D                     ?___lmul:
  2537                           	opt stack 0
  2538  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2539                           	opt stack 0
  2540  00007D                     SetAckStatus@AckSts:
  2541                           	opt stack 0
  2542  00007D                     WriteByte@Byte:
  2543                           	opt stack 0
  2544  00007D                     ReadByte@Byte:
  2545                           	opt stack 0
  2546  00007D                     Mcu_SetWdgSts@WdgSts:
  2547                           	opt stack 0
  2548  00007D                     RtccIrqInit@Priority:
  2549                           	opt stack 0
  2550  00007D                     Rtcc_SetRtcStatus@Status:
  2551                           	opt stack 0
  2552  00007D                     TmrBInit@Prescaler:
  2553                           	opt stack 0
  2554  00007D                     Tmr_TmrBIrqSet@Priority:
  2555                           	opt stack 0
  2556  00007D                     Tmr_StartTmr@TmrNumb:
  2557                           	opt stack 0
  2558  00007D                     UartWriteByte@ByteToWrite:
  2559                           	opt stack 0
  2560  00007D                     USBTransferOnePacket@dir:
  2561                           	opt stack 0
  2562  00007D                     USBConfigureEndpoint@direction:
  2563                           	opt stack 0
  2564  00007D                     USBCtrlTrfTxService@byteToSend:
  2565                           	opt stack 0
  2566  00007D                     USBCtrlTrfRxService@i:
  2567                           	opt stack 0
  2568  00007D                     Led_SetLedStatus@LedSts:
  2569                           	opt stack 0
  2570  00007D                     toupper@c:
  2571                           	opt stack 0
  2572  00007D                     tolower@c:
  2573                           	opt stack 0
  2574  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2575                           	opt stack 0
  2576  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2577                           	opt stack 0
  2578  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2579                           	opt stack 0
  2580  00007D                     Uart_ClearRxBuffer@Index:
  2581                           	opt stack 0
  2582  00007D                     GenerateEvt@Event:
  2583                           	opt stack 0
  2584  00007D                     ReceiveEvt@Event:
  2585                           	opt stack 0
  2586  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2587                           	opt stack 0
  2588  00007D                     StringCompare@String1:
  2589                           	opt stack 0
  2590  00007D                     StringCopy@SourceStr:
  2591                           	opt stack 0
  2592  00007D                     ClearBuffer@Buffer:
  2593                           	opt stack 0
  2594  00007D                     sprintf@sp:
  2595                           	opt stack 0
  2596  00007D                     ___wmul@multiplier:
  2597                           	opt stack 0
  2598  00007D                     ___awdiv@dividend:
  2599                           	opt stack 0
  2600  00007D                     ___awmod@dividend:
  2601                           	opt stack 0
  2602  00007D                     ___lwmod@dividend:
  2603                           	opt stack 0
  2604  00007D                     memcpy@d1:
  2605                           	opt stack 0
  2606  00007D                     memset@p1:
  2607                           	opt stack 0
  2608  00007D                     strcat@to:
  2609                           	opt stack 0
  2610  00007D                     strcpy@to:
  2611                           	opt stack 0
  2612  00007D                     strlen@s:
  2613                           	opt stack 0
  2614  00007D                     ___lmul@multiplier:
  2615                           	opt stack 0
  2616                           
  2617                           ; 4 bytes @ 0x1D
  2618  00007D                     	ds	1
  2619  00007E                     ??_USBConfigureEndpoint:
  2620  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2621                           	opt stack 0
  2622  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2623                           	opt stack 0
  2624  00007E                     TmrBInit@Postscaler:
  2625                           	opt stack 0
  2626  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2627                           	opt stack 0
  2628  00007E                     UartWriteByte@Module:
  2629                           	opt stack 0
  2630  00007E                     UartTxBufferStatus@Module:
  2631                           	opt stack 0
  2632  00007E                     USBCtrlTrfRxService@byteToRead:
  2633                           	opt stack 0
  2634  00007E                     USBCtrlTrfInHandler@lastDTS:
  2635                           	opt stack 0
  2636  00007E                     Led_SetLedStatus@Led:
  2637                           	opt stack 0
  2638  00007E                     _isdigit$6124:
  2639                           	opt stack 0
  2640  00007E                     _isspace$6393:
  2641                           	opt stack 0
  2642  00007E                     _isupper$6396:
  2643                           	opt stack 0
  2644  00007E                     I2c_WriteData@WritePacket:
  2645                           	opt stack 0
  2646  00007E                     Rtcc_RtcConfig@RtcConfig:
  2647                           	opt stack 0
  2648  00007E                     USBTransferOnePacket@data:
  2649                           	opt stack 0
  2650  00007E                     USBStdGetStatusHandler@p:
  2651                           	opt stack 0
  2652                           
  2653                           ; 2 bytes @ 0x1E
  2654  00007E                     	ds	1
  2655  00007F                     ??_strlen:
  2656  00007F                     ??_Rtcc_AlarmConfig:
  2657  00007F                     ??_TmrBInit:
  2658  00007F                     Irq_InitIntController@IntPriorityEn:
  2659                           	opt stack 0
  2660  00007F                     Rtcc_GetRtccValue@RetValue:
  2661                           	opt stack 0
  2662  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2663                           	opt stack 0
  2664  00007F                     UartTxBufferStatus@TxBufferStatus:
  2665                           	opt stack 0
  2666  00007F                     GenerateEvt@EventStatus:
  2667                           	opt stack 0
  2668  00007F                     isdigit@c:
  2669                           	opt stack 0
  2670  00007F                     isspace@c:
  2671                           	opt stack 0
  2672  00007F                     isupper@c:
  2673                           	opt stack 0
  2674  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2675                           	opt stack 0
  2676  00007F                     StringCompare@String2:
  2677                           	opt stack 0
  2678  00007F                     StringCopy@DestStr:
  2679                           	opt stack 0
  2680  00007F                     ClearBuffer@Len:
  2681                           	opt stack 0
  2682  00007F                     sprintf@f:
  2683                           	opt stack 0
  2684  00007F                     ___wmul@multiplicand:
  2685                           	opt stack 0
  2686  00007F                     ___awdiv@divisor:
  2687                           	opt stack 0
  2688  00007F                     ___awmod@divisor:
  2689                           	opt stack 0
  2690  00007F                     ___lwmod@divisor:
  2691                           	opt stack 0
  2692  00007F                     memcpy@s1:
  2693                           	opt stack 0
  2694  00007F                     memset@c:
  2695                           	opt stack 0
  2696  00007F                     strcat@from:
  2697                           	opt stack 0
  2698  00007F                     strcpy@from:
  2699                           	opt stack 0
  2700                           
  2701                           ; 2 bytes @ 0x1F
  2702  00007F                     	ds	1
  2703  000080                     ??_isalpha:
  2704  000080                     ??_isxdigit:
  2705  000080                     ??_I2c_WriteData:
  2706  000080                     ??_Rtcc_RtcConfig:
  2707  000080                     Rtcc_GetRtccValue@RegValue:
  2708                           	opt stack 0
  2709  000080                     TmrBInit@TmrNumb:
  2710                           	opt stack 0
  2711  000080                     ReceiveEvt@EventStatus:
  2712                           	opt stack 0
  2713  000080                     USBTransferOnePacket@len:
  2714                           	opt stack 0
  2715  000080                     I2c_ReadData@ReadPacket:
  2716                           	opt stack 0
  2717  000080                     Uart_WriteConstString@ConstStringToWrite:
  2718                           	opt stack 0
  2719  000080                     Uart_WriteString@StringToWrite:
  2720                           	opt stack 0
  2721  000080                     Uart_WriteStringLen@StringToWrite:
  2722                           	opt stack 0
  2723  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2724                           	opt stack 0
  2725  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2726                           	opt stack 0
  2727                           
  2728                           ; 2 bytes @ 0x20
  2729  000080                     	ds	1
  2730  000081                     ?_GetElapsedTime:
  2731                           	opt stack 0
  2732  000081                     ?_Rtcm_GetRtccDate:
  2733                           	opt stack 0
  2734  000081                     I2cSlv_I2cReadMsgSts@Result:
  2735                           	opt stack 0
  2736  000081                     USBTransferOnePacket@ep:
  2737                           	opt stack 0
  2738  000081                     Led_SetLedBlinkTime@Led:
  2739                           	opt stack 0
  2740  000081                     ___awdiv@counter:
  2741                           	opt stack 0
  2742  000081                     ___awmod@counter:
  2743                           	opt stack 0
  2744  000081                     ___lwmod@counter:
  2745                           	opt stack 0
  2746  000081                     _isalpha$6390:
  2747                           	opt stack 0
  2748  000081                     _isxdigit$6400:
  2749                           	opt stack 0
  2750  000081                     OsTmr_StartTimer@Timer:
  2751                           	opt stack 0
  2752  000081                     StringCompare@Len:
  2753                           	opt stack 0
  2754  000081                     StringCopy@Len:
  2755                           	opt stack 0
  2756  000081                     ClearBuffer@Index:
  2757                           	opt stack 0
  2758  000081                     ___wmul@product:
  2759                           	opt stack 0
  2760  000081                     memcpy@n:
  2761                           	opt stack 0
  2762  000081                     memset@n:
  2763                           	opt stack 0
  2764  000081                     strcat@cp:
  2765                           	opt stack 0
  2766  000081                     strcpy@cp:
  2767                           	opt stack 0
  2768  000081                     strlen@cp:
  2769                           	opt stack 0
  2770  000081                     GetElapsedTime@StartTime:
  2771                           	opt stack 0
  2772  000081                     ___lmul@multiplicand:
  2773                           	opt stack 0
  2774                           
  2775                           ; 4 bytes @ 0x21
  2776  000081                     	ds	1
  2777  000082                     ??_I2c_ReadData:
  2778  000082                     Uart_WriteConstString@Module:
  2779                           	opt stack 0
  2780  000082                     Uart_WriteString@Module:
  2781                           	opt stack 0
  2782  000082                     Uart_WriteStringLen@Len:
  2783                           	opt stack 0
  2784  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2785                           	opt stack 0
  2786  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2787                           	opt stack 0
  2788  000082                     USBConfigureEndpoint@EPNum:
  2789                           	opt stack 0
  2790  000082                     ___awdiv@sign:
  2791                           	opt stack 0
  2792  000082                     ___awmod@sign:
  2793                           	opt stack 0
  2794  000082                     isalpha@c:
  2795                           	opt stack 0
  2796  000082                     isxdigit@c:
  2797                           	opt stack 0
  2798  000082                     USBTransferOnePacket@handle:
  2799                           	opt stack 0
  2800                           
  2801                           ; 2 bytes @ 0x22
  2802  000082                     	ds	1
  2803  000083                     ??_StringCopy:
  2804  000083                     ?_atoi:
  2805                           	opt stack 0
  2806  000083                     ?_xtoi:
  2807                           	opt stack 0
  2808  000083                     ?___lwdiv:
  2809                           	opt stack 0
  2810  000083                     Uart_WriteStringLen@Index:
  2811                           	opt stack 0
  2812  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2813                           	opt stack 0
  2814  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2815                           	opt stack 0
  2816  000083                     sprintf@flag:
  2817                           	opt stack 0
  2818  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2819                           	opt stack 0
  2820  000083                     USBConfigureEndpoint@handle:
  2821                           	opt stack 0
  2822  000083                     putUSBUSART@data:
  2823                           	opt stack 0
  2824  000083                     atoi@s:
  2825                           	opt stack 0
  2826  000083                     ___awdiv@quotient:
  2827                           	opt stack 0
  2828  000083                     ___lwdiv@dividend:
  2829                           	opt stack 0
  2830  000083                     memcpy@d:
  2831                           	opt stack 0
  2832  000083                     memset@p:
  2833                           	opt stack 0
  2834  000083                     xtoi@s:
  2835                           	opt stack 0
  2836  000083                     OsTmr_StartTimer@Timeout:
  2837                           	opt stack 0
  2838                           
  2839                           ; 4 bytes @ 0x23
  2840  000083                     	ds	1
  2841  000084                     Uart_WriteStringLen@Module:
  2842                           	opt stack 0
  2843  000084                     I2cSlv_SendI2cMsg@TxSts:
  2844                           	opt stack 0
  2845  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2846                           	opt stack 0
  2847  000084                     CDCTxService@i:
  2848                           	opt stack 0
  2849  000084                     getsUSBUSART@buffer:
  2850                           	opt stack 0
  2851  000084                     sprintf@ap:
  2852                           	opt stack 0
  2853                           
  2854                           ; 2 bytes @ 0x24
  2855  000084                     	ds	1
  2856  000085                     ??_atoi:
  2857  000085                     ??_xtoi:
  2858  000085                     ??_GetElapsedTime:
  2859  000085                     Rtcc_SetRtccValue@Value:
  2860                           	opt stack 0
  2861  000085                     USBDeviceInit@i:
  2862                           	opt stack 0
  2863  000085                     USBEnableEndpoint@options:
  2864                           	opt stack 0
  2865  000085                     putUSBUSART@length:
  2866                           	opt stack 0
  2867  000085                     CDCTxService@byte_to_send:
  2868                           	opt stack 0
  2869  000085                     StringCompare@Result:
  2870                           	opt stack 0
  2871  000085                     StringCopy@Index:
  2872                           	opt stack 0
  2873  000085                     ___lwdiv@divisor:
  2874                           	opt stack 0
  2875  000085                     memcpy@s:
  2876                           	opt stack 0
  2877  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2878                           	opt stack 0
  2879  000085                     ___lmul@product:
  2880                           	opt stack 0
  2881                           
  2882                           ; 4 bytes @ 0x25
  2883  000085                     	ds	1
  2884  000086                     ??_Rtcc_SetRtccValue:
  2885  000086                     getsUSBUSART@len:
  2886                           	opt stack 0
  2887  000086                     sprintf@c:
  2888                           	opt stack 0
  2889  000086                     USBEnableEndpoint@p:
  2890                           	opt stack 0
  2891  000086                     StringCompare@Index:
  2892                           	opt stack 0
  2893                           
  2894                           ; 2 bytes @ 0x26
  2895  000086                     	ds	1
  2896  000087                     atoi@sign:
  2897                           	opt stack 0
  2898  000087                     ___lwdiv@counter:
  2899                           	opt stack 0
  2900  000087                     memcpy@tmp:
  2901                           	opt stack 0
  2902  000087                     xtoi@sign:
  2903                           	opt stack 0
  2904  000087                     sprintf@cp:
  2905                           	opt stack 0
  2906                           
  2907                           ; 2 bytes @ 0x27
  2908  000087                     	ds	1
  2909  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  2910                           	opt stack 0
  2911  000088                     USBEnableEndpoint@ep:
  2912                           	opt stack 0
  2913  000088                     atoi@a:
  2914                           	opt stack 0
  2915  000088                     ___lwdiv@quotient:
  2916                           	opt stack 0
  2917  000088                     xtoi@val:
  2918                           	opt stack 0
  2919  000088                     ModemEvtParser@CallReadyString:
  2920                           	opt stack 0
  2921                           
  2922                           ; 10 bytes @ 0x28
  2923  000088                     	ds	1
  2924  000089                     ??_Rtcm_GetRtccDate:
  2925  000089                     ?_strtol:
  2926                           	opt stack 0
  2927  000089                     ?___lldiv:
  2928                           	opt stack 0
  2929  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  2930                           	opt stack 0
  2931  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2932                           	opt stack 0
  2933  000089                     strtol@s:
  2934                           	opt stack 0
  2935  000089                     ___lldiv@dividend:
  2936                           	opt stack 0
  2937  000089                     Rtcm_SetRtccDate@Date:
  2938                           	opt stack 0
  2939                           
  2940                           ; 8 bytes @ 0x29
  2941  000089                     	ds	1
  2942  00008A                     xtoi@c:
  2943                           	opt stack 0
  2944  00008A                     LedBlinkStateMachine@LedBlink:
  2945                           	opt stack 0
  2946  00008A                     LedPulseStateMachine@LedPulse:
  2947                           	opt stack 0
  2948  00008A                     secondsAppTimer@counter:
  2949                           	opt stack 0
  2950  00008A                     utoa@buf:
  2951                           	opt stack 0
  2952  00008A                     Rtcm_GetRtccDate@LocalDate:
  2953                           	opt stack 0
  2954                           
  2955                           ; 8 bytes @ 0x2A
  2956  00008A                     	ds	1
  2957  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2958                           	opt stack 0
  2959  00008B                     strtol@endptr:
  2960                           	opt stack 0
  2961                           
  2962                           ; 2 bytes @ 0x2B
  2963  00008B                     	ds	1
  2964  00008C                     LedPulseStateMachine@Led:
  2965                           	opt stack 0
  2966  00008C                     secondsAppTimer@isCyclic:
  2967                           	opt stack 0
  2968  00008C                     utoa@val:
  2969                           	opt stack 0
  2970                           
  2971                           ; 2 bytes @ 0x2C
  2972  00008C                     	ds	1
  2973  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2974                           	opt stack 0
  2975  00008D                     strtol@base:
  2976                           	opt stack 0
  2977  00008D                     GetElapsedTime@TimeValue:
  2978                           	opt stack 0
  2979  00008D                     ___lldiv@divisor:
  2980                           	opt stack 0
  2981                           
  2982                           ; 4 bytes @ 0x2D
  2983  00008D                     	ds	1
  2984  00008E                     utoa@base:
  2985                           	opt stack 0
  2986                           
  2987                           ; 2 bytes @ 0x2E
  2988  00008E                     	ds	1
  2989  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2990  00008F                     ??_strtol:
  2991  00008F                     secondsAppTimer@seconds:
  2992                           	opt stack 0
  2993  00008F                     LedStateMachine@LedSts:
  2994                           	opt stack 0
  2995                           
  2996                           ; 2 bytes @ 0x2F
  2997  00008F                     	ds	1
  2998  000090                     secondsAppTimer@isExpired:
  2999                           	opt stack 0
  3000  000090                     utoa@v:
  3001                           	opt stack 0
  3002                           
  3003                           ; 2 bytes @ 0x30
  3004  000090                     	ds	1
  3005  000091                     ??_USBStdFeatureReqHandler:
  3006  000091                     USBStdSetCfgHandler@i:
  3007                           	opt stack 0
  3008  000091                     LedStateMachine@LedOut:
  3009                           	opt stack 0
  3010  000091                     secondsAppTimer@destinationTicks:
  3011                           	opt stack 0
  3012  000091                     GetElapsedTime@CurrentTimestamp:
  3013                           	opt stack 0
  3014  000091                     ___lldiv@quotient:
  3015                           	opt stack 0
  3016                           
  3017                           ; 4 bytes @ 0x31
  3018  000091                     	ds	1
  3019  000092                     utoa@c:
  3020                           	opt stack 0
  3021  000092                     USBStdFeatureReqHandler@pUEP:
  3022                           	opt stack 0
  3023  000092                     ModemEvtParser@SmsString:
  3024                           	opt stack 0
  3025                           
  3026                           ; 5 bytes @ 0x32
  3027  000092                     	ds	1
  3028  000093                     initGprsModem@isInitialized:
  3029                           	opt stack 0
  3030  000093                     strtol@sign:
  3031                           	opt stack 0
  3032  000093                     LedStateMachine@LedBlink:
  3033                           	opt stack 0
  3034  000093                     itoa@buf:
  3035                           	opt stack 0
  3036                           
  3037                           ; 2 bytes @ 0x33
  3038  000093                     	ds	1
  3039  000094                     USBStdFeatureReqHandler@current_ep_data:
  3040                           	opt stack 0
  3041  000094                     strtol@a:
  3042                           	opt stack 0
  3043  000094                     MyApp_Task@phone:
  3044                           	opt stack 0
  3045                           
  3046                           ; 10 bytes @ 0x34
  3047  000094                     	ds	1
  3048  000095                     ___lldiv@counter:
  3049                           	opt stack 0
  3050  000095                     OsTmr_GetTimerStatus@Timer:
  3051                           	opt stack 0
  3052  000095                     USBStdFeatureReqHandler@p:
  3053                           	opt stack 0
  3054  000095                     LedStateMachine@LedPulse:
  3055                           	opt stack 0
  3056  000095                     itoa@val:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0x35
  3060  000095                     	ds	1
  3061  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3062                           	opt stack 0
  3063  000096                     SetUartBaudRate@UartConfig:
  3064                           	opt stack 0
  3065  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3066                           	opt stack 0
  3067                           
  3068                           ; 4 bytes @ 0x36
  3069  000096                     	ds	1
  3070  000097                     ??_USBCtrlEPService:
  3071  000097                     itoa@base:
  3072                           	opt stack 0
  3073  000097                     ModemEvtParser@RingString:
  3074                           	opt stack 0
  3075                           
  3076                           ; 4 bytes @ 0x37
  3077  000097                     	ds	1
  3078  000098                     Tmr_TmrBPrSet@Prescaler:
  3079                           	opt stack 0
  3080  000098                     USBDeviceTasks@i:
  3081                           	opt stack 0
  3082  000098                     LedStateMachine@LedOutSts:
  3083                           	opt stack 0
  3084  000098                     strtol@c:
  3085                           	opt stack 0
  3086                           
  3087                           ; 1 bytes @ 0x38
  3088  000098                     	ds	1
  3089  000099                     Tmr_TmrBPrSet@Postscaler:
  3090                           	opt stack 0
  3091  000099                     SetUartBaudRate@Module:
  3092                           	opt stack 0
  3093  000099                     LedStateMachine@Led:
  3094                           	opt stack 0
  3095  000099                     itoa@cp:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x39
  3099  000099                     	ds	1
  3100  00009A                     ??_Led_MainTask:
  3101  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3102                           	opt stack 0
  3103  00009A                     SetUartBaudRate@BaudRateRegister:
  3104                           	opt stack 0
  3105  00009A                     SetBaudRate@McuClockHz:
  3106                           	opt stack 0
  3107                           
  3108                           ; 4 bytes @ 0x3A
  3109  00009A                     	ds	1
  3110  00009B                     ??_SendSmsSm:
  3111  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3112                           	opt stack 0
  3113  00009B                     ModemEvtParser@Match:
  3114                           	opt stack 0
  3115  00009B                     OsTmr_Wait@WaitTimer:
  3116                           	opt stack 0
  3117  00009B                     InitGprsNetwork@Apn:
  3118                           	opt stack 0
  3119  00009B                     HttpGetMethod@GetData:
  3120                           	opt stack 0
  3121                           
  3122                           ; 2 bytes @ 0x3B
  3123  00009B                     	ds	1
  3124  00009C                     SetUartBaudRate@DivisionFactor:
  3125                           	opt stack 0
  3126  00009C                     ModemEvtParser@CompareIdx:
  3127                           	opt stack 0
  3128  00009C                     Tmr_TmrBPrSet@Divisor:
  3129                           	opt stack 0
  3130                           
  3131                           ; 4 bytes @ 0x3C
  3132  00009C                     	ds	1
  3133  00009D                     ??_HttpGetMethod:
  3134  00009D                     InitGprsNetwork@ApnLen:
  3135                           	opt stack 0
  3136  00009D                     Uart_InitUartModule@UartConfig:
  3137                           	opt stack 0
  3138  00009D                     OsTmr_Wait@DelayMs:
  3139                           	opt stack 0
  3140                           
  3141                           ; 4 bytes @ 0x3D
  3142  00009D                     	ds	1
  3143  00009E                     ??_SetBaudRate:
  3144  00009E                     ??_InitGprsNetwork:
  3145  00009E                     MyApp_Task@off:
  3146                           	opt stack 0
  3147                           
  3148                           ; 2 bytes @ 0x3E
  3149  00009E                     	ds	1
  3150  00009F                     ??_Uart_InitUartModule:
  3151                           
  3152                           ; 1 bytes @ 0x3F
  3153  00009F                     	ds	1
  3154  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3155                           	opt stack 0
  3156  0000A0                     MyApp_Task@on:
  3157                           	opt stack 0
  3158                           
  3159                           ; 2 bytes @ 0x40
  3160  0000A0                     	ds	1
  3161  0000A1                     Uart_InitUartModule@Module:
  3162                           	opt stack 0
  3163  0000A1                     OsTmr_Wait@Ret:
  3164                           	opt stack 0
  3165                           
  3166                           ; 1 bytes @ 0x41
  3167  0000A1                     	ds	1
  3168  0000A2                     ??_Terminal:
  3169  0000A2                     I2c_InitI2cModule@I2cConfig:
  3170                           	opt stack 0
  3171  0000A2                     MyApp_Task@I2cTxBufferTest:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x42
  3175  0000A2                     	ds	1
  3176  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3177                           	opt stack 0
  3178                           
  3179                           ; 1 bytes @ 0x43
  3180  0000A3                     	ds	1
  3181  0000A4                     ??_I2c_InitI2cModule:
  3182  0000A4                     Terminal@i:
  3183                           	opt stack 0
  3184  0000A4                     InitSchedTimer@TmrBConfig:
  3185                           	opt stack 0
  3186                           
  3187                           ; 7 bytes @ 0x44
  3188  0000A4                     	ds	1
  3189  0000A5                     Terminal@ReceivedBytes:
  3190                           	opt stack 0
  3191                           
  3192                           ; 1 bytes @ 0x45
  3193  0000A5                     	ds	1
  3194  0000A6                     Terminal@Index:
  3195                           	opt stack 0
  3196                           
  3197                           ; 1 bytes @ 0x46
  3198  0000A6                     	ds	1
  3199  0000A7                     ??_InitializeTasks:
  3200  0000A7                     ??_ScheduleTasks:
  3201  0000A7                     
  3202                           ; 1 bytes @ 0x47
  3203  0000A7                     	ds	2
  3204  0000A9                     InitializeTasks@ActiveTaskIndex:
  3205                           	opt stack 0
  3206                           
  3207                           ; 1 bytes @ 0x49
  3208  0000A9                     	ds	2
  3209  0000AB                     ScheduleTasks@ActiveTaskIndex:
  3210                           	opt stack 0
  3211                           
  3212                           ; 1 bytes @ 0x4B
  3213  0000AB                     	ds	1
  3214  0000AC                     tblptru	equ	0xFF8
  3215                           tblptrh	equ	0xFF7
  3216                           tblptrl	equ	0xFF6
  3217                           tablat	equ	0xFF5
  3218                           postinc0	equ	0xFEE
  3219                           wreg	equ	0xFE8
  3220                           postdec1	equ	0xFE5
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           
  3224                           ; 1 bytes @ 0x4C
  3225                           
  3226                           	psect	cstackCOMRAM
  3227  000001                     __pcstackCOMRAM:
  3228                           	opt stack 0
  3229  000001                     i2GenerateEvt@Event:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x0
  3233  000001                     	ds	2
  3234  000003                     i2GenerateEvt@EventStatus:
  3235                           	opt stack 0
  3236                           
  3237                           ; 1 bytes @ 0x2
  3238  000003                     	ds	1
  3239  000004                     Uart_MdmGsmGprsReadService@UartData:
  3240                           	opt stack 0
  3241                           
  3242                           ; 1 bytes @ 0x3
  3243  000004                     	ds	1
  3244  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3245                           	opt stack 0
  3246                           
  3247                           ; 2 bytes @ 0x4
  3248  000005                     	ds	2
  3249  000007                     ??_HighPriorityIsr:
  3250                           
  3251                           ; 1 bytes @ 0x6
  3252  000007                     	ds	18
  3253  000019                     ?i1___wmul:
  3254                           	opt stack 0
  3255  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3256                           	opt stack 0
  3257  000019                     i1GenerateEvt@Event:
  3258                           	opt stack 0
  3259  000019                     i1___wmul@multiplier:
  3260                           	opt stack 0
  3261                           
  3262                           ; 2 bytes @ 0x18
  3263  000019                     	ds	2
  3264  00001B                     i1GenerateEvt@EventStatus:
  3265                           	opt stack 0
  3266  00001B                     i1___wmul@multiplicand:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0x1A
  3270  00001B                     	ds	1
  3271  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3272                           	opt stack 0
  3273                           
  3274                           ; 2 bytes @ 0x1B
  3275  00001C                     	ds	1
  3276  00001D                     i1___wmul@product:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x1C
  3280  00001D                     	ds	1
  3281  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3282                           	opt stack 0
  3283                           
  3284                           ; 1 bytes @ 0x1D
  3285  00001E                     	ds	1
  3286  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3287                           	opt stack 0
  3288                           
  3289                           ; 1 bytes @ 0x1E
  3290  00001F                     	ds	1
  3291  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3292                           	opt stack 0
  3293                           
  3294                           ; 1 bytes @ 0x1F
  3295  000020                     	ds	1
  3296  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3297                           	opt stack 0
  3298                           
  3299                           ; 2 bytes @ 0x20
  3300  000021                     	ds	2
  3301  000023                     tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           postdec1	equ	0xFE5
  3308                           fsr1h	equ	0xFE2
  3309                           fsr1l	equ	0xFE1
  3310                           
  3311                           ; 1 bytes @ 0x22
  3312 ;;
  3313 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3314 ;;
  3315 ;; *************** function _main *****************
  3316 ;; Defined at:
  3317 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  2   14[None  ] short 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels required when called:   23
  3337 ;; This function calls:
  3338 ;;		_Sch_MainScheduler
  3339 ;;		_SystemInit
  3340 ;; This function is called by:
  3341 ;;		Startup code after reset
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text0
  3346  005E4C                     __ptext0:
  3347                           	opt stack 0
  3348  005E4C                     _main:
  3349                           	opt stack 8
  3350                           
  3351                           ;main.c: 61: SystemInit();
  3352                           
  3353                           ;incstack = 0
  3354  005E4C  EC99  F02C         	call	_SystemInit	;wreg free
  3355                           
  3356                           ;main.c: 64: Sch_MainScheduler();
  3357  005E50  EC47  F02E         	call	_Sch_MainScheduler	;wreg free
  3358                           
  3359                           ;main.c: 67: return 0;
  3360                           ;	Return value of _main is never used
  3361  005E54  EF66  F000         	goto	start
  3362  005E58                     __end_of_main:
  3363                           	opt stack 0
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           postdec1	equ	0xFE5
  3371                           fsr1h	equ	0xFE2
  3372                           fsr1l	equ	0xFE1
  3373                           
  3374 ;; *************** function _SystemInit *****************
  3375 ;; Defined at:
  3376 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:   15
  3397 ;; This function calls:
  3398 ;;		_InitSchedTimer
  3399 ;;		_Irq_InitIntController
  3400 ;;		_Mcu_ConfigExtInt
  3401 ;;		_Mcu_StartSystemPll
  3402 ;;		_Pm_DsReleasePinControl
  3403 ;;		_Tmr_RegisterTmr2IsrCallback
  3404 ;; This function is called by:
  3405 ;;		_main
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text1
  3410  005932                     __ptext1:
  3411                           	opt stack 0
  3412  005932                     _SystemInit:
  3413                           	opt stack 15
  3414                           
  3415                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3416                           
  3417                           ;incstack = 0
  3418  005932  EC49  F02F         	call	_Pm_DsReleasePinControl	;wreg free
  3419                           
  3420                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3421  005936  EC38  F02E         	call	_Mcu_StartSystemPll	;wreg free
  3422                           
  3423                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3424  00593A  0E01               	movlw	1
  3425  00593C  0100               	movlb	0	; () banked
  3426  00593E  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3427  005940  0E01               	movlw	1
  3428  005942  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3429  005944  0E01               	movlw	1
  3430  005946  EC3D  F02D         	call	_Irq_InitIntController
  3431                           
  3432                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3433  00594A  0E30               	movlw	low _Sch_SchmIntService
  3434  00594C  0100               	movlb	0	; () banked
  3435  00594E  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3436  005950  0E5E               	movlw	high _Sch_SchmIntService
  3437  005952  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3438  005954  EC2C  F02F         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3439                           
  3440                           ;sys_init.c: 132: InitSchedTimer();
  3441  005958  ECF9  F02C         	call	_InitSchedTimer	;wreg free
  3442                           
  3443                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3444  00595C  EC72  F02E         	call	_Mcu_ConfigExtInt	;wreg free
  3445  005960  0012               	return		;funcret
  3446  005962                     __end_of_SystemInit:
  3447                           	opt stack 0
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           postinc0	equ	0xFEE
  3453                           wreg	equ	0xFE8
  3454                           postdec1	equ	0xFE5
  3455                           fsr1h	equ	0xFE2
  3456                           fsr1l	equ	0xFE1
  3457                           
  3458 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3459 ;; Defined at:
  3460 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3463 ;;		 -> Sch_SchmIntService(1), 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:   11
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_SystemInit
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text2
  3490  005E58                     __ptext2:
  3491                           	opt stack 0
  3492  005E58                     _Tmr_RegisterTmr2IsrCallback:
  3493                           	opt stack 18
  3494                           
  3495                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3496                           
  3497                           ;incstack = 0
  3498  005E58  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3499  005E5C  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3500  005E60  0012               	return		;funcret
  3501  005E62                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           postinc0	equ	0xFEE
  3508                           wreg	equ	0xFE8
  3509                           postdec1	equ	0xFE5
  3510                           fsr1h	equ	0xFE2
  3511                           fsr1l	equ	0xFE1
  3512                           
  3513 ;; *************** function _Pm_DsReleasePinControl *****************
  3514 ;; Defined at:
  3515 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		None
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:   11
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_SystemInit
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text3
  3544  005E92                     __ptext3:
  3545                           	opt stack 0
  3546  005E92                     _Pm_DsReleasePinControl:
  3547                           	opt stack 18
  3548                           
  3549                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3550                           
  3551                           ;incstack = 0
  3552  005E92  010F               	movlb	15	; () banked
  3553  005E94  914C               	bcf	76,0,b	;volatile
  3554                           
  3555                           ; BSR set to: 15
  3556  005E96  0012               	return		;funcret
  3557  005E98                     __end_of_Pm_DsReleasePinControl:
  3558                           	opt stack 0
  3559                           tblptru	equ	0xFF8
  3560                           tblptrh	equ	0xFF7
  3561                           tblptrl	equ	0xFF6
  3562                           tablat	equ	0xFF5
  3563                           postinc0	equ	0xFEE
  3564                           wreg	equ	0xFE8
  3565                           postdec1	equ	0xFE5
  3566                           fsr1h	equ	0xFE2
  3567                           fsr1l	equ	0xFE1
  3568                           
  3569 ;; *************** function _Mcu_StartSystemPll *****************
  3570 ;; Defined at:
  3571 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3589 ;;Total ram usage:        2 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:   11
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_SystemInit
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text4
  3600  005C70                     __ptext4:
  3601                           	opt stack 0
  3602  005C70                     _Mcu_StartSystemPll:
  3603                           	opt stack 18
  3604                           
  3605                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3606                           
  3607                           ; BSR set to: 15
  3608                           ;incstack = 0
  3609  005C70  0E03               	movlw	3
  3610  005C72  0100               	movlb	0	; () banked
  3611  005C74  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3612  005C76  0EE8               	movlw	232
  3613  005C78  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3617  005C7A  8C9B               	bsf	3995,6,c	;volatile
  3618  005C7C                     l10781:
  3619                           
  3620                           ; BSR set to: 0
  3621  005C7C  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3622  005C7E  A0D8               	btfss	status,0,c
  3623  005C80  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3624  005C82  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3625  005C84  E1FB               	bnz	l10781
  3626  005C86  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3627  005C88  B4D8               	btfsc	status,2,c
  3628  005C8A  0012               	return	
  3629  005C8C  D7F7               	goto	l237
  3630  005C8E                     __end_of_Mcu_StartSystemPll:
  3631                           	opt stack 0
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           fsr1h	equ	0xFE2
  3640                           fsr1l	equ	0xFE1
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function _Mcu_ConfigExtInt *****************
  3644 ;; Defined at:
  3645 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:   11
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_SystemInit
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text5
  3674  005CE4                     __ptext5:
  3675                           	opt stack 0
  3676  005CE4                     _Mcu_ConfigExtInt:
  3677                           	opt stack 18
  3678                           
  3679                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;incstack = 0
  3683  005CE4  8093               	bsf	3987,0,c	;volatile
  3684                           
  3685                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3686  005CE6  8695               	bsf	3989,3,c	;volatile
  3687                           
  3688                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3689  005CE8  010F               	movlb	15	; () banked
  3690  005CEA  8949               	bsf	73,4,b	;volatile
  3691                           
  3692                           ; BSR set to: 15
  3693                           ;mcu_drv.c: 108: RPINR1 = 20;
  3694  005CEC  0E14               	movlw	20
  3695  005CEE  010E               	movlb	14	; () banked
  3696  005CF0  6FE7               	movwf	231,b	;volatile
  3697                           
  3698                           ; BSR set to: 14
  3699                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3700  005CF2  88F2               	bsf	intcon,4,c	;volatile
  3701                           
  3702                           ; BSR set to: 14
  3703                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3704  005CF4  86F0               	bsf	intcon3,3,c	;volatile
  3705                           
  3706                           ; BSR set to: 14
  3707                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3708  005CF6  8CF0               	bsf	intcon3,6,c	;volatile
  3709                           
  3710                           ; BSR set to: 14
  3711                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3712  005CF8  9CF1               	bcf	intcon2,6,c	;volatile
  3713                           
  3714                           ; BSR set to: 14
  3715                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3716  005CFA  9AF1               	bcf	intcon2,5,c	;volatile
  3717                           
  3718                           ; BSR set to: 14
  3719  005CFC  0012               	return		;funcret
  3720  005CFE                     __end_of_Mcu_ConfigExtInt:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           intcon	equ	0xFF2
  3727                           intcon2	equ	0xFF1
  3728                           intcon3	equ	0xFF0
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           postdec1	equ	0xFE5
  3732                           fsr1h	equ	0xFE2
  3733                           fsr1l	equ	0xFE1
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _Irq_InitIntController *****************
  3737 ;; Defined at:
  3738 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  IntPriorityE    1    wreg     enum E7720
  3741 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3742 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;Total ram usage:        3 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:   11
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_SystemInit
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text6
  3769  005A7A                     __ptext6:
  3770                           	opt stack 0
  3771  005A7A                     _Irq_InitIntController:
  3772                           	opt stack 18
  3773                           
  3774                           ; BSR set to: 14
  3775                           ;incstack = 0
  3776                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3777  005A7A  0100               	movlb	0	; () banked
  3778  005A7C  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3779                           
  3780                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3781  005A7E  0100               	movlb	0	; () banked
  3782  005A80  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3783  005A82  D002               	bra	u9335
  3784  005A84  9ED0               	bcf	4048,7,c	;volatile
  3785  005A86  D001               	bra	u9336
  3786  005A88                     u9335:
  3787  005A88  8ED0               	bsf	4048,7,c	;volatile
  3788  005A8A                     u9336:
  3789                           
  3790                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3791  005A8A  0100               	movlb	0	; () banked
  3792  005A8C  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3793  005A8E  D002               	bra	u9345
  3794  005A90  9EF2               	bcf	intcon,7,c	;volatile
  3795  005A92  D001               	bra	u9346
  3796  005A94                     u9345:
  3797  005A94  8EF2               	bsf	intcon,7,c	;volatile
  3798  005A96                     u9346:
  3799                           
  3800                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3801  005A96  0100               	movlb	0	; () banked
  3802  005A98  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3803  005A9A  D002               	bra	u9355
  3804  005A9C  9CF2               	bcf	intcon,6,c	;volatile
  3805  005A9E  D001               	bra	u9356
  3806  005AA0                     u9355:
  3807  005AA0  8CF2               	bsf	intcon,6,c	;volatile
  3808  005AA2                     u9356:
  3809  005AA2  0012               	return		;funcret
  3810  005AA4                     __end_of_Irq_InitIntController:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           intcon	equ	0xFF2
  3817                           intcon2	equ	0xFF1
  3818                           intcon3	equ	0xFF0
  3819                           postinc0	equ	0xFEE
  3820                           wreg	equ	0xFE8
  3821                           postdec1	equ	0xFE5
  3822                           fsr1h	equ	0xFE2
  3823                           fsr1l	equ	0xFE1
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _InitSchedTimer *****************
  3827 ;; Defined at:
  3828 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;Total ram usage:        7 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:   14
  3849 ;; This function calls:
  3850 ;;		_Tmr_TmrBConfig
  3851 ;; This function is called by:
  3852 ;;		_SystemInit
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text7
  3857  0059F2                     __ptext7:
  3858                           	opt stack 0
  3859  0059F2                     _InitSchedTimer:
  3860                           	opt stack 15
  3861                           
  3862                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3863                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3864                           
  3865                           ;incstack = 0
  3866  0059F2  0E04               	movlw	4
  3867  0059F4  0100               	movlb	0	; () banked
  3868  0059F6  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3869                           
  3870                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3871  0059F8  0E0C               	movlw	12
  3872  0059FA  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3873                           
  3874                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3875  0059FC  0E00               	movlw	0
  3876  0059FE  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3877                           
  3878                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3879  005A00  0E01               	movlw	1
  3880  005A02  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3881                           
  3882                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3883  005A04  0E03               	movlw	3
  3884  005A06  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3885  005A08  0EE8               	movlw	232
  3886  005A0A  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3887                           
  3888                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3889  005A0C  0E01               	movlw	1
  3890  005A0E  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3894  005A10  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  3895  005A12  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3896  005A14  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3897  005A16  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3898  005A18  0E02               	movlw	2
  3899  005A1A  ECC3  F01C         	call	_Tmr_TmrBConfig
  3900  005A1E  0012               	return		;funcret
  3901  005A20                     __end_of_InitSchedTimer:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           intcon	equ	0xFF2
  3908                           intcon2	equ	0xFF1
  3909                           intcon3	equ	0xFF0
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           postdec1	equ	0xFE5
  3913                           fsr1h	equ	0xFE2
  3914                           fsr1l	equ	0xFE1
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _Tmr_TmrBConfig *****************
  3918 ;; Defined at:
  3919 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  TmrNumb         1    wreg     unsigned char 
  3922 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  3923 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;Total ram usage:        4 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:   13
  3942 ;; This function calls:
  3943 ;;		_TmrBInit
  3944 ;;		_Tmr_StartTmr
  3945 ;;		_Tmr_TmrBIrqSet
  3946 ;;		_Tmr_TmrBPrSet
  3947 ;; This function is called by:
  3948 ;;		_InitSchedTimer
  3949 ;;		_InitAuxTimer
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text8
  3954  003986                     __ptext8:
  3955                           	opt stack 0
  3956  003986                     _Tmr_TmrBConfig:
  3957                           	opt stack 15
  3958                           
  3959                           ;incstack = 0
  3960                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  3961  003986  0100               	movlb	0	; () banked
  3962  003988  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  3963                           
  3964                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  3965  00398A  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3966  00398E  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3967  003992  50DF               	movf	indf2,w,c
  3968  003994  0100               	movlb	0	; () banked
  3969  003996  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  3970  003998  EE20 F001          	lfsr	2,1
  3971  00399C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3972  00399E  26D9               	addwf	fsr2l,f,c
  3973  0039A0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3974  0039A2  22DA               	addwfc	fsr2h,f,c
  3975  0039A4  50DF               	movf	indf2,w,c
  3976  0039A6  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  3977  0039A8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3978  0039AA  EC51  F022         	call	_TmrBInit
  3979                           
  3980                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  3981  0039AE  0100               	movlb	0	; () banked
  3982  0039B0  EE20 F002          	lfsr	2,2
  3983  0039B4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3984  0039B6  26D9               	addwf	fsr2l,f,c
  3985  0039B8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3986  0039BA  22DA               	addwfc	fsr2h,f,c
  3987  0039BC  04DE               	decf	postinc2,w,c
  3988  0039BE  A4D8               	btfss	status,2,c
  3989  0039C0  D00E               	goto	l546
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;tmr_drv.c: 277: {
  3993                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3994  0039C2  EE20 F003          	lfsr	2,3
  3995  0039C6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3996  0039C8  26D9               	addwf	fsr2l,f,c
  3997  0039CA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3998  0039CC  22DA               	addwfc	fsr2h,f,c
  3999  0039CE  50DF               	movf	indf2,w,c
  4000  0039D0  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4001  0039D2  0E01               	movlw	1
  4002  0039D4  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4003  0039D6  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4004  0039D8  ECDF  F029         	call	_Tmr_TmrBIrqSet
  4005                           
  4006                           ;tmr_drv.c: 280: }
  4007  0039DC  D00E               	goto	l547
  4008  0039DE                     l546:
  4009                           
  4010                           ;tmr_drv.c: 281: else
  4011                           ;tmr_drv.c: 282: {
  4012                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4013  0039DE  0100               	movlb	0	; () banked
  4014  0039E0  EE20 F003          	lfsr	2,3
  4015  0039E4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4016  0039E6  26D9               	addwf	fsr2l,f,c
  4017  0039E8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4018  0039EA  22DA               	addwfc	fsr2h,f,c
  4019  0039EC  50DF               	movf	indf2,w,c
  4020  0039EE  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4021  0039F0  0E00               	movlw	0
  4022  0039F2  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4023  0039F4  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4024  0039F6  ECDF  F029         	call	_Tmr_TmrBIrqSet
  4025  0039FA                     l547:
  4026                           
  4027                           ;tmr_drv.c: 285: }
  4028                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4029  0039FA  0100               	movlb	0	; () banked
  4030  0039FC  EE20 F004          	lfsr	2,4
  4031  003A00  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4032  003A02  26D9               	addwf	fsr2l,f,c
  4033  003A04  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4034  003A06  22DA               	addwfc	fsr2h,f,c
  4035  003A08  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4036  003A0C  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4037  003A10  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4038  003A14  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4039  003A18  50DF               	movf	indf2,w,c
  4040  003A1A  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4041  003A1C  EE20 F001          	lfsr	2,1
  4042  003A20  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4043  003A22  26D9               	addwf	fsr2l,f,c
  4044  003A24  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4045  003A26  22DA               	addwfc	fsr2h,f,c
  4046  003A28  50DF               	movf	indf2,w,c
  4047  003A2A  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4048  003A2C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4049  003A2E  EC37  F017         	call	_Tmr_TmrBPrSet
  4050                           
  4051                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4052  003A32  0100               	movlb	0	; () banked
  4053  003A34  EE20 F006          	lfsr	2,6
  4054  003A38  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4055  003A3A  26D9               	addwf	fsr2l,f,c
  4056  003A3C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4057  003A3E  22DA               	addwfc	fsr2h,f,c
  4058  003A40  04DE               	decf	postinc2,w,c
  4059  003A42  A4D8               	btfss	status,2,c
  4060  003A44  0012               	return	
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;tmr_drv.c: 290: {
  4064                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4065  003A46  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4066  003A48  EC18  F02E         	call	_Tmr_StartTmr
  4067                           
  4068                           ;tmr_drv.c: 293: }
  4069  003A4C  0012               	return	
  4070  003A4E                     __end_of_Tmr_TmrBConfig:
  4071                           	opt stack 0
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           intcon	equ	0xFF2
  4077                           intcon2	equ	0xFF1
  4078                           intcon3	equ	0xFF0
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec1	equ	0xFE5
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           indf2	equ	0xFDF
  4085                           postinc2	equ	0xFDE
  4086                           postdec2	equ	0xFDD
  4087                           fsr2h	equ	0xFDA
  4088                           fsr2l	equ	0xFD9
  4089                           status	equ	0xFD8
  4090                           
  4091 ;; *************** function _Tmr_TmrBPrSet *****************
  4092 ;; Defined at:
  4093 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  TmrNumb         1    wreg     unsigned char 
  4096 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4097 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4098 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4101 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4102 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      enum E7736
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4112 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4113 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;Total ram usage:       10 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:   12
  4119 ;; This function calls:
  4120 ;;		___lldiv
  4121 ;;		___lmul
  4122 ;; This function is called by:
  4123 ;;		_Tmr_TmrBConfig
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text9
  4128  002E6E                     __ptext9:
  4129                           	opt stack 0
  4130  002E6E                     _Tmr_TmrBPrSet:
  4131                           	opt stack 15
  4132                           
  4133                           ;incstack = 0
  4134                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4135  002E6E  0100               	movlb	0	; () banked
  4136  002E70  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4137                           
  4138                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4139                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4140  002E72  0E00               	movlw	0
  4141  002E74  0100               	movlb	0	; () banked
  4142  002E76  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4143  002E78  0E00               	movlw	0
  4144  002E7A  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4145  002E7C  0E00               	movlw	0
  4146  002E7E  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4147  002E80  0E00               	movlw	0
  4148  002E82  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4152  002E84  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4153  002E86  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4154  002E88  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4155  002E8C  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4156  002E90  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4157  002E92  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4158  002E94  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4159  002E98  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4160  002E9C  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4161  002E9E  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4162  002EA0  ECEA  F027         	call	___lmul	;wreg free
  4163  002EA4  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4164  002EA8  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4165  002EAC  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4166  002EB0  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4167                           
  4168                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4169  002EB4  0E00               	movlw	0
  4170  002EB6  0100               	movlb	0	; () banked
  4171  002EB8  6F89               	movwf	___lldiv@dividend& (0+255),b
  4172  002EBA  0E1B               	movlw	27
  4173  002EBC  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4174  002EBE  0EB7               	movlw	183
  4175  002EC0  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4176  002EC2  0E00               	movlw	0
  4177  002EC4  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4178  002EC6  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4179  002ECA  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4180  002ECE  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4181  002ED2  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4182  002ED6  ECD5  F024         	call	___lldiv	;wreg free
  4183  002EDA  0100               	movlb	0	; () banked
  4184  002EDC  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4185  002EDE  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4186  002EE0  E13A               	bnz	l12953
  4187  002EE2  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4188  002EE4  A0D8               	btfss	status,0,c
  4189  002EE6  D02D               	goto	l529
  4190  002EE8  D036               	goto	l528
  4191  002EEA                     
  4192                           ; BSR set to: 0
  4193                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4194                           
  4195                           ; BSR set to: 0
  4196  002EEA  0E00               	movlw	0
  4197  002EEC  6F89               	movwf	___lldiv@dividend& (0+255),b
  4198  002EEE  0E1B               	movlw	27
  4199  002EF0  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4200  002EF2  0EB7               	movlw	183
  4201  002EF4  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4202  002EF6  0E00               	movlw	0
  4203  002EF8  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4204  002EFA  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4205  002EFE  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4206  002F02  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4207  002F06  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4208  002F0A  ECD5  F024         	call	___lldiv	;wreg free
  4209  002F0E  0100               	movlb	0	; () banked
  4210  002F10  5189               	movf	?___lldiv& (0+255),w,b
  4211  002F12  6ECB               	movwf	4043,c	;volatile
  4212                           
  4213                           ;tmr_drv.c: 210: break;
  4214  002F14  D01D               	goto	l531
  4215  002F16                     
  4216                           ; BSR set to: 0
  4217                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4218                           
  4219                           ; BSR set to: 0
  4220  002F16  0E00               	movlw	0
  4221  002F18  6F89               	movwf	___lldiv@dividend& (0+255),b
  4222  002F1A  0E1B               	movlw	27
  4223  002F1C  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4224  002F1E  0EB7               	movlw	183
  4225  002F20  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4226  002F22  0E00               	movlw	0
  4227  002F24  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4228  002F26  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4229  002F2A  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4230  002F2E  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4231  002F32  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4232  002F36  ECD5  F024         	call	___lldiv	;wreg free
  4233  002F3A  0100               	movlb	0	; () banked
  4234  002F3C  5189               	movf	?___lldiv& (0+255),w,b
  4235  002F3E  6E77               	movwf	3959,c	;volatile
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;tmr_drv.c: 219: }
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;tmr_drv.c: 218: break;
  4242                           
  4243                           ;tmr_drv.c: 217: default:
  4244                           
  4245                           ;tmr_drv.c: 215: break;
  4246  002F40  D007               	goto	l531
  4247  002F42                     l529:
  4248                           
  4249                           ; BSR set to: 0
  4250                           
  4251                           ; BSR set to: 0
  4252  002F42  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4253                           
  4254                           ; Switch size 1, requested type "space"
  4255                           ; Number of cases is 2, Range of values is 2 to 4
  4256                           ; switch strategies available:
  4257                           ; Name         Instructions Cycles
  4258                           ; simple_byte            7     4 (average)
  4259                           ;	Chosen strategy is simple_byte
  4260  002F44  0A02               	xorlw	2	; case 2
  4261  002F46  B4D8               	btfsc	status,2,c
  4262  002F48  D7D0               	goto	l530
  4263  002F4A  0A06               	xorlw	6	; case 4
  4264  002F4C  B4D8               	btfsc	status,2,c
  4265  002F4E  D7E3               	goto	l532
  4266  002F50                     l531:
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4270                           
  4271                           ; BSR set to: 0
  4272  002F50  0E00               	movlw	0
  4273  002F52  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4274                           
  4275                           ;tmr_drv.c: 223: }
  4276  002F54  0012               	return	
  4277  002F56                     l528:
  4278  002F56                     l12953:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;tmr_drv.c: 224: else
  4282                           ;tmr_drv.c: 225: {
  4283                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4284  002F56  0E01               	movlw	1
  4285  002F58  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4286                           
  4287                           ; BSR set to: 0
  4288  002F5A  0012               	return	
  4289  002F5C                     __end_of_Tmr_TmrBPrSet:
  4290                           	opt stack 0
  4291                           tblptru	equ	0xFF8
  4292                           tblptrh	equ	0xFF7
  4293                           tblptrl	equ	0xFF6
  4294                           tablat	equ	0xFF5
  4295                           prodh	equ	0xFF4
  4296                           prodl	equ	0xFF3
  4297                           intcon	equ	0xFF2
  4298                           intcon2	equ	0xFF1
  4299                           intcon3	equ	0xFF0
  4300                           postinc0	equ	0xFEE
  4301                           wreg	equ	0xFE8
  4302                           postdec1	equ	0xFE5
  4303                           fsr1h	equ	0xFE2
  4304                           fsr1l	equ	0xFE1
  4305                           indf2	equ	0xFDF
  4306                           postinc2	equ	0xFDE
  4307                           postdec2	equ	0xFDD
  4308                           fsr2h	equ	0xFDA
  4309                           fsr2l	equ	0xFD9
  4310                           status	equ	0xFD8
  4311                           
  4312 ;; *************** function _Tmr_TmrBIrqSet *****************
  4313 ;; Defined at:
  4314 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  TmrNumb         1    wreg     unsigned char 
  4317 ;;  Priority        1   29[BANK0 ] enum E7716
  4318 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4333 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4334 ;;Total ram usage:        3 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:   11
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_Tmr_TmrBConfig
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text10
  4345  0053BE                     __ptext10:
  4346                           	opt stack 0
  4347  0053BE                     _Tmr_TmrBIrqSet:
  4348                           	opt stack 16
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;incstack = 0
  4352                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4353  0053BE  0100               	movlb	0	; () banked
  4354  0053C0  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4355                           
  4356                           ;tmr_drv.c: 156: switch (TmrNumb)
  4357  0053C2  D01A               	goto	l520
  4358  0053C4                     l521:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4362  0053C4  929E               	bcf	3998,1,c	;volatile
  4363                           
  4364                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4365  0053C6  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4366  0053C8  D002               	bra	u7995
  4367  0053CA  929F               	bcf	3999,1,c	;volatile
  4368  0053CC  D001               	bra	u7996
  4369  0053CE                     u7995:
  4370  0053CE  829F               	bsf	3999,1,c	;volatile
  4371  0053D0                     u7996:
  4372                           
  4373                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4374  0053D0  0100               	movlb	0	; () banked
  4375  0053D2  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4376  0053D4  D002               	bra	u8005
  4377  0053D6  929D               	bcf	3997,1,c	;volatile
  4378  0053D8  D001               	bra	u8006
  4379  0053DA                     u8005:
  4380  0053DA  829D               	bsf	3997,1,c	;volatile
  4381  0053DC                     u8006:
  4382                           
  4383                           ;tmr_drv.c: 165: break;
  4384  0053DC  0012               	return	
  4385  0053DE                     l523:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4389  0053DE  96A4               	bcf	4004,3,c	;volatile
  4390                           
  4391                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4392  0053E0  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4393  0053E2  D002               	bra	u8015
  4394  0053E4  96A5               	bcf	4005,3,c	;volatile
  4395  0053E6  D001               	bra	u8016
  4396  0053E8                     u8015:
  4397  0053E8  86A5               	bsf	4005,3,c	;volatile
  4398  0053EA                     u8016:
  4399                           
  4400                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4401  0053EA  0100               	movlb	0	; () banked
  4402  0053EC  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4403  0053EE  D002               	bra	u8025
  4404  0053F0  96A3               	bcf	4003,3,c	;volatile
  4405  0053F2  D001               	bra	u8026
  4406  0053F4                     u8025:
  4407  0053F4  86A3               	bsf	4003,3,c	;volatile
  4408  0053F6                     u8026:
  4409                           
  4410                           ;tmr_drv.c: 178: }
  4411                           
  4412                           ;tmr_drv.c: 177: break;
  4413                           
  4414                           ;tmr_drv.c: 176: default:
  4415                           
  4416                           ;tmr_drv.c: 174: break;
  4417  0053F6  0012               	return	
  4418  0053F8                     l520:
  4419  0053F8  0100               	movlb	0	; () banked
  4420  0053FA  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4421                           
  4422                           ; Switch size 1, requested type "space"
  4423                           ; Number of cases is 2, Range of values is 2 to 4
  4424                           ; switch strategies available:
  4425                           ; Name         Instructions Cycles
  4426                           ; simple_byte            7     4 (average)
  4427                           ;	Chosen strategy is simple_byte
  4428  0053FC  0A02               	xorlw	2	; case 2
  4429  0053FE  B4D8               	btfsc	status,2,c
  4430  005400  D7E1               	goto	l521
  4431  005402  0A06               	xorlw	6	; case 4
  4432  005404  A4D8               	btfss	status,2,c
  4433  005406  0012               	return	
  4434  005408  D7EA               	goto	l523
  4435  00540A                     __end_of_Tmr_TmrBIrqSet:
  4436                           	opt stack 0
  4437                           tblptru	equ	0xFF8
  4438                           tblptrh	equ	0xFF7
  4439                           tblptrl	equ	0xFF6
  4440                           tablat	equ	0xFF5
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           intcon2	equ	0xFF1
  4445                           intcon3	equ	0xFF0
  4446                           postinc0	equ	0xFEE
  4447                           wreg	equ	0xFE8
  4448                           postdec1	equ	0xFE5
  4449                           fsr1h	equ	0xFE2
  4450                           fsr1l	equ	0xFE1
  4451                           indf2	equ	0xFDF
  4452                           postinc2	equ	0xFDE
  4453                           postdec2	equ	0xFDD
  4454                           fsr2h	equ	0xFDA
  4455                           fsr2l	equ	0xFD9
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function _Tmr_StartTmr *****************
  4459 ;; Defined at:
  4460 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  TmrNumb         1    wreg     unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;Total ram usage:        1 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:   11
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_Tmr_TmrBConfig
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text11
  4489  005C30                     __ptext11:
  4490                           	opt stack 0
  4491  005C30                     _Tmr_StartTmr:
  4492                           	opt stack 16
  4493                           
  4494                           ;incstack = 0
  4495                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4496  005C30  0100               	movlb	0	; () banked
  4497  005C32  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4498                           
  4499                           ;tmr_drv.c: 245: switch (TmrNumb)
  4500  005C34  D004               	goto	l538
  4501  005C36                     l539:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4505  005C36  84CA               	bsf	4042,2,c	;volatile
  4506                           
  4507                           ;tmr_drv.c: 250: break;
  4508  005C38  0012               	return	
  4509  005C3A                     l541:
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4513  005C3A  8476               	bsf	3958,2,c	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;tmr_drv.c: 259: }
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;tmr_drv.c: 258: break;
  4520                           
  4521                           ;tmr_drv.c: 257: default:
  4522                           
  4523                           ;tmr_drv.c: 255: break;
  4524  005C3C  0012               	return	
  4525  005C3E                     l538:
  4526                           
  4527                           ; BSR set to: 0
  4528  005C3E  0100               	movlb	0	; () banked
  4529  005C40  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4530                           
  4531                           ; Switch size 1, requested type "space"
  4532                           ; Number of cases is 2, Range of values is 2 to 4
  4533                           ; switch strategies available:
  4534                           ; Name         Instructions Cycles
  4535                           ; simple_byte            7     4 (average)
  4536                           ;	Chosen strategy is simple_byte
  4537  005C42  0A02               	xorlw	2	; case 2
  4538  005C44  B4D8               	btfsc	status,2,c
  4539  005C46  D7F7               	goto	l539
  4540  005C48  0A06               	xorlw	6	; case 4
  4541  005C4A  A4D8               	btfss	status,2,c
  4542  005C4C  0012               	return	
  4543  005C4E  D7F5               	goto	l541
  4544  005C50                     __end_of_Tmr_StartTmr:
  4545                           	opt stack 0
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           intcon2	equ	0xFF1
  4554                           intcon3	equ	0xFF0
  4555                           postinc0	equ	0xFEE
  4556                           wreg	equ	0xFE8
  4557                           postdec1	equ	0xFE5
  4558                           fsr1h	equ	0xFE2
  4559                           fsr1l	equ	0xFE1
  4560                           indf2	equ	0xFDF
  4561                           postinc2	equ	0xFDE
  4562                           postdec2	equ	0xFDD
  4563                           fsr2h	equ	0xFDA
  4564                           fsr2l	equ	0xFD9
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function _TmrBInit *****************
  4568 ;; Defined at:
  4569 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  TmrNumb         1    wreg     unsigned char 
  4572 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4573 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4588 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4589 ;;Total ram usage:        4 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:   11
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_Tmr_TmrBConfig
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text12
  4600  0044A2                     __ptext12:
  4601                           	opt stack 0
  4602  0044A2                     _TmrBInit:
  4603                           	opt stack 16
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;incstack = 0
  4607                           ;TmrBInit@TmrNumb stored from wreg
  4608  0044A2  0100               	movlb	0	; () banked
  4609  0044A4  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4610                           
  4611                           ;tmr_drv.c: 75: switch (TmrNumb)
  4612  0044A6  D03F               	goto	l500
  4613  0044A8                     l503:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4617  0044A8  90CA               	bcf	4042,0,c	;volatile
  4618  0044AA  D001               	goto	L1
  4619  0044AC                     l505:
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4623  0044AC  80CA               	bsf	4042,0,c	;volatile
  4624  0044AE                     L1:
  4625                           
  4626                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4627  0044AE  92CA               	bcf	4042,1,c	;volatile
  4628                           
  4629                           ;tmr_drv.c: 91: break;
  4630  0044B0  D00E               	goto	l504
  4631  0044B2                     l506:
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4635  0044B2  80CA               	bsf	4042,0,c	;volatile
  4636                           
  4637                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4638  0044B4  82CA               	bsf	4042,1,c	;volatile
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;tmr_drv.c: 100: }
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;tmr_drv.c: 99: break;
  4645                           
  4646                           ;tmr_drv.c: 98: default:
  4647                           
  4648                           ;tmr_drv.c: 96: break;
  4649  0044B6  D00B               	goto	l504
  4650  0044B8                     
  4651                           ; BSR set to: 0
  4652  0044B8  0100               	movlb	0	; () banked
  4653  0044BA  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4654                           
  4655                           ; Switch size 1, requested type "space"
  4656                           ; Number of cases is 3, Range of values is 1 to 16
  4657                           ; switch strategies available:
  4658                           ; Name         Instructions Cycles
  4659                           ; simple_byte           10     6 (average)
  4660                           ;	Chosen strategy is simple_byte
  4661  0044BC  0A01               	xorlw	1	; case 1
  4662  0044BE  B4D8               	btfsc	status,2,c
  4663  0044C0  D7F3               	goto	l503
  4664  0044C2  0A05               	xorlw	5	; case 4
  4665  0044C4  B4D8               	btfsc	status,2,c
  4666  0044C6  D7F2               	goto	l505
  4667  0044C8  0A14               	xorlw	20	; case 16
  4668  0044CA  B4D8               	btfsc	status,2,c
  4669  0044CC  D7F2               	goto	l506
  4670  0044CE                     l504:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4674                           
  4675                           ; BSR set to: 0
  4676  0044CE  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4677  0044D2  0EFF               	movlw	255
  4678  0044D4  277F               	addwf	??_TmrBInit& (0+255),f,b
  4679  0044D6  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4680  0044D8  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4681  0044DA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4682  0044DC  50CA               	movf	4042,w,c	;volatile
  4683  0044DE  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4684  0044E0  0B87               	andlw	-121
  4685  0044E2  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4686  0044E4  6ECA               	movwf	4042,c	;volatile
  4687                           
  4688                           ;tmr_drv.c: 104: break;
  4689  0044E6  0012               	return	
  4690  0044E8                     l511:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4694  0044E8  9076               	bcf	3958,0,c	;volatile
  4695  0044EA  D001               	goto	L2
  4696  0044EC                     l513:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4700  0044EC  8076               	bsf	3958,0,c	;volatile
  4701  0044EE                     L2:
  4702                           
  4703                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4704  0044EE  9276               	bcf	3958,1,c	;volatile
  4705                           
  4706                           ;tmr_drv.c: 120: break;
  4707  0044F0  D00D               	goto	l512
  4708  0044F2                     l514:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4712  0044F2  8076               	bsf	3958,0,c	;volatile
  4713                           
  4714                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4715  0044F4  8276               	bsf	3958,1,c	;volatile
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;tmr_drv.c: 129: }
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;tmr_drv.c: 128: break;
  4722                           
  4723                           ;tmr_drv.c: 127: default:
  4724                           
  4725                           ;tmr_drv.c: 125: break;
  4726  0044F6  D00A               	goto	l512
  4727  0044F8                     
  4728                           ; BSR set to: 0
  4729                           
  4730                           ; BSR set to: 0
  4731  0044F8  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4732                           
  4733                           ; Switch size 1, requested type "space"
  4734                           ; Number of cases is 3, Range of values is 1 to 16
  4735                           ; switch strategies available:
  4736                           ; Name         Instructions Cycles
  4737                           ; simple_byte           10     6 (average)
  4738                           ;	Chosen strategy is simple_byte
  4739  0044FA  0A01               	xorlw	1	; case 1
  4740  0044FC  B4D8               	btfsc	status,2,c
  4741  0044FE  D7F4               	goto	l511
  4742  004500  0A05               	xorlw	5	; case 4
  4743  004502  B4D8               	btfsc	status,2,c
  4744  004504  D7F3               	goto	l513
  4745  004506  0A14               	xorlw	20	; case 16
  4746  004508  B4D8               	btfsc	status,2,c
  4747  00450A  D7F3               	goto	l514
  4748  00450C                     l512:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4752                           
  4753                           ; BSR set to: 0
  4754  00450C  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4755  004510  0EFF               	movlw	255
  4756  004512  277F               	addwf	??_TmrBInit& (0+255),f,b
  4757  004514  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4758  004516  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4759  004518  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4760  00451A  5076               	movf	3958,w,c	;volatile
  4761  00451C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4762  00451E  0B87               	andlw	-121
  4763  004520  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4764  004522  6E76               	movwf	3958,c	;volatile
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;tmr_drv.c: 137: }
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;tmr_drv.c: 136: break;
  4771                           
  4772                           ;tmr_drv.c: 135: default:
  4773                           
  4774                           ;tmr_drv.c: 133: break;
  4775  004524  0012               	return	
  4776  004526                     l500:
  4777                           
  4778                           ; BSR set to: 0
  4779  004526  0100               	movlb	0	; () banked
  4780  004528  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4781                           
  4782                           ; Switch size 1, requested type "space"
  4783                           ; Number of cases is 2, Range of values is 2 to 4
  4784                           ; switch strategies available:
  4785                           ; Name         Instructions Cycles
  4786                           ; simple_byte            7     4 (average)
  4787                           ;	Chosen strategy is simple_byte
  4788  00452A  0A02               	xorlw	2	; case 2
  4789  00452C  B4D8               	btfsc	status,2,c
  4790  00452E  D7C4               	goto	l502
  4791  004530  0A06               	xorlw	6	; case 4
  4792  004532  A4D8               	btfss	status,2,c
  4793  004534  0012               	return	
  4794  004536  D7E0               	goto	l510
  4795  004538                     __end_of_TmrBInit:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           intcon2	equ	0xFF1
  4805                           intcon3	equ	0xFF0
  4806                           postinc0	equ	0xFEE
  4807                           wreg	equ	0xFE8
  4808                           postdec1	equ	0xFE5
  4809                           fsr1h	equ	0xFE2
  4810                           fsr1l	equ	0xFE1
  4811                           indf2	equ	0xFDF
  4812                           postinc2	equ	0xFDE
  4813                           postdec2	equ	0xFDD
  4814                           fsr2h	equ	0xFDA
  4815                           fsr2l	equ	0xFD9
  4816                           status	equ	0xFD8
  4817                           
  4818 ;; *************** function _Sch_MainScheduler *****************
  4819 ;; Defined at:
  4820 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;Total ram usage:        0 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:   22
  4841 ;; This function calls:
  4842 ;;		_InitializeTasks
  4843 ;;		_ScheduleTasks
  4844 ;; This function is called by:
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text13
  4850  005C8E                     __ptext13:
  4851                           	opt stack 0
  4852  005C8E                     _Sch_MainScheduler:
  4853                           	opt stack 8
  4854                           
  4855                           ;os_sched.c: 178: InitializeTasks();
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;incstack = 0
  4859  005C8E  ECCA  F025         	call	_InitializeTasks	;wreg free
  4860                           
  4861                           ;os_sched.c: 180: SystemState = RunningState;
  4862  005C92  0E01               	movlw	1
  4863  005C94  0100               	movlb	0	; () banked
  4864  005C96  6FD2               	movwf	_SystemState& (0+255),b
  4865  005C98                     
  4866                           ;os_sched.c: 188: {
  4867                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4868                           
  4869                           ; BSR set to: 0
  4870  005C98  0102               	movlb	2	; () banked
  4871  005C9A  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4872  005C9C  A4D8               	btfss	status,2,c
  4873  005C9E  D7FC               	goto	l790
  4874                           
  4875                           ; BSR set to: 2
  4876                           ;os_sched.c: 191: {
  4877                           ;os_sched.c: 196: ScheduleTasks();
  4878  005CA0  EC0A  F015         	call	_ScheduleTasks	;wreg free
  4879                           
  4880                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4881  005CA4  0E01               	movlw	1
  4882  005CA6  0102               	movlb	2	; () banked
  4883  005CA8  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4884                           
  4885                           ; BSR set to: 2
  4886                           
  4887                           ; BSR set to: 2
  4888  005CAA  D7F6               	goto	l790
  4889  005CAC                     __end_of_Sch_MainScheduler:
  4890                           	opt stack 0
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           prodh	equ	0xFF4
  4896                           prodl	equ	0xFF3
  4897                           intcon	equ	0xFF2
  4898                           intcon2	equ	0xFF1
  4899                           intcon3	equ	0xFF0
  4900                           postinc0	equ	0xFEE
  4901                           wreg	equ	0xFE8
  4902                           postdec1	equ	0xFE5
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           indf2	equ	0xFDF
  4906                           postinc2	equ	0xFDE
  4907                           postdec2	equ	0xFDD
  4908                           fsr2h	equ	0xFDA
  4909                           fsr2l	equ	0xFD9
  4910                           status	equ	0xFD8
  4911                           
  4912 ;; *************** function _ScheduleTasks *****************
  4913 ;; Defined at:
  4914 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  ActiveTaskIn    1   75[BANK0 ] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4931 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4932 ;;Total ram usage:        5 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:   21
  4935 ;; This function calls:
  4936 ;;		_I2cSlv_MainTask
  4937 ;;		_Led_MainTask
  4938 ;;		_MdmHttp_MainTask
  4939 ;;		_Mdm_DrvMainFn
  4940 ;;		_Mdm_MainTask
  4941 ;;		_MyApp_Task
  4942 ;;		_Rtcm_MainTask
  4943 ;;		_Term_MainTask
  4944 ;;		_UsbDevice_MainTask
  4945 ;;		_Wdg_MainTask
  4946 ;; This function is called by:
  4947 ;;		_Sch_MainScheduler
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text14
  4952  002A14                     __ptext14:
  4953                           	opt stack 0
  4954  002A14                     _ScheduleTasks:
  4955                           	opt stack 8
  4956                           
  4957                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  4958                           
  4959                           ; BSR set to: 2
  4960                           ;incstack = 0
  4961  002A14  0E00               	movlw	0
  4962  002A16  0100               	movlb	0	; () banked
  4963  002A18  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4964                           
  4965                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  4966  002A1A  0E00               	movlw	0
  4967  002A1C  6FAB               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4968  002A1E                     l13923:
  4969                           
  4970                           ; BSR set to: 0
  4971  002A1E  0E5D               	movlw	low _TaskNumber
  4972  002A20  6EF6               	movwf	tblptrl,c
  4973  002A22                     	if	1	;There is more than 1 active tblptr byte
  4974  002A22  0EFC               	movlw	high _TaskNumber
  4975  002A24  6EF7               	movwf	tblptrh,c
  4976  002A26                     	endif
  4977  002A26                     	if	0	;There are less than 3 active tblptr bytes
  4978  002A26                     	endif
  4979  002A26  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4980  002A28  6FA7               	movwf	??_ScheduleTasks& (0+255),b
  4981  002A2A  6BA8               	clrf	(??_ScheduleTasks+1)& (0+255),b
  4982  002A2C  0009               	tblrd		*+
  4983  002A2E  50F5               	movf	tablat,w,c
  4984  002A30  5DA7               	subwf	??_ScheduleTasks& (0+255),w,b
  4985  002A32  0009               	tblrd		*+
  4986  002A34  50F5               	movf	tablat,w,c
  4987  002A36  59A8               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  4988  002A38  B0D8               	btfsc	status,0,c
  4989  002A3A  0012               	return	
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;os_sched.c: 106: {
  4993                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4994                           
  4995                           ; BSR set to: 0
  4996                           
  4997                           ; BSR set to: 0
  4998  002A3C  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4999  002A3E  0D08               	mullw	8
  5000  002A40  0E03               	movlw	3
  5001  002A42  26F3               	addwf	prodl,f,c
  5002  002A44  0E00               	movlw	0
  5003  002A46  22F4               	addwfc	prodh,f,c
  5004  002A48  0EAF               	movlw	low _TaskTable
  5005  002A4A  24F3               	addwf	prodl,w,c
  5006  002A4C  6ED9               	movwf	fsr2l,c
  5007  002A4E  0E04               	movlw	high _TaskTable
  5008  002A50  20F4               	addwfc	prodh,w,c
  5009  002A52  6EDA               	movwf	fsr2h,c
  5010  002A54  2ADE               	incf	postinc2,f,c
  5011  002A56  0E00               	movlw	0
  5012  002A58  22DD               	addwfc	postdec2,f,c
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5016  002A5A  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5017  002A5C  0D08               	mullw	8
  5018  002A5E  0E05               	movlw	5
  5019  002A60  26F3               	addwf	prodl,f,c
  5020  002A62  0E00               	movlw	0
  5021  002A64  22F4               	addwfc	prodh,f,c
  5022  002A66  0EAF               	movlw	low _TaskTable
  5023  002A68  24F3               	addwf	prodl,w,c
  5024  002A6A  6ED9               	movwf	fsr2l,c
  5025  002A6C  0E04               	movlw	high _TaskTable
  5026  002A6E  20F4               	addwfc	prodh,w,c
  5027  002A70  6EDA               	movwf	fsr2h,c
  5028  002A72  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5029  002A74  0D08               	mullw	8
  5030  002A76  0E03               	movlw	3
  5031  002A78  26F3               	addwf	prodl,f,c
  5032  002A7A  0E00               	movlw	0
  5033  002A7C  22F4               	addwfc	prodh,f,c
  5034  002A7E  0EAF               	movlw	low _TaskTable
  5035  002A80  24F3               	addwf	prodl,w,c
  5036  002A82  6EE1               	movwf	fsr1l,c
  5037  002A84  0E04               	movlw	high _TaskTable
  5038  002A86  20F4               	addwfc	prodh,w,c
  5039  002A88  6EE2               	movwf	fsr1h,c
  5040  002A8A  50DE               	movf	postinc2,w,c
  5041  002A8C  5CE6               	subwf	postinc1,w,c
  5042  002A8E  50DE               	movf	postinc2,w,c
  5043  002A90  58E6               	subwfb	postinc1,w,c
  5044  002A92  A0D8               	btfss	status,0,c
  5045  002A94  D04E               	goto	l775
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;os_sched.c: 111: {
  5049                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5050  002A96  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5051  002A98  0D08               	mullw	8
  5052  002A9A  0E03               	movlw	3
  5053  002A9C  26F3               	addwf	prodl,f,c
  5054  002A9E  0E00               	movlw	0
  5055  002AA0  22F4               	addwfc	prodh,f,c
  5056  002AA2  0EAF               	movlw	low _TaskTable
  5057  002AA4  24F3               	addwf	prodl,w,c
  5058  002AA6  6ED9               	movwf	fsr2l,c
  5059  002AA8  0E04               	movlw	high _TaskTable
  5060  002AAA  20F4               	addwfc	prodh,w,c
  5061  002AAC  6EDA               	movwf	fsr2h,c
  5062  002AAE  0E00               	movlw	0
  5063  002AB0  6EDE               	movwf	postinc2,c
  5064  002AB2  0E00               	movlw	0
  5065  002AB4  6EDD               	movwf	postdec2,c
  5066                           
  5067                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5068  002AB6  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5069  002AB8  0D08               	mullw	8
  5070  002ABA  0E02               	movlw	2
  5071  002ABC  26F3               	addwf	prodl,f,c
  5072  002ABE  0E00               	movlw	0
  5073  002AC0  22F4               	addwfc	prodh,f,c
  5074  002AC2  0EAF               	movlw	low _TaskTable
  5075  002AC4  24F3               	addwf	prodl,w,c
  5076  002AC6  6ED9               	movwf	fsr2l,c
  5077  002AC8  0E04               	movlw	high _TaskTable
  5078  002ACA  20F4               	addwfc	prodh,w,c
  5079  002ACC  6EDA               	movwf	fsr2h,c
  5080  002ACE  0E01               	movlw	1
  5081  002AD0  6EDF               	movwf	indf2,c
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5085  002AD2  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5086  002AD4  0D08               	mullw	8
  5087  002AD6  0EAF               	movlw	low _TaskTable
  5088  002AD8  24F3               	addwf	prodl,w,c
  5089  002ADA  6ED9               	movwf	fsr2l,c
  5090  002ADC  0E04               	movlw	high _TaskTable
  5091  002ADE  20F4               	addwfc	prodh,w,c
  5092  002AE0  6EDA               	movwf	fsr2h,c
  5093  002AE2  D801               	call	u13428
  5094  002AE4  D017               	goto	u13429
  5095  002AE6                     u13428:
  5096  002AE6  0005               	push	
  5097  002AE8  6EFA               	movwf	pclath,c
  5098  002AEA  50DE               	movf	postinc2,w,c
  5099  002AEC  6EFD               	movwf	tosl,c
  5100  002AEE  50DE               	movf	postinc2,w,c
  5101  002AF0  6EFE               	movwf	tosh,c
  5102  002AF2  50F8               	movf	tblptru,w,c
  5103  002AF4  6EFF               	movwf	tosu,c
  5104  002AF6  50FA               	movf	pclath,w,c
  5105  002AF8  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5106  002AFA  0D08               	mullw	8
  5107  002AFC  0E07               	movlw	7
  5108  002AFE  26F3               	addwf	prodl,f,c
  5109  002B00  0E00               	movlw	0
  5110  002B02  22F4               	addwfc	prodh,f,c
  5111  002B04  0EAF               	movlw	low _TaskTable
  5112  002B06  24F3               	addwf	prodl,w,c
  5113  002B08  6ED9               	movwf	fsr2l,c
  5114  002B0A  0E04               	movlw	high _TaskTable
  5115  002B0C  20F4               	addwfc	prodh,w,c
  5116  002B0E  6EDA               	movwf	fsr2h,c
  5117  002B10  50DF               	movf	indf2,w,c
  5118  002B12  0012               	return		;indir
  5119  002B14                     u13429:
  5120                           
  5121                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5122  002B14  0100               	movlb	0	; () banked
  5123  002B16  51AB               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5124  002B18  0D08               	mullw	8
  5125  002B1A  0E02               	movlw	2
  5126  002B1C  26F3               	addwf	prodl,f,c
  5127  002B1E  0E00               	movlw	0
  5128  002B20  22F4               	addwfc	prodh,f,c
  5129  002B22  0EAF               	movlw	low _TaskTable
  5130  002B24  24F3               	addwf	prodl,w,c
  5131  002B26  6ED9               	movwf	fsr2l,c
  5132  002B28  0E04               	movlw	high _TaskTable
  5133  002B2A  20F4               	addwfc	prodh,w,c
  5134  002B2C  6EDA               	movwf	fsr2h,c
  5135  002B2E  0E00               	movlw	0
  5136  002B30  6EDF               	movwf	indf2,c
  5137  002B32                     l775:
  5138                           
  5139                           ; BSR set to: 0
  5140                           
  5141                           ; BSR set to: 0
  5142                           
  5143                           ;os_sched.c: 117: else
  5144                           ;os_sched.c: 118: {
  5145                           
  5146                           ; BSR set to: 0
  5147  002B32  2BAB               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5148  002B34  D774               	goto	l13923
  5149  002B36                     __end_of_ScheduleTasks:
  5150                           	opt stack 0
  5151                           tosu	equ	0xFFF
  5152                           tosh	equ	0xFFE
  5153                           tosl	equ	0xFFD
  5154                           pclath	equ	0xFFA
  5155                           tblptru	equ	0xFF8
  5156                           tblptrh	equ	0xFF7
  5157                           tblptrl	equ	0xFF6
  5158                           tablat	equ	0xFF5
  5159                           prodh	equ	0xFF4
  5160                           prodl	equ	0xFF3
  5161                           intcon	equ	0xFF2
  5162                           intcon2	equ	0xFF1
  5163                           intcon3	equ	0xFF0
  5164                           postinc0	equ	0xFEE
  5165                           wreg	equ	0xFE8
  5166                           postinc1	equ	0xFE6
  5167                           postdec1	equ	0xFE5
  5168                           fsr1h	equ	0xFE2
  5169                           fsr1l	equ	0xFE1
  5170                           indf2	equ	0xFDF
  5171                           postinc2	equ	0xFDE
  5172                           postdec2	equ	0xFDD
  5173                           fsr2h	equ	0xFDA
  5174                           fsr2l	equ	0xFD9
  5175                           status	equ	0xFD8
  5176                           
  5177 ;; *************** function _InitializeTasks *****************
  5178 ;; Defined at:
  5179 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  ActiveTaskIn    1   73[BANK0 ] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;Total ram usage:        3 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:   21
  5200 ;; This function calls:
  5201 ;;		_I2cSlv_MainTask
  5202 ;;		_Led_MainTask
  5203 ;;		_MdmHttp_MainTask
  5204 ;;		_Mdm_DrvMainFn
  5205 ;;		_Mdm_MainTask
  5206 ;;		_MyApp_Task
  5207 ;;		_Rtcm_MainTask
  5208 ;;		_Term_MainTask
  5209 ;;		_UsbDevice_MainTask
  5210 ;;		_Wdg_MainTask
  5211 ;; This function is called by:
  5212 ;;		_Sch_MainScheduler
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text15
  5217  004B94                     __ptext15:
  5218                           	opt stack 0
  5219  004B94                     _InitializeTasks:
  5220                           	opt stack 8
  5221                           
  5222                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;incstack = 0
  5226  004B94  0E00               	movlw	0
  5227  004B96  0100               	movlb	0	; () banked
  5228  004B98  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5229                           
  5230                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5231  004B9A  0E00               	movlw	0
  5232  004B9C  6FA9               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5233  004B9E                     l13911:
  5234                           
  5235                           ; BSR set to: 0
  5236  004B9E  0E5D               	movlw	low _TaskNumber
  5237  004BA0  6EF6               	movwf	tblptrl,c
  5238  004BA2                     	if	1	;There is more than 1 active tblptr byte
  5239  004BA2  0EFC               	movlw	high _TaskNumber
  5240  004BA4  6EF7               	movwf	tblptrh,c
  5241  004BA6                     	endif
  5242  004BA6                     	if	0	;There are less than 3 active tblptr bytes
  5243  004BA6                     	endif
  5244  004BA6  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5245  004BA8  6FA7               	movwf	??_InitializeTasks& (0+255),b
  5246  004BAA  6BA8               	clrf	(??_InitializeTasks+1)& (0+255),b
  5247  004BAC  0009               	tblrd		*+
  5248  004BAE  50F5               	movf	tablat,w,c
  5249  004BB0  5DA7               	subwf	??_InitializeTasks& (0+255),w,b
  5250  004BB2  0009               	tblrd		*+
  5251  004BB4  50F5               	movf	tablat,w,c
  5252  004BB6  59A8               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5253  004BB8  B0D8               	btfsc	status,0,c
  5254  004BBA  0012               	return	
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;os_sched.c: 86: {
  5258                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5259                           
  5260                           ; BSR set to: 0
  5261                           
  5262                           ; BSR set to: 0
  5263  004BBC  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5264  004BBE  0D08               	mullw	8
  5265  004BC0  0EAF               	movlw	low _TaskTable
  5266  004BC2  24F3               	addwf	prodl,w,c
  5267  004BC4  6ED9               	movwf	fsr2l,c
  5268  004BC6  0E04               	movlw	high _TaskTable
  5269  004BC8  20F4               	addwfc	prodh,w,c
  5270  004BCA  6EDA               	movwf	fsr2h,c
  5271  004BCC  D801               	call	u13388
  5272  004BCE  D017               	goto	u13389
  5273  004BD0                     u13388:
  5274  004BD0  0005               	push	
  5275  004BD2  6EFA               	movwf	pclath,c
  5276  004BD4  50DE               	movf	postinc2,w,c
  5277  004BD6  6EFD               	movwf	tosl,c
  5278  004BD8  50DE               	movf	postinc2,w,c
  5279  004BDA  6EFE               	movwf	tosh,c
  5280  004BDC  50F8               	movf	tblptru,w,c
  5281  004BDE  6EFF               	movwf	tosu,c
  5282  004BE0  50FA               	movf	pclath,w,c
  5283  004BE2  51A9               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5284  004BE4  0D08               	mullw	8
  5285  004BE6  0E07               	movlw	7
  5286  004BE8  26F3               	addwf	prodl,f,c
  5287  004BEA  0E00               	movlw	0
  5288  004BEC  22F4               	addwfc	prodh,f,c
  5289  004BEE  0EAF               	movlw	low _TaskTable
  5290  004BF0  24F3               	addwf	prodl,w,c
  5291  004BF2  6ED9               	movwf	fsr2l,c
  5292  004BF4  0E04               	movlw	high _TaskTable
  5293  004BF6  20F4               	addwfc	prodh,w,c
  5294  004BF8  6EDA               	movwf	fsr2h,c
  5295  004BFA  50DF               	movf	indf2,w,c
  5296  004BFC  0012               	return		;indir
  5297  004BFE                     u13389:
  5298  004BFE  0100               	movlb	0	; () banked
  5299  004C00  2BA9               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5300  004C02  D7CD               	goto	l13911
  5301  004C04                     __end_of_InitializeTasks:
  5302                           	opt stack 0
  5303                           tosu	equ	0xFFF
  5304                           tosh	equ	0xFFE
  5305                           tosl	equ	0xFFD
  5306                           pclath	equ	0xFFA
  5307                           tblptru	equ	0xFF8
  5308                           tblptrh	equ	0xFF7
  5309                           tblptrl	equ	0xFF6
  5310                           tablat	equ	0xFF5
  5311                           prodh	equ	0xFF4
  5312                           prodl	equ	0xFF3
  5313                           intcon	equ	0xFF2
  5314                           intcon2	equ	0xFF1
  5315                           intcon3	equ	0xFF0
  5316                           postinc0	equ	0xFEE
  5317                           wreg	equ	0xFE8
  5318                           postinc1	equ	0xFE6
  5319                           postdec1	equ	0xFE5
  5320                           fsr1h	equ	0xFE2
  5321                           fsr1l	equ	0xFE1
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _MyApp_Task *****************
  5330 ;; Defined at:
  5331 ;;		line 137 in file "../Source/c/04_App/app.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  Options         1    wreg     unsigned char 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  Options         1    0[COMRAM] unsigned char 
  5336 ;;  phone          10   52[BANK0 ] unsigned char [10]
  5337 ;;  I2cTxBufferT    2   66[BANK0 ] unsigned char [2]
  5338 ;;  on              2   64[BANK0 ] unsigned char [2]
  5339 ;;  off             2   62[BANK0 ] unsigned char [2]
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5353 ;;Total ram usage:       16 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:   14
  5356 ;; This function calls:
  5357 ;;		_Led_SetLedBlinkTime
  5358 ;;		_Led_SetLedStatus
  5359 ;;		_ReceiveEvt
  5360 ;;		_initGprsModem
  5361 ;; This function is called by:
  5362 ;;		_InitializeTasks
  5363 ;;		_ScheduleTasks
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text16
  5368  004926                     __ptext16:
  5369                           	opt stack 0
  5370  004926                     _MyApp_Task:
  5371                           	opt stack 14
  5372                           
  5373                           ;app.c: 139: static uint8_t countRelay1 = 1;
  5374                           ;app.c: 140: static uint16_t countRelay2 = 1;
  5375                           ;app.c: 141: static bool isRelay1On = 0;
  5376                           ;app.c: 142: static bool isRelay2On = 0;
  5377                           ;app.c: 143: static uint8_t test = 0;
  5378                           ;app.c: 144: uint8_t off[2] = {((UINT8)(0x50)), 0x00};
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;incstack = 0
  5382  004926  C3CE  F09E         	movff	MyApp_Task@F8986,MyApp_Task@off
  5383  00492A  C3CF  F09F         	movff	MyApp_Task@F8986+1,MyApp_Task@off+1
  5384                           
  5385                           ;app.c: 145: uint8_t on[2] = {((UINT8)(0x50)), 0x1};
  5386  00492E  C3CC  F0A0         	movff	MyApp_Task@F8989,MyApp_Task@on
  5387  004932  C3CD  F0A1         	movff	MyApp_Task@F8989+1,MyApp_Task@on+1
  5388                           
  5389                           ;app.c: 148: UINT8 I2cTxBufferTest[] = {0x00, 0x00};
  5390  004936  C320  F0A2         	movff	MyApp_Task@F8992,MyApp_Task@I2cTxBufferTest
  5391  00493A  C321  F0A3         	movff	MyApp_Task@F8992+1,MyApp_Task@I2cTxBufferTest+1
  5392                           
  5393                           ;app.c: 149: static UINT8 I2cStsReady = 0u;
  5394                           ;app.c: 150: UINT8 phone[] = {'3', '2', '0', '0', '2', '7', '6', '3', '1', '8'};
  5395  00493E  EE24  F0A5         	lfsr	2,MyApp_Task@F8995
  5396  004942  EE10  F094         	lfsr	1,MyApp_Task@phone
  5397  004946  0E09               	movlw	9
  5398  004948                     u13341:
  5399  004948  CFDB FFE3          	movff	plusw2,plusw1
  5400  00494C  06E8               	decf	wreg,f,c
  5401  00494E  E2FC               	bc	u13341
  5402                           
  5403                           ;app.c: 152: switch (SystemState)
  5404  004950  D023               	goto	l2548
  5405  004952                     
  5406                           ;app.c: 157: Led_SetLedBlinkTime(1u,100,900);
  5407  004952  0E00               	movlw	0
  5408  004954  0100               	movlb	0	; () banked
  5409  004956  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5410  004958  0E64               	movlw	100
  5411  00495A  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5412  00495C  0E03               	movlw	3
  5413  00495E  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5414  004960  0E84               	movlw	132
  5415  004962  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5416  004964  0E01               	movlw	1
  5417  004966  ECEC  F028         	call	_Led_SetLedBlinkTime
  5418                           
  5419                           ;app.c: 158: break;
  5420  00496A  0012               	return	
  5421  00496C                     
  5422                           ;app.c: 162: if (initGprsModem())
  5423  00496C  ECC2  F028         	call	_initGprsModem	;wreg free
  5424  004970  0900               	iorlw	0
  5425  004972  B4D8               	btfsc	status,2,c
  5426  004974  0012               	return	
  5427                           
  5428                           ;app.c: 163: {
  5429                           ;app.c: 165: if (ReceiveEvt(&RingEvent))
  5430  004976  0EDC               	movlw	low _RingEvent
  5431  004978  0100               	movlb	0	; () banked
  5432  00497A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
  5433  00497C  0E00               	movlw	high _RingEvent
  5434  00497E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
  5435  004980  EC10  F02D         	call	_ReceiveEvt	;wreg free
  5436  004984  0900               	iorlw	0
  5437  004986  B4D8               	btfsc	status,2,c
  5438  004988  0012               	return	
  5439                           
  5440                           ;app.c: 166: {
  5441                           ;app.c: 167: Led_SetLedStatus(1u, LED_STS_BLINK);
  5442  00498A  0E03               	movlw	3
  5443  00498C  0100               	movlb	0	; () banked
  5444  00498E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5445  004990  0E01               	movlw	1
  5446  004992  ECE1  F02C         	call	_Led_SetLedStatus
  5447                           
  5448                           ;app.c: 175: }
  5449                           
  5450                           ;app.c: 174: break;
  5451                           
  5452                           ;app.c: 173: default:
  5453                           
  5454                           ;app.c: 168: }
  5455                           ;app.c: 169: }
  5456                           ;app.c: 170: break;
  5457  004996  0012               	return	
  5458  004998                     l2548:
  5459  004998  0100               	movlb	0	; () banked
  5460  00499A  51D2               	movf	_SystemState& (0+255),w,b
  5461                           
  5462                           ; Switch size 1, requested type "space"
  5463                           ; Number of cases is 2, Range of values is 0 to 1
  5464                           ; switch strategies available:
  5465                           ; Name         Instructions Cycles
  5466                           ; simple_byte            7     4 (average)
  5467                           ;	Chosen strategy is simple_byte
  5468  00499C  0A00               	xorlw	0	; case 0
  5469  00499E  B4D8               	btfsc	status,2,c
  5470  0049A0  D7D8               	goto	l2549
  5471  0049A2  0A01               	xorlw	1	; case 1
  5472  0049A4  A4D8               	btfss	status,2,c
  5473  0049A6  0012               	return	
  5474  0049A8  D7E1               	goto	l2551
  5475  0049AA                     __end_of_MyApp_Task:
  5476                           	opt stack 0
  5477                           tosu	equ	0xFFF
  5478                           tosh	equ	0xFFE
  5479                           tosl	equ	0xFFD
  5480                           pclath	equ	0xFFA
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           prodh	equ	0xFF4
  5486                           prodl	equ	0xFF3
  5487                           intcon	equ	0xFF2
  5488                           intcon2	equ	0xFF1
  5489                           intcon3	equ	0xFF0
  5490                           postinc0	equ	0xFEE
  5491                           wreg	equ	0xFE8
  5492                           postinc1	equ	0xFE6
  5493                           postdec1	equ	0xFE5
  5494                           plusw1	equ	0xFE3
  5495                           fsr1h	equ	0xFE2
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           postdec2	equ	0xFDD
  5500                           plusw2	equ	0xFDB
  5501                           fsr2h	equ	0xFDA
  5502                           fsr2l	equ	0xFD9
  5503                           status	equ	0xFD8
  5504                           
  5505 ;; *************** function _Term_MainTask *****************
  5506 ;; Defined at:
  5507 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  Options         1    wreg     unsigned char 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  Options         1    0[COMRAM] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:   17
  5528 ;; This function calls:
  5529 ;;		_Term_MainSm
  5530 ;; This function is called by:
  5531 ;;		_InitializeTasks
  5532 ;;		_ScheduleTasks
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text17
  5537  005CFE                     __ptext17:
  5538                           	opt stack 0
  5539  005CFE                     _Term_MainTask:
  5540                           	opt stack 11
  5541                           
  5542                           ;term.c: 847: switch (SystemState)
  5543                           
  5544                           ;incstack = 0
  5545  005CFE  D003               	goto	l2438
  5546  005D00                     
  5547                           ;term.c: 858: Term_MainSm();
  5548  005D00  EC5B  F008         	call	_Term_MainSm	;wreg free
  5549                           
  5550                           ;term.c: 865: }
  5551                           
  5552                           ;term.c: 864: break;
  5553                           
  5554                           ;term.c: 863: default:
  5555                           
  5556                           ;term.c: 860: break;
  5557  005D04  0012               	return	
  5558  005D06                     l2438:
  5559  005D06  0100               	movlb	0	; () banked
  5560  005D08  51D2               	movf	_SystemState& (0+255),w,b
  5561                           
  5562                           ; Switch size 1, requested type "space"
  5563                           ; Number of cases is 2, Range of values is 0 to 1
  5564                           ; switch strategies available:
  5565                           ; Name         Instructions Cycles
  5566                           ; simple_byte            7     4 (average)
  5567                           ;	Chosen strategy is simple_byte
  5568  005D0A  0A00               	xorlw	0	; case 0
  5569  005D0C  B4D8               	btfsc	status,2,c
  5570  005D0E  0012               	return	
  5571  005D10  0A01               	xorlw	1	; case 1
  5572  005D12  A4D8               	btfss	status,2,c
  5573  005D14  0012               	return	
  5574  005D16  D7F4               	goto	l2441
  5575  005D18                     __end_of_Term_MainTask:
  5576                           	opt stack 0
  5577                           tosu	equ	0xFFF
  5578                           tosh	equ	0xFFE
  5579                           tosl	equ	0xFFD
  5580                           pclath	equ	0xFFA
  5581                           tblptru	equ	0xFF8
  5582                           tblptrh	equ	0xFF7
  5583                           tblptrl	equ	0xFF6
  5584                           tablat	equ	0xFF5
  5585                           prodh	equ	0xFF4
  5586                           prodl	equ	0xFF3
  5587                           intcon	equ	0xFF2
  5588                           intcon2	equ	0xFF1
  5589                           intcon3	equ	0xFF0
  5590                           postinc0	equ	0xFEE
  5591                           wreg	equ	0xFE8
  5592                           postinc1	equ	0xFE6
  5593                           postdec1	equ	0xFE5
  5594                           plusw1	equ	0xFE3
  5595                           fsr1h	equ	0xFE2
  5596                           fsr1l	equ	0xFE1
  5597                           indf2	equ	0xFDF
  5598                           postinc2	equ	0xFDE
  5599                           postdec2	equ	0xFDD
  5600                           plusw2	equ	0xFDB
  5601                           fsr2h	equ	0xFDA
  5602                           fsr2l	equ	0xFD9
  5603                           status	equ	0xFD8
  5604                           
  5605 ;; *************** function _Rtcm_MainTask *****************
  5606 ;; Defined at:
  5607 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  Options         1    wreg     unsigned char 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  Options         1    0[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      void 
  5614 ;; Registers used:
  5615 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5625 ;;Total ram usage:        0 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:   14
  5628 ;; This function calls:
  5629 ;;		_Rtcc_AlarmConfig
  5630 ;;		_Rtcc_LockRtc
  5631 ;;		_Rtcc_RtcConfig
  5632 ;;		_Rtcc_SetRtcStatus
  5633 ;;		_Rtcc_UnlockRtc
  5634 ;;		_Rtcm_GetRtccDate
  5635 ;;		_Rtcm_SetRtccDate
  5636 ;; This function is called by:
  5637 ;;		_InitializeTasks
  5638 ;;		_ScheduleTasks
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text18
  5643  004786                     __ptext18:
  5644                           	opt stack 0
  5645  004786                     _Rtcm_MainTask:
  5646                           	opt stack 14
  5647                           
  5648                           ;rtcm.c: 101: switch (SystemState)
  5649                           
  5650                           ;incstack = 0
  5651  004786  D03D               	goto	l2168
  5652  004788                     l2169:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5656  004788  86CD               	bsf	4045,3,c	;volatile
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5660  00478A  0E00               	movlw	0
  5661  00478C  0103               	movlb	3	; () banked
  5662  00478E  6FB3               	movwf	_RtcConfig& (0+255),b
  5663                           
  5664                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  5665  004790  0E00               	movlw	0
  5666  004792  6FB4               	movwf	(_RtcConfig+1)& (0+255),b
  5667                           
  5668                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5669  004794  0E01               	movlw	1
  5670  004796  6FB5               	movwf	(_RtcConfig+2)& (0+255),b
  5671                           
  5672                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5673  004798  0E01               	movlw	1
  5674  00479A  6FB6               	movwf	(_RtcConfig+3)& (0+255),b
  5675                           
  5676                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5677  00479C  0E01               	movlw	1
  5678  00479E  6FAF               	movwf	_AlCfg& (0+255),b
  5679                           
  5680                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5681  0047A0  0E01               	movlw	1
  5682  0047A2  6FB0               	movwf	(_AlCfg+1)& (0+255),b
  5683                           
  5684                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5685  0047A4  0E01               	movlw	1
  5686  0047A6  6FB1               	movwf	(_AlCfg+2)& (0+255),b
  5687                           
  5688                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5689  0047A8  0E00               	movlw	0
  5690  0047AA  6FB2               	movwf	(_AlCfg+3)& (0+255),b
  5691                           
  5692                           ; BSR set to: 3
  5693                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5694  0047AC  ECF8  F02E         	call	_Rtcc_UnlockRtc	;wreg free
  5695                           
  5696                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5697  0047B0  0EB3               	movlw	low _RtcConfig
  5698  0047B2  0100               	movlb	0	; () banked
  5699  0047B4  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  5700  0047B6  0E03               	movlw	high _RtcConfig
  5701  0047B8  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  5702  0047BA  EC66  F021         	call	_Rtcc_RtcConfig	;wreg free
  5703                           
  5704                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  5705  0047BE  0EAF               	movlw	low _AlCfg
  5706  0047C0  0100               	movlb	0	; () banked
  5707  0047C2  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  5708  0047C4  0E03               	movlw	high _AlCfg
  5709  0047C6  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  5710  0047C8  EC38  F026         	call	_Rtcc_AlarmConfig	;wreg free
  5711                           
  5712                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  5713  0047CC  0E01               	movlw	1
  5714  0047CE  ECB0  F02E         	call	_Rtcc_SetRtcStatus
  5715                           
  5716                           ;rtcm.c: 127: Rtcc_LockRtc();
  5717  0047D2  EC00  F02F         	call	_Rtcc_LockRtc	;wreg free
  5718                           
  5719                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  5720  0047D6  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5721  0047DA  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  5722  0047DE  0E07               	movlw	7
  5723  0047E0                     u9281:
  5724  0047E0  CFDB FFEB          	movff	plusw2,plusw0
  5725  0047E4  06E8               	decf	wreg,f,c
  5726  0047E6  E2FC               	bc	u9281
  5727  0047E8  EC98  F028         	call	_Rtcm_SetRtccDate	;wreg free
  5728                           
  5729                           ;rtcm.c: 154: break;
  5730  0047EC  0012               	return	
  5731  0047EE                     
  5732                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5733  0047EE  ECA1  F026         	call	_Rtcm_GetRtccDate	;wreg free
  5734  0047F2  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  5735  0047F6  0E07               	movlw	7
  5736  0047F8                     u9291:
  5737  0047F8  CFEB FFDB          	movff	plusw0,plusw2
  5738  0047FC  06E8               	decf	wreg,f,c
  5739  0047FE  E2FC               	bc	u9291
  5740                           
  5741                           ;rtcm.c: 165: }
  5742                           
  5743                           ;rtcm.c: 164: break;
  5744                           
  5745                           ;rtcm.c: 163: default:
  5746                           
  5747                           ;rtcm.c: 160: break;
  5748  004800  0012               	return	
  5749  004802                     l2168:
  5750  004802  0100               	movlb	0	; () banked
  5751  004804  51D2               	movf	_SystemState& (0+255),w,b
  5752                           
  5753                           ; Switch size 1, requested type "space"
  5754                           ; Number of cases is 2, Range of values is 0 to 1
  5755                           ; switch strategies available:
  5756                           ; Name         Instructions Cycles
  5757                           ; simple_byte            7     4 (average)
  5758                           ;	Chosen strategy is simple_byte
  5759  004806  0A00               	xorlw	0	; case 0
  5760  004808  B4D8               	btfsc	status,2,c
  5761  00480A  D7BE               	goto	l2169
  5762  00480C  0A01               	xorlw	1	; case 1
  5763  00480E  A4D8               	btfss	status,2,c
  5764  004810  0012               	return	
  5765  004812  D7ED               	goto	l2171
  5766  004814                     __end_of_Rtcm_MainTask:
  5767                           	opt stack 0
  5768                           tosu	equ	0xFFF
  5769                           tosh	equ	0xFFE
  5770                           tosl	equ	0xFFD
  5771                           pclath	equ	0xFFA
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           intcon	equ	0xFF2
  5779                           intcon2	equ	0xFF1
  5780                           intcon3	equ	0xFF0
  5781                           postinc0	equ	0xFEE
  5782                           plusw0	equ	0xFEB
  5783                           wreg	equ	0xFE8
  5784                           postinc1	equ	0xFE6
  5785                           postdec1	equ	0xFE5
  5786                           plusw1	equ	0xFE3
  5787                           fsr1h	equ	0xFE2
  5788                           fsr1l	equ	0xFE1
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           postdec2	equ	0xFDD
  5792                           plusw2	equ	0xFDB
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           
  5797 ;; *************** function _Led_MainTask *****************
  5798 ;; Defined at:
  5799 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  Options         1    wreg     unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  Options         1    0[COMRAM] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5816 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5817 ;;Total ram usage:        1 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:   14
  5820 ;; This function calls:
  5821 ;;		_LedStateMachine
  5822 ;; This function is called by:
  5823 ;;		_InitializeTasks
  5824 ;;		_ScheduleTasks
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text19
  5829  00365A                     __ptext19:
  5830                           	opt stack 0
  5831  00365A                     _Led_MainTask:
  5832                           	opt stack 14
  5833                           
  5834                           ;led.c: 300: switch (SystemState)
  5835                           
  5836                           ;incstack = 0
  5837  00365A  D05C               	goto	l2082
  5838  00365C                     l2083:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  5842  00365C  9895               	bcf	3989,4,c	;volatile
  5843                           
  5844                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  5845  00365E  9A95               	bcf	3989,5,c	;volatile
  5846                           
  5847                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  5848  003660  9C95               	bcf	3989,6,c	;volatile
  5849                           
  5850                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  5851  003662  9883               	bcf	3971,4,c	;volatile
  5852                           
  5853                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  5854  003664  9A83               	bcf	3971,5,c	;volatile
  5855                           
  5856                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  5857  003666  9C83               	bcf	3971,6,c	;volatile
  5858                           
  5859                           ;led.c: 311: break;
  5860  003668  0012               	return	
  5861  00366A                     
  5862                           ; BSR set to: 0
  5863                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  5864                           
  5865                           ; BSR set to: 0
  5866  00366A  0EFB               	movlw	low _Led1Sts
  5867  00366C  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  5868  00366E  0E01               	movlw	high _Led1Sts
  5869  003670  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5870  003672  0EFA               	movlw	low _Led1OutSts
  5871  003674  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  5872  003676  0E01               	movlw	high _Led1OutSts
  5873  003678  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5874  00367A  0E6D               	movlw	low _Led1Blink
  5875  00367C  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  5876  00367E  0E03               	movlw	high _Led1Blink
  5877  003680  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5878  003682  0E91               	movlw	low _Led1Pulse
  5879  003684  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  5880  003686  0E03               	movlw	high _Led1Pulse
  5881  003688  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5882  00368A  0E01               	movlw	1
  5883  00368C  ECC1  F020         	call	_LedStateMachine
  5884  003690  0100               	movlb	0	; () banked
  5885  003692  6F9A               	movwf	??_Led_MainTask& (0+255),b
  5886  003694  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  5887  003696  5083               	movf	3971,w,c	;volatile
  5888  003698  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5889  00369A  0BEF               	andlw	-17
  5890  00369C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5891  00369E  6E83               	movwf	3971,c	;volatile
  5892                           
  5893                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  5894  0036A0  0EF9               	movlw	low _Led2Sts
  5895  0036A2  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  5896  0036A4  0E01               	movlw	high _Led2Sts
  5897  0036A6  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5898  0036A8  0EF8               	movlw	low _Led2OutSts
  5899  0036AA  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  5900  0036AC  0E01               	movlw	high _Led2OutSts
  5901  0036AE  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5902  0036B0  0E64               	movlw	low _Led2Blink
  5903  0036B2  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  5904  0036B4  0E03               	movlw	high _Led2Blink
  5905  0036B6  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5906  0036B8  0E8B               	movlw	low _Led2Pulse
  5907  0036BA  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  5908  0036BC  0E03               	movlw	high _Led2Pulse
  5909  0036BE  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5910  0036C0  0E02               	movlw	2
  5911  0036C2  ECC1  F020         	call	_LedStateMachine
  5912  0036C6  0100               	movlb	0	; () banked
  5913  0036C8  6F9A               	movwf	??_Led_MainTask& (0+255),b
  5914  0036CA  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  5915  0036CC  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  5916  0036CE  5083               	movf	3971,w,c	;volatile
  5917  0036D0  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5918  0036D2  0BDF               	andlw	-33
  5919  0036D4  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5920  0036D6  6E83               	movwf	3971,c	;volatile
  5921                           
  5922                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  5923  0036D8  0EF7               	movlw	low _Led3Sts
  5924  0036DA  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  5925  0036DC  0E01               	movlw	high _Led3Sts
  5926  0036DE  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5927  0036E0  0EF6               	movlw	low _Led3OutSts
  5928  0036E2  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  5929  0036E4  0E01               	movlw	high _Led3OutSts
  5930  0036E6  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  5931  0036E8  0E5B               	movlw	low _Led3Blink
  5932  0036EA  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  5933  0036EC  0E03               	movlw	high _Led3Blink
  5934  0036EE  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5935  0036F0  0E85               	movlw	low _Led3Pulse
  5936  0036F2  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  5937  0036F4  0E03               	movlw	high _Led3Pulse
  5938  0036F6  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5939  0036F8  0E03               	movlw	3
  5940  0036FA  ECC1  F020         	call	_LedStateMachine
  5941  0036FE  0100               	movlb	0	; () banked
  5942  003700  6F9A               	movwf	??_Led_MainTask& (0+255),b
  5943  003702  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  5944  003704  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  5945  003706  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  5946  003708  5083               	movf	3971,w,c	;volatile
  5947  00370A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5948  00370C  0BBF               	andlw	-65
  5949  00370E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  5950  003710  6E83               	movwf	3971,c	;volatile
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;led.c: 326: }
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;led.c: 325: break;
  5957                           
  5958                           ;led.c: 324: default:
  5959                           
  5960                           ;led.c: 321: break;
  5961  003712  0012               	return	
  5962  003714                     l2082:
  5963                           
  5964                           ; BSR set to: 0
  5965  003714  0100               	movlb	0	; () banked
  5966  003716  51D2               	movf	_SystemState& (0+255),w,b
  5967                           
  5968                           ; Switch size 1, requested type "space"
  5969                           ; Number of cases is 2, Range of values is 0 to 1
  5970                           ; switch strategies available:
  5971                           ; Name         Instructions Cycles
  5972                           ; simple_byte            7     4 (average)
  5973                           ;	Chosen strategy is simple_byte
  5974  003718  0A00               	xorlw	0	; case 0
  5975  00371A  B4D8               	btfsc	status,2,c
  5976  00371C  D79F               	goto	l2083
  5977  00371E  0A01               	xorlw	1	; case 1
  5978  003720  A4D8               	btfss	status,2,c
  5979  003722  0012               	return	
  5980  003724  D7A2               	goto	l2085
  5981  003726                     __end_of_Led_MainTask:
  5982                           	opt stack 0
  5983                           tosu	equ	0xFFF
  5984                           tosh	equ	0xFFE
  5985                           tosl	equ	0xFFD
  5986                           pclath	equ	0xFFA
  5987                           tblptru	equ	0xFF8
  5988                           tblptrh	equ	0xFF7
  5989                           tblptrl	equ	0xFF6
  5990                           tablat	equ	0xFF5
  5991                           prodh	equ	0xFF4
  5992                           prodl	equ	0xFF3
  5993                           intcon	equ	0xFF2
  5994                           intcon2	equ	0xFF1
  5995                           intcon3	equ	0xFF0
  5996                           postinc0	equ	0xFEE
  5997                           plusw0	equ	0xFEB
  5998                           wreg	equ	0xFE8
  5999                           postinc1	equ	0xFE6
  6000                           postdec1	equ	0xFE5
  6001                           plusw1	equ	0xFE3
  6002                           fsr1h	equ	0xFE2
  6003                           fsr1l	equ	0xFE1
  6004                           indf2	equ	0xFDF
  6005                           postinc2	equ	0xFDE
  6006                           postdec2	equ	0xFDD
  6007                           plusw2	equ	0xFDB
  6008                           fsr2h	equ	0xFDA
  6009                           fsr2l	equ	0xFD9
  6010                           status	equ	0xFD8
  6011                           
  6012 ;; *************** function _UsbDevice_MainTask *****************
  6013 ;; Defined at:
  6014 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  Options         1    wreg     unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  Options         1    0[COMRAM] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;Total ram usage:        0 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:   20
  6035 ;; This function calls:
  6036 ;;		_CDCTxService
  6037 ;;		_USBDeviceInit
  6038 ;;		_USBDeviceTasks
  6039 ;; This function is called by:
  6040 ;;		_InitializeTasks
  6041 ;;		_ScheduleTasks
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text20
  6046  005B1C                     __ptext20:
  6047                           	opt stack 0
  6048  005B1C                     _UsbDevice_MainTask:
  6049                           	opt stack 8
  6050                           
  6051                           ;usb_device_mgr.c: 74: switch (SystemState)
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;incstack = 0
  6055  005B1C  D008               	goto	l1975
  6056  005B1E                     
  6057                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6058  005B1E  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  6059                           
  6060                           ;usb_device_mgr.c: 80: ;
  6061                           ;usb_device_mgr.c: 81: break;
  6062  005B22  0012               	return	
  6063  005B24                     
  6064                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6065  005B24  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6066                           
  6067                           ;usb_device_mgr.c: 90: CDCTxService();
  6068  005B28  ECA2  F012         	call	_CDCTxService	;wreg free
  6069                           
  6070                           ;usb_device_mgr.c: 101: }
  6071                           
  6072                           ;usb_device_mgr.c: 100: break;
  6073                           
  6074                           ;usb_device_mgr.c: 99: default:
  6075                           
  6076                           ;usb_device_mgr.c: 96: break;
  6077  005B2C  0012               	return	
  6078  005B2E                     l1975:
  6079  005B2E  0100               	movlb	0	; () banked
  6080  005B30  51D2               	movf	_SystemState& (0+255),w,b
  6081                           
  6082                           ; Switch size 1, requested type "space"
  6083                           ; Number of cases is 2, Range of values is 0 to 1
  6084                           ; switch strategies available:
  6085                           ; Name         Instructions Cycles
  6086                           ; simple_byte            7     4 (average)
  6087                           ;	Chosen strategy is simple_byte
  6088  005B32  0A00               	xorlw	0	; case 0
  6089  005B34  B4D8               	btfsc	status,2,c
  6090  005B36  D7F3               	goto	l1976
  6091  005B38  0A01               	xorlw	1	; case 1
  6092  005B3A  A4D8               	btfss	status,2,c
  6093  005B3C  0012               	return	
  6094  005B3E  D7F2               	goto	l1978
  6095  005B40                     __end_of_UsbDevice_MainTask:
  6096                           	opt stack 0
  6097                           tosu	equ	0xFFF
  6098                           tosh	equ	0xFFE
  6099                           tosl	equ	0xFFD
  6100                           pclath	equ	0xFFA
  6101                           tblptru	equ	0xFF8
  6102                           tblptrh	equ	0xFF7
  6103                           tblptrl	equ	0xFF6
  6104                           tablat	equ	0xFF5
  6105                           prodh	equ	0xFF4
  6106                           prodl	equ	0xFF3
  6107                           intcon	equ	0xFF2
  6108                           intcon2	equ	0xFF1
  6109                           intcon3	equ	0xFF0
  6110                           postinc0	equ	0xFEE
  6111                           plusw0	equ	0xFEB
  6112                           wreg	equ	0xFE8
  6113                           postinc1	equ	0xFE6
  6114                           postdec1	equ	0xFE5
  6115                           plusw1	equ	0xFE3
  6116                           fsr1h	equ	0xFE2
  6117                           fsr1l	equ	0xFE1
  6118                           indf2	equ	0xFDF
  6119                           postinc2	equ	0xFDE
  6120                           postdec2	equ	0xFDD
  6121                           plusw2	equ	0xFDB
  6122                           fsr2h	equ	0xFDA
  6123                           fsr2l	equ	0xFD9
  6124                           status	equ	0xFD8
  6125                           
  6126 ;; *************** function _MdmHttp_MainTask *****************
  6127 ;; Defined at:
  6128 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  Options         1    wreg     unsigned char 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  Options         1    0[COMRAM] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6146 ;;Total ram usage:        0 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:   15
  6149 ;; This function calls:
  6150 ;;		_HttpGetMethod
  6151 ;;		_InitGprsNetwork
  6152 ;; This function is called by:
  6153 ;;		_InitializeTasks
  6154 ;;		_ScheduleTasks
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text21
  6159  00549A                     __ptext21:
  6160                           	opt stack 0
  6161  00549A                     _MdmHttp_MainTask:
  6162                           	opt stack 13
  6163                           
  6164                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6165                           
  6166                           ;incstack = 0
  6167  00549A  D019               	goto	l1274
  6168  00549C                     
  6169                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6170  00549C  0E03               	movlw	3
  6171  00549E  0100               	movlb	0	; () banked
  6172  0054A0  19CF               	xorwf	_MdmStatus& (0+255),w,b
  6173  0054A2  A4D8               	btfss	status,2,c
  6174  0054A4  0012               	return	
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;mdm_gsm_gprs_http.c: 570: {
  6178                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6179  0054A6  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6180  0054AA  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6181  0054AE  C1F2  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6182  0054B2  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6183  0054B6  0101               	movlb	1	; () banked
  6184  0054B8  6FF1               	movwf	_GprsNetworkSts& (0+255),b
  6185                           
  6186                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6187  0054BA  0EA2               	movlw	low _HttpGetDataLocal
  6188  0054BC  0100               	movlb	0	; () banked
  6189  0054BE  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6190  0054C0  0E03               	movlw	high _HttpGetDataLocal
  6191  0054C2  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6192  0054C4  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6193  0054C8  0101               	movlb	1	; () banked
  6194  0054CA  6FF0               	movwf	_HttpGetMethodSts& (0+255),b
  6195                           
  6196                           ; BSR set to: 1
  6197                           ;mdm_gsm_gprs_http.c: 581: }
  6198                           
  6199                           ; BSR set to: 1
  6200                           ;mdm_gsm_gprs_http.c: 580: break;
  6201                           
  6202                           ;mdm_gsm_gprs_http.c: 579: default:
  6203                           
  6204                           ; BSR set to: 1
  6205                           ;mdm_gsm_gprs_http.c: 575: }
  6206                           ;mdm_gsm_gprs_http.c: 576: break;
  6207  0054CC  0012               	return	
  6208  0054CE                     l1274:
  6209                           
  6210                           ; BSR set to: 1
  6211  0054CE  0100               	movlb	0	; () banked
  6212  0054D0  51D2               	movf	_SystemState& (0+255),w,b
  6213                           
  6214                           ; Switch size 1, requested type "space"
  6215                           ; Number of cases is 2, Range of values is 0 to 1
  6216                           ; switch strategies available:
  6217                           ; Name         Instructions Cycles
  6218                           ; simple_byte            7     4 (average)
  6219                           ;	Chosen strategy is simple_byte
  6220  0054D2  0A00               	xorlw	0	; case 0
  6221  0054D4  B4D8               	btfsc	status,2,c
  6222  0054D6  0012               	return	
  6223  0054D8  0A01               	xorlw	1	; case 1
  6224  0054DA  A4D8               	btfss	status,2,c
  6225  0054DC  0012               	return	
  6226  0054DE  D7DE               	goto	l1277
  6227  0054E0                     __end_of_MdmHttp_MainTask:
  6228                           	opt stack 0
  6229                           tosu	equ	0xFFF
  6230                           tosh	equ	0xFFE
  6231                           tosl	equ	0xFFD
  6232                           pclath	equ	0xFFA
  6233                           tblptru	equ	0xFF8
  6234                           tblptrh	equ	0xFF7
  6235                           tblptrl	equ	0xFF6
  6236                           tablat	equ	0xFF5
  6237                           prodh	equ	0xFF4
  6238                           prodl	equ	0xFF3
  6239                           intcon	equ	0xFF2
  6240                           intcon2	equ	0xFF1
  6241                           intcon3	equ	0xFF0
  6242                           postinc0	equ	0xFEE
  6243                           plusw0	equ	0xFEB
  6244                           wreg	equ	0xFE8
  6245                           postinc1	equ	0xFE6
  6246                           postdec1	equ	0xFE5
  6247                           plusw1	equ	0xFE3
  6248                           fsr1h	equ	0xFE2
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           plusw2	equ	0xFDB
  6254                           fsr2h	equ	0xFDA
  6255                           fsr2l	equ	0xFD9
  6256                           status	equ	0xFD8
  6257                           
  6258 ;; *************** function _Mdm_MainTask *****************
  6259 ;; Defined at:
  6260 ;;		line 734 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  Options         1    wreg     unsigned char 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  Options         1    0[COMRAM] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:   15
  6281 ;; This function calls:
  6282 ;;		_CheckModem
  6283 ;;		_ConfigureModem
  6284 ;;		_GetSmsSm
  6285 ;;		_ModemEvtParser
  6286 ;;		_SendSmsSm
  6287 ;;		_TurnOnModem
  6288 ;;		_UartSetConfig
  6289 ;;		_Uart_InitUartModule
  6290 ;; This function is called by:
  6291 ;;		_InitializeTasks
  6292 ;;		_ScheduleTasks
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text22
  6297  0052D2                     __ptext22:
  6298                           	opt stack 0
  6299  0052D2                     _Mdm_MainTask:
  6300                           	opt stack 13
  6301                           
  6302                           ;mdm_gsm_gprs.c: 736: switch (SystemState)
  6303                           
  6304                           ;incstack = 0
  6305  0052D2  D01E               	goto	l1097
  6306  0052D4                     
  6307                           ;mdm_gsm_gprs.c: 741: UartSetConfig();
  6308  0052D4  ECBE  F027         	call	_UartSetConfig	;wreg free
  6309                           
  6310                           ;mdm_gsm_gprs.c: 743: Uart_InitUartModule(1,&UartConfig);
  6311  0052D8  0E26               	movlw	low _UartConfig
  6312  0052DA  0100               	movlb	0	; () banked
  6313  0052DC  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6314  0052DE  0E03               	movlw	high _UartConfig
  6315  0052E0  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6316  0052E2  0E01               	movlw	1
  6317  0052E4  EC5E  F005         	call	_Uart_InitUartModule
  6318                           
  6319                           ;mdm_gsm_gprs.c: 744: break;
  6320  0052E8  0012               	return	
  6321  0052EA                     
  6322                           ;mdm_gsm_gprs.c: 749: CheckModem();
  6323  0052EA  EC55  F011         	call	_CheckModem	;wreg free
  6324                           
  6325                           ;mdm_gsm_gprs.c: 751: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6326  0052EE  042B               	decf	_ComChecCompleted,w,c
  6327  0052F0  A4D8               	btfss	status,2,c
  6328  0052F2  D005               	goto	l1101
  6329  0052F4  0100               	movlb	0	; () banked
  6330  0052F6  51CF               	movf	_MdmStatus& (0+255),w,b
  6331  0052F8  B4D8               	btfsc	status,2,c
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;mdm_gsm_gprs.c: 752: {
  6335                           ;mdm_gsm_gprs.c: 754: TurnOnModem();
  6336  0052FA  EC70  F02A         	call	_TurnOnModem	;wreg free
  6337  0052FE                     l1101:
  6338                           
  6339                           ;mdm_gsm_gprs.c: 755: }
  6340                           ;mdm_gsm_gprs.c: 757: ConfigureModem();
  6341  0052FE  ECF9  F01B         	call	_ConfigureModem	;wreg free
  6342                           
  6343                           ;mdm_gsm_gprs.c: 759: ModemEvtParser();
  6344  005302  EC2A  F016         	call	_ModemEvtParser	;wreg free
  6345                           
  6346                           ;mdm_gsm_gprs.c: 761: GetSmsSm();
  6347  005306  ECAE  F017         	call	_GetSmsSm	;wreg free
  6348                           
  6349                           ;mdm_gsm_gprs.c: 763: SendSmsSm();
  6350  00530A  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6351                           
  6352                           ;mdm_gsm_gprs.c: 769: }
  6353                           
  6354                           ;mdm_gsm_gprs.c: 768: break;
  6355                           
  6356                           ;mdm_gsm_gprs.c: 767: default:
  6357                           
  6358                           ;mdm_gsm_gprs.c: 764: break;
  6359  00530E  0012               	return	
  6360  005310                     l1097:
  6361  005310  0100               	movlb	0	; () banked
  6362  005312  51D2               	movf	_SystemState& (0+255),w,b
  6363                           
  6364                           ; Switch size 1, requested type "space"
  6365                           ; Number of cases is 2, Range of values is 0 to 1
  6366                           ; switch strategies available:
  6367                           ; Name         Instructions Cycles
  6368                           ; simple_byte            7     4 (average)
  6369                           ;	Chosen strategy is simple_byte
  6370  005314  0A00               	xorlw	0	; case 0
  6371  005316  B4D8               	btfsc	status,2,c
  6372  005318  D7DD               	goto	l1098
  6373  00531A  0A01               	xorlw	1	; case 1
  6374  00531C  A4D8               	btfss	status,2,c
  6375  00531E  0012               	return	
  6376  005320  D7E4               	goto	l1100
  6377  005322                     __end_of_Mdm_MainTask:
  6378                           	opt stack 0
  6379                           tosu	equ	0xFFF
  6380                           tosh	equ	0xFFE
  6381                           tosl	equ	0xFFD
  6382                           pclath	equ	0xFFA
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           intcon	equ	0xFF2
  6390                           intcon2	equ	0xFF1
  6391                           intcon3	equ	0xFF0
  6392                           postinc0	equ	0xFEE
  6393                           plusw0	equ	0xFEB
  6394                           wreg	equ	0xFE8
  6395                           postinc1	equ	0xFE6
  6396                           postdec1	equ	0xFE5
  6397                           plusw1	equ	0xFE3
  6398                           fsr1h	equ	0xFE2
  6399                           fsr1l	equ	0xFE1
  6400                           indf2	equ	0xFDF
  6401                           postinc2	equ	0xFDE
  6402                           postdec2	equ	0xFDD
  6403                           plusw2	equ	0xFDB
  6404                           fsr2h	equ	0xFDA
  6405                           fsr2l	equ	0xFD9
  6406                           status	equ	0xFD8
  6407                           
  6408 ;; *************** function _I2cSlv_MainTask *****************
  6409 ;; Defined at:
  6410 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  Options         1    wreg     unsigned char 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  Options         1    0[COMRAM] unsigned char 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:   14
  6431 ;; This function calls:
  6432 ;;		_I2cSendMsgSm
  6433 ;;		_I2cSetConfig
  6434 ;;		_I2c_InitI2cModule
  6435 ;;		_OsAlrm_SetOsAlarm
  6436 ;; This function is called by:
  6437 ;;		_InitializeTasks
  6438 ;;		_ScheduleTasks
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text23
  6443  0050DC                     __ptext23:
  6444                           	opt stack 0
  6445  0050DC                     _I2cSlv_MainTask:
  6446                           	opt stack 14
  6447                           
  6448                           ;i2c_slv.c: 217: switch (SystemState)
  6449                           
  6450                           ;incstack = 0
  6451  0050DC  D020               	goto	l1387
  6452  0050DE                     
  6453                           ;i2c_slv.c: 222: I2cSetConfig();
  6454  0050DE  EC27  F02D         	call	_I2cSetConfig	;wreg free
  6455                           
  6456                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6457  0050E2  0E51               	movlw	low _I2cConfig
  6458  0050E4  0100               	movlb	0	; () banked
  6459  0050E6  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6460  0050E8  0E03               	movlw	high _I2cConfig
  6461  0050EA  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6462  0050EC  EC91  F025         	call	_I2c_InitI2cModule	;wreg free
  6463                           
  6464                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6465  0050F0  0E00               	movlw	0
  6466  0050F2  0100               	movlb	0	; () banked
  6467  0050F4  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6468  0050F6  0E00               	movlw	0
  6469  0050F8  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6470  0050FA  0E32               	movlw	50
  6471  0050FC  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6472  0050FE  0E00               	movlw	0
  6473  005100  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6474  005102  0E00               	movlw	0
  6475  005104  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6476  005106  0E00               	movlw	0
  6477  005108  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6478  00510A  0EC8               	movlw	low _I2cDummyTx
  6479  00510C  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6480  00510E  0E5C               	movlw	high _I2cDummyTx
  6481  005110  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6482  005112  EC8B  F01D         	call	_OsAlrm_SetOsAlarm	;wreg free
  6483                           
  6484                           ;i2c_slv.c: 227: break;
  6485  005116  0012               	return	
  6486  005118                     
  6487                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6488  005118  ECEF  F01D         	call	_I2cSendMsgSm	;wreg free
  6489                           
  6490                           ;i2c_slv.c: 238: }
  6491                           
  6492                           ;i2c_slv.c: 237: break;
  6493                           
  6494                           ;i2c_slv.c: 236: default:
  6495                           
  6496                           ;i2c_slv.c: 233: break;
  6497  00511C  0012               	return	
  6498  00511E                     l1387:
  6499  00511E  0100               	movlb	0	; () banked
  6500  005120  51D2               	movf	_SystemState& (0+255),w,b
  6501                           
  6502                           ; Switch size 1, requested type "space"
  6503                           ; Number of cases is 2, Range of values is 0 to 1
  6504                           ; switch strategies available:
  6505                           ; Name         Instructions Cycles
  6506                           ; simple_byte            7     4 (average)
  6507                           ;	Chosen strategy is simple_byte
  6508  005122  0A00               	xorlw	0	; case 0
  6509  005124  B4D8               	btfsc	status,2,c
  6510  005126  D7DB               	goto	l1388
  6511  005128  0A01               	xorlw	1	; case 1
  6512  00512A  A4D8               	btfss	status,2,c
  6513  00512C  0012               	return	
  6514  00512E  D7F4               	goto	l1390
  6515  005130                     __end_of_I2cSlv_MainTask:
  6516                           	opt stack 0
  6517                           tosu	equ	0xFFF
  6518                           tosh	equ	0xFFE
  6519                           tosl	equ	0xFFD
  6520                           pclath	equ	0xFFA
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           intcon	equ	0xFF2
  6528                           intcon2	equ	0xFF1
  6529                           intcon3	equ	0xFF0
  6530                           postinc0	equ	0xFEE
  6531                           plusw0	equ	0xFEB
  6532                           wreg	equ	0xFE8
  6533                           postinc1	equ	0xFE6
  6534                           postdec1	equ	0xFE5
  6535                           plusw1	equ	0xFE3
  6536                           fsr1h	equ	0xFE2
  6537                           fsr1l	equ	0xFE1
  6538                           indf2	equ	0xFDF
  6539                           postinc2	equ	0xFDE
  6540                           postdec2	equ	0xFDD
  6541                           plusw2	equ	0xFDB
  6542                           fsr2h	equ	0xFDA
  6543                           fsr2l	equ	0xFD9
  6544                           status	equ	0xFD8
  6545                           
  6546 ;; *************** function _Mdm_DrvMainFn *****************
  6547 ;; Defined at:
  6548 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  Options         1    wreg     unsigned char 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  Options         1    0[COMRAM] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6566 ;;Total ram usage:        0 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:   13
  6569 ;; This function calls:
  6570 ;;		_MdmCntSm
  6571 ;; This function is called by:
  6572 ;;		_InitializeTasks
  6573 ;;		_ScheduleTasks
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text24
  6578  005E98                     __ptext24:
  6579                           	opt stack 0
  6580  005E98                     _Mdm_DrvMainFn:
  6581                           	opt stack 15
  6582                           
  6583                           ;mdm_drv.c: 307: MdmCntSm();
  6584                           
  6585                           ;incstack = 0
  6586  005E98  EC6D  F020         	call	_MdmCntSm	;wreg free
  6587  005E9C  0012               	return		;funcret
  6588  005E9E                     __end_of_Mdm_DrvMainFn:
  6589                           	opt stack 0
  6590                           tosu	equ	0xFFF
  6591                           tosh	equ	0xFFE
  6592                           tosl	equ	0xFFD
  6593                           pclath	equ	0xFFA
  6594                           tblptru	equ	0xFF8
  6595                           tblptrh	equ	0xFF7
  6596                           tblptrl	equ	0xFF6
  6597                           tablat	equ	0xFF5
  6598                           prodh	equ	0xFF4
  6599                           prodl	equ	0xFF3
  6600                           intcon	equ	0xFF2
  6601                           intcon2	equ	0xFF1
  6602                           intcon3	equ	0xFF0
  6603                           postinc0	equ	0xFEE
  6604                           plusw0	equ	0xFEB
  6605                           wreg	equ	0xFE8
  6606                           postinc1	equ	0xFE6
  6607                           postdec1	equ	0xFE5
  6608                           plusw1	equ	0xFE3
  6609                           fsr1h	equ	0xFE2
  6610                           fsr1l	equ	0xFE1
  6611                           indf2	equ	0xFDF
  6612                           postinc2	equ	0xFDE
  6613                           postdec2	equ	0xFDD
  6614                           plusw2	equ	0xFDB
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function _Wdg_MainTask *****************
  6620 ;; Defined at:
  6621 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  Options         1    wreg     unsigned char 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  Options         1    0[COMRAM] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:   12
  6642 ;; This function calls:
  6643 ;;		_Mcu_ClearWdg
  6644 ;;		_Mcu_SetWdgSts
  6645 ;; This function is called by:
  6646 ;;		_InitializeTasks
  6647 ;;		_ScheduleTasks
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text25
  6652  005B64                     __ptext25:
  6653                           	opt stack 0
  6654  005B64                     _Wdg_MainTask:
  6655                           	opt stack 16
  6656                           
  6657                           ;wdg.c: 75: switch (SystemState)
  6658                           
  6659                           ;incstack = 0
  6660  005B64  D007               	goto	l2458
  6661  005B66                     
  6662                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6663  005B66  0E01               	movlw	1
  6664  005B68  ECE6  F02E         	call	_Mcu_SetWdgSts
  6665                           
  6666                           ;wdg.c: 81: break;
  6667  005B6C  0012               	return	
  6668  005B6E                     
  6669                           ;wdg.c: 86: Mcu_ClearWdg();
  6670  005B6E  EC4F  F02F         	call	_Mcu_ClearWdg	;wreg free
  6671                           
  6672                           ;wdg.c: 92: }
  6673                           
  6674                           ;wdg.c: 91: break;
  6675                           
  6676                           ;wdg.c: 90: default:
  6677                           
  6678                           ;wdg.c: 87: break;
  6679  005B72  0012               	return	
  6680  005B74                     l2458:
  6681  005B74  0100               	movlb	0	; () banked
  6682  005B76  51D2               	movf	_SystemState& (0+255),w,b
  6683                           
  6684                           ; Switch size 1, requested type "space"
  6685                           ; Number of cases is 2, Range of values is 0 to 1
  6686                           ; switch strategies available:
  6687                           ; Name         Instructions Cycles
  6688                           ; simple_byte            7     4 (average)
  6689                           ;	Chosen strategy is simple_byte
  6690  005B78  0A00               	xorlw	0	; case 0
  6691  005B7A  B4D8               	btfsc	status,2,c
  6692  005B7C  D7F4               	goto	l2459
  6693  005B7E  0A01               	xorlw	1	; case 1
  6694  005B80  A4D8               	btfss	status,2,c
  6695  005B82  0012               	return	
  6696  005B84  D7F4               	goto	l2461
  6697  005B86                     __end_of_Wdg_MainTask:
  6698                           	opt stack 0
  6699                           tosu	equ	0xFFF
  6700                           tosh	equ	0xFFE
  6701                           tosl	equ	0xFFD
  6702                           pclath	equ	0xFFA
  6703                           tblptru	equ	0xFF8
  6704                           tblptrh	equ	0xFF7
  6705                           tblptrl	equ	0xFF6
  6706                           tablat	equ	0xFF5
  6707                           prodh	equ	0xFF4
  6708                           prodl	equ	0xFF3
  6709                           intcon	equ	0xFF2
  6710                           intcon2	equ	0xFF1
  6711                           intcon3	equ	0xFF0
  6712                           postinc0	equ	0xFEE
  6713                           plusw0	equ	0xFEB
  6714                           wreg	equ	0xFE8
  6715                           postinc1	equ	0xFE6
  6716                           postdec1	equ	0xFE5
  6717                           plusw1	equ	0xFE3
  6718                           fsr1h	equ	0xFE2
  6719                           fsr1l	equ	0xFE1
  6720                           indf2	equ	0xFDF
  6721                           postinc2	equ	0xFDE
  6722                           postdec2	equ	0xFDD
  6723                           plusw2	equ	0xFDB
  6724                           fsr2h	equ	0xFDA
  6725                           fsr2l	equ	0xFD9
  6726                           status	equ	0xFD8
  6727                           
  6728 ;; *************** function _Mcu_SetWdgSts *****************
  6729 ;; Defined at:
  6730 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  WdgSts          1    wreg     unsigned char 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1    wreg      void 
  6737 ;; Registers used:
  6738 ;;		wreg
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6745 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6747 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6748 ;;Total ram usage:        1 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:   11
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_Wdg_MainTask
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text26
  6759  005DCC                     __ptext26:
  6760                           	opt stack 0
  6761  005DCC                     _Mcu_SetWdgSts:
  6762                           	opt stack 16
  6763                           
  6764                           ;incstack = 0
  6765                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  6766  005DCC  0100               	movlb	0	; () banked
  6767  005DCE  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  6768                           
  6769                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  6770  005DD0  0100               	movlb	0	; () banked
  6771  005DD2  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  6772  005DD4  D002               	bra	u7925
  6773  005DD6  90C0               	bcf	4032,0,c	;volatile
  6774  005DD8  D001               	bra	u7926
  6775  005DDA                     u7925:
  6776  005DDA  80C0               	bsf	4032,0,c	;volatile
  6777  005DDC                     u7926:
  6778  005DDC  0012               	return		;funcret
  6779  005DDE                     __end_of_Mcu_SetWdgSts:
  6780                           	opt stack 0
  6781                           tosu	equ	0xFFF
  6782                           tosh	equ	0xFFE
  6783                           tosl	equ	0xFFD
  6784                           pclath	equ	0xFFA
  6785                           tblptru	equ	0xFF8
  6786                           tblptrh	equ	0xFF7
  6787                           tblptrl	equ	0xFF6
  6788                           tablat	equ	0xFF5
  6789                           prodh	equ	0xFF4
  6790                           prodl	equ	0xFF3
  6791                           intcon	equ	0xFF2
  6792                           intcon2	equ	0xFF1
  6793                           intcon3	equ	0xFF0
  6794                           postinc0	equ	0xFEE
  6795                           plusw0	equ	0xFEB
  6796                           wreg	equ	0xFE8
  6797                           postinc1	equ	0xFE6
  6798                           postdec1	equ	0xFE5
  6799                           plusw1	equ	0xFE3
  6800                           fsr1h	equ	0xFE2
  6801                           fsr1l	equ	0xFE1
  6802                           indf2	equ	0xFDF
  6803                           postinc2	equ	0xFDE
  6804                           postdec2	equ	0xFDD
  6805                           plusw2	equ	0xFDB
  6806                           fsr2h	equ	0xFDA
  6807                           fsr2l	equ	0xFD9
  6808                           status	equ	0xFD8
  6809                           
  6810 ;; *************** function _Mcu_ClearWdg *****************
  6811 ;; Defined at:
  6812 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		None
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:   11
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_Wdg_MainTask
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text27
  6841  005E9E                     __ptext27:
  6842                           	opt stack 0
  6843  005E9E                     _Mcu_ClearWdg:
  6844                           	opt stack 16
  6845                           
  6846                           ;incstack = 0
  6847  005E9E  0004               	clrwdt		;# 
  6848  005EA0  0012               	return		;funcret
  6849  005EA2                     __end_of_Mcu_ClearWdg:
  6850                           	opt stack 0
  6851                           tosu	equ	0xFFF
  6852                           tosh	equ	0xFFE
  6853                           tosl	equ	0xFFD
  6854                           pclath	equ	0xFFA
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           prodh	equ	0xFF4
  6860                           prodl	equ	0xFF3
  6861                           intcon	equ	0xFF2
  6862                           intcon2	equ	0xFF1
  6863                           intcon3	equ	0xFF0
  6864                           postinc0	equ	0xFEE
  6865                           plusw0	equ	0xFEB
  6866                           wreg	equ	0xFE8
  6867                           postinc1	equ	0xFE6
  6868                           postdec1	equ	0xFE5
  6869                           plusw1	equ	0xFE3
  6870                           fsr1h	equ	0xFE2
  6871                           fsr1l	equ	0xFE1
  6872                           indf2	equ	0xFDF
  6873                           postinc2	equ	0xFDE
  6874                           postdec2	equ	0xFDD
  6875                           plusw2	equ	0xFDB
  6876                           fsr2h	equ	0xFDA
  6877                           fsr2l	equ	0xFD9
  6878                           status	equ	0xFD8
  6879                           
  6880 ;; *************** function _USBDeviceTasks *****************
  6881 ;; Defined at:
  6882 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;		None
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  i               1   56[BANK0 ] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      void 
  6889 ;; Registers used:
  6890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6899 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6900 ;;Total ram usage:        1 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:   19
  6903 ;; This function calls:
  6904 ;;		_USBCtrlEPAllowStatusStage
  6905 ;;		_USBCtrlEPService
  6906 ;;		_USBDeviceInit
  6907 ;;		_USBIncrement1msInternalTimers
  6908 ;;		_USBStallHandler
  6909 ;;		_USBSuspend
  6910 ;;		_USBWakeFromSuspend
  6911 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6912 ;; This function is called by:
  6913 ;;		_UsbDevice_MainTask
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text28
  6918  001BAA                     __ptext28:
  6919                           	opt stack 0
  6920  001BAA                     _USBDeviceTasks:
  6921                           	opt stack 8
  6922                           
  6923                           ;usb_device.c: 562: }
  6924                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  6925                           
  6926                           ; BSR set to: 0
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;usb_device.c: 561: return;
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  6933                           
  6934                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  6935                           
  6936                           ;usb_device.c: 529: UIE = 0;
  6937                           
  6938                           ;usb_device.c: 524: {
  6939                           ;usb_device.c: 526: UCON = 0;
  6940                           
  6941                           ;usb_device.c: 497: uint8_t i;
  6942                           ;usb_device.c: 523: if (1 != 1)
  6943                           
  6944                           ;incstack = 0
  6945  001BAA  0100               	movlb	0	; () banked
  6946  001BAC  51CB               	movf	_USBDeviceState& (0+255),w,b
  6947  001BAE  A4D8               	btfss	status,2,c
  6948  001BB0  D012               	goto	l1598
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;usb_device.c: 585: {
  6952                           ;usb_device.c: 587: UCON = 0;
  6953  001BB2  0E00               	movlw	0
  6954  001BB4  6E65               	movwf	3941,c	;volatile
  6955                           
  6956                           ;usb_device.c: 590: UIE = 0;
  6957  001BB6  0E00               	movlw	0
  6958  001BB8  010F               	movlb	15	; () banked
  6959  001BBA  6F36               	movwf	54,b	;volatile
  6960                           
  6961                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6962  001BBC  0E16               	movlw	22
  6963  001BBE  6F39               	movwf	57,b	;volatile
  6964  001BC0  0E9F               	movlw	159
  6965  001BC2  6F37               	movwf	55,b	;volatile
  6966  001BC4  0E7B               	movlw	123
  6967  001BC6  6F36               	movwf	54,b	;volatile
  6968                           
  6969                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  6970  001BC8  D001               	goto	l1599
  6971  001BCA                     l1600:
  6972  001BCA  8665               	bsf	3941,3,c	;volatile
  6973  001BCC                     l1599:
  6974  001BCC  A665               	btfss	3941,3,c	;volatile
  6975  001BCE  D7FD               	goto	l1600
  6976                           
  6977                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  6978  001BD0  0E01               	movlw	1
  6979  001BD2  0100               	movlb	0	; () banked
  6980  001BD4  6FCB               	movwf	_USBDeviceState& (0+255),b
  6981  001BD6                     l1598:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;usb_device.c: 605: }
  6985                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  6986                           
  6987                           ; BSR set to: 0
  6988  001BD6  05CB               	decf	_USBDeviceState& (0+255),w,b
  6989  001BD8  B4D8               	btfsc	status,2,c
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;usb_device.c: 609: {
  6993                           ;usb_device.c: 619: if(!UCONbits.SE0)
  6994  001BDA  BA65               	btfsc	3941,5,c	;volatile
  6995  001BDC  D00A               	goto	l1603
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;usb_device.c: 620: {
  6999                           ;usb_device.c: 626: {UIR = 0;};
  7000  001BDE  0E00               	movlw	0
  7001  001BE0  6E62               	movwf	3938,c	;volatile
  7002                           
  7003                           ;usb_device.c: 630: UIE=0;
  7004  001BE2  0E00               	movlw	0
  7005  001BE4  010F               	movlb	15	; () banked
  7006  001BE6  6F36               	movwf	54,b	;volatile
  7007                           
  7008                           ; BSR set to: 15
  7009                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7010  001BE8  8136               	bsf	54,0,b	;volatile
  7011                           
  7012                           ; BSR set to: 15
  7013                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7014  001BEA  8936               	bsf	54,4,b	;volatile
  7015                           
  7016                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7017  001BEC  0E02               	movlw	2
  7018  001BEE  0100               	movlb	0	; () banked
  7019  001BF0  6FCB               	movwf	_USBDeviceState& (0+255),b
  7020  001BF2                     l1603:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;usb_device.c: 635: }
  7024                           ;usb_device.c: 636: }
  7025                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7026                           
  7027                           ; BSR set to: 0
  7028                           
  7029                           ; BSR set to: 0
  7030  001BF2  A462               	btfss	3938,2,c	;volatile
  7031  001BF4  D006               	goto	l1604
  7032                           
  7033                           ; BSR set to: 0
  7034  001BF6  010F               	movlb	15	; () banked
  7035  001BF8  A536               	btfss	54,2,b	;volatile
  7036  001BFA  D003               	goto	l1604
  7037                           
  7038                           ; BSR set to: 15
  7039                           ;usb_device.c: 653: {
  7040                           ;usb_device.c: 654: (UIR &= 0xFB);
  7041  001BFC  9462               	bcf	3938,2,c	;volatile
  7042                           
  7043                           ; BSR set to: 15
  7044                           ;usb_device.c: 658: USBWakeFromSuspend();
  7045  001BFE  ECF8  F02B         	call	_USBWakeFromSuspend	;wreg free
  7046  001C02                     l1604:
  7047                           
  7048                           ;usb_device.c: 660: }
  7049                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7050  001C02  A265               	btfss	3941,1,c	;volatile
  7051  001C04  D002               	goto	l1605
  7052                           
  7053                           ;usb_device.c: 666: {
  7054                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7055  001C06  98A1               	bcf	4001,4,c	;volatile
  7056                           
  7057                           ;usb_device.c: 668: return;
  7058  001C08  0012               	return	
  7059  001C0A                     l1605:
  7060                           
  7061                           ;usb_device.c: 669: }
  7062                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7063  001C0A  A062               	btfss	3938,0,c	;volatile
  7064  001C0C  D009               	goto	l1606
  7065  001C0E  010F               	movlb	15	; () banked
  7066  001C10  A136               	btfss	54,0,b	;volatile
  7067  001C12  D006               	goto	l1606
  7068                           
  7069                           ; BSR set to: 15
  7070                           ;usb_device.c: 682: {
  7071                           ;usb_device.c: 683: USBDeviceInit();
  7072  001C14  ECFF  F00F         	call	_USBDeviceInit	;wreg free
  7073                           
  7074                           ;usb_device.c: 687: ;
  7075                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7076  001C18  0E04               	movlw	4
  7077  001C1A  0100               	movlb	0	; () banked
  7078  001C1C  6FCB               	movwf	_USBDeviceState& (0+255),b
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;usb_device.c: 699: (UIR &= 0xFE);
  7082  001C1E  9062               	bcf	3938,0,c	;volatile
  7083  001C20                     l1606:
  7084                           
  7085                           ;usb_device.c: 700: }
  7086                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7087                           
  7088                           ; BSR set to: 0
  7089  001C20  A862               	btfss	3938,4,c	;volatile
  7090  001C22  D004               	goto	l1607
  7091  001C24  010F               	movlb	15	; () banked
  7092  001C26  B936               	btfsc	54,4,b	;volatile
  7093                           
  7094                           ; BSR set to: 15
  7095                           ;usb_device.c: 706: {
  7096                           ;usb_device.c: 712: USBSuspend();
  7097  001C28  EC67  F02C         	call	_USBSuspend	;wreg free
  7098  001C2C                     l1607:
  7099                           
  7100                           ;usb_device.c: 714: }
  7101                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7102  001C2C  AC62               	btfss	3938,6,c	;volatile
  7103  001C2E  D01D               	goto	l1611
  7104                           
  7105                           ;usb_device.c: 727: {
  7106                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7107  001C30  010F               	movlb	15	; () banked
  7108  001C32  AD36               	btfss	54,6,b	;volatile
  7109  001C34  D00F               	goto	l1609
  7110                           
  7111                           ; BSR set to: 15
  7112                           ;usb_device.c: 730: {
  7113                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7114  001C36  0E00               	movlw	0
  7115  001C38  0100               	movlb	0	; () banked
  7116  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7117  001C3C  0E73               	movlw	115
  7118  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7119  001C40  0E00               	movlw	0
  7120  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7121  001C44  0E00               	movlw	0
  7122  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7123  001C48  0E00               	movlw	0
  7124  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7125  001C4C  0E01               	movlw	1
  7126  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7127  001C50  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7128  001C54                     l1609:
  7129                           
  7130                           ;usb_device.c: 732: }
  7131                           ;usb_device.c: 733: (UIR &= 0xBF);
  7132  001C54  9C62               	bcf	3938,6,c	;volatile
  7133                           
  7134                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7135  001C56  ECC3  F02D         	call	_USBIncrement1msInternalTimers	;wreg free
  7136                           
  7137                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7138  001C5A  0100               	movlb	0	; () banked
  7139  001C5C  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7140  001C5E  A4D8               	btfss	status,2,c
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;usb_device.c: 754: {
  7144                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7145  001C60  07C7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;usb_device.c: 756: }
  7149                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7150                           
  7151                           ; BSR set to: 0
  7152  001C62  51C7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7153  001C64  B4D8               	btfsc	status,2,c
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;usb_device.c: 763: {
  7157                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7158  001C66  EC93  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7159  001C6A                     l1611:
  7160                           
  7161                           ;usb_device.c: 765: }
  7162                           ;usb_device.c: 767: }
  7163                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7164  001C6A  AA62               	btfss	3938,5,c	;volatile
  7165  001C6C  D004               	goto	l1612
  7166  001C6E  010F               	movlb	15	; () banked
  7167  001C70  BB36               	btfsc	54,5,b	;volatile
  7168                           
  7169                           ; BSR set to: 15
  7170                           ;usb_device.c: 770: {
  7171                           ;usb_device.c: 771: USBStallHandler();
  7172  001C72  EC93  F02A         	call	_USBStallHandler	;wreg free
  7173  001C76                     l1612:
  7174                           
  7175                           ;usb_device.c: 772: }
  7176                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7177  001C76  A262               	btfss	3938,1,c	;volatile
  7178  001C78  D013               	goto	l1613
  7179  001C7A  010F               	movlb	15	; () banked
  7180  001C7C  A336               	btfss	54,1,b	;volatile
  7181  001C7E  D010               	goto	l1613
  7182                           
  7183                           ; BSR set to: 15
  7184                           ;usb_device.c: 775: {
  7185                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7186  001C80  0E7F               	movlw	127
  7187  001C82  0100               	movlb	0	; () banked
  7188  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7189  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7190  001C88  0E00               	movlw	0
  7191  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7192  001C8C  0E00               	movlw	0
  7193  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7194  001C90  0E00               	movlw	0
  7195  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7196  001C94  0E01               	movlw	1
  7197  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7198  001C98  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7199                           
  7200                           ;usb_device.c: 777: {UEIR = 0;};
  7201  001C9C  0E00               	movlw	0
  7202  001C9E  6E63               	movwf	3939,c	;volatile
  7203  001CA0                     l1613:
  7204                           
  7205                           ;usb_device.c: 785: }
  7206                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7207  001CA0  0E04               	movlw	4
  7208  001CA2  0100               	movlb	0	; () banked
  7209  001CA4  61CB               	cpfslt	_USBDeviceState& (0+255),b
  7210  001CA6  D002               	goto	l1614
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;usb_device.c: 793: {
  7214                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7215  001CA8  98A1               	bcf	4001,4,c	;volatile
  7216                           
  7217                           ;usb_device.c: 795: return;
  7218  001CAA  0012               	return	
  7219  001CAC                     l1614:
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;usb_device.c: 796: }
  7223                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7224  001CAC  010F               	movlb	15	; () banked
  7225  001CAE  A736               	btfss	54,3,b	;volatile
  7226  001CB0  D03E               	goto	u12960
  7227                           
  7228                           ; BSR set to: 15
  7229                           ;usb_device.c: 802: {
  7230                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7231  001CB2  0E00               	movlw	0
  7232  001CB4  0100               	movlb	0	; () banked
  7233  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7234  001CB8                     l13569:
  7235                           
  7236                           ; BSR set to: 0
  7237  001CB8  0E03               	movlw	3
  7238  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7239  001CBC  D001               	goto	l1616
  7240  001CBE  D037               	goto	u12960
  7241  001CC0                     l1616:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;usb_device.c: 804: {
  7245                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7246  001CC0  A662               	btfss	3938,3,c	;volatile
  7247  001CC2  D035               	goto	u12960
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;usb_device.c: 806: {
  7251                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7252  001CC4  CF64 F0D3          	movff	3940,_USTATcopy	;volatile
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7256  001CC8  31D3               	rrcf	_USTATcopy& (0+255),w,b
  7257  001CCA  32E8               	rrcf	wreg,f,c
  7258  001CCC  32E8               	rrcf	wreg,f,c
  7259  001CCE  0B0F               	andlw	15
  7260  001CD0  6FC8               	movwf	_endpoint_number& (0+255),b
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;usb_device.c: 811: (UIR &= 0xF7);
  7264  001CD2  9662               	bcf	3938,3,c	;volatile
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7268  001CD4  B5D3               	btfsc	_USTATcopy& (0+255),2,b
  7269  001CD6  D007               	goto	l1619
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;usb_device.c: 817: {
  7273                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7274  001CD8  51C8               	movf	_endpoint_number& (0+255),w,b
  7275  001CDA  0D01               	mullw	1
  7276  001CDC  0ECE               	movlw	low _ep_data_out
  7277  001CDE  24F3               	addwf	prodl,w,c
  7278  001CE0  6ED9               	movwf	fsr2l,c
  7279  001CE2  0E02               	movlw	high _ep_data_out
  7280  001CE4  D007               	goto	L3
  7281  001CE6                     l1619:
  7282                           
  7283                           ;usb_device.c: 820: else
  7284                           ;usb_device.c: 821: {
  7285                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7286                           
  7287                           ; BSR set to: 2
  7288  001CE6  0100               	movlb	0	; () banked
  7289  001CE8  51C8               	movf	_endpoint_number& (0+255),w,b
  7290  001CEA  0D01               	mullw	1
  7291  001CEC  0ED1               	movlw	low _ep_data_in
  7292  001CEE  24F3               	addwf	prodl,w,c
  7293  001CF0  6ED9               	movwf	fsr2l,c
  7294  001CF2  0E02               	movlw	high _ep_data_in
  7295  001CF4                     L3:
  7296  001CF4  20F4               	addwfc	prodh,w,c
  7297  001CF6  6EDA               	movwf	fsr2h,c
  7298  001CF8  0102               	movlb	2	; () banked
  7299  001CFA  70DF               	btg	indf2,0,c
  7300                           
  7301                           ; BSR set to: 2
  7302                           ;usb_device.c: 823: }
  7303                           ;usb_device.c: 828: if(endpoint_number == 0)
  7304                           
  7305                           ; BSR set to: 2
  7306  001CFC  0100               	movlb	0	; () banked
  7307  001CFE  51C8               	movf	_endpoint_number& (0+255),w,b
  7308  001D00  A4D8               	btfss	status,2,c
  7309  001D02  D003               	goto	l1621
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;usb_device.c: 829: {
  7313                           ;usb_device.c: 830: USBCtrlEPService();
  7314  001D04  ECE7  F022         	call	_USBCtrlEPService	;wreg free
  7315                           
  7316                           ;usb_device.c: 831: }
  7317  001D08  D00F               	goto	l1623
  7318  001D0A                     l1621:
  7319                           
  7320                           ;usb_device.c: 832: else
  7321                           ;usb_device.c: 833: {
  7322                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7323  001D0A  0E00               	movlw	0
  7324  001D0C  0100               	movlb	0	; () banked
  7325  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7326  001D10  0E72               	movlw	114
  7327  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7328  001D14  0ED3               	movlw	low _USTATcopy
  7329  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7330  001D18  0E00               	movlw	high _USTATcopy
  7331  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7332  001D1C  0E00               	movlw	0
  7333  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7334  001D20  0E00               	movlw	0
  7335  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7336  001D24  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7337  001D28                     l1623:
  7338  001D28  0100               	movlb	0	; () banked
  7339  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7340  001D2C  D7C5               	goto	l13569
  7341  001D2E                     u12960:
  7342                           
  7343                           ;usb_device.c: 840: }
  7344                           ;usb_device.c: 841: }
  7345                           ;usb_device.c: 842: }
  7346                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7347                           
  7348                           ; BSR set to: 0
  7349  001D2E  98A1               	bcf	4001,4,c	;volatile
  7350  001D30  0012               	return		;funcret
  7351  001D32                     __end_of_USBDeviceTasks:
  7352                           	opt stack 0
  7353                           tosu	equ	0xFFF
  7354                           tosh	equ	0xFFE
  7355                           tosl	equ	0xFFD
  7356                           pclath	equ	0xFFA
  7357                           tblptru	equ	0xFF8
  7358                           tblptrh	equ	0xFF7
  7359                           tblptrl	equ	0xFF6
  7360                           tablat	equ	0xFF5
  7361                           prodh	equ	0xFF4
  7362                           prodl	equ	0xFF3
  7363                           intcon	equ	0xFF2
  7364                           intcon2	equ	0xFF1
  7365                           intcon3	equ	0xFF0
  7366                           postinc0	equ	0xFEE
  7367                           plusw0	equ	0xFEB
  7368                           wreg	equ	0xFE8
  7369                           postinc1	equ	0xFE6
  7370                           postdec1	equ	0xFE5
  7371                           plusw1	equ	0xFE3
  7372                           fsr1h	equ	0xFE2
  7373                           fsr1l	equ	0xFE1
  7374                           indf2	equ	0xFDF
  7375                           postinc2	equ	0xFDE
  7376                           postdec2	equ	0xFDD
  7377                           plusw2	equ	0xFDB
  7378                           fsr2h	equ	0xFDA
  7379                           fsr2l	equ	0xFD9
  7380                           status	equ	0xFD8
  7381                           
  7382 ;; *************** function _USBWakeFromSuspend *****************
  7383 ;; Defined at:
  7384 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:   15
  7405 ;; This function calls:
  7406 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7407 ;; This function is called by:
  7408 ;;		_USBDeviceTasks
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text29
  7413  0057F0                     __ptext29:
  7414                           	opt stack 0
  7415  0057F0                     _USBWakeFromSuspend:
  7416                           	opt stack 11
  7417                           
  7418                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7419                           
  7420                           ;incstack = 0
  7421  0057F0  0E00               	movlw	0
  7422  0057F2  0101               	movlb	1	; () banked
  7423  0057F4  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  7424                           
  7425                           ; BSR set to: 1
  7426                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7427  0057F6  0E00               	movlw	0
  7428  0057F8  0100               	movlb	0	; () banked
  7429  0057FA  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7430  0057FC  0E74               	movlw	116
  7431  0057FE  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7432  005800  0E00               	movlw	0
  7433  005802  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7434  005804  0E00               	movlw	0
  7435  005806  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7436  005808  0E00               	movlw	0
  7437  00580A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7438  00580C  0E00               	movlw	0
  7439  00580E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7440  005810  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7441                           
  7442                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7443  005814  9265               	bcf	3941,1,c	;volatile
  7444                           
  7445                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7446  005816  010F               	movlb	15	; () banked
  7447  005818  9536               	bcf	54,2,b	;volatile
  7448                           
  7449                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7450  00581A  D001               	goto	l1751
  7451  00581C                     
  7452                           ;usb_device.c: 2361: {
  7453                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7454                           
  7455                           ; BSR set to: 15
  7456  00581C  9462               	bcf	3938,2,c	;volatile
  7457  00581E                     l1751:
  7458  00581E  B462               	btfsc	3938,2,c	;volatile
  7459  005820  D7FD               	goto	l1752
  7460                           
  7461                           ;usb_device.c: 2363: }
  7462                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7463  005822  0E00               	movlw	0
  7464  005824  0101               	movlb	1	; () banked
  7465  005826  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7466                           
  7467                           ; BSR set to: 1
  7468  005828  0012               	return		;funcret
  7469  00582A                     __end_of_USBWakeFromSuspend:
  7470                           	opt stack 0
  7471                           tosu	equ	0xFFF
  7472                           tosh	equ	0xFFE
  7473                           tosl	equ	0xFFD
  7474                           pclath	equ	0xFFA
  7475                           tblptru	equ	0xFF8
  7476                           tblptrh	equ	0xFF7
  7477                           tblptrl	equ	0xFF6
  7478                           tablat	equ	0xFF5
  7479                           prodh	equ	0xFF4
  7480                           prodl	equ	0xFF3
  7481                           intcon	equ	0xFF2
  7482                           intcon2	equ	0xFF1
  7483                           intcon3	equ	0xFF0
  7484                           postinc0	equ	0xFEE
  7485                           plusw0	equ	0xFEB
  7486                           wreg	equ	0xFE8
  7487                           postinc1	equ	0xFE6
  7488                           postdec1	equ	0xFE5
  7489                           plusw1	equ	0xFE3
  7490                           fsr1h	equ	0xFE2
  7491                           fsr1l	equ	0xFE1
  7492                           indf2	equ	0xFDF
  7493                           postinc2	equ	0xFDE
  7494                           postdec2	equ	0xFDD
  7495                           plusw2	equ	0xFDB
  7496                           fsr2h	equ	0xFDA
  7497                           fsr2l	equ	0xFD9
  7498                           status	equ	0xFD8
  7499                           
  7500 ;; *************** function _USBSuspend *****************
  7501 ;; Defined at:
  7502 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;		None
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7520 ;;Total ram usage:        0 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:   15
  7523 ;; This function calls:
  7524 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7525 ;; This function is called by:
  7526 ;;		_USBDeviceTasks
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text30
  7531  0058CE                     __ptext30:
  7532                           	opt stack 0
  7533  0058CE                     _USBSuspend:
  7534                           	opt stack 11
  7535                           
  7536                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7537                           
  7538                           ; BSR set to: 1
  7539                           ;incstack = 0
  7540  0058CE  010F               	movlb	15	; () banked
  7541  0058D0  8536               	bsf	54,2,b	;volatile
  7542                           
  7543                           ; BSR set to: 15
  7544                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7545  0058D2  9862               	bcf	3938,4,c	;volatile
  7546                           
  7547                           ; BSR set to: 15
  7548                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7549  0058D4  8265               	bsf	3941,1,c	;volatile
  7550                           
  7551                           ; BSR set to: 15
  7552                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7553  0058D6  0E01               	movlw	1
  7554  0058D8  0101               	movlb	1	; () banked
  7555  0058DA  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  7556                           
  7557                           ; BSR set to: 1
  7558                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7559  0058DC  0E00               	movlw	0
  7560  0058DE  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7561                           
  7562                           ; BSR set to: 1
  7563                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7564  0058E0  0E00               	movlw	0
  7565  0058E2  0100               	movlb	0	; () banked
  7566  0058E4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7567  0058E6  0E75               	movlw	117
  7568  0058E8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7569  0058EA  0E00               	movlw	0
  7570  0058EC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7571  0058EE  0E00               	movlw	0
  7572  0058F0  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7573  0058F2  0E00               	movlw	0
  7574  0058F4  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7575  0058F6  0E00               	movlw	0
  7576  0058F8  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7577  0058FA  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7578  0058FE  0012               	return		;funcret
  7579  005900                     __end_of_USBSuspend:
  7580                           	opt stack 0
  7581                           tosu	equ	0xFFF
  7582                           tosh	equ	0xFFE
  7583                           tosl	equ	0xFFD
  7584                           pclath	equ	0xFFA
  7585                           tblptru	equ	0xFF8
  7586                           tblptrh	equ	0xFF7
  7587                           tblptrl	equ	0xFF6
  7588                           tablat	equ	0xFF5
  7589                           prodh	equ	0xFF4
  7590                           prodl	equ	0xFF3
  7591                           intcon	equ	0xFF2
  7592                           intcon2	equ	0xFF1
  7593                           intcon3	equ	0xFF0
  7594                           postinc0	equ	0xFEE
  7595                           plusw0	equ	0xFEB
  7596                           wreg	equ	0xFE8
  7597                           postinc1	equ	0xFE6
  7598                           postdec1	equ	0xFE5
  7599                           plusw1	equ	0xFE3
  7600                           fsr1h	equ	0xFE2
  7601                           fsr1l	equ	0xFE1
  7602                           indf2	equ	0xFDF
  7603                           postinc2	equ	0xFDE
  7604                           postdec2	equ	0xFDD
  7605                           plusw2	equ	0xFDB
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _USBStallHandler *****************
  7611 ;; Defined at:
  7612 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7629 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7630 ;;Total ram usage:        1 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:   11
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_USBDeviceTasks
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text31
  7641  005526                     __ptext31:
  7642                           	opt stack 0
  7643  005526                     _USBStallHandler:
  7644                           	opt stack 15
  7645                           
  7646                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7647                           
  7648                           ;incstack = 0
  7649  005526  010F               	movlb	15	; () banked
  7650  005528  A126               	btfss	38,0,b	;volatile
  7651  00552A  D01D               	goto	l1743
  7652                           
  7653                           ; BSR set to: 15
  7654                           ;usb_device.c: 2233: {
  7655                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7656  00552C  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7657  005530  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7658  005534  0E80               	movlw	128
  7659  005536  18DE               	xorwf	postinc2,w,c
  7660  005538  A4D8               	btfss	status,2,c
  7661  00553A  D014               	goto	l1744
  7662                           
  7663                           ; BSR set to: 15
  7664  00553C  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  7665  005540  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7666  005544  0E84               	movlw	132
  7667  005546  18DE               	xorwf	postinc2,w,c
  7668  005548  A4D8               	btfss	status,2,c
  7669  00554A  D00C               	goto	l1744
  7670                           
  7671                           ; BSR set to: 15
  7672                           ;usb_device.c: 2236: {
  7673                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7674  00554C  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7675  005550  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7676  005554  0E0C               	movlw	12
  7677  005556  6EDF               	movwf	indf2,c
  7678                           
  7679                           ; BSR set to: 15
  7680                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7681  005558  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7682  00555C  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7683  005560  0E00               	movlw	0
  7684  005562  8EDB               	bsf	plusw2,7,c
  7685  005564                     l1744:
  7686                           
  7687                           ; BSR set to: 15
  7688                           ;usb_device.c: 2240: }
  7689                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  7690                           
  7691                           ; BSR set to: 15
  7692  005564  9126               	bcf	38,0,b	;volatile
  7693  005566                     l1743:
  7694                           
  7695                           ; BSR set to: 15
  7696                           ;usb_device.c: 2242: }
  7697                           ;usb_device.c: 2244: (UIR &= 0xDF);
  7698  005566  9A62               	bcf	3938,5,c	;volatile
  7699                           
  7700                           ; BSR set to: 15
  7701  005568  0012               	return		;funcret
  7702  00556A                     __end_of_USBStallHandler:
  7703                           	opt stack 0
  7704                           tosu	equ	0xFFF
  7705                           tosh	equ	0xFFE
  7706                           tosl	equ	0xFFD
  7707                           pclath	equ	0xFFA
  7708                           tblptru	equ	0xFF8
  7709                           tblptrh	equ	0xFF7
  7710                           tblptrl	equ	0xFF6
  7711                           tablat	equ	0xFF5
  7712                           prodh	equ	0xFF4
  7713                           prodl	equ	0xFF3
  7714                           intcon	equ	0xFF2
  7715                           intcon2	equ	0xFF1
  7716                           intcon3	equ	0xFF0
  7717                           postinc0	equ	0xFEE
  7718                           plusw0	equ	0xFEB
  7719                           wreg	equ	0xFE8
  7720                           postinc1	equ	0xFE6
  7721                           postdec1	equ	0xFE5
  7722                           plusw1	equ	0xFE3
  7723                           fsr1h	equ	0xFE2
  7724                           fsr1l	equ	0xFE1
  7725                           indf2	equ	0xFDF
  7726                           postinc2	equ	0xFDE
  7727                           postdec2	equ	0xFDD
  7728                           plusw2	equ	0xFDB
  7729                           fsr2h	equ	0xFDA
  7730                           fsr2l	equ	0xFD9
  7731                           status	equ	0xFD8
  7732                           
  7733 ;; *************** function _USBIncrement1msInternalTimers *****************
  7734 ;; Defined at:
  7735 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;		None
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;		None
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  1    wreg      void 
  7742 ;; Registers used:
  7743 ;;		wreg, status,2, status,0
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7753 ;;Total ram usage:        0 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:   11
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_USBDeviceTasks
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text32
  7764  005B86                     __ptext32:
  7765                           	opt stack 0
  7766  005B86                     _USBIncrement1msInternalTimers:
  7767                           	opt stack 15
  7768                           
  7769                           ;usb_device.c: 3050: USB1msTickCount++;
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;incstack = 0
  7773  005B86  0E01               	movlw	1
  7774  005B88  0103               	movlb	3	; () banked
  7775  005B8A  2718               	addwf	_USB1msTickCount& (0+255),f,b
  7776  005B8C  0E00               	movlw	0
  7777  005B8E  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  7778  005B90  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  7779  005B92  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  7780                           
  7781                           ; BSR set to: 3
  7782                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  7783  005B94  0101               	movlb	1	; () banked
  7784  005B96  51E6               	movf	_USBBusIsSuspended& (0+255),w,b
  7785  005B98  A4D8               	btfss	status,2,c
  7786  005B9A  0012               	return	
  7787                           
  7788                           ; BSR set to: 1
  7789                           ;usb_device.c: 3052: {
  7790                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  7791  005B9C  2BE4               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  7792                           
  7793                           ; BSR set to: 1
  7794                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  7795  005B9E  51E4               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  7796  005BA0  A4D8               	btfss	status,2,c
  7797  005BA2  0012               	return	
  7798                           
  7799                           ; BSR set to: 1
  7800                           ;usb_device.c: 3056: {
  7801                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  7802  005BA4  69E4               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  7803                           
  7804                           ; BSR set to: 1
  7805  005BA6  0012               	return	
  7806  005BA8                     __end_of_USBIncrement1msInternalTimers:
  7807                           	opt stack 0
  7808                           tosu	equ	0xFFF
  7809                           tosh	equ	0xFFE
  7810                           tosl	equ	0xFFD
  7811                           pclath	equ	0xFFA
  7812                           tblptru	equ	0xFF8
  7813                           tblptrh	equ	0xFF7
  7814                           tblptrl	equ	0xFF6
  7815                           tablat	equ	0xFF5
  7816                           prodh	equ	0xFF4
  7817                           prodl	equ	0xFF3
  7818                           intcon	equ	0xFF2
  7819                           intcon2	equ	0xFF1
  7820                           intcon3	equ	0xFF0
  7821                           postinc0	equ	0xFEE
  7822                           plusw0	equ	0xFEB
  7823                           wreg	equ	0xFE8
  7824                           postinc1	equ	0xFE6
  7825                           postdec1	equ	0xFE5
  7826                           plusw1	equ	0xFE3
  7827                           fsr1h	equ	0xFE2
  7828                           fsr1l	equ	0xFE1
  7829                           indf2	equ	0xFDF
  7830                           postinc2	equ	0xFDE
  7831                           postdec2	equ	0xFDD
  7832                           plusw2	equ	0xFDB
  7833                           fsr2h	equ	0xFDA
  7834                           fsr2l	equ	0xFD9
  7835                           status	equ	0xFD8
  7836                           
  7837 ;; *************** function _USBDeviceInit *****************
  7838 ;; Defined at:
  7839 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  i               1   37[BANK0 ] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7857 ;;Total ram usage:        1 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:   12
  7860 ;; This function calls:
  7861 ;;		_memset
  7862 ;; This function is called by:
  7863 ;;		_USBDeviceTasks
  7864 ;;		_UsbDevice_MainTask
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text33
  7869  001FFE                     __ptext33:
  7870                           	opt stack 0
  7871  001FFE                     _USBDeviceInit:
  7872                           	opt stack 14
  7873                           
  7874                           ;usb_device.c: 297: uint8_t i;
  7875                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  7876                           
  7877                           ; BSR set to: 1
  7878                           ;incstack = 0
  7879  001FFE  98A0               	bcf	4000,4,c	;volatile
  7880                           
  7881                           ;usb_device.c: 303: ;
  7882                           ;usb_device.c: 306: {UEIR = 0;};
  7883  002000  0E00               	movlw	0
  7884  002002  6E63               	movwf	3939,c	;volatile
  7885                           
  7886                           ;usb_device.c: 309: {UIR = 0;};
  7887  002004  0E00               	movlw	0
  7888  002006  6E62               	movwf	3938,c	;volatile
  7889                           
  7890                           ;usb_device.c: 312: UEP0 = 0;
  7891  002008  0E00               	movlw	0
  7892  00200A  010F               	movlb	15	; () banked
  7893  00200C  6F26               	movwf	38,b	;volatile
  7894                           
  7895                           ; BSR set to: 15
  7896                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  7897  00200E  0E27               	movlw	39
  7898  002010  0100               	movlb	0	; () banked
  7899  002012  6F7D               	movwf	memset@p1& (0+255),b
  7900  002014  0E0F               	movlw	15
  7901  002016  6F7E               	movwf	(memset@p1+1)& (0+255),b
  7902  002018  0E00               	movlw	0
  7903  00201A  6F80               	movwf	(memset@c+1)& (0+255),b
  7904  00201C  0E00               	movlw	0
  7905  00201E  6F7F               	movwf	memset@c& (0+255),b
  7906  002020  0E00               	movlw	0
  7907  002022  6F82               	movwf	(memset@n+1)& (0+255),b
  7908  002024  0E02               	movlw	2
  7909  002026  6F81               	movwf	memset@n& (0+255),b
  7910  002028  ECB1  F02C         	call	_memset	;wreg free
  7911                           
  7912                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7913  00202C  0E16               	movlw	22
  7914  00202E  010F               	movlb	15	; () banked
  7915  002030  6F39               	movwf	57,b	;volatile
  7916                           
  7917                           ; BSR set to: 15
  7918  002032  0E9F               	movlw	159
  7919  002034  6F37               	movwf	55,b	;volatile
  7920                           
  7921                           ; BSR set to: 15
  7922  002036  0E7B               	movlw	123
  7923  002038  6F36               	movwf	54,b	;volatile
  7924                           
  7925                           ; BSR set to: 15
  7926                           ;usb_device.c: 319: ;
  7927                           ;usb_device.c: 322: ;
  7928                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7929  00203A  0E00               	movlw	0
  7930  00203C  0100               	movlb	0	; () banked
  7931  00203E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  7932  002040                     l12483:
  7933                           
  7934                           ; BSR set to: 0
  7935  002040  0E0B               	movlw	11
  7936  002042  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  7937  002044  D001               	goto	l1587
  7938  002046  D00E               	goto	u11440
  7939  002048                     l1587:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;usb_device.c: 326: {
  7943                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  7944                           
  7945                           ; BSR set to: 0
  7946  002048  5185               	movf	USBDeviceInit@i& (0+255),w,b
  7947  00204A  0D04               	mullw	4
  7948  00204C  0E00               	movlw	0
  7949  00204E  24F3               	addwf	prodl,w,c
  7950  002050  6ED9               	movwf	fsr2l,c
  7951  002052  0E04               	movlw	4
  7952  002054  20F4               	addwfc	prodh,w,c
  7953  002056  6EDA               	movwf	fsr2h,c
  7954  002058  6ADE               	clrf	postinc2,c
  7955  00205A  6ADE               	clrf	postinc2,c
  7956  00205C  6ADE               	clrf	postinc2,c
  7957  00205E  6ADD               	clrf	postdec2,c
  7958                           
  7959                           ; BSR set to: 0
  7960  002060  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  7961  002062  D7EE               	goto	l12483
  7962  002064                     u11440:
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;usb_device.c: 328: }
  7966                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  7967  002064  8C65               	bsf	3941,6,c	;volatile
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;usb_device.c: 334: UADDR = 0x00;
  7971  002066  0E00               	movlw	0
  7972  002068  010F               	movlb	15	; () banked
  7973  00206A  6F38               	movwf	56,b	;volatile
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  7977  00206C  9865               	bcf	3941,4,c	;volatile
  7978                           
  7979                           ; BSR set to: 15
  7980                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  7981  00206E  9C65               	bcf	3941,6,c	;volatile
  7982  002070                     
  7983                           ;usb_device.c: 344: {
  7984                           ;usb_device.c: 345: (UIR &= 0xF7);
  7985                           
  7986                           ; BSR set to: 15
  7987  002070  9662               	bcf	3938,3,c	;volatile
  7988                           
  7989                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  7990  002072  0E00               	movlw	0
  7991  002074  0100               	movlb	0	; () banked
  7992  002076  6FAF               	movwf	(_inPipes+3)& (0+255),b
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  7996  002078  0E00               	movlw	0
  7997  00207A  0101               	movlb	1	; () banked
  7998  00207C  6FCC               	movwf	(_outPipes+3)& (0+255),b
  7999                           
  8000                           ; BSR set to: 1
  8001                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8002  00207E  0E00               	movlw	0
  8003  002080  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8004  002082  0E00               	movlw	0
  8005  002084  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8006                           
  8007                           ; BSR set to: 1
  8008                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8009  002086  B662               	btfsc	3938,3,c	;volatile
  8010  002088  D7F3               	goto	l1589
  8011                           
  8012                           ; BSR set to: 1
  8013                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8014                           
  8015                           ; BSR set to: 1
  8016  00208A  0E01               	movlw	1
  8017  00208C  0100               	movlb	0	; () banked
  8018  00208E  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8019                           
  8020                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8021  002090  0E01               	movlw	1
  8022  002092  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8023                           
  8024                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8025  002094  0E00               	movlw	0
  8026  002096  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8027                           
  8028                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8029  002098  0E00               	movlw	0
  8030  00209A  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8031                           
  8032                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8033  00209C  0E00               	movlw	0
  8034  00209E  0101               	movlb	1	; () banked
  8035  0020A0  6FE6               	movwf	_USBBusIsSuspended& (0+255),b
  8036                           
  8037                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8038  0020A2  0E00               	movlw	0
  8039  0020A4  0100               	movlb	0	; () banked
  8040  0020A6  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8041  0020A8                     l12511:
  8042                           
  8043                           ; BSR set to: 0
  8044  0020A8  0E02               	movlw	2
  8045  0020AA  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8046  0020AC  D001               	goto	l1591
  8047  0020AE  D02E               	goto	u11470
  8048  0020B0                     l1591:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;usb_device.c: 364: {
  8052                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8053                           
  8054                           ; BSR set to: 0
  8055  0020B0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8056  0020B2  0D02               	mullw	2
  8057  0020B4  0EB2               	movlw	low _pBDTEntryIn
  8058  0020B6  24F3               	addwf	prodl,w,c
  8059  0020B8  6ED9               	movwf	fsr2l,c
  8060  0020BA  0E00               	movlw	high _pBDTEntryIn
  8061  0020BC  20F4               	addwfc	prodh,w,c
  8062  0020BE  6EDA               	movwf	fsr2h,c
  8063  0020C0  0E00               	movlw	0
  8064  0020C2  6EDE               	movwf	postinc2,c
  8065  0020C4  0E00               	movlw	0
  8066  0020C6  6EDD               	movwf	postdec2,c
  8067                           
  8068                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8069  0020C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8070  0020CA  0D02               	mullw	2
  8071  0020CC  0E0E               	movlw	low _pBDTEntryOut
  8072  0020CE  24F3               	addwf	prodl,w,c
  8073  0020D0  6ED9               	movwf	fsr2l,c
  8074  0020D2  0E03               	movlw	high _pBDTEntryOut
  8075  0020D4  20F4               	addwfc	prodh,w,c
  8076  0020D6  6EDA               	movwf	fsr2h,c
  8077  0020D8  0E00               	movlw	0
  8078  0020DA  6EDE               	movwf	postinc2,c
  8079  0020DC  0E00               	movlw	0
  8080  0020DE  6EDD               	movwf	postdec2,c
  8081                           
  8082                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8083  0020E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8084  0020E2  0D01               	mullw	1
  8085  0020E4  0ED1               	movlw	low _ep_data_in
  8086  0020E6  24F3               	addwf	prodl,w,c
  8087  0020E8  6ED9               	movwf	fsr2l,c
  8088  0020EA  0E02               	movlw	high _ep_data_in
  8089  0020EC  20F4               	addwfc	prodh,w,c
  8090  0020EE  6EDA               	movwf	fsr2h,c
  8091  0020F0  0E00               	movlw	0
  8092  0020F2  6EDF               	movwf	indf2,c
  8093                           
  8094                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8095  0020F4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8096  0020F6  0D01               	mullw	1
  8097  0020F8  0ECE               	movlw	low _ep_data_out
  8098  0020FA  24F3               	addwf	prodl,w,c
  8099  0020FC  6ED9               	movwf	fsr2l,c
  8100  0020FE  0E02               	movlw	high _ep_data_out
  8101  002100  20F4               	addwfc	prodh,w,c
  8102  002102  6EDA               	movwf	fsr2h,c
  8103  002104  0E00               	movlw	0
  8104  002106  6EDF               	movwf	indf2,c
  8105                           
  8106                           ; BSR set to: 0
  8107  002108  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8108  00210A  D7CE               	goto	l12511
  8109  00210C                     u11470:
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;usb_device.c: 369: }
  8113                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8114                           
  8115                           ; BSR set to: 0
  8116  00210C  0E08               	movlw	8
  8117  00210E  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  8118  002110  0E04               	movlw	4
  8119  002112  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8123  002114  0E16               	movlw	22
  8124  002116  010F               	movlb	15	; () banked
  8125  002118  6F26               	movwf	38,b	;volatile
  8126                           
  8127                           ; BSR set to: 15
  8128                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8129  00211A  0E04               	movlw	4
  8130  00211C  0104               	movlb	4	; () banked
  8131  00211E  6F03               	movwf	3,b	;volatile
  8132  002120  0E30               	movlw	48
  8133  002122  6F02               	movwf	2,b	;volatile
  8134                           
  8135                           ; BSR set to: 4
  8136                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8137  002124  0E08               	movlw	8
  8138  002126  6F01               	movwf	1,b	;volatile
  8139                           
  8140                           ; BSR set to: 4
  8141                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8142  002128  0E04               	movlw	4
  8143  00212A  6F00               	movwf	0,b	;volatile
  8144                           
  8145                           ; BSR set to: 4
  8146                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8147  00212C  8F00               	bsf	0,7,b	;volatile
  8148                           
  8149                           ; BSR set to: 4
  8150                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8151  00212E  0E00               	movlw	0
  8152  002130  0100               	movlb	0	; () banked
  8153  002132  6FD4               	movwf	_USBActiveConfiguration& (0+255),b
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;usb_device.c: 384: USB1msTickCount = 0;
  8157  002134  0E00               	movlw	0
  8158  002136  0103               	movlb	3	; () banked
  8159  002138  6F18               	movwf	_USB1msTickCount& (0+255),b
  8160  00213A  0E00               	movlw	0
  8161  00213C  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8162  00213E  0E00               	movlw	0
  8163  002140  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8164  002142  0E00               	movlw	0
  8165  002144  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8166                           
  8167                           ; BSR set to: 3
  8168                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8169  002146  0E00               	movlw	0
  8170  002148  0101               	movlb	1	; () banked
  8171  00214A  6FE4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8172                           
  8173                           ; BSR set to: 1
  8174                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8175  00214C  0E00               	movlw	0
  8176  00214E  0100               	movlb	0	; () banked
  8177  002150  6FCB               	movwf	_USBDeviceState& (0+255),b
  8178                           
  8179                           ; BSR set to: 0
  8180  002152  0012               	return		;funcret
  8181  002154                     __end_of_USBDeviceInit:
  8182                           	opt stack 0
  8183                           tosu	equ	0xFFF
  8184                           tosh	equ	0xFFE
  8185                           tosl	equ	0xFFD
  8186                           pclath	equ	0xFFA
  8187                           tblptru	equ	0xFF8
  8188                           tblptrh	equ	0xFF7
  8189                           tblptrl	equ	0xFF6
  8190                           tablat	equ	0xFF5
  8191                           prodh	equ	0xFF4
  8192                           prodl	equ	0xFF3
  8193                           intcon	equ	0xFF2
  8194                           intcon2	equ	0xFF1
  8195                           intcon3	equ	0xFF0
  8196                           postinc0	equ	0xFEE
  8197                           plusw0	equ	0xFEB
  8198                           wreg	equ	0xFE8
  8199                           postinc1	equ	0xFE6
  8200                           postdec1	equ	0xFE5
  8201                           plusw1	equ	0xFE3
  8202                           fsr1h	equ	0xFE2
  8203                           fsr1l	equ	0xFE1
  8204                           indf2	equ	0xFDF
  8205                           postinc2	equ	0xFDE
  8206                           postdec2	equ	0xFDD
  8207                           plusw2	equ	0xFDB
  8208                           fsr2h	equ	0xFDA
  8209                           fsr2l	equ	0xFD9
  8210                           status	equ	0xFD8
  8211                           
  8212 ;; *************** function _USBCtrlEPService *****************
  8213 ;; Defined at:
  8214 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      void 
  8221 ;; Registers used:
  8222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8231 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8232 ;;Total ram usage:        1 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:   18
  8235 ;; This function calls:
  8236 ;;		_USBCtrlTrfInHandler
  8237 ;;		_USBCtrlTrfOutHandler
  8238 ;;		_USBCtrlTrfSetupHandler
  8239 ;;		_memcpy
  8240 ;; This function is called by:
  8241 ;;		_USBDeviceTasks
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text34
  8246  0045CE                     __ptext34:
  8247                           	opt stack 0
  8248  0045CE                     _USBCtrlEPService:
  8249                           	opt stack 8
  8250                           
  8251                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8252                           
  8253                           ; BSR set to: 0
  8254                           ;incstack = 0
  8255  0045CE  0E2D               	movlw	45
  8256  0045D0  0100               	movlb	0	; () banked
  8257  0045D2  6FC7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8261  0045D4  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8262  0045D8  0EFD               	movlw	253
  8263  0045DA  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8264  0045DC  A4D8               	btfss	status,2,c
  8265  0045DE  D038               	goto	l1757
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;usb_device.c: 2401: {
  8269                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8270  0045E0  C0D3  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8271  0045E4  90D8               	bcf	status,0,c
  8272  0045E6  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8273  0045E8  0E3F               	movlw	63
  8274  0045EA  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8275  0045EC  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8276  0045EE  0D04               	mullw	4
  8277  0045F0  0E00               	movlw	0
  8278  0045F2  24F3               	addwf	prodl,w,c
  8279  0045F4  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8280  0045F6  0E04               	movlw	4
  8281  0045F8  20F4               	addwfc	prodh,w,c
  8282  0045FA  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8286  0045FC  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8287  004600  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8291  004604  0E04               	movlw	4
  8292  004606  1BBA               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8296  004608  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8297  00460C  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8298  004610  30DF               	rrcf	223,w,c
  8299  004612  32E8               	rrcf	wreg,f,c
  8300  004614  0B0F               	andlw	15
  8301  004616  0A0D               	xorlw	13
  8302  004618  A4D8               	btfss	status,2,c
  8303  00461A  D017               	goto	l1758
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;usb_device.c: 2418: {
  8307                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8308  00461C  0E30               	movlw	48
  8309  00461E  6F7D               	movwf	memcpy@d1& (0+255),b
  8310  004620  0E04               	movlw	4
  8311  004622  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8312  004624  EE20 F002          	lfsr	2,2
  8313  004628  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8314  00462A  26D9               	addwf	fsr2l,f,c
  8315  00462C  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8316  00462E  22DA               	addwfc	fsr2h,f,c
  8317  004630  CFDE F07F          	movff	postinc2,memcpy@s1
  8318  004634  CFDD F080          	movff	postdec2,memcpy@s1+1
  8319  004638  0E00               	movlw	0
  8320  00463A  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8321  00463C  0E08               	movlw	8
  8322  00463E  6F81               	movwf	memcpy@n& (0+255),b
  8323  004640  EC05  F02A         	call	_memcpy	;wreg free
  8324                           
  8325                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8326  004644  EC0A  F024         	call	_USBCtrlTrfSetupHandler	;wreg free
  8327                           
  8328                           ;usb_device.c: 2427: }
  8329  004648  0012               	return	
  8330  00464A                     l1758:
  8331                           
  8332                           ;usb_device.c: 2428: else
  8333                           ;usb_device.c: 2429: {
  8334                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8335  00464A  EC6E  F026         	call	_USBCtrlTrfOutHandler	;wreg free
  8336                           
  8337                           ;usb_device.c: 2432: }
  8338                           ;usb_device.c: 2433: }
  8339  00464E  0012               	return	
  8340  004650                     l1757:
  8341                           
  8342                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8343  004650  0100               	movlb	0	; () banked
  8344  004652  51D3               	movf	_USTATcopy& (0+255),w,b
  8345  004654  0BFD               	andlw	253
  8346  004656  0A04               	xorlw	4
  8347  004658  A4D8               	btfss	status,2,c
  8348  00465A  0012               	return	
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;usb_device.c: 2435: {
  8352                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8353  00465C  EC51  F01E         	call	_USBCtrlTrfInHandler	;wreg free
  8354  004660  0012               	return	
  8355  004662                     __end_of_USBCtrlEPService:
  8356                           	opt stack 0
  8357                           tosu	equ	0xFFF
  8358                           tosh	equ	0xFFE
  8359                           tosl	equ	0xFFD
  8360                           pclath	equ	0xFFA
  8361                           tblptru	equ	0xFF8
  8362                           tblptrh	equ	0xFF7
  8363                           tblptrl	equ	0xFF6
  8364                           tablat	equ	0xFF5
  8365                           prodh	equ	0xFF4
  8366                           prodl	equ	0xFF3
  8367                           intcon	equ	0xFF2
  8368                           intcon2	equ	0xFF1
  8369                           intcon3	equ	0xFF0
  8370                           postinc0	equ	0xFEE
  8371                           plusw0	equ	0xFEB
  8372                           wreg	equ	0xFE8
  8373                           postinc1	equ	0xFE6
  8374                           postdec1	equ	0xFE5
  8375                           plusw1	equ	0xFE3
  8376                           fsr1h	equ	0xFE2
  8377                           fsr1l	equ	0xFE1
  8378                           indf2	equ	0xFDF
  8379                           postinc2	equ	0xFDE
  8380                           postdec2	equ	0xFDD
  8381                           plusw2	equ	0xFDB
  8382                           fsr2h	equ	0xFDA
  8383                           fsr2l	equ	0xFD9
  8384                           status	equ	0xFD8
  8385                           
  8386 ;; *************** function _memcpy *****************
  8387 ;; Defined at:
  8388 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  d1              2   29[BANK0 ] PTR void 
  8391 ;;		 -> SetupPkt(8), 
  8392 ;;  s1              2   31[BANK0 ] PTR const void 
  8393 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8394 ;;  n               2   33[BANK0 ] unsigned int 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  8397 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8398 ;;  d               2   35[BANK0 ] PTR unsigned char 
  8399 ;;		 -> SetupPkt(8), 
  8400 ;;  tmp             1   39[BANK0 ] unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  2   29[BANK0 ] PTR void 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8410 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8414 ;;Total ram usage:       11 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:   11
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_USBCtrlEPService
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text35
  8425  00540A                     __ptext35:
  8426                           	opt stack 0
  8427  00540A                     _memcpy:
  8428                           	opt stack 14
  8429                           
  8430                           ;incstack = 0
  8431  00540A  C07F  F085         	movff	memcpy@s1,memcpy@s
  8432  00540E  C080  F086         	movff	memcpy@s1+1,memcpy@s+1
  8433  005412  C07D  F083         	movff	memcpy@d1,memcpy@d
  8434  005416  C07E  F084         	movff	memcpy@d1+1,memcpy@d+1
  8435  00541A  D011               	goto	l3038
  8436  00541C                     l8431:
  8437  00541C  C085  FFD9         	movff	memcpy@s,fsr2l
  8438  005420  C086  FFDA         	movff	memcpy@s+1,fsr2h
  8439  005424  50DF               	movf	indf2,w,c
  8440  005426  0100               	movlb	0	; () banked
  8441  005428  6F87               	movwf	memcpy@tmp& (0+255),b
  8442                           
  8443                           ; BSR set to: 0
  8444  00542A  4B85               	infsnz	memcpy@s& (0+255),f,b
  8445  00542C  2B86               	incf	(memcpy@s+1)& (0+255),f,b
  8446                           
  8447                           ; BSR set to: 0
  8448  00542E  C083  FFD9         	movff	memcpy@d,fsr2l
  8449  005432  C084  FFDA         	movff	memcpy@d+1,fsr2h
  8450  005436  C087  FFDF         	movff	memcpy@tmp,indf2
  8451                           
  8452                           ; BSR set to: 0
  8453  00543A  4B83               	infsnz	memcpy@d& (0+255),f,b
  8454  00543C  2B84               	incf	(memcpy@d+1)& (0+255),f,b
  8455  00543E                     l3038:
  8456                           
  8457                           ; BSR set to: 0
  8458  00543E  0100               	movlb	0	; () banked
  8459  005440  0781               	decf	memcpy@n& (0+255),f,b
  8460  005442  A0D8               	btfss	status,0,c
  8461  005444  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8462  005446  2981               	incf	memcpy@n& (0+255),w,b
  8463  005448  E1E9               	bnz	l8431
  8464  00544A  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8465  00544C  B4D8               	btfsc	status,2,c
  8466  00544E  0012               	return	
  8467  005450  D7E5               	goto	l3039
  8468  005452                     __end_of_memcpy:
  8469                           	opt stack 0
  8470                           tosu	equ	0xFFF
  8471                           tosh	equ	0xFFE
  8472                           tosl	equ	0xFFD
  8473                           pclath	equ	0xFFA
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           intcon	equ	0xFF2
  8481                           intcon2	equ	0xFF1
  8482                           intcon3	equ	0xFF0
  8483                           postinc0	equ	0xFEE
  8484                           plusw0	equ	0xFEB
  8485                           wreg	equ	0xFE8
  8486                           postinc1	equ	0xFE6
  8487                           postdec1	equ	0xFE5
  8488                           plusw1	equ	0xFE3
  8489                           fsr1h	equ	0xFE2
  8490                           fsr1l	equ	0xFE1
  8491                           indf2	equ	0xFDF
  8492                           postinc2	equ	0xFDE
  8493                           postdec2	equ	0xFDD
  8494                           plusw2	equ	0xFDB
  8495                           fsr2h	equ	0xFDA
  8496                           fsr2l	equ	0xFD9
  8497                           status	equ	0xFD8
  8498                           
  8499 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8500 ;; Defined at:
  8501 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8519 ;;Total ram usage:        0 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:   17
  8522 ;; This function calls:
  8523 ;;		_USBCheckStdRequest
  8524 ;;		_USBCtrlEPServiceComplete
  8525 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8526 ;; This function is called by:
  8527 ;;		_USBCtrlEPService
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text36
  8532  004814                     __ptext36:
  8533                           	opt stack 0
  8534  004814                     _USBCtrlTrfSetupHandler:
  8535                           	opt stack 8
  8536                           
  8537                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;incstack = 0
  8541  004814  0E00               	movlw	0
  8542  004816  0100               	movlb	0	; () banked
  8543  004818  6FCA               	movwf	_shortPacketStatus& (0+255),b
  8544                           
  8545                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8546  00481A  0E00               	movlw	0
  8547  00481C  6FC6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8548                           
  8549                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8550  00481E  0E00               	movlw	0
  8551  004820  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8552                           
  8553                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8554  004822  0E00               	movlw	0
  8555  004824  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8556                           
  8557                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8558  004826  0E00               	movlw	0
  8559  004828  0101               	movlb	1	; () banked
  8560  00482A  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8561                           
  8562                           ;usb_device.c: 2493: controlTransferState = 0;
  8563  00482C  0E00               	movlw	0
  8564  00482E  0100               	movlb	0	; () banked
  8565  004830  6FC9               	movwf	_controlTransferState& (0+255),b
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8569  004832  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8570  004836  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8571  00483A  0E7F               	movlw	127
  8572  00483C  16DF               	andwf	indf2,f,c
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8576  00483E  0E04               	movlw	4
  8577  004840  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8581  004842  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8582  004846  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8583  00484A  0E7F               	movlw	127
  8584  00484C  16DF               	andwf	indf2,f,c
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8588  00484E  0E04               	movlw	4
  8589  004850  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8593  004852  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8594  004856  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8595  00485A  0E7F               	movlw	127
  8596  00485C  16DF               	andwf	indf2,f,c
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8600  00485E  0E00               	movlw	0
  8601  004860  6FAF               	movwf	(_inPipes+3)& (0+255),b
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8605  004862  0E00               	movlw	0
  8606  004864  6FB1               	movwf	(_inPipes+5)& (0+255),b
  8607  004866  0E00               	movlw	0
  8608  004868  6FB0               	movwf	(_inPipes+4)& (0+255),b
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8612  00486A  0E00               	movlw	0
  8613  00486C  0101               	movlb	1	; () banked
  8614  00486E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8615                           
  8616                           ; BSR set to: 1
  8617                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8618  004870  0E00               	movlw	0
  8619  004872  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8620  004874  0E00               	movlw	0
  8621  004876  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8622                           
  8623                           ; BSR set to: 1
  8624                           ;usb_device.c: 2517: USBCheckStdRequest();
  8625  004878  EC7C  F019         	call	_USBCheckStdRequest	;wreg free
  8626                           
  8627                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8628  00487C  0E00               	movlw	0
  8629  00487E  0100               	movlb	0	; () banked
  8630  004880  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8631  004882  0E03               	movlw	3
  8632  004884  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8633  004886  0E00               	movlw	0
  8634  004888  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8635  00488A  0E00               	movlw	0
  8636  00488C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8637  00488E  0E00               	movlw	0
  8638  004890  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8639  004892  0E00               	movlw	0
  8640  004894  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8641  004896  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8642                           
  8643                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8644  00489A  ECB7  F016         	call	_USBCtrlEPServiceComplete	;wreg free
  8645  00489E  0012               	return		;funcret
  8646  0048A0                     __end_of_USBCtrlTrfSetupHandler:
  8647                           	opt stack 0
  8648                           tosu	equ	0xFFF
  8649                           tosh	equ	0xFFE
  8650                           tosl	equ	0xFFD
  8651                           pclath	equ	0xFFA
  8652                           tblptru	equ	0xFF8
  8653                           tblptrh	equ	0xFF7
  8654                           tblptrl	equ	0xFF6
  8655                           tablat	equ	0xFF5
  8656                           prodh	equ	0xFF4
  8657                           prodl	equ	0xFF3
  8658                           intcon	equ	0xFF2
  8659                           intcon2	equ	0xFF1
  8660                           intcon3	equ	0xFF0
  8661                           postinc0	equ	0xFEE
  8662                           plusw0	equ	0xFEB
  8663                           wreg	equ	0xFE8
  8664                           postinc1	equ	0xFE6
  8665                           postdec1	equ	0xFE5
  8666                           plusw1	equ	0xFE3
  8667                           fsr1h	equ	0xFE2
  8668                           fsr1l	equ	0xFE1
  8669                           indf2	equ	0xFDF
  8670                           postinc2	equ	0xFDE
  8671                           postdec2	equ	0xFDD
  8672                           plusw2	equ	0xFDB
  8673                           fsr2h	equ	0xFDA
  8674                           fsr2l	equ	0xFD9
  8675                           status	equ	0xFD8
  8676                           
  8677 ;; *************** function _USBCtrlEPServiceComplete *****************
  8678 ;; Defined at:
  8679 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;		None
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;		None
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  1    wreg      void 
  8686 ;; Registers used:
  8687 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;Total ram usage:        0 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; Hardware stack levels required when called:   13
  8700 ;; This function calls:
  8701 ;;		_USBCtrlEPAllowDataStage
  8702 ;;		_USBCtrlEPAllowStatusStage
  8703 ;; This function is called by:
  8704 ;;		_USBCtrlTrfSetupHandler
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text37
  8709  002D6E                     __ptext37:
  8710                           	opt stack 0
  8711  002D6E                     _USBCtrlEPServiceComplete:
  8712                           	opt stack 11
  8713                           
  8714                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  8715                           
  8716                           ;incstack = 0
  8717  002D6E  9865               	bcf	3941,4,c	;volatile
  8718                           
  8719                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  8720  002D70  0100               	movlb	0	; () banked
  8721  002D72  BFAF               	btfsc	(_inPipes+3)& (0+255),7,b
  8722  002D74  D03C               	goto	l1667
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;usb_device.c: 1647: {
  8726                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  8727  002D76  0101               	movlb	1	; () banked
  8728  002D78  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  8729  002D7A  D00D               	goto	l1668
  8730                           
  8731                           ; BSR set to: 1
  8732                           ;usb_device.c: 1649: {
  8733                           ;usb_device.c: 1650: controlTransferState = 2;
  8734  002D7C  0E02               	movlw	2
  8735  002D7E  0100               	movlb	0	; () banked
  8736  002D80  6FC9               	movwf	_controlTransferState& (0+255),b
  8737                           
  8738                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  8739  002D82  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  8740  002D84  B4D8               	btfsc	status,2,c
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;usb_device.c: 1662: {
  8744                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  8745  002D86  ECB6  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
  8746                           
  8747                           ;usb_device.c: 1664: }
  8748                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  8749  002D8A  0E00               	movlw	0
  8750  002D8C  0100               	movlb	0	; () banked
  8751  002D8E  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  8755  002D90  0E00               	movlw	0
  8756  002D92  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8757                           
  8758                           ;usb_device.c: 1670: }
  8759  002D94  0012               	return	
  8760  002D96                     l1668:
  8761                           
  8762                           ;usb_device.c: 1671: else
  8763                           ;usb_device.c: 1672: {
  8764                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  8765                           
  8766                           ; BSR set to: 0
  8767  002D96  0100               	movlb	0	; () banked
  8768  002D98  EE20 F001          	lfsr	2,1
  8769  002D9C  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8770  002D9E  26D9               	addwf	fsr2l,f,c
  8771  002DA0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8772  002DA2  22DA               	addwfc	fsr2h,f,c
  8773  002DA4  0E08               	movlw	8
  8774  002DA6  6EDF               	movwf	indf2,c
  8775                           
  8776                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8777  002DA8  EE20 F002          	lfsr	2,2
  8778  002DAC  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8779  002DAE  26D9               	addwf	fsr2l,f,c
  8780  002DB0  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8781  002DB2  22DA               	addwfc	fsr2h,f,c
  8782  002DB4  0E30               	movlw	48
  8783  002DB6  6EDE               	movwf	postinc2,c
  8784  002DB8  0E04               	movlw	4
  8785  002DBA  6EDD               	movwf	postdec2,c
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8789  002DBC  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8790  002DC0  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8791  002DC4  0E0C               	movlw	12
  8792  002DC6  6EDF               	movwf	indf2,c
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8796  002DC8  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8797  002DCC  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8798  002DD0  0E00               	movlw	0
  8799  002DD2  8EDB               	bsf	plusw2,7,c
  8800                           
  8801                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  8802  002DD4  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8803  002DD8  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8804  002DDC  0E04               	movlw	4
  8805  002DDE  6EDF               	movwf	indf2,c
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8809  002DE0  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  8810  002DE4  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8811  002DE8  0E00               	movlw	0
  8812  002DEA  8EDB               	bsf	plusw2,7,c
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;usb_device.c: 1683: }
  8816                           ;usb_device.c: 1684: }
  8817  002DEC  0012               	return	
  8818  002DEE                     l1667:
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;usb_device.c: 1685: else
  8822                           ;usb_device.c: 1686: {
  8823                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  8824  002DEE  0104               	movlb	4	; () banked
  8825  002DF0  AF30               	btfss	48,7,b	;volatile
  8826  002DF2  D012               	goto	l1672
  8827                           
  8828                           ; BSR set to: 4
  8829                           ;usb_device.c: 1688: {
  8830                           ;usb_device.c: 1689: controlTransferState = 1;
  8831  002DF4  0E01               	movlw	1
  8832  002DF6  0100               	movlb	0	; () banked
  8833  002DF8  6FC9               	movwf	_controlTransferState& (0+255),b
  8834                           
  8835                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  8836  002DFA  51C3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  8837  002DFC  B4D8               	btfsc	status,2,c
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;usb_device.c: 1704: {
  8841                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  8842  002DFE  ECB6  F021         	call	_USBCtrlEPAllowDataStage	;wreg free
  8843                           
  8844                           ;usb_device.c: 1706: }
  8845                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  8846  002E02  0E00               	movlw	0
  8847  002E04  0100               	movlb	0	; () banked
  8848  002E06  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  8852  002E08  0E00               	movlw	0
  8853  002E0A  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  8857  002E0C  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8858  002E0E  A4D8               	btfss	status,2,c
  8859  002E10  0012               	return	
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;usb_device.c: 1731: {
  8863                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  8864  002E12  EC93  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8865                           
  8866                           ;usb_device.c: 1733: }
  8867                           ;usb_device.c: 1734: }
  8868  002E16  0012               	return	
  8869  002E18                     l1672:
  8870                           
  8871                           ;usb_device.c: 1735: else
  8872                           ;usb_device.c: 1736: {
  8873                           ;usb_device.c: 1747: controlTransferState = 2;
  8874  002E18  0E02               	movlw	2
  8875  002E1A  0100               	movlb	0	; () banked
  8876  002E1C  6FC9               	movwf	_controlTransferState& (0+255),b
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  8880  002E1E  EE20 F001          	lfsr	2,1
  8881  002E22  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8882  002E24  26D9               	addwf	fsr2l,f,c
  8883  002E26  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8884  002E28  22DA               	addwfc	fsr2h,f,c
  8885  002E2A  0E08               	movlw	8
  8886  002E2C  6EDF               	movwf	indf2,c
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8890  002E2E  EE20 F002          	lfsr	2,2
  8891  002E32  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8892  002E34  26D9               	addwf	fsr2l,f,c
  8893  002E36  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8894  002E38  22DA               	addwfc	fsr2h,f,c
  8895  002E3A  0E30               	movlw	48
  8896  002E3C  6EDE               	movwf	postinc2,c
  8897  002E3E  0E04               	movlw	4
  8898  002E40  6EDD               	movwf	postdec2,c
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8902  002E42  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8903  002E46  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8904  002E4A  0E04               	movlw	4
  8905  002E4C  6EDF               	movwf	indf2,c
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8909  002E4E  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8910  002E52  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8911  002E56  0E00               	movlw	0
  8912  002E58  8EDB               	bsf	plusw2,7,c
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  8916  002E5A  0E00               	movlw	0
  8917  002E5C  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  8921  002E5E  0E00               	movlw	0
  8922  002E60  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  8926  002E62  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8927  002E64  A4D8               	btfss	status,2,c
  8928  002E66  0012               	return	
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;usb_device.c: 1759: {
  8932                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  8933  002E68  EC93  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8934  002E6C  0012               	return	
  8935  002E6E                     __end_of_USBCtrlEPServiceComplete:
  8936                           	opt stack 0
  8937                           tosu	equ	0xFFF
  8938                           tosh	equ	0xFFE
  8939                           tosl	equ	0xFFD
  8940                           pclath	equ	0xFFA
  8941                           tblptru	equ	0xFF8
  8942                           tblptrh	equ	0xFF7
  8943                           tblptrl	equ	0xFF6
  8944                           tablat	equ	0xFF5
  8945                           prodh	equ	0xFF4
  8946                           prodl	equ	0xFF3
  8947                           intcon	equ	0xFF2
  8948                           intcon2	equ	0xFF1
  8949                           intcon3	equ	0xFF0
  8950                           postinc0	equ	0xFEE
  8951                           plusw0	equ	0xFEB
  8952                           wreg	equ	0xFE8
  8953                           postinc1	equ	0xFE6
  8954                           postdec1	equ	0xFE5
  8955                           plusw1	equ	0xFE3
  8956                           fsr1h	equ	0xFE2
  8957                           fsr1l	equ	0xFE1
  8958                           indf2	equ	0xFDF
  8959                           postinc2	equ	0xFDE
  8960                           postdec2	equ	0xFDD
  8961                           plusw2	equ	0xFDB
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8
  8965                           
  8966 ;; *************** function _USBCtrlEPAllowDataStage *****************
  8967 ;; Defined at:
  8968 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8986 ;;Total ram usage:        0 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:   12
  8989 ;; This function calls:
  8990 ;;		_USBCtrlTrfTxService
  8991 ;; This function is called by:
  8992 ;;		_USBCtrlEPServiceComplete
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text38
  8997  00436C                     __ptext38:
  8998                           	opt stack 0
  8999  00436C                     _USBCtrlEPAllowDataStage:
  9000                           	opt stack 11
  9001                           
  9002                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9003                           
  9004                           ;incstack = 0
  9005  00436C  0E00               	movlw	0
  9006  00436E  0100               	movlb	0	; () banked
  9007  004370  6FC3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  9008                           
  9009                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9010  004372  0E00               	movlw	0
  9011  004374  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9015  004376  0E02               	movlw	2
  9016  004378  19C9               	xorwf	_controlTransferState& (0+255),w,b
  9017  00437A  A4D8               	btfss	status,2,c
  9018  00437C  D01F               	goto	l1656
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;usb_device.c: 1512: {
  9022                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9023  00437E  EE20 F001          	lfsr	2,1
  9024  004382  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9025  004384  26D9               	addwf	fsr2l,f,c
  9026  004386  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9027  004388  22DA               	addwfc	fsr2h,f,c
  9028  00438A  0E08               	movlw	8
  9029  00438C  6EDF               	movwf	indf2,c
  9030                           
  9031                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9032  00438E  EE20 F002          	lfsr	2,2
  9033  004392  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9034  004394  26D9               	addwf	fsr2l,f,c
  9035  004396  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9036  004398  22DA               	addwfc	fsr2h,f,c
  9037  00439A  0E38               	movlw	56
  9038  00439C  6EDE               	movwf	postinc2,c
  9039  00439E  0E04               	movlw	4
  9040  0043A0  6EDD               	movwf	postdec2,c
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9044  0043A2  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9045  0043A6  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9046  0043AA  0E48               	movlw	72
  9047  0043AC  6EDF               	movwf	indf2,c
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9051  0043AE  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9052  0043B2  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9053  0043B6  0E00               	movlw	0
  9054  0043B8  8EDB               	bsf	plusw2,7,c
  9055                           
  9056                           ;usb_device.c: 1518: }
  9057  0043BA  0012               	return	
  9058  0043BC                     l1656:
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;usb_device.c: 1519: else
  9062                           ;usb_device.c: 1520: {
  9063                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9064                           
  9065                           ; BSR set to: 0
  9066  0043BC  51B0               	movf	(_inPipes+4)& (0+255),w,b
  9067  0043BE  0104               	movlb	4	; () banked
  9068  0043C0  5D36               	subwf	54,w,b	;volatile
  9069  0043C2  0100               	movlb	0	; () banked
  9070  0043C4  51B1               	movf	(_inPipes+5)& (0+255),w,b
  9071  0043C6  0104               	movlb	4	; () banked
  9072  0043C8  5937               	subwfb	55,w,b	;volatile
  9073  0043CA  B0D8               	btfsc	status,0,c
  9074  0043CC  D004               	goto	l1658
  9075                           
  9076                           ; BSR set to: 4
  9077                           ;usb_device.c: 1524: {
  9078                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9079  0043CE  C436 F0B0          	movff	1078,_inPipes+4	;volatile
  9080  0043D2  C437 F0B1          	movff	1079,_inPipes+5	;volatile
  9081  0043D6                     l1658:
  9082                           
  9083                           ; BSR set to: 4
  9084                           ;usb_device.c: 1526: }
  9085                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9086                           
  9087                           ; BSR set to: 4
  9088  0043D6  ECEE  F019         	call	_USBCtrlTrfTxService	;wreg free
  9089                           
  9090                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9091  0043DA  0100               	movlb	0	; () banked
  9092  0043DC  EE20 F002          	lfsr	2,2
  9093  0043E0  51B2               	movf	_pBDTEntryIn& (0+255),w,b
  9094  0043E2  26D9               	addwf	fsr2l,f,c
  9095  0043E4  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9096  0043E6  22DA               	addwfc	fsr2h,f,c
  9097  0043E8  0E38               	movlw	56
  9098  0043EA  6EDE               	movwf	postinc2,c
  9099  0043EC  0E04               	movlw	4
  9100  0043EE  6EDD               	movwf	postdec2,c
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9104  0043F0  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9105  0043F4  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9106  0043F8  0E48               	movlw	72
  9107  0043FA  6EDF               	movwf	indf2,c
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9111  0043FC  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
  9112  004400  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9113  004404  0E00               	movlw	0
  9114  004406  8EDB               	bsf	plusw2,7,c
  9115  004408  0012               	return	
  9116  00440A                     __end_of_USBCtrlEPAllowDataStage:
  9117                           	opt stack 0
  9118                           tosu	equ	0xFFF
  9119                           tosh	equ	0xFFE
  9120                           tosl	equ	0xFFD
  9121                           pclath	equ	0xFFA
  9122                           tblptru	equ	0xFF8
  9123                           tblptrh	equ	0xFF7
  9124                           tblptrl	equ	0xFF6
  9125                           tablat	equ	0xFF5
  9126                           prodh	equ	0xFF4
  9127                           prodl	equ	0xFF3
  9128                           intcon	equ	0xFF2
  9129                           intcon2	equ	0xFF1
  9130                           intcon3	equ	0xFF0
  9131                           postinc0	equ	0xFEE
  9132                           plusw0	equ	0xFEB
  9133                           wreg	equ	0xFE8
  9134                           postinc1	equ	0xFE6
  9135                           postdec1	equ	0xFE5
  9136                           plusw1	equ	0xFE3
  9137                           fsr1h	equ	0xFE2
  9138                           fsr1l	equ	0xFE1
  9139                           indf2	equ	0xFDF
  9140                           postinc2	equ	0xFDE
  9141                           postdec2	equ	0xFDD
  9142                           plusw2	equ	0xFDB
  9143                           fsr2h	equ	0xFDA
  9144                           fsr2l	equ	0xFD9
  9145                           status	equ	0xFD8
  9146                           
  9147 ;; *************** function _USBCheckStdRequest *****************
  9148 ;; Defined at:
  9149 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9167 ;;Total ram usage:        0 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:   16
  9170 ;; This function calls:
  9171 ;;		_USBStdFeatureReqHandler
  9172 ;;		_USBStdGetDscHandler
  9173 ;;		_USBStdGetStatusHandler
  9174 ;;		_USBStdSetCfgHandler
  9175 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9176 ;; This function is called by:
  9177 ;;		_USBCtrlTrfSetupHandler
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text39
  9182  0032F8                     __ptext39:
  9183                           	opt stack 0
  9184  0032F8                     _USBCheckStdRequest:
  9185                           	opt stack 8
  9186                           
  9187                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;incstack = 0
  9191  0032F8  0104               	movlb	4	; () banked
  9192  0032FA  3930               	swapf	48,w,b	;volatile
  9193  0032FC  32E8               	rrcf	wreg,f,c
  9194  0032FE  0B03               	andlw	3
  9195  003300  0900               	iorlw	0
  9196  003302  A4D8               	btfss	status,2,c
  9197  003304  0012               	return	
  9198  003306  D048               	goto	l1791
  9199  003308                     l1792:
  9200                           
  9201                           ; BSR set to: 4
  9202                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9203  003308  0100               	movlb	0	; () banked
  9204  00330A  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9208  00330C  0E08               	movlw	8
  9209  00330E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9210                           
  9211                           ;usb_device.c: 2713: break;
  9212  003310  0012               	return	
  9213  003312                     
  9214                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9215                           
  9216                           ; BSR set to: 0
  9217  003312  ECE1  F013         	call	_USBStdGetDscHandler	;wreg free
  9218                           
  9219                           ;usb_device.c: 2716: break;
  9220  003316  0012               	return	
  9221  003318                     
  9222                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9223  003318  EC96  F018         	call	_USBStdSetCfgHandler	;wreg free
  9224                           
  9225                           ;usb_device.c: 2719: break;
  9226  00331C  0012               	return	
  9227  00331E                     
  9228                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9229  00331E  0ED4               	movlw	low _USBActiveConfiguration
  9230  003320  0100               	movlb	0	; () banked
  9231  003322  6FAC               	movwf	_inPipes& (0+255),b
  9232  003324  0E00               	movlw	high _USBActiveConfiguration
  9233  003326  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9237  003328  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9241  00332A  0E01               	movlw	1
  9242  00332C  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9246  00332E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9247                           
  9248                           ;usb_device.c: 2725: break;
  9249  003330  0012               	return	
  9250  003332                     
  9251                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9252                           
  9253                           ; BSR set to: 0
  9254  003332  EC11  F01F         	call	_USBStdGetStatusHandler	;wreg free
  9255                           
  9256                           ;usb_device.c: 2728: break;
  9257  003336  0012               	return	
  9258  003338                     
  9259                           ;usb_device.c: 2730: case 3:
  9260                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9261  003338  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9262                           
  9263                           ;usb_device.c: 2732: break;
  9264  00333C  0012               	return	
  9265  00333E                     
  9266                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9267  00333E  0104               	movlb	4	; () banked
  9268  003340  5134               	movf	52,w,b	;volatile
  9269  003342  0D01               	mullw	1
  9270  003344  0EF1               	movlw	low _USBAlternateInterface
  9271  003346  24F3               	addwf	prodl,w,c
  9272  003348  0100               	movlb	0	; () banked
  9273  00334A  6FAC               	movwf	_inPipes& (0+255),b
  9274  00334C  0E02               	movlw	high _USBAlternateInterface
  9275  00334E  20F4               	addwfc	prodh,w,c
  9276  003350  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9280  003352  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9284  003354  0E01               	movlw	1
  9285  003356  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9289  003358  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9290                           
  9291                           ;usb_device.c: 2738: break;
  9292  00335A  0012               	return	
  9293  00335C                     l1801:
  9294                           
  9295                           ; BSR set to: 4
  9296                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9297  00335C  0100               	movlb	0	; () banked
  9298  00335E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9302  003360  0104               	movlb	4	; () banked
  9303  003362  5134               	movf	52,w,b	;volatile
  9304  003364  0D01               	mullw	1
  9305  003366  0EF1               	movlw	low _USBAlternateInterface
  9306  003368  24F3               	addwf	prodl,w,c
  9307  00336A  6ED9               	movwf	fsr2l,c
  9308  00336C  0E02               	movlw	high _USBAlternateInterface
  9309  00336E  20F4               	addwfc	prodh,w,c
  9310  003370  6EDA               	movwf	fsr2h,c
  9311  003372  C432 FFDF          	movff	1074,indf2	;volatile
  9312                           
  9313                           ;usb_device.c: 2742: break;
  9314  003376  0012               	return	
  9315  003378                     
  9316                           ; BSR set to: 4
  9317                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9318                           
  9319                           ; BSR set to: 4
  9320  003378  0E00               	movlw	0
  9321  00337A  0100               	movlb	0	; () banked
  9322  00337C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9323  00337E  0E02               	movlw	2
  9324  003380  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9325  003382  0E00               	movlw	0
  9326  003384  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9327  003386  0E00               	movlw	0
  9328  003388  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9329  00338A  0E00               	movlw	0
  9330  00338C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9331  00338E  0E00               	movlw	0
  9332  003390  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9333  003392  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9334                           
  9335                           ;usb_device.c: 2749: }
  9336                           
  9337                           ;usb_device.c: 2748: break;
  9338                           
  9339                           ;usb_device.c: 2747: default:
  9340                           
  9341                           ;usb_device.c: 2746: case 12:
  9342                           
  9343                           ;usb_device.c: 2745: break;
  9344  003396  0012               	return	
  9345  003398                     l1791:
  9346  003398  0104               	movlb	4	; () banked
  9347  00339A  5131               	movf	49,w,b	;volatile
  9348                           
  9349                           ; Switch size 1, requested type "space"
  9350                           ; Number of cases is 11, Range of values is 0 to 12
  9351                           ; switch strategies available:
  9352                           ; Name         Instructions Cycles
  9353                           ; simple_byte           34    18 (average)
  9354                           ;	Chosen strategy is simple_byte
  9355  00339C  0A00               	xorlw	0	; case 0
  9356  00339E  B4D8               	btfsc	status,2,c
  9357  0033A0  D7C8               	goto	l1797
  9358  0033A2  0A01               	xorlw	1	; case 1
  9359  0033A4  B4D8               	btfsc	status,2,c
  9360  0033A6  D7C8               	goto	l1798
  9361  0033A8  0A02               	xorlw	2	; case 3
  9362  0033AA  B4D8               	btfsc	status,2,c
  9363  0033AC  D7C5               	goto	l1798
  9364  0033AE  0A06               	xorlw	6	; case 5
  9365  0033B0  B4D8               	btfsc	status,2,c
  9366  0033B2  D7AA               	goto	l1792
  9367  0033B4  0A03               	xorlw	3	; case 6
  9368  0033B6  B4D8               	btfsc	status,2,c
  9369  0033B8  D7AC               	goto	l1794
  9370  0033BA  0A01               	xorlw	1	; case 7
  9371  0033BC  B4D8               	btfsc	status,2,c
  9372  0033BE  D7DC               	goto	l1802
  9373  0033C0  0A0F               	xorlw	15	; case 8
  9374  0033C2  B4D8               	btfsc	status,2,c
  9375  0033C4  D7AC               	goto	l1796
  9376  0033C6  0A01               	xorlw	1	; case 9
  9377  0033C8  B4D8               	btfsc	status,2,c
  9378  0033CA  D7A6               	goto	l1795
  9379  0033CC  0A03               	xorlw	3	; case 10
  9380  0033CE  B4D8               	btfsc	status,2,c
  9381  0033D0  D7B6               	goto	l1800
  9382  0033D2  0A01               	xorlw	1	; case 11
  9383  0033D4  B4D8               	btfsc	status,2,c
  9384  0033D6  D7C2               	goto	l1801
  9385  0033D8  0A07               	xorlw	7	; case 12
  9386  0033DA  0012               	return	
  9387  0033DC                     __end_of_USBCheckStdRequest:
  9388                           	opt stack 0
  9389                           tosu	equ	0xFFF
  9390                           tosh	equ	0xFFE
  9391                           tosl	equ	0xFFD
  9392                           pclath	equ	0xFFA
  9393                           tblptru	equ	0xFF8
  9394                           tblptrh	equ	0xFF7
  9395                           tblptrl	equ	0xFF6
  9396                           tablat	equ	0xFF5
  9397                           prodh	equ	0xFF4
  9398                           prodl	equ	0xFF3
  9399                           intcon	equ	0xFF2
  9400                           intcon2	equ	0xFF1
  9401                           intcon3	equ	0xFF0
  9402                           postinc0	equ	0xFEE
  9403                           plusw0	equ	0xFEB
  9404                           wreg	equ	0xFE8
  9405                           postinc1	equ	0xFE6
  9406                           postdec1	equ	0xFE5
  9407                           plusw1	equ	0xFE3
  9408                           fsr1h	equ	0xFE2
  9409                           fsr1l	equ	0xFE1
  9410                           indf2	equ	0xFDF
  9411                           postinc2	equ	0xFDE
  9412                           postdec2	equ	0xFDD
  9413                           plusw2	equ	0xFDB
  9414                           fsr2h	equ	0xFDA
  9415                           fsr2l	equ	0xFD9
  9416                           status	equ	0xFD8
  9417                           
  9418 ;; *************** function _USBStdSetCfgHandler *****************
  9419 ;; Defined at:
  9420 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  i               1   49[BANK0 ] unsigned char 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;Total ram usage:        1 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:   15
  9441 ;; This function calls:
  9442 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9443 ;;		_memset
  9444 ;; This function is called by:
  9445 ;;		_USBCheckStdRequest
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           	psect	text40
  9450  00312C                     __ptext40:
  9451                           	opt stack 0
  9452  00312C                     _USBStdSetCfgHandler:
  9453                           	opt stack 8
  9454                           
  9455                           ;usb_device.c: 1988: uint8_t i;
  9456                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9457                           
  9458                           ;incstack = 0
  9459  00312C  0100               	movlb	0	; () banked
  9460  00312E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9464  003130  0E27               	movlw	39
  9465  003132  6F7D               	movwf	memset@p1& (0+255),b
  9466  003134  0E0F               	movlw	15
  9467  003136  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9468  003138  0E00               	movlw	0
  9469  00313A  6F80               	movwf	(memset@c+1)& (0+255),b
  9470  00313C  0E00               	movlw	0
  9471  00313E  6F7F               	movwf	memset@c& (0+255),b
  9472  003140  0E00               	movlw	0
  9473  003142  6F82               	movwf	(memset@n+1)& (0+255),b
  9474  003144  0E02               	movlw	2
  9475  003146  6F81               	movwf	memset@n& (0+255),b
  9476  003148  ECB1  F02C         	call	_memset	;wreg free
  9477                           
  9478                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9479  00314C  0E00               	movlw	0
  9480  00314E  0100               	movlb	0	; () banked
  9481  003150  6F7D               	movwf	memset@p1& (0+255),b
  9482  003152  0E04               	movlw	4
  9483  003154  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9484  003156  0E00               	movlw	0
  9485  003158  6F80               	movwf	(memset@c+1)& (0+255),b
  9486  00315A  0E00               	movlw	0
  9487  00315C  6F7F               	movwf	memset@c& (0+255),b
  9488  00315E  0E00               	movlw	0
  9489  003160  6F82               	movwf	(memset@n+1)& (0+255),b
  9490  003162  0E30               	movlw	48
  9491  003164  6F81               	movwf	memset@n& (0+255),b
  9492  003166  ECB1  F02C         	call	_memset	;wreg free
  9493                           
  9494                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9495  00316A  8C65               	bsf	3941,6,c	;volatile
  9496                           
  9497                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9498  00316C  0E00               	movlw	0
  9499  00316E  0100               	movlb	0	; () banked
  9500  003170  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9501  003172                     l11477:
  9502                           
  9503                           ; BSR set to: 0
  9504  003172  0E02               	movlw	2
  9505  003174  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9506  003176  D001               	goto	l1708
  9507  003178  D016               	goto	u10040
  9508  00317A                     l1708:
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;usb_device.c: 2006: {
  9512                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9513                           
  9514                           ; BSR set to: 0
  9515  00317A  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9516  00317C  0D01               	mullw	1
  9517  00317E  0ED1               	movlw	low _ep_data_in
  9518  003180  24F3               	addwf	prodl,w,c
  9519  003182  6ED9               	movwf	fsr2l,c
  9520  003184  0E02               	movlw	high _ep_data_in
  9521  003186  20F4               	addwfc	prodh,w,c
  9522  003188  6EDA               	movwf	fsr2h,c
  9523  00318A  0E00               	movlw	0
  9524  00318C  6EDF               	movwf	indf2,c
  9525                           
  9526                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9527  00318E  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9528  003190  0D01               	mullw	1
  9529  003192  0ECE               	movlw	low _ep_data_out
  9530  003194  24F3               	addwf	prodl,w,c
  9531  003196  6ED9               	movwf	fsr2l,c
  9532  003198  0E02               	movlw	high _ep_data_out
  9533  00319A  20F4               	addwfc	prodh,w,c
  9534  00319C  6EDA               	movwf	fsr2h,c
  9535  00319E  0E00               	movlw	0
  9536  0031A0  6EDF               	movwf	indf2,c
  9537                           
  9538                           ; BSR set to: 0
  9539  0031A2  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9540  0031A4  D7E6               	goto	l11477
  9541  0031A6                     u10040:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;usb_device.c: 2009: }
  9545                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9546                           
  9547                           ; BSR set to: 0
  9548  0031A6  0EF1               	movlw	low _USBAlternateInterface
  9549  0031A8  6F7D               	movwf	memset@p1& (0+255),b
  9550  0031AA  0E02               	movlw	high _USBAlternateInterface
  9551  0031AC  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9552  0031AE  0E00               	movlw	0
  9553  0031B0  6F80               	movwf	(memset@c+1)& (0+255),b
  9554  0031B2  0E00               	movlw	0
  9555  0031B4  6F7F               	movwf	memset@c& (0+255),b
  9556  0031B6  0E00               	movlw	0
  9557  0031B8  6F82               	movwf	(memset@n+1)& (0+255),b
  9558  0031BA  0E02               	movlw	2
  9559  0031BC  6F81               	movwf	memset@n& (0+255),b
  9560  0031BE  ECB1  F02C         	call	_memset	;wreg free
  9561                           
  9562                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9563  0031C2  9C65               	bcf	3941,6,c	;volatile
  9564                           
  9565                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9566  0031C4  0E08               	movlw	8
  9567  0031C6  0100               	movlb	0	; () banked
  9568  0031C8  6FB2               	movwf	_pBDTEntryIn& (0+255),b
  9569  0031CA  0E04               	movlw	4
  9570  0031CC  6FB3               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9574  0031CE  0E00               	movlw	0
  9575  0031D0  6FBC               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9576  0031D2  0E04               	movlw	4
  9577  0031D4  6FBD               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9581  0031D6  C0BC  F0BA         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9582  0031DA  C0BD  F0BB         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9586  0031DE  C432 F0D4          	movff	1074,_USBActiveConfiguration	;volatile
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9590  0031E2  51D4               	movf	_USBActiveConfiguration& (0+255),w,b
  9591  0031E4  A4D8               	btfss	status,2,c
  9592  0031E6  D003               	goto	l1710
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;usb_device.c: 2028: {
  9596                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9597  0031E8  0E10               	movlw	16
  9598  0031EA  6FCB               	movwf	_USBDeviceState& (0+255),b
  9599                           
  9600                           ;usb_device.c: 2031: }
  9601  0031EC  0012               	return	
  9602  0031EE                     l1710:
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;usb_device.c: 2032: else
  9606                           ;usb_device.c: 2033: {
  9607                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9608                           
  9609                           ; BSR set to: 0
  9610  0031EE  0E00               	movlw	0
  9611  0031F0  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9612  0031F2  0E01               	movlw	1
  9613  0031F4  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9614  0031F6  0ED4               	movlw	low _USBActiveConfiguration
  9615  0031F8  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9616  0031FA  0E00               	movlw	high _USBActiveConfiguration
  9617  0031FC  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9618  0031FE  0E00               	movlw	0
  9619  003200  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9620  003202  0E01               	movlw	1
  9621  003204  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9622  003206  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9623                           
  9624                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9625  00320A  0E20               	movlw	32
  9626  00320C  0100               	movlb	0	; () banked
  9627  00320E  6FCB               	movwf	_USBDeviceState& (0+255),b
  9628  003210  0012               	return	
  9629  003212                     __end_of_USBStdSetCfgHandler:
  9630                           	opt stack 0
  9631                           tosu	equ	0xFFF
  9632                           tosh	equ	0xFFE
  9633                           tosl	equ	0xFFD
  9634                           pclath	equ	0xFFA
  9635                           tblptru	equ	0xFF8
  9636                           tblptrh	equ	0xFF7
  9637                           tblptrl	equ	0xFF6
  9638                           tablat	equ	0xFF5
  9639                           prodh	equ	0xFF4
  9640                           prodl	equ	0xFF3
  9641                           intcon	equ	0xFF2
  9642                           intcon2	equ	0xFF1
  9643                           intcon3	equ	0xFF0
  9644                           postinc0	equ	0xFEE
  9645                           plusw0	equ	0xFEB
  9646                           wreg	equ	0xFE8
  9647                           postinc1	equ	0xFE6
  9648                           postdec1	equ	0xFE5
  9649                           plusw1	equ	0xFE3
  9650                           fsr1h	equ	0xFE2
  9651                           fsr1l	equ	0xFE1
  9652                           indf2	equ	0xFDF
  9653                           postinc2	equ	0xFDE
  9654                           postdec2	equ	0xFDD
  9655                           plusw2	equ	0xFDB
  9656                           fsr2h	equ	0xFDA
  9657                           fsr2l	equ	0xFD9
  9658                           status	equ	0xFD8
  9659                           
  9660 ;; *************** function _USBStdGetStatusHandler *****************
  9661 ;; Defined at:
  9662 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;		None
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9667 ;;		 -> NULL(0), BDT(48), 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9681 ;;Total ram usage:        3 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:   11
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_USBCheckStdRequest
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           	psect	text41
  9692  003E22                     __ptext41:
  9693                           	opt stack 0
  9694  003E22                     _USBStdGetStatusHandler:
  9695                           	opt stack 12
  9696                           
  9697                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;incstack = 0
  9701  003E22  0E00               	movlw	0
  9702  003E24  0104               	movlb	4	; () banked
  9703  003E26  6F38               	movwf	56,b	;volatile
  9704                           
  9705                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  9706  003E28  0E00               	movlw	0
  9707  003E2A  6F39               	movwf	57,b	;volatile
  9708                           
  9709                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  9710  003E2C  D03D               	goto	l1729
  9711  003E2E                     l1730:
  9712                           
  9713                           ; BSR set to: 4
  9714                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  9715  003E2E  0100               	movlb	0	; () banked
  9716  003E30  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9717                           
  9718                           ;usb_device.c: 2163: }
  9719                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  9720                           
  9721                           ; BSR set to: 4
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;usb_device.c: 2161: {
  9725                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  9726                           
  9727                           ;usb_device.c: 2160: if(0 == 1)
  9728  003E32  0101               	movlb	1	; () banked
  9729  003E34  05E7               	decf	_RemoteWakeup& (0+255),w,b
  9730  003E36  A4D8               	btfss	status,2,c
  9731  003E38  D042               	goto	l1733
  9732                           
  9733                           ; BSR set to: 1
  9734                           ;usb_device.c: 2166: {
  9735                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  9736  003E3A  0104               	movlb	4	; () banked
  9737  003E3C  8338               	bsf	56,1,b	;volatile
  9738                           
  9739                           ; BSR set to: 4
  9740                           ;usb_device.c: 2168: }
  9741                           ;usb_device.c: 2169: break;
  9742  003E3E  D03F               	goto	l1733
  9743  003E40                     l1734:
  9744                           
  9745                           ; BSR set to: 4
  9746                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  9747  003E40  0100               	movlb	0	; () banked
  9748  003E42  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9749                           
  9750                           ;usb_device.c: 2172: break;
  9751  003E44  D03C               	goto	l1733
  9752  003E46                     l1735:
  9753                           
  9754                           ; BSR set to: 4
  9755                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  9756  003E46  0100               	movlb	0	; () banked
  9757  003E48  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
  9758                           
  9759                           ;usb_device.c: 2178: {
  9760                           ;usb_device.c: 2179: BDT_ENTRY *p;
  9761                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  9762  003E4A  0104               	movlb	4	; () banked
  9763  003E4C  BF34               	btfsc	52,7,b	;volatile
  9764  003E4E  D00B               	goto	l1736
  9765                           
  9766                           ; BSR set to: 4
  9767                           ;usb_device.c: 2182: {
  9768                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9769  003E50  5134               	movf	52,w,b	;volatile
  9770  003E52  0B0F               	andlw	15
  9771  003E54  0100               	movlb	0	; () banked
  9772  003E56  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9773  003E58  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9774  003E5A  0D02               	mullw	2
  9775  003E5C  0E0E               	movlw	low _pBDTEntryOut
  9776  003E5E  24F3               	addwf	prodl,w,c
  9777  003E60  6ED9               	movwf	fsr2l,c
  9778  003E62  0E03               	movlw	high _pBDTEntryOut
  9779  003E64  D00B               	goto	L4
  9780  003E66                     l1736:
  9781                           
  9782                           ;usb_device.c: 2185: else
  9783                           ;usb_device.c: 2186: {
  9784                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9785                           
  9786                           ; BSR set to: 0
  9787  003E66  0104               	movlb	4	; () banked
  9788  003E68  5134               	movf	52,w,b	;volatile
  9789  003E6A  0B0F               	andlw	15
  9790  003E6C  0100               	movlb	0	; () banked
  9791  003E6E  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
  9792  003E70  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  9793  003E72  0D02               	mullw	2
  9794  003E74  0EB2               	movlw	low _pBDTEntryIn
  9795  003E76  24F3               	addwf	prodl,w,c
  9796  003E78  6ED9               	movwf	fsr2l,c
  9797  003E7A  0E00               	movlw	high _pBDTEntryIn
  9798  003E7C                     L4:
  9799  003E7C  20F4               	addwfc	prodh,w,c
  9800  003E7E  6EDA               	movwf	fsr2h,c
  9801  003E80  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
  9802  003E84  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;usb_device.c: 2188: }
  9806                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  9807                           
  9808                           ; BSR set to: 0
  9809  003E88  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9810  003E8C  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9811  003E90  AEDF               	btfss	indf2,7,c
  9812  003E92  D015               	goto	l1733
  9813                           
  9814                           ; BSR set to: 0
  9815  003E94  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  9816  003E98  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  9817  003E9C  A4DF               	btfss	indf2,2,c
  9818  003E9E  D00F               	goto	l1733
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  9822  003EA0  0E01               	movlw	1
  9823  003EA2  0104               	movlb	4	; () banked
  9824  003EA4  6F38               	movwf	56,b	;volatile
  9825                           
  9826                           ; BSR set to: 4
  9827                           ;usb_device.c: 2193: }
  9828                           ;usb_device.c: 2194: }
  9829                           
  9830                           ; BSR set to: 4
  9831                           ;usb_device.c: 2192: break;
  9832  003EA6  D00B               	goto	l1733
  9833  003EA8                     l1729:
  9834                           
  9835                           ; BSR set to: 4
  9836                           
  9837                           ; BSR set to: 4
  9838  003EA8  5130               	movf	48,w,b	;volatile
  9839  003EAA  0B1F               	andlw	31
  9840                           
  9841                           ; Switch size 1, requested type "space"
  9842                           ; Number of cases is 3, Range of values is 0 to 2
  9843                           ; switch strategies available:
  9844                           ; Name         Instructions Cycles
  9845                           ; simple_byte           10     6 (average)
  9846                           ;	Chosen strategy is simple_byte
  9847  003EAC  0A00               	xorlw	0	; case 0
  9848  003EAE  B4D8               	btfsc	status,2,c
  9849  003EB0  D7BE               	goto	l1730
  9850  003EB2  0A01               	xorlw	1	; case 1
  9851  003EB4  B4D8               	btfsc	status,2,c
  9852  003EB6  D7C4               	goto	l1734
  9853  003EB8  0A03               	xorlw	3	; case 2
  9854  003EBA  B4D8               	btfsc	status,2,c
  9855  003EBC  D7C4               	goto	l1735
  9856  003EBE                     l1733:
  9857                           
  9858                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  9859  003EBE  0100               	movlb	0	; () banked
  9860  003EC0  AFAF               	btfss	(_inPipes+3)& (0+255),7,b
  9861  003EC2  0012               	return	
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;usb_device.c: 2197: {
  9865                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  9866  003EC4  0E38               	movlw	56
  9867  003EC6  6FAC               	movwf	_inPipes& (0+255),b
  9868  003EC8  0E04               	movlw	4
  9869  003ECA  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9873  003ECC  81AF               	bsf	(_inPipes+3)& (0+255),0,b
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  9877  003ECE  0E02               	movlw	2
  9878  003ED0  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9879  003ED2  0012               	return	
  9880  003ED4                     __end_of_USBStdGetStatusHandler:
  9881                           	opt stack 0
  9882                           tosu	equ	0xFFF
  9883                           tosh	equ	0xFFE
  9884                           tosl	equ	0xFFD
  9885                           pclath	equ	0xFFA
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           intcon	equ	0xFF2
  9893                           intcon2	equ	0xFF1
  9894                           intcon3	equ	0xFF0
  9895                           postinc0	equ	0xFEE
  9896                           plusw0	equ	0xFEB
  9897                           wreg	equ	0xFE8
  9898                           postinc1	equ	0xFE6
  9899                           postdec1	equ	0xFE5
  9900                           plusw1	equ	0xFE3
  9901                           fsr1h	equ	0xFE2
  9902                           fsr1l	equ	0xFE1
  9903                           indf2	equ	0xFDF
  9904                           postinc2	equ	0xFDE
  9905                           postdec2	equ	0xFDD
  9906                           plusw2	equ	0xFDB
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           
  9911 ;; *************** function _USBStdGetDscHandler *****************
  9912 ;; Defined at:
  9913 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9930 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9931 ;;Total ram usage:        2 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:   11
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_USBCheckStdRequest
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text42
  9942  0027C2                     __ptext42:
  9943                           	opt stack 0
  9944  0027C2                     _USBStdGetDscHandler:
  9945                           	opt stack 12
  9946                           
  9947                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;incstack = 0
  9951  0027C2  0E80               	movlw	128
  9952  0027C4  0104               	movlb	4	; () banked
  9953  0027C6  1930               	xorwf	48,w,b	;volatile
  9954  0027C8  A4D8               	btfss	status,2,c
  9955  0027CA  0012               	return	
  9956                           
  9957                           ; BSR set to: 4
  9958                           ;usb_device.c: 2064: {
  9959                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  9960  0027CC  0EC0               	movlw	192
  9961  0027CE  0100               	movlb	0	; () banked
  9962  0027D0  6FAF               	movwf	(_inPipes+3)& (0+255),b
  9963                           
  9964                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  9965  0027D2  D082               	goto	l1716
  9966  0027D4                     
  9967                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  9968                           
  9969                           ; BSR set to: 0
  9970  0027D4  0E76               	movlw	low _device_dsc
  9971  0027D6  0100               	movlb	0	; () banked
  9972  0027D8  6FAC               	movwf	_inPipes& (0+255),b
  9973  0027DA  0EFE               	movlw	high _device_dsc
  9974  0027DC  6FAD               	movwf	(_inPipes+1)& (0+255),b
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  9978  0027DE  0E00               	movlw	0
  9979  0027E0  6FB1               	movwf	(_inPipes+5)& (0+255),b
  9980  0027E2  0E12               	movlw	18
  9981  0027E4  6FB0               	movwf	(_inPipes+4)& (0+255),b
  9982                           
  9983                           ;usb_device.c: 2076: break;
  9984  0027E6  0012               	return	
  9985  0027E8                     
  9986                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  9987                           
  9988                           ; BSR set to: 0
  9989  0027E8  0104               	movlb	4	; () banked
  9990  0027EA  5132               	movf	50,w,b	;volatile
  9991  0027EC  A4D8               	btfss	status,2,c
  9992  0027EE  D040               	goto	l1720
  9993                           
  9994                           ; BSR set to: 4
  9995                           ;usb_device.c: 2082: {
  9996                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  9997  0027F0  5132               	movf	50,w,b	;volatile
  9998  0027F2  0D02               	mullw	2
  9999  0027F4  0E5B               	movlw	low _USB_CD_Ptr
 10000  0027F6  24F3               	addwf	prodl,w,c
 10001  0027F8  6EF6               	movwf	tblptrl,c
 10002  0027FA  0EFC               	movlw	high _USB_CD_Ptr
 10003  0027FC  20F4               	addwfc	prodh,w,c
 10004  0027FE  6EF7               	movwf	tblptrh,c
 10005  002800                     	if	0	;There are less than 3 active tblptr bytes
 10006  002800                     	endif
 10007  002800  0009               	tblrd		*+
 10008  002802  CFF5 F0AC          	movff	tablat,_inPipes
 10009  002806  000A               	tblrd		*-
 10010  002808  CFF5 F0AD          	movff	tablat,_inPipes+1
 10011                           
 10012                           ; BSR set to: 4
 10013                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10014  00280C  0E02               	movlw	2
 10015  00280E  0100               	movlb	0	; () banked
 10016  002810  25AC               	addwf	_inPipes& (0+255),w,b
 10017  002812  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10018  002814  0E00               	movlw	0
 10019  002816  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10020  002818  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10021  00281A  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10022  00281E  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10023  002822  6AF8               	clrf	tblptru,c
 10024  002824  0E0E               	movlw	(high __ramtop+-1)
 10025  002826  64F7               	cpfsgt	tblptrh,c
 10026  002828  D003               	bra	u5327
 10027  00282A  0008               	tblrd		*
 10028  00282C  50F5               	movf	tablat,w,c
 10029  00282E  D005               	bra	u5320
 10030  002830                     u5327:
 10031  002830  CFF6 FFE9          	movff	tblptrl,fsr0l
 10032  002834  CFF7 FFEA          	movff	tblptrh,fsr0h
 10033  002838  50EF               	movf	indf0,w,c
 10034  00283A                     u5320:
 10035  00283A  0100               	movlb	0	; () banked
 10036  00283C  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10040  00283E  0E03               	movlw	3
 10041  002840  25AC               	addwf	_inPipes& (0+255),w,b
 10042  002842  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10043  002844  0E00               	movlw	0
 10044  002846  21AD               	addwfc	(_inPipes+1)& (0+255),w,b
 10045  002848  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10046  00284A  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10047  00284E  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10048  002852  6AF8               	clrf	tblptru,c
 10049  002854  0E0E               	movlw	(high __ramtop+-1)
 10050  002856  64F7               	cpfsgt	tblptrh,c
 10051  002858  D003               	bra	u5337
 10052  00285A  0008               	tblrd		*
 10053  00285C  50F5               	movf	tablat,w,c
 10054  00285E  D005               	bra	u5330
 10055  002860                     u5337:
 10056  002860  CFF6 FFE9          	movff	tblptrl,fsr0l
 10057  002864  CFF7 FFEA          	movff	tblptrh,fsr0h
 10058  002868  50EF               	movf	indf0,w,c
 10059  00286A                     u5330:
 10060  00286A  0100               	movlb	0	; () banked
 10061  00286C  6FB1               	movwf	(_inPipes+5)& (0+255),b
 10062                           
 10063                           ;usb_device.c: 2094: }
 10064  00286E  0012               	return	
 10065  002870                     l1720:
 10066                           
 10067                           ;usb_device.c: 2095: else
 10068                           ;usb_device.c: 2096: {
 10069                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10070                           
 10071                           ; BSR set to: 0
 10072  002870  0E00               	movlw	0
 10073  002872  0100               	movlb	0	; () banked
 10074  002874  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;usb_device.c: 2098: }
 10078                           ;usb_device.c: 2099: break;
 10079  002876  0012               	return	
 10080  002878                     
 10081                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10082                           
 10083                           ; BSR set to: 0
 10084  002878  0E03               	movlw	3
 10085  00287A  0104               	movlb	4	; () banked
 10086  00287C  6132               	cpfslt	50,b	;volatile
 10087  00287E  D024               	goto	l1723
 10088                           
 10089                           ; BSR set to: 4
 10090                           ;usb_device.c: 2105: {
 10091                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10092  002880  5132               	movf	50,w,b	;volatile
 10093  002882  0D02               	mullw	2
 10094  002884  0E55               	movlw	low _USB_SD_Ptr
 10095  002886  24F3               	addwf	prodl,w,c
 10096  002888  6EF6               	movwf	tblptrl,c
 10097  00288A  0EFC               	movlw	high _USB_SD_Ptr
 10098  00288C  20F4               	addwfc	prodh,w,c
 10099  00288E  6EF7               	movwf	tblptrh,c
 10100  002890                     	if	0	;There are less than 3 active tblptr bytes
 10101  002890                     	endif
 10102  002890  0009               	tblrd		*+
 10103  002892  CFF5 F0AC          	movff	tablat,_inPipes
 10104  002896  000A               	tblrd		*-
 10105  002898  CFF5 F0AD          	movff	tablat,_inPipes+1
 10106                           
 10107                           ; BSR set to: 4
 10108                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10109  00289C  C0AC  FFF6         	movff	_inPipes,tblptrl
 10110  0028A0  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 10111  0028A4  6AF8               	clrf	tblptru,c
 10112  0028A6  0E0E               	movlw	(high __ramtop+-1)
 10113  0028A8  64F7               	cpfsgt	tblptrh,c
 10114  0028AA  D003               	bra	u5357
 10115  0028AC  0008               	tblrd		*
 10116  0028AE  50F5               	movf	tablat,w,c
 10117  0028B0  D005               	bra	u5350
 10118  0028B2                     u5357:
 10119  0028B2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10120  0028B6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10121  0028BA  50EF               	movf	indf0,w,c
 10122  0028BC                     u5350:
 10123  0028BC  0100               	movlb	0	; () banked
 10124  0028BE  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10125  0028C0  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10126  0028C2  6FB0               	movwf	(_inPipes+4)& (0+255),b
 10127  0028C4  6BB1               	clrf	(_inPipes+5)& (0+255),b
 10128                           
 10129                           ;usb_device.c: 2110: }
 10130  0028C6  0012               	return	
 10131  0028C8                     l1723:
 10132                           
 10133                           ;usb_device.c: 2120: else
 10134                           ;usb_device.c: 2121: {
 10135                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10136                           
 10137                           ; BSR set to: 0
 10138  0028C8  0E00               	movlw	0
 10139  0028CA  0100               	movlb	0	; () banked
 10140  0028CC  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;usb_device.c: 2123: }
 10144                           ;usb_device.c: 2124: break;
 10145  0028CE  0012               	return	
 10146  0028D0                     
 10147                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10148                           
 10149                           ; BSR set to: 0
 10150  0028D0  0E00               	movlw	0
 10151  0028D2  0100               	movlb	0	; () banked
 10152  0028D4  6FAF               	movwf	(_inPipes+3)& (0+255),b
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;usb_device.c: 2128: }
 10156                           
 10157                           ;usb_device.c: 2127: break;
 10158  0028D6  0012               	return	
 10159  0028D8                     l1716:
 10160                           
 10161                           ; BSR set to: 0
 10162                           
 10163                           ; BSR set to: 0
 10164  0028D8  0104               	movlb	4	; () banked
 10165  0028DA  5133               	movf	51,w,b	;volatile
 10166                           
 10167                           ; Switch size 1, requested type "space"
 10168                           ; Number of cases is 3, Range of values is 1 to 3
 10169                           ; switch strategies available:
 10170                           ; Name         Instructions Cycles
 10171                           ; simple_byte           10     6 (average)
 10172                           ;	Chosen strategy is simple_byte
 10173  0028DC  0A01               	xorlw	1	; case 1
 10174  0028DE  B4D8               	btfsc	status,2,c
 10175  0028E0  D779               	goto	l1717
 10176  0028E2  0A03               	xorlw	3	; case 2
 10177  0028E4  B4D8               	btfsc	status,2,c
 10178  0028E6  D780               	goto	l1719
 10179  0028E8  0A01               	xorlw	1	; case 3
 10180  0028EA  B4D8               	btfsc	status,2,c
 10181  0028EC  D7C5               	goto	l1722
 10182  0028EE  D7F0               	goto	l1725
 10183  0028F0                     __end_of_USBStdGetDscHandler:
 10184                           	opt stack 0
 10185                           tosu	equ	0xFFF
 10186                           tosh	equ	0xFFE
 10187                           tosl	equ	0xFFD
 10188                           pclath	equ	0xFFA
 10189                           tblptru	equ	0xFF8
 10190                           tblptrh	equ	0xFF7
 10191                           tblptrl	equ	0xFF6
 10192                           tablat	equ	0xFF5
 10193                           prodh	equ	0xFF4
 10194                           prodl	equ	0xFF3
 10195                           intcon	equ	0xFF2
 10196                           intcon2	equ	0xFF1
 10197                           intcon3	equ	0xFF0
 10198                           indf0	equ	0xFEF
 10199                           postinc0	equ	0xFEE
 10200                           plusw0	equ	0xFEB
 10201                           fsr0h	equ	0xFEA
 10202                           fsr0l	equ	0xFE9
 10203                           wreg	equ	0xFE8
 10204                           postinc1	equ	0xFE6
 10205                           postdec1	equ	0xFE5
 10206                           plusw1	equ	0xFE3
 10207                           fsr1h	equ	0xFE2
 10208                           fsr1l	equ	0xFE1
 10209                           indf2	equ	0xFDF
 10210                           postinc2	equ	0xFDE
 10211                           postdec2	equ	0xFDD
 10212                           plusw2	equ	0xFDB
 10213                           fsr2h	equ	0xFDA
 10214                           fsr2l	equ	0xFD9
 10215                           status	equ	0xFD8
 10216                           
 10217 ;; *************** function _USBStdFeatureReqHandler *****************
 10218 ;; Defined at:
 10219 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;		None
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10224 ;;		 -> NULL(0), BDT(48), 
 10225 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10226 ;;		 -> UEP0(1), 
 10227 ;;  current_ep_d    1   52[BANK0 ] struct .
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;Total ram usage:        6 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:   15
 10244 ;; This function calls:
 10245 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10246 ;; This function is called by:
 10247 ;;		_USBCheckStdRequest
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text43
 10252  00135A                     __ptext43:
 10253                           	opt stack 0
 10254  00135A                     _USBStdFeatureReqHandler:
 10255                           	opt stack 8
 10256                           
 10257                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10258                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10259                           ;usb_device.c: 2778: unsigned char* pUEP;
 10260                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10261                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10262                           
 10263                           ;incstack = 0
 10264  00135A  0104               	movlb	4	; () banked
 10265  00135C  0532               	decf	50,w,b	;volatile
 10266  00135E  A4D8               	btfss	status,2,c
 10267  001360  D011               	goto	l1809
 10268                           
 10269                           ; BSR set to: 4
 10270  001362  5130               	movf	48,w,b	;volatile
 10271  001364  0B1F               	andlw	31
 10272  001366  0900               	iorlw	0
 10273  001368  A4D8               	btfss	status,2,c
 10274  00136A  D00C               	goto	l1809
 10275                           
 10276                           ; BSR set to: 4
 10277                           ;usb_device.c: 2818: {
 10278                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10279  00136C  0100               	movlb	0	; () banked
 10280  00136E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10284  001370  0E03               	movlw	3
 10285  001372  0104               	movlb	4	; () banked
 10286  001374  1931               	xorwf	49,w,b	;volatile
 10287  001376  A4D8               	btfss	status,2,c
 10288  001378  D002               	goto	l1808
 10289                           
 10290                           ; BSR set to: 4
 10291                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10292  00137A  0E01               	movlw	1
 10293  00137C  D001               	goto	L5
 10294  00137E                     l1808:
 10295                           
 10296                           ;usb_device.c: 2822: else
 10297                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10298                           
 10299                           ; BSR set to: 1
 10300  00137E  0E00               	movlw	0
 10301  001380                     L5:
 10302  001380  0101               	movlb	1	; () banked
 10303  001382  6FE7               	movwf	_RemoteWakeup& (0+255),b
 10304  001384                     l1809:
 10305                           
 10306                           ;usb_device.c: 2824: }
 10307                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10308                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10309                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10310                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10311                           
 10312                           ; BSR set to: 1
 10313  001384  0104               	movlb	4	; () banked
 10314  001386  5132               	movf	50,w,b	;volatile
 10315  001388  A4D8               	btfss	status,2,c
 10316  00138A  0012               	return	
 10317                           
 10318                           ; BSR set to: 4
 10319  00138C  5130               	movf	48,w,b	;volatile
 10320  00138E  0B1F               	andlw	31
 10321  001390  0A02               	xorlw	2
 10322  001392  A4D8               	btfss	status,2,c
 10323  001394  0012               	return	
 10324                           
 10325                           ; BSR set to: 4
 10326  001396  5134               	movf	52,w,b	;volatile
 10327  001398  0B0F               	andlw	15
 10328  00139A  0900               	iorlw	0
 10329  00139C  B4D8               	btfsc	status,2,c
 10330  00139E  0012               	return	
 10331                           
 10332                           ; BSR set to: 4
 10333  0013A0  5134               	movf	52,w,b	;volatile
 10334  0013A2  0B0F               	andlw	15
 10335  0013A4  0100               	movlb	0	; () banked
 10336  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10337  0013A8  0E03               	movlw	3
 10338  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10339  0013AC  0012               	return	
 10340                           
 10341                           ; BSR set to: 0
 10342  0013AE  0E20               	movlw	32
 10343  0013B0  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 10344  0013B2  A4D8               	btfss	status,2,c
 10345  0013B4  0012               	return	
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;usb_device.c: 2831: {
 10349                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10350  0013B6  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 10351                           
 10352                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10353  0013B8  0104               	movlb	4	; () banked
 10354  0013BA  BF34               	btfsc	52,7,b	;volatile
 10355  0013BC  D01C               	goto	l1811
 10356                           
 10357                           ; BSR set to: 4
 10358                           ;usb_device.c: 2838: {
 10359                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10360  0013BE  5134               	movf	52,w,b	;volatile
 10361  0013C0  0B0F               	andlw	15
 10362  0013C2  0100               	movlb	0	; () banked
 10363  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10364  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10365  0013C8  0D02               	mullw	2
 10366  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10367  0013CC  24F3               	addwf	prodl,w,c
 10368  0013CE  6ED9               	movwf	fsr2l,c
 10369  0013D0  0E03               	movlw	high _pBDTEntryOut
 10370  0013D2  20F4               	addwfc	prodh,w,c
 10371  0013D4  6EDA               	movwf	fsr2h,c
 10372  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10373  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10374                           
 10375                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10376  0013DE  0104               	movlb	4	; () banked
 10377  0013E0  5134               	movf	52,w,b	;volatile
 10378  0013E2  0B0F               	andlw	15
 10379  0013E4  0100               	movlb	0	; () banked
 10380  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10381  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10382  0013EA  0D01               	mullw	1
 10383  0013EC  0ECE               	movlw	low _ep_data_out
 10384  0013EE  24F3               	addwf	prodl,w,c
 10385  0013F0  6ED9               	movwf	fsr2l,c
 10386  0013F2  0E02               	movlw	high _ep_data_out
 10387  0013F4  D01C               	goto	L6
 10388  0013F6                     l1811:
 10389                           
 10390                           ;usb_device.c: 2842: else
 10391                           ;usb_device.c: 2843: {
 10392                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10393                           
 10394                           ; BSR set to: 0
 10395  0013F6  0104               	movlb	4	; () banked
 10396  0013F8  5134               	movf	52,w,b	;volatile
 10397  0013FA  0B0F               	andlw	15
 10398  0013FC  0100               	movlb	0	; () banked
 10399  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10400  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10401  001402  0D02               	mullw	2
 10402  001404  0EB2               	movlw	low _pBDTEntryIn
 10403  001406  24F3               	addwf	prodl,w,c
 10404  001408  6ED9               	movwf	fsr2l,c
 10405  00140A  0E00               	movlw	high _pBDTEntryIn
 10406  00140C  20F4               	addwfc	prodh,w,c
 10407  00140E  6EDA               	movwf	fsr2h,c
 10408  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10409  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10410                           
 10411                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10412  001418  0104               	movlb	4	; () banked
 10413  00141A  5134               	movf	52,w,b	;volatile
 10414  00141C  0B0F               	andlw	15
 10415  00141E  0100               	movlb	0	; () banked
 10416  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10417  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10418  001424  0D01               	mullw	1
 10419  001426  0ED1               	movlw	low _ep_data_in
 10420  001428  24F3               	addwf	prodl,w,c
 10421  00142A  6ED9               	movwf	fsr2l,c
 10422  00142C  0E02               	movlw	high _ep_data_in
 10423  00142E                     L6:
 10424  00142E  20F4               	addwfc	prodh,w,c
 10425  001430  6EDA               	movwf	fsr2h,c
 10426  001432  50DF               	movf	indf2,w,c
 10427  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;usb_device.c: 2846: }
 10431                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10432                           
 10433                           ; BSR set to: 0
 10434  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10435  001438  D002               	goto	l1813
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;usb_device.c: 2853: {
 10439                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10440  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10441                           
 10442                           ;usb_device.c: 2855: }
 10443  00143C  D001               	goto	l1814
 10444  00143E                     l1813:
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;usb_device.c: 2856: else
 10448                           ;usb_device.c: 2857: {
 10449                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10450                           
 10451                           ; BSR set to: 0
 10452  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10453  001440                     l1814:
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;usb_device.c: 2859: }
 10457                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10458                           
 10459                           ; BSR set to: 0
 10460  001440  0104               	movlb	4	; () banked
 10461  001442  BF34               	btfsc	52,7,b	;volatile
 10462  001444  D00B               	goto	l1815
 10463                           
 10464                           ; BSR set to: 4
 10465                           ;usb_device.c: 2865: {
 10466                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10467  001446  5134               	movf	52,w,b	;volatile
 10468  001448  0B0F               	andlw	15
 10469  00144A  0100               	movlb	0	; () banked
 10470  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10471  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10472  001450  0D02               	mullw	2
 10473  001452  0E0E               	movlw	low _pBDTEntryOut
 10474  001454  24F3               	addwf	prodl,w,c
 10475  001456  6ED9               	movwf	fsr2l,c
 10476  001458  0E03               	movlw	high _pBDTEntryOut
 10477  00145A  D00B               	goto	L7
 10478  00145C                     l1815:
 10479                           
 10480                           ;usb_device.c: 2868: else
 10481                           ;usb_device.c: 2869: {
 10482                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10483                           
 10484                           ; BSR set to: 0
 10485  00145C  0104               	movlb	4	; () banked
 10486  00145E  5134               	movf	52,w,b	;volatile
 10487  001460  0B0F               	andlw	15
 10488  001462  0100               	movlb	0	; () banked
 10489  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10490  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10491  001468  0D02               	mullw	2
 10492  00146A  0EB2               	movlw	low _pBDTEntryIn
 10493  00146C  24F3               	addwf	prodl,w,c
 10494  00146E  6ED9               	movwf	fsr2l,c
 10495  001470  0E00               	movlw	high _pBDTEntryIn
 10496  001472                     L7:
 10497  001472  20F4               	addwfc	prodh,w,c
 10498  001474  6EDA               	movwf	fsr2h,c
 10499  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10500  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;usb_device.c: 2871: }
 10504                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10505                           
 10506                           ; BSR set to: 0
 10507  00147E  0E03               	movlw	3
 10508  001480  0104               	movlb	4	; () banked
 10509  001482  1931               	xorwf	49,w,b	;volatile
 10510  001484  A4D8               	btfss	status,2,c
 10511  001486  D031               	goto	l1817
 10512                           
 10513                           ; BSR set to: 4
 10514                           ;usb_device.c: 2875: {
 10515                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10516  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10517  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10518  001490  0100               	movlb	0	; () banked
 10519  001492  AEDF               	btfss	indf2,7,c
 10520  001494  D01D               	goto	l1820
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;usb_device.c: 2877: {
 10524                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10525  001496  0104               	movlb	4	; () banked
 10526  001498  BF34               	btfsc	52,7,b	;volatile
 10527  00149A  D00B               	goto	l1819
 10528                           
 10529                           ; BSR set to: 4
 10530                           ;usb_device.c: 2881: {
 10531                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10532  00149C  5134               	movf	52,w,b	;volatile
 10533  00149E  0B0F               	andlw	15
 10534  0014A0  0100               	movlb	0	; () banked
 10535  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10536  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10537  0014A6  0D01               	mullw	1
 10538  0014A8  0ECE               	movlw	low _ep_data_out
 10539  0014AA  24F3               	addwf	prodl,w,c
 10540  0014AC  6ED9               	movwf	fsr2l,c
 10541  0014AE  0E02               	movlw	high _ep_data_out
 10542  0014B0  D00B               	goto	L8
 10543  0014B2                     l1819:
 10544                           
 10545                           ;usb_device.c: 2884: else
 10546                           ;usb_device.c: 2885: {
 10547                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10548                           
 10549                           ; BSR set to: 2
 10550  0014B2  0104               	movlb	4	; () banked
 10551  0014B4  5134               	movf	52,w,b	;volatile
 10552  0014B6  0B0F               	andlw	15
 10553  0014B8  0100               	movlb	0	; () banked
 10554  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10555  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10556  0014BE  0D01               	mullw	1
 10557  0014C0  0ED1               	movlw	low _ep_data_in
 10558  0014C2  24F3               	addwf	prodl,w,c
 10559  0014C4  6ED9               	movwf	fsr2l,c
 10560  0014C6  0E02               	movlw	high _ep_data_in
 10561  0014C8                     L8:
 10562  0014C8  20F4               	addwfc	prodh,w,c
 10563  0014CA  6EDA               	movwf	fsr2h,c
 10564  0014CC  0102               	movlb	2	; () banked
 10565  0014CE  82DF               	bsf	indf2,1,c
 10566  0014D0                     l1820:
 10567                           
 10568                           ;usb_device.c: 2887: }
 10569                           ;usb_device.c: 2888: }
 10570                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10571                           
 10572                           ; BSR set to: 2
 10573                           
 10574                           ; BSR set to: 2
 10575  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10576  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10577  0014D8  0E00               	movlw	0
 10578  0014DA  84DB               	bsf	plusw2,2,c
 10579                           
 10580                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10581  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10582  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10583  0014E4  0E00               	movlw	0
 10584  0014E6  8EDB               	bsf	plusw2,7,c
 10585                           
 10586                           ;usb_device.c: 2893: }
 10587  0014E8  0012               	return	
 10588  0014EA                     l1817:
 10589                           
 10590                           ;usb_device.c: 2894: else
 10591                           ;usb_device.c: 2895: {
 10592                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10593  0014EA  0E04               	movlw	4
 10594  0014EC  0100               	movlb	0	; () banked
 10595  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10599  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10600  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10601  0014F8  AEDF               	btfss	indf2,7,c
 10602  0014FA  D01B               	goto	l1822
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;usb_device.c: 2902: {
 10606                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10607  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10608  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10609  001504  0E7F               	movlw	127
 10610  001506  16DF               	andwf	indf2,f,c
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10614  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10615  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10616  001510  0E00               	movlw	0
 10617  001512  8CDB               	bsf	plusw2,6,c
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10621  001514  0E00               	movlw	0
 10622  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10623  001518  0E05               	movlw	5
 10624  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10625  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10626  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10627  001524  0E00               	movlw	0
 10628  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10629  001528  0E02               	movlw	2
 10630  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10631  00152C  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10632                           
 10633                           ;usb_device.c: 2908: }
 10634  001530  D006               	goto	l1823
 10635  001532                     l1822:
 10636                           
 10637                           ;usb_device.c: 2909: else
 10638                           ;usb_device.c: 2910: {
 10639                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10640  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10641  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10642  00153A  0E00               	movlw	0
 10643  00153C  8CDB               	bsf	plusw2,6,c
 10644  00153E                     l1823:
 10645                           
 10646                           ;usb_device.c: 2913: }
 10647                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10648  00153E  0E04               	movlw	4
 10649  001540  0100               	movlb	0	; () banked
 10650  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10654  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10655  001546  D006               	goto	u10220
 10656                           
 10657                           ; BSR set to: 0
 10658  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10659  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10660  001550  AEDF               	btfss	indf2,7,c
 10661  001552  D033               	goto	l1824
 10662  001554                     u10220:
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;usb_device.c: 2924: {
 10666                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10667  001554  0104               	movlb	4	; () banked
 10668  001556  BF34               	btfsc	52,7,b	;volatile
 10669  001558  D00B               	goto	l1827
 10670                           
 10671                           ; BSR set to: 4
 10672                           ;usb_device.c: 2926: {
 10673                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10674  00155A  5134               	movf	52,w,b	;volatile
 10675  00155C  0B0F               	andlw	15
 10676  00155E  0100               	movlb	0	; () banked
 10677  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10678  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10679  001564  0D01               	mullw	1
 10680  001566  0ECE               	movlw	low _ep_data_out
 10681  001568  24F3               	addwf	prodl,w,c
 10682  00156A  6ED9               	movwf	fsr2l,c
 10683  00156C  0E02               	movlw	high _ep_data_out
 10684  00156E  D00B               	goto	L9
 10685  001570                     l1827:
 10686                           
 10687                           ;usb_device.c: 2929: else
 10688                           ;usb_device.c: 2930: {
 10689                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10690                           
 10691                           ; BSR set to: 2
 10692  001570  0104               	movlb	4	; () banked
 10693  001572  5134               	movf	52,w,b	;volatile
 10694  001574  0B0F               	andlw	15
 10695  001576  0100               	movlb	0	; () banked
 10696  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10697  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10698  00157C  0D01               	mullw	1
 10699  00157E  0ED1               	movlw	low _ep_data_in
 10700  001580  24F3               	addwf	prodl,w,c
 10701  001582  6ED9               	movwf	fsr2l,c
 10702  001584  0E02               	movlw	high _ep_data_in
 10703  001586                     L9:
 10704  001586  20F4               	addwfc	prodh,w,c
 10705  001588  6EDA               	movwf	fsr2h,c
 10706  00158A  0102               	movlb	2	; () banked
 10707  00158C  92DF               	bcf	indf2,1,c
 10708                           
 10709                           ; BSR set to: 2
 10710                           ;usb_device.c: 2932: }
 10711                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10712                           
 10713                           ; BSR set to: 2
 10714  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10715  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10716  001596  0E3B               	movlw	59
 10717  001598  16DF               	andwf	indf2,f,c
 10718                           
 10719                           ; BSR set to: 2
 10720                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10721  00159A  0E00               	movlw	0
 10722  00159C  0100               	movlb	0	; () banked
 10723  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10724  0015A0  0E05               	movlw	5
 10725  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10726  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10727  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10728  0015AC  0E00               	movlw	0
 10729  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10730  0015B0  0E02               	movlw	2
 10731  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10732  0015B4  EC05  F027         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10733                           
 10734                           ;usb_device.c: 2938: }
 10735  0015B8  D006               	goto	l1829
 10736  0015BA                     l1824:
 10737                           
 10738                           ;usb_device.c: 2939: else
 10739                           ;usb_device.c: 2940: {
 10740                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 10741  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10742  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10743  0015C2  0E3B               	movlw	59
 10744  0015C4  16DF               	andwf	indf2,f,c
 10745  0015C6                     l1829:
 10746                           
 10747                           ;usb_device.c: 2943: }
 10748                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 10749  0015C6  0104               	movlb	4	; () banked
 10750  0015C8  5134               	movf	52,w,b	;volatile
 10751  0015CA  0B0F               	andlw	15
 10752  0015CC  0100               	movlb	0	; () banked
 10753  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10754  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10755  0015D2  0D01               	mullw	1
 10756  0015D4  0E26               	movlw	38
 10757  0015D6  24F3               	addwf	prodl,w,c
 10758  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 10759  0015DA  0E0F               	movlw	15
 10760  0015DC  20F4               	addwfc	prodh,w,c
 10761  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 10765  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 10766  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 10767  0015E8  0EFE               	movlw	254
 10768  0015EA  16DF               	andwf	indf2,f,c
 10769                           
 10770                           ; BSR set to: 0
 10771  0015EC  0012               	return	
 10772  0015EE                     __end_of_USBStdFeatureReqHandler:
 10773                           	opt stack 0
 10774                           tosu	equ	0xFFF
 10775                           tosh	equ	0xFFE
 10776                           tosl	equ	0xFFD
 10777                           pclath	equ	0xFFA
 10778                           tblptru	equ	0xFF8
 10779                           tblptrh	equ	0xFF7
 10780                           tblptrl	equ	0xFF6
 10781                           tablat	equ	0xFF5
 10782                           prodh	equ	0xFF4
 10783                           prodl	equ	0xFF3
 10784                           intcon	equ	0xFF2
 10785                           intcon2	equ	0xFF1
 10786                           intcon3	equ	0xFF0
 10787                           indf0	equ	0xFEF
 10788                           postinc0	equ	0xFEE
 10789                           plusw0	equ	0xFEB
 10790                           fsr0h	equ	0xFEA
 10791                           fsr0l	equ	0xFE9
 10792                           wreg	equ	0xFE8
 10793                           postinc1	equ	0xFE6
 10794                           postdec1	equ	0xFE5
 10795                           plusw1	equ	0xFE3
 10796                           fsr1h	equ	0xFE2
 10797                           fsr1l	equ	0xFE1
 10798                           indf2	equ	0xFDF
 10799                           postinc2	equ	0xFDE
 10800                           postdec2	equ	0xFDD
 10801                           plusw2	equ	0xFDB
 10802                           fsr2h	equ	0xFDA
 10803                           fsr2l	equ	0xFD9
 10804                           status	equ	0xFD8
 10805                           
 10806 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 10807 ;; Defined at:
 10808 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;  event           2   41[BANK0 ] enum E8346
 10811 ;;  pdata           2   43[BANK0 ] PTR void 
 10812 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 10813 ;;  size            2   45[BANK0 ] unsigned int 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      unsigned char 
 10818 ;; Registers used:
 10819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10825 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10828 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10829 ;;Total ram usage:        8 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; Hardware stack levels required when called:   14
 10832 ;; This function calls:
 10833 ;;		_CDCInitEP
 10834 ;;		_USBCheckCDCRequest
 10835 ;; This function is called by:
 10836 ;;		_USBDeviceTasks
 10837 ;;		_USBStdSetCfgHandler
 10838 ;;		_USBSuspend
 10839 ;;		_USBWakeFromSuspend
 10840 ;;		_USBCtrlTrfSetupHandler
 10841 ;;		_USBCheckStdRequest
 10842 ;;		_USBStdFeatureReqHandler
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text44
 10847  004E0A                     __ptext44:
 10848                           	opt stack 0
 10849  004E0A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 10850                           	opt stack 12
 10851                           
 10852                           ;usb_device_mgr.c: 106: switch( (int) event )
 10853                           
 10854                           ;incstack = 0
 10855  004E0A  D006               	goto	l1983
 10856  004E0C                     
 10857                           ;usb_device_mgr.c: 134: CDCInitEP();
 10858  004E0C  EC02  F026         	call	_CDCInitEP	;wreg free
 10859                           
 10860                           ;usb_device_mgr.c: 142: break;
 10861                           
 10862                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 10863                           
 10864                           ;usb_device_mgr.c: 139: break;
 10865  004E10  0012               	return	
 10866  004E12                     
 10867                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 10868  004E12  EC6A  F01F         	call	_USBCheckCDCRequest	;wreg free
 10869                           
 10870                           ;usb_device_mgr.c: 163: }
 10871                           
 10872                           ;usb_device_mgr.c: 162: break;
 10873                           
 10874                           ;usb_device_mgr.c: 161: default:
 10875                           
 10876                           ;usb_device_mgr.c: 159: break;
 10877                           
 10878                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 10879                           
 10880                           ;usb_device_mgr.c: 156: break;
 10881                           
 10882                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 10883                           
 10884                           ;usb_device_mgr.c: 153: break;
 10885  004E16  0012               	return	
 10886  004E18                     l1983:
 10887  004E18  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 10888  004E1C  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 10889                           
 10890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10891                           ; Switch size 1, requested type "space"
 10892                           ; Number of cases is 2, Range of values is 0 to 127
 10893                           ; switch strategies available:
 10894                           ; Name         Instructions Cycles
 10895                           ; simple_byte            7     4 (average)
 10896                           ;	Chosen strategy is simple_byte
 10897  004E20  0100               	movlb	0	; () banked
 10898  004E22  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 10899  004E24  0A00               	xorlw	0	; case 0
 10900  004E26  B4D8               	btfsc	status,2,c
 10901  004E28  D004               	goto	l14285
 10902  004E2A  0A7F               	xorlw	127	; case 127
 10903  004E2C  A4D8               	btfss	status,2,c
 10904  004E2E  0012               	return	
 10905  004E30  D018               	goto	l14287
 10906  004E32                     l14285:
 10907                           
 10908                           ; BSR set to: 0
 10909                           ; Switch size 1, requested type "space"
 10910                           ; Number of cases is 8, Range of values is 1 to 117
 10911                           ; switch strategies available:
 10912                           ; Name         Instructions Cycles
 10913                           ; simple_byte           25    13 (average)
 10914                           ;	Chosen strategy is simple_byte
 10915  004E32  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 10916  004E34  0A01               	xorlw	1	; case 1
 10917  004E36  B4D8               	btfsc	status,2,c
 10918  004E38  D7E9               	goto	l1989
 10919  004E3A  0A03               	xorlw	3	; case 2
 10920  004E3C  B4D8               	btfsc	status,2,c
 10921  004E3E  0012               	return	
 10922  004E40  0A01               	xorlw	1	; case 3
 10923  004E42  B4D8               	btfsc	status,2,c
 10924  004E44  D7E6               	goto	l1991
 10925  004E46  0A06               	xorlw	6	; case 5
 10926  004E48  B4D8               	btfsc	status,2,c
 10927  004E4A  0012               	return	
 10928  004E4C  0A77               	xorlw	119	; case 114
 10929  004E4E  B4D8               	btfsc	status,2,c
 10930  004E50  0012               	return	
 10931  004E52  0A01               	xorlw	1	; case 115
 10932  004E54  B4D8               	btfsc	status,2,c
 10933  004E56  0012               	return	
 10934  004E58  0A07               	xorlw	7	; case 116
 10935  004E5A  B4D8               	btfsc	status,2,c
 10936  004E5C  0012               	return	
 10937  004E5E  0A01               	xorlw	1	; case 117
 10938  004E60  0012               	return	
 10939  004E62                     l14287:
 10940                           
 10941                           ; BSR set to: 0
 10942                           ; Switch size 1, requested type "space"
 10943                           ; Number of cases is 1, Range of values is 255 to 255
 10944                           ; switch strategies available:
 10945                           ; Name         Instructions Cycles
 10946                           ; simple_byte            4     3 (average)
 10947                           ;	Chosen strategy is simple_byte
 10948  004E62  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 10949  004E64  0AFF               	xorlw	255	; case 255
 10950  004E66  0012               	return	
 10951  004E68                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 10952                           	opt stack 0
 10953                           tosu	equ	0xFFF
 10954                           tosh	equ	0xFFE
 10955                           tosl	equ	0xFFD
 10956                           pclath	equ	0xFFA
 10957                           tblptru	equ	0xFF8
 10958                           tblptrh	equ	0xFF7
 10959                           tblptrl	equ	0xFF6
 10960                           tablat	equ	0xFF5
 10961                           prodh	equ	0xFF4
 10962                           prodl	equ	0xFF3
 10963                           intcon	equ	0xFF2
 10964                           intcon2	equ	0xFF1
 10965                           intcon3	equ	0xFF0
 10966                           indf0	equ	0xFEF
 10967                           postinc0	equ	0xFEE
 10968                           plusw0	equ	0xFEB
 10969                           fsr0h	equ	0xFEA
 10970                           fsr0l	equ	0xFE9
 10971                           wreg	equ	0xFE8
 10972                           postinc1	equ	0xFE6
 10973                           postdec1	equ	0xFE5
 10974                           plusw1	equ	0xFE3
 10975                           fsr1h	equ	0xFE2
 10976                           fsr1l	equ	0xFE1
 10977                           indf2	equ	0xFDF
 10978                           postinc2	equ	0xFDE
 10979                           postdec2	equ	0xFDD
 10980                           plusw2	equ	0xFDB
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _USBCheckCDCRequest *****************
 10986 ;; Defined at:
 10987 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, status,0
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:   11
 11008 ;; This function calls:
 11009 ;;		Nothing
 11010 ;; This function is called by:
 11011 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text45
 11016  003ED4                     __ptext45:
 11017                           	opt stack 0
 11018  003ED4                     _USBCheckCDCRequest:
 11019                           	opt stack 14
 11020                           
 11021                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11022                           
 11023                           ;incstack = 0
 11024  003ED4  0104               	movlb	4	; () banked
 11025  003ED6  5130               	movf	48,w,b	;volatile
 11026  003ED8  0B1F               	andlw	31
 11027  003EDA  06E8               	decf	wreg,f,c
 11028  003EDC  A4D8               	btfss	status,2,c
 11029  003EDE  0012               	return	
 11030                           
 11031                           ; BSR set to: 4
 11032                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11033                           
 11034                           ; BSR set to: 4
 11035                           
 11036                           ; BSR set to: 4
 11037  003EE0  3930               	swapf	48,w,b	;volatile
 11038  003EE2  32E8               	rrcf	wreg,f,c
 11039  003EE4  0B03               	andlw	3
 11040  003EE6  06E8               	decf	wreg,f,c
 11041  003EE8  A4D8               	btfss	status,2,c
 11042  003EEA  0012               	return	
 11043                           
 11044                           ; BSR set to: 4
 11045                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11046                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11047                           
 11048                           ; BSR set to: 4
 11049                           
 11050                           ; BSR set to: 4
 11051  003EEC  5134               	movf	52,w,b	;volatile
 11052  003EEE  B4D8               	btfsc	status,2,c
 11053  003EF0  D037               	goto	l1885
 11054                           
 11055                           ; BSR set to: 4
 11056  003EF2  0534               	decf	52,w,b	;volatile
 11057  003EF4  A4D8               	btfss	status,2,c
 11058  003EF6  0012               	return	
 11059  003EF8  D033               	goto	l1885
 11060  003EFA                     
 11061                           ; BSR set to: 4
 11062                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11063                           
 11064                           ; BSR set to: 4
 11065  003EFA  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11066  003EFC  0100               	movlb	0	; () banked
 11067  003EFE  6FAC               	movwf	_inPipes& (0+255),b
 11068  003F00  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11069  003F02  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11073  003F04  0E00               	movlw	0
 11074  003F06  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11075  003F08  0E08               	movlw	8
 11076  003F0A  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11077                           
 11078                           ; BSR set to: 0
 11079                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11080  003F0C  81AF               	bsf	(_inPipes+3)& (0+255),0,b
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11084  003F0E  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11085                           
 11086                           ;usb_device_cdc.c: 178: break;
 11087  003F10  0012               	return	
 11088  003F12                     
 11089                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11090                           
 11091                           ; BSR set to: 0
 11092  003F12  0E76               	movlw	low _dummy_encapsulated_cmd_response
 11093  003F14  0100               	movlb	0	; () banked
 11094  003F16  6FAC               	movwf	_inPipes& (0+255),b
 11095  003F18  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11096  003F1A  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11100  003F1C  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11101                           
 11102                           ;usb_device_cdc.c: 183: break;
 11103  003F1E  0012               	return	
 11104  003F20                     l1889:
 11105                           
 11106                           ; BSR set to: 4
 11107                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11108  003F20  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11109  003F24  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11110                           
 11111                           ; BSR set to: 4
 11112                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11113  003F28  0E7E               	movlw	low _line_coding
 11114  003F2A  0101               	movlb	1	; () banked
 11115  003F2C  6FC9               	movwf	_outPipes& (0+255),b
 11116  003F2E  0E03               	movlw	high _line_coding
 11117  003F30  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11118                           
 11119                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11120  003F32  0E00               	movlw	0
 11121  003F34  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11122  003F36  0E00               	movlw	0
 11123  003F38  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11124                           
 11125                           ; BSR set to: 1
 11126                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11127  003F3A  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11128                           
 11129                           ;usb_device_cdc.c: 192: break;
 11130  003F3C  0012               	return	
 11131  003F3E                     
 11132                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11133                           
 11134                           ; BSR set to: 1
 11135  003F3E  0E7E               	movlw	low _line_coding
 11136  003F40  0100               	movlb	0	; () banked
 11137  003F42  6FAC               	movwf	_inPipes& (0+255),b
 11138  003F44  0E03               	movlw	high _line_coding
 11139  003F46  6FAD               	movwf	(_inPipes+1)& (0+255),b
 11140                           
 11141                           ; BSR set to: 0
 11142  003F48  0E00               	movlw	0
 11143  003F4A  6FB1               	movwf	(_inPipes+5)& (0+255),b
 11144  003F4C  0E07               	movlw	7
 11145  003F4E  6FB0               	movwf	(_inPipes+4)& (0+255),b
 11146                           
 11147                           ; BSR set to: 0
 11148  003F50  0EC1               	movlw	193
 11149  003F52  6FAF               	movwf	(_inPipes+3)& (0+255),b
 11150                           
 11151                           ;usb_device_cdc.c: 199: break;
 11152  003F54  0012               	return	
 11153  003F56                     l1891:
 11154                           
 11155                           ; BSR set to: 4
 11156                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11157  003F56  C432 F1E2          	movff	1074,_control_signal_bitmap	;volatile
 11158                           
 11159                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11160  003F5A  0100               	movlb	0	; () banked
 11161  003F5C  8FAF               	bsf	(_inPipes+3)& (0+255),7,b
 11162                           
 11163                           ; BSR set to: 0
 11164                           ;usb_device_cdc.c: 261: }
 11165                           
 11166                           ; BSR set to: 0
 11167                           ;usb_device_cdc.c: 260: break;
 11168                           
 11169                           ;usb_device_cdc.c: 259: default:
 11170                           
 11171                           ;usb_device_cdc.c: 235: break;
 11172  003F5E  0012               	return	
 11173  003F60                     l1885:
 11174                           
 11175                           ; BSR set to: 0
 11176  003F60  0104               	movlb	4	; () banked
 11177  003F62  5131               	movf	49,w,b	;volatile
 11178                           
 11179                           ; Switch size 1, requested type "space"
 11180                           ; Number of cases is 5, Range of values is 0 to 34
 11181                           ; switch strategies available:
 11182                           ; Name         Instructions Cycles
 11183                           ; simple_byte           16     9 (average)
 11184                           ;	Chosen strategy is simple_byte
 11185  003F64  0A00               	xorlw	0	; case 0
 11186  003F66  B4D8               	btfsc	status,2,c
 11187  003F68  D7C8               	goto	l1886
 11188  003F6A  0A01               	xorlw	1	; case 1
 11189  003F6C  B4D8               	btfsc	status,2,c
 11190  003F6E  D7D1               	goto	l1888
 11191  003F70  0A21               	xorlw	33	; case 32
 11192  003F72  B4D8               	btfsc	status,2,c
 11193  003F74  D7D5               	goto	l1889
 11194  003F76  0A01               	xorlw	1	; case 33
 11195  003F78  B4D8               	btfsc	status,2,c
 11196  003F7A  D7E1               	goto	l1890
 11197  003F7C  0A03               	xorlw	3	; case 34
 11198  003F7E  A4D8               	btfss	status,2,c
 11199  003F80  0012               	return	
 11200  003F82  D7E9               	goto	l1891
 11201  003F84                     __end_of_USBCheckCDCRequest:
 11202                           	opt stack 0
 11203                           tosu	equ	0xFFF
 11204                           tosh	equ	0xFFE
 11205                           tosl	equ	0xFFD
 11206                           pclath	equ	0xFFA
 11207                           tblptru	equ	0xFF8
 11208                           tblptrh	equ	0xFF7
 11209                           tblptrl	equ	0xFF6
 11210                           tablat	equ	0xFF5
 11211                           prodh	equ	0xFF4
 11212                           prodl	equ	0xFF3
 11213                           intcon	equ	0xFF2
 11214                           intcon2	equ	0xFF1
 11215                           intcon3	equ	0xFF0
 11216                           indf0	equ	0xFEF
 11217                           postinc0	equ	0xFEE
 11218                           plusw0	equ	0xFEB
 11219                           fsr0h	equ	0xFEA
 11220                           fsr0l	equ	0xFE9
 11221                           wreg	equ	0xFE8
 11222                           postinc1	equ	0xFE6
 11223                           postdec1	equ	0xFE5
 11224                           plusw1	equ	0xFE3
 11225                           fsr1h	equ	0xFE2
 11226                           fsr1l	equ	0xFE1
 11227                           indf2	equ	0xFDF
 11228                           postinc2	equ	0xFDE
 11229                           postdec2	equ	0xFDD
 11230                           plusw2	equ	0xFDB
 11231                           fsr2h	equ	0xFDA
 11232                           fsr2l	equ	0xFD9
 11233                           status	equ	0xFD8
 11234                           
 11235 ;; *************** function _CDCInitEP *****************
 11236 ;; Defined at:
 11237 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;		None
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;		None
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  1    wreg      void 
 11244 ;; Registers used:
 11245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11255 ;;Total ram usage:        0 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:   13
 11258 ;; This function calls:
 11259 ;;		_USBEnableEndpoint
 11260 ;;		_USBTransferOnePacket
 11261 ;; This function is called by:
 11262 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           	psect	text46
 11267  004C04                     __ptext46:
 11268                           	opt stack 0
 11269  004C04                     _CDCInitEP:
 11270                           	opt stack 12
 11271                           
 11272                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11273                           
 11274                           ;incstack = 0
 11275  004C04  0E80               	movlw	128
 11276  004C06  0103               	movlb	3	; () banked
 11277  004C08  6F7E               	movwf	_line_coding& (0+255),b
 11278  004C0A  0E25               	movlw	37
 11279  004C0C  6F7F               	movwf	(_line_coding+1)& (0+255),b
 11280  004C0E  0E00               	movlw	0
 11281  004C10  6F80               	movwf	(_line_coding+2)& (0+255),b
 11282  004C12  0E00               	movlw	0
 11283  004C14  6F81               	movwf	(_line_coding+3)& (0+255),b
 11284                           
 11285                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11286  004C16  0E00               	movlw	0
 11287  004C18  6F82               	movwf	(_line_coding+4)& (0+255),b
 11288                           
 11289                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11290  004C1A  0E00               	movlw	0
 11291  004C1C  6F83               	movwf	(_line_coding+5)& (0+255),b
 11292                           
 11293                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11294  004C1E  0E08               	movlw	8
 11295  004C20  6F84               	movwf	(_line_coding+6)& (0+255),b
 11296                           
 11297                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11298  004C22  0E00               	movlw	0
 11299  004C24  0100               	movlb	0	; () banked
 11300  004C26  6FC2               	movwf	_cdc_rx_len& (0+255),b
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11304  004C28  0E1A               	movlw	26
 11305  004C2A  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11306  004C2C  0E01               	movlw	1
 11307  004C2E  ECB5  F02A         	call	_USBEnableEndpoint
 11308                           
 11309                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11310  004C32  0E1E               	movlw	30
 11311  004C34  0100               	movlb	0	; () banked
 11312  004C36  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11313  004C38  0E02               	movlw	2
 11314  004C3A  ECB5  F02A         	call	_USBEnableEndpoint
 11315                           
 11316                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11317  004C3E  0E00               	movlw	0
 11318  004C40  0100               	movlb	0	; () banked
 11319  004C42  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11320  004C44  0E50               	movlw	low _cdc_data_rx
 11321  004C46  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11322  004C48  0E05               	movlw	high _cdc_data_rx
 11323  004C4A  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11324  004C4C  0E40               	movlw	64
 11325  004C4E  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11326  004C50  0E02               	movlw	2
 11327  004C52  ECB2  F01E         	call	_USBTransferOnePacket
 11328  004C56  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11329  004C5A  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11330                           
 11331                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11332  004C5E  0E00               	movlw	0
 11333  004C60  0101               	movlb	1	; () banked
 11334  004C62  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11335  004C64  0E00               	movlw	0
 11336  004C66  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11337                           
 11338                           ; BSR set to: 1
 11339                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11340  004C68  0E00               	movlw	0
 11341  004C6A  0100               	movlb	0	; () banked
 11342  004C6C  6FC1               	movwf	_cdc_trf_state& (0+255),b
 11343                           
 11344                           ; BSR set to: 0
 11345  004C6E  0012               	return		;funcret
 11346  004C70                     __end_of_CDCInitEP:
 11347                           	opt stack 0
 11348                           tosu	equ	0xFFF
 11349                           tosh	equ	0xFFE
 11350                           tosl	equ	0xFFD
 11351                           pclath	equ	0xFFA
 11352                           tblptru	equ	0xFF8
 11353                           tblptrh	equ	0xFF7
 11354                           tblptrl	equ	0xFF6
 11355                           tablat	equ	0xFF5
 11356                           prodh	equ	0xFF4
 11357                           prodl	equ	0xFF3
 11358                           intcon	equ	0xFF2
 11359                           intcon2	equ	0xFF1
 11360                           intcon3	equ	0xFF0
 11361                           indf0	equ	0xFEF
 11362                           postinc0	equ	0xFEE
 11363                           plusw0	equ	0xFEB
 11364                           fsr0h	equ	0xFEA
 11365                           fsr0l	equ	0xFE9
 11366                           wreg	equ	0xFE8
 11367                           postinc1	equ	0xFE6
 11368                           postdec1	equ	0xFE5
 11369                           plusw1	equ	0xFE3
 11370                           fsr1h	equ	0xFE2
 11371                           fsr1l	equ	0xFE1
 11372                           indf2	equ	0xFDF
 11373                           postinc2	equ	0xFDE
 11374                           postdec2	equ	0xFDD
 11375                           plusw2	equ	0xFDB
 11376                           fsr2h	equ	0xFDA
 11377                           fsr2l	equ	0xFD9
 11378                           status	equ	0xFD8
 11379                           
 11380 ;; *************** function _USBEnableEndpoint *****************
 11381 ;; Defined at:
 11382 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;  ep              1    wreg     unsigned char 
 11385 ;;  options         1   37[BANK0 ] unsigned char 
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;  ep              1   40[BANK0 ] unsigned char 
 11388 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11389 ;;		 -> UEP0(1), 
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  1    wreg      void 
 11392 ;; Registers used:
 11393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11399 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11400 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11402 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11403 ;;Total ram usage:        4 bytes
 11404 ;; Hardware stack levels used:    1
 11405 ;; Hardware stack levels required when called:   12
 11406 ;; This function calls:
 11407 ;;		_USBConfigureEndpoint
 11408 ;; This function is called by:
 11409 ;;		_CDCInitEP
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text47
 11414  00556A                     __ptext47:
 11415                           	opt stack 0
 11416  00556A                     _USBEnableEndpoint:
 11417                           	opt stack 12
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;incstack = 0
 11421                           ;USBEnableEndpoint@ep stored from wreg
 11422  00556A  0100               	movlb	0	; () banked
 11423  00556C  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11424                           
 11425                           ;usb_device.c: 898: unsigned char* p;
 11426                           ;usb_device.c: 902: if(options & 0x04)
 11427  00556E  0100               	movlb	0	; () banked
 11428  005570  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11429  005572  D005               	goto	l1626
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;usb_device.c: 903: {
 11433                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11434  005574  0E00               	movlw	0
 11435  005576  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11436  005578  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11437  00557A  EC05  F022         	call	_USBConfigureEndpoint
 11438  00557E                     l1626:
 11439                           
 11440                           ;usb_device.c: 905: }
 11441                           ;usb_device.c: 906: if(options & 0x02)
 11442  00557E  0100               	movlb	0	; () banked
 11443  005580  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11444  005582  D005               	goto	l1627
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;usb_device.c: 907: {
 11448                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11449  005584  0E01               	movlw	1
 11450  005586  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11451  005588  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11452  00558A  EC05  F022         	call	_USBConfigureEndpoint
 11453  00558E                     l1627:
 11454                           
 11455                           ;usb_device.c: 909: }
 11456                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11457  00558E  0100               	movlb	0	; () banked
 11458  005590  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11459  005592  0D01               	mullw	1
 11460  005594  0E26               	movlw	38
 11461  005596  24F3               	addwf	prodl,w,c
 11462  005598  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11463  00559A  0E0F               	movlw	15
 11464  00559C  20F4               	addwfc	prodh,w,c
 11465  00559E  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;usb_device.c: 919: *p = options;
 11469  0055A0  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11470  0055A4  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11471  0055A8  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11472                           
 11473                           ; BSR set to: 0
 11474  0055AC  0012               	return		;funcret
 11475  0055AE                     __end_of_USBEnableEndpoint:
 11476                           	opt stack 0
 11477                           tosu	equ	0xFFF
 11478                           tosh	equ	0xFFE
 11479                           tosl	equ	0xFFD
 11480                           pclath	equ	0xFFA
 11481                           tblptru	equ	0xFF8
 11482                           tblptrh	equ	0xFF7
 11483                           tblptrl	equ	0xFF6
 11484                           tablat	equ	0xFF5
 11485                           prodh	equ	0xFF4
 11486                           prodl	equ	0xFF3
 11487                           intcon	equ	0xFF2
 11488                           intcon2	equ	0xFF1
 11489                           intcon3	equ	0xFF0
 11490                           indf0	equ	0xFEF
 11491                           postinc0	equ	0xFEE
 11492                           plusw0	equ	0xFEB
 11493                           fsr0h	equ	0xFEA
 11494                           fsr0l	equ	0xFE9
 11495                           wreg	equ	0xFE8
 11496                           postinc1	equ	0xFE6
 11497                           postdec1	equ	0xFE5
 11498                           plusw1	equ	0xFE3
 11499                           fsr1h	equ	0xFE2
 11500                           fsr1l	equ	0xFE1
 11501                           indf2	equ	0xFDF
 11502                           postinc2	equ	0xFDE
 11503                           postdec2	equ	0xFDD
 11504                           plusw2	equ	0xFDB
 11505                           fsr2h	equ	0xFDA
 11506                           fsr2l	equ	0xFD9
 11507                           status	equ	0xFD8
 11508                           
 11509 ;; *************** function _USBConfigureEndpoint *****************
 11510 ;; Defined at:
 11511 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  EPNum           1    wreg     unsigned char 
 11514 ;;  direction       1   29[BANK0 ] unsigned char 
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11517 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11518 ;;		 -> BDT(48), 
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11528 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11530 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11531 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11532 ;;Total ram usage:        8 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:   11
 11535 ;; This function calls:
 11536 ;;		Nothing
 11537 ;; This function is called by:
 11538 ;;		_USBEnableEndpoint
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text48
 11543  00440A                     __ptext48:
 11544                           	opt stack 0
 11545  00440A                     _USBConfigureEndpoint:
 11546                           	opt stack 12
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;incstack = 0
 11550                           ;USBConfigureEndpoint@EPNum stored from wreg
 11551  00440A  0100               	movlb	0	; () banked
 11552  00440C  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11553                           
 11554                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11555                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11556  00440E  0E00               	movlw	0
 11557  004410  0100               	movlb	0	; () banked
 11558  004412  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11559  004414  0E04               	movlw	4
 11560  004416  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11564  004418  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11565  00441A  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11566  00441C  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11567  00441E  90D8               	bcf	status,0,c
 11568  004420  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11569  004422  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11570  004424  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11571  004426  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11572  004428  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11573  00442A  90D8               	bcf	status,0,c
 11574  00442C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11575  00442E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11576  004430  90D8               	bcf	status,0,c
 11577  004432  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11578  004434  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11579  004436  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11580  004438  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11581  00443A  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11582  00443C  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11583  00443E  90D8               	bcf	status,0,c
 11584  004440  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11585  004442  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11586  004444  90D8               	bcf	status,0,c
 11587  004446  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11588  004448  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11589  00444A  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11590  00444C  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11591  00444E  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11592  004450  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11596  004452  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11597  004456  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11598  00445A  9EDF               	bcf	indf2,7,c
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;usb_device.c: 1575: if(direction == 0)
 11602  00445C  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11603  00445E  A4D8               	btfss	status,2,c
 11604  004460  D007               	goto	l1662
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;usb_device.c: 1576: {
 11608                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11609  004462  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11610  004464  0D02               	mullw	2
 11611  004466  0E0E               	movlw	low _pBDTEntryOut
 11612  004468  24F3               	addwf	prodl,w,c
 11613  00446A  6ED9               	movwf	fsr2l,c
 11614  00446C  0E03               	movlw	high _pBDTEntryOut
 11615  00446E  D006               	goto	L10
 11616  004470                     l1662:
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;usb_device.c: 1579: else
 11620                           ;usb_device.c: 1580: {
 11621                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11622                           
 11623                           ; BSR set to: 0
 11624  004470  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11625  004472  0D02               	mullw	2
 11626  004474  0EB2               	movlw	low _pBDTEntryIn
 11627  004476  24F3               	addwf	prodl,w,c
 11628  004478  6ED9               	movwf	fsr2l,c
 11629  00447A  0E00               	movlw	high _pBDTEntryIn
 11630  00447C                     L10:
 11631  00447C  20F4               	addwfc	prodh,w,c
 11632  00447E  6EDA               	movwf	fsr2h,c
 11633  004480  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11634  004484  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;usb_device.c: 1582: }
 11638                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11639                           
 11640                           ; BSR set to: 0
 11641  004488  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11642  00448C  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11643  004490  9CDF               	bcf	indf2,6,c
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11647  004492  EE20 F004          	lfsr	2,4
 11648  004496  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11649  004498  26D9               	addwf	fsr2l,f,c
 11650  00449A  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11651  00449C  22DA               	addwfc	fsr2h,f,c
 11652  00449E  8CDF               	bsf	indf2,6,c
 11653                           
 11654                           ; BSR set to: 0
 11655  0044A0  0012               	return		;funcret
 11656  0044A2                     __end_of_USBConfigureEndpoint:
 11657                           	opt stack 0
 11658                           tosu	equ	0xFFF
 11659                           tosh	equ	0xFFE
 11660                           tosl	equ	0xFFD
 11661                           pclath	equ	0xFFA
 11662                           tblptru	equ	0xFF8
 11663                           tblptrh	equ	0xFF7
 11664                           tblptrl	equ	0xFF6
 11665                           tablat	equ	0xFF5
 11666                           prodh	equ	0xFF4
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           intcon2	equ	0xFF1
 11670                           intcon3	equ	0xFF0
 11671                           indf0	equ	0xFEF
 11672                           postinc0	equ	0xFEE
 11673                           plusw0	equ	0xFEB
 11674                           fsr0h	equ	0xFEA
 11675                           fsr0l	equ	0xFE9
 11676                           wreg	equ	0xFE8
 11677                           postinc1	equ	0xFE6
 11678                           postdec1	equ	0xFE5
 11679                           plusw1	equ	0xFE3
 11680                           fsr1h	equ	0xFE2
 11681                           fsr1l	equ	0xFE1
 11682                           indf2	equ	0xFDF
 11683                           postinc2	equ	0xFDE
 11684                           postdec2	equ	0xFDD
 11685                           plusw2	equ	0xFDB
 11686                           fsr2h	equ	0xFDA
 11687                           fsr2l	equ	0xFD9
 11688                           status	equ	0xFD8
 11689                           
 11690 ;; *************** function _USBCtrlTrfOutHandler *****************
 11691 ;; Defined at:
 11692 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;		None
 11695 ;; Auto vars:     Size  Location     Type
 11696 ;;		None
 11697 ;; Return value:  Size  Location     Type
 11698 ;;                  1    wreg      void 
 11699 ;; Registers used:
 11700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11701 ;; Tracked objects:
 11702 ;;		On entry : 0/0
 11703 ;;		On exit  : 0/0
 11704 ;;		Unchanged: 0/0
 11705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11710 ;;Total ram usage:        0 bytes
 11711 ;; Hardware stack levels used:    1
 11712 ;; Hardware stack levels required when called:   13
 11713 ;; This function calls:
 11714 ;;		_USBCtrlTrfRxService
 11715 ;; This function is called by:
 11716 ;;		_USBCtrlEPService
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           	psect	text49
 11721  004CDC                     __ptext49:
 11722                           	opt stack 0
 11723  004CDC                     _USBCtrlTrfOutHandler:
 11724                           	opt stack 12
 11725                           
 11726                           ;usb_device.c: 2557: if(controlTransferState == 2)
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;incstack = 0
 11730  004CDC  0E02               	movlw	2
 11731  004CDE  0100               	movlb	0	; () banked
 11732  004CE0  19C9               	xorwf	_controlTransferState& (0+255),w,b
 11733  004CE2  A4D8               	btfss	status,2,c
 11734  004CE4  D003               	goto	l1768
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;usb_device.c: 2558: {
 11738                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 11739  004CE6  EC78  F014         	call	_USBCtrlTrfRxService	;wreg free
 11740                           
 11741                           ;usb_device.c: 2560: }
 11742  004CEA  0012               	return	
 11743  004CEC                     l1768:
 11744                           
 11745                           ;usb_device.c: 2561: else
 11746                           ;usb_device.c: 2562: {
 11747                           ;usb_device.c: 2565: controlTransferState = 0;
 11748  004CEC  0E00               	movlw	0
 11749  004CEE  0100               	movlb	0	; () banked
 11750  004CF0  6FC9               	movwf	_controlTransferState& (0+255),b
 11751                           
 11752                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 11753  004CF2  0101               	movlb	1	; () banked
 11754  004CF4  51E5               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 11755  004CF6  A4D8               	btfss	status,2,c
 11756  004CF8  D020               	goto	l1770
 11757                           
 11758                           ; BSR set to: 1
 11759                           ;usb_device.c: 2573: {
 11760                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 11761  004CFA  0100               	movlb	0	; () banked
 11762  004CFC  EE20 F001          	lfsr	2,1
 11763  004D00  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11764  004D02  26D9               	addwf	fsr2l,f,c
 11765  004D04  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11766  004D06  22DA               	addwfc	fsr2h,f,c
 11767  004D08  0E08               	movlw	8
 11768  004D0A  6EDF               	movwf	indf2,c
 11769                           
 11770                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11771  004D0C  EE20 F002          	lfsr	2,2
 11772  004D10  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11773  004D12  26D9               	addwf	fsr2l,f,c
 11774  004D14  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11775  004D16  22DA               	addwfc	fsr2h,f,c
 11776  004D18  0E30               	movlw	48
 11777  004D1A  6EDE               	movwf	postinc2,c
 11778  004D1C  0E04               	movlw	4
 11779  004D1E  6EDD               	movwf	postdec2,c
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11783  004D20  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11784  004D24  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11785  004D28  0E0C               	movlw	12
 11786  004D2A  6EDF               	movwf	indf2,c
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11790  004D2C  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11791  004D30  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11792  004D34  0E00               	movlw	0
 11793  004D36  8EDB               	bsf	plusw2,7,c
 11794                           
 11795                           ;usb_device.c: 2578: }
 11796  004D38  0012               	return	
 11797  004D3A                     l1770:
 11798                           
 11799                           ;usb_device.c: 2579: else
 11800                           ;usb_device.c: 2580: {
 11801                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 11802                           
 11803                           ; BSR set to: 0
 11804  004D3A  0E00               	movlw	0
 11805  004D3C  0101               	movlb	1	; () banked
 11806  004D3E  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11807                           
 11808                           ; BSR set to: 1
 11809  004D40  0012               	return	
 11810  004D42                     __end_of_USBCtrlTrfOutHandler:
 11811                           	opt stack 0
 11812                           tosu	equ	0xFFF
 11813                           tosh	equ	0xFFE
 11814                           tosl	equ	0xFFD
 11815                           pclath	equ	0xFFA
 11816                           tblptru	equ	0xFF8
 11817                           tblptrh	equ	0xFF7
 11818                           tblptrl	equ	0xFF6
 11819                           tablat	equ	0xFF5
 11820                           prodh	equ	0xFF4
 11821                           prodl	equ	0xFF3
 11822                           intcon	equ	0xFF2
 11823                           intcon2	equ	0xFF1
 11824                           intcon3	equ	0xFF0
 11825                           indf0	equ	0xFEF
 11826                           postinc0	equ	0xFEE
 11827                           plusw0	equ	0xFEB
 11828                           fsr0h	equ	0xFEA
 11829                           fsr0l	equ	0xFE9
 11830                           wreg	equ	0xFE8
 11831                           postinc1	equ	0xFE6
 11832                           postdec1	equ	0xFE5
 11833                           plusw1	equ	0xFE3
 11834                           fsr1h	equ	0xFE2
 11835                           fsr1l	equ	0xFE1
 11836                           indf2	equ	0xFDF
 11837                           postinc2	equ	0xFDE
 11838                           postdec2	equ	0xFDD
 11839                           plusw2	equ	0xFDB
 11840                           fsr2h	equ	0xFDA
 11841                           fsr2l	equ	0xFD9
 11842                           status	equ	0xFD8
 11843                           
 11844 ;; *************** function _USBCtrlTrfRxService *****************
 11845 ;; Defined at:
 11846 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;		None
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 11851 ;;  i               1   29[BANK0 ] unsigned char 
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  1    wreg      void 
 11854 ;; Registers used:
 11855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11862 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;Total ram usage:        2 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:   12
 11868 ;; This function calls:
 11869 ;;		_USBCtrlEPAllowStatusStage
 11870 ;; This function is called by:
 11871 ;;		_USBCtrlTrfOutHandler
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           	psect	text50
 11876  0028F0                     __ptext50:
 11877                           	opt stack 0
 11878  0028F0                     _USBCtrlTrfRxService:
 11879                           	opt stack 12
 11880                           
 11881                           ;usb_device.c: 1872: uint8_t byteToRead;
 11882                           ;usb_device.c: 1873: uint8_t i;
 11883                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 11884                           
 11885                           ;incstack = 0
 11886  0028F0  0100               	movlb	0	; () banked
 11887  0028F2  EE20 F001          	lfsr	2,1
 11888  0028F6  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11889  0028F8  26D9               	addwf	fsr2l,f,c
 11890  0028FA  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11891  0028FC  22DA               	addwfc	fsr2h,f,c
 11892  0028FE  50DF               	movf	indf2,w,c
 11893  002900  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 11894                           
 11895                           ; BSR set to: 0
 11896                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 11897  002902  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 11898  002904  0101               	movlb	1	; () banked
 11899  002906  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 11900  002908  0E00               	movlw	0
 11901  00290A  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 11902  00290C  A0D8               	btfss	status,0,c
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;usb_device.c: 1884: {
 11906                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 11907  00290E  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 11908                           
 11909                           ; BSR set to: 1
 11910                           ;usb_device.c: 1886: }
 11911                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 11912                           
 11913                           ; BSR set to: 1
 11914  002912  0100               	movlb	0	; () banked
 11915  002914  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 11916  002916  0101               	movlb	1	; () banked
 11917  002918  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 11918  00291A  0E00               	movlw	0
 11919  00291C  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 11920                           
 11921                           ; BSR set to: 1
 11922                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 11923  00291E  0E00               	movlw	0
 11924  002920  0100               	movlb	0	; () banked
 11925  002922  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 11926  002924  D013               	goto	l1696
 11927  002926                     
 11928                           ; BSR set to: 0
 11929                           ;usb_device.c: 1893: {
 11930                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 11931                           
 11932                           ; BSR set to: 0
 11933  002926  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 11934  002928  0D01               	mullw	1
 11935  00292A  0E38               	movlw	56
 11936  00292C  24F3               	addwf	prodl,w,c
 11937  00292E  6ED9               	movwf	fsr2l,c
 11938  002930  0E04               	movlw	4
 11939  002932  20F4               	addwfc	prodh,w,c
 11940  002934  6EDA               	movwf	fsr2h,c
 11941  002936  C1C9  FFE1         	movff	_outPipes,fsr1l
 11942  00293A  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 11943  00293E  CFDF FFE7          	movff	indf2,indf1
 11944                           
 11945                           ; BSR set to: 0
 11946  002942  0101               	movlb	1	; () banked
 11947  002944  4BC9               	infsnz	_outPipes& (0+255),f,b
 11948  002946  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 11949                           
 11950                           ; BSR set to: 1
 11951  002948  0100               	movlb	0	; () banked
 11952  00294A  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 11953  00294C                     l1696:
 11954                           
 11955                           ; BSR set to: 0
 11956                           
 11957                           ; BSR set to: 0
 11958  00294C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 11959  00294E  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 11960  002950  A0D8               	btfss	status,0,c
 11961  002952  D7E9               	goto	l1697
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;usb_device.c: 1895: }
 11965                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 11966                           
 11967                           ; BSR set to: 0
 11968  002954  0101               	movlb	1	; () banked
 11969  002956  51CD               	movf	(_outPipes+4)& (0+255),w,b
 11970  002958  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 11971  00295A  B4D8               	btfsc	status,2,c
 11972  00295C  D033               	goto	l1699
 11973                           
 11974                           ; BSR set to: 1
 11975                           ;usb_device.c: 1900: {
 11976                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 11977  00295E  0100               	movlb	0	; () banked
 11978  002960  EE20 F001          	lfsr	2,1
 11979  002964  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11980  002966  26D9               	addwf	fsr2l,f,c
 11981  002968  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11982  00296A  22DA               	addwfc	fsr2h,f,c
 11983  00296C  0E08               	movlw	8
 11984  00296E  6EDF               	movwf	indf2,c
 11985                           
 11986                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 11987  002970  EE20 F002          	lfsr	2,2
 11988  002974  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11989  002976  26D9               	addwf	fsr2l,f,c
 11990  002978  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11991  00297A  22DA               	addwfc	fsr2h,f,c
 11992  00297C  0E38               	movlw	56
 11993  00297E  6EDE               	movwf	postinc2,c
 11994  002980  0E04               	movlw	4
 11995  002982  6EDD               	movwf	postdec2,c
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 11999  002984  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12000  002988  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12001  00298C  BCDF               	btfsc	indf2,6,c
 12002  00298E  D00D               	goto	l1700
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;usb_device.c: 1904: {
 12006                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12007  002990  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12008  002994  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12009  002998  0E48               	movlw	72
 12010  00299A  6EDF               	movwf	indf2,c
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12014  00299C  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12015  0029A0  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12016  0029A4  0E00               	movlw	0
 12017  0029A6  8EDB               	bsf	plusw2,7,c
 12018                           
 12019                           ;usb_device.c: 1907: }
 12020  0029A8  0012               	return	
 12021  0029AA                     l1700:
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;usb_device.c: 1908: else
 12025                           ;usb_device.c: 1909: {
 12026                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12027                           
 12028                           ; BSR set to: 0
 12029  0029AA  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12030  0029AE  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12031  0029B2  0E08               	movlw	8
 12032  0029B4  6EDF               	movwf	indf2,c
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12036  0029B6  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12037  0029BA  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12038  0029BE  0E00               	movlw	0
 12039  0029C0  8EDB               	bsf	plusw2,7,c
 12040                           
 12041                           ; BSR set to: 0
 12042                           ;usb_device.c: 1912: }
 12043                           ;usb_device.c: 1913: }
 12044  0029C2  0012               	return	
 12045  0029C4                     l1699:
 12046                           
 12047                           ;usb_device.c: 1914: else
 12048                           ;usb_device.c: 1915: {
 12049                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12050                           
 12051                           ; BSR set to: 0
 12052  0029C4  0100               	movlb	0	; () banked
 12053  0029C6  EE20 F001          	lfsr	2,1
 12054  0029CA  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12055  0029CC  26D9               	addwf	fsr2l,f,c
 12056  0029CE  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12057  0029D0  22DA               	addwfc	fsr2h,f,c
 12058  0029D2  0E08               	movlw	8
 12059  0029D4  6EDF               	movwf	indf2,c
 12060                           
 12061                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12062  0029D6  EE20 F002          	lfsr	2,2
 12063  0029DA  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12064  0029DC  26D9               	addwf	fsr2l,f,c
 12065  0029DE  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12066  0029E0  22DA               	addwfc	fsr2h,f,c
 12067  0029E2  0E30               	movlw	48
 12068  0029E4  6EDE               	movwf	postinc2,c
 12069  0029E6  0E04               	movlw	4
 12070  0029E8  6EDD               	movwf	postdec2,c
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12074  0029EA  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12075  0029EE  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12076  0029F2  0E04               	movlw	4
 12077  0029F4  6EDF               	movwf	indf2,c
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12081  0029F6  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12082  0029FA  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12083  0029FE  0E00               	movlw	0
 12084  002A00  8EDB               	bsf	plusw2,7,c
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;usb_device.c: 1944: }
 12088                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12089                           
 12090                           ; BSR set to: 0
 12091  002A02  0101               	movlb	1	; () banked
 12092  002A04  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12093                           
 12094                           ; BSR set to: 1
 12095                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12096  002A06  0100               	movlb	0	; () banked
 12097  002A08  51C6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12098  002A0A  A4D8               	btfss	status,2,c
 12099  002A0C  0012               	return	
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;usb_device.c: 1960: {
 12103                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12104  002A0E  EC93  F01B         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12105  002A12  0012               	return	
 12106  002A14                     __end_of_USBCtrlTrfRxService:
 12107                           	opt stack 0
 12108                           tosu	equ	0xFFF
 12109                           tosh	equ	0xFFE
 12110                           tosl	equ	0xFFD
 12111                           pclath	equ	0xFFA
 12112                           tblptru	equ	0xFF8
 12113                           tblptrh	equ	0xFF7
 12114                           tblptrl	equ	0xFF6
 12115                           tablat	equ	0xFF5
 12116                           prodh	equ	0xFF4
 12117                           prodl	equ	0xFF3
 12118                           intcon	equ	0xFF2
 12119                           intcon2	equ	0xFF1
 12120                           intcon3	equ	0xFF0
 12121                           indf0	equ	0xFEF
 12122                           postinc0	equ	0xFEE
 12123                           plusw0	equ	0xFEB
 12124                           fsr0h	equ	0xFEA
 12125                           fsr0l	equ	0xFE9
 12126                           wreg	equ	0xFE8
 12127                           indf1	equ	0xFE7
 12128                           postinc1	equ	0xFE6
 12129                           postdec1	equ	0xFE5
 12130                           plusw1	equ	0xFE3
 12131                           fsr1h	equ	0xFE2
 12132                           fsr1l	equ	0xFE1
 12133                           indf2	equ	0xFDF
 12134                           postinc2	equ	0xFDE
 12135                           postdec2	equ	0xFDD
 12136                           plusw2	equ	0xFDB
 12137                           fsr2h	equ	0xFDA
 12138                           fsr2l	equ	0xFD9
 12139                           status	equ	0xFD8
 12140                           
 12141 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12142 ;; Defined at:
 12143 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;		None
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12161 ;;Total ram usage:        0 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; Hardware stack levels required when called:   11
 12164 ;; This function calls:
 12165 ;;		Nothing
 12166 ;; This function is called by:
 12167 ;;		_USBDeviceTasks
 12168 ;;		_USBCtrlEPServiceComplete
 12169 ;;		_USBCtrlTrfRxService
 12170 ;; This function uses a non-reentrant model
 12171 ;;
 12172                           
 12173                           	psect	text51
 12174  003726                     __ptext51:
 12175                           	opt stack 0
 12176  003726                     _USBCtrlEPAllowStatusStage:
 12177                           	opt stack 12
 12178                           
 12179                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12180                           
 12181                           ;incstack = 0
 12182  003726  0100               	movlb	0	; () banked
 12183  003728  51C5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12184  00372A  A4D8               	btfss	status,2,c
 12185  00372C  0012               	return	
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;usb_device.c: 1442: {
 12189                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12190  00372E  0E01               	movlw	1
 12191  003730  6FC5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12192                           
 12193                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12194  003732  51C4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 12195  003734  A4D8               	btfss	status,2,c
 12196  003736  0012               	return	
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;usb_device.c: 1445: {
 12200                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12201  003738  0E01               	movlw	1
 12202  00373A  6FC4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12206  00373C  0E02               	movlw	2
 12207  00373E  19C9               	xorwf	_controlTransferState& (0+255),w,b
 12208  003740  A4D8               	btfss	status,2,c
 12209  003742  D015               	goto	l1650
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;usb_device.c: 1451: {
 12213                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12214  003744  EE20 F001          	lfsr	2,1
 12215  003748  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12216  00374A  26D9               	addwf	fsr2l,f,c
 12217  00374C  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12218  00374E  22DA               	addwfc	fsr2h,f,c
 12219  003750  0E00               	movlw	0
 12220  003752  6EDF               	movwf	indf2,c
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12224  003754  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12225  003758  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12226  00375C  0E48               	movlw	72
 12227  00375E  6EDF               	movwf	indf2,c
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12231  003760  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12232  003764  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12233  003768  0E00               	movlw	0
 12234  00376A  8EDB               	bsf	plusw2,7,c
 12235                           
 12236                           ;usb_device.c: 1455: }
 12237  00376C  0012               	return	
 12238  00376E                     l1650:
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12242                           
 12243                           ; BSR set to: 0
 12244  00376E  05C9               	decf	_controlTransferState& (0+255),w,b
 12245  003770  A4D8               	btfss	status,2,c
 12246  003772  0012               	return	
 12247                           
 12248                           ; BSR set to: 0
 12249                           ;usb_device.c: 1457: {
 12250                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12251  003774  0E00               	movlw	0
 12252  003776  0101               	movlb	1	; () banked
 12253  003778  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12254                           
 12255                           ; BSR set to: 1
 12256                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12257  00377A  0100               	movlb	0	; () banked
 12258  00377C  EE20 F001          	lfsr	2,1
 12259  003780  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12260  003782  26D9               	addwf	fsr2l,f,c
 12261  003784  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12262  003786  22DA               	addwfc	fsr2h,f,c
 12263  003788  0E08               	movlw	8
 12264  00378A  6EDF               	movwf	indf2,c
 12265                           
 12266                           ; BSR set to: 0
 12267                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12268  00378C  EE20 F002          	lfsr	2,2
 12269  003790  51BC               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12270  003792  26D9               	addwf	fsr2l,f,c
 12271  003794  51BD               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12272  003796  22DA               	addwfc	fsr2h,f,c
 12273  003798  0E30               	movlw	48
 12274  00379A  6EDE               	movwf	postinc2,c
 12275  00379C  0E04               	movlw	4
 12276  00379E  6EDD               	movwf	postdec2,c
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12280  0037A0  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12281  0037A4  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12282  0037A8  0E04               	movlw	4
 12283  0037AA  6EDF               	movwf	indf2,c
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12287  0037AC  C0BC  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12288  0037B0  C0BD  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12289  0037B4  0E00               	movlw	0
 12290  0037B6  8EDB               	bsf	plusw2,7,c
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12294  0037B8  0E01               	movlw	1
 12295  0037BA  0101               	movlb	1	; () banked
 12296  0037BC  6FE5               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12297                           
 12298                           ; BSR set to: 1
 12299                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12300  0037BE  0100               	movlb	0	; () banked
 12301  0037C0  EE20 F001          	lfsr	2,1
 12302  0037C4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12303  0037C6  26D9               	addwf	fsr2l,f,c
 12304  0037C8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12305  0037CA  22DA               	addwfc	fsr2h,f,c
 12306  0037CC  0E08               	movlw	8
 12307  0037CE  6EDF               	movwf	indf2,c
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12311  0037D0  EE20 F002          	lfsr	2,2
 12312  0037D4  51BA               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12313  0037D6  26D9               	addwf	fsr2l,f,c
 12314  0037D8  51BB               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12315  0037DA  22DA               	addwfc	fsr2h,f,c
 12316  0037DC  0E30               	movlw	48
 12317  0037DE  6EDE               	movwf	postinc2,c
 12318  0037E0  0E04               	movlw	4
 12319  0037E2  6EDD               	movwf	postdec2,c
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12323  0037E4  C0BA  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12324  0037E8  C0BB  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12325  0037EC  0E80               	movlw	128
 12326  0037EE  6EDF               	movwf	indf2,c
 12327                           
 12328                           ; BSR set to: 0
 12329                           
 12330                           ; BSR set to: 0
 12331                           
 12332                           ; BSR set to: 0
 12333  0037F0  0012               	return	
 12334  0037F2                     __end_of_USBCtrlEPAllowStatusStage:
 12335                           	opt stack 0
 12336                           tosu	equ	0xFFF
 12337                           tosh	equ	0xFFE
 12338                           tosl	equ	0xFFD
 12339                           pclath	equ	0xFFA
 12340                           tblptru	equ	0xFF8
 12341                           tblptrh	equ	0xFF7
 12342                           tblptrl	equ	0xFF6
 12343                           tablat	equ	0xFF5
 12344                           prodh	equ	0xFF4
 12345                           prodl	equ	0xFF3
 12346                           intcon	equ	0xFF2
 12347                           intcon2	equ	0xFF1
 12348                           intcon3	equ	0xFF0
 12349                           indf0	equ	0xFEF
 12350                           postinc0	equ	0xFEE
 12351                           plusw0	equ	0xFEB
 12352                           fsr0h	equ	0xFEA
 12353                           fsr0l	equ	0xFE9
 12354                           wreg	equ	0xFE8
 12355                           indf1	equ	0xFE7
 12356                           postinc1	equ	0xFE6
 12357                           postdec1	equ	0xFE5
 12358                           plusw1	equ	0xFE3
 12359                           fsr1h	equ	0xFE2
 12360                           fsr1l	equ	0xFE1
 12361                           indf2	equ	0xFDF
 12362                           postinc2	equ	0xFDE
 12363                           postdec2	equ	0xFDD
 12364                           plusw2	equ	0xFDB
 12365                           fsr2h	equ	0xFDA
 12366                           fsr2l	equ	0xFD9
 12367                           status	equ	0xFD8
 12368                           
 12369 ;; *************** function _USBCtrlTrfInHandler *****************
 12370 ;; Defined at:
 12371 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;		None
 12374 ;; Auto vars:     Size  Location     Type
 12375 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12376 ;; Return value:  Size  Location     Type
 12377 ;;                  1    wreg      void 
 12378 ;; Registers used:
 12379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12386 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12388 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12389 ;;Total ram usage:        1 bytes
 12390 ;; Hardware stack levels used:    1
 12391 ;; Hardware stack levels required when called:   12
 12392 ;; This function calls:
 12393 ;;		_USBCtrlTrfTxService
 12394 ;; This function is called by:
 12395 ;;		_USBCtrlEPService
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text52
 12400  003CA2                     __ptext52:
 12401                           	opt stack 0
 12402  003CA2                     _USBCtrlTrfInHandler:
 12403                           	opt stack 13
 12404                           
 12405                           ;usb_device.c: 2611: uint8_t lastDTS;
 12406                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12407                           
 12408                           ; BSR set to: 0
 12409                           ;incstack = 0
 12410  003CA2  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12411  003CA6  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12412  003CAA  0100               	movlb	0	; () banked
 12413  003CAC  0E00               	movlw	0
 12414  003CAE  BCDF               	btfsc	indf2,6,c
 12415  003CB0  0E01               	movlw	1
 12416  003CB2  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12420  003CB4  0E04               	movlw	4
 12421  003CB6  1BB2               	xorwf	_pBDTEntryIn& (0+255),f,b
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12425  003CB8  0E08               	movlw	8
 12426  003CBA  19CB               	xorwf	_USBDeviceState& (0+255),w,b
 12427  003CBC  A4D8               	btfss	status,2,c
 12428  003CBE  D00D               	goto	l1777
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;usb_device.c: 2622: {
 12432                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12433  003CC0  0104               	movlb	4	; () banked
 12434  003CC2  5132               	movf	50,w,b	;volatile
 12435  003CC4  0B7F               	andlw	127
 12436  003CC6  010F               	movlb	15	; () banked
 12437  003CC8  6F38               	movwf	56,b	;volatile
 12438                           
 12439                           ; BSR set to: 15
 12440                           ;usb_device.c: 2624: if(UADDR != 0u)
 12441  003CCA  5138               	movf	56,w,b	;volatile
 12442  003CCC  B4D8               	btfsc	status,2,c
 12443  003CCE  D002               	goto	l1776
 12444                           
 12445                           ; BSR set to: 15
 12446                           ;usb_device.c: 2625: {
 12447                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12448  003CD0  0E10               	movlw	16
 12449  003CD2  D001               	goto	L11
 12450  003CD4                     l1776:
 12451                           
 12452                           ;usb_device.c: 2628: else
 12453                           ;usb_device.c: 2629: {
 12454                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12455                           
 12456                           ; BSR set to: 0
 12457  003CD4  0E04               	movlw	4
 12458  003CD6                     L11:
 12459  003CD6  0100               	movlb	0	; () banked
 12460  003CD8  6FCB               	movwf	_USBDeviceState& (0+255),b
 12461  003CDA                     l1777:
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;usb_device.c: 2631: }
 12465                           ;usb_device.c: 2632: }
 12466                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12467                           
 12468                           ; BSR set to: 0
 12469                           
 12470                           ; BSR set to: 0
 12471  003CDA  05C9               	decf	_controlTransferState& (0+255),w,b
 12472  003CDC  A4D8               	btfss	status,2,c
 12473  003CDE  D03B               	goto	l1778
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;usb_device.c: 2636: {
 12477                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12478  003CE0  EE20 F002          	lfsr	2,2
 12479  003CE4  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12480  003CE6  26D9               	addwf	fsr2l,f,c
 12481  003CE8  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12482  003CEA  22DA               	addwfc	fsr2h,f,c
 12483  003CEC  0E38               	movlw	56
 12484  003CEE  6EDE               	movwf	postinc2,c
 12485  003CF0  0E04               	movlw	4
 12486  003CF2  6EDD               	movwf	postdec2,c
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12490  003CF4  ECEE  F019         	call	_USBCtrlTrfTxService	;wreg free
 12491                           
 12492                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12493  003CF8  0E02               	movlw	2
 12494  003CFA  0100               	movlb	0	; () banked
 12495  003CFC  19CA               	xorwf	_shortPacketStatus& (0+255),w,b
 12496  003CFE  A4D8               	btfss	status,2,c
 12497  003D00  D00D               	goto	l1779
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;usb_device.c: 2645: {
 12501                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12502  003D02  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12503  003D06  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12504  003D0A  0E04               	movlw	4
 12505  003D0C  6EDF               	movwf	indf2,c
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12509  003D0E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12510  003D12  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12511  003D16  0E00               	movlw	0
 12512  003D18  8EDB               	bsf	plusw2,7,c
 12513                           
 12514                           ;usb_device.c: 2650: }
 12515  003D1A  0012               	return	
 12516  003D1C                     l1779:
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;usb_device.c: 2651: else
 12520                           ;usb_device.c: 2652: {
 12521                           ;usb_device.c: 2653: if(lastDTS == 0)
 12522                           
 12523                           ; BSR set to: 0
 12524  003D1C  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12525  003D1E  A4D8               	btfss	status,2,c
 12526  003D20  D00D               	goto	l1781
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;usb_device.c: 2654: {
 12530                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12531  003D22  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12532  003D26  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12533  003D2A  0E48               	movlw	72
 12534  003D2C  6EDF               	movwf	indf2,c
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12538  003D2E  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12539  003D32  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12540  003D36  0E00               	movlw	0
 12541  003D38  8EDB               	bsf	plusw2,7,c
 12542                           
 12543                           ;usb_device.c: 2657: }
 12544  003D3A  0012               	return	
 12545  003D3C                     l1781:
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;usb_device.c: 2658: else
 12549                           ;usb_device.c: 2659: {
 12550                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12551                           
 12552                           ; BSR set to: 0
 12553  003D3C  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12554  003D40  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12555  003D44  0E08               	movlw	8
 12556  003D46  6EDF               	movwf	indf2,c
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12560  003D48  C0B2  FFD9         	movff	_pBDTEntryIn,fsr2l
 12561  003D4C  C0B3  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12562  003D50  0E00               	movlw	0
 12563  003D52  8EDB               	bsf	plusw2,7,c
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;usb_device.c: 2662: }
 12567                           ;usb_device.c: 2663: }
 12568                           ;usb_device.c: 2664: }
 12569                           
 12570                           ; BSR set to: 0
 12571  003D54  0012               	return	
 12572  003D56                     l1778:
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;usb_device.c: 2665: else
 12576                           ;usb_device.c: 2666: {
 12577                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12578  003D56  0101               	movlb	1	; () banked
 12579  003D58  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12580                           
 12581                           ; BSR set to: 1
 12582                           ;usb_device.c: 2675: }
 12583                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12584                           
 12585                           ; BSR set to: 1
 12586  003D5A  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12587                           
 12588                           ; BSR set to: 1
 12589                           ;usb_device.c: 2677: }
 12590                           ;usb_device.c: 2679: controlTransferState = 0;
 12591                           
 12592                           ; BSR set to: 1
 12593  003D5C  0E00               	movlw	0
 12594  003D5E  0100               	movlb	0	; () banked
 12595  003D60  6FC9               	movwf	_controlTransferState& (0+255),b
 12596  003D62  0012               	return	
 12597  003D64                     __end_of_USBCtrlTrfInHandler:
 12598                           	opt stack 0
 12599                           tosu	equ	0xFFF
 12600                           tosh	equ	0xFFE
 12601                           tosl	equ	0xFFD
 12602                           pclath	equ	0xFFA
 12603                           tblptru	equ	0xFF8
 12604                           tblptrh	equ	0xFF7
 12605                           tblptrl	equ	0xFF6
 12606                           tablat	equ	0xFF5
 12607                           prodh	equ	0xFF4
 12608                           prodl	equ	0xFF3
 12609                           intcon	equ	0xFF2
 12610                           intcon2	equ	0xFF1
 12611                           intcon3	equ	0xFF0
 12612                           indf0	equ	0xFEF
 12613                           postinc0	equ	0xFEE
 12614                           plusw0	equ	0xFEB
 12615                           fsr0h	equ	0xFEA
 12616                           fsr0l	equ	0xFE9
 12617                           wreg	equ	0xFE8
 12618                           indf1	equ	0xFE7
 12619                           postinc1	equ	0xFE6
 12620                           postdec1	equ	0xFE5
 12621                           plusw1	equ	0xFE3
 12622                           fsr1h	equ	0xFE2
 12623                           fsr1l	equ	0xFE1
 12624                           indf2	equ	0xFDF
 12625                           postinc2	equ	0xFDE
 12626                           postdec2	equ	0xFDD
 12627                           plusw2	equ	0xFDB
 12628                           fsr2h	equ	0xFDA
 12629                           fsr2l	equ	0xFD9
 12630                           status	equ	0xFD8
 12631                           
 12632 ;; *************** function _USBCtrlTrfTxService *****************
 12633 ;; Defined at:
 12634 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;		None
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  1    wreg      void 
 12641 ;; Registers used:
 12642 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12652 ;;Total ram usage:        1 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:   11
 12655 ;; This function calls:
 12656 ;;		Nothing
 12657 ;; This function is called by:
 12658 ;;		_USBCtrlEPAllowDataStage
 12659 ;;		_USBCtrlTrfInHandler
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           	psect	text53
 12664  0033DC                     __ptext53:
 12665                           	opt stack 0
 12666  0033DC                     _USBCtrlTrfTxService:
 12667                           	opt stack 11
 12668                           
 12669                           ;usb_device.c: 1791: uint8_t byteToSend;
 12670                           ;usb_device.c: 1795: byteToSend = 8;
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;incstack = 0
 12674  0033DC  0E08               	movlw	8
 12675  0033DE  0100               	movlb	0	; () banked
 12676  0033E0  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12680  0033E2  51B1               	movf	(_inPipes+5)& (0+255),w,b
 12681  0033E4  E110               	bnz	l7613
 12682  0033E6  0E08               	movlw	8
 12683  0033E8  5DB0               	subwf	(_inPipes+4)& (0+255),w,b
 12684  0033EA  B0D8               	btfsc	status,0,c
 12685  0033EC  D00C               	goto	l1683
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;usb_device.c: 1797: {
 12689                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12690  0033EE  C0B0  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12694  0033F2  51CA               	movf	_shortPacketStatus& (0+255),w,b
 12695  0033F4  A4D8               	btfss	status,2,c
 12696  0033F6  D002               	goto	l1681
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;usb_device.c: 1806: {
 12700                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12701  0033F8  0E01               	movlw	1
 12702  0033FA  D004               	goto	L12
 12703  0033FC                     l1681:
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 12707                           
 12708                           ; BSR set to: 0
 12709  0033FC  05CA               	decf	_shortPacketStatus& (0+255),w,b
 12710  0033FE  A4D8               	btfss	status,2,c
 12711  003400  D002               	goto	l1683
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;usb_device.c: 1810: {
 12715                           ;usb_device.c: 1811: shortPacketStatus = 2;
 12716  003402  0E02               	movlw	2
 12717  003404                     L12:
 12718  003404  6FCA               	movwf	_shortPacketStatus& (0+255),b
 12719  003406                     l1683:
 12720  003406                     l7613:
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;usb_device.c: 1812: }
 12724                           ;usb_device.c: 1813: }
 12725                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 12726  003406  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12727  003408  5FB0               	subwf	(_inPipes+4)& (0+255),f,b
 12728  00340A  0E00               	movlw	0
 12729  00340C  5BB1               	subwfb	(_inPipes+5)& (0+255),f,b
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 12733  00340E  EE20 F001          	lfsr	2,1
 12734  003412  51B2               	movf	_pBDTEntryIn& (0+255),w,b
 12735  003414  26D9               	addwf	fsr2l,f,c
 12736  003416  51B3               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12737  003418  22DA               	addwfc	fsr2h,f,c
 12738  00341A  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 12739                           
 12740                           ; BSR set to: 0
 12741                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 12742  00341E  0E38               	movlw	56
 12743  003420  0102               	movlb	2	; () banked
 12744  003422  6FD4               	movwf	_pDst& (0+255),b
 12745  003424  0E04               	movlw	4
 12746  003426  6FD5               	movwf	(_pDst+1)& (0+255),b
 12747                           
 12748                           ; BSR set to: 2
 12749                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12750  003428  0100               	movlb	0	; () banked
 12751  00342A  A1AF               	btfss	(_inPipes+3)& (0+255),0,b
 12752  00342C  D01E               	goto	l1685
 12753  00342E  D03E               	goto	l1689
 12754  003430                     
 12755                           ; BSR set to: 0
 12756                           ;usb_device.c: 1830: {
 12757                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 12758                           
 12759                           ; BSR set to: 0
 12760  003430  C0AC  FFF6         	movff	_inPipes,tblptrl
 12761  003434  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12762  003438  6AF8               	clrf	tblptru,c
 12763  00343A  C2D4  FFD9         	movff	_pDst,fsr2l
 12764  00343E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12765  003442  0E0E               	movlw	(high __ramtop+-1)
 12766  003444  64F7               	cpfsgt	tblptrh,c
 12767  003446  D003               	bra	u5167
 12768  003448  0008               	tblrd		*
 12769  00344A  50F5               	movf	tablat,w,c
 12770  00344C  D005               	bra	u5160
 12771  00344E                     u5167:
 12772  00344E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12773  003452  CFF7 FFEA          	movff	tblptrh,fsr0h
 12774  003456  50EF               	movf	indf0,w,c
 12775  003458                     u5160:
 12776  003458  6EDF               	movwf	indf2,c
 12777  00345A  0100               	movlb	0	; () banked
 12778  00345C  4BAC               	infsnz	_inPipes& (0+255),f,b
 12779  00345E  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12780                           
 12781                           ; BSR set to: 0
 12782  003460  0102               	movlb	2	; () banked
 12783  003462  4BD4               	infsnz	_pDst& (0+255),f,b
 12784  003464  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12785                           
 12786                           ; BSR set to: 2
 12787                           ;usb_device.c: 1832: byteToSend--;
 12788  003466  0100               	movlb	0	; () banked
 12789  003468  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12790  00346A                     l1685:
 12791                           
 12792                           ; BSR set to: 0
 12793                           
 12794                           ; BSR set to: 0
 12795  00346A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12796  00346C  B4D8               	btfsc	status,2,c
 12797  00346E  0012               	return	
 12798  003470  D7DF               	goto	l1686
 12799  003472                     
 12800                           ; BSR set to: 0
 12801                           ;usb_device.c: 1838: {
 12802                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 12803                           
 12804                           ; BSR set to: 0
 12805  003472  C0AC  FFF6         	movff	_inPipes,tblptrl
 12806  003476  C0AD  FFF7         	movff	_inPipes+1,tblptrh
 12807  00347A  6AF8               	clrf	tblptru,c
 12808  00347C  C2D4  FFD9         	movff	_pDst,fsr2l
 12809  003480  C2D5  FFDA         	movff	_pDst+1,fsr2h
 12810  003484  0E0E               	movlw	(high __ramtop+-1)
 12811  003486  64F7               	cpfsgt	tblptrh,c
 12812  003488  D003               	bra	u5187
 12813  00348A  0008               	tblrd		*
 12814  00348C  50F5               	movf	tablat,w,c
 12815  00348E  D005               	bra	u5180
 12816  003490                     u5187:
 12817  003490  CFF6 FFE9          	movff	tblptrl,fsr0l
 12818  003494  CFF7 FFEA          	movff	tblptrh,fsr0h
 12819  003498  50EF               	movf	indf0,w,c
 12820  00349A                     u5180:
 12821  00349A  6EDF               	movwf	indf2,c
 12822  00349C  0100               	movlb	0	; () banked
 12823  00349E  4BAC               	infsnz	_inPipes& (0+255),f,b
 12824  0034A0  2BAD               	incf	(_inPipes+1)& (0+255),f,b
 12825                           
 12826                           ; BSR set to: 0
 12827  0034A2  0102               	movlb	2	; () banked
 12828  0034A4  4BD4               	infsnz	_pDst& (0+255),f,b
 12829  0034A6  2BD5               	incf	(_pDst+1)& (0+255),f,b
 12830                           
 12831                           ; BSR set to: 2
 12832                           ;usb_device.c: 1840: byteToSend--;
 12833  0034A8  0100               	movlb	0	; () banked
 12834  0034AA  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 12835  0034AC                     l1689:
 12836                           
 12837                           ; BSR set to: 0
 12838                           
 12839                           ; BSR set to: 0
 12840  0034AC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 12841  0034AE  B4D8               	btfsc	status,2,c
 12842  0034B0  0012               	return	
 12843  0034B2  D7DF               	goto	l1690
 12844  0034B4                     __end_of_USBCtrlTrfTxService:
 12845                           	opt stack 0
 12846                           tosu	equ	0xFFF
 12847                           tosh	equ	0xFFE
 12848                           tosl	equ	0xFFD
 12849                           pclath	equ	0xFFA
 12850                           tblptru	equ	0xFF8
 12851                           tblptrh	equ	0xFF7
 12852                           tblptrl	equ	0xFF6
 12853                           tablat	equ	0xFF5
 12854                           prodh	equ	0xFF4
 12855                           prodl	equ	0xFF3
 12856                           intcon	equ	0xFF2
 12857                           intcon2	equ	0xFF1
 12858                           intcon3	equ	0xFF0
 12859                           indf0	equ	0xFEF
 12860                           postinc0	equ	0xFEE
 12861                           plusw0	equ	0xFEB
 12862                           fsr0h	equ	0xFEA
 12863                           fsr0l	equ	0xFE9
 12864                           wreg	equ	0xFE8
 12865                           indf1	equ	0xFE7
 12866                           postinc1	equ	0xFE6
 12867                           postdec1	equ	0xFE5
 12868                           plusw1	equ	0xFE3
 12869                           fsr1h	equ	0xFE2
 12870                           fsr1l	equ	0xFE1
 12871                           indf2	equ	0xFDF
 12872                           postinc2	equ	0xFDE
 12873                           postdec2	equ	0xFDD
 12874                           plusw2	equ	0xFDB
 12875                           fsr2h	equ	0xFDA
 12876                           fsr2l	equ	0xFD9
 12877                           status	equ	0xFD8
 12878                           
 12879 ;; *************** function _CDCTxService *****************
 12880 ;; Defined at:
 12881 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;		None
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 12886 ;;  i               1   36[BANK0 ] unsigned char 
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12897 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12899 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12900 ;;Total ram usage:        2 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; Hardware stack levels required when called:   12
 12903 ;; This function calls:
 12904 ;;		_USBTransferOnePacket
 12905 ;; This function is called by:
 12906 ;;		_UsbDevice_MainTask
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910                           	psect	text54
 12911  002544                     __ptext54:
 12912                           	opt stack 0
 12913  002544                     _CDCTxService:
 12914                           	opt stack 15
 12915                           
 12916                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 12917                           ;usb_device_cdc.c: 842: uint8_t i;
 12918                           ;usb_device_cdc.c: 844: ;
 12919                           ;usb_device_cdc.c: 846: {};
 12920                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;incstack = 0
 12924  002544  0101               	movlb	1	; () banked
 12925  002546  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 12926  002548  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 12927  00254A  B4D8               	btfsc	status,2,c
 12928  00254C  D006               	goto	l1935
 12929                           
 12930                           ; BSR set to: 1
 12931  00254E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 12932  002552  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 12933  002556  BEDF               	btfsc	indf2,7,c
 12934  002558  0012               	return	
 12935  00255A                     l1935:
 12936                           
 12937                           ; BSR set to: 1
 12938                           ;usb_device_cdc.c: 852: }
 12939                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 12940                           
 12941                           ; BSR set to: 1
 12942  00255A  0E03               	movlw	3
 12943  00255C  0100               	movlb	0	; () banked
 12944  00255E  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 12945  002560  A4D8               	btfss	status,2,c
 12946  002562  D002               	goto	l1937
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 12950  002564  0E00               	movlw	0
 12951  002566  6FC1               	movwf	_cdc_trf_state& (0+255),b
 12952  002568                     l1937:
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 12956  002568  51C1               	movf	_cdc_trf_state& (0+255),w,b
 12957  00256A  B4D8               	btfsc	status,2,c
 12958  00256C  0012               	return	
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;usb_device_cdc.c: 869: }
 12962                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 12963                           
 12964                           ; BSR set to: 0
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;usb_device_cdc.c: 866: {
 12968                           ;usb_device_cdc.c: 867: ;
 12969                           ;usb_device_cdc.c: 868: return;
 12970  00256E  0E02               	movlw	2
 12971  002570  19C1               	xorwf	_cdc_trf_state& (0+255),w,b
 12972  002572  A4D8               	btfss	status,2,c
 12973  002574  D013               	goto	l1939
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;usb_device_cdc.c: 875: {
 12977                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 12978  002576  0E01               	movlw	1
 12979  002578  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 12980  00257A  0E00               	movlw	0
 12981  00257C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 12982  00257E  0E00               	movlw	0
 12983  002580  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12984  002582  0E00               	movlw	0
 12985  002584  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 12986  002586  0E02               	movlw	2
 12987  002588  ECB2  F01E         	call	_USBTransferOnePacket
 12988  00258C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12989  002590  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12990                           
 12991                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 12992  002594  0E03               	movlw	3
 12993  002596  0100               	movlb	0	; () banked
 12994  002598  6FC1               	movwf	_cdc_trf_state& (0+255),b
 12995                           
 12996                           ;usb_device_cdc.c: 879: }
 12997  00259A  0012               	return	
 12998  00259C                     l1939:
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13002                           
 13003                           ; BSR set to: 0
 13004  00259C  05C1               	decf	_cdc_trf_state& (0+255),w,b
 13005  00259E  A4D8               	btfss	status,2,c
 13006  0025A0  0012               	return	
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;usb_device_cdc.c: 881: {
 13010                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13011  0025A2  0E40               	movlw	64
 13012  0025A4  65C0               	cpfsgt	_cdc_tx_len& (0+255),b
 13013  0025A6  D003               	goto	l1942
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13017  0025A8  0E40               	movlw	64
 13018  0025AA  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13019  0025AC  D002               	goto	l1943
 13020  0025AE                     l1942:
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;usb_device_cdc.c: 887: else
 13024                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13025  0025AE  C0C0  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13026  0025B2                     l1943:
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13030                           
 13031                           ; BSR set to: 0
 13032  0025B2  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13033  0025B4  0800               	sublw	0
 13034  0025B6  25C0               	addwf	_cdc_tx_len& (0+255),w,b
 13035  0025B8  6FC0               	movwf	_cdc_tx_len& (0+255),b
 13036                           
 13037                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13038  0025BA  0E84               	movlw	low _cdc_data_tx
 13039  0025BC  0102               	movlb	2	; () banked
 13040  0025BE  6FC8               	movwf	_pCDCDst& (0+255),b
 13041  0025C0  0E07               	movlw	high _cdc_data_tx
 13042  0025C2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13043                           
 13044                           ; BSR set to: 2
 13045                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13046  0025C4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13047                           
 13048                           ; BSR set to: 2
 13049                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13050  0025C8  0101               	movlb	1	; () banked
 13051  0025CA  51E3               	movf	_cdc_mem_type& (0+255),w,b
 13052  0025CC  B4D8               	btfsc	status,2,c
 13053  0025CE  D01D               	goto	l1945
 13054  0025D0  D03D               	goto	l1949
 13055  0025D2                     
 13056                           ;usb_device_cdc.c: 901: {
 13057                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13058                           
 13059                           ; BSR set to: 1
 13060  0025D2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13061  0025D6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13062  0025DA  6AF8               	clrf	tblptru,c
 13063  0025DC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13064  0025E0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13065  0025E4  0E0E               	movlw	(high __ramtop+-1)
 13066  0025E6  64F7               	cpfsgt	tblptrh,c
 13067  0025E8  D003               	bra	u13057
 13068  0025EA  0008               	tblrd		*
 13069  0025EC  50F5               	movf	tablat,w,c
 13070  0025EE  D005               	bra	u13050
 13071  0025F0                     u13057:
 13072  0025F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13073  0025F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13074  0025F8  50EF               	movf	indf0,w,c
 13075  0025FA                     u13050:
 13076  0025FA  6EDF               	movwf	indf2,c
 13077                           
 13078                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13079  0025FC  0102               	movlb	2	; () banked
 13080  0025FE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13081  002600  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13082                           
 13083                           ; BSR set to: 2
 13084                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13085  002602  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13086  002604  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13087                           
 13088                           ; BSR set to: 2
 13089                           ;usb_device_cdc.c: 905: i--;
 13090  002606  0100               	movlb	0	; () banked
 13091  002608  0784               	decf	CDCTxService@i& (0+255),f,b
 13092  00260A                     l1945:
 13093                           
 13094                           ; BSR set to: 0
 13095  00260A  0100               	movlb	0	; () banked
 13096  00260C  5184               	movf	CDCTxService@i& (0+255),w,b
 13097  00260E  B4D8               	btfsc	status,2,c
 13098  002610  D021               	goto	u13080
 13099  002612  D7DF               	goto	l1946
 13100  002614                     
 13101                           ; BSR set to: 0
 13102                           ;usb_device_cdc.c: 911: {
 13103                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13104                           
 13105                           ; BSR set to: 0
 13106  002614  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13107  002618  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13108  00261C  6AF8               	clrf	tblptru,c
 13109  00261E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13110  002622  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13111  002626  0E0E               	movlw	(high __ramtop+-1)
 13112  002628  64F7               	cpfsgt	tblptrh,c
 13113  00262A  D003               	bra	u13077
 13114  00262C  0008               	tblrd		*
 13115  00262E  50F5               	movf	tablat,w,c
 13116  002630  D005               	bra	u13070
 13117  002632                     u13077:
 13118  002632  CFF6 FFE9          	movff	tblptrl,fsr0l
 13119  002636  CFF7 FFEA          	movff	tblptrh,fsr0h
 13120  00263A  50EF               	movf	indf0,w,c
 13121  00263C                     u13070:
 13122  00263C  6EDF               	movwf	indf2,c
 13123                           
 13124                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13125  00263E  0102               	movlb	2	; () banked
 13126  002640  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13127  002642  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13128                           
 13129                           ; BSR set to: 2
 13130                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13131  002644  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13132  002646  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13133                           
 13134                           ; BSR set to: 2
 13135                           ;usb_device_cdc.c: 915: i--;
 13136  002648  0100               	movlb	0	; () banked
 13137  00264A  0784               	decf	CDCTxService@i& (0+255),f,b
 13138  00264C                     l1949:
 13139                           
 13140                           ; BSR set to: 0
 13141  00264C  0100               	movlb	0	; () banked
 13142  00264E  5184               	movf	CDCTxService@i& (0+255),w,b
 13143  002650  A4D8               	btfss	status,2,c
 13144  002652  D7E0               	goto	l1950
 13145  002654                     u13080:
 13146                           
 13147                           ; BSR set to: 0
 13148                           ;usb_device_cdc.c: 916: }
 13149                           ;usb_device_cdc.c: 917: }
 13150                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13151                           
 13152                           ; BSR set to: 0
 13153                           
 13154                           ; BSR set to: 0
 13155  002654  51C0               	movf	_cdc_tx_len& (0+255),w,b
 13156  002656  A4D8               	btfss	status,2,c
 13157  002658  D008               	goto	l1954
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;usb_device_cdc.c: 924: {
 13161                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13162  00265A  0E40               	movlw	64
 13163  00265C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13164  00265E  A4D8               	btfss	status,2,c
 13165  002660  D002               	goto	l1953
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13169  002662  0E02               	movlw	2
 13170  002664  D001               	goto	L13
 13171  002666                     l1953:
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;usb_device_cdc.c: 927: else
 13175                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13176                           
 13177                           ; BSR set to: 0
 13178  002666  0E03               	movlw	3
 13179  002668                     L13:
 13180  002668  6FC1               	movwf	_cdc_trf_state& (0+255),b
 13181  00266A                     l1954:
 13182                           
 13183                           ; BSR set to: 0
 13184                           ;usb_device_cdc.c: 929: }
 13185                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13186                           
 13187                           ; BSR set to: 0
 13188                           
 13189                           ; BSR set to: 0
 13190  00266A  0E01               	movlw	1
 13191  00266C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13192  00266E  0E84               	movlw	low _cdc_data_tx
 13193  002670  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13194  002672  0E07               	movlw	high _cdc_data_tx
 13195  002674  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13196  002676  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13197  00267A  0E02               	movlw	2
 13198  00267C  ECB2  F01E         	call	_USBTransferOnePacket
 13199  002680  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13200  002684  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13201  002688  0012               	return	
 13202  00268A                     __end_of_CDCTxService:
 13203                           	opt stack 0
 13204                           tosu	equ	0xFFF
 13205                           tosh	equ	0xFFE
 13206                           tosl	equ	0xFFD
 13207                           pclath	equ	0xFFA
 13208                           tblptru	equ	0xFF8
 13209                           tblptrh	equ	0xFF7
 13210                           tblptrl	equ	0xFF6
 13211                           tablat	equ	0xFF5
 13212                           prodh	equ	0xFF4
 13213                           prodl	equ	0xFF3
 13214                           intcon	equ	0xFF2
 13215                           intcon2	equ	0xFF1
 13216                           intcon3	equ	0xFF0
 13217                           indf0	equ	0xFEF
 13218                           postinc0	equ	0xFEE
 13219                           plusw0	equ	0xFEB
 13220                           fsr0h	equ	0xFEA
 13221                           fsr0l	equ	0xFE9
 13222                           wreg	equ	0xFE8
 13223                           indf1	equ	0xFE7
 13224                           postinc1	equ	0xFE6
 13225                           postdec1	equ	0xFE5
 13226                           plusw1	equ	0xFE3
 13227                           fsr1h	equ	0xFE2
 13228                           fsr1l	equ	0xFE1
 13229                           indf2	equ	0xFDF
 13230                           postinc2	equ	0xFDE
 13231                           postdec2	equ	0xFDD
 13232                           plusw2	equ	0xFDB
 13233                           fsr2h	equ	0xFDA
 13234                           fsr2l	equ	0xFD9
 13235                           status	equ	0xFD8
 13236                           
 13237 ;; *************** function _Term_MainSm *****************
 13238 ;; Defined at:
 13239 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;		None
 13242 ;; Auto vars:     Size  Location     Type
 13243 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13244 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13245 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13246 ;;  FwkBuildYear    4    0        unsigned char [4]
 13247 ;;  FwkBuildMont    4    0        unsigned char [4]
 13248 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      void 
 13251 ;; Registers used:
 13252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13259 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13261 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13262 ;;Total ram usage:       12 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:   16
 13265 ;; This function calls:
 13266 ;;		_OsTmr_GetTimerStatus
 13267 ;;		_OsTmr_StartTimer
 13268 ;;		_Terminal
 13269 ;;		_memset
 13270 ;;		_putUSBUSART
 13271 ;;		_sprintf
 13272 ;;		_strcat
 13273 ;;		_strcpy
 13274 ;;		_strlen
 13275 ;;		_utoa
 13276 ;; This function is called by:
 13277 ;;		_Term_MainTask
 13278 ;; This function uses a non-reentrant model
 13279 ;;
 13280                           
 13281                           	psect	text55
 13282  0010B6                     __ptext55:
 13283                           	opt stack 0
 13284  0010B6                     _Term_MainSm:
 13285                           	opt stack 11
 13286                           
 13287                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13288                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13289                           ;term.c: 711: static UINT8 Data[50];
 13290                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13291                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13292                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13293                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13294                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13295                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13296                           ;term.c: 719: switch (TermMainSmState)
 13297                           
 13298                           ;incstack = 0
 13299  0010B6  D133               	goto	l2413
 13300  0010B8                     
 13301                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13302  0010B8  0ED4               	movlw	low Term_MainSm@TermDelay
 13303  0010BA  0100               	movlb	0	; () banked
 13304  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13305  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13306  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13307  0010C2  0ED0               	movlw	208
 13308  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13309  0010C6  0E07               	movlw	7
 13310  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13311  0010CA  0E00               	movlw	0
 13312  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13313  0010CE  0E00               	movlw	0
 13314  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13315  0010D2  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 13316                           
 13317                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13318  0010D6  0E01               	movlw	1
 13319  0010D8  0102               	movlb	2	; () banked
 13320  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13321                           
 13322                           ;term.c: 726: break;
 13323  0010DC  0012               	return	
 13324  0010DE                     
 13325                           ; BSR set to: 2
 13326                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13327                           
 13328                           ; BSR set to: 2
 13329  0010DE  0ED4               	movlw	low Term_MainSm@TermDelay
 13330  0010E0  0100               	movlb	0	; () banked
 13331  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13332  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13333  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13334  0010E8  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 13335  0010EC  06E8               	decf	wreg,f,c
 13336  0010EE  A4D8               	btfss	status,2,c
 13337  0010F0  0012               	return	
 13338                           
 13339                           ;term.c: 731: {
 13340                           ;term.c: 733: TermMainSmState = Term_InitState;
 13341  0010F2  0E02               	movlw	2
 13342  0010F4  0102               	movlb	2	; () banked
 13343  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13344                           
 13345                           ; BSR set to: 2
 13346                           ;term.c: 734: }
 13347                           ;term.c: 735: break;
 13348  0010F8  0012               	return	
 13349  0010FA                     
 13350                           ; BSR set to: 2
 13351                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13352                           
 13353                           ; BSR set to: 2
 13354  0010FA  0E1F               	movlw	31
 13355  0010FC  0100               	movlb	0	; () banked
 13356  0010FE  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 13357  001100  0012               	return	
 13358                           
 13359                           ; BSR set to: 0
 13360  001102  B265               	btfsc	3941,1,c	;volatile
 13361  001104  0012               	return	
 13362                           
 13363                           ; BSR set to: 0
 13364                           ;term.c: 743: else
 13365                           ;term.c: 744: {
 13366                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13367                           
 13368                           ; BSR set to: 0
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;term.c: 740: {
 13372                           ;term.c: 742: }
 13373  001106  0E03               	movlw	3
 13374  001108  0102               	movlb	2	; () banked
 13375  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13376                           
 13377                           ; BSR set to: 2
 13378                           ;term.c: 747: }
 13379                           ;term.c: 748: break;
 13380  00110C  0012               	return	
 13381  00110E                     
 13382                           ; BSR set to: 2
 13383                           ;term.c: 752: if((cdc_trf_state == 0))
 13384                           
 13385                           ; BSR set to: 2
 13386  00110E  0100               	movlb	0	; () banked
 13387  001110  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13388  001112  A4D8               	btfss	status,2,c
 13389  001114  0012               	return	
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;term.c: 753: {
 13393                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13394  001116  0E4F               	movlw	low _Welcome
 13395  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13396  00111A  0EFD               	movlw	high _Welcome
 13397  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13398  00111E  0E88               	movlw	136
 13399  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13400  001122  ECE5  F02D         	call	_putUSBUSART	;wreg free
 13401                           
 13402                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13403  001126  0E04               	movlw	4
 13404  001128  0102               	movlb	2	; () banked
 13405  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13406                           
 13407                           ; BSR set to: 2
 13408                           ;term.c: 758: }
 13409                           ;term.c: 759: break;
 13410  00112C  0012               	return	
 13411  00112E                     
 13412                           ; BSR set to: 2
 13413                           ;term.c: 763: if((cdc_trf_state == 0))
 13414                           
 13415                           ; BSR set to: 2
 13416  00112E  0100               	movlb	0	; () banked
 13417  001130  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13418  001132  A4D8               	btfss	status,2,c
 13419  001134  0012               	return	
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;term.c: 764: {
 13423                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13424  001136  0E5F               	movlw	low _MsgFormat
 13425  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13426  00113A  0EFC               	movlw	high _MsgFormat
 13427  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13428  00113E  0EEF               	movlw	239
 13429  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13430  001142  ECE5  F02D         	call	_putUSBUSART	;wreg free
 13431                           
 13432                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13433  001146  0E05               	movlw	5
 13434  001148  0102               	movlb	2	; () banked
 13435  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13436                           
 13437                           ; BSR set to: 2
 13438                           ;term.c: 769: }
 13439                           ;term.c: 770: break;
 13440  00114C  0012               	return	
 13441  00114E                     
 13442                           ; BSR set to: 2
 13443                           ;term.c: 774: if((cdc_trf_state == 0))
 13444                           
 13445                           ; BSR set to: 2
 13446  00114E  0100               	movlb	0	; () banked
 13447  001150  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13448  001152  A4D8               	btfss	status,2,c
 13449  001154  0012               	return	
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;term.c: 775: {
 13453                           ;term.c: 777: memset(Data,0,50);
 13454  001156  0E54               	movlw	low Term_MainSm@Data
 13455  001158  6F7D               	movwf	memset@p1& (0+255),b
 13456  00115A  0E04               	movlw	high Term_MainSm@Data
 13457  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13458  00115E  0E00               	movlw	0
 13459  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13460  001162  0E00               	movlw	0
 13461  001164  6F7F               	movwf	memset@c& (0+255),b
 13462  001166  0E00               	movlw	0
 13463  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13464  00116A  0E32               	movlw	50
 13465  00116C  6F81               	movwf	memset@n& (0+255),b
 13466  00116E  ECB1  F02C         	call	_memset	;wreg free
 13467                           
 13468                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13469  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13470  001174  0100               	movlb	0	; () banked
 13471  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13472  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13473  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13474  00117C  0E00               	movlw	0
 13475  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13476  001180  0E01               	movlw	1
 13477  001182  6F8C               	movwf	utoa@val& (0+255),b
 13478  001184  0E00               	movlw	0
 13479  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13480  001188  0E0A               	movlw	10
 13481  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13482  00118C  EC18  F020         	call	_utoa	;wreg free
 13483                           
 13484                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13485  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13486  001192  0100               	movlb	0	; () banked
 13487  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13488  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13489  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13490  00119A  0E00               	movlw	0
 13491  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13492  00119E  0E02               	movlw	2
 13493  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13494  0011A2  0E00               	movlw	0
 13495  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13496  0011A6  0E0A               	movlw	10
 13497  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13498  0011AA  EC18  F020         	call	_utoa	;wreg free
 13499                           
 13500                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13501  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13502  0011B0  0100               	movlb	0	; () banked
 13503  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13504  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13505  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13506  0011B8  0E00               	movlw	0
 13507  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13508  0011BC  0E00               	movlw	0
 13509  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13510  0011C0  0E00               	movlw	0
 13511  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13512  0011C4  0E0A               	movlw	10
 13513  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13514  0011C8  EC18  F020         	call	_utoa	;wreg free
 13515                           
 13516                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13517  0011CC  0E54               	movlw	low Term_MainSm@Data
 13518  0011CE  0100               	movlb	0	; () banked
 13519  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13520  0011D2  0E04               	movlw	high Term_MainSm@Data
 13521  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13522  0011D6  0EFF               	movlw	low STR_23
 13523  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13524  0011DA  0EFE               	movlw	high STR_23
 13525  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13526  0011DE  EC80  F02C         	call	_strcpy	;wreg free
 13527                           
 13528                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13529  0011E2  0E54               	movlw	low Term_MainSm@Data
 13530  0011E4  0100               	movlb	0	; () banked
 13531  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13532  0011E8  0E04               	movlw	high Term_MainSm@Data
 13533  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13534  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13535  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13536  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13537  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13538  0011F4  EC63  F027         	call	_strcat	;wreg free
 13539                           
 13540                           ;term.c: 784: strcat(Data,".");
 13541  0011F8  0E54               	movlw	low Term_MainSm@Data
 13542  0011FA  0100               	movlb	0	; () banked
 13543  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13544  0011FE  0E04               	movlw	high Term_MainSm@Data
 13545  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13546  001202  0EF4               	movlw	low STR_24
 13547  001204  6F7F               	movwf	strcat@from& (0+255),b
 13548  001206  0EFF               	movlw	high STR_24
 13549  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13550  00120A  EC63  F027         	call	_strcat	;wreg free
 13551                           
 13552                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13553  00120E  0E54               	movlw	low Term_MainSm@Data
 13554  001210  0100               	movlb	0	; () banked
 13555  001212  6F7D               	movwf	strcat@to& (0+255),b
 13556  001214  0E04               	movlw	high Term_MainSm@Data
 13557  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13558  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13559  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13560  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13561  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13562  001220  EC63  F027         	call	_strcat	;wreg free
 13563                           
 13564                           ;term.c: 786: strcat(Data,".");
 13565  001224  0E54               	movlw	low Term_MainSm@Data
 13566  001226  0100               	movlb	0	; () banked
 13567  001228  6F7D               	movwf	strcat@to& (0+255),b
 13568  00122A  0E04               	movlw	high Term_MainSm@Data
 13569  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13570  00122E  0EF4               	movlw	low STR_24
 13571  001230  6F7F               	movwf	strcat@from& (0+255),b
 13572  001232  0EFF               	movlw	high STR_24
 13573  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13574  001236  EC63  F027         	call	_strcat	;wreg free
 13575                           
 13576                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13577  00123A  0E54               	movlw	low Term_MainSm@Data
 13578  00123C  0100               	movlb	0	; () banked
 13579  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13580  001240  0E04               	movlw	high Term_MainSm@Data
 13581  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13582  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13583  001246  6F7F               	movwf	strcat@from& (0+255),b
 13584  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13585  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13586  00124C  EC63  F027         	call	_strcat	;wreg free
 13587                           
 13588                           ;term.c: 788: strcat(Data,"\r\n");
 13589  001250  0E54               	movlw	low Term_MainSm@Data
 13590  001252  0100               	movlb	0	; () banked
 13591  001254  6F7D               	movwf	strcat@to& (0+255),b
 13592  001256  0E04               	movlw	high Term_MainSm@Data
 13593  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13594  00125A  0EB3               	movlw	low (STR_21+39)
 13595  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13596  00125E  0EFE               	movlw	high (STR_21+39)
 13597  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13598  001262  EC63  F027         	call	_strcat	;wreg free
 13599                           
 13600                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13601  001266  0E54               	movlw	low Term_MainSm@Data
 13602  001268  0100               	movlb	0	; () banked
 13603  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13604  00126C  0E04               	movlw	high Term_MainSm@Data
 13605  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13606  001270  0E54               	movlw	low Term_MainSm@Data
 13607  001272  6F7D               	movwf	strlen@s& (0+255),b
 13608  001274  0E04               	movlw	high Term_MainSm@Data
 13609  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13610  001278  EC7D  F02B         	call	_strlen	;wreg free
 13611  00127C  0100               	movlb	0	; () banked
 13612  00127E  517D               	movf	?_strlen& (0+255),w,b
 13613  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13614  001282  ECE5  F02D         	call	_putUSBUSART	;wreg free
 13615                           
 13616                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13617  001286  0E06               	movlw	6
 13618  001288  0102               	movlb	2	; () banked
 13619  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13620                           
 13621                           ; BSR set to: 2
 13622                           ;term.c: 793: }
 13623                           ;term.c: 794: break;
 13624  00128C  0012               	return	
 13625  00128E                     
 13626                           ; BSR set to: 2
 13627                           ;term.c: 798: if((cdc_trf_state == 0))
 13628                           
 13629                           ; BSR set to: 2
 13630  00128E  0100               	movlb	0	; () banked
 13631  001290  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13632  001292  A4D8               	btfss	status,2,c
 13633  001294  0012               	return	
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;term.c: 799: {
 13637                           ;term.c: 801: memset(Data,0,50);
 13638  001296  0E54               	movlw	low Term_MainSm@Data
 13639  001298  6F7D               	movwf	memset@p1& (0+255),b
 13640  00129A  0E04               	movlw	high Term_MainSm@Data
 13641  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13642  00129E  0E00               	movlw	0
 13643  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13644  0012A2  0E00               	movlw	0
 13645  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13646  0012A6  0E00               	movlw	0
 13647  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13648  0012AA  0E32               	movlw	50
 13649  0012AC  6F81               	movwf	memset@n& (0+255),b
 13650  0012AE  ECB1  F02C         	call	_memset	;wreg free
 13651                           
 13652                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 13 2022");
 13653  0012B2  0E54               	movlw	low Term_MainSm@Data
 13654  0012B4  0100               	movlb	0	; () banked
 13655  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13656  0012B8  0E04               	movlw	high Term_MainSm@Data
 13657  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13658  0012BC  0E27               	movlw	low STR_27
 13659  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13660  0012C0  0EFF               	movlw	high STR_27
 13661  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13662  0012C4  0EB6               	movlw	low STR_28
 13663  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13664  0012C8  0EFF               	movlw	high STR_28
 13665  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13666  0012CC  ECC6  F01A         	call	_sprintf	;wreg free
 13667                           
 13668                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13669  0012D0  0E54               	movlw	low Term_MainSm@Data
 13670  0012D2  0100               	movlb	0	; () banked
 13671  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13672  0012D6  0E04               	movlw	high Term_MainSm@Data
 13673  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13674  0012DA  0E54               	movlw	low Term_MainSm@Data
 13675  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13676  0012DE  0E04               	movlw	high Term_MainSm@Data
 13677  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13678  0012E2  EC7D  F02B         	call	_strlen	;wreg free
 13679  0012E6  0100               	movlb	0	; () banked
 13680  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13681  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13682  0012EC  ECE5  F02D         	call	_putUSBUSART	;wreg free
 13683                           
 13684                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13685  0012F0  0E07               	movlw	7
 13686  0012F2  0102               	movlb	2	; () banked
 13687  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13688                           
 13689                           ; BSR set to: 2
 13690                           ;term.c: 808: }
 13691                           ;term.c: 809: break;
 13692  0012F6  0012               	return	
 13693  0012F8                     
 13694                           ; BSR set to: 2
 13695                           ;term.c: 813: if((cdc_trf_state == 0))
 13696                           
 13697                           ; BSR set to: 2
 13698  0012F8  0100               	movlb	0	; () banked
 13699  0012FA  51C1               	movf	_cdc_trf_state& (0+255),w,b
 13700  0012FC  A4D8               	btfss	status,2,c
 13701  0012FE  0012               	return	
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;term.c: 814: {
 13705                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 13706  001300  0E5F               	movlw	low _MsgReady
 13707  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 13708  001304  0EFE               	movlw	high _MsgReady
 13709  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13710  001308  0E16               	movlw	22
 13711  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 13712  00130C  ECE5  F02D         	call	_putUSBUSART	;wreg free
 13713                           
 13714                           ;term.c: 818: TermMainSmState = Term_FinalState;
 13715  001310  0E08               	movlw	8
 13716  001312  0102               	movlb	2	; () banked
 13717  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13718                           
 13719                           ; BSR set to: 2
 13720                           ;term.c: 819: }
 13721                           ;term.c: 820: break;
 13722  001316  0012               	return	
 13723  001318                     
 13724                           ; BSR set to: 2
 13725                           ;term.c: 824: Terminal();
 13726                           
 13727                           ; BSR set to: 2
 13728  001318  EC68  F000         	call	_Terminal	;wreg free
 13729                           
 13730                           ;term.c: 829: }
 13731                           
 13732                           ;term.c: 828: break;
 13733                           
 13734                           ;term.c: 827: default:
 13735                           
 13736                           ;term.c: 825: break;
 13737  00131C  0012               	return	
 13738  00131E                     l2413:
 13739  00131E  0102               	movlb	2	; () banked
 13740  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 13741                           
 13742                           ; Switch size 1, requested type "space"
 13743                           ; Number of cases is 9, Range of values is 0 to 8
 13744                           ; switch strategies available:
 13745                           ; Name         Instructions Cycles
 13746                           ; simple_byte           28    15 (average)
 13747                           ;	Chosen strategy is simple_byte
 13748  001322  0A00               	xorlw	0	; case 0
 13749  001324  B4D8               	btfsc	status,2,c
 13750  001326  D6C8               	goto	l2414
 13751  001328  0A01               	xorlw	1	; case 1
 13752  00132A  B4D8               	btfsc	status,2,c
 13753  00132C  D6D8               	goto	l2416
 13754  00132E  0A03               	xorlw	3	; case 2
 13755  001330  B4D8               	btfsc	status,2,c
 13756  001332  D6E3               	goto	l2418
 13757  001334  0A01               	xorlw	1	; case 3
 13758  001336  B4D8               	btfsc	status,2,c
 13759  001338  D6EA               	goto	l2423
 13760  00133A  0A07               	xorlw	7	; case 4
 13761  00133C  B4D8               	btfsc	status,2,c
 13762  00133E  D6F7               	goto	l2425
 13763  001340  0A01               	xorlw	1	; case 5
 13764  001342  B4D8               	btfsc	status,2,c
 13765  001344  D704               	goto	l2427
 13766  001346  0A03               	xorlw	3	; case 6
 13767  001348  B4D8               	btfsc	status,2,c
 13768  00134A  D7A1               	goto	l2429
 13769  00134C  0A01               	xorlw	1	; case 7
 13770  00134E  B4D8               	btfsc	status,2,c
 13771  001350  D7D3               	goto	l2431
 13772  001352  0A0F               	xorlw	15	; case 8
 13773  001354  A4D8               	btfss	status,2,c
 13774  001356  0012               	return	
 13775  001358  D7DF               	goto	l2433
 13776  00135A                     __end_of_Term_MainSm:
 13777                           	opt stack 0
 13778                           tosu	equ	0xFFF
 13779                           tosh	equ	0xFFE
 13780                           tosl	equ	0xFFD
 13781                           pclath	equ	0xFFA
 13782                           tblptru	equ	0xFF8
 13783                           tblptrh	equ	0xFF7
 13784                           tblptrl	equ	0xFF6
 13785                           tablat	equ	0xFF5
 13786                           prodh	equ	0xFF4
 13787                           prodl	equ	0xFF3
 13788                           intcon	equ	0xFF2
 13789                           intcon2	equ	0xFF1
 13790                           intcon3	equ	0xFF0
 13791                           indf0	equ	0xFEF
 13792                           postinc0	equ	0xFEE
 13793                           plusw0	equ	0xFEB
 13794                           fsr0h	equ	0xFEA
 13795                           fsr0l	equ	0xFE9
 13796                           wreg	equ	0xFE8
 13797                           indf1	equ	0xFE7
 13798                           postinc1	equ	0xFE6
 13799                           postdec1	equ	0xFE5
 13800                           plusw1	equ	0xFE3
 13801                           fsr1h	equ	0xFE2
 13802                           fsr1l	equ	0xFE1
 13803                           indf2	equ	0xFDF
 13804                           postinc2	equ	0xFDE
 13805                           postdec2	equ	0xFDD
 13806                           plusw2	equ	0xFDB
 13807                           fsr2h	equ	0xFDA
 13808                           fsr2l	equ	0xFD9
 13809                           status	equ	0xFD8
 13810                           
 13811 ;; *************** function _strlen *****************
 13812 ;; Defined at:
 13813 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 13814 ;; Parameters:    Size  Location     Type
 13815 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 13816 ;;		 -> Term_MainSm@Data(50), 
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 13819 ;;		 -> Term_MainSm@Data(50), 
 13820 ;; Return value:  Size  Location     Type
 13821 ;;                  2   29[BANK0 ] unsigned int 
 13822 ;; Registers used:
 13823 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13829 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13830 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13831 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13832 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13833 ;;Total ram usage:        6 bytes
 13834 ;; Hardware stack levels used:    1
 13835 ;; Hardware stack levels required when called:   11
 13836 ;; This function calls:
 13837 ;;		Nothing
 13838 ;; This function is called by:
 13839 ;;		_Term_MainSm
 13840 ;; This function uses a non-reentrant model
 13841 ;;
 13842                           
 13843                           	psect	text56
 13844  0056FA                     __ptext56:
 13845                           	opt stack 0
 13846  0056FA                     _strlen:
 13847                           	opt stack 15
 13848                           
 13849                           ;incstack = 0
 13850  0056FA  C07D  F081         	movff	strlen@s,strlen@cp
 13851  0056FE  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 13852  005702  D003               	goto	l3185
 13853  005704  0100               	movlb	0	; () banked
 13854  005706  4B81               	infsnz	strlen@cp& (0+255),f,b
 13855  005708  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 13856  00570A                     l3185:
 13857                           
 13858                           ; BSR set to: 0
 13859  00570A  C081  FFD9         	movff	strlen@cp,fsr2l
 13860  00570E  C082  FFDA         	movff	strlen@cp+1,fsr2h
 13861  005712  50DF               	movf	indf2,w,c
 13862  005714  A4D8               	btfss	status,2,c
 13863  005716  D7F6               	goto	l3186
 13864  005718  C07D  F07F         	movff	strlen@s,??_strlen
 13865  00571C  C07E  F080         	movff	strlen@s+1,??_strlen+1
 13866  005720  0100               	movlb	0	; () banked
 13867  005722  1F7F               	comf	??_strlen& (0+255),f,b
 13868  005724  1F80               	comf	(??_strlen+1)& (0+255),f,b
 13869  005726  4B7F               	infsnz	??_strlen& (0+255),f,b
 13870  005728  2B80               	incf	(??_strlen+1)& (0+255),f,b
 13871  00572A  5181               	movf	strlen@cp& (0+255),w,b
 13872  00572C  257F               	addwf	??_strlen& (0+255),w,b
 13873  00572E  6F7D               	movwf	?_strlen& (0+255),b
 13874  005730  5182               	movf	(strlen@cp+1)& (0+255),w,b
 13875  005732  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 13876  005734  6F7E               	movwf	(?_strlen+1)& (0+255),b
 13877  005736  0012               	return	
 13878  005738                     __end_of_strlen:
 13879                           	opt stack 0
 13880                           tosu	equ	0xFFF
 13881                           tosh	equ	0xFFE
 13882                           tosl	equ	0xFFD
 13883                           pclath	equ	0xFFA
 13884                           tblptru	equ	0xFF8
 13885                           tblptrh	equ	0xFF7
 13886                           tblptrl	equ	0xFF6
 13887                           tablat	equ	0xFF5
 13888                           prodh	equ	0xFF4
 13889                           prodl	equ	0xFF3
 13890                           intcon	equ	0xFF2
 13891                           intcon2	equ	0xFF1
 13892                           intcon3	equ	0xFF0
 13893                           indf0	equ	0xFEF
 13894                           postinc0	equ	0xFEE
 13895                           plusw0	equ	0xFEB
 13896                           fsr0h	equ	0xFEA
 13897                           fsr0l	equ	0xFE9
 13898                           wreg	equ	0xFE8
 13899                           indf1	equ	0xFE7
 13900                           postinc1	equ	0xFE6
 13901                           postdec1	equ	0xFE5
 13902                           plusw1	equ	0xFE3
 13903                           fsr1h	equ	0xFE2
 13904                           fsr1l	equ	0xFE1
 13905                           indf2	equ	0xFDF
 13906                           postinc2	equ	0xFDE
 13907                           postdec2	equ	0xFDD
 13908                           plusw2	equ	0xFDB
 13909                           fsr2h	equ	0xFDA
 13910                           fsr2l	equ	0xFD9
 13911                           status	equ	0xFD8
 13912                           
 13913 ;; *************** function _strcat *****************
 13914 ;; Defined at:
 13915 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;  to              2   29[BANK0 ] PTR unsigned char 
 13918 ;;		 -> Term_MainSm@Data(50), 
 13919 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 13920 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 13921 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 13922 ;; Auto vars:     Size  Location     Type
 13923 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 13924 ;;		 -> Term_MainSm@Data(50), 
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  2   29[BANK0 ] PTR unsigned char 
 13927 ;; Registers used:
 13928 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13934 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13937 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13938 ;;Total ram usage:        6 bytes
 13939 ;; Hardware stack levels used:    1
 13940 ;; Hardware stack levels required when called:   11
 13941 ;; This function calls:
 13942 ;;		Nothing
 13943 ;; This function is called by:
 13944 ;;		_Term_MainSm
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           	psect	text57
 13949  004EC6                     __ptext57:
 13950                           	opt stack 0
 13951  004EC6                     _strcat:
 13952                           	opt stack 15
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;incstack = 0
 13956  004EC6  C07D  F081         	movff	strcat@to,strcat@cp
 13957  004ECA  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 13958  004ECE  D003               	goto	l3170
 13959  004ED0  0100               	movlb	0	; () banked
 13960  004ED2  4B81               	infsnz	strcat@cp& (0+255),f,b
 13961  004ED4  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 13962  004ED6                     l3170:
 13963                           
 13964                           ; BSR set to: 0
 13965  004ED6  C081  FFD9         	movff	strcat@cp,fsr2l
 13966  004EDA  C082  FFDA         	movff	strcat@cp+1,fsr2h
 13967  004EDE  50DF               	movf	indf2,w,c
 13968  004EE0  B4D8               	btfsc	status,2,c
 13969  004EE2  D006               	goto	l3173
 13970  004EE4  D7F5               	goto	l3171
 13971  004EE6  0100               	movlb	0	; () banked
 13972  004EE8  4B81               	infsnz	strcat@cp& (0+255),f,b
 13973  004EEA  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 13974  004EEC  4B7F               	infsnz	strcat@from& (0+255),f,b
 13975  004EEE  2B80               	incf	(strcat@from+1)& (0+255),f,b
 13976  004EF0                     l3173:
 13977                           
 13978                           ; BSR set to: 0
 13979  004EF0  C07F  FFF6         	movff	strcat@from,tblptrl
 13980  004EF4  C080  FFF7         	movff	strcat@from+1,tblptrh
 13981  004EF8  6AF8               	clrf	tblptru,c
 13982  004EFA  C081  FFD9         	movff	strcat@cp,fsr2l
 13983  004EFE  C082  FFDA         	movff	strcat@cp+1,fsr2h
 13984  004F02  0E0E               	movlw	(high __ramtop+-1)
 13985  004F04  64F7               	cpfsgt	tblptrh,c
 13986  004F06  D003               	bra	u11977
 13987  004F08  0008               	tblrd		*
 13988  004F0A  50F5               	movf	tablat,w,c
 13989  004F0C  D005               	bra	u11970
 13990  004F0E                     u11977:
 13991  004F0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13992  004F12  CFF7 FFEA          	movff	tblptrh,fsr0h
 13993  004F16  50EF               	movf	indf0,w,c
 13994  004F18                     u11970:
 13995  004F18  6EDF               	movwf	indf2,c
 13996  004F1A  50DF               	movf	indf2,w,c
 13997  004F1C  B4D8               	btfsc	status,2,c
 13998  004F1E  0012               	return	
 13999  004F20  D7E2               	goto	l3174
 14000  004F22                     __end_of_strcat:
 14001                           	opt stack 0
 14002                           tosu	equ	0xFFF
 14003                           tosh	equ	0xFFE
 14004                           tosl	equ	0xFFD
 14005                           pclath	equ	0xFFA
 14006                           tblptru	equ	0xFF8
 14007                           tblptrh	equ	0xFF7
 14008                           tblptrl	equ	0xFF6
 14009                           tablat	equ	0xFF5
 14010                           prodh	equ	0xFF4
 14011                           prodl	equ	0xFF3
 14012                           intcon	equ	0xFF2
 14013                           intcon2	equ	0xFF1
 14014                           intcon3	equ	0xFF0
 14015                           indf0	equ	0xFEF
 14016                           postinc0	equ	0xFEE
 14017                           plusw0	equ	0xFEB
 14018                           fsr0h	equ	0xFEA
 14019                           fsr0l	equ	0xFE9
 14020                           wreg	equ	0xFE8
 14021                           indf1	equ	0xFE7
 14022                           postinc1	equ	0xFE6
 14023                           postdec1	equ	0xFE5
 14024                           plusw1	equ	0xFE3
 14025                           fsr1h	equ	0xFE2
 14026                           fsr1l	equ	0xFE1
 14027                           indf2	equ	0xFDF
 14028                           postinc2	equ	0xFDE
 14029                           postdec2	equ	0xFDD
 14030                           plusw2	equ	0xFDB
 14031                           fsr2h	equ	0xFDA
 14032                           fsr2l	equ	0xFD9
 14033                           status	equ	0xFD8
 14034                           
 14035 ;; *************** function _sprintf *****************
 14036 ;; Defined at:
 14037 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14040 ;;		 -> Term_MainSm@Data(50), 
 14041 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14042 ;;		 -> STR_27(17), 
 14043 ;; Auto vars:     Size  Location     Type
 14044 ;;  tmpval          4    0        struct .
 14045 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14046 ;;		 -> STR_30(7), STR_28(12), 
 14047 ;;  ap              2   36[BANK0 ] PTR void [1]
 14048 ;;		 -> ?_sprintf(2), 
 14049 ;;  len             2    0        unsigned int 
 14050 ;;  val             2    0        unsigned int 
 14051 ;;  c               1   38[BANK0 ] char 
 14052 ;;  flag            1   35[BANK0 ] unsigned char 
 14053 ;;  prec            1    0        char 
 14054 ;; Return value:  Size  Location     Type
 14055 ;;                  2   29[BANK0 ] int 
 14056 ;; Registers used:
 14057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14058 ;; Tracked objects:
 14059 ;;		On entry : 0/0
 14060 ;;		On exit  : 0/0
 14061 ;;		Unchanged: 0/0
 14062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14063 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14064 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14066 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14067 ;;Total ram usage:       12 bytes
 14068 ;; Hardware stack levels used:    1
 14069 ;; Hardware stack levels required when called:   11
 14070 ;; This function calls:
 14071 ;;		Nothing
 14072 ;; This function is called by:
 14073 ;;		_Term_MainSm
 14074 ;; This function uses a non-reentrant model
 14075 ;;
 14076                           
 14077                           	psect	text58
 14078  00358C                     __ptext58:
 14079                           	opt stack 0
 14080  00358C                     _sprintf:
 14081                           	opt stack 15
 14082                           
 14083                           ;doprnt.c: 494: va_list ap;
 14084                           ;doprnt.c: 499: signed char c;
 14085                           ;doprnt.c: 506: signed char prec;
 14086                           ;doprnt.c: 508: unsigned char flag;
 14087                           ;doprnt.c: 523: union {
 14088                           ;doprnt.c: 524: unsigned long vd;
 14089                           ;doprnt.c: 525: double integ;
 14090                           ;doprnt.c: 526: } tmpval;
 14091                           ;doprnt.c: 528: unsigned int val;
 14092                           ;doprnt.c: 529: unsigned len;
 14093                           ;doprnt.c: 530: const char * cp;
 14094                           ;doprnt.c: 533: *ap = __va_start();
 14095                           
 14096                           ;incstack = 0
 14097  00358C  0E81               	movlw	low (?_sprintf+4)
 14098  00358E  0100               	movlb	0	; () banked
 14099  003590  6F84               	movwf	sprintf@ap& (0+255),b
 14100  003592  0E00               	movlw	high (?_sprintf+4)
 14101  003594  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14102                           
 14103                           ;doprnt.c: 536: while(c = *f++) {
 14104  003596  D04E               	goto	l2574
 14105  003598                     
 14106                           ; BSR set to: 0
 14107                           ;doprnt.c: 538: if(c != '%')
 14108                           
 14109                           ; BSR set to: 0
 14110  003598  0E25               	movlw	37
 14111  00359A  1986               	xorwf	sprintf@c& (0+255),w,b
 14112  00359C  B4D8               	btfsc	status,2,c
 14113  00359E  D009               	goto	l2564
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;doprnt.c: 540: {
 14117                           ;doprnt.c: 541: ((*sp++ = (c)));
 14118  0035A0  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14119  0035A4  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14120  0035A8  C086  FFDF         	movff	sprintf@c,indf2
 14121                           
 14122                           ; BSR set to: 0
 14123  0035AC  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14124  0035AE  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14125                           
 14126                           ;doprnt.c: 542: continue;
 14127  0035B0  D041               	goto	l2574
 14128  0035B2                     l2564:
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;doprnt.c: 543: }
 14132                           ;doprnt.c: 548: flag = 0;
 14133                           
 14134                           ; BSR set to: 0
 14135  0035B2  0E00               	movlw	0
 14136  0035B4  6F83               	movwf	sprintf@flag& (0+255),b
 14137                           
 14138                           ;doprnt.c: 635: switch(c = *f++) {
 14139  0035B6  D02E               	goto	l2565
 14140  0035B8                     
 14141                           ; BSR set to: 0
 14142                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14143                           
 14144                           ; BSR set to: 0
 14145  0035B8  C084  FFD9         	movff	sprintf@ap,fsr2l
 14146  0035BC  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14147  0035C0  CFDE F087          	movff	postinc2,sprintf@cp
 14148  0035C4  CFDD F088          	movff	postdec2,sprintf@cp+1
 14149                           
 14150                           ; BSR set to: 0
 14151  0035C8  0E02               	movlw	2
 14152  0035CA  2784               	addwf	sprintf@ap& (0+255),f,b
 14153  0035CC  0E00               	movlw	0
 14154  0035CE  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;doprnt.c: 740: if(!cp)
 14158  0035D0  5187               	movf	sprintf@cp& (0+255),w,b
 14159  0035D2  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14160  0035D4  A4D8               	btfss	status,2,c
 14161  0035D6  D014               	goto	l2570
 14162                           
 14163                           ; BSR set to: 0
 14164                           ;doprnt.c: 741: cp = "(null)";
 14165  0035D8  0ED7               	movlw	low STR_30
 14166  0035DA  6F87               	movwf	sprintf@cp& (0+255),b
 14167  0035DC  0EFF               	movlw	high STR_30
 14168  0035DE  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14169                           
 14170                           ; BSR set to: 0
 14171                           ;doprnt.c: 777: while(*cp)
 14172  0035E0  D00F               	goto	l2570
 14173  0035E2                     
 14174                           ; BSR set to: 0
 14175                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14176                           
 14177                           ; BSR set to: 0
 14178  0035E2  C087  FFF6         	movff	sprintf@cp,tblptrl
 14179  0035E6  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14180  0035EA                     	if	0	;tblptru may be non-zero
 14181  0035EA                     	endif
 14182  0035EA                     	if	0	;tblptru may be non-zero
 14183  0035EA                     	endif
 14184  0035EA  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14185  0035EE  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14186  0035F2  0008               	tblrd		*
 14187  0035F4  CFF5 FFDF          	movff	tablat,indf2
 14188                           
 14189                           ; BSR set to: 0
 14190  0035F8  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14191  0035FA  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14192                           
 14193                           ; BSR set to: 0
 14194  0035FC  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14195  0035FE  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14196  003600                     l2570:
 14197                           
 14198                           ; BSR set to: 0
 14199                           
 14200                           ; BSR set to: 0
 14201  003600  C087  FFF6         	movff	sprintf@cp,tblptrl
 14202  003604  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14203  003608                     	if	0	;tblptru may be non-zero
 14204  003608                     	endif
 14205  003608                     	if	0	;tblptru may be non-zero
 14206  003608                     	endif
 14207  003608  0008               	tblrd		*
 14208  00360A  50F5               	movf	tablat,w,c
 14209  00360C  0900               	iorlw	0
 14210  00360E  B4D8               	btfsc	status,2,c
 14211  003610  D011               	goto	l2574
 14212  003612  D7E7               	goto	l2571
 14213  003614                     l2565:
 14214                           
 14215                           ; BSR set to: 0
 14216                           
 14217                           ; BSR set to: 0
 14218  003614  C07F  FFF6         	movff	sprintf@f,tblptrl
 14219  003618  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14220  00361C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14221  00361E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14222  003620                     	if	0	;tblptru may be non-zero
 14223  003620                     	endif
 14224  003620                     	if	0	;tblptru may be non-zero
 14225  003620                     	endif
 14226  003620  0008               	tblrd		*
 14227  003622  CFF5 F086          	movff	tablat,sprintf@c
 14228  003626  5186               	movf	sprintf@c& (0+255),w,b
 14229                           
 14230                           ; Switch size 1, requested type "space"
 14231                           ; Number of cases is 2, Range of values is 0 to 115
 14232                           ; switch strategies available:
 14233                           ; Name         Instructions Cycles
 14234                           ; simple_byte            7     4 (average)
 14235                           ;	Chosen strategy is simple_byte
 14236  003628  0A00               	xorlw	0	; case 0
 14237  00362A  B4D8               	btfsc	status,2,c
 14238  00362C  D00F               	goto	u12030
 14239  00362E  0A73               	xorlw	115	; case 115
 14240  003630  B4D8               	btfsc	status,2,c
 14241  003632  D7C2               	goto	l2568
 14242  003634                     l2574:
 14243                           
 14244                           ; BSR set to: 0
 14245                           
 14246                           ; BSR set to: 0
 14247                           
 14248                           ;doprnt.c: 1422: {
 14249                           
 14250                           ; BSR set to: 0
 14251  003634  C07F  FFF6         	movff	sprintf@f,tblptrl
 14252  003638  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14253  00363C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14254  00363E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14255  003640                     	if	0	;tblptru may be non-zero
 14256  003640                     	endif
 14257  003640                     	if	0	;tblptru may be non-zero
 14258  003640                     	endif
 14259  003640  0008               	tblrd		*
 14260  003642  CFF5 F086          	movff	tablat,sprintf@c
 14261  003646  5186               	movf	sprintf@c& (0+255),w,b
 14262  003648  A4D8               	btfss	status,2,c
 14263  00364A  D7A6               	goto	l2563
 14264  00364C                     u12030:
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;doprnt.c: 1538: *sp = 0;
 14268                           
 14269                           ; BSR set to: 0
 14270                           
 14271                           ;doprnt.c: 1469: }
 14272                           ;doprnt.c: 1533: }
 14273                           ;doprnt.c: 1535: alldone:
 14274                           
 14275                           ; BSR set to: 0
 14276  00364C  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14277  003650  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14278  003654  0E00               	movlw	0
 14279  003656  6EDF               	movwf	indf2,c
 14280  003658  0012               	return	
 14281  00365A                     __end_of_sprintf:
 14282                           	opt stack 0
 14283                           tosu	equ	0xFFF
 14284                           tosh	equ	0xFFE
 14285                           tosl	equ	0xFFD
 14286                           pclath	equ	0xFFA
 14287                           tblptru	equ	0xFF8
 14288                           tblptrh	equ	0xFF7
 14289                           tblptrl	equ	0xFF6
 14290                           tablat	equ	0xFF5
 14291                           prodh	equ	0xFF4
 14292                           prodl	equ	0xFF3
 14293                           intcon	equ	0xFF2
 14294                           intcon2	equ	0xFF1
 14295                           intcon3	equ	0xFF0
 14296                           indf0	equ	0xFEF
 14297                           postinc0	equ	0xFEE
 14298                           plusw0	equ	0xFEB
 14299                           fsr0h	equ	0xFEA
 14300                           fsr0l	equ	0xFE9
 14301                           wreg	equ	0xFE8
 14302                           indf1	equ	0xFE7
 14303                           postinc1	equ	0xFE6
 14304                           postdec1	equ	0xFE5
 14305                           plusw1	equ	0xFE3
 14306                           fsr1h	equ	0xFE2
 14307                           fsr1l	equ	0xFE1
 14308                           indf2	equ	0xFDF
 14309                           postinc2	equ	0xFDE
 14310                           postdec2	equ	0xFDD
 14311                           plusw2	equ	0xFDB
 14312                           fsr2h	equ	0xFDA
 14313                           fsr2l	equ	0xFD9
 14314                           status	equ	0xFD8
 14315                           
 14316 ;; *************** function _memset *****************
 14317 ;; Defined at:
 14318 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  p1              2   29[BANK0 ] PTR void 
 14321 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14322 ;;  c               2   31[BANK0 ] int 
 14323 ;;  n               2   33[BANK0 ] unsigned int 
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14326 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  2   29[BANK0 ] PTR void 
 14329 ;; Registers used:
 14330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14336 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14339 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14340 ;;Total ram usage:        8 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:   11
 14343 ;; This function calls:
 14344 ;;		Nothing
 14345 ;; This function is called by:
 14346 ;;		_USBDeviceInit
 14347 ;;		_USBStdSetCfgHandler
 14348 ;;		_Term_MainSm
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text59
 14353  005962                     __ptext59:
 14354                           	opt stack 0
 14355  005962                     _memset:
 14356                           	opt stack 14
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;incstack = 0
 14360  005962  C07D  F083         	movff	memset@p1,memset@p
 14361  005966  C07E  F084         	movff	memset@p1+1,memset@p+1
 14362  00596A  D009               	goto	l3044
 14363  00596C                     l11433:
 14364  00596C  C083  FFD9         	movff	memset@p,fsr2l
 14365  005970  C084  FFDA         	movff	memset@p+1,fsr2h
 14366  005974  C07F  FFDF         	movff	memset@c,indf2
 14367  005978  0100               	movlb	0	; () banked
 14368  00597A  4B83               	infsnz	memset@p& (0+255),f,b
 14369  00597C  2B84               	incf	(memset@p+1)& (0+255),f,b
 14370  00597E                     l3044:
 14371                           
 14372                           ; BSR set to: 0
 14373  00597E  0100               	movlb	0	; () banked
 14374  005980  0781               	decf	memset@n& (0+255),f,b
 14375  005982  A0D8               	btfss	status,0,c
 14376  005984  0782               	decf	(memset@n+1)& (0+255),f,b
 14377  005986  2981               	incf	memset@n& (0+255),w,b
 14378  005988  E1F1               	bnz	l11433
 14379  00598A  2982               	incf	(memset@n+1)& (0+255),w,b
 14380  00598C  B4D8               	btfsc	status,2,c
 14381  00598E  0012               	return	
 14382  005990  D7ED               	goto	l3045
 14383  005992                     __end_of_memset:
 14384                           	opt stack 0
 14385                           tosu	equ	0xFFF
 14386                           tosh	equ	0xFFE
 14387                           tosl	equ	0xFFD
 14388                           pclath	equ	0xFFA
 14389                           tblptru	equ	0xFF8
 14390                           tblptrh	equ	0xFF7
 14391                           tblptrl	equ	0xFF6
 14392                           tablat	equ	0xFF5
 14393                           prodh	equ	0xFF4
 14394                           prodl	equ	0xFF3
 14395                           intcon	equ	0xFF2
 14396                           intcon2	equ	0xFF1
 14397                           intcon3	equ	0xFF0
 14398                           indf0	equ	0xFEF
 14399                           postinc0	equ	0xFEE
 14400                           plusw0	equ	0xFEB
 14401                           fsr0h	equ	0xFEA
 14402                           fsr0l	equ	0xFE9
 14403                           wreg	equ	0xFE8
 14404                           indf1	equ	0xFE7
 14405                           postinc1	equ	0xFE6
 14406                           postdec1	equ	0xFE5
 14407                           plusw1	equ	0xFE3
 14408                           fsr1h	equ	0xFE2
 14409                           fsr1l	equ	0xFE1
 14410                           indf2	equ	0xFDF
 14411                           postinc2	equ	0xFDE
 14412                           postdec2	equ	0xFDD
 14413                           plusw2	equ	0xFDB
 14414                           fsr2h	equ	0xFDA
 14415                           fsr2l	equ	0xFD9
 14416                           status	equ	0xFD8
 14417                           
 14418 ;; *************** function _Terminal *****************
 14419 ;; Defined at:
 14420 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14421 ;; Parameters:    Size  Location     Type
 14422 ;;		None
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;  i               1   68[BANK0 ] unsigned char 
 14425 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14426 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14427 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14428 ;;  Index           1   70[BANK0 ] unsigned char 
 14429 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14430 ;; Return value:  Size  Location     Type
 14431 ;;                  1    wreg      void 
 14432 ;; Registers used:
 14433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14434 ;; Tracked objects:
 14435 ;;		On entry : 0/0
 14436 ;;		On exit  : 0/0
 14437 ;;		Unchanged: 0/0
 14438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14440 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14442 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14443 ;;Total ram usage:      455 bytes
 14444 ;; Hardware stack levels used:    1
 14445 ;; Hardware stack levels required when called:   15
 14446 ;; This function calls:
 14447 ;;		_I2cSlv_I2cReadMsgSts
 14448 ;;		_I2cSlv_ReceiveI2cMsg
 14449 ;;		_I2cSlv_SendI2cMsg
 14450 ;;		_OsTmr_Wait
 14451 ;;		_atoi
 14452 ;;		_getsUSBUSART
 14453 ;;		_itoa
 14454 ;;		_putUSBUSART
 14455 ;;		_strcpy
 14456 ;;		_strtol
 14457 ;;		_xtoi
 14458 ;; This function is called by:
 14459 ;;		_Term_MainSm
 14460 ;; This function uses a non-reentrant model
 14461 ;;
 14462                           
 14463                           	psect	text60
 14464  0000D0                     __ptext60:
 14465                           	opt stack 0
 14466  0000D0                     _Terminal:
 14467                           	opt stack 11
 14468                           
 14469                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14470                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14471                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14472                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14473                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14474                           ;term.c: 435: UINT8 Index;
 14475                           ;term.c: 436: static UINT8 Len[4];
 14476                           ;term.c: 437: static UINT8 PackageLen;
 14477                           ;term.c: 438: static UINT8 Addr[4];
 14478                           ;term.c: 439: static UINT8 SlaveAddr;
 14479                           ;term.c: 440: static PayloadType Payload[20u];
 14480                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;incstack = 0
 14484  0000D0  0E00               	movlw	0
 14485  0000D2  0100               	movlb	0	; () banked
 14486  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14490                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14491                           ;term.c: 445: static SwTimerType SwTimer;
 14492                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14493  0000D6  0E1F               	movlw	31
 14494  0000D8  65CB               	cpfsgt	_USBDeviceState& (0+255),b
 14495  0000DA  0012               	return	
 14496                           
 14497                           ; BSR set to: 0
 14498  0000DC  B265               	btfsc	3941,1,c	;volatile
 14499  0000DE  0012               	return	
 14500  0000E0  D278               	goto	l2353
 14501  0000E2                     
 14502                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14503                           
 14504                           ; BSR set to: 0
 14505  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14506  0000E4  0100               	movlb	0	; () banked
 14507  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14508  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14509  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14510  0000EC  0EC8               	movlw	200
 14511  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14512  0000F0  EC9C  F022         	call	_getsUSBUSART	;wreg free
 14513  0000F4  0100               	movlb	0	; () banked
 14514  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14515                           
 14516                           ; BSR set to: 0
 14517                           ;term.c: 458: if (ReceivedBytes > 0)
 14518  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14519  0000FA  B4D8               	btfsc	status,2,c
 14520  0000FC  0012               	return	
 14521                           
 14522                           ; BSR set to: 0
 14523                           ;term.c: 459: {
 14524                           ;term.c: 461: if (EchoOption == 1u)
 14525  0000FE  0102               	movlb	2	; () banked
 14526  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14527  000102  A4D8               	btfss	status,2,c
 14528  000104  D026               	goto	l2357
 14529                           
 14530                           ; BSR set to: 2
 14531                           ;term.c: 462: {
 14532                           ;term.c: 464: if((cdc_trf_state == 0))
 14533  000106  0100               	movlb	0	; () banked
 14534  000108  51C1               	movf	_cdc_trf_state& (0+255),w,b
 14535  00010A  A4D8               	btfss	status,2,c
 14536  00010C  D022               	goto	l2357
 14537                           
 14538                           ; BSR set to: 0
 14539                           ;term.c: 465: {
 14540                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14541  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14542  000110  0D01               	mullw	1
 14543  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14544  000114  24F3               	addwf	prodl,w,c
 14545  000116  6ED9               	movwf	fsr2l,c
 14546  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14547  00011A  20F4               	addwfc	prodh,w,c
 14548  00011C  6EDA               	movwf	fsr2h,c
 14549  00011E  0E0D               	movlw	13
 14550  000120  6EDF               	movwf	indf2,c
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14554  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14555  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14556  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14557  000128  0E01               	movlw	1
 14558  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14559  00012C  0E00               	movlw	0
 14560  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14561  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14562  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14563  000134  6ED9               	movwf	fsr2l,c
 14564  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14565  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14566  00013A  6EDA               	movwf	fsr2h,c
 14567  00013C  0E0A               	movlw	10
 14568  00013E  6EDF               	movwf	indf2,c
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14572  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14573  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14574  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14575  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14576  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14577  00014A  0F02               	addlw	2
 14578  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14579  00014E  ECE5  F02D         	call	_putUSBUSART	;wreg free
 14580  000152                     l2357:
 14581                           
 14582                           ;term.c: 469: }
 14583                           ;term.c: 470: }
 14584                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14585                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14586                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14587  000152  0E53               	movlw	83
 14588  000154  010A               	movlb	10	; () banked
 14589  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14590  000158  A4D8               	btfss	status,2,c
 14591  00015A  D043               	goto	l2358
 14592                           
 14593                           ; BSR set to: 10
 14594  00015C  0E4F               	movlw	79
 14595  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14596  000160  A4D8               	btfss	status,2,c
 14597  000162  D03F               	goto	l2358
 14598                           
 14599                           ; BSR set to: 10
 14600  000164  0E3A               	movlw	58
 14601  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14602  000168  A4D8               	btfss	status,2,c
 14603  00016A  D03B               	goto	l2358
 14604                           
 14605                           ; BSR set to: 10
 14606                           ;term.c: 476: {
 14607                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14608  00016C  0E47               	movlw	71
 14609  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14610  000170  A4D8               	btfss	status,2,c
 14611  000172  0012               	return	
 14612                           
 14613                           ; BSR set to: 10
 14614  000174  0E3A               	movlw	58
 14615  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14616  000178  A4D8               	btfss	status,2,c
 14617  00017A  0012               	return	
 14618                           
 14619                           ; BSR set to: 10
 14620                           ;term.c: 479: {
 14621                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14622  00017C  0E44               	movlw	68
 14623  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14624  000180  A4D8               	btfss	status,2,c
 14625  000182  D015               	goto	l2360
 14626                           
 14627                           ; BSR set to: 10
 14628  000184  0E46               	movlw	70
 14629  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14630  000188  A4D8               	btfss	status,2,c
 14631  00018A  D011               	goto	l2360
 14632                           
 14633                           ; BSR set to: 10
 14634                           ;term.c: 482: {
 14635                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14636  00018C  0E41               	movlw	65
 14637  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14638  000190  A4D8               	btfss	status,2,c
 14639  000192  D004               	goto	l2361
 14640                           
 14641                           ; BSR set to: 10
 14642                           ;term.c: 484: {
 14643                           ;term.c: 485: FormatOption = 1u;
 14644  000194  0E01               	movlw	1
 14645  000196  0102               	movlb	2	; () banked
 14646  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14647                           
 14648                           ;term.c: 486: }
 14649  00019A  0012               	return	
 14650  00019C                     l2361:
 14651                           
 14652                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14653                           
 14654                           ; BSR set to: 2
 14655  00019C  0E42               	movlw	66
 14656  00019E  010A               	movlb	10	; () banked
 14657  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14658  0001A2  A4D8               	btfss	status,2,c
 14659  0001A4  0012               	return	
 14660                           
 14661                           ; BSR set to: 10
 14662                           ;term.c: 488: {
 14663                           ;term.c: 489: FormatOption = 0u;
 14664  0001A6  0E00               	movlw	0
 14665  0001A8  0102               	movlb	2	; () banked
 14666  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14667                           
 14668                           ; BSR set to: 2
 14669                           ;term.c: 490: }
 14670                           ;term.c: 491: }
 14671                           
 14672                           ; BSR set to: 2
 14673  0001AC  0012               	return	
 14674  0001AE                     l2360:
 14675                           
 14676                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14677                           
 14678                           ; BSR set to: 2
 14679  0001AE  0E45               	movlw	69
 14680  0001B0  010A               	movlb	10	; () banked
 14681  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14682  0001B4  A4D8               	btfss	status,2,c
 14683  0001B6  0012               	return	
 14684                           
 14685                           ; BSR set to: 10
 14686  0001B8  0E4D               	movlw	77
 14687  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14688  0001BC  A4D8               	btfss	status,2,c
 14689  0001BE  0012               	return	
 14690                           
 14691                           ; BSR set to: 10
 14692                           ;term.c: 494: {
 14693                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14694  0001C0  0E31               	movlw	49
 14695  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14696  0001C4  A4D8               	btfss	status,2,c
 14697  0001C6  D004               	goto	l2366
 14698                           
 14699                           ; BSR set to: 10
 14700                           ;term.c: 496: {
 14701                           ;term.c: 497: EchoOption = 1u;
 14702  0001C8  0E01               	movlw	1
 14703  0001CA  0102               	movlb	2	; () banked
 14704  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14705                           
 14706                           ;term.c: 498: }
 14707  0001CE  0012               	return	
 14708  0001D0                     l2366:
 14709                           
 14710                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 14711                           
 14712                           ; BSR set to: 2
 14713  0001D0  0E30               	movlw	48
 14714  0001D2  010A               	movlb	10	; () banked
 14715  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14716  0001D6  A4D8               	btfss	status,2,c
 14717  0001D8  0012               	return	
 14718                           
 14719                           ; BSR set to: 10
 14720                           ;term.c: 500: {
 14721                           ;term.c: 501: EchoOption = 0u;
 14722  0001DA  0E00               	movlw	0
 14723  0001DC  0102               	movlb	2	; () banked
 14724  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14725                           
 14726                           ; BSR set to: 2
 14727                           ;term.c: 507: }
 14728                           ;term.c: 508: }
 14729                           ;term.c: 509: }
 14730                           
 14731                           ; BSR set to: 2
 14732                           
 14733                           ; BSR set to: 2
 14734                           
 14735                           ;term.c: 504: else
 14736                           ;term.c: 505: {
 14737                           
 14738                           ; BSR set to: 2
 14739                           
 14740                           ; BSR set to: 2
 14741                           ;term.c: 502: }
 14742                           ;term.c: 503: }
 14743                           
 14744                           ; BSR set to: 2
 14745  0001E0  0012               	return	
 14746  0001E2                     l2358:
 14747                           
 14748                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 14749                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 14750                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14751                           
 14752                           ; BSR set to: 2
 14753  0001E2  0E53               	movlw	83
 14754  0001E4  010A               	movlb	10	; () banked
 14755  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14756  0001E8  A4D8               	btfss	status,2,c
 14757  0001EA  D0D3               	goto	l2371
 14758                           
 14759                           ; BSR set to: 10
 14760  0001EC  0E42               	movlw	66
 14761  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14762  0001F0  A4D8               	btfss	status,2,c
 14763  0001F2  D0CF               	goto	l2371
 14764                           
 14765                           ; BSR set to: 10
 14766  0001F4  0E3A               	movlw	58
 14767  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14768  0001F8  A4D8               	btfss	status,2,c
 14769  0001FA  D0CB               	goto	l2371
 14770                           
 14771                           ; BSR set to: 10
 14772                           ;term.c: 513: {
 14773                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14774  0001FC  0E57               	movlw	87
 14775  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14776  000200  A4D8               	btfss	status,2,c
 14777  000202  D091               	goto	l2372
 14778                           
 14779                           ; BSR set to: 10
 14780  000204  0E3A               	movlw	58
 14781  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14782  000208  A4D8               	btfss	status,2,c
 14783  00020A  D08D               	goto	l2372
 14784                           
 14785                           ; BSR set to: 10
 14786                           ;term.c: 515: {
 14787                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 14788  00020C  CA05  F3AB         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 14789                           
 14790                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 14791  000210  CA06  F3AC         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 14792                           
 14793                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 14794  000214  CA08  F3A7         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 14795                           
 14796                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 14797  000218  CA09  F3A8         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 14798                           
 14799                           ; BSR set to: 10
 14800                           ;term.c: 523: PackageLen = atoi((void*)Len);
 14801  00021C  0EAB               	movlw	low Terminal@Len
 14802  00021E  0100               	movlb	0	; () banked
 14803  000220  6F83               	movwf	atoi@s& (0+255),b
 14804  000222  0E03               	movlw	high Terminal@Len
 14805  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 14806  000226  EC5A  F01A         	call	_atoi	;wreg free
 14807  00022A  0100               	movlb	0	; () banked
 14808  00022C  5183               	movf	?_atoi& (0+255),w,b
 14809  00022E  0102               	movlb	2	; () banked
 14810  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 14811                           
 14812                           ; BSR set to: 2
 14813                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 14814  000232  0EA7               	movlw	low Terminal@Addr
 14815  000234  0100               	movlb	0	; () banked
 14816  000236  6F83               	movwf	xtoi@s& (0+255),b
 14817  000238  0E03               	movlw	high Terminal@Addr
 14818  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 14819  00023C  EC09  F019         	call	_xtoi	;wreg free
 14820  000240  0100               	movlb	0	; () banked
 14821  000242  5183               	movf	?_xtoi& (0+255),w,b
 14822  000244  0102               	movlb	2	; () banked
 14823  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 14824                           
 14825                           ; BSR set to: 2
 14826                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 14827  000248  0E00               	movlw	0
 14828  00024A  0100               	movlb	0	; () banked
 14829  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 14830  00024E  D032               	goto	l2373
 14831  000250                     
 14832                           ;term.c: 527: {
 14833                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 14834                           
 14835                           ; BSR set to: 0
 14836  000250  0100               	movlb	0	; () banked
 14837  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 14838  000254  0D02               	mullw	2
 14839  000256  0E0B               	movlw	11
 14840  000258  26F3               	addwf	prodl,f,c
 14841  00025A  0E00               	movlw	0
 14842  00025C  22F4               	addwfc	prodh,f,c
 14843  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 14844  000260  24F3               	addwf	prodl,w,c
 14845  000262  6ED9               	movwf	fsr2l,c
 14846  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 14847  000266  20F4               	addwfc	prodh,w,c
 14848  000268  6EDA               	movwf	fsr2h,c
 14849  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 14850  00026C  0D04               	mullw	4
 14851  00026E  0E00               	movlw	low Terminal@Payload
 14852  000270  24F3               	addwf	prodl,w,c
 14853  000272  6EE1               	movwf	fsr1l,c
 14854  000274  0E05               	movlw	high Terminal@Payload
 14855  000276  20F4               	addwfc	prodh,w,c
 14856  000278  6EE2               	movwf	fsr1h,c
 14857  00027A  CFDF FFE7          	movff	indf2,indf1
 14858                           
 14859                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 14860  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 14861  000280  0D02               	mullw	2
 14862  000282  0E0C               	movlw	12
 14863  000284  26F3               	addwf	prodl,f,c
 14864  000286  0E00               	movlw	0
 14865  000288  22F4               	addwfc	prodh,f,c
 14866  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 14867  00028C  24F3               	addwf	prodl,w,c
 14868  00028E  6ED9               	movwf	fsr2l,c
 14869  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 14870  000292  20F4               	addwfc	prodh,w,c
 14871  000294  6EDA               	movwf	fsr2h,c
 14872  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 14873  000298  0D04               	mullw	4
 14874  00029A  0E01               	movlw	1
 14875  00029C  26F3               	addwf	prodl,f,c
 14876  00029E  0E00               	movlw	0
 14877  0002A0  22F4               	addwfc	prodh,f,c
 14878  0002A2  0E00               	movlw	low Terminal@Payload
 14879  0002A4  24F3               	addwf	prodl,w,c
 14880  0002A6  6EE1               	movwf	fsr1l,c
 14881  0002A8  0E05               	movlw	high Terminal@Payload
 14882  0002AA  20F4               	addwfc	prodh,w,c
 14883  0002AC  6EE2               	movwf	fsr1h,c
 14884  0002AE  CFDF FFE7          	movff	indf2,indf1
 14885                           
 14886                           ; BSR set to: 0
 14887  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 14888  0002B4                     l2373:
 14889                           
 14890                           ; BSR set to: 0
 14891                           
 14892                           ; BSR set to: 0
 14893  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 14894  0002B6  0102               	movlb	2	; () banked
 14895  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 14896  0002BA  B0D8               	btfsc	status,0,c
 14897  0002BC  D7C9               	goto	l2374
 14898                           
 14899                           ; BSR set to: 2
 14900                           ;term.c: 530: }
 14901                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 14902                           
 14903                           ; BSR set to: 2
 14904  0002BE  0E00               	movlw	0
 14905  0002C0  0100               	movlb	0	; () banked
 14906  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 14907  0002C4  D01F               	goto	l2376
 14908  0002C6                     
 14909                           ;term.c: 533: {
 14910                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 14911                           
 14912                           ; BSR set to: 0
 14913  0002C6  0100               	movlb	0	; () banked
 14914  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 14915  0002CA  0D04               	mullw	4
 14916  0002CC  0E00               	movlw	low Terminal@Payload
 14917  0002CE  24F3               	addwf	prodl,w,c
 14918  0002D0  6F89               	movwf	strtol@s& (0+255),b
 14919  0002D2  0E05               	movlw	high Terminal@Payload
 14920  0002D4  20F4               	addwfc	prodh,w,c
 14921  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 14922  0002D8  0E00               	movlw	0
 14923  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 14924  0002DC  0E00               	movlw	0
 14925  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 14926  0002E0  0E00               	movlw	0
 14927  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 14928  0002E4  0E10               	movlw	16
 14929  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 14930  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 14931  0002EC  0100               	movlb	0	; () banked
 14932  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 14933  0002F0  0D01               	mullw	1
 14934  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 14935  0002F4  24F3               	addwf	prodl,w,c
 14936  0002F6  6ED9               	movwf	fsr2l,c
 14937  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 14938  0002FA  20F4               	addwfc	prodh,w,c
 14939  0002FC  6EDA               	movwf	fsr2h,c
 14940  0002FE  C089  FFDF         	movff	?_strtol,indf2
 14941                           
 14942                           ; BSR set to: 0
 14943  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 14944  000304                     l2376:
 14945                           
 14946                           ; BSR set to: 0
 14947                           
 14948                           ; BSR set to: 0
 14949  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 14950  000306  0102               	movlb	2	; () banked
 14951  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 14952  00030A  B0D8               	btfsc	status,0,c
 14953  00030C  D7DC               	goto	l2377
 14954                           
 14955                           ; BSR set to: 2
 14956                           ;term.c: 539: }
 14957                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 14958                           
 14959                           ; BSR set to: 2
 14960  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 14961  000310  0100               	movlb	0	; () banked
 14962  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 14963  000314  0E01               	movlw	high Terminal@TermTxBuffer
 14964  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 14965  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 14966  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 14967  000320  EC9C  F02B         	call	_I2cSlv_SendI2cMsg	;wreg free
 14968                           
 14969                           ;term.c: 543: }
 14970  000324  0012               	return	
 14971  000326                     l2372:
 14972                           
 14973                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 14974  000326  0E52               	movlw	82
 14975  000328  010A               	movlb	10	; () banked
 14976  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14977  00032C  A4D8               	btfss	status,2,c
 14978  00032E  0012               	return	
 14979                           
 14980                           ; BSR set to: 10
 14981  000330  0E3A               	movlw	58
 14982  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14983  000334  A4D8               	btfss	status,2,c
 14984  000336  0012               	return	
 14985                           
 14986                           ; BSR set to: 10
 14987                           ;term.c: 545: {
 14988                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 14989  000338  CA05  F3AB         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 14990                           
 14991                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 14992  00033C  CA06  F3AC         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 14993                           
 14994                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 14995  000340  CA08  F3A7         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 14996                           
 14997                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 14998  000344  CA09  F3A8         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 14999                           
 15000                           ; BSR set to: 10
 15001                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15002  000348  0EAB               	movlw	low Terminal@Len
 15003  00034A  0100               	movlb	0	; () banked
 15004  00034C  6F83               	movwf	atoi@s& (0+255),b
 15005  00034E  0E03               	movlw	high Terminal@Len
 15006  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15007  000352  EC5A  F01A         	call	_atoi	;wreg free
 15008  000356  0100               	movlb	0	; () banked
 15009  000358  5183               	movf	?_atoi& (0+255),w,b
 15010  00035A  0102               	movlb	2	; () banked
 15011  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15012                           
 15013                           ; BSR set to: 2
 15014                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15015  00035E  0EA7               	movlw	low Terminal@Addr
 15016  000360  0100               	movlb	0	; () banked
 15017  000362  6F83               	movwf	xtoi@s& (0+255),b
 15018  000364  0E03               	movlw	high Terminal@Addr
 15019  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15020  000368  EC09  F019         	call	_xtoi	;wreg free
 15021  00036C  0100               	movlb	0	; () banked
 15022  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15023  000370  0102               	movlb	2	; () banked
 15024  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15025                           
 15026                           ; BSR set to: 2
 15027                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15028  000374  0E90               	movlw	low Terminal@TermRxBuffer
 15029  000376  0100               	movlb	0	; () banked
 15030  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15031  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15032  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15033  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15034  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15035  000386  EC3D  F02B         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15036                           
 15037                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15038  00038A  0E01               	movlw	1
 15039  00038C  0102               	movlb	2	; () banked
 15040  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15041                           
 15042                           ; BSR set to: 2
 15043                           ;term.c: 561: }
 15044                           ;term.c: 562: }
 15045                           
 15046                           ; BSR set to: 2
 15047  000390  0012               	return	
 15048  000392                     l2371:
 15049                           
 15050                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15051                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15052                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15053                           
 15054                           ; BSR set to: 2
 15055  000392  0E54               	movlw	84
 15056  000394  010A               	movlb	10	; () banked
 15057  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15058  000398  A4D8               	btfss	status,2,c
 15059  00039A  0012               	return	
 15060                           
 15061                           ; BSR set to: 10
 15062  00039C  0E45               	movlw	69
 15063  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15064  0003A0  A4D8               	btfss	status,2,c
 15065  0003A2  0012               	return	
 15066                           
 15067                           ; BSR set to: 10
 15068  0003A4  0E4C               	movlw	76
 15069  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15070  0003A8  A4D8               	btfss	status,2,c
 15071  0003AA  0012               	return	
 15072                           
 15073                           ; BSR set to: 10
 15074                           ;term.c: 566: {
 15075                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15076  0003AC  CA03  F3AB         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15077                           
 15078                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15079  0003B0  CA04  F3AC         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15080                           
 15081                           ; BSR set to: 10
 15082                           ;term.c: 570: PhoneNumberLen = atoi(Len);
 15083  0003B4  0EAB               	movlw	low Terminal@Len
 15084  0003B6  0100               	movlb	0	; () banked
 15085  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15086  0003BA  0E03               	movlw	high Terminal@Len
 15087  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15088  0003BE  EC5A  F01A         	call	_atoi	;wreg free
 15089  0003C2  C083  F324         	movff	?_atoi,_PhoneNumberLen
 15090  0003C6  C084  F325         	movff	?_atoi+1,_PhoneNumberLen+1
 15091                           
 15092                           ;term.c: 572: for (UINT8 i = 0; i < PhoneNumberLen; i++)
 15093  0003CA  0E00               	movlw	0
 15094  0003CC  0100               	movlb	0	; () banked
 15095  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15096  0003D0  D018               	goto	l2383
 15097  0003D2                     
 15098                           ; BSR set to: 0
 15099                           ;term.c: 573: {
 15100                           ;term.c: 574: PhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15101                           
 15102                           ; BSR set to: 0
 15103  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15104  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15105  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15106  0003D8  0E05               	movlw	5
 15107  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15108  0003DC  0E00               	movlw	0
 15109  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15110  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15111  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15112  0003E4  6ED9               	movwf	fsr2l,c
 15113  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15114  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15115  0003EA  6EDA               	movwf	fsr2h,c
 15116  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15117  0003EE  0D01               	mullw	1
 15118  0003F0  0E86               	movlw	low _PhoneNumber
 15119  0003F2  24F3               	addwf	prodl,w,c
 15120  0003F4  6EE1               	movwf	fsr1l,c
 15121  0003F6  0E04               	movlw	high _PhoneNumber
 15122  0003F8  20F4               	addwfc	prodh,w,c
 15123  0003FA  6EE2               	movwf	fsr1h,c
 15124  0003FC  CFDF FFE7          	movff	indf2,indf1
 15125                           
 15126                           ; BSR set to: 0
 15127  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15128  000402                     l2383:
 15129                           
 15130                           ; BSR set to: 0
 15131                           
 15132                           ; BSR set to: 0
 15133  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15134  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15135  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15136  000408  0103               	movlb	3	; () banked
 15137  00040A  5124               	movf	_PhoneNumberLen& (0+255),w,b
 15138  00040C  0100               	movlb	0	; () banked
 15139  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15140  000410  0103               	movlb	3	; () banked
 15141  000412  5125               	movf	(_PhoneNumberLen+1)& (0+255),w,b
 15142  000414  0100               	movlb	0	; () banked
 15143  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15144  000418  B0D8               	btfsc	status,0,c
 15145  00041A  0012               	return	
 15146  00041C  D7DA               	goto	l2384
 15147  00041E                     
 15148                           ;term.c: 619: if((cdc_trf_state == 0))
 15149                           
 15150                           ; BSR set to: 0
 15151  00041E  0100               	movlb	0	; () banked
 15152  000420  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15153  000422  A4D8               	btfss	status,2,c
 15154  000424  0012               	return	
 15155                           
 15156                           ; BSR set to: 0
 15157                           ;term.c: 620: {
 15158                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15159  000426  0E53               	movlw	83
 15160  000428  0102               	movlb	2	; () banked
 15161  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15162                           
 15163                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15164  00042C  0E42               	movlw	66
 15165  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15166                           
 15167                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15168  000430  0E5B               	movlw	91
 15169  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15170                           
 15171                           ; BSR set to: 2
 15172                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15173  000434  C3A7  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15174                           
 15175                           ; BSR set to: 2
 15176                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15177  000438  C3A8  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15178                           
 15179                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15180  00043C  0E5D               	movlw	93
 15181  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15182                           
 15183                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15184  000440  0E3A               	movlw	58
 15185  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15186                           
 15187                           ; BSR set to: 2
 15188                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15189  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15190  000446  0100               	movlb	0	; () banked
 15191  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15192  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15193  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15194  00044E  0E07               	movlw	7
 15195  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15196  000452  ECE5  F02D         	call	_putUSBUSART	;wreg free
 15197                           
 15198                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15199  000456  0E02               	movlw	2
 15200  000458  0102               	movlb	2	; () banked
 15201  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15202                           
 15203                           ; BSR set to: 2
 15204                           ;term.c: 632: }
 15205                           ;term.c: 633: break;
 15206  00045C  0012               	return	
 15207  00045E                     
 15208                           ; BSR set to: 2
 15209                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15210                           
 15211                           ; BSR set to: 2
 15212  00045E  EC07  F02E         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15213  000462  06E8               	decf	wreg,f,c
 15214  000464  A4D8               	btfss	status,2,c
 15215  000466  D088               	goto	l2392
 15216                           
 15217                           ;term.c: 638: {
 15218                           ;term.c: 640: if (FormatOption == 1u)
 15219  000468  0102               	movlb	2	; () banked
 15220  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15221  00046C  A4D8               	btfss	status,2,c
 15222  00046E  D027               	goto	u11910
 15223                           
 15224                           ; BSR set to: 2
 15225                           ;term.c: 641: {
 15226                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15227  000470  0E00               	movlw	0
 15228  000472  0100               	movlb	0	; () banked
 15229  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15230  000476  D01E               	goto	l2394
 15231  000478                     
 15232                           ;term.c: 644: {
 15233                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15234                           
 15235                           ; BSR set to: 0
 15236  000478  0100               	movlb	0	; () banked
 15237  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15238  00047C  0D04               	mullw	4
 15239  00047E  0E00               	movlw	low Terminal@Payload
 15240  000480  24F3               	addwf	prodl,w,c
 15241  000482  6F93               	movwf	itoa@buf& (0+255),b
 15242  000484  0E05               	movlw	high Terminal@Payload
 15243  000486  20F4               	addwfc	prodh,w,c
 15244  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15245  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15246  00048C  0D01               	mullw	1
 15247  00048E  0E90               	movlw	low Terminal@TermRxBuffer
 15248  000490  24F3               	addwf	prodl,w,c
 15249  000492  6ED9               	movwf	fsr2l,c
 15250  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15251  000496  20F4               	addwfc	prodh,w,c
 15252  000498  6EDA               	movwf	fsr2h,c
 15253  00049A  50DF               	movf	indf2,w,c
 15254  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15255  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15256  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15257  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15258  0004A4  0E00               	movlw	0
 15259  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15260  0004A8  0E0A               	movlw	10
 15261  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15262  0004AC  ECD7  F02A         	call	_itoa	;wreg free
 15263  0004B0  0100               	movlb	0	; () banked
 15264  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15265  0004B4                     l2394:
 15266                           
 15267                           ; BSR set to: 0
 15268                           
 15269                           ; BSR set to: 0
 15270  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15271  0004B6  0102               	movlb	2	; () banked
 15272  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15273  0004BA  B0D8               	btfsc	status,0,c
 15274  0004BC  D7DD               	goto	l2395
 15275  0004BE                     u11910:
 15276                           
 15277                           ; BSR set to: 2
 15278                           ;term.c: 646: }
 15279                           ;term.c: 647: }
 15280                           ;term.c: 650: if((cdc_trf_state == 0))
 15281                           
 15282                           ; BSR set to: 2
 15283                           
 15284                           ; BSR set to: 2
 15285  0004BE  0100               	movlb	0	; () banked
 15286  0004C0  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15287  0004C2  A4D8               	btfss	status,2,c
 15288  0004C4  0012               	return	
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;term.c: 651: {
 15292                           ;term.c: 653: if (FormatOption == 1u)
 15293  0004C6  0102               	movlb	2	; () banked
 15294  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15295  0004CA  A4D8               	btfss	status,2,c
 15296  0004CC  D02B               	goto	l2398
 15297                           
 15298                           ; BSR set to: 2
 15299                           ;term.c: 654: {
 15300                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15301  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15302  0004D0  0D08               	mullw	8
 15303  0004D2  0E03               	movlw	3
 15304  0004D4  26F3               	addwf	prodl,f,c
 15305  0004D6  0E00               	movlw	0
 15306  0004D8  22F4               	addwfc	prodh,f,c
 15307  0004DA  0E00               	movlw	low Terminal@Payload
 15308  0004DC  24F3               	addwf	prodl,w,c
 15309  0004DE  6ED9               	movwf	fsr2l,c
 15310  0004E0  0E05               	movlw	high Terminal@Payload
 15311  0004E2  20F4               	addwfc	prodh,w,c
 15312  0004E4  6EDA               	movwf	fsr2h,c
 15313  0004E6  0E0D               	movlw	13
 15314  0004E8  6EDF               	movwf	indf2,c
 15315                           
 15316                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15317  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15318  0004EC  0D08               	mullw	8
 15319  0004EE  0E02               	movlw	2
 15320  0004F0  26F3               	addwf	prodl,f,c
 15321  0004F2  0E00               	movlw	0
 15322  0004F4  22F4               	addwfc	prodh,f,c
 15323  0004F6  0E00               	movlw	low Terminal@Payload
 15324  0004F8  24F3               	addwf	prodl,w,c
 15325  0004FA  6ED9               	movwf	fsr2l,c
 15326  0004FC  0E05               	movlw	high Terminal@Payload
 15327  0004FE  20F4               	addwfc	prodh,w,c
 15328  000500  6EDA               	movwf	fsr2h,c
 15329  000502  0E0A               	movlw	10
 15330  000504  6EDF               	movwf	indf2,c
 15331                           
 15332                           ; BSR set to: 2
 15333                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15334  000506  0E00               	movlw	low Terminal@Payload
 15335  000508  0100               	movlb	0	; () banked
 15336  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15337  00050C  0E05               	movlw	high Terminal@Payload
 15338  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15339  000510  0102               	movlb	2	; () banked
 15340  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15341  000514  0D02               	mullw	2
 15342  000516  50F3               	movf	prodl,w,c
 15343  000518  0F04               	addlw	4
 15344  00051A  0100               	movlb	0	; () banked
 15345  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15346  00051E  ECE5  F02D         	call	_putUSBUSART	;wreg free
 15347                           
 15348                           ;term.c: 659: }
 15349  000522  D026               	goto	l2399
 15350  000524                     l2398:
 15351                           
 15352                           ;term.c: 660: else
 15353                           ;term.c: 661: {
 15354                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15355  000524  0102               	movlb	2	; () banked
 15356  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15357  000528  0D01               	mullw	1
 15358  00052A  0E90               	movlw	low Terminal@TermRxBuffer
 15359  00052C  24F3               	addwf	prodl,w,c
 15360  00052E  6ED9               	movwf	fsr2l,c
 15361  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15362  000532  20F4               	addwfc	prodh,w,c
 15363  000534  6EDA               	movwf	fsr2h,c
 15364  000536  0E0D               	movlw	13
 15365  000538  6EDF               	movwf	indf2,c
 15366                           
 15367                           ; BSR set to: 2
 15368                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15369  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15370  00053C  0100               	movlb	0	; () banked
 15371  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15372  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15373  000542  0E01               	movlw	1
 15374  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15375  000546  0E00               	movlw	0
 15376  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15377  00054A  0E90               	movlw	low Terminal@TermRxBuffer
 15378  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15379  00054E  6ED9               	movwf	fsr2l,c
 15380  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15381  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15382  000554  6EDA               	movwf	fsr2h,c
 15383  000556  0E0A               	movlw	10
 15384  000558  6EDF               	movwf	indf2,c
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15388  00055A  0E90               	movlw	low Terminal@TermRxBuffer
 15389  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15390  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15391  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15392  000562  0102               	movlb	2	; () banked
 15393  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15394  000566  0F02               	addlw	2
 15395  000568  0100               	movlb	0	; () banked
 15396  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15397  00056C  ECE5  F02D         	call	_putUSBUSART	;wreg free
 15398  000570                     l2399:
 15399                           
 15400                           ;term.c: 666: }
 15401                           ;term.c: 668: TermState = Term_GetData;
 15402  000570  0E00               	movlw	0
 15403  000572  0102               	movlb	2	; () banked
 15404  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15405                           
 15406                           ; BSR set to: 2
 15407                           ;term.c: 669: }
 15408                           ;term.c: 670: }
 15409  000576  0012               	return	
 15410  000578                     l2392:
 15411                           
 15412                           ;term.c: 671: else
 15413                           ;term.c: 672: {
 15414                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15415                           
 15416                           ; BSR set to: 2
 15417  000578  0E9A               	movlw	low Terminal@SwTimer
 15418  00057A  0100               	movlb	0	; () banked
 15419  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15420  00057E  0E04               	movlw	high Terminal@SwTimer
 15421  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15422  000582  0EB8               	movlw	184
 15423  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15424  000586  0E0B               	movlw	11
 15425  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15426  00058A  0E00               	movlw	0
 15427  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15428  00058E  0E00               	movlw	0
 15429  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15430  000592  EC17  F025         	call	_OsTmr_Wait	;wreg free
 15431  000596  06E8               	decf	wreg,f,c
 15432  000598  A4D8               	btfss	status,2,c
 15433  00059A  0012               	return	
 15434                           
 15435                           ;term.c: 675: {
 15436                           ;term.c: 677: if((cdc_trf_state == 0))
 15437  00059C  0100               	movlb	0	; () banked
 15438  00059E  51C1               	movf	_cdc_trf_state& (0+255),w,b
 15439  0005A0  A4D8               	btfss	status,2,c
 15440  0005A2  0012               	return	
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;term.c: 678: {
 15444                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15445  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15446  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15447  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15448  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15449  0005AC  0E8C               	movlw	low STR_21
 15450  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15451  0005B0  0EFE               	movlw	high STR_21
 15452  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15453  0005B4  EC80  F02C         	call	_strcpy	;wreg free
 15454                           
 15455                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15456  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15457  0005BA  0100               	movlb	0	; () banked
 15458  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15459  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15460  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15461  0005C2  0E29               	movlw	41
 15462  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15463  0005C6  ECE5  F02D         	call	_putUSBUSART	;wreg free
 15464                           
 15465                           ;term.c: 682: TermState = Term_GetData;
 15466  0005CA  0E00               	movlw	0
 15467  0005CC  0102               	movlb	2	; () banked
 15468  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15469                           
 15470                           ; BSR set to: 2
 15471                           ;term.c: 693: }
 15472                           
 15473                           ; BSR set to: 2
 15474                           ;term.c: 692: break;
 15475                           
 15476                           ;term.c: 691: default:
 15477                           
 15478                           ; BSR set to: 2
 15479                           ;term.c: 689: break;
 15480                           
 15481                           ;term.c: 688: case Term_ReadSlvUartData:
 15482                           
 15483                           ; BSR set to: 2
 15484                           ;term.c: 683: }
 15485                           ;term.c: 684: }
 15486                           ;term.c: 685: }
 15487                           ;term.c: 686: break;
 15488                           
 15489                           ; BSR set to: 2
 15490                           
 15491                           ; BSR set to: 2
 15492  0005D0  0012               	return	
 15493  0005D2                     l2353:
 15494                           
 15495                           ; BSR set to: 2
 15496  0005D2  0102               	movlb	2	; () banked
 15497  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15498                           
 15499                           ; Switch size 1, requested type "space"
 15500                           ; Number of cases is 4, Range of values is 0 to 3
 15501                           ; switch strategies available:
 15502                           ; Name         Instructions Cycles
 15503                           ; simple_byte           13     7 (average)
 15504                           ;	Chosen strategy is simple_byte
 15505  0005D6  0A00               	xorlw	0	; case 0
 15506  0005D8  B4D8               	btfsc	status,2,c
 15507  0005DA  D583               	goto	l2354
 15508  0005DC  0A01               	xorlw	1	; case 1
 15509  0005DE  B4D8               	btfsc	status,2,c
 15510  0005E0  D71E               	goto	l2389
 15511  0005E2  0A03               	xorlw	3	; case 2
 15512  0005E4  B4D8               	btfsc	status,2,c
 15513  0005E6  D73B               	goto	l2391
 15514  0005E8  0A01               	xorlw	1	; case 3
 15515  0005EA  0012               	return	
 15516  0005EC                     __end_of_Terminal:
 15517                           	opt stack 0
 15518                           tosu	equ	0xFFF
 15519                           tosh	equ	0xFFE
 15520                           tosl	equ	0xFFD
 15521                           pclath	equ	0xFFA
 15522                           tblptru	equ	0xFF8
 15523                           tblptrh	equ	0xFF7
 15524                           tblptrl	equ	0xFF6
 15525                           tablat	equ	0xFF5
 15526                           prodh	equ	0xFF4
 15527                           prodl	equ	0xFF3
 15528                           intcon	equ	0xFF2
 15529                           intcon2	equ	0xFF1
 15530                           intcon3	equ	0xFF0
 15531                           indf0	equ	0xFEF
 15532                           postinc0	equ	0xFEE
 15533                           plusw0	equ	0xFEB
 15534                           fsr0h	equ	0xFEA
 15535                           fsr0l	equ	0xFE9
 15536                           wreg	equ	0xFE8
 15537                           indf1	equ	0xFE7
 15538                           postinc1	equ	0xFE6
 15539                           postdec1	equ	0xFE5
 15540                           plusw1	equ	0xFE3
 15541                           fsr1h	equ	0xFE2
 15542                           fsr1l	equ	0xFE1
 15543                           indf2	equ	0xFDF
 15544                           postinc2	equ	0xFDE
 15545                           postdec2	equ	0xFDD
 15546                           plusw2	equ	0xFDB
 15547                           fsr2h	equ	0xFDA
 15548                           fsr2l	equ	0xFD9
 15549                           status	equ	0xFD8
 15550                           
 15551 ;; *************** function _xtoi *****************
 15552 ;; Defined at:
 15553 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15556 ;;		 -> Terminal@Addr(4), 
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;  val             2   40[BANK0 ] unsigned int 
 15559 ;;  c               1   42[BANK0 ] unsigned char 
 15560 ;;  sign            1   39[BANK0 ] unsigned char 
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  2   35[BANK0 ] unsigned int 
 15563 ;; Registers used:
 15564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15570 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15571 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15573 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15574 ;;Total ram usage:        8 bytes
 15575 ;; Hardware stack levels used:    1
 15576 ;; Hardware stack levels required when called:   13
 15577 ;; This function calls:
 15578 ;;		_isdigit
 15579 ;;		_isspace
 15580 ;;		_isupper
 15581 ;;		_isxdigit
 15582 ;;		_tolower
 15583 ;; This function is called by:
 15584 ;;		_Terminal
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           	psect	text61
 15589  003212                     __ptext61:
 15590                           	opt stack 0
 15591  003212                     _xtoi:
 15592                           	opt stack 12
 15593                           
 15594                           ;incstack = 0
 15595  003212  0E00               	movlw	0
 15596  003214  0100               	movlb	0	; () banked
 15597  003216  6F87               	movwf	xtoi@sign& (0+255),b
 15598  003218  0E00               	movlw	0
 15599  00321A  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15600  00321C  0E00               	movlw	0
 15601  00321E  6F88               	movwf	xtoi@val& (0+255),b
 15602  003220  D003               	goto	l3239
 15603  003222                     
 15604                           ; BSR set to: 0
 15605  003222  0100               	movlb	0	; () banked
 15606  003224  4B83               	infsnz	xtoi@s& (0+255),f,b
 15607  003226  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15608  003228                     l3239:
 15609                           
 15610                           ; BSR set to: 0
 15611                           
 15612                           ; BSR set to: 0
 15613  003228  C083  FFD9         	movff	xtoi@s,fsr2l
 15614  00322C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15615  003230  50DF               	movf	indf2,w,c
 15616  003232  EC52  F02D         	call	_isspace
 15617  003236  B0D8               	btfsc	status,0,c
 15618  003238  D7F4               	goto	l3240
 15619  00323A  C083  FFD9         	movff	xtoi@s,fsr2l
 15620  00323E  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15621  003242  0E2D               	movlw	45
 15622  003244  18DE               	xorwf	postinc2,w,c
 15623  003246  A4D8               	btfss	status,2,c
 15624  003248  D003               	goto	l3242
 15625  00324A  0100               	movlb	0	; () banked
 15626  00324C  2B87               	incf	xtoi@sign& (0+255),f,b
 15627  00324E  D009               	goto	L15
 15628  003250                     l3242:
 15629                           
 15630                           ; BSR set to: 0
 15631  003250  C083  FFD9         	movff	xtoi@s,fsr2l
 15632  003254  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15633  003258  0E2B               	movlw	43
 15634  00325A  18DE               	xorwf	postinc2,w,c
 15635  00325C  A4D8               	btfss	status,2,c
 15636  00325E  D028               	goto	l3245
 15637  003260  0100               	movlb	0	; () banked
 15638  003262                     L15:
 15639  003262  4B83               	infsnz	xtoi@s& (0+255),f,b
 15640  003264  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15641                           
 15642                           ; BSR set to: 0
 15643                           
 15644                           ; BSR set to: 0
 15645  003266  D024               	goto	l3245
 15646  003268                     
 15647                           ; BSR set to: 0
 15648  003268  0100               	movlb	0	; () banked
 15649  00326A  518A               	movf	xtoi@c& (0+255),w,b
 15650  00326C  ECD4  F02D         	call	_isupper
 15651  003270  A0D8               	btfss	status,0,c
 15652  003272  D006               	goto	l3247
 15653  003274  0100               	movlb	0	; () banked
 15654  003276  518A               	movf	xtoi@c& (0+255),w,b
 15655  003278  EC8C  F02E         	call	_tolower
 15656  00327C  0100               	movlb	0	; () banked
 15657  00327E  6F8A               	movwf	xtoi@c& (0+255),b
 15658  003280                     l3247:
 15659  003280  0100               	movlb	0	; () banked
 15660  003282  518A               	movf	xtoi@c& (0+255),w,b
 15661  003284  ECF6  F02D         	call	_isdigit
 15662  003288  A0D8               	btfss	status,0,c
 15663  00328A  D002               	goto	l3248
 15664  00328C  0E30               	movlw	48
 15665  00328E  D001               	goto	L14
 15666  003290                     l3248:
 15667                           
 15668                           ; BSR set to: 0
 15669  003290  0E57               	movlw	87
 15670  003292                     L14:
 15671  003292  0100               	movlb	0	; () banked
 15672  003294  5F8A               	subwf	xtoi@c& (0+255),f,b
 15673                           
 15674                           ; BSR set to: 0
 15675  003296  3B88               	swapf	xtoi@val& (0+255),f,b
 15676  003298  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15677  00329A  0EF0               	movlw	240
 15678  00329C  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15679  00329E  5188               	movf	xtoi@val& (0+255),w,b
 15680  0032A0  0B0F               	andlw	15
 15681  0032A2  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15682  0032A4  0EF0               	movlw	240
 15683  0032A6  1788               	andwf	xtoi@val& (0+255),f,b
 15684  0032A8  518A               	movf	xtoi@c& (0+255),w,b
 15685  0032AA  2788               	addwf	xtoi@val& (0+255),f,b
 15686  0032AC  0E00               	movlw	0
 15687  0032AE  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15688  0032B0                     l3245:
 15689                           
 15690                           ; BSR set to: 0
 15691  0032B0  C083  FFD9         	movff	xtoi@s,fsr2l
 15692  0032B4  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15693  0032B8  0100               	movlb	0	; () banked
 15694  0032BA  4B83               	infsnz	xtoi@s& (0+255),f,b
 15695  0032BC  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15696  0032BE  50DF               	movf	indf2,w,c
 15697  0032C0  6F8A               	movwf	xtoi@c& (0+255),b
 15698  0032C2  518A               	movf	xtoi@c& (0+255),w,b
 15699  0032C4  ECDA  F02B         	call	_isxdigit
 15700  0032C8  B0D8               	btfsc	status,0,c
 15701  0032CA  D7CE               	goto	l3246
 15702  0032CC  0100               	movlb	0	; () banked
 15703  0032CE  5187               	movf	xtoi@sign& (0+255),w,b
 15704  0032D0  B4D8               	btfsc	status,2,c
 15705  0032D2  D00D               	goto	l3251
 15706                           
 15707                           ; BSR set to: 0
 15708  0032D4  C088  F085         	movff	xtoi@val,??_xtoi
 15709  0032D8  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 15710  0032DC  1F85               	comf	??_xtoi& (0+255),f,b
 15711  0032DE  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 15712  0032E0  4B85               	infsnz	??_xtoi& (0+255),f,b
 15713  0032E2  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 15714  0032E4  C085  F083         	movff	??_xtoi,?_xtoi
 15715  0032E8  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 15716  0032EC  0012               	return	
 15717  0032EE                     l3251:
 15718                           
 15719                           ; BSR set to: 0
 15720  0032EE  C088  F083         	movff	xtoi@val,?_xtoi
 15721  0032F2  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 15722                           
 15723                           ; BSR set to: 0
 15724  0032F6  0012               	return		;funcret
 15725  0032F8                     __end_of_xtoi:
 15726                           	opt stack 0
 15727                           tosu	equ	0xFFF
 15728                           tosh	equ	0xFFE
 15729                           tosl	equ	0xFFD
 15730                           pclath	equ	0xFFA
 15731                           tblptru	equ	0xFF8
 15732                           tblptrh	equ	0xFF7
 15733                           tblptrl	equ	0xFF6
 15734                           tablat	equ	0xFF5
 15735                           prodh	equ	0xFF4
 15736                           prodl	equ	0xFF3
 15737                           intcon	equ	0xFF2
 15738                           intcon2	equ	0xFF1
 15739                           intcon3	equ	0xFF0
 15740                           indf0	equ	0xFEF
 15741                           postinc0	equ	0xFEE
 15742                           plusw0	equ	0xFEB
 15743                           fsr0h	equ	0xFEA
 15744                           fsr0l	equ	0xFE9
 15745                           wreg	equ	0xFE8
 15746                           indf1	equ	0xFE7
 15747                           postinc1	equ	0xFE6
 15748                           postdec1	equ	0xFE5
 15749                           plusw1	equ	0xFE3
 15750                           fsr1h	equ	0xFE2
 15751                           fsr1l	equ	0xFE1
 15752                           indf2	equ	0xFDF
 15753                           postinc2	equ	0xFDE
 15754                           postdec2	equ	0xFDD
 15755                           plusw2	equ	0xFDB
 15756                           fsr2h	equ	0xFDA
 15757                           fsr2l	equ	0xFD9
 15758                           status	equ	0xFD8
 15759                           
 15760 ;; *************** function _tolower *****************
 15761 ;; Defined at:
 15762 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 15763 ;; Parameters:    Size  Location     Type
 15764 ;;  c               1    wreg     unsigned char 
 15765 ;; Auto vars:     Size  Location     Type
 15766 ;;  c               1   29[BANK0 ] unsigned char 
 15767 ;; Return value:  Size  Location     Type
 15768 ;;                  1    wreg      unsigned char 
 15769 ;; Registers used:
 15770 ;;		wreg, status,2, status,0
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15777 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15779 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15780 ;;Total ram usage:        1 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:   11
 15783 ;; This function calls:
 15784 ;;		Nothing
 15785 ;; This function is called by:
 15786 ;;		_xtoi
 15787 ;; This function uses a non-reentrant model
 15788 ;;
 15789                           
 15790                           	psect	text62
 15791  005D18                     __ptext62:
 15792                           	opt stack 0
 15793  005D18                     _tolower:
 15794                           	opt stack 13
 15795                           
 15796                           ; BSR set to: 0
 15797                           ;incstack = 0
 15798                           ;tolower@c stored from wreg
 15799  005D18  0100               	movlb	0	; () banked
 15800  005D1A  6F7D               	movwf	tolower@c& (0+255),b
 15801  005D1C  0E5B               	movlw	91
 15802  005D1E  0100               	movlb	0	; () banked
 15803  005D20  617D               	cpfslt	tolower@c& (0+255),b
 15804  005D22  D004               	goto	l3298
 15805                           
 15806                           ; BSR set to: 0
 15807  005D24  0E40               	movlw	64
 15808  005D26  657D               	cpfsgt	tolower@c& (0+255),b
 15809  005D28  D001               	goto	l3298
 15810                           
 15811                           ; BSR set to: 0
 15812  005D2A  8B7D               	bsf	tolower@c& (0+255),5,b
 15813  005D2C                     l3298:
 15814                           
 15815                           ; BSR set to: 0
 15816                           
 15817                           ; BSR set to: 0
 15818  005D2C  517D               	movf	tolower@c& (0+255),w,b
 15819  005D2E  0012               	return	
 15820  005D30                     __end_of_tolower:
 15821                           	opt stack 0
 15822                           tosu	equ	0xFFF
 15823                           tosh	equ	0xFFE
 15824                           tosl	equ	0xFFD
 15825                           pclath	equ	0xFFA
 15826                           tblptru	equ	0xFF8
 15827                           tblptrh	equ	0xFF7
 15828                           tblptrl	equ	0xFF6
 15829                           tablat	equ	0xFF5
 15830                           prodh	equ	0xFF4
 15831                           prodl	equ	0xFF3
 15832                           intcon	equ	0xFF2
 15833                           intcon2	equ	0xFF1
 15834                           intcon3	equ	0xFF0
 15835                           indf0	equ	0xFEF
 15836                           postinc0	equ	0xFEE
 15837                           plusw0	equ	0xFEB
 15838                           fsr0h	equ	0xFEA
 15839                           fsr0l	equ	0xFE9
 15840                           wreg	equ	0xFE8
 15841                           indf1	equ	0xFE7
 15842                           postinc1	equ	0xFE6
 15843                           postdec1	equ	0xFE5
 15844                           plusw1	equ	0xFE3
 15845                           fsr1h	equ	0xFE2
 15846                           fsr1l	equ	0xFE1
 15847                           indf2	equ	0xFDF
 15848                           postinc2	equ	0xFDE
 15849                           postdec2	equ	0xFDD
 15850                           plusw2	equ	0xFDB
 15851                           fsr2h	equ	0xFDA
 15852                           fsr2l	equ	0xFD9
 15853                           status	equ	0xFD8
 15854                           
 15855 ;; *************** function _isxdigit *****************
 15856 ;; Defined at:
 15857 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 15858 ;; Parameters:    Size  Location     Type
 15859 ;;  c               1    wreg     unsigned char 
 15860 ;; Auto vars:     Size  Location     Type
 15861 ;;  c               1   34[BANK0 ] unsigned char 
 15862 ;; Return value:  Size  Location     Type
 15863 ;;		None               void
 15864 ;; Registers used:
 15865 ;;		wreg, status,2, status,0, cstack
 15866 ;; Tracked objects:
 15867 ;;		On entry : 0/0
 15868 ;;		On exit  : 0/0
 15869 ;;		Unchanged: 0/0
 15870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15872 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15873 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15874 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15875 ;;Total ram usage:        3 bytes
 15876 ;; Hardware stack levels used:    1
 15877 ;; Hardware stack levels required when called:   12
 15878 ;; This function calls:
 15879 ;;		_isdigit
 15880 ;; This function is called by:
 15881 ;;		_xtoi
 15882 ;; This function uses a non-reentrant model
 15883 ;;
 15884                           
 15885                           	psect	text63
 15886  0057B4                     __ptext63:
 15887                           	opt stack 0
 15888  0057B4                     _isxdigit:
 15889                           	opt stack 12
 15890                           
 15891                           ; BSR set to: 0
 15892                           ;incstack = 0
 15893                           ;isxdigit@c stored from wreg
 15894  0057B4  0100               	movlb	0	; () banked
 15895  0057B6  6F82               	movwf	isxdigit@c& (0+255),b
 15896  0057B8  0E01               	movlw	1
 15897  0057BA  0100               	movlb	0	; () banked
 15898  0057BC  6F81               	movwf	_isxdigit$6400& (0+255),b
 15899                           
 15900                           ; BSR set to: 0
 15901  0057BE  0E67               	movlw	103
 15902  0057C0  6182               	cpfslt	isxdigit@c& (0+255),b
 15903  0057C2  D003               	goto	u10540
 15904                           
 15905                           ; BSR set to: 0
 15906  0057C4  0E61               	movlw	97
 15907  0057C6  6182               	cpfslt	isxdigit@c& (0+255),b
 15908  0057C8  D00E               	goto	l3294
 15909  0057CA                     u10540:
 15910                           
 15911                           ; BSR set to: 0
 15912                           
 15913                           ; BSR set to: 0
 15914  0057CA  0E47               	movlw	71
 15915  0057CC  6182               	cpfslt	isxdigit@c& (0+255),b
 15916  0057CE  D003               	goto	u10560
 15917                           
 15918                           ; BSR set to: 0
 15919  0057D0  0E41               	movlw	65
 15920  0057D2  6182               	cpfslt	isxdigit@c& (0+255),b
 15921  0057D4  D008               	goto	l3294
 15922  0057D6                     u10560:
 15923                           
 15924                           ; BSR set to: 0
 15925                           
 15926                           ; BSR set to: 0
 15927  0057D6  5182               	movf	isxdigit@c& (0+255),w,b
 15928  0057D8  ECF6  F02D         	call	_isdigit
 15929  0057DC  B0D8               	btfsc	status,0,c
 15930  0057DE  D003               	goto	l3294
 15931  0057E0  0E00               	movlw	0
 15932  0057E2  0100               	movlb	0	; () banked
 15933  0057E4  6F81               	movwf	_isxdigit$6400& (0+255),b
 15934  0057E6                     l3294:
 15935                           
 15936                           ; BSR set to: 0
 15937  0057E6  C081  F080         	movff	_isxdigit$6400,??_isxdigit
 15938  0057EA  0100               	movlb	0	; () banked
 15939  0057EC  3180               	rrcf	??_isxdigit& (0+255),w,b
 15940  0057EE  0012               	return	
 15941  0057F0                     __end_of_isxdigit:
 15942                           	opt stack 0
 15943                           tosu	equ	0xFFF
 15944                           tosh	equ	0xFFE
 15945                           tosl	equ	0xFFD
 15946                           pclath	equ	0xFFA
 15947                           tblptru	equ	0xFF8
 15948                           tblptrh	equ	0xFF7
 15949                           tblptrl	equ	0xFF6
 15950                           tablat	equ	0xFF5
 15951                           prodh	equ	0xFF4
 15952                           prodl	equ	0xFF3
 15953                           intcon	equ	0xFF2
 15954                           intcon2	equ	0xFF1
 15955                           intcon3	equ	0xFF0
 15956                           indf0	equ	0xFEF
 15957                           postinc0	equ	0xFEE
 15958                           plusw0	equ	0xFEB
 15959                           fsr0h	equ	0xFEA
 15960                           fsr0l	equ	0xFE9
 15961                           wreg	equ	0xFE8
 15962                           indf1	equ	0xFE7
 15963                           postinc1	equ	0xFE6
 15964                           postdec1	equ	0xFE5
 15965                           plusw1	equ	0xFE3
 15966                           fsr1h	equ	0xFE2
 15967                           fsr1l	equ	0xFE1
 15968                           indf2	equ	0xFDF
 15969                           postinc2	equ	0xFDE
 15970                           postdec2	equ	0xFDD
 15971                           plusw2	equ	0xFDB
 15972                           fsr2h	equ	0xFDA
 15973                           fsr2l	equ	0xFD9
 15974                           status	equ	0xFD8
 15975                           
 15976 ;; *************** function _strtol *****************
 15977 ;; Defined at:
 15978 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 15979 ;; Parameters:    Size  Location     Type
 15980 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 15981 ;;		 -> Terminal@Payload(80), 
 15982 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 15983 ;;		 -> NULL(0), 
 15984 ;;  base            2   45[BANK0 ] int 
 15985 ;; Auto vars:     Size  Location     Type
 15986 ;;  a               4   52[BANK0 ] long 
 15987 ;;  c               1   56[BANK0 ] unsigned char 
 15988 ;;  sign            1   51[BANK0 ] unsigned char 
 15989 ;; Return value:  Size  Location     Type
 15990 ;;                  4   41[BANK0 ] long 
 15991 ;; Registers used:
 15992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15993 ;; Tracked objects:
 15994 ;;		On entry : 0/0
 15995 ;;		On exit  : 0/0
 15996 ;;		Unchanged: 0/0
 15997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15998 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15999 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16000 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16001 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16002 ;;Total ram usage:       16 bytes
 16003 ;; Hardware stack levels used:    1
 16004 ;; Hardware stack levels required when called:   13
 16005 ;; This function calls:
 16006 ;;		___lmul
 16007 ;;		_isalpha
 16008 ;;		_isdigit
 16009 ;;		_isspace
 16010 ;;		_toupper
 16011 ;; This function is called by:
 16012 ;;		_Terminal
 16013 ;; This function uses a non-reentrant model
 16014 ;;
 16015                           
 16016                           	psect	text64
 16017  00181C                     __ptext64:
 16018                           	opt stack 0
 16019  00181C                     _strtol:
 16020                           	opt stack 12
 16021                           
 16022                           ; BSR set to: 0
 16023                           ;incstack = 0
 16024  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16025  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16026  001824  50DF               	movf	indf2,w,c
 16027  001826  0100               	movlb	0	; () banked
 16028  001828  6F98               	movwf	strtol@c& (0+255),b
 16029                           
 16030                           ; BSR set to: 0
 16031  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16032  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16033                           
 16034                           ; BSR set to: 0
 16035  00182E  5198               	movf	strtol@c& (0+255),w,b
 16036  001830  EC52  F02D         	call	_isspace
 16037  001834  B0D8               	btfsc	status,0,c
 16038  001836  D7F2               	goto	_strtol
 16039  001838  0E00               	movlw	0
 16040  00183A  0100               	movlb	0	; () banked
 16041  00183C  6F94               	movwf	strtol@a& (0+255),b
 16042  00183E  0E00               	movlw	0
 16043  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16044  001842  0E00               	movlw	0
 16045  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16046  001846  0E00               	movlw	0
 16047  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16048  00184A  0E00               	movlw	0
 16049  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16050                           
 16051                           ; BSR set to: 0
 16052  00184E  0E2D               	movlw	45
 16053  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16054  001852  A4D8               	btfss	status,2,c
 16055  001854  D003               	goto	l3201
 16056                           
 16057                           ; BSR set to: 0
 16058  001856  0E01               	movlw	1
 16059  001858  6F93               	movwf	strtol@sign& (0+255),b
 16060  00185A  D004               	goto	u11000
 16061  00185C                     l3201:
 16062                           
 16063                           ; BSR set to: 0
 16064                           
 16065                           ; BSR set to: 0
 16066  00185C  0E2B               	movlw	43
 16067  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16068  001860  A4D8               	btfss	status,2,c
 16069  001862  D008               	goto	l3203
 16070  001864                     u11000:
 16071                           
 16072                           ; BSR set to: 0
 16073  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16074  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16075  00186C  50DF               	movf	indf2,w,c
 16076  00186E  6F98               	movwf	strtol@c& (0+255),b
 16077                           
 16078                           ; BSR set to: 0
 16079  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16080  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16081  001874                     l3203:
 16082                           
 16083                           ; BSR set to: 0
 16084                           
 16085                           ; BSR set to: 0
 16086                           
 16087                           ; BSR set to: 0
 16088  001874  0E30               	movlw	48
 16089  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16090  001878  A4D8               	btfss	status,2,c
 16091  00187A  D02E               	goto	l3211
 16092                           
 16093                           ; BSR set to: 0
 16094  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16095  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16096  001884  50DF               	movf	indf2,w,c
 16097  001886  6F98               	movwf	strtol@c& (0+255),b
 16098                           
 16099                           ; BSR set to: 0
 16100  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16101  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16102                           
 16103                           ; BSR set to: 0
 16104  00188C  518D               	movf	strtol@base& (0+255),w,b
 16105  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16106  001890  B4D8               	btfsc	status,2,c
 16107  001892  D005               	goto	u11030
 16108                           
 16109                           ; BSR set to: 0
 16110  001894  0E10               	movlw	16
 16111  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16112  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16113  00189A  A4D8               	btfss	status,2,c
 16114  00189C  D015               	goto	l3205
 16115  00189E                     u11030:
 16116                           
 16117                           ; BSR set to: 0
 16118                           
 16119                           ; BSR set to: 0
 16120  00189E  0E78               	movlw	120
 16121  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16122  0018A2  B4D8               	btfsc	status,2,c
 16123  0018A4  D004               	goto	u11050
 16124                           
 16125                           ; BSR set to: 0
 16126  0018A6  0E58               	movlw	88
 16127  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16128  0018AA  A4D8               	btfss	status,2,c
 16129  0018AC  D00D               	goto	l3205
 16130  0018AE                     u11050:
 16131                           
 16132                           ; BSR set to: 0
 16133                           
 16134                           ; BSR set to: 0
 16135  0018AE  0E00               	movlw	0
 16136  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16137  0018B2  0E10               	movlw	16
 16138  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16139                           
 16140                           ; BSR set to: 0
 16141  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16142  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16143  0018BE  50DF               	movf	indf2,w,c
 16144  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16145                           
 16146                           ; BSR set to: 0
 16147  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16148  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16149  0018C6  D008               	goto	l3211
 16150  0018C8                     l3205:
 16151                           
 16152                           ; BSR set to: 0
 16153                           
 16154                           ; BSR set to: 0
 16155  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16156  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16157  0018CC  A4D8               	btfss	status,2,c
 16158  0018CE  D004               	goto	l3211
 16159                           
 16160                           ; BSR set to: 0
 16161  0018D0  0E00               	movlw	0
 16162  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16163  0018D4  0E08               	movlw	8
 16164  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16165  0018D8                     l3211:
 16166                           
 16167                           ; BSR set to: 0
 16168                           
 16169                           ; BSR set to: 0
 16170                           
 16171                           ; BSR set to: 0
 16172                           
 16173                           ; BSR set to: 0
 16174  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16175  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16176  0018DC  A4D8               	btfss	status,2,c
 16177  0018DE  D004               	goto	l3212
 16178                           
 16179                           ; BSR set to: 0
 16180  0018E0  0E00               	movlw	0
 16181  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16182  0018E4  0E0A               	movlw	10
 16183  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16184  0018E8                     l3212:
 16185                           
 16186                           ; BSR set to: 0
 16187                           
 16188                           ; BSR set to: 0
 16189                           
 16190                           ; BSR set to: 0
 16191  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16192  0018EA  ECC9  F02C         	call	_isalpha
 16193  0018EE  A0D8               	btfss	status,0,c
 16194  0018F0  D008               	goto	l3214
 16195  0018F2  0100               	movlb	0	; () banked
 16196  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16197  0018F6  EC98  F02E         	call	_toupper
 16198  0018FA  0FC9               	addlw	201
 16199  0018FC  0100               	movlb	0	; () banked
 16200  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16201  001900  D009               	goto	l3217
 16202  001902                     l3214:
 16203                           
 16204                           ; BSR set to: 0
 16205  001902  0100               	movlb	0	; () banked
 16206  001904  5198               	movf	strtol@c& (0+255),w,b
 16207  001906  ECF6  F02D         	call	_isdigit
 16208  00190A  A0D8               	btfss	status,0,c
 16209  00190C  D039               	goto	l3218
 16210  00190E  0E30               	movlw	48
 16211  001910  0100               	movlb	0	; () banked
 16212  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16213  001914                     l3217:
 16214                           
 16215                           ; BSR set to: 0
 16216                           
 16217                           ; BSR set to: 0
 16218                           
 16219                           ; BSR set to: 0
 16220  001914  5198               	movf	strtol@c& (0+255),w,b
 16221  001916  6F8F               	movwf	??_strtol& (0+255),b
 16222  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16223  00191A  518D               	movf	strtol@base& (0+255),w,b
 16224  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16225  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16226  001920  0A80               	xorlw	128
 16227  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16228  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16229  001926  0A80               	xorlw	128
 16230  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16231  00192A  B0D8               	btfsc	status,0,c
 16232  00192C  D029               	goto	l3218
 16233                           
 16234                           ; BSR set to: 0
 16235                           
 16236                           ; BSR set to: 0
 16237                           
 16238                           ; BSR set to: 0
 16239  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16240  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16241  001936  0E00               	movlw	0
 16242  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16243  00193A  0EFF               	movlw	-1
 16244  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16245  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16246  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16247  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16248  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16249  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16250  001950  ECEA  F027         	call	___lmul	;wreg free
 16251  001954  0100               	movlb	0	; () banked
 16252  001956  5198               	movf	strtol@c& (0+255),w,b
 16253  001958  257D               	addwf	?___lmul& (0+255),w,b
 16254  00195A  6F94               	movwf	strtol@a& (0+255),b
 16255  00195C  0E00               	movlw	0
 16256  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16257  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16258  001962  0E00               	movlw	0
 16259  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16260  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16261  001968  0E00               	movlw	0
 16262  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16263  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16264                           
 16265                           ; BSR set to: 0
 16266  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16267  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16268  001976  50DF               	movf	indf2,w,c
 16269  001978  6F98               	movwf	strtol@c& (0+255),b
 16270                           
 16271                           ; BSR set to: 0
 16272  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16273  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16274  00197E  D7B4               	goto	l3212
 16275  001980                     l3218:
 16276                           
 16277                           ; BSR set to: 0
 16278  001980  0100               	movlb	0	; () banked
 16279  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16280  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16281  001986  B4D8               	btfsc	status,2,c
 16282  001988  D00E               	goto	l3220
 16283                           
 16284                           ; BSR set to: 0
 16285  00198A  0EFF               	movlw	255
 16286  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16287  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16288  001990  0EFF               	movlw	255
 16289  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16290  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16291  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16292  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16293  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16294  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16295  0019A6                     l3220:
 16296                           
 16297                           ; BSR set to: 0
 16298                           
 16299                           ; BSR set to: 0
 16300  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16301  0019A8  B4D8               	btfsc	status,2,c
 16302  0019AA  D01A               	goto	l3221
 16303                           
 16304                           ; BSR set to: 0
 16305  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16306  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16307  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16308  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16309  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16310  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16311  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16312  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16313  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16314  0019C6  0E00               	movlw	0
 16315  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16316  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16317  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16318  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16319  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16320  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16321  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16322                           
 16323                           ; BSR set to: 0
 16324  0019DE  0012               	return	
 16325  0019E0                     l3221:
 16326                           
 16327                           ; BSR set to: 0
 16328  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16329  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16330  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16331  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16332                           
 16333                           ; BSR set to: 0
 16334  0019F0  0012               	return		;funcret
 16335  0019F2                     __end_of_strtol:
 16336                           	opt stack 0
 16337                           tosu	equ	0xFFF
 16338                           tosh	equ	0xFFE
 16339                           tosl	equ	0xFFD
 16340                           pclath	equ	0xFFA
 16341                           tblptru	equ	0xFF8
 16342                           tblptrh	equ	0xFF7
 16343                           tblptrl	equ	0xFF6
 16344                           tablat	equ	0xFF5
 16345                           prodh	equ	0xFF4
 16346                           prodl	equ	0xFF3
 16347                           intcon	equ	0xFF2
 16348                           intcon2	equ	0xFF1
 16349                           intcon3	equ	0xFF0
 16350                           indf0	equ	0xFEF
 16351                           postinc0	equ	0xFEE
 16352                           plusw0	equ	0xFEB
 16353                           fsr0h	equ	0xFEA
 16354                           fsr0l	equ	0xFE9
 16355                           wreg	equ	0xFE8
 16356                           indf1	equ	0xFE7
 16357                           postinc1	equ	0xFE6
 16358                           postdec1	equ	0xFE5
 16359                           plusw1	equ	0xFE3
 16360                           fsr1h	equ	0xFE2
 16361                           fsr1l	equ	0xFE1
 16362                           indf2	equ	0xFDF
 16363                           postinc2	equ	0xFDE
 16364                           postdec2	equ	0xFDD
 16365                           plusw2	equ	0xFDB
 16366                           fsr2h	equ	0xFDA
 16367                           fsr2l	equ	0xFD9
 16368                           status	equ	0xFD8
 16369                           
 16370 ;; *************** function _toupper *****************
 16371 ;; Defined at:
 16372 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;  c               1    wreg     unsigned char 
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;  c               1   29[BANK0 ] unsigned char 
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      unsigned char 
 16379 ;; Registers used:
 16380 ;;		wreg, status,2, status,0
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16390 ;;Total ram usage:        1 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; Hardware stack levels required when called:   11
 16393 ;; This function calls:
 16394 ;;		Nothing
 16395 ;; This function is called by:
 16396 ;;		_strtol
 16397 ;; This function uses a non-reentrant model
 16398 ;;
 16399                           
 16400                           	psect	text65
 16401  005D30                     __ptext65:
 16402                           	opt stack 0
 16403  005D30                     _toupper:
 16404                           	opt stack 13
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;incstack = 0
 16408                           ;toupper@c stored from wreg
 16409  005D30  0100               	movlb	0	; () banked
 16410  005D32  6F7D               	movwf	toupper@c& (0+255),b
 16411  005D34  0E7B               	movlw	123
 16412  005D36  0100               	movlb	0	; () banked
 16413  005D38  617D               	cpfslt	toupper@c& (0+255),b
 16414  005D3A  D004               	goto	l3225
 16415                           
 16416                           ; BSR set to: 0
 16417  005D3C  0E60               	movlw	96
 16418  005D3E  657D               	cpfsgt	toupper@c& (0+255),b
 16419  005D40  D001               	goto	l3225
 16420                           
 16421                           ; BSR set to: 0
 16422  005D42  9B7D               	bcf	toupper@c& (0+255),5,b
 16423  005D44                     l3225:
 16424                           
 16425                           ; BSR set to: 0
 16426                           
 16427                           ; BSR set to: 0
 16428  005D44  517D               	movf	toupper@c& (0+255),w,b
 16429  005D46  0012               	return	
 16430  005D48                     __end_of_toupper:
 16431                           	opt stack 0
 16432                           tosu	equ	0xFFF
 16433                           tosh	equ	0xFFE
 16434                           tosl	equ	0xFFD
 16435                           pclath	equ	0xFFA
 16436                           tblptru	equ	0xFF8
 16437                           tblptrh	equ	0xFF7
 16438                           tblptrl	equ	0xFF6
 16439                           tablat	equ	0xFF5
 16440                           prodh	equ	0xFF4
 16441                           prodl	equ	0xFF3
 16442                           intcon	equ	0xFF2
 16443                           intcon2	equ	0xFF1
 16444                           intcon3	equ	0xFF0
 16445                           indf0	equ	0xFEF
 16446                           postinc0	equ	0xFEE
 16447                           plusw0	equ	0xFEB
 16448                           fsr0h	equ	0xFEA
 16449                           fsr0l	equ	0xFE9
 16450                           wreg	equ	0xFE8
 16451                           indf1	equ	0xFE7
 16452                           postinc1	equ	0xFE6
 16453                           postdec1	equ	0xFE5
 16454                           plusw1	equ	0xFE3
 16455                           fsr1h	equ	0xFE2
 16456                           fsr1l	equ	0xFE1
 16457                           indf2	equ	0xFDF
 16458                           postinc2	equ	0xFDE
 16459                           postdec2	equ	0xFDD
 16460                           plusw2	equ	0xFDB
 16461                           fsr2h	equ	0xFDA
 16462                           fsr2l	equ	0xFD9
 16463                           status	equ	0xFD8
 16464                           
 16465 ;; *************** function _isspace *****************
 16466 ;; Defined at:
 16467 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;  c               1    wreg     unsigned char 
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;  c               1   31[BANK0 ] unsigned char 
 16472 ;; Return value:  Size  Location     Type
 16473 ;;		None               void
 16474 ;; Registers used:
 16475 ;;		wreg, status,2, status,0
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16482 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16484 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16485 ;;Total ram usage:        3 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:   11
 16488 ;; This function calls:
 16489 ;;		Nothing
 16490 ;; This function is called by:
 16491 ;;		_strtol
 16492 ;;		_xtoi
 16493 ;; This function uses a non-reentrant model
 16494 ;;
 16495                           
 16496                           	psect	text66
 16497  005AA4                     __ptext66:
 16498                           	opt stack 0
 16499  005AA4                     _isspace:
 16500                           	opt stack 13
 16501                           
 16502                           ; BSR set to: 0
 16503                           ;incstack = 0
 16504                           ;isspace@c stored from wreg
 16505  005AA4  0100               	movlb	0	; () banked
 16506  005AA6  6F7F               	movwf	isspace@c& (0+255),b
 16507  005AA8  0E01               	movlw	1
 16508  005AAA  0100               	movlb	0	; () banked
 16509  005AAC  6F7E               	movwf	_isspace$6393& (0+255),b
 16510                           
 16511                           ; BSR set to: 0
 16512  005AAE  0E20               	movlw	32
 16513  005AB0  197F               	xorwf	isspace@c& (0+255),w,b
 16514  005AB2  B4D8               	btfsc	status,2,c
 16515  005AB4  D008               	goto	l3282
 16516                           
 16517                           ; BSR set to: 0
 16518  005AB6  0E0E               	movlw	14
 16519  005AB8  617F               	cpfslt	isspace@c& (0+255),b
 16520  005ABA  D003               	goto	u10450
 16521                           
 16522                           ; BSR set to: 0
 16523  005ABC  0E09               	movlw	9
 16524  005ABE  617F               	cpfslt	isspace@c& (0+255),b
 16525  005AC0  D002               	goto	l3282
 16526  005AC2                     u10450:
 16527                           
 16528                           ; BSR set to: 0
 16529                           
 16530                           ; BSR set to: 0
 16531  005AC2  0E00               	movlw	0
 16532  005AC4  6F7E               	movwf	_isspace$6393& (0+255),b
 16533  005AC6                     l3282:
 16534                           
 16535                           ; BSR set to: 0
 16536                           
 16537                           ; BSR set to: 0
 16538  005AC6  C07E  F07D         	movff	_isspace$6393,??_isspace
 16539  005ACA  317D               	rrcf	??_isspace& (0+255),w,b
 16540  005ACC  0012               	return	
 16541  005ACE                     __end_of_isspace:
 16542                           	opt stack 0
 16543                           tosu	equ	0xFFF
 16544                           tosh	equ	0xFFE
 16545                           tosl	equ	0xFFD
 16546                           pclath	equ	0xFFA
 16547                           tblptru	equ	0xFF8
 16548                           tblptrh	equ	0xFF7
 16549                           tblptrl	equ	0xFF6
 16550                           tablat	equ	0xFF5
 16551                           prodh	equ	0xFF4
 16552                           prodl	equ	0xFF3
 16553                           intcon	equ	0xFF2
 16554                           intcon2	equ	0xFF1
 16555                           intcon3	equ	0xFF0
 16556                           indf0	equ	0xFEF
 16557                           postinc0	equ	0xFEE
 16558                           plusw0	equ	0xFEB
 16559                           fsr0h	equ	0xFEA
 16560                           fsr0l	equ	0xFE9
 16561                           wreg	equ	0xFE8
 16562                           indf1	equ	0xFE7
 16563                           postinc1	equ	0xFE6
 16564                           postdec1	equ	0xFE5
 16565                           plusw1	equ	0xFE3
 16566                           fsr1h	equ	0xFE2
 16567                           fsr1l	equ	0xFE1
 16568                           indf2	equ	0xFDF
 16569                           postinc2	equ	0xFDE
 16570                           postdec2	equ	0xFDD
 16571                           plusw2	equ	0xFDB
 16572                           fsr2h	equ	0xFDA
 16573                           fsr2l	equ	0xFD9
 16574                           status	equ	0xFD8
 16575                           
 16576 ;; *************** function _isalpha *****************
 16577 ;; Defined at:
 16578 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16579 ;; Parameters:    Size  Location     Type
 16580 ;;  c               1    wreg     unsigned char 
 16581 ;; Auto vars:     Size  Location     Type
 16582 ;;  c               1   34[BANK0 ] unsigned char 
 16583 ;; Return value:  Size  Location     Type
 16584 ;;		None               void
 16585 ;; Registers used:
 16586 ;;		wreg, status,2, status,0, cstack
 16587 ;; Tracked objects:
 16588 ;;		On entry : 0/0
 16589 ;;		On exit  : 0/0
 16590 ;;		Unchanged: 0/0
 16591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16595 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16596 ;;Total ram usage:        3 bytes
 16597 ;; Hardware stack levels used:    1
 16598 ;; Hardware stack levels required when called:   12
 16599 ;; This function calls:
 16600 ;;		_isupper
 16601 ;; This function is called by:
 16602 ;;		_strtol
 16603 ;; This function uses a non-reentrant model
 16604 ;;
 16605                           
 16606                           	psect	text67
 16607  005992                     __ptext67:
 16608                           	opt stack 0
 16609  005992                     _isalpha:
 16610                           	opt stack 12
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;incstack = 0
 16614                           ;isalpha@c stored from wreg
 16615  005992  0100               	movlb	0	; () banked
 16616  005994  6F82               	movwf	isalpha@c& (0+255),b
 16617  005996  0E01               	movlw	1
 16618  005998  0100               	movlb	0	; () banked
 16619  00599A  6F81               	movwf	_isalpha$6390& (0+255),b
 16620                           
 16621                           ; BSR set to: 0
 16622  00599C  0E7B               	movlw	123
 16623  00599E  6182               	cpfslt	isalpha@c& (0+255),b
 16624  0059A0  D003               	goto	u10470
 16625                           
 16626                           ; BSR set to: 0
 16627  0059A2  0E61               	movlw	97
 16628  0059A4  6182               	cpfslt	isalpha@c& (0+255),b
 16629  0059A6  D008               	goto	l3277
 16630  0059A8                     u10470:
 16631                           
 16632                           ; BSR set to: 0
 16633                           
 16634                           ; BSR set to: 0
 16635  0059A8  5182               	movf	isalpha@c& (0+255),w,b
 16636  0059AA  ECD4  F02D         	call	_isupper
 16637  0059AE  B0D8               	btfsc	status,0,c
 16638  0059B0  D003               	goto	l3277
 16639  0059B2  0E00               	movlw	0
 16640  0059B4  0100               	movlb	0	; () banked
 16641  0059B6  6F81               	movwf	_isalpha$6390& (0+255),b
 16642  0059B8                     l3277:
 16643                           
 16644                           ; BSR set to: 0
 16645  0059B8  C081  F080         	movff	_isalpha$6390,??_isalpha
 16646  0059BC  0100               	movlb	0	; () banked
 16647  0059BE  3180               	rrcf	??_isalpha& (0+255),w,b
 16648  0059C0  0012               	return	
 16649  0059C2                     __end_of_isalpha:
 16650                           	opt stack 0
 16651                           tosu	equ	0xFFF
 16652                           tosh	equ	0xFFE
 16653                           tosl	equ	0xFFD
 16654                           pclath	equ	0xFFA
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodh	equ	0xFF4
 16660                           prodl	equ	0xFF3
 16661                           intcon	equ	0xFF2
 16662                           intcon2	equ	0xFF1
 16663                           intcon3	equ	0xFF0
 16664                           indf0	equ	0xFEF
 16665                           postinc0	equ	0xFEE
 16666                           plusw0	equ	0xFEB
 16667                           fsr0h	equ	0xFEA
 16668                           fsr0l	equ	0xFE9
 16669                           wreg	equ	0xFE8
 16670                           indf1	equ	0xFE7
 16671                           postinc1	equ	0xFE6
 16672                           postdec1	equ	0xFE5
 16673                           plusw1	equ	0xFE3
 16674                           fsr1h	equ	0xFE2
 16675                           fsr1l	equ	0xFE1
 16676                           indf2	equ	0xFDF
 16677                           postinc2	equ	0xFDE
 16678                           postdec2	equ	0xFDD
 16679                           plusw2	equ	0xFDB
 16680                           fsr2h	equ	0xFDA
 16681                           fsr2l	equ	0xFD9
 16682                           status	equ	0xFD8
 16683                           
 16684 ;; *************** function _isupper *****************
 16685 ;; Defined at:
 16686 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16687 ;; Parameters:    Size  Location     Type
 16688 ;;  c               1    wreg     unsigned char 
 16689 ;; Auto vars:     Size  Location     Type
 16690 ;;  c               1   31[BANK0 ] unsigned char 
 16691 ;; Return value:  Size  Location     Type
 16692 ;;		None               void
 16693 ;; Registers used:
 16694 ;;		wreg, status,2, status,0
 16695 ;; Tracked objects:
 16696 ;;		On entry : 0/0
 16697 ;;		On exit  : 0/0
 16698 ;;		Unchanged: 0/0
 16699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16701 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16704 ;;Total ram usage:        3 bytes
 16705 ;; Hardware stack levels used:    1
 16706 ;; Hardware stack levels required when called:   11
 16707 ;; This function calls:
 16708 ;;		Nothing
 16709 ;; This function is called by:
 16710 ;;		_xtoi
 16711 ;;		_isalpha
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text68
 16716  005BA8                     __ptext68:
 16717                           	opt stack 0
 16718  005BA8                     _isupper:
 16719                           	opt stack 13
 16720                           
 16721                           ; BSR set to: 0
 16722                           ;incstack = 0
 16723                           ;isupper@c stored from wreg
 16724  005BA8  0100               	movlb	0	; () banked
 16725  005BAA  6F7F               	movwf	isupper@c& (0+255),b
 16726  005BAC  0E00               	movlw	0
 16727  005BAE  0100               	movlb	0	; () banked
 16728  005BB0  6F7E               	movwf	_isupper$6396& (0+255),b
 16729                           
 16730                           ; BSR set to: 0
 16731  005BB2  0E5B               	movlw	91
 16732  005BB4  617F               	cpfslt	isupper@c& (0+255),b
 16733  005BB6  D005               	goto	l3287
 16734                           
 16735                           ; BSR set to: 0
 16736  005BB8  0E40               	movlw	64
 16737  005BBA  657F               	cpfsgt	isupper@c& (0+255),b
 16738  005BBC  D002               	goto	l3287
 16739                           
 16740                           ; BSR set to: 0
 16741  005BBE  0E01               	movlw	1
 16742  005BC0  6F7E               	movwf	_isupper$6396& (0+255),b
 16743  005BC2                     l3287:
 16744                           
 16745                           ; BSR set to: 0
 16746                           
 16747                           ; BSR set to: 0
 16748  005BC2  C07E  F07D         	movff	_isupper$6396,??_isupper
 16749  005BC6  317D               	rrcf	??_isupper& (0+255),w,b
 16750  005BC8  0012               	return	
 16751  005BCA                     __end_of_isupper:
 16752                           	opt stack 0
 16753                           tosu	equ	0xFFF
 16754                           tosh	equ	0xFFE
 16755                           tosl	equ	0xFFD
 16756                           pclath	equ	0xFFA
 16757                           tblptru	equ	0xFF8
 16758                           tblptrh	equ	0xFF7
 16759                           tblptrl	equ	0xFF6
 16760                           tablat	equ	0xFF5
 16761                           prodh	equ	0xFF4
 16762                           prodl	equ	0xFF3
 16763                           intcon	equ	0xFF2
 16764                           intcon2	equ	0xFF1
 16765                           intcon3	equ	0xFF0
 16766                           indf0	equ	0xFEF
 16767                           postinc0	equ	0xFEE
 16768                           plusw0	equ	0xFEB
 16769                           fsr0h	equ	0xFEA
 16770                           fsr0l	equ	0xFE9
 16771                           wreg	equ	0xFE8
 16772                           indf1	equ	0xFE7
 16773                           postinc1	equ	0xFE6
 16774                           postdec1	equ	0xFE5
 16775                           plusw1	equ	0xFE3
 16776                           fsr1h	equ	0xFE2
 16777                           fsr1l	equ	0xFE1
 16778                           indf2	equ	0xFDF
 16779                           postinc2	equ	0xFDE
 16780                           postdec2	equ	0xFDD
 16781                           plusw2	equ	0xFDB
 16782                           fsr2h	equ	0xFDA
 16783                           fsr2l	equ	0xFD9
 16784                           status	equ	0xFD8
 16785                           
 16786 ;; *************** function _strcpy *****************
 16787 ;; Defined at:
 16788 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 16789 ;; Parameters:    Size  Location     Type
 16790 ;;  to              2   29[BANK0 ] PTR unsigned char 
 16791 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16792 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 16793 ;;		 -> STR_23(20), STR_21(42), 
 16794 ;; Auto vars:     Size  Location     Type
 16795 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 16796 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 16797 ;; Return value:  Size  Location     Type
 16798 ;;                  2   29[BANK0 ] PTR unsigned char 
 16799 ;; Registers used:
 16800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16801 ;; Tracked objects:
 16802 ;;		On entry : 0/0
 16803 ;;		On exit  : 0/0
 16804 ;;		Unchanged: 0/0
 16805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16807 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16809 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16810 ;;Total ram usage:        6 bytes
 16811 ;; Hardware stack levels used:    1
 16812 ;; Hardware stack levels required when called:   11
 16813 ;; This function calls:
 16814 ;;		Nothing
 16815 ;; This function is called by:
 16816 ;;		_Terminal
 16817 ;;		_Term_MainSm
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821                           	psect	text69
 16822  005900                     __ptext69:
 16823                           	opt stack 0
 16824  005900                     _strcpy:
 16825                           	opt stack 15
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;incstack = 0
 16829  005900  C07D  F081         	movff	strcpy@to,strcpy@cp
 16830  005904  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 16831  005908  D005               	goto	l3179
 16832  00590A  0100               	movlb	0	; () banked
 16833  00590C  4B81               	infsnz	strcpy@cp& (0+255),f,b
 16834  00590E  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 16835  005910  4B7F               	infsnz	strcpy@from& (0+255),f,b
 16836  005912  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 16837  005914                     l3179:
 16838                           
 16839                           ; BSR set to: 0
 16840  005914  C07F  FFF6         	movff	strcpy@from,tblptrl
 16841  005918  C080  FFF7         	movff	strcpy@from+1,tblptrh
 16842  00591C                     	if	0	;tblptru may be non-zero
 16843  00591C                     	endif
 16844  00591C                     	if	0	;tblptru may be non-zero
 16845  00591C                     	endif
 16846  00591C  C081  FFD9         	movff	strcpy@cp,fsr2l
 16847  005920  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 16848  005924  0008               	tblrd		*
 16849  005926  CFF5 FFDF          	movff	tablat,indf2
 16850  00592A  50DF               	movf	indf2,w,c
 16851  00592C  B4D8               	btfsc	status,2,c
 16852  00592E  0012               	return	
 16853  005930  D7EC               	goto	l3180
 16854  005932                     __end_of_strcpy:
 16855                           	opt stack 0
 16856                           tosu	equ	0xFFF
 16857                           tosh	equ	0xFFE
 16858                           tosl	equ	0xFFD
 16859                           pclath	equ	0xFFA
 16860                           tblptru	equ	0xFF8
 16861                           tblptrh	equ	0xFF7
 16862                           tblptrl	equ	0xFF6
 16863                           tablat	equ	0xFF5
 16864                           prodh	equ	0xFF4
 16865                           prodl	equ	0xFF3
 16866                           intcon	equ	0xFF2
 16867                           intcon2	equ	0xFF1
 16868                           intcon3	equ	0xFF0
 16869                           indf0	equ	0xFEF
 16870                           postinc0	equ	0xFEE
 16871                           plusw0	equ	0xFEB
 16872                           fsr0h	equ	0xFEA
 16873                           fsr0l	equ	0xFE9
 16874                           wreg	equ	0xFE8
 16875                           indf1	equ	0xFE7
 16876                           postinc1	equ	0xFE6
 16877                           postdec1	equ	0xFE5
 16878                           plusw1	equ	0xFE3
 16879                           fsr1h	equ	0xFE2
 16880                           fsr1l	equ	0xFE1
 16881                           indf2	equ	0xFDF
 16882                           postinc2	equ	0xFDE
 16883                           postdec2	equ	0xFDD
 16884                           plusw2	equ	0xFDB
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _putUSBUSART *****************
 16890 ;; Defined at:
 16891 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  data            2   35[BANK0 ] PTR unsigned char 
 16894 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 16895 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 16896 ;;		 -> RxBuffer(400), 
 16897 ;;  length          1   37[BANK0 ] unsigned char 
 16898 ;; Auto vars:     Size  Location     Type
 16899 ;;		None
 16900 ;; Return value:  Size  Location     Type
 16901 ;;                  1    wreg      void 
 16902 ;; Registers used:
 16903 ;;		wreg, status,2, status,0
 16904 ;; Tracked objects:
 16905 ;;		On entry : 0/0
 16906 ;;		On exit  : 0/0
 16907 ;;		Unchanged: 0/0
 16908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16909 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16912 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;Total ram usage:        3 bytes
 16914 ;; Hardware stack levels used:    1
 16915 ;; Hardware stack levels required when called:   11
 16916 ;; This function calls:
 16917 ;;		Nothing
 16918 ;; This function is called by:
 16919 ;;		_Terminal
 16920 ;;		_Term_MainSm
 16921 ;;		_GsmGprsTerminal
 16922 ;; This function uses a non-reentrant model
 16923 ;;
 16924                           
 16925                           	psect	text70
 16926  005BCA                     __ptext70:
 16927                           	opt stack 0
 16928  005BCA                     _putUSBUSART:
 16929                           	opt stack 15
 16930                           
 16931                           ;usb_device_cdc.c: 584: ;
 16932                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 16933                           
 16934                           ;incstack = 0
 16935  005BCA  0100               	movlb	0	; () banked
 16936  005BCC  51C1               	movf	_cdc_trf_state& (0+255),w,b
 16937  005BCE  A4D8               	btfss	status,2,c
 16938  005BD0  0012               	return	
 16939                           
 16940                           ; BSR set to: 0
 16941                           ;usb_device_cdc.c: 586: {
 16942                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 16943  005BD2  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 16944  005BD6  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 16945                           
 16946                           ; BSR set to: 0
 16947  005BDA  C085  F0C0         	movff	putUSBUSART@length,_cdc_tx_len
 16948                           
 16949                           ; BSR set to: 0
 16950  005BDE  0E01               	movlw	1
 16951  005BE0  0101               	movlb	1	; () banked
 16952  005BE2  6FE3               	movwf	_cdc_mem_type& (0+255),b
 16953                           
 16954                           ; BSR set to: 1
 16955  005BE4  0E01               	movlw	1
 16956  005BE6  0100               	movlb	0	; () banked
 16957  005BE8  6FC1               	movwf	_cdc_trf_state& (0+255),b
 16958  005BEA  0012               	return	
 16959  005BEC                     __end_of_putUSBUSART:
 16960                           	opt stack 0
 16961                           tosu	equ	0xFFF
 16962                           tosh	equ	0xFFE
 16963                           tosl	equ	0xFFD
 16964                           pclath	equ	0xFFA
 16965                           tblptru	equ	0xFF8
 16966                           tblptrh	equ	0xFF7
 16967                           tblptrl	equ	0xFF6
 16968                           tablat	equ	0xFF5
 16969                           prodh	equ	0xFF4
 16970                           prodl	equ	0xFF3
 16971                           intcon	equ	0xFF2
 16972                           intcon2	equ	0xFF1
 16973                           intcon3	equ	0xFF0
 16974                           indf0	equ	0xFEF
 16975                           postinc0	equ	0xFEE
 16976                           plusw0	equ	0xFEB
 16977                           fsr0h	equ	0xFEA
 16978                           fsr0l	equ	0xFE9
 16979                           wreg	equ	0xFE8
 16980                           indf1	equ	0xFE7
 16981                           postinc1	equ	0xFE6
 16982                           postdec1	equ	0xFE5
 16983                           plusw1	equ	0xFE3
 16984                           fsr1h	equ	0xFE2
 16985                           fsr1l	equ	0xFE1
 16986                           indf2	equ	0xFDF
 16987                           postinc2	equ	0xFDE
 16988                           postdec2	equ	0xFDD
 16989                           plusw2	equ	0xFDB
 16990                           fsr2h	equ	0xFDA
 16991                           fsr2l	equ	0xFD9
 16992                           status	equ	0xFD8
 16993                           
 16994 ;; *************** function _itoa *****************
 16995 ;; Defined at:
 16996 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 16997 ;; Parameters:    Size  Location     Type
 16998 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 16999 ;;		 -> Terminal@Payload(80), 
 17000 ;;  val             2   53[BANK0 ] int 
 17001 ;;  base            2   55[BANK0 ] int 
 17002 ;; Auto vars:     Size  Location     Type
 17003 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17004 ;;		 -> Terminal@Payload(80), 
 17005 ;; Return value:  Size  Location     Type
 17006 ;;                  2   51[BANK0 ] PTR unsigned char 
 17007 ;; Registers used:
 17008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17009 ;; Tracked objects:
 17010 ;;		On entry : 0/0
 17011 ;;		On exit  : 0/0
 17012 ;;		Unchanged: 0/0
 17013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17014 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17017 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17018 ;;Total ram usage:        8 bytes
 17019 ;; Hardware stack levels used:    1
 17020 ;; Hardware stack levels required when called:   13
 17021 ;; This function calls:
 17022 ;;		_utoa
 17023 ;; This function is called by:
 17024 ;;		_Terminal
 17025 ;; This function uses a non-reentrant model
 17026 ;;
 17027                           
 17028                           	psect	text71
 17029  0055AE                     __ptext71:
 17030                           	opt stack 0
 17031  0055AE                     _itoa:
 17032                           	opt stack 12
 17033                           
 17034                           ; BSR set to: 0
 17035                           ;incstack = 0
 17036  0055AE  C093  F099         	movff	itoa@buf,itoa@cp
 17037  0055B2  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17038  0055B6  0100               	movlb	0	; () banked
 17039  0055B8  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17040  0055BA  D00C               	goto	l2927
 17041                           
 17042                           ; BSR set to: 0
 17043  0055BC  C093  FFD9         	movff	itoa@buf,fsr2l
 17044  0055C0  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17045  0055C4  0E2D               	movlw	45
 17046  0055C6  6EDF               	movwf	indf2,c
 17047                           
 17048                           ; BSR set to: 0
 17049  0055C8  4B93               	infsnz	itoa@buf& (0+255),f,b
 17050  0055CA  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17051                           
 17052                           ; BSR set to: 0
 17053  0055CC  6D95               	negf	itoa@val& (0+255),b
 17054  0055CE  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17055  0055D0  B0D8               	btfsc	status,0,c
 17056  0055D2  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17057  0055D4                     l2927:
 17058                           
 17059                           ; BSR set to: 0
 17060                           
 17061                           ; BSR set to: 0
 17062  0055D4  C093  F08A         	movff	itoa@buf,utoa@buf
 17063  0055D8  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17064  0055DC  C095  F08C         	movff	itoa@val,utoa@val
 17065  0055E0  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17066  0055E4  C097  F08E         	movff	itoa@base,utoa@base
 17067  0055E8  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17068  0055EC  EC18  F020         	call	_utoa	;wreg free
 17069  0055F0  0012               	return	
 17070  0055F2                     __end_of_itoa:
 17071                           	opt stack 0
 17072                           tosu	equ	0xFFF
 17073                           tosh	equ	0xFFE
 17074                           tosl	equ	0xFFD
 17075                           pclath	equ	0xFFA
 17076                           tblptru	equ	0xFF8
 17077                           tblptrh	equ	0xFF7
 17078                           tblptrl	equ	0xFF6
 17079                           tablat	equ	0xFF5
 17080                           prodh	equ	0xFF4
 17081                           prodl	equ	0xFF3
 17082                           intcon	equ	0xFF2
 17083                           intcon2	equ	0xFF1
 17084                           intcon3	equ	0xFF0
 17085                           indf0	equ	0xFEF
 17086                           postinc0	equ	0xFEE
 17087                           plusw0	equ	0xFEB
 17088                           fsr0h	equ	0xFEA
 17089                           fsr0l	equ	0xFE9
 17090                           wreg	equ	0xFE8
 17091                           indf1	equ	0xFE7
 17092                           postinc1	equ	0xFE6
 17093                           postdec1	equ	0xFE5
 17094                           plusw1	equ	0xFE3
 17095                           fsr1h	equ	0xFE2
 17096                           fsr1l	equ	0xFE1
 17097                           indf2	equ	0xFDF
 17098                           postinc2	equ	0xFDE
 17099                           postdec2	equ	0xFDD
 17100                           plusw2	equ	0xFDB
 17101                           fsr2h	equ	0xFDA
 17102                           fsr2l	equ	0xFD9
 17103                           status	equ	0xFD8
 17104                           
 17105 ;; *************** function _utoa *****************
 17106 ;; Defined at:
 17107 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17108 ;; Parameters:    Size  Location     Type
 17109 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17110 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17111 ;;  val             2   44[BANK0 ] unsigned int 
 17112 ;;  base            2   46[BANK0 ] int 
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;  v               2   48[BANK0 ] unsigned int 
 17115 ;;  c               1   50[BANK0 ] unsigned char 
 17116 ;; Return value:  Size  Location     Type
 17117 ;;                  2   42[BANK0 ] PTR unsigned char 
 17118 ;; Registers used:
 17119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17120 ;; Tracked objects:
 17121 ;;		On entry : 0/0
 17122 ;;		On exit  : 0/0
 17123 ;;		Unchanged: 0/0
 17124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17125 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17126 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17128 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17129 ;;Total ram usage:        9 bytes
 17130 ;; Hardware stack levels used:    1
 17131 ;; Hardware stack levels required when called:   12
 17132 ;; This function calls:
 17133 ;;		___lwdiv
 17134 ;;		___lwmod
 17135 ;; This function is called by:
 17136 ;;		_Term_MainSm
 17137 ;;		_itoa
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           
 17141                           	psect	text72
 17142  004030                     __ptext72:
 17143                           	opt stack 0
 17144  004030                     _utoa:
 17145                           	opt stack 14
 17146                           
 17147                           ;incstack = 0
 17148  004030  C08C  F090         	movff	utoa@val,utoa@v
 17149  004034  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17150  004038  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17151  00403C  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17152  004040  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17153  004044  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17154  004048  EC16  F029         	call	___lwdiv	;wreg free
 17155  00404C  C083  F090         	movff	?___lwdiv,utoa@v
 17156  004050  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17157  004054  0100               	movlb	0	; () banked
 17158  004056  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17159  004058  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17160                           
 17161                           ; BSR set to: 0
 17162  00405A  5190               	movf	utoa@v& (0+255),w,b
 17163  00405C  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17164  00405E  A4D8               	btfss	status,2,c
 17165  004060  D7EB               	goto	l2931
 17166                           
 17167                           ; BSR set to: 0
 17168                           
 17169                           ; BSR set to: 0
 17170  004062  C08A  FFD9         	movff	utoa@buf,fsr2l
 17171  004066  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17172  00406A  0E00               	movlw	0
 17173  00406C  6EDF               	movwf	indf2,c
 17174                           
 17175                           ; BSR set to: 0
 17176  00406E  078A               	decf	utoa@buf& (0+255),f,b
 17177  004070  A0D8               	btfss	status,0,c
 17178  004072  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17179  004074                     
 17180                           ; BSR set to: 0
 17181                           
 17182                           ; BSR set to: 0
 17183  004074  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17184  004078  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17185  00407C  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17186  004080  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17187  004084  ECF9  F02A         	call	___lwmod	;wreg free
 17188  004088  0100               	movlb	0	; () banked
 17189  00408A  517D               	movf	?___lwmod& (0+255),w,b
 17190  00408C  6F92               	movwf	utoa@c& (0+255),b
 17191                           
 17192                           ; BSR set to: 0
 17193  00408E  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17194  004092  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17195  004096  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17196  00409A  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17197  00409E  EC16  F029         	call	___lwdiv	;wreg free
 17198  0040A2  C083  F08C         	movff	?___lwdiv,utoa@val
 17199  0040A6  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17200  0040AA  0E09               	movlw	9
 17201  0040AC  0100               	movlb	0	; () banked
 17202  0040AE  6592               	cpfsgt	utoa@c& (0+255),b
 17203  0040B0  D002               	goto	l2934
 17204                           
 17205                           ; BSR set to: 0
 17206  0040B2  0E07               	movlw	7
 17207  0040B4  2792               	addwf	utoa@c& (0+255),f,b
 17208  0040B6                     l2934:
 17209                           
 17210                           ; BSR set to: 0
 17211  0040B6  0E30               	movlw	48
 17212  0040B8  2792               	addwf	utoa@c& (0+255),f,b
 17213                           
 17214                           ; BSR set to: 0
 17215  0040BA  C08A  FFD9         	movff	utoa@buf,fsr2l
 17216  0040BE  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17217  0040C2  C092  FFDF         	movff	utoa@c,indf2
 17218                           
 17219                           ; BSR set to: 0
 17220  0040C6  078A               	decf	utoa@buf& (0+255),f,b
 17221  0040C8  A0D8               	btfss	status,0,c
 17222  0040CA  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17223                           
 17224                           ; BSR set to: 0
 17225  0040CC  518C               	movf	utoa@val& (0+255),w,b
 17226  0040CE  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17227  0040D0  A4D8               	btfss	status,2,c
 17228  0040D2  D7D0               	goto	l2933
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;	Return value of _utoa is never used
 17232                           
 17233                           ; BSR set to: 0
 17234  0040D4  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17235  0040D6  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17236  0040D8  0012               	return	
 17237  0040DA                     __end_of_utoa:
 17238                           	opt stack 0
 17239                           tosu	equ	0xFFF
 17240                           tosh	equ	0xFFE
 17241                           tosl	equ	0xFFD
 17242                           pclath	equ	0xFFA
 17243                           tblptru	equ	0xFF8
 17244                           tblptrh	equ	0xFF7
 17245                           tblptrl	equ	0xFF6
 17246                           tablat	equ	0xFF5
 17247                           prodh	equ	0xFF4
 17248                           prodl	equ	0xFF3
 17249                           intcon	equ	0xFF2
 17250                           intcon2	equ	0xFF1
 17251                           intcon3	equ	0xFF0
 17252                           indf0	equ	0xFEF
 17253                           postinc0	equ	0xFEE
 17254                           plusw0	equ	0xFEB
 17255                           fsr0h	equ	0xFEA
 17256                           fsr0l	equ	0xFE9
 17257                           wreg	equ	0xFE8
 17258                           indf1	equ	0xFE7
 17259                           postinc1	equ	0xFE6
 17260                           postdec1	equ	0xFE5
 17261                           plusw1	equ	0xFE3
 17262                           fsr1h	equ	0xFE2
 17263                           fsr1l	equ	0xFE1
 17264                           indf2	equ	0xFDF
 17265                           postinc2	equ	0xFDE
 17266                           postdec2	equ	0xFDD
 17267                           plusw2	equ	0xFDB
 17268                           fsr2h	equ	0xFDA
 17269                           fsr2l	equ	0xFD9
 17270                           status	equ	0xFD8
 17271                           
 17272 ;; *************** function ___lwmod *****************
 17273 ;; Defined at:
 17274 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;  dividend        2   29[BANK0 ] unsigned int 
 17277 ;;  divisor         2   31[BANK0 ] unsigned int 
 17278 ;; Auto vars:     Size  Location     Type
 17279 ;;  counter         1   33[BANK0 ] unsigned char 
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  2   29[BANK0 ] unsigned int 
 17282 ;; Registers used:
 17283 ;;		wreg, status,2, status,0
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17289 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17292 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17293 ;;Total ram usage:        5 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; Hardware stack levels required when called:   11
 17296 ;; This function calls:
 17297 ;;		Nothing
 17298 ;; This function is called by:
 17299 ;;		_utoa
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           
 17303                           	psect	text73
 17304  0055F2                     __ptext73:
 17305                           	opt stack 0
 17306  0055F2                     ___lwmod:
 17307                           	opt stack 14
 17308                           
 17309                           ; BSR set to: 0
 17310                           ;incstack = 0
 17311  0055F2  0100               	movlb	0	; () banked
 17312  0055F4  517F               	movf	___lwmod@divisor& (0+255),w,b
 17313  0055F6  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17314  0055F8  B4D8               	btfsc	status,2,c
 17315  0055FA  D018               	goto	l3029
 17316                           
 17317                           ; BSR set to: 0
 17318  0055FC  0E01               	movlw	1
 17319  0055FE  6F81               	movwf	___lwmod@counter& (0+255),b
 17320  005600  D004               	goto	l3024
 17321  005602                     
 17322                           ; BSR set to: 0
 17323                           
 17324                           ; BSR set to: 0
 17325  005602  90D8               	bcf	status,0,c
 17326  005604  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17327  005606  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17328  005608  2B81               	incf	___lwmod@counter& (0+255),f,b
 17329  00560A                     l3024:
 17330                           
 17331                           ; BSR set to: 0
 17332                           
 17333                           ; BSR set to: 0
 17334  00560A  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17335  00560C  D7FA               	goto	l3025
 17336  00560E                     u10300:
 17337                           
 17338                           ; BSR set to: 0
 17339                           
 17340                           ; BSR set to: 0
 17341                           
 17342                           ; BSR set to: 0
 17343  00560E  517F               	movf	___lwmod@divisor& (0+255),w,b
 17344  005610  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17345  005612  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17346  005614  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17347  005616  A0D8               	btfss	status,0,c
 17348  005618  D004               	goto	l3028
 17349                           
 17350                           ; BSR set to: 0
 17351  00561A  517F               	movf	___lwmod@divisor& (0+255),w,b
 17352  00561C  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17353  00561E  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17354  005620  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17355  005622                     l3028:
 17356                           
 17357                           ; BSR set to: 0
 17358                           
 17359                           ; BSR set to: 0
 17360  005622  90D8               	bcf	status,0,c
 17361  005624  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17362  005626  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17363                           
 17364                           ; BSR set to: 0
 17365  005628  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17366  00562A  D7F1               	goto	u10300
 17367  00562C                     l3029:
 17368                           
 17369                           ; BSR set to: 0
 17370                           
 17371                           ; BSR set to: 0
 17372  00562C  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17373  005630  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17374                           
 17375                           ; BSR set to: 0
 17376  005634  0012               	return		;funcret
 17377  005636                     __end_of___lwmod:
 17378                           	opt stack 0
 17379                           tosu	equ	0xFFF
 17380                           tosh	equ	0xFFE
 17381                           tosl	equ	0xFFD
 17382                           pclath	equ	0xFFA
 17383                           tblptru	equ	0xFF8
 17384                           tblptrh	equ	0xFF7
 17385                           tblptrl	equ	0xFF6
 17386                           tablat	equ	0xFF5
 17387                           prodh	equ	0xFF4
 17388                           prodl	equ	0xFF3
 17389                           intcon	equ	0xFF2
 17390                           intcon2	equ	0xFF1
 17391                           intcon3	equ	0xFF0
 17392                           indf0	equ	0xFEF
 17393                           postinc0	equ	0xFEE
 17394                           plusw0	equ	0xFEB
 17395                           fsr0h	equ	0xFEA
 17396                           fsr0l	equ	0xFE9
 17397                           wreg	equ	0xFE8
 17398                           indf1	equ	0xFE7
 17399                           postinc1	equ	0xFE6
 17400                           postdec1	equ	0xFE5
 17401                           plusw1	equ	0xFE3
 17402                           fsr1h	equ	0xFE2
 17403                           fsr1l	equ	0xFE1
 17404                           indf2	equ	0xFDF
 17405                           postinc2	equ	0xFDE
 17406                           postdec2	equ	0xFDD
 17407                           plusw2	equ	0xFDB
 17408                           fsr2h	equ	0xFDA
 17409                           fsr2l	equ	0xFD9
 17410                           status	equ	0xFD8
 17411                           
 17412 ;; *************** function _getsUSBUSART *****************
 17413 ;; Defined at:
 17414 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17415 ;; Parameters:    Size  Location     Type
 17416 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17417 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17418 ;;  len             1   38[BANK0 ] unsigned char 
 17419 ;; Auto vars:     Size  Location     Type
 17420 ;;		None
 17421 ;; Return value:  Size  Location     Type
 17422 ;;                  1    wreg      unsigned char 
 17423 ;; Registers used:
 17424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17425 ;; Tracked objects:
 17426 ;;		On entry : 0/0
 17427 ;;		On exit  : 0/0
 17428 ;;		Unchanged: 0/0
 17429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17430 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17433 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17434 ;;Total ram usage:        4 bytes
 17435 ;; Hardware stack levels used:    1
 17436 ;; Hardware stack levels required when called:   12
 17437 ;; This function calls:
 17438 ;;		_USBTransferOnePacket
 17439 ;; This function is called by:
 17440 ;;		_Terminal
 17441 ;;		_GsmGprsTerminal
 17442 ;; This function uses a non-reentrant model
 17443 ;;
 17444                           
 17445                           	psect	text74
 17446  004538                     __ptext74:
 17447                           	opt stack 0
 17448  004538                     _getsUSBUSART:
 17449                           	opt stack 13
 17450                           
 17451                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17452                           
 17453                           ; BSR set to: 0
 17454                           ;incstack = 0
 17455  004538  0E00               	movlw	0
 17456  00453A  0100               	movlb	0	; () banked
 17457  00453C  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17461  00453E  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17462  004540  11B9               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17463  004542  B4D8               	btfsc	status,2,c
 17464  004544  D006               	goto	u10810
 17465                           
 17466                           ; BSR set to: 0
 17467  004546  C0B8  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17468  00454A  C0B9  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17469  00454E  BEDF               	btfsc	indf2,7,c
 17470  004550  D03B               	goto	l1907
 17471  004552                     u10810:
 17472                           
 17473                           ; BSR set to: 0
 17474                           ;usb_device_cdc.c: 493: {
 17475                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17476                           
 17477                           ; BSR set to: 0
 17478  004552  EE20 F001          	lfsr	2,1
 17479  004556  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17480  004558  26D9               	addwf	fsr2l,f,c
 17481  00455A  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17482  00455C  22DA               	addwfc	fsr2h,f,c
 17483  00455E  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17484  004560  5CDE               	subwf	postinc2,w,c
 17485  004562  B0D8               	btfsc	status,0,c
 17486  004564  D008               	goto	l1910
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17490  004566  EE20 F001          	lfsr	2,1
 17491  00456A  51B8               	movf	_CDCDataOutHandle& (0+255),w,b
 17492  00456C  26D9               	addwf	fsr2l,f,c
 17493  00456E  51B9               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17494  004570  22DA               	addwfc	fsr2h,f,c
 17495  004572  50DF               	movf	indf2,w,c
 17496  004574  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17497  004576                     l1910:
 17498                           
 17499                           ; BSR set to: 0
 17500                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17501                           
 17502                           ; BSR set to: 0
 17503  004576  0E00               	movlw	0
 17504  004578  6FC2               	movwf	_cdc_rx_len& (0+255),b
 17505  00457A  D013               	goto	l1911
 17506  00457C                     
 17507                           ; BSR set to: 0
 17508                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17509                           
 17510                           ; BSR set to: 0
 17511  00457C  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17512  00457E  0D01               	mullw	1
 17513  004580  0E50               	movlw	low _cdc_data_rx
 17514  004582  24F3               	addwf	prodl,w,c
 17515  004584  6ED9               	movwf	fsr2l,c
 17516  004586  0E05               	movlw	high _cdc_data_rx
 17517  004588  20F4               	addwfc	prodh,w,c
 17518  00458A  6EDA               	movwf	fsr2h,c
 17519  00458C  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17520  00458E  0D01               	mullw	1
 17521  004590  50F3               	movf	prodl,w,c
 17522  004592  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17523  004594  6EE1               	movwf	fsr1l,c
 17524  004596  50F4               	movf	prodh,w,c
 17525  004598  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17526  00459A  6EE2               	movwf	fsr1h,c
 17527  00459C  CFDF FFE7          	movff	indf2,indf1
 17528                           
 17529                           ; BSR set to: 0
 17530  0045A0  2BC2               	incf	_cdc_rx_len& (0+255),f,b
 17531  0045A2                     l1911:
 17532                           
 17533                           ; BSR set to: 0
 17534                           
 17535                           ; BSR set to: 0
 17536  0045A2  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17537  0045A4  5DC2               	subwf	_cdc_rx_len& (0+255),w,b
 17538  0045A6  A0D8               	btfss	status,0,c
 17539  0045A8  D7E9               	goto	l1912
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17543                           
 17544                           ; BSR set to: 0
 17545  0045AA  0E00               	movlw	0
 17546  0045AC  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17547  0045AE  0E50               	movlw	low _cdc_data_rx
 17548  0045B0  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17549  0045B2  0E05               	movlw	high _cdc_data_rx
 17550  0045B4  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17551  0045B6  0E40               	movlw	64
 17552  0045B8  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17553  0045BA  0E02               	movlw	2
 17554  0045BC  ECB2  F01E         	call	_USBTransferOnePacket
 17555  0045C0  C07D  F0B8         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17556  0045C4  C07E  F0B9         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17557  0045C8                     l1907:
 17558                           
 17559                           ;usb_device_cdc.c: 513: }
 17560                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17561  0045C8  0100               	movlb	0	; () banked
 17562  0045CA  51C2               	movf	_cdc_rx_len& (0+255),w,b
 17563  0045CC  0012               	return	
 17564  0045CE                     __end_of_getsUSBUSART:
 17565                           	opt stack 0
 17566                           tosu	equ	0xFFF
 17567                           tosh	equ	0xFFE
 17568                           tosl	equ	0xFFD
 17569                           pclath	equ	0xFFA
 17570                           tblptru	equ	0xFF8
 17571                           tblptrh	equ	0xFF7
 17572                           tblptrl	equ	0xFF6
 17573                           tablat	equ	0xFF5
 17574                           prodh	equ	0xFF4
 17575                           prodl	equ	0xFF3
 17576                           intcon	equ	0xFF2
 17577                           intcon2	equ	0xFF1
 17578                           intcon3	equ	0xFF0
 17579                           indf0	equ	0xFEF
 17580                           postinc0	equ	0xFEE
 17581                           plusw0	equ	0xFEB
 17582                           fsr0h	equ	0xFEA
 17583                           fsr0l	equ	0xFE9
 17584                           wreg	equ	0xFE8
 17585                           indf1	equ	0xFE7
 17586                           postinc1	equ	0xFE6
 17587                           postdec1	equ	0xFE5
 17588                           plusw1	equ	0xFE3
 17589                           fsr1h	equ	0xFE2
 17590                           fsr1l	equ	0xFE1
 17591                           indf2	equ	0xFDF
 17592                           postinc2	equ	0xFDE
 17593                           postdec2	equ	0xFDD
 17594                           plusw2	equ	0xFDB
 17595                           fsr2h	equ	0xFDA
 17596                           fsr2l	equ	0xFD9
 17597                           status	equ	0xFD8
 17598                           
 17599 ;; *************** function _USBTransferOnePacket *****************
 17600 ;; Defined at:
 17601 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17602 ;; Parameters:    Size  Location     Type
 17603 ;;  ep              1    wreg     unsigned char 
 17604 ;;  dir             1   29[BANK0 ] unsigned char 
 17605 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17606 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17607 ;;  len             1   32[BANK0 ] unsigned char 
 17608 ;; Auto vars:     Size  Location     Type
 17609 ;;  ep              1   33[BANK0 ] unsigned char 
 17610 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17611 ;;		 -> NULL(0), BDT(48), 
 17612 ;; Return value:  Size  Location     Type
 17613 ;;                  2   29[BANK0 ] PTR void 
 17614 ;; Registers used:
 17615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17616 ;; Tracked objects:
 17617 ;;		On entry : 0/0
 17618 ;;		On exit  : 0/0
 17619 ;;		Unchanged: 0/0
 17620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17622 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;Total ram usage:        7 bytes
 17626 ;; Hardware stack levels used:    1
 17627 ;; Hardware stack levels required when called:   11
 17628 ;; This function calls:
 17629 ;;		Nothing
 17630 ;; This function is called by:
 17631 ;;		_CDCInitEP
 17632 ;;		_getsUSBUSART
 17633 ;;		_CDCTxService
 17634 ;;		_USBCDCEventHandler
 17635 ;; This function uses a non-reentrant model
 17636 ;;
 17637                           
 17638                           	psect	text75
 17639  003D64                     __ptext75:
 17640                           	opt stack 0
 17641  003D64                     _USBTransferOnePacket:
 17642                           	opt stack 13
 17643                           
 17644                           ; BSR set to: 0
 17645                           ;incstack = 0
 17646                           ;USBTransferOnePacket@ep stored from wreg
 17647  003D64  0100               	movlb	0	; () banked
 17648  003D66  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17649                           
 17650                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17651                           ;usb_device.c: 1018: if(dir != 0)
 17652  003D68  0100               	movlb	0	; () banked
 17653  003D6A  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17654  003D6C  B4D8               	btfsc	status,2,c
 17655  003D6E  D007               	goto	l1631
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;usb_device.c: 1019: {
 17659                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17660  003D70  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17661  003D72  0D02               	mullw	2
 17662  003D74  0EB2               	movlw	low _pBDTEntryIn
 17663  003D76  24F3               	addwf	prodl,w,c
 17664  003D78  6ED9               	movwf	fsr2l,c
 17665  003D7A  0E00               	movlw	high _pBDTEntryIn
 17666  003D7C  D006               	goto	L16
 17667  003D7E                     l1631:
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;usb_device.c: 1023: else
 17671                           ;usb_device.c: 1024: {
 17672                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17673                           
 17674                           ; BSR set to: 0
 17675  003D7E  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17676  003D80  0D02               	mullw	2
 17677  003D82  0E0E               	movlw	low _pBDTEntryOut
 17678  003D84  24F3               	addwf	prodl,w,c
 17679  003D86  6ED9               	movwf	fsr2l,c
 17680  003D88  0E03               	movlw	high _pBDTEntryOut
 17681  003D8A                     L16:
 17682  003D8A  20F4               	addwfc	prodh,w,c
 17683  003D8C  6EDA               	movwf	fsr2h,c
 17684  003D8E  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17685  003D92  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;usb_device.c: 1027: }
 17689                           ;usb_device.c: 1031: if(handle == 0)
 17690                           
 17691                           ; BSR set to: 0
 17692  003D96  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17693  003D98  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17694  003D9A  A4D8               	btfss	status,2,c
 17695  003D9C  D005               	goto	l1633
 17696                           
 17697                           ; BSR set to: 0
 17698                           ;usb_device.c: 1032: {
 17699                           ;usb_device.c: 1033: return 0;
 17700  003D9E  0E00               	movlw	0
 17701  003DA0  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17702  003DA2  0E00               	movlw	0
 17703  003DA4  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17704                           
 17705                           ; BSR set to: 0
 17706  003DA6  0012               	return	
 17707  003DA8                     l1633:
 17708                           
 17709                           ; BSR set to: 0
 17710                           ;usb_device.c: 1034: }
 17711                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17712                           
 17713                           ; BSR set to: 0
 17714  003DA8  EE20 F002          	lfsr	2,2
 17715  003DAC  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17716  003DAE  26D9               	addwf	fsr2l,f,c
 17717  003DB0  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17718  003DB2  22DA               	addwfc	fsr2h,f,c
 17719  003DB4  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 17720  003DB8  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 17721                           
 17722                           ;usb_device.c: 1048: handle->CNT = len;
 17723  003DBC  EE20 F001          	lfsr	2,1
 17724  003DC0  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17725  003DC2  26D9               	addwf	fsr2l,f,c
 17726  003DC4  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17727  003DC6  22DA               	addwfc	fsr2h,f,c
 17728  003DC8  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 17732  003DCC  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17733  003DD0  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17734  003DD4  0E40               	movlw	64
 17735  003DD6  16DF               	andwf	indf2,f,c
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 17739  003DD8  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17740  003DDC  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17741  003DE0  0E00               	movlw	0
 17742  003DE2  86DB               	bsf	plusw2,3,c
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 17746  003DE4  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 17747  003DE8  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 17748  003DEC  0E00               	movlw	0
 17749  003DEE  8EDB               	bsf	plusw2,7,c
 17750                           
 17751                           ; BSR set to: 0
 17752                           ;usb_device.c: 1054: if(dir != 0)
 17753  003DF0  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17754  003DF2  B4D8               	btfsc	status,2,c
 17755  003DF4  D007               	goto	l1635
 17756                           
 17757                           ; BSR set to: 0
 17758                           ;usb_device.c: 1055: {
 17759                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17760  003DF6  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17761  003DF8  0D02               	mullw	2
 17762  003DFA  0EB2               	movlw	low _pBDTEntryIn
 17763  003DFC  24F3               	addwf	prodl,w,c
 17764  003DFE  6ED9               	movwf	fsr2l,c
 17765  003E00  0E00               	movlw	high _pBDTEntryIn
 17766  003E02  D006               	goto	L17
 17767  003E04                     l1635:
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;usb_device.c: 1059: else
 17771                           ;usb_device.c: 1060: {
 17772                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17773                           
 17774                           ; BSR set to: 0
 17775  003E04  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17776  003E06  0D02               	mullw	2
 17777  003E08  0E0E               	movlw	low _pBDTEntryOut
 17778  003E0A  24F3               	addwf	prodl,w,c
 17779  003E0C  6ED9               	movwf	fsr2l,c
 17780  003E0E  0E03               	movlw	high _pBDTEntryOut
 17781  003E10                     L17:
 17782  003E10  20F4               	addwfc	prodh,w,c
 17783  003E12  6EDA               	movwf	fsr2h,c
 17784  003E14  0E04               	movlw	4
 17785  003E16  1ADF               	xorwf	indf2,f,c
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;usb_device.c: 1063: }
 17789                           ;usb_device.c: 1064: return (void*)handle;
 17790                           
 17791                           ; BSR set to: 0
 17792  003E18  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 17793  003E1C  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 17794  003E20  0012               	return	
 17795  003E22                     __end_of_USBTransferOnePacket:
 17796                           	opt stack 0
 17797                           tosu	equ	0xFFF
 17798                           tosh	equ	0xFFE
 17799                           tosl	equ	0xFFD
 17800                           pclath	equ	0xFFA
 17801                           tblptru	equ	0xFF8
 17802                           tblptrh	equ	0xFF7
 17803                           tblptrl	equ	0xFF6
 17804                           tablat	equ	0xFF5
 17805                           prodh	equ	0xFF4
 17806                           prodl	equ	0xFF3
 17807                           intcon	equ	0xFF2
 17808                           intcon2	equ	0xFF1
 17809                           intcon3	equ	0xFF0
 17810                           indf0	equ	0xFEF
 17811                           postinc0	equ	0xFEE
 17812                           plusw0	equ	0xFEB
 17813                           fsr0h	equ	0xFEA
 17814                           fsr0l	equ	0xFE9
 17815                           wreg	equ	0xFE8
 17816                           indf1	equ	0xFE7
 17817                           postinc1	equ	0xFE6
 17818                           postdec1	equ	0xFE5
 17819                           plusw1	equ	0xFE3
 17820                           fsr1h	equ	0xFE2
 17821                           fsr1l	equ	0xFE1
 17822                           indf2	equ	0xFDF
 17823                           postinc2	equ	0xFDE
 17824                           postdec2	equ	0xFDD
 17825                           plusw2	equ	0xFDB
 17826                           fsr2h	equ	0xFDA
 17827                           fsr2l	equ	0xFD9
 17828                           status	equ	0xFD8
 17829                           
 17830 ;; *************** function _atoi *****************
 17831 ;; Defined at:
 17832 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 17833 ;; Parameters:    Size  Location     Type
 17834 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 17835 ;;		 -> Terminal@Len(4), 
 17836 ;; Auto vars:     Size  Location     Type
 17837 ;;  a               2   40[BANK0 ] int 
 17838 ;;  sign            1   39[BANK0 ] unsigned char 
 17839 ;; Return value:  Size  Location     Type
 17840 ;;                  2   35[BANK0 ] int 
 17841 ;; Registers used:
 17842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17843 ;; Tracked objects:
 17844 ;;		On entry : 0/0
 17845 ;;		On exit  : 0/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17849 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17851 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17852 ;;Total ram usage:        7 bytes
 17853 ;; Hardware stack levels used:    1
 17854 ;; Hardware stack levels required when called:   12
 17855 ;; This function calls:
 17856 ;;		___wmul
 17857 ;;		_isdigit
 17858 ;; This function is called by:
 17859 ;;		_Terminal
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           
 17863                           	psect	text76
 17864  0034B4                     __ptext76:
 17865                           	opt stack 0
 17866  0034B4                     _atoi:
 17867                           	opt stack 13
 17868                           
 17869                           ; BSR set to: 0
 17870                           ;incstack = 0
 17871  0034B4  D003               	goto	l2740
 17872  0034B6  0100               	movlb	0	; () banked
 17873  0034B8  4B83               	infsnz	atoi@s& (0+255),f,b
 17874  0034BA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 17875  0034BC                     l2740:
 17876                           
 17877                           ; BSR set to: 0
 17878  0034BC  C083  FFD9         	movff	atoi@s,fsr2l
 17879  0034C0  C084  FFDA         	movff	atoi@s+1,fsr2h
 17880  0034C4  0E20               	movlw	32
 17881  0034C6  18DE               	xorwf	postinc2,w,c
 17882  0034C8  B4D8               	btfsc	status,2,c
 17883  0034CA  D7F5               	goto	l2741
 17884  0034CC  C083  FFD9         	movff	atoi@s,fsr2l
 17885  0034D0  C084  FFDA         	movff	atoi@s+1,fsr2h
 17886  0034D4  0E09               	movlw	9
 17887  0034D6  18DE               	xorwf	postinc2,w,c
 17888  0034D8  B4D8               	btfsc	status,2,c
 17889  0034DA  D7ED               	goto	l2741
 17890  0034DC  0E00               	movlw	0
 17891  0034DE  0100               	movlb	0	; () banked
 17892  0034E0  6F89               	movwf	(atoi@a+1)& (0+255),b
 17893  0034E2  0E00               	movlw	0
 17894  0034E4  6F88               	movwf	atoi@a& (0+255),b
 17895  0034E6  0E00               	movlw	0
 17896  0034E8  6F87               	movwf	atoi@sign& (0+255),b
 17897                           
 17898                           ; BSR set to: 0
 17899  0034EA  C083  FFD9         	movff	atoi@s,fsr2l
 17900  0034EE  C084  FFDA         	movff	atoi@s+1,fsr2h
 17901  0034F2  0E2D               	movlw	45
 17902  0034F4  18DE               	xorwf	postinc2,w,c
 17903  0034F6  A4D8               	btfss	status,2,c
 17904  0034F8  D002               	goto	l2743
 17905                           
 17906                           ; BSR set to: 0
 17907  0034FA  2B87               	incf	atoi@sign& (0+255),f,b
 17908  0034FC  D026               	goto	l12079
 17909  0034FE                     l2743:
 17910                           
 17911                           ; BSR set to: 0
 17912                           
 17913                           ; BSR set to: 0
 17914  0034FE  C083  FFD9         	movff	atoi@s,fsr2l
 17915  003502  C084  FFDA         	movff	atoi@s+1,fsr2h
 17916  003506  0E2B               	movlw	43
 17917  003508  18DE               	xorwf	postinc2,w,c
 17918  00350A  A4D8               	btfss	status,2,c
 17919  00350C  D020               	goto	l2746
 17920  00350E  D01D               	goto	l12079
 17921  003510                     
 17922                           ; BSR set to: 0
 17923  003510  C088  F07D         	movff	atoi@a,___wmul@multiplier
 17924  003514  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 17925  003518  0E00               	movlw	0
 17926  00351A  0100               	movlb	0	; () banked
 17927  00351C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17928  00351E  0E0A               	movlw	10
 17929  003520  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 17930  003522  EC67  F02D         	call	___wmul	;wreg free
 17931  003526  C083  FFD9         	movff	atoi@s,fsr2l
 17932  00352A  C084  FFDA         	movff	atoi@s+1,fsr2h
 17933  00352E  50DF               	movf	indf2,w,c
 17934  003530  0100               	movlb	0	; () banked
 17935  003532  6F85               	movwf	??_atoi& (0+255),b
 17936  003534  6B86               	clrf	(??_atoi+1)& (0+255),b
 17937  003536  517D               	movf	?___wmul& (0+255),w,b
 17938  003538  2785               	addwf	??_atoi& (0+255),f,b
 17939  00353A  517E               	movf	(?___wmul+1)& (0+255),w,b
 17940  00353C  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 17941  00353E  0ED0               	movlw	208
 17942  003540  2585               	addwf	??_atoi& (0+255),w,b
 17943  003542  6F88               	movwf	atoi@a& (0+255),b
 17944  003544  0EFF               	movlw	255
 17945  003546  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 17946  003548  6F89               	movwf	(atoi@a+1)& (0+255),b
 17947  00354A                     l12079:
 17948                           
 17949                           ; BSR set to: 0
 17950  00354A  4B83               	infsnz	atoi@s& (0+255),f,b
 17951  00354C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 17952  00354E                     l2746:
 17953                           
 17954                           ; BSR set to: 0
 17955                           
 17956                           ; BSR set to: 0
 17957  00354E  C083  FFD9         	movff	atoi@s,fsr2l
 17958  003552  C084  FFDA         	movff	atoi@s+1,fsr2h
 17959  003556  50DF               	movf	indf2,w,c
 17960  003558  ECF6  F02D         	call	_isdigit
 17961  00355C  B0D8               	btfsc	status,0,c
 17962  00355E  D7D8               	goto	l2747
 17963  003560  0100               	movlb	0	; () banked
 17964  003562  5187               	movf	atoi@sign& (0+255),w,b
 17965  003564  B4D8               	btfsc	status,2,c
 17966  003566  D00D               	goto	l2749
 17967                           
 17968                           ; BSR set to: 0
 17969  003568  C088  F085         	movff	atoi@a,??_atoi
 17970  00356C  C089  F086         	movff	atoi@a+1,??_atoi+1
 17971  003570  1F85               	comf	??_atoi& (0+255),f,b
 17972  003572  1F86               	comf	(??_atoi+1)& (0+255),f,b
 17973  003574  4B85               	infsnz	??_atoi& (0+255),f,b
 17974  003576  2B86               	incf	(??_atoi+1)& (0+255),f,b
 17975  003578  C085  F083         	movff	??_atoi,?_atoi
 17976  00357C  C086  F084         	movff	??_atoi+1,?_atoi+1
 17977  003580  0012               	return	
 17978  003582                     l2749:
 17979                           
 17980                           ; BSR set to: 0
 17981  003582  C088  F083         	movff	atoi@a,?_atoi
 17982  003586  C089  F084         	movff	atoi@a+1,?_atoi+1
 17983                           
 17984                           ; BSR set to: 0
 17985  00358A  0012               	return		;funcret
 17986  00358C                     __end_of_atoi:
 17987                           	opt stack 0
 17988                           tosu	equ	0xFFF
 17989                           tosh	equ	0xFFE
 17990                           tosl	equ	0xFFD
 17991                           pclath	equ	0xFFA
 17992                           tblptru	equ	0xFF8
 17993                           tblptrh	equ	0xFF7
 17994                           tblptrl	equ	0xFF6
 17995                           tablat	equ	0xFF5
 17996                           prodh	equ	0xFF4
 17997                           prodl	equ	0xFF3
 17998                           intcon	equ	0xFF2
 17999                           intcon2	equ	0xFF1
 18000                           intcon3	equ	0xFF0
 18001                           indf0	equ	0xFEF
 18002                           postinc0	equ	0xFEE
 18003                           plusw0	equ	0xFEB
 18004                           fsr0h	equ	0xFEA
 18005                           fsr0l	equ	0xFE9
 18006                           wreg	equ	0xFE8
 18007                           indf1	equ	0xFE7
 18008                           postinc1	equ	0xFE6
 18009                           postdec1	equ	0xFE5
 18010                           plusw1	equ	0xFE3
 18011                           fsr1h	equ	0xFE2
 18012                           fsr1l	equ	0xFE1
 18013                           indf2	equ	0xFDF
 18014                           postinc2	equ	0xFDE
 18015                           postdec2	equ	0xFDD
 18016                           plusw2	equ	0xFDB
 18017                           fsr2h	equ	0xFDA
 18018                           fsr2l	equ	0xFD9
 18019                           status	equ	0xFD8
 18020                           
 18021 ;; *************** function _isdigit *****************
 18022 ;; Defined at:
 18023 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;  c               1    wreg     unsigned char 
 18026 ;; Auto vars:     Size  Location     Type
 18027 ;;  c               1   31[BANK0 ] unsigned char 
 18028 ;; Return value:  Size  Location     Type
 18029 ;;		None               void
 18030 ;; Registers used:
 18031 ;;		wreg, status,2, status,0
 18032 ;; Tracked objects:
 18033 ;;		On entry : 0/0
 18034 ;;		On exit  : 0/0
 18035 ;;		Unchanged: 0/0
 18036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18038 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18040 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18041 ;;Total ram usage:        3 bytes
 18042 ;; Hardware stack levels used:    1
 18043 ;; Hardware stack levels required when called:   11
 18044 ;; This function calls:
 18045 ;;		Nothing
 18046 ;; This function is called by:
 18047 ;;		_atoi
 18048 ;;		_strtol
 18049 ;;		_xtoi
 18050 ;;		_isxdigit
 18051 ;; This function uses a non-reentrant model
 18052 ;;
 18053                           
 18054                           	psect	text77
 18055  005BEC                     __ptext77:
 18056                           	opt stack 0
 18057  005BEC                     _isdigit:
 18058                           	opt stack 12
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;incstack = 0
 18062                           ;isdigit@c stored from wreg
 18063  005BEC  0100               	movlb	0	; () banked
 18064  005BEE  6F7F               	movwf	isdigit@c& (0+255),b
 18065  005BF0  0E00               	movlw	0
 18066  005BF2  0100               	movlb	0	; () banked
 18067  005BF4  6F7E               	movwf	_isdigit$6124& (0+255),b
 18068                           
 18069                           ; BSR set to: 0
 18070  005BF6  0E3A               	movlw	58
 18071  005BF8  617F               	cpfslt	isdigit@c& (0+255),b
 18072  005BFA  D005               	goto	l2921
 18073                           
 18074                           ; BSR set to: 0
 18075  005BFC  0E2F               	movlw	47
 18076  005BFE  657F               	cpfsgt	isdigit@c& (0+255),b
 18077  005C00  D002               	goto	l2921
 18078                           
 18079                           ; BSR set to: 0
 18080  005C02  0E01               	movlw	1
 18081  005C04  6F7E               	movwf	_isdigit$6124& (0+255),b
 18082  005C06                     l2921:
 18083                           
 18084                           ; BSR set to: 0
 18085                           
 18086                           ; BSR set to: 0
 18087  005C06  C07E  F07D         	movff	_isdigit$6124,??_isdigit
 18088  005C0A  317D               	rrcf	??_isdigit& (0+255),w,b
 18089  005C0C  0012               	return	
 18090  005C0E                     __end_of_isdigit:
 18091                           	opt stack 0
 18092                           tosu	equ	0xFFF
 18093                           tosh	equ	0xFFE
 18094                           tosl	equ	0xFFD
 18095                           pclath	equ	0xFFA
 18096                           tblptru	equ	0xFF8
 18097                           tblptrh	equ	0xFF7
 18098                           tblptrl	equ	0xFF6
 18099                           tablat	equ	0xFF5
 18100                           prodh	equ	0xFF4
 18101                           prodl	equ	0xFF3
 18102                           intcon	equ	0xFF2
 18103                           intcon2	equ	0xFF1
 18104                           intcon3	equ	0xFF0
 18105                           indf0	equ	0xFEF
 18106                           postinc0	equ	0xFEE
 18107                           plusw0	equ	0xFEB
 18108                           fsr0h	equ	0xFEA
 18109                           fsr0l	equ	0xFE9
 18110                           wreg	equ	0xFE8
 18111                           indf1	equ	0xFE7
 18112                           postinc1	equ	0xFE6
 18113                           postdec1	equ	0xFE5
 18114                           plusw1	equ	0xFE3
 18115                           fsr1h	equ	0xFE2
 18116                           fsr1l	equ	0xFE1
 18117                           indf2	equ	0xFDF
 18118                           postinc2	equ	0xFDE
 18119                           postdec2	equ	0xFDD
 18120                           plusw2	equ	0xFDB
 18121                           fsr2h	equ	0xFDA
 18122                           fsr2l	equ	0xFD9
 18123                           status	equ	0xFD8
 18124                           
 18125 ;; *************** function _OsTmr_Wait *****************
 18126 ;; Defined at:
 18127 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 18128 ;; Parameters:    Size  Location     Type
 18129 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 18130 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 18131 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;  Ret             1   65[BANK0 ] enum E7749
 18134 ;; Return value:  Size  Location     Type
 18135 ;;                  1    wreg      enum E7749
 18136 ;; Registers used:
 18137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18138 ;; Tracked objects:
 18139 ;;		On entry : 0/0
 18140 ;;		On exit  : 0/0
 18141 ;;		Unchanged: 0/0
 18142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18143 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18146 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18147 ;;Total ram usage:        7 bytes
 18148 ;; Hardware stack levels used:    1
 18149 ;; Hardware stack levels required when called:   14
 18150 ;; This function calls:
 18151 ;;		_OsTmr_GetTimerStatus
 18152 ;;		_OsTmr_StartTimer
 18153 ;; This function is called by:
 18154 ;;		_Terminal
 18155 ;;		_I2cSlv_QueryI2cData
 18156 ;; This function uses a non-reentrant model
 18157 ;;
 18158                           
 18159                           	psect	text78
 18160  004A2E                     __ptext78:
 18161                           	opt stack 0
 18162  004A2E                     _OsTmr_Wait:
 18163                           	opt stack 11
 18164                           
 18165                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 18166                           
 18167                           ; BSR set to: 0
 18168                           ;incstack = 0
 18169  004A2E  0E00               	movlw	0
 18170  004A30  0100               	movlb	0	; () banked
 18171  004A32  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18172                           
 18173                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 18174  004A34  D02D               	goto	l855
 18175  004A36                     
 18176                           ; BSR set to: 0
 18177                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 18178                           
 18179                           ; BSR set to: 0
 18180  004A36  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 18181  004A3A  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 18182  004A3E  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 18183  004A42  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 18184  004A46  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 18185  004A4A  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 18186  004A4E  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 18187                           
 18188                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 18189  004A52  0100               	movlb	0	; () banked
 18190  004A54  EE20 F00A          	lfsr	2,10
 18191  004A58  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18192  004A5A  26D9               	addwf	fsr2l,f,c
 18193  004A5C  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18194  004A5E  22DA               	addwfc	fsr2h,f,c
 18195  004A60  0E01               	movlw	1
 18196  004A62  6EDF               	movwf	indf2,c
 18197                           
 18198                           ;os_timers.c: 165: break;
 18199  004A64  D022               	goto	l857
 18200  004A66                     
 18201                           ; BSR set to: 0
 18202                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 18203                           
 18204                           ; BSR set to: 0
 18205  004A66  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 18206  004A6A  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 18207  004A6E  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 18208  004A72  06E8               	decf	wreg,f,c
 18209  004A74  A4D8               	btfss	status,2,c
 18210  004A76  D019               	goto	l857
 18211                           
 18212                           ;os_timers.c: 170: {
 18213                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 18214  004A78  0100               	movlb	0	; () banked
 18215  004A7A  EE20 F00A          	lfsr	2,10
 18216  004A7E  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18217  004A80  26D9               	addwf	fsr2l,f,c
 18218  004A82  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18219  004A84  22DA               	addwfc	fsr2h,f,c
 18220  004A86  0E00               	movlw	0
 18221  004A88  6EDF               	movwf	indf2,c
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;os_timers.c: 174: Ret = DelayExpired;
 18225  004A8A  0E01               	movlw	1
 18226  004A8C  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;os_timers.c: 180: }
 18230                           
 18231                           ; BSR set to: 0
 18232                           ;os_timers.c: 179: break;
 18233                           
 18234                           ;os_timers.c: 178: default:
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;os_timers.c: 175: }
 18238                           ;os_timers.c: 176: break;
 18239  004A8E  D00D               	goto	l857
 18240  004A90                     l855:
 18241                           
 18242                           ; BSR set to: 0
 18243                           
 18244                           ; BSR set to: 0
 18245  004A90  EE20 F00A          	lfsr	2,10
 18246  004A94  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 18247  004A96  26D9               	addwf	fsr2l,f,c
 18248  004A98  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 18249  004A9A  22DA               	addwfc	fsr2h,f,c
 18250  004A9C  50DF               	movf	indf2,w,c
 18251                           
 18252                           ; Switch size 1, requested type "space"
 18253                           ; Number of cases is 2, Range of values is 0 to 1
 18254                           ; switch strategies available:
 18255                           ; Name         Instructions Cycles
 18256                           ; simple_byte            7     4 (average)
 18257                           ;	Chosen strategy is simple_byte
 18258  004A9E  0A00               	xorlw	0	; case 0
 18259  004AA0  B4D8               	btfsc	status,2,c
 18260  004AA2  D7C9               	goto	l856
 18261  004AA4  0A01               	xorlw	1	; case 1
 18262  004AA6  B4D8               	btfsc	status,2,c
 18263  004AA8  D7DE               	goto	l858
 18264  004AAA                     l857:
 18265                           
 18266                           ;os_timers.c: 182: return Ret;
 18267                           
 18268                           ; BSR set to: 0
 18269  004AAA  0100               	movlb	0	; () banked
 18270  004AAC  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 18271  004AAE  0012               	return	
 18272  004AB0                     __end_of_OsTmr_Wait:
 18273                           	opt stack 0
 18274                           tosu	equ	0xFFF
 18275                           tosh	equ	0xFFE
 18276                           tosl	equ	0xFFD
 18277                           pclath	equ	0xFFA
 18278                           tblptru	equ	0xFF8
 18279                           tblptrh	equ	0xFF7
 18280                           tblptrl	equ	0xFF6
 18281                           tablat	equ	0xFF5
 18282                           prodh	equ	0xFF4
 18283                           prodl	equ	0xFF3
 18284                           intcon	equ	0xFF2
 18285                           intcon2	equ	0xFF1
 18286                           intcon3	equ	0xFF0
 18287                           indf0	equ	0xFEF
 18288                           postinc0	equ	0xFEE
 18289                           plusw0	equ	0xFEB
 18290                           fsr0h	equ	0xFEA
 18291                           fsr0l	equ	0xFE9
 18292                           wreg	equ	0xFE8
 18293                           indf1	equ	0xFE7
 18294                           postinc1	equ	0xFE6
 18295                           postdec1	equ	0xFE5
 18296                           plusw1	equ	0xFE3
 18297                           fsr1h	equ	0xFE2
 18298                           fsr1l	equ	0xFE1
 18299                           indf2	equ	0xFDF
 18300                           postinc2	equ	0xFDE
 18301                           postdec2	equ	0xFDD
 18302                           plusw2	equ	0xFDB
 18303                           fsr2h	equ	0xFDA
 18304                           fsr2l	equ	0xFD9
 18305                           status	equ	0xFD8
 18306                           
 18307 ;; *************** function _I2cSlv_SendI2cMsg *****************
 18308 ;; Defined at:
 18309 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18310 ;; Parameters:    Size  Location     Type
 18311 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 18312 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 18313 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18314 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18315 ;; Auto vars:     Size  Location     Type
 18316 ;;  TxSts           1   36[BANK0 ] unsigned char 
 18317 ;; Return value:  Size  Location     Type
 18318 ;;                  1    wreg      unsigned char 
 18319 ;; Registers used:
 18320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18321 ;; Tracked objects:
 18322 ;;		On entry : 0/0
 18323 ;;		On exit  : 0/0
 18324 ;;		Unchanged: 0/0
 18325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18329 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18330 ;;Total ram usage:        5 bytes
 18331 ;; Hardware stack levels used:    1
 18332 ;; Hardware stack levels required when called:   12
 18333 ;; This function calls:
 18334 ;;		_GenerateEvt
 18335 ;; This function is called by:
 18336 ;;		_Terminal
 18337 ;;		_I2cSlv_QueryI2cData
 18338 ;;		_triggerRelay
 18339 ;; This function uses a non-reentrant model
 18340 ;;
 18341                           
 18342                           	psect	text79
 18343  005738                     __ptext79:
 18344                           	opt stack 0
 18345  005738                     _I2cSlv_SendI2cMsg:
 18346                           	opt stack 13
 18347                           
 18348                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;incstack = 0
 18352  005738  0E00               	movlw	0
 18353  00573A  0100               	movlb	0	; () banked
 18354  00573C  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 18358  00573E  05CC               	decf	_I2cComSts& (0+255),w,b
 18359  005740  B4D8               	btfsc	status,2,c
 18360  005742  D015               	goto	l1395
 18361                           
 18362                           ; BSR set to: 0
 18363                           ;i2c_slv.c: 257: {
 18364                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 18365  005744  C082  F39D         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 18369  005748  0E00               	movlw	0
 18370  00574A  0103               	movlb	3	; () banked
 18371  00574C  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 18372                           
 18373                           ; BSR set to: 3
 18374                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 18375  00574E  C083  F3A1         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 18376                           
 18377                           ; BSR set to: 3
 18378                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 18379  005752  C080  F39F         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 18380  005756  C081  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 18381                           
 18382                           ; BSR set to: 3
 18383                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 18384  00575A  0ED6               	movlw	low _I2cWriteDataEvt
 18385  00575C  0100               	movlb	0	; () banked
 18386  00575E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18387  005760  0E00               	movlw	high _I2cWriteDataEvt
 18388  005762  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18389  005764  ECA4  F02E         	call	_GenerateEvt	;wreg free
 18390                           
 18391                           ;i2c_slv.c: 267: TxSts = 1u;
 18392  005768  0E01               	movlw	1
 18393  00576A  0100               	movlb	0	; () banked
 18394  00576C  D001               	goto	L18
 18395  00576E                     l1395:
 18396                           
 18397                           ; BSR set to: 0
 18398                           ;i2c_slv.c: 269: else
 18399                           ;i2c_slv.c: 270: {
 18400                           ;i2c_slv.c: 272: TxSts = 0u;
 18401                           
 18402                           ; BSR set to: 0
 18403  00576E  0E00               	movlw	0
 18404  005770                     L18:
 18405  005770  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;i2c_slv.c: 273: }
 18409                           ;i2c_slv.c: 275: return TxSts;
 18410  005772  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 18411  005774  0012               	return	
 18412  005776                     __end_of_I2cSlv_SendI2cMsg:
 18413                           	opt stack 0
 18414                           tosu	equ	0xFFF
 18415                           tosh	equ	0xFFE
 18416                           tosl	equ	0xFFD
 18417                           pclath	equ	0xFFA
 18418                           tblptru	equ	0xFF8
 18419                           tblptrh	equ	0xFF7
 18420                           tblptrl	equ	0xFF6
 18421                           tablat	equ	0xFF5
 18422                           prodh	equ	0xFF4
 18423                           prodl	equ	0xFF3
 18424                           intcon	equ	0xFF2
 18425                           intcon2	equ	0xFF1
 18426                           intcon3	equ	0xFF0
 18427                           indf0	equ	0xFEF
 18428                           postinc0	equ	0xFEE
 18429                           plusw0	equ	0xFEB
 18430                           fsr0h	equ	0xFEA
 18431                           fsr0l	equ	0xFE9
 18432                           wreg	equ	0xFE8
 18433                           indf1	equ	0xFE7
 18434                           postinc1	equ	0xFE6
 18435                           postdec1	equ	0xFE5
 18436                           plusw1	equ	0xFE3
 18437                           fsr1h	equ	0xFE2
 18438                           fsr1l	equ	0xFE1
 18439                           indf2	equ	0xFDF
 18440                           postinc2	equ	0xFDE
 18441                           postdec2	equ	0xFDD
 18442                           plusw2	equ	0xFDB
 18443                           fsr2h	equ	0xFDA
 18444                           fsr2l	equ	0xFD9
 18445                           status	equ	0xFD8
 18446                           
 18447 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 18448 ;; Defined at:
 18449 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18450 ;; Parameters:    Size  Location     Type
 18451 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 18452 ;;		 -> Terminal@TermRxBuffer(50), 
 18453 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 18454 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;  RxSts           1   36[BANK0 ] unsigned char 
 18457 ;; Return value:  Size  Location     Type
 18458 ;;                  1    wreg      unsigned char 
 18459 ;; Registers used:
 18460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18461 ;; Tracked objects:
 18462 ;;		On entry : 0/0
 18463 ;;		On exit  : 0/0
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18466 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18469 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18470 ;;Total ram usage:        5 bytes
 18471 ;; Hardware stack levels used:    1
 18472 ;; Hardware stack levels required when called:   12
 18473 ;; This function calls:
 18474 ;;		_GenerateEvt
 18475 ;; This function is called by:
 18476 ;;		_Terminal
 18477 ;;		_I2cSlv_QueryI2cData
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           	psect	text80
 18482  00567A                     __ptext80:
 18483                           	opt stack 0
 18484  00567A                     _I2cSlv_ReceiveI2cMsg:
 18485                           	opt stack 13
 18486                           
 18487                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;incstack = 0
 18491  00567A  0E00               	movlw	0
 18492  00567C  0100               	movlb	0	; () banked
 18493  00567E  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18494                           
 18495                           ; BSR set to: 0
 18496                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 18497  005680  0E02               	movlw	2
 18498  005682  19CC               	xorwf	_I2cComSts& (0+255),w,b
 18499  005684  B4D8               	btfsc	status,2,c
 18500  005686  D016               	goto	l1400
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;i2c_slv.c: 294: {
 18504                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 18505  005688  C082  F397         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 18506                           
 18507                           ; BSR set to: 0
 18508                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 18509  00568C  0E01               	movlw	1
 18510  00568E  0103               	movlb	3	; () banked
 18511  005690  6F98               	movwf	(_I2cRxPacket+1)& (0+255),b
 18512                           
 18513                           ; BSR set to: 3
 18514                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 18515  005692  C083  F39B         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 18516                           
 18517                           ; BSR set to: 3
 18518                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 18519  005696  C080  F399         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 18520  00569A  C081  F39A         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 18521                           
 18522                           ; BSR set to: 3
 18523                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 18524  00569E  0ED5               	movlw	low _I2cReadDataEvt
 18525  0056A0  0100               	movlb	0	; () banked
 18526  0056A2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 18527  0056A4  0E00               	movlw	high _I2cReadDataEvt
 18528  0056A6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 18529  0056A8  ECA4  F02E         	call	_GenerateEvt	;wreg free
 18530                           
 18531                           ;i2c_slv.c: 304: RxSts = 1u;
 18532  0056AC  0E01               	movlw	1
 18533  0056AE  0100               	movlb	0	; () banked
 18534  0056B0  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18535                           
 18536                           ;i2c_slv.c: 305: }
 18537  0056B2  0012               	return	
 18538  0056B4                     l1400:
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;i2c_slv.c: 306: else
 18542                           ;i2c_slv.c: 307: {
 18543                           ;i2c_slv.c: 309: RxSts = 0u;
 18544                           
 18545                           ; BSR set to: 0
 18546  0056B4  0E00               	movlw	0
 18547  0056B6  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 18548                           
 18549                           ; BSR set to: 0
 18550  0056B8  0012               	return	
 18551  0056BA                     __end_of_I2cSlv_ReceiveI2cMsg:
 18552                           	opt stack 0
 18553                           tosu	equ	0xFFF
 18554                           tosh	equ	0xFFE
 18555                           tosl	equ	0xFFD
 18556                           pclath	equ	0xFFA
 18557                           tblptru	equ	0xFF8
 18558                           tblptrh	equ	0xFF7
 18559                           tblptrl	equ	0xFF6
 18560                           tablat	equ	0xFF5
 18561                           prodh	equ	0xFF4
 18562                           prodl	equ	0xFF3
 18563                           intcon	equ	0xFF2
 18564                           intcon2	equ	0xFF1
 18565                           intcon3	equ	0xFF0
 18566                           indf0	equ	0xFEF
 18567                           postinc0	equ	0xFEE
 18568                           plusw0	equ	0xFEB
 18569                           fsr0h	equ	0xFEA
 18570                           fsr0l	equ	0xFE9
 18571                           wreg	equ	0xFE8
 18572                           indf1	equ	0xFE7
 18573                           postinc1	equ	0xFE6
 18574                           postdec1	equ	0xFE5
 18575                           plusw1	equ	0xFE3
 18576                           fsr1h	equ	0xFE2
 18577                           fsr1l	equ	0xFE1
 18578                           indf2	equ	0xFDF
 18579                           postinc2	equ	0xFDE
 18580                           postdec2	equ	0xFDD
 18581                           plusw2	equ	0xFDB
 18582                           fsr2h	equ	0xFDA
 18583                           fsr2l	equ	0xFD9
 18584                           status	equ	0xFD8
 18585                           
 18586 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 18587 ;; Defined at:
 18588 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;		None
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;  Result          1   33[BANK0 ] enum E8915
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  1    wreg      enum E8915
 18595 ;; Registers used:
 18596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18597 ;; Tracked objects:
 18598 ;;		On entry : 0/0
 18599 ;;		On exit  : 0/0
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18606 ;;Total ram usage:        1 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:   12
 18609 ;; This function calls:
 18610 ;;		_ReceiveEvt
 18611 ;; This function is called by:
 18612 ;;		_Terminal
 18613 ;;		_I2cSlv_QueryI2cData
 18614 ;; This function uses a non-reentrant model
 18615 ;;
 18616                           
 18617                           	psect	text81
 18618  005C0E                     __ptext81:
 18619                           	opt stack 0
 18620  005C0E                     _I2cSlv_I2cReadMsgSts:
 18621                           	opt stack 13
 18622                           
 18623                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 18624                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;incstack = 0
 18628  005C0E  0E9C               	movlw	low (_I2cRxPacket+5)
 18629  005C10  0100               	movlb	0	; () banked
 18630  005C12  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 18631  005C14  0E03               	movlw	high (_I2cRxPacket+5)
 18632  005C16  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 18633  005C18  EC10  F02D         	call	_ReceiveEvt	;wreg free
 18634  005C1C  0900               	iorlw	0
 18635  005C1E  B4D8               	btfsc	status,2,c
 18636  005C20  D002               	goto	l1405
 18637                           
 18638                           ;i2c_slv.c: 331: {
 18639                           ;i2c_slv.c: 332: Result = MessageReceived;
 18640  005C22  0E01               	movlw	1
 18641  005C24  D001               	goto	L19
 18642  005C26                     l1405:
 18643                           
 18644                           ;i2c_slv.c: 334: else
 18645                           ;i2c_slv.c: 335: {
 18646                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 18647                           
 18648                           ; BSR set to: 0
 18649  005C26  0E00               	movlw	0
 18650  005C28                     L19:
 18651  005C28  0100               	movlb	0	; () banked
 18652  005C2A  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;i2c_slv.c: 337: }
 18656                           ;i2c_slv.c: 339: return Result;
 18657  005C2C  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 18658  005C2E  0012               	return	
 18659  005C30                     __end_of_I2cSlv_I2cReadMsgSts:
 18660                           	opt stack 0
 18661                           tosu	equ	0xFFF
 18662                           tosh	equ	0xFFE
 18663                           tosl	equ	0xFFD
 18664                           pclath	equ	0xFFA
 18665                           tblptru	equ	0xFF8
 18666                           tblptrh	equ	0xFF7
 18667                           tblptrl	equ	0xFF6
 18668                           tablat	equ	0xFF5
 18669                           prodh	equ	0xFF4
 18670                           prodl	equ	0xFF3
 18671                           intcon	equ	0xFF2
 18672                           intcon2	equ	0xFF1
 18673                           intcon3	equ	0xFF0
 18674                           indf0	equ	0xFEF
 18675                           postinc0	equ	0xFEE
 18676                           plusw0	equ	0xFEB
 18677                           fsr0h	equ	0xFEA
 18678                           fsr0l	equ	0xFE9
 18679                           wreg	equ	0xFE8
 18680                           indf1	equ	0xFE7
 18681                           postinc1	equ	0xFE6
 18682                           postdec1	equ	0xFE5
 18683                           plusw1	equ	0xFE3
 18684                           fsr1h	equ	0xFE2
 18685                           fsr1l	equ	0xFE1
 18686                           indf2	equ	0xFDF
 18687                           postinc2	equ	0xFDE
 18688                           postdec2	equ	0xFDD
 18689                           plusw2	equ	0xFDB
 18690                           fsr2h	equ	0xFDA
 18691                           fsr2l	equ	0xFD9
 18692                           status	equ	0xFD8
 18693                           
 18694 ;; *************** function _Rtcm_SetRtccDate *****************
 18695 ;; Defined at:
 18696 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18699 ;; Auto vars:     Size  Location     Type
 18700 ;;		None
 18701 ;; Return value:  Size  Location     Type
 18702 ;;                  1    wreg      void 
 18703 ;; Registers used:
 18704 ;;		wreg, status,2, status,0, cstack
 18705 ;; Tracked objects:
 18706 ;;		On entry : 0/0
 18707 ;;		On exit  : 0/0
 18708 ;;		Unchanged: 0/0
 18709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18710 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18713 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18714 ;;Total ram usage:        8 bytes
 18715 ;; Hardware stack levels used:    1
 18716 ;; Hardware stack levels required when called:   13
 18717 ;; This function calls:
 18718 ;;		_Rtcc_LockRtc
 18719 ;;		_Rtcc_SetRtccValue
 18720 ;;		_Rtcc_UnlockRtc
 18721 ;; This function is called by:
 18722 ;;		_Rtcm_MainTask
 18723 ;; This function uses a non-reentrant model
 18724 ;;
 18725                           
 18726                           	psect	text82
 18727  005130                     __ptext82:
 18728                           	opt stack 0
 18729  005130                     _Rtcm_SetRtccDate:
 18730                           	opt stack 14
 18731                           
 18732                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18733                           
 18734                           ; BSR set to: 0
 18735                           ;incstack = 0
 18736  005130  ECF8  F02E         	call	_Rtcc_UnlockRtc	;wreg free
 18737                           
 18738                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18739  005134  0100               	movlb	0	; () banked
 18740  005136  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18741  005138  0F30               	addlw	48
 18742  00513A  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18743  00513C  0E00               	movlw	0
 18744  00513E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18745                           
 18746                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18747  005142  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18748  005146  0E01               	movlw	1
 18749  005148  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18750                           
 18751                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18752  00514C  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18753  005150  0E02               	movlw	2
 18754  005152  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18755                           
 18756                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18757  005156  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18758  00515A  0E03               	movlw	3
 18759  00515C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18760                           
 18761                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18762  005160  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18763  005164  0E04               	movlw	4
 18764  005166  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18765                           
 18766                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18767  00516A  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18768  00516E  0E05               	movlw	5
 18769  005170  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18770                           
 18771                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18772  005174  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18773  005178  0E06               	movlw	6
 18774  00517A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18775                           
 18776                           ;rtcm.c: 191: Rtcc_LockRtc();
 18777  00517E  EC00  F02F         	call	_Rtcc_LockRtc	;wreg free
 18778  005182  0012               	return		;funcret
 18779  005184                     __end_of_Rtcm_SetRtccDate:
 18780                           	opt stack 0
 18781                           tosu	equ	0xFFF
 18782                           tosh	equ	0xFFE
 18783                           tosl	equ	0xFFD
 18784                           pclath	equ	0xFFA
 18785                           tblptru	equ	0xFF8
 18786                           tblptrh	equ	0xFF7
 18787                           tblptrl	equ	0xFF6
 18788                           tablat	equ	0xFF5
 18789                           prodh	equ	0xFF4
 18790                           prodl	equ	0xFF3
 18791                           intcon	equ	0xFF2
 18792                           intcon2	equ	0xFF1
 18793                           intcon3	equ	0xFF0
 18794                           indf0	equ	0xFEF
 18795                           postinc0	equ	0xFEE
 18796                           plusw0	equ	0xFEB
 18797                           fsr0h	equ	0xFEA
 18798                           fsr0l	equ	0xFE9
 18799                           wreg	equ	0xFE8
 18800                           indf1	equ	0xFE7
 18801                           postinc1	equ	0xFE6
 18802                           postdec1	equ	0xFE5
 18803                           plusw1	equ	0xFE3
 18804                           fsr1h	equ	0xFE2
 18805                           fsr1l	equ	0xFE1
 18806                           indf2	equ	0xFDF
 18807                           postinc2	equ	0xFDE
 18808                           postdec2	equ	0xFDD
 18809                           plusw2	equ	0xFDB
 18810                           fsr2h	equ	0xFDA
 18811                           fsr2l	equ	0xFD9
 18812                           status	equ	0xFD8
 18813                           
 18814 ;; *************** function _Rtcc_UnlockRtc *****************
 18815 ;; Defined at:
 18816 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18817 ;; Parameters:    Size  Location     Type
 18818 ;;		None
 18819 ;; Auto vars:     Size  Location     Type
 18820 ;;		None
 18821 ;; Return value:  Size  Location     Type
 18822 ;;                  1    wreg      void 
 18823 ;; Registers used:
 18824 ;;		None
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18834 ;;Total ram usage:        0 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; Hardware stack levels required when called:   11
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_Rtcm_MainTask
 18841 ;;		_Rtcm_SetRtccDate
 18842 ;;		_Rtcm_SetRtccAlarm
 18843 ;; This function uses a non-reentrant model
 18844 ;;
 18845                           
 18846                           	psect	text83
 18847  005DF0                     __ptext83:
 18848                           	opt stack 0
 18849  005DF0                     _Rtcc_UnlockRtc:
 18850                           	opt stack 15
 18851                           
 18852                           ;incstack = 0
 18853  005DF0  010F               	movlb	15	;# 
 18854  005DF2  0E55               	movlw	85	;# 
 18855  005DF4  6EA7               	movwf	4007,c	;# 
 18856  005DF6  0EAA               	movlw	170	;# 
 18857  005DF8  6EA7               	movwf	4007,c	;# 
 18858                           
 18859                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18860  005DFA  010F               	movlb	15	; () banked
 18861  005DFC  8B3F               	bsf	63,5,b	;volatile
 18862                           
 18863                           ; BSR set to: 15
 18864  005DFE  0012               	return		;funcret
 18865  005E00                     __end_of_Rtcc_UnlockRtc:
 18866                           	opt stack 0
 18867                           tosu	equ	0xFFF
 18868                           tosh	equ	0xFFE
 18869                           tosl	equ	0xFFD
 18870                           pclath	equ	0xFFA
 18871                           tblptru	equ	0xFF8
 18872                           tblptrh	equ	0xFF7
 18873                           tblptrl	equ	0xFF6
 18874                           tablat	equ	0xFF5
 18875                           prodh	equ	0xFF4
 18876                           prodl	equ	0xFF3
 18877                           intcon	equ	0xFF2
 18878                           intcon2	equ	0xFF1
 18879                           intcon3	equ	0xFF0
 18880                           indf0	equ	0xFEF
 18881                           postinc0	equ	0xFEE
 18882                           plusw0	equ	0xFEB
 18883                           fsr0h	equ	0xFEA
 18884                           fsr0l	equ	0xFE9
 18885                           wreg	equ	0xFE8
 18886                           indf1	equ	0xFE7
 18887                           postinc1	equ	0xFE6
 18888                           postdec1	equ	0xFE5
 18889                           plusw1	equ	0xFE3
 18890                           fsr1h	equ	0xFE2
 18891                           fsr1l	equ	0xFE1
 18892                           indf2	equ	0xFDF
 18893                           postinc2	equ	0xFDE
 18894                           postdec2	equ	0xFDD
 18895                           plusw2	equ	0xFDB
 18896                           fsr2h	equ	0xFDA
 18897                           fsr2l	equ	0xFD9
 18898                           status	equ	0xFD8
 18899                           
 18900 ;; *************** function _Rtcc_SetRtccValue *****************
 18901 ;; Defined at:
 18902 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18903 ;; Parameters:    Size  Location     Type
 18904 ;;  RtccPtrVal      1    wreg     enum E7757
 18905 ;;  Value           1   37[BANK0 ] unsigned char 
 18906 ;; Auto vars:     Size  Location     Type
 18907 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18908 ;; Return value:  Size  Location     Type
 18909 ;;                  1    wreg      void 
 18910 ;; Registers used:
 18911 ;;		wreg, status,2, status,0, cstack
 18912 ;; Tracked objects:
 18913 ;;		On entry : 0/0
 18914 ;;		On exit  : 0/0
 18915 ;;		Unchanged: 0/0
 18916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18917 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18919 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18920 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18921 ;;Total ram usage:        4 bytes
 18922 ;; Hardware stack levels used:    1
 18923 ;; Hardware stack levels required when called:   12
 18924 ;; This function calls:
 18925 ;;		___awdiv
 18926 ;;		___awmod
 18927 ;; This function is called by:
 18928 ;;		_Rtcm_SetRtccDate
 18929 ;; This function uses a non-reentrant model
 18930 ;;
 18931                           
 18932                           	psect	text84
 18933  0015EE                     __ptext84:
 18934                           	opt stack 0
 18935  0015EE                     _Rtcc_SetRtccValue:
 18936                           	opt stack 14
 18937                           
 18938                           ; BSR set to: 15
 18939                           ;incstack = 0
 18940                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18941  0015EE  0100               	movlb	0	; () banked
 18942  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18943                           
 18944                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18945  0015F2  D0FC               	goto	l441
 18946  0015F4                     l442:
 18947                           
 18948                           ; BSR set to: 0
 18949                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18950  0015F4  010F               	movlb	15	; () banked
 18951  0015F6  833F               	bsf	63,1,b	;volatile
 18952                           
 18953                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18954  0015F8  813F               	bsf	63,0,b	;volatile
 18955                           
 18956                           ; BSR set to: 15
 18957                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18958  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18959  0015FE  0100               	movlb	0	; () banked
 18960  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18961  001602  0E00               	movlw	0
 18962  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18963  001606  0E0A               	movlw	10
 18964  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18965  00160A  EC58  F025         	call	___awmod	;wreg free
 18966  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18967  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18968  001616  0E0F               	movlw	15
 18969  001618  0100               	movlb	0	; () banked
 18970  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18971  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18972  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18973  001622  0E00               	movlw	0
 18974  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18975  001626  0E0A               	movlw	10
 18976  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18977  00162A  EC50  F024         	call	___awdiv	;wreg free
 18978  00162E  0100               	movlb	0	; () banked
 18979  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18980  001632  0BF0               	andlw	240
 18981  001634  0BF0               	andlw	240
 18982  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18983  001638  6E98               	movwf	3992,c	;volatile
 18984                           
 18985                           ;rtcc_drv.c: 393: break;
 18986  00163A  0012               	return	
 18987  00163C                     l444:
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18991  00163C  010F               	movlb	15	; () banked
 18992  00163E  833F               	bsf	63,1,b	;volatile
 18993                           
 18994                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18995  001640  913F               	bcf	63,0,b	;volatile
 18996                           
 18997                           ; BSR set to: 15
 18998                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18999  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19000  001646  0100               	movlb	0	; () banked
 19001  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19002  00164A  0E00               	movlw	0
 19003  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19004  00164E  0E0A               	movlw	10
 19005  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 19006  001652  EC58  F025         	call	___awmod	;wreg free
 19007  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19008  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19009  00165E  0E0F               	movlw	15
 19010  001660  0100               	movlb	0	; () banked
 19011  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19012  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19013  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19014  00166A  0E00               	movlw	0
 19015  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19016  00166E  0E0A               	movlw	10
 19017  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19018  001672  EC50  F024         	call	___awdiv	;wreg free
 19019  001676  0100               	movlb	0	; () banked
 19020  001678  397D               	swapf	?___awdiv& (0+255),w,b
 19021  00167A  0BF0               	andlw	240
 19022  00167C  0BF0               	andlw	240
 19023  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19024  001680  6E99               	movwf	3993,c	;volatile
 19025                           
 19026                           ;rtcc_drv.c: 401: break;
 19027  001682  0012               	return	
 19028  001684                     l445:
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19032  001684  010F               	movlb	15	; () banked
 19033  001686  833F               	bsf	63,1,b	;volatile
 19034                           
 19035                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19036  001688  913F               	bcf	63,0,b	;volatile
 19037                           
 19038                           ; BSR set to: 15
 19039                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19040  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19041  00168E  0100               	movlb	0	; () banked
 19042  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19043  001692  0E00               	movlw	0
 19044  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19045  001696  0E0A               	movlw	10
 19046  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 19047  00169A  EC58  F025         	call	___awmod	;wreg free
 19048  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19049  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19050  0016A6  0E0F               	movlw	15
 19051  0016A8  0100               	movlb	0	; () banked
 19052  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19053  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19054  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19055  0016B2  0E00               	movlw	0
 19056  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19057  0016B6  0E0A               	movlw	10
 19058  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19059  0016BA  EC50  F024         	call	___awdiv	;wreg free
 19060  0016BE  0100               	movlb	0	; () banked
 19061  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 19062  0016C2  0BF0               	andlw	240
 19063  0016C4  0BF0               	andlw	240
 19064  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19065  0016C8  6E98               	movwf	3992,c	;volatile
 19066                           
 19067                           ;rtcc_drv.c: 409: break;
 19068  0016CA  0012               	return	
 19069  0016CC                     l446:
 19070                           
 19071                           ; BSR set to: 0
 19072                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19073  0016CC  010F               	movlb	15	; () banked
 19074  0016CE  933F               	bcf	63,1,b	;volatile
 19075                           
 19076                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19077  0016D0  813F               	bsf	63,0,b	;volatile
 19078                           
 19079                           ; BSR set to: 15
 19080                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19081  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19082  0016D6  0100               	movlb	0	; () banked
 19083  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19084  0016DA  0E00               	movlw	0
 19085  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19086  0016DE  0E0A               	movlw	10
 19087  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19088  0016E2  EC58  F025         	call	___awmod	;wreg free
 19089  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19090  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19091  0016EE  0E0F               	movlw	15
 19092  0016F0  0100               	movlb	0	; () banked
 19093  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19094  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19095  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19096  0016FA  0E00               	movlw	0
 19097  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19098  0016FE  0E0A               	movlw	10
 19099  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19100  001702  EC50  F024         	call	___awdiv	;wreg free
 19101  001706  0100               	movlb	0	; () banked
 19102  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19103  00170A  0BF0               	andlw	240
 19104  00170C  0BF0               	andlw	240
 19105  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19106  001710  6E99               	movwf	3993,c	;volatile
 19107                           
 19108                           ;rtcc_drv.c: 417: break;
 19109  001712  0012               	return	
 19110  001714                     l447:
 19111                           
 19112                           ; BSR set to: 0
 19113                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19114  001714  010F               	movlb	15	; () banked
 19115  001716  933F               	bcf	63,1,b	;volatile
 19116                           
 19117                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19118  001718  813F               	bsf	63,0,b	;volatile
 19119                           
 19120                           ; BSR set to: 15
 19121                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19122  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19123  00171E  0100               	movlb	0	; () banked
 19124  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19125  001722  0E00               	movlw	0
 19126  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19127  001726  0E0A               	movlw	10
 19128  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19129  00172A  EC58  F025         	call	___awmod	;wreg free
 19130  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19131  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19132  001736  0E0F               	movlw	15
 19133  001738  0100               	movlb	0	; () banked
 19134  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19135  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19136  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19137  001742  0E00               	movlw	0
 19138  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19139  001746  0E0A               	movlw	10
 19140  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19141  00174A  EC50  F024         	call	___awdiv	;wreg free
 19142  00174E  0100               	movlb	0	; () banked
 19143  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19144  001752  0BF0               	andlw	240
 19145  001754  0BF0               	andlw	240
 19146  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19147  001758  6E98               	movwf	3992,c	;volatile
 19148                           
 19149                           ;rtcc_drv.c: 425: break;
 19150  00175A  0012               	return	
 19151  00175C                     l448:
 19152                           
 19153                           ; BSR set to: 0
 19154                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19155  00175C  010F               	movlb	15	; () banked
 19156  00175E  933F               	bcf	63,1,b	;volatile
 19157                           
 19158                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19159  001760  913F               	bcf	63,0,b	;volatile
 19160                           
 19161                           ; BSR set to: 15
 19162                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19163  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19164  001766  0100               	movlb	0	; () banked
 19165  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19166  00176A  0E00               	movlw	0
 19167  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19168  00176E  0E0A               	movlw	10
 19169  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19170  001772  EC58  F025         	call	___awmod	;wreg free
 19171  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19172  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19173  00177E  0E0F               	movlw	15
 19174  001780  0100               	movlb	0	; () banked
 19175  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19176  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19177  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19178  00178A  0E00               	movlw	0
 19179  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19180  00178E  0E0A               	movlw	10
 19181  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19182  001792  EC50  F024         	call	___awdiv	;wreg free
 19183  001796  0100               	movlb	0	; () banked
 19184  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19185  00179A  0BF0               	andlw	240
 19186  00179C  0BF0               	andlw	240
 19187  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19188  0017A0  6E99               	movwf	3993,c	;volatile
 19189                           
 19190                           ;rtcc_drv.c: 433: break;
 19191  0017A2  0012               	return	
 19192  0017A4                     l449:
 19193                           
 19194                           ; BSR set to: 0
 19195                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19196  0017A4  010F               	movlb	15	; () banked
 19197  0017A6  933F               	bcf	63,1,b	;volatile
 19198                           
 19199                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19200  0017A8  913F               	bcf	63,0,b	;volatile
 19201                           
 19202                           ; BSR set to: 15
 19203                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19204  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19205  0017AE  0100               	movlb	0	; () banked
 19206  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19207  0017B2  0E00               	movlw	0
 19208  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19209  0017B6  0E0A               	movlw	10
 19210  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19211  0017BA  EC58  F025         	call	___awmod	;wreg free
 19212  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19213  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19214  0017C6  0E0F               	movlw	15
 19215  0017C8  0100               	movlb	0	; () banked
 19216  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19217  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19218  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19219  0017D2  0E00               	movlw	0
 19220  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19221  0017D6  0E0A               	movlw	10
 19222  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19223  0017DA  EC50  F024         	call	___awdiv	;wreg free
 19224  0017DE  0100               	movlb	0	; () banked
 19225  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19226  0017E2  0BF0               	andlw	240
 19227  0017E4  0BF0               	andlw	240
 19228  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19229  0017E8  6E98               	movwf	3992,c	;volatile
 19230                           
 19231                           ; BSR set to: 0
 19232                           ;rtcc_drv.c: 445: }
 19233                           
 19234                           ; BSR set to: 0
 19235                           ;rtcc_drv.c: 444: break;
 19236                           
 19237                           ;rtcc_drv.c: 443: default:
 19238                           
 19239                           ;rtcc_drv.c: 441: break;
 19240  0017EA  0012               	return	
 19241  0017EC                     l441:
 19242                           
 19243                           ; BSR set to: 0
 19244  0017EC  0100               	movlb	0	; () banked
 19245  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19246                           
 19247                           ; Switch size 1, requested type "space"
 19248                           ; Number of cases is 7, Range of values is 0 to 6
 19249                           ; switch strategies available:
 19250                           ; Name         Instructions Cycles
 19251                           ; simple_byte           22    12 (average)
 19252                           ;	Chosen strategy is simple_byte
 19253  0017F0  0A00               	xorlw	0	; case 0
 19254  0017F2  B4D8               	btfsc	status,2,c
 19255  0017F4  D6FF               	goto	l442
 19256  0017F6  0A01               	xorlw	1	; case 1
 19257  0017F8  B4D8               	btfsc	status,2,c
 19258  0017FA  D720               	goto	l444
 19259  0017FC  0A03               	xorlw	3	; case 2
 19260  0017FE  B4D8               	btfsc	status,2,c
 19261  001800  D741               	goto	l445
 19262  001802  0A01               	xorlw	1	; case 3
 19263  001804  B4D8               	btfsc	status,2,c
 19264  001806  D762               	goto	l446
 19265  001808  0A07               	xorlw	7	; case 4
 19266  00180A  B4D8               	btfsc	status,2,c
 19267  00180C  D783               	goto	l447
 19268  00180E  0A01               	xorlw	1	; case 5
 19269  001810  B4D8               	btfsc	status,2,c
 19270  001812  D7A4               	goto	l448
 19271  001814  0A03               	xorlw	3	; case 6
 19272  001816  A4D8               	btfss	status,2,c
 19273  001818  0012               	return	
 19274  00181A  D7C4               	goto	l449
 19275  00181C                     __end_of_Rtcc_SetRtccValue:
 19276                           	opt stack 0
 19277                           tosu	equ	0xFFF
 19278                           tosh	equ	0xFFE
 19279                           tosl	equ	0xFFD
 19280                           pclath	equ	0xFFA
 19281                           tblptru	equ	0xFF8
 19282                           tblptrh	equ	0xFF7
 19283                           tblptrl	equ	0xFF6
 19284                           tablat	equ	0xFF5
 19285                           prodh	equ	0xFF4
 19286                           prodl	equ	0xFF3
 19287                           intcon	equ	0xFF2
 19288                           intcon2	equ	0xFF1
 19289                           intcon3	equ	0xFF0
 19290                           indf0	equ	0xFEF
 19291                           postinc0	equ	0xFEE
 19292                           plusw0	equ	0xFEB
 19293                           fsr0h	equ	0xFEA
 19294                           fsr0l	equ	0xFE9
 19295                           wreg	equ	0xFE8
 19296                           indf1	equ	0xFE7
 19297                           postinc1	equ	0xFE6
 19298                           postdec1	equ	0xFE5
 19299                           plusw1	equ	0xFE3
 19300                           fsr1h	equ	0xFE2
 19301                           fsr1l	equ	0xFE1
 19302                           indf2	equ	0xFDF
 19303                           postinc2	equ	0xFDE
 19304                           postdec2	equ	0xFDD
 19305                           plusw2	equ	0xFDB
 19306                           fsr2h	equ	0xFDA
 19307                           fsr2l	equ	0xFD9
 19308                           status	equ	0xFD8
 19309                           
 19310 ;; *************** function ___awmod *****************
 19311 ;; Defined at:
 19312 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19313 ;; Parameters:    Size  Location     Type
 19314 ;;  dividend        2   29[BANK0 ] int 
 19315 ;;  divisor         2   31[BANK0 ] int 
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;  sign            1   34[BANK0 ] unsigned char 
 19318 ;;  counter         1   33[BANK0 ] unsigned char 
 19319 ;; Return value:  Size  Location     Type
 19320 ;;                  2   29[BANK0 ] int 
 19321 ;; Registers used:
 19322 ;;		wreg, status,2, status,0
 19323 ;; Tracked objects:
 19324 ;;		On entry : 0/0
 19325 ;;		On exit  : 0/0
 19326 ;;		Unchanged: 0/0
 19327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19331 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19332 ;;Total ram usage:        6 bytes
 19333 ;; Hardware stack levels used:    1
 19334 ;; Hardware stack levels required when called:   11
 19335 ;; This function calls:
 19336 ;;		Nothing
 19337 ;; This function is called by:
 19338 ;;		_Rtcc_SetRtccValue
 19339 ;;		_Rtcc_SetRtccAlarm
 19340 ;; This function uses a non-reentrant model
 19341 ;;
 19342                           
 19343                           	psect	text85
 19344  004AB0                     __ptext85:
 19345                           	opt stack 0
 19346  004AB0                     ___awmod:
 19347                           	opt stack 14
 19348                           
 19349                           ; BSR set to: 0
 19350                           ;incstack = 0
 19351  004AB0  0E00               	movlw	0
 19352  004AB2  0100               	movlb	0	; () banked
 19353  004AB4  6F82               	movwf	___awmod@sign& (0+255),b
 19354                           
 19355                           ; BSR set to: 0
 19356  004AB6  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19357  004AB8  D006               	goto	l2772
 19358                           
 19359                           ; BSR set to: 0
 19360  004ABA  6D7D               	negf	___awmod@dividend& (0+255),b
 19361  004ABC  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19362  004ABE  B0D8               	btfsc	status,0,c
 19363  004AC0  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19364                           
 19365                           ; BSR set to: 0
 19366  004AC2  0E01               	movlw	1
 19367  004AC4  6F82               	movwf	___awmod@sign& (0+255),b
 19368  004AC6                     l2772:
 19369                           
 19370                           ; BSR set to: 0
 19371                           
 19372                           ; BSR set to: 0
 19373  004AC6  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19374  004AC8  D004               	goto	l2773
 19375                           
 19376                           ; BSR set to: 0
 19377  004ACA  6D7F               	negf	___awmod@divisor& (0+255),b
 19378  004ACC  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19379  004ACE  B0D8               	btfsc	status,0,c
 19380  004AD0  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19381  004AD2                     l2773:
 19382                           
 19383                           ; BSR set to: 0
 19384                           
 19385                           ; BSR set to: 0
 19386  004AD2  517F               	movf	___awmod@divisor& (0+255),w,b
 19387  004AD4  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19388  004AD6  B4D8               	btfsc	status,2,c
 19389  004AD8  D018               	goto	l2780
 19390                           
 19391                           ; BSR set to: 0
 19392  004ADA  0E01               	movlw	1
 19393  004ADC  6F81               	movwf	___awmod@counter& (0+255),b
 19394  004ADE  D004               	goto	l2775
 19395  004AE0                     
 19396                           ; BSR set to: 0
 19397                           
 19398                           ; BSR set to: 0
 19399  004AE0  90D8               	bcf	status,0,c
 19400  004AE2  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19401  004AE4  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19402  004AE6  2B81               	incf	___awmod@counter& (0+255),f,b
 19403  004AE8                     l2775:
 19404                           
 19405                           ; BSR set to: 0
 19406                           
 19407                           ; BSR set to: 0
 19408  004AE8  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19409  004AEA  D7FA               	goto	l2776
 19410  004AEC                     u6840:
 19411                           
 19412                           ; BSR set to: 0
 19413                           
 19414                           ; BSR set to: 0
 19415                           
 19416                           ; BSR set to: 0
 19417  004AEC  517F               	movf	___awmod@divisor& (0+255),w,b
 19418  004AEE  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19419  004AF0  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19420  004AF2  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19421  004AF4  A0D8               	btfss	status,0,c
 19422  004AF6  D004               	goto	l2779
 19423                           
 19424                           ; BSR set to: 0
 19425  004AF8  517F               	movf	___awmod@divisor& (0+255),w,b
 19426  004AFA  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19427  004AFC  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19428  004AFE  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19429  004B00                     l2779:
 19430                           
 19431                           ; BSR set to: 0
 19432                           
 19433                           ; BSR set to: 0
 19434  004B00  90D8               	bcf	status,0,c
 19435  004B02  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19436  004B04  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19437                           
 19438                           ; BSR set to: 0
 19439  004B06  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19440  004B08  D7F1               	goto	u6840
 19441  004B0A                     l2780:
 19442                           
 19443                           ; BSR set to: 0
 19444                           
 19445                           ; BSR set to: 0
 19446                           
 19447                           ; BSR set to: 0
 19448  004B0A  5182               	movf	___awmod@sign& (0+255),w,b
 19449  004B0C  B4D8               	btfsc	status,2,c
 19450  004B0E  D004               	goto	l2781
 19451                           
 19452                           ; BSR set to: 0
 19453  004B10  6D7D               	negf	___awmod@dividend& (0+255),b
 19454  004B12  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19455  004B14  B0D8               	btfsc	status,0,c
 19456  004B16  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19457  004B18                     l2781:
 19458                           
 19459                           ; BSR set to: 0
 19460                           
 19461                           ; BSR set to: 0
 19462  004B18  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19463  004B1C  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19464  004B20  0012               	return	
 19465  004B22                     __end_of___awmod:
 19466                           	opt stack 0
 19467                           tosu	equ	0xFFF
 19468                           tosh	equ	0xFFE
 19469                           tosl	equ	0xFFD
 19470                           pclath	equ	0xFFA
 19471                           tblptru	equ	0xFF8
 19472                           tblptrh	equ	0xFF7
 19473                           tblptrl	equ	0xFF6
 19474                           tablat	equ	0xFF5
 19475                           prodh	equ	0xFF4
 19476                           prodl	equ	0xFF3
 19477                           intcon	equ	0xFF2
 19478                           intcon2	equ	0xFF1
 19479                           intcon3	equ	0xFF0
 19480                           indf0	equ	0xFEF
 19481                           postinc0	equ	0xFEE
 19482                           plusw0	equ	0xFEB
 19483                           fsr0h	equ	0xFEA
 19484                           fsr0l	equ	0xFE9
 19485                           wreg	equ	0xFE8
 19486                           indf1	equ	0xFE7
 19487                           postinc1	equ	0xFE6
 19488                           postdec1	equ	0xFE5
 19489                           plusw1	equ	0xFE3
 19490                           fsr1h	equ	0xFE2
 19491                           fsr1l	equ	0xFE1
 19492                           indf2	equ	0xFDF
 19493                           postinc2	equ	0xFDE
 19494                           postdec2	equ	0xFDD
 19495                           plusw2	equ	0xFDB
 19496                           fsr2h	equ	0xFDA
 19497                           fsr2l	equ	0xFD9
 19498                           status	equ	0xFD8
 19499                           
 19500 ;; *************** function ___awdiv *****************
 19501 ;; Defined at:
 19502 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19503 ;; Parameters:    Size  Location     Type
 19504 ;;  dividend        2   29[BANK0 ] int 
 19505 ;;  divisor         2   31[BANK0 ] int 
 19506 ;; Auto vars:     Size  Location     Type
 19507 ;;  quotient        2   35[BANK0 ] int 
 19508 ;;  sign            1   34[BANK0 ] unsigned char 
 19509 ;;  counter         1   33[BANK0 ] unsigned char 
 19510 ;; Return value:  Size  Location     Type
 19511 ;;                  2   29[BANK0 ] int 
 19512 ;; Registers used:
 19513 ;;		wreg, status,2, status,0
 19514 ;; Tracked objects:
 19515 ;;		On entry : 0/0
 19516 ;;		On exit  : 0/0
 19517 ;;		Unchanged: 0/0
 19518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19519 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19520 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19522 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19523 ;;Total ram usage:        8 bytes
 19524 ;; Hardware stack levels used:    1
 19525 ;; Hardware stack levels required when called:   11
 19526 ;; This function calls:
 19527 ;;		Nothing
 19528 ;; This function is called by:
 19529 ;;		_Rtcc_SetRtccValue
 19530 ;;		_Rtcc_SetRtccAlarm
 19531 ;; This function uses a non-reentrant model
 19532 ;;
 19533                           
 19534                           	psect	text86
 19535  0048A0                     __ptext86:
 19536                           	opt stack 0
 19537  0048A0                     ___awdiv:
 19538                           	opt stack 14
 19539                           
 19540                           ; BSR set to: 0
 19541                           ;incstack = 0
 19542  0048A0  0E00               	movlw	0
 19543  0048A2  0100               	movlb	0	; () banked
 19544  0048A4  6F82               	movwf	___awdiv@sign& (0+255),b
 19545                           
 19546                           ; BSR set to: 0
 19547  0048A6  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19548  0048A8  D006               	goto	l2759
 19549                           
 19550                           ; BSR set to: 0
 19551  0048AA  6D7F               	negf	___awdiv@divisor& (0+255),b
 19552  0048AC  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19553  0048AE  B0D8               	btfsc	status,0,c
 19554  0048B0  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19555                           
 19556                           ; BSR set to: 0
 19557  0048B2  0E01               	movlw	1
 19558  0048B4  6F82               	movwf	___awdiv@sign& (0+255),b
 19559  0048B6                     l2759:
 19560                           
 19561                           ; BSR set to: 0
 19562                           
 19563                           ; BSR set to: 0
 19564  0048B6  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19565  0048B8  D006               	goto	l2760
 19566                           
 19567                           ; BSR set to: 0
 19568  0048BA  6D7D               	negf	___awdiv@dividend& (0+255),b
 19569  0048BC  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19570  0048BE  B0D8               	btfsc	status,0,c
 19571  0048C0  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19572                           
 19573                           ; BSR set to: 0
 19574  0048C2  0E01               	movlw	1
 19575  0048C4  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19576  0048C6                     l2760:
 19577                           
 19578                           ; BSR set to: 0
 19579                           
 19580                           ; BSR set to: 0
 19581  0048C6  0E00               	movlw	0
 19582  0048C8  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19583  0048CA  0E00               	movlw	0
 19584  0048CC  6F83               	movwf	___awdiv@quotient& (0+255),b
 19585                           
 19586                           ; BSR set to: 0
 19587  0048CE  517F               	movf	___awdiv@divisor& (0+255),w,b
 19588  0048D0  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19589  0048D2  B4D8               	btfsc	status,2,c
 19590  0048D4  D01C               	goto	l2767
 19591                           
 19592                           ; BSR set to: 0
 19593  0048D6  0E01               	movlw	1
 19594  0048D8  6F81               	movwf	___awdiv@counter& (0+255),b
 19595  0048DA  D004               	goto	l2762
 19596  0048DC                     
 19597                           ; BSR set to: 0
 19598                           
 19599                           ; BSR set to: 0
 19600  0048DC  90D8               	bcf	status,0,c
 19601  0048DE  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19602  0048E0  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19603  0048E2  2B81               	incf	___awdiv@counter& (0+255),f,b
 19604  0048E4                     l2762:
 19605                           
 19606                           ; BSR set to: 0
 19607                           
 19608                           ; BSR set to: 0
 19609  0048E4  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19610  0048E6  D7FA               	goto	l2763
 19611  0048E8                     u6780:
 19612                           
 19613                           ; BSR set to: 0
 19614                           
 19615                           ; BSR set to: 0
 19616                           
 19617                           ; BSR set to: 0
 19618  0048E8  90D8               	bcf	status,0,c
 19619  0048EA  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19620  0048EC  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19621                           
 19622                           ; BSR set to: 0
 19623  0048EE  517F               	movf	___awdiv@divisor& (0+255),w,b
 19624  0048F0  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19625  0048F2  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19626  0048F4  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19627  0048F6  A0D8               	btfss	status,0,c
 19628  0048F8  D005               	goto	l2766
 19629                           
 19630                           ; BSR set to: 0
 19631  0048FA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19632  0048FC  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19633  0048FE  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19634  004900  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19635                           
 19636                           ; BSR set to: 0
 19637  004902  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19638  004904                     l2766:
 19639                           
 19640                           ; BSR set to: 0
 19641                           
 19642                           ; BSR set to: 0
 19643  004904  90D8               	bcf	status,0,c
 19644  004906  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19645  004908  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19646                           
 19647                           ; BSR set to: 0
 19648  00490A  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19649  00490C  D7ED               	goto	u6780
 19650  00490E                     l2767:
 19651                           
 19652                           ; BSR set to: 0
 19653                           
 19654                           ; BSR set to: 0
 19655                           
 19656                           ; BSR set to: 0
 19657  00490E  5182               	movf	___awdiv@sign& (0+255),w,b
 19658  004910  B4D8               	btfsc	status,2,c
 19659  004912  D004               	goto	l2768
 19660                           
 19661                           ; BSR set to: 0
 19662  004914  6D83               	negf	___awdiv@quotient& (0+255),b
 19663  004916  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19664  004918  B0D8               	btfsc	status,0,c
 19665  00491A  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19666  00491C                     l2768:
 19667                           
 19668                           ; BSR set to: 0
 19669                           
 19670                           ; BSR set to: 0
 19671  00491C  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19672  004920  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19673  004924  0012               	return	
 19674  004926                     __end_of___awdiv:
 19675                           	opt stack 0
 19676                           tosu	equ	0xFFF
 19677                           tosh	equ	0xFFE
 19678                           tosl	equ	0xFFD
 19679                           pclath	equ	0xFFA
 19680                           tblptru	equ	0xFF8
 19681                           tblptrh	equ	0xFF7
 19682                           tblptrl	equ	0xFF6
 19683                           tablat	equ	0xFF5
 19684                           prodh	equ	0xFF4
 19685                           prodl	equ	0xFF3
 19686                           intcon	equ	0xFF2
 19687                           intcon2	equ	0xFF1
 19688                           intcon3	equ	0xFF0
 19689                           indf0	equ	0xFEF
 19690                           postinc0	equ	0xFEE
 19691                           plusw0	equ	0xFEB
 19692                           fsr0h	equ	0xFEA
 19693                           fsr0l	equ	0xFE9
 19694                           wreg	equ	0xFE8
 19695                           indf1	equ	0xFE7
 19696                           postinc1	equ	0xFE6
 19697                           postdec1	equ	0xFE5
 19698                           plusw1	equ	0xFE3
 19699                           fsr1h	equ	0xFE2
 19700                           fsr1l	equ	0xFE1
 19701                           indf2	equ	0xFDF
 19702                           postinc2	equ	0xFDE
 19703                           postdec2	equ	0xFDD
 19704                           plusw2	equ	0xFDB
 19705                           fsr2h	equ	0xFDA
 19706                           fsr2l	equ	0xFD9
 19707                           status	equ	0xFD8
 19708                           
 19709 ;; *************** function _Rtcc_LockRtc *****************
 19710 ;; Defined at:
 19711 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19712 ;; Parameters:    Size  Location     Type
 19713 ;;		None
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;		None
 19716 ;; Return value:  Size  Location     Type
 19717 ;;                  1    wreg      void 
 19718 ;; Registers used:
 19719 ;;		None
 19720 ;; Tracked objects:
 19721 ;;		On entry : 0/0
 19722 ;;		On exit  : 0/0
 19723 ;;		Unchanged: 0/0
 19724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19729 ;;Total ram usage:        0 bytes
 19730 ;; Hardware stack levels used:    1
 19731 ;; Hardware stack levels required when called:   11
 19732 ;; This function calls:
 19733 ;;		Nothing
 19734 ;; This function is called by:
 19735 ;;		_Rtcm_MainTask
 19736 ;;		_Rtcm_SetRtccDate
 19737 ;;		_Rtcm_SetRtccAlarm
 19738 ;; This function uses a non-reentrant model
 19739 ;;
 19740                           
 19741                           	psect	text87
 19742  005E00                     __ptext87:
 19743                           	opt stack 0
 19744  005E00                     _Rtcc_LockRtc:
 19745                           	opt stack 15
 19746                           
 19747                           ; BSR set to: 0
 19748                           ;incstack = 0
 19749  005E00  010F               	movlb	15	;# 
 19750  005E02  0E55               	movlw	85	;# 
 19751  005E04  6EA7               	movwf	4007,c	;# 
 19752  005E06  0EAA               	movlw	170	;# 
 19753  005E08  6EA7               	movwf	4007,c	;# 
 19754                           
 19755                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19756  005E0A  010F               	movlb	15	; () banked
 19757  005E0C  9B3F               	bcf	63,5,b	;volatile
 19758                           
 19759                           ; BSR set to: 15
 19760  005E0E  0012               	return		;funcret
 19761  005E10                     __end_of_Rtcc_LockRtc:
 19762                           	opt stack 0
 19763                           tosu	equ	0xFFF
 19764                           tosh	equ	0xFFE
 19765                           tosl	equ	0xFFD
 19766                           pclath	equ	0xFFA
 19767                           tblptru	equ	0xFF8
 19768                           tblptrh	equ	0xFF7
 19769                           tblptrl	equ	0xFF6
 19770                           tablat	equ	0xFF5
 19771                           prodh	equ	0xFF4
 19772                           prodl	equ	0xFF3
 19773                           intcon	equ	0xFF2
 19774                           intcon2	equ	0xFF1
 19775                           intcon3	equ	0xFF0
 19776                           indf0	equ	0xFEF
 19777                           postinc0	equ	0xFEE
 19778                           plusw0	equ	0xFEB
 19779                           fsr0h	equ	0xFEA
 19780                           fsr0l	equ	0xFE9
 19781                           wreg	equ	0xFE8
 19782                           indf1	equ	0xFE7
 19783                           postinc1	equ	0xFE6
 19784                           postdec1	equ	0xFE5
 19785                           plusw1	equ	0xFE3
 19786                           fsr1h	equ	0xFE2
 19787                           fsr1l	equ	0xFE1
 19788                           indf2	equ	0xFDF
 19789                           postinc2	equ	0xFDE
 19790                           postdec2	equ	0xFDD
 19791                           plusw2	equ	0xFDB
 19792                           fsr2h	equ	0xFDA
 19793                           fsr2l	equ	0xFD9
 19794                           status	equ	0xFD8
 19795                           
 19796 ;; *************** function _Rtcm_GetRtccDate *****************
 19797 ;; Defined at:
 19798 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19799 ;; Parameters:    Size  Location     Type
 19800 ;;		None
 19801 ;; Auto vars:     Size  Location     Type
 19802 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19803 ;; Return value:  Size  Location     Type
 19804 ;;                  8   33[BANK0 ] struct _RtccDateType
 19805 ;; Registers used:
 19806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19807 ;; Tracked objects:
 19808 ;;		On entry : 0/0
 19809 ;;		On exit  : 0/0
 19810 ;;		Unchanged: 0/0
 19811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19812 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19813 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19815 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19816 ;;Total ram usage:       17 bytes
 19817 ;; Hardware stack levels used:    1
 19818 ;; Hardware stack levels required when called:   12
 19819 ;; This function calls:
 19820 ;;		_Rtcc_GetRtccValue
 19821 ;; This function is called by:
 19822 ;;		_Rtcm_MainTask
 19823 ;; This function uses a non-reentrant model
 19824 ;;
 19825                           
 19826                           	psect	text88
 19827  004D42                     __ptext88:
 19828                           	opt stack 0
 19829  004D42                     _Rtcm_GetRtccDate:
 19830                           	opt stack 15
 19831                           
 19832                           ;rtcm.c: 204: RtccDateType LocalDate;
 19833                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19834                           
 19835                           ; BSR set to: 15
 19836                           ;incstack = 0
 19837  004D42  0E00               	movlw	0
 19838  004D44  EC31  F023         	call	_Rtcc_GetRtccValue
 19839  004D48  0100               	movlb	0	; () banked
 19840  004D4A  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19841  004D4C  0ED0               	movlw	208
 19842  004D4E  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19843  004D50  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19844  004D52  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19845  004D54  0E07               	movlw	7
 19846  004D56  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19847                           
 19848                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19849  004D58  0E01               	movlw	1
 19850  004D5A  EC31  F023         	call	_Rtcc_GetRtccValue
 19851  004D5E  0100               	movlb	0	; () banked
 19852  004D60  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19853                           
 19854                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19855  004D62  0E02               	movlw	2
 19856  004D64  EC31  F023         	call	_Rtcc_GetRtccValue
 19857  004D68  0100               	movlb	0	; () banked
 19858  004D6A  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19859                           
 19860                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19861  004D6C  0E03               	movlw	3
 19862  004D6E  EC31  F023         	call	_Rtcc_GetRtccValue
 19863  004D72  0100               	movlb	0	; () banked
 19864  004D74  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19865                           
 19866                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19867  004D76  0E04               	movlw	4
 19868  004D78  EC31  F023         	call	_Rtcc_GetRtccValue
 19869  004D7C  0100               	movlb	0	; () banked
 19870  004D7E  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19871                           
 19872                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19873  004D80  0E05               	movlw	5
 19874  004D82  EC31  F023         	call	_Rtcc_GetRtccValue
 19875  004D86  0100               	movlb	0	; () banked
 19876  004D88  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19877                           
 19878                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19879  004D8A  0E06               	movlw	6
 19880  004D8C  EC31  F023         	call	_Rtcc_GetRtccValue
 19881  004D90  0100               	movlb	0	; () banked
 19882  004D92  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;rtcm.c: 216: return LocalDate;
 19886  004D94  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19887  004D98  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19888  004D9C  0E07               	movlw	7
 19889  004D9E                     u9041:
 19890  004D9E  CFDB FFEB          	movff	plusw2,plusw0
 19891  004DA2  06E8               	decf	wreg,f,c
 19892  004DA4  E2FC               	bc	u9041
 19893  004DA6  0012               	return	
 19894  004DA8                     __end_of_Rtcm_GetRtccDate:
 19895                           	opt stack 0
 19896                           tosu	equ	0xFFF
 19897                           tosh	equ	0xFFE
 19898                           tosl	equ	0xFFD
 19899                           pclath	equ	0xFFA
 19900                           tblptru	equ	0xFF8
 19901                           tblptrh	equ	0xFF7
 19902                           tblptrl	equ	0xFF6
 19903                           tablat	equ	0xFF5
 19904                           prodh	equ	0xFF4
 19905                           prodl	equ	0xFF3
 19906                           intcon	equ	0xFF2
 19907                           intcon2	equ	0xFF1
 19908                           intcon3	equ	0xFF0
 19909                           indf0	equ	0xFEF
 19910                           postinc0	equ	0xFEE
 19911                           plusw0	equ	0xFEB
 19912                           fsr0h	equ	0xFEA
 19913                           fsr0l	equ	0xFE9
 19914                           wreg	equ	0xFE8
 19915                           indf1	equ	0xFE7
 19916                           postinc1	equ	0xFE6
 19917                           postdec1	equ	0xFE5
 19918                           plusw1	equ	0xFE3
 19919                           fsr1h	equ	0xFE2
 19920                           fsr1l	equ	0xFE1
 19921                           indf2	equ	0xFDF
 19922                           postinc2	equ	0xFDE
 19923                           postdec2	equ	0xFDD
 19924                           plusw2	equ	0xFDB
 19925                           fsr2h	equ	0xFDA
 19926                           fsr2l	equ	0xFD9
 19927                           status	equ	0xFD8
 19928                           
 19929 ;; *************** function _Rtcc_GetRtccValue *****************
 19930 ;; Defined at:
 19931 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19932 ;; Parameters:    Size  Location     Type
 19933 ;;  RtccPtrVal      1    wreg     enum E7757
 19934 ;; Auto vars:     Size  Location     Type
 19935 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19936 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19937 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19938 ;; Return value:  Size  Location     Type
 19939 ;;                  1    wreg      unsigned char 
 19940 ;; Registers used:
 19941 ;;		wreg, status,2, status,0, prodl, prodh
 19942 ;; Tracked objects:
 19943 ;;		On entry : 0/0
 19944 ;;		On exit  : 0/0
 19945 ;;		Unchanged: 0/0
 19946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19948 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19950 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19951 ;;Total ram usage:        4 bytes
 19952 ;; Hardware stack levels used:    1
 19953 ;; Hardware stack levels required when called:   11
 19954 ;; This function calls:
 19955 ;;		Nothing
 19956 ;; This function is called by:
 19957 ;;		_Rtcm_GetRtccDate
 19958 ;; This function uses a non-reentrant model
 19959 ;;
 19960                           
 19961                           	psect	text89
 19962  004662                     __ptext89:
 19963                           	opt stack 0
 19964  004662                     _Rtcc_GetRtccValue:
 19965                           	opt stack 15
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;incstack = 0
 19969                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19970  004662  0100               	movlb	0	; () banked
 19971  004664  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19972                           
 19973                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19974                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19975                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19976  004666  D02D               	goto	l416
 19977  004668                     l417:
 19978                           
 19979                           ; BSR set to: 0
 19980                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19981  004668  010F               	movlb	15	; () banked
 19982  00466A  833F               	bsf	63,1,b	;volatile
 19983  00466C                     
 19984                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19985  00466C  813F               	bsf	63,0,b	;volatile
 19986  00466E  D01C               	goto	L20
 19987  004670                     l419:
 19988                           
 19989                           ; BSR set to: 0
 19990                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19991  004670  010F               	movlb	15	; () banked
 19992  004672  833F               	bsf	63,1,b	;volatile
 19993  004674  D01E               	goto	L21
 19994  004676                     l420:
 19995                           
 19996                           ; BSR set to: 0
 19997                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19998  004676  010F               	movlb	15	; () banked
 19999  004678  833F               	bsf	63,1,b	;volatile
 20000  00467A  D021               	goto	L24
 20001  00467C                     l8955:
 20002                           
 20003                           ; BSR set to: 15
 20004                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20005  00467C  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20006  004680  0E0F               	movlw	15
 20007  004682  0100               	movlb	0	; () banked
 20008  004684  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20009  004686  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20010  004688  0B0F               	andlw	15
 20011  00468A  0B0F               	andlw	15
 20012  00468C  0D0A               	mullw	10
 20013  00468E  50F3               	movf	prodl,w,c
 20014  004690  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20015  004692  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20016                           
 20017                           ;rtcc_drv.c: 241: break;
 20018  004694  D02D               	goto	l418
 20019  004696                     l421:
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20023  004696  010F               	movlb	15	; () banked
 20024  004698  933F               	bcf	63,1,b	;volatile
 20025                           
 20026                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20027  00469A  813F               	bsf	63,0,b	;volatile
 20028                           
 20029                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20030  00469C  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20031                           
 20032                           ;rtcc_drv.c: 249: break;
 20033  0046A0  D027               	goto	l418
 20034  0046A2                     l422:
 20035                           
 20036                           ; BSR set to: 0
 20037                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20038  0046A2  010F               	movlb	15	; () banked
 20039  0046A4  933F               	bcf	63,1,b	;volatile
 20040  0046A6  D7E2               	goto	L22
 20041  0046A8                     L20:
 20042                           
 20043                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20044  0046A8  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20045  0046AC  D7E7               	goto	l8955
 20046  0046AE                     l423:
 20047                           
 20048                           ; BSR set to: 0
 20049                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20050  0046AE  010F               	movlb	15	; () banked
 20051  0046B0  933F               	bcf	63,1,b	;volatile
 20052  0046B2                     L21:
 20053                           
 20054                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20055  0046B2  913F               	bcf	63,0,b	;volatile
 20056                           
 20057                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20058  0046B4  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20059  0046B8  D7E1               	goto	l8955
 20060  0046BA                     l424:
 20061                           
 20062                           ; BSR set to: 0
 20063                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20064  0046BA  010F               	movlb	15	; () banked
 20065  0046BC  933F               	bcf	63,1,b	;volatile
 20066  0046BE                     L24:
 20067                           
 20068                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20069  0046BE  913F               	bcf	63,0,b	;volatile
 20070  0046C0  D7F3               	goto	L20
 20071  0046C2                     l416:
 20072                           
 20073                           ; BSR set to: 0
 20074  0046C2  0100               	movlb	0	; () banked
 20075  0046C4  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20076                           
 20077                           ; Switch size 1, requested type "space"
 20078                           ; Number of cases is 7, Range of values is 0 to 6
 20079                           ; switch strategies available:
 20080                           ; Name         Instructions Cycles
 20081                           ; simple_byte           22    12 (average)
 20082                           ;	Chosen strategy is simple_byte
 20083  0046C6  0A00               	xorlw	0	; case 0
 20084  0046C8  B4D8               	btfsc	status,2,c
 20085  0046CA  D7CE               	goto	l417
 20086  0046CC  0A01               	xorlw	1	; case 1
 20087  0046CE  B4D8               	btfsc	status,2,c
 20088  0046D0  D7CF               	goto	l419
 20089  0046D2  0A03               	xorlw	3	; case 2
 20090  0046D4  B4D8               	btfsc	status,2,c
 20091  0046D6  D7CF               	goto	l420
 20092  0046D8  0A01               	xorlw	1	; case 3
 20093  0046DA  B4D8               	btfsc	status,2,c
 20094  0046DC  D7DC               	goto	l421
 20095  0046DE  0A07               	xorlw	7	; case 4
 20096  0046E0  B4D8               	btfsc	status,2,c
 20097  0046E2  D7DF               	goto	l422
 20098  0046E4  0A01               	xorlw	1	; case 5
 20099  0046E6  B4D8               	btfsc	status,2,c
 20100  0046E8  D7E2               	goto	l423
 20101  0046EA  0A03               	xorlw	3	; case 6
 20102  0046EC  B4D8               	btfsc	status,2,c
 20103  0046EE  D7E5               	goto	l424
 20104  0046F0                     l418:
 20105                           
 20106                           ;rtcc_drv.c: 286: return RetValue;
 20107                           
 20108                           ; BSR set to: 0
 20109  0046F0  0100               	movlb	0	; () banked
 20110  0046F2  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20111  0046F4  0012               	return	
 20112  0046F6                     __end_of_Rtcc_GetRtccValue:
 20113                           	opt stack 0
 20114                           tosu	equ	0xFFF
 20115                           tosh	equ	0xFFE
 20116                           tosl	equ	0xFFD
 20117                           pclath	equ	0xFFA
 20118                           tblptru	equ	0xFF8
 20119                           tblptrh	equ	0xFF7
 20120                           tblptrl	equ	0xFF6
 20121                           tablat	equ	0xFF5
 20122                           prodh	equ	0xFF4
 20123                           prodl	equ	0xFF3
 20124                           intcon	equ	0xFF2
 20125                           intcon2	equ	0xFF1
 20126                           intcon3	equ	0xFF0
 20127                           indf0	equ	0xFEF
 20128                           postinc0	equ	0xFEE
 20129                           plusw0	equ	0xFEB
 20130                           fsr0h	equ	0xFEA
 20131                           fsr0l	equ	0xFE9
 20132                           wreg	equ	0xFE8
 20133                           indf1	equ	0xFE7
 20134                           postinc1	equ	0xFE6
 20135                           postdec1	equ	0xFE5
 20136                           plusw1	equ	0xFE3
 20137                           fsr1h	equ	0xFE2
 20138                           fsr1l	equ	0xFE1
 20139                           indf2	equ	0xFDF
 20140                           postinc2	equ	0xFDE
 20141                           postdec2	equ	0xFDD
 20142                           plusw2	equ	0xFDB
 20143                           fsr2h	equ	0xFDA
 20144                           fsr2l	equ	0xFD9
 20145                           status	equ	0xFD8
 20146                           
 20147 ;; *************** function _Rtcc_SetRtcStatus *****************
 20148 ;; Defined at:
 20149 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20150 ;; Parameters:    Size  Location     Type
 20151 ;;  Status          1    wreg     unsigned char 
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;  Status          1   29[BANK0 ] unsigned char 
 20154 ;; Return value:  Size  Location     Type
 20155 ;;                  1    wreg      void 
 20156 ;; Registers used:
 20157 ;;		wreg
 20158 ;; Tracked objects:
 20159 ;;		On entry : 0/0
 20160 ;;		On exit  : 0/0
 20161 ;;		Unchanged: 0/0
 20162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20167 ;;Total ram usage:        1 bytes
 20168 ;; Hardware stack levels used:    1
 20169 ;; Hardware stack levels required when called:   11
 20170 ;; This function calls:
 20171 ;;		Nothing
 20172 ;; This function is called by:
 20173 ;;		_Rtcm_MainTask
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177                           	psect	text90
 20178  005D60                     __ptext90:
 20179                           	opt stack 0
 20180  005D60                     _Rtcc_SetRtcStatus:
 20181                           	opt stack 16
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;incstack = 0
 20185                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20186  005D60  0100               	movlb	0	; () banked
 20187  005D62  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20188                           
 20189                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20190  005D64  0100               	movlb	0	; () banked
 20191  005D66  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20192  005D68  D003               	bra	u7985
 20193  005D6A  010F               	movlb	15	; () banked
 20194  005D6C  9F3F               	bcf	63,7,b	;volatile
 20195  005D6E  D002               	bra	u7986
 20196  005D70                     u7985:
 20197  005D70  010F               	movlb	15	; () banked
 20198  005D72  8F3F               	bsf	63,7,b	;volatile
 20199  005D74                     u7986:
 20200                           
 20201                           ; BSR set to: 15
 20202  005D74  0012               	return		;funcret
 20203  005D76                     __end_of_Rtcc_SetRtcStatus:
 20204                           	opt stack 0
 20205                           tosu	equ	0xFFF
 20206                           tosh	equ	0xFFE
 20207                           tosl	equ	0xFFD
 20208                           pclath	equ	0xFFA
 20209                           tblptru	equ	0xFF8
 20210                           tblptrh	equ	0xFF7
 20211                           tblptrl	equ	0xFF6
 20212                           tablat	equ	0xFF5
 20213                           prodh	equ	0xFF4
 20214                           prodl	equ	0xFF3
 20215                           intcon	equ	0xFF2
 20216                           intcon2	equ	0xFF1
 20217                           intcon3	equ	0xFF0
 20218                           indf0	equ	0xFEF
 20219                           postinc0	equ	0xFEE
 20220                           plusw0	equ	0xFEB
 20221                           fsr0h	equ	0xFEA
 20222                           fsr0l	equ	0xFE9
 20223                           wreg	equ	0xFE8
 20224                           indf1	equ	0xFE7
 20225                           postinc1	equ	0xFE6
 20226                           postdec1	equ	0xFE5
 20227                           plusw1	equ	0xFE3
 20228                           fsr1h	equ	0xFE2
 20229                           fsr1l	equ	0xFE1
 20230                           indf2	equ	0xFDF
 20231                           postinc2	equ	0xFDE
 20232                           postdec2	equ	0xFDD
 20233                           plusw2	equ	0xFDB
 20234                           fsr2h	equ	0xFDA
 20235                           fsr2l	equ	0xFD9
 20236                           status	equ	0xFD8
 20237                           
 20238 ;; *************** function _Rtcc_RtcConfig *****************
 20239 ;; Defined at:
 20240 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20241 ;; Parameters:    Size  Location     Type
 20242 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20243 ;;		 -> RtcConfig(4), 
 20244 ;; Auto vars:     Size  Location     Type
 20245 ;;		None
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1    wreg      void 
 20248 ;; Registers used:
 20249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/0
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20258 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20259 ;;Total ram usage:        3 bytes
 20260 ;; Hardware stack levels used:    1
 20261 ;; Hardware stack levels required when called:   12
 20262 ;; This function calls:
 20263 ;;		_RtccIrqInit
 20264 ;; This function is called by:
 20265 ;;		_Rtcm_MainTask
 20266 ;; This function uses a non-reentrant model
 20267 ;;
 20268                           
 20269                           	psect	text91
 20270  0042CC                     __ptext91:
 20271                           	opt stack 0
 20272  0042CC                     _Rtcc_RtcConfig:
 20273                           	opt stack 15
 20274                           
 20275                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20276                           
 20277                           ; BSR set to: 15
 20278                           ;incstack = 0
 20279  0042CC  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20280  0042D0  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20281  0042D4  50DF               	movf	indf2,w,c
 20282  0042D6  0100               	movlb	0	; () banked
 20283  0042D8  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20284  0042DA  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20285  0042DC  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20286  0042DE  010F               	movlb	15	; () banked
 20287  0042E0  513F               	movf	63,w,b	;volatile
 20288  0042E2  0100               	movlb	0	; () banked
 20289  0042E4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20290  0042E6  0BFB               	andlw	-5
 20291  0042E8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20292  0042EA  010F               	movlb	15	; () banked
 20293  0042EC  6F3F               	movwf	63,b	;volatile
 20294                           
 20295                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20296  0042EE  0100               	movlb	0	; () banked
 20297  0042F0  EE20 F001          	lfsr	2,1
 20298  0042F4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20299  0042F6  26D9               	addwf	fsr2l,f,c
 20300  0042F8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20301  0042FA  22DA               	addwfc	fsr2h,f,c
 20302  0042FC  50DF               	movf	indf2,w,c
 20303  0042FE  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20304  004300  0E01               	movlw	1
 20305  004302  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20306  004304  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20307  004306  010F               	movlb	15	; () banked
 20308  004308  513C               	movf	60,w,b	;volatile
 20309  00430A  0100               	movlb	0	; () banked
 20310  00430C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20311  00430E  0BFD               	andlw	-3
 20312  004310  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20313  004312  010F               	movlb	15	; () banked
 20314  004314  6F3C               	movwf	60,b	;volatile
 20315                           
 20316                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20317  004316  0100               	movlb	0	; () banked
 20318  004318  EE20 F001          	lfsr	2,1
 20319  00431C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20320  00431E  26D9               	addwf	fsr2l,f,c
 20321  004320  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20322  004322  22DA               	addwfc	fsr2h,f,c
 20323  004324  50DF               	movf	indf2,w,c
 20324  004326  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20325  004328  90D8               	bcf	status,0,c
 20326  00432A  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20327  00432C  0E01               	movlw	1
 20328  00432E  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20329  004330  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20330  004332  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20331  004334  010F               	movlb	15	; () banked
 20332  004336  513C               	movf	60,w,b	;volatile
 20333  004338  0100               	movlb	0	; () banked
 20334  00433A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20335  00433C  0BFB               	andlw	-5
 20336  00433E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20337  004340  010F               	movlb	15	; () banked
 20338  004342  6F3C               	movwf	60,b	;volatile
 20339                           
 20340                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20341  004344  0100               	movlb	0	; () banked
 20342  004346  EE20 F002          	lfsr	2,2
 20343  00434A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20344  00434C  26D9               	addwf	fsr2l,f,c
 20345  00434E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20346  004350  22DA               	addwfc	fsr2h,f,c
 20347  004352  04DE               	decf	postinc2,w,c
 20348  004354  A4D8               	btfss	status,2,c
 20349  004356  0012               	return	
 20350                           
 20351                           ; BSR set to: 0
 20352                           ;rtcc_drv.c: 115: {
 20353                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20354  004358  EE20 F003          	lfsr	2,3
 20355  00435C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20356  00435E  26D9               	addwf	fsr2l,f,c
 20357  004360  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20358  004362  22DA               	addwfc	fsr2h,f,c
 20359  004364  50DF               	movf	indf2,w,c
 20360  004366  ECBB  F02E         	call	_RtccIrqInit
 20361  00436A  0012               	return	
 20362  00436C                     __end_of_Rtcc_RtcConfig:
 20363                           	opt stack 0
 20364                           tosu	equ	0xFFF
 20365                           tosh	equ	0xFFE
 20366                           tosl	equ	0xFFD
 20367                           pclath	equ	0xFFA
 20368                           tblptru	equ	0xFF8
 20369                           tblptrh	equ	0xFF7
 20370                           tblptrl	equ	0xFF6
 20371                           tablat	equ	0xFF5
 20372                           prodh	equ	0xFF4
 20373                           prodl	equ	0xFF3
 20374                           intcon	equ	0xFF2
 20375                           intcon2	equ	0xFF1
 20376                           intcon3	equ	0xFF0
 20377                           indf0	equ	0xFEF
 20378                           postinc0	equ	0xFEE
 20379                           plusw0	equ	0xFEB
 20380                           fsr0h	equ	0xFEA
 20381                           fsr0l	equ	0xFE9
 20382                           wreg	equ	0xFE8
 20383                           indf1	equ	0xFE7
 20384                           postinc1	equ	0xFE6
 20385                           postdec1	equ	0xFE5
 20386                           plusw1	equ	0xFE3
 20387                           fsr1h	equ	0xFE2
 20388                           fsr1l	equ	0xFE1
 20389                           indf2	equ	0xFDF
 20390                           postinc2	equ	0xFDE
 20391                           postdec2	equ	0xFDD
 20392                           plusw2	equ	0xFDB
 20393                           fsr2h	equ	0xFDA
 20394                           fsr2l	equ	0xFD9
 20395                           status	equ	0xFD8
 20396                           
 20397 ;; *************** function _RtccIrqInit *****************
 20398 ;; Defined at:
 20399 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;  Priority        1    wreg     enum E7716
 20402 ;; Auto vars:     Size  Location     Type
 20403 ;;  Priority        1   29[BANK0 ] enum E7716
 20404 ;; Return value:  Size  Location     Type
 20405 ;;                  1    wreg      void 
 20406 ;; Registers used:
 20407 ;;		wreg
 20408 ;; Tracked objects:
 20409 ;;		On entry : 0/0
 20410 ;;		On exit  : 0/0
 20411 ;;		Unchanged: 0/0
 20412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20414 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20416 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20417 ;;Total ram usage:        1 bytes
 20418 ;; Hardware stack levels used:    1
 20419 ;; Hardware stack levels required when called:   11
 20420 ;; This function calls:
 20421 ;;		Nothing
 20422 ;; This function is called by:
 20423 ;;		_Rtcc_RtcConfig
 20424 ;; This function uses a non-reentrant model
 20425 ;;
 20426                           
 20427                           	psect	text92
 20428  005D76                     __ptext92:
 20429                           	opt stack 0
 20430  005D76                     _RtccIrqInit:
 20431                           	opt stack 15
 20432                           
 20433                           ;incstack = 0
 20434                           ;RtccIrqInit@Priority stored from wreg
 20435  005D76  0100               	movlb	0	; () banked
 20436  005D78  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20437                           
 20438                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20439  005D7A  90A4               	bcf	4004,0,c	;volatile
 20440                           
 20441                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20442  005D7C  0100               	movlb	0	; () banked
 20443  005D7E  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20444  005D80  D002               	bra	u6995
 20445  005D82  90A5               	bcf	4005,0,c	;volatile
 20446  005D84  D001               	bra	u6996
 20447  005D86                     u6995:
 20448  005D86  80A5               	bsf	4005,0,c	;volatile
 20449  005D88                     u6996:
 20450                           
 20451                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20452  005D88  80A3               	bsf	4003,0,c	;volatile
 20453  005D8A  0012               	return		;funcret
 20454  005D8C                     __end_of_RtccIrqInit:
 20455                           	opt stack 0
 20456                           tosu	equ	0xFFF
 20457                           tosh	equ	0xFFE
 20458                           tosl	equ	0xFFD
 20459                           pclath	equ	0xFFA
 20460                           tblptru	equ	0xFF8
 20461                           tblptrh	equ	0xFF7
 20462                           tblptrl	equ	0xFF6
 20463                           tablat	equ	0xFF5
 20464                           prodh	equ	0xFF4
 20465                           prodl	equ	0xFF3
 20466                           intcon	equ	0xFF2
 20467                           intcon2	equ	0xFF1
 20468                           intcon3	equ	0xFF0
 20469                           indf0	equ	0xFEF
 20470                           postinc0	equ	0xFEE
 20471                           plusw0	equ	0xFEB
 20472                           fsr0h	equ	0xFEA
 20473                           fsr0l	equ	0xFE9
 20474                           wreg	equ	0xFE8
 20475                           indf1	equ	0xFE7
 20476                           postinc1	equ	0xFE6
 20477                           postdec1	equ	0xFE5
 20478                           plusw1	equ	0xFE3
 20479                           fsr1h	equ	0xFE2
 20480                           fsr1l	equ	0xFE1
 20481                           indf2	equ	0xFDF
 20482                           postinc2	equ	0xFDE
 20483                           postdec2	equ	0xFDD
 20484                           plusw2	equ	0xFDB
 20485                           fsr2h	equ	0xFDA
 20486                           fsr2l	equ	0xFD9
 20487                           status	equ	0xFD8
 20488                           
 20489 ;; *************** function _Rtcc_AlarmConfig *****************
 20490 ;; Defined at:
 20491 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20492 ;; Parameters:    Size  Location     Type
 20493 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20494 ;;		 -> AlCfg(4), 
 20495 ;; Auto vars:     Size  Location     Type
 20496 ;;		None
 20497 ;; Return value:  Size  Location     Type
 20498 ;;                  1    wreg      void 
 20499 ;; Registers used:
 20500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20501 ;; Tracked objects:
 20502 ;;		On entry : 0/0
 20503 ;;		On exit  : 0/0
 20504 ;;		Unchanged: 0/0
 20505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20509 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20510 ;;Total ram usage:        3 bytes
 20511 ;; Hardware stack levels used:    1
 20512 ;; Hardware stack levels required when called:   11
 20513 ;; This function calls:
 20514 ;;		Nothing
 20515 ;; This function is called by:
 20516 ;;		_Rtcm_MainTask
 20517 ;; This function uses a non-reentrant model
 20518 ;;
 20519                           
 20520                           	psect	text93
 20521  004C70                     __ptext93:
 20522                           	opt stack 0
 20523  004C70                     _Rtcc_AlarmConfig:
 20524                           	opt stack 16
 20525                           
 20526                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20527                           
 20528                           ;incstack = 0
 20529  004C70  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20530  004C74  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20531  004C78  50DF               	movf	indf2,w,c
 20532  004C7A  0100               	movlb	0	; () banked
 20533  004C7C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20534  004C7E  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20535  004C80  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20536  004C82  5091               	movf	3985,w,c	;volatile
 20537  004C84  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20538  004C86  0B7F               	andlw	-129
 20539  004C88  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20540  004C8A  6E91               	movwf	3985,c	;volatile
 20541                           
 20542                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20543  004C8C  EE20 F001          	lfsr	2,1
 20544  004C90  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20545  004C92  26D9               	addwf	fsr2l,f,c
 20546  004C94  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20547  004C96  22DA               	addwfc	fsr2h,f,c
 20548  004C98  50DF               	movf	indf2,w,c
 20549  004C9A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20550  004C9C  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20551  004C9E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20552  004CA0  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20553  004CA2  5091               	movf	3985,w,c	;volatile
 20554  004CA4  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20555  004CA6  0BBF               	andlw	-65
 20556  004CA8  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20557  004CAA  6E91               	movwf	3985,c	;volatile
 20558                           
 20559                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20560  004CAC  EE20 F002          	lfsr	2,2
 20561  004CB0  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20562  004CB2  26D9               	addwf	fsr2l,f,c
 20563  004CB4  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20564  004CB6  22DA               	addwfc	fsr2h,f,c
 20565  004CB8  50DF               	movf	indf2,w,c
 20566  004CBA  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20567  004CBC  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20568  004CBE  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20569  004CC0  5091               	movf	3985,w,c	;volatile
 20570  004CC2  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20571  004CC4  0BC3               	andlw	-61
 20572  004CC6  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20573  004CC8  6E91               	movwf	3985,c	;volatile
 20574                           
 20575                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20576  004CCA  EE20 F003          	lfsr	2,3
 20577  004CCE  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20578  004CD0  26D9               	addwf	fsr2l,f,c
 20579  004CD2  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20580  004CD4  22DA               	addwfc	fsr2h,f,c
 20581  004CD6  50DF               	movf	indf2,w,c
 20582  004CD8  6E90               	movwf	3984,c	;volatile
 20583                           
 20584                           ; BSR set to: 0
 20585  004CDA  0012               	return		;funcret
 20586  004CDC                     __end_of_Rtcc_AlarmConfig:
 20587                           	opt stack 0
 20588                           tosu	equ	0xFFF
 20589                           tosh	equ	0xFFE
 20590                           tosl	equ	0xFFD
 20591                           pclath	equ	0xFFA
 20592                           tblptru	equ	0xFF8
 20593                           tblptrh	equ	0xFF7
 20594                           tblptrl	equ	0xFF6
 20595                           tablat	equ	0xFF5
 20596                           prodh	equ	0xFF4
 20597                           prodl	equ	0xFF3
 20598                           intcon	equ	0xFF2
 20599                           intcon2	equ	0xFF1
 20600                           intcon3	equ	0xFF0
 20601                           indf0	equ	0xFEF
 20602                           postinc0	equ	0xFEE
 20603                           plusw0	equ	0xFEB
 20604                           fsr0h	equ	0xFEA
 20605                           fsr0l	equ	0xFE9
 20606                           wreg	equ	0xFE8
 20607                           indf1	equ	0xFE7
 20608                           postinc1	equ	0xFE6
 20609                           postdec1	equ	0xFE5
 20610                           plusw1	equ	0xFE3
 20611                           fsr1h	equ	0xFE2
 20612                           fsr1l	equ	0xFE1
 20613                           indf2	equ	0xFDF
 20614                           postinc2	equ	0xFDE
 20615                           postdec2	equ	0xFDD
 20616                           plusw2	equ	0xFDB
 20617                           fsr2h	equ	0xFDA
 20618                           fsr2l	equ	0xFD9
 20619                           status	equ	0xFD8
 20620                           
 20621 ;; *************** function _initGprsModem *****************
 20622 ;; Defined at:
 20623 ;;		line 109 in file "../Source/c/04_App/app.c"
 20624 ;; Parameters:    Size  Location     Type
 20625 ;;		None
 20626 ;; Auto vars:     Size  Location     Type
 20627 ;;  isInitialize    1   51[BANK0 ] unsigned char 
 20628 ;; Return value:  Size  Location     Type
 20629 ;;                  1    wreg      unsigned char 
 20630 ;; Registers used:
 20631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20632 ;; Tracked objects:
 20633 ;;		On entry : 0/0
 20634 ;;		On exit  : 0/0
 20635 ;;		Unchanged: 0/0
 20636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20640 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20641 ;;Total ram usage:        1 bytes
 20642 ;; Hardware stack levels used:    1
 20643 ;; Hardware stack levels required when called:   13
 20644 ;; This function calls:
 20645 ;;		_Led_SetLedStatus
 20646 ;;		_Uart_WriteConstString
 20647 ;;		_secondsAppTimer
 20648 ;; This function is called by:
 20649 ;;		_MyApp_Task
 20650 ;; This function uses a non-reentrant model
 20651 ;;
 20652                           
 20653                           	psect	text94
 20654  005184                     __ptext94:
 20655                           	opt stack 0
 20656  005184                     _initGprsModem:
 20657                           	opt stack 14
 20658                           
 20659                           ;app.c: 111: static uint16_t modemCounter = 0;
 20660                           ;app.c: 112: bool isInitialized = 0u;
 20661                           
 20662                           ; BSR set to: 0
 20663                           ;incstack = 0
 20664  005184  0E00               	movlw	0
 20665  005186  0100               	movlb	0	; () banked
 20666  005188  6F93               	movwf	initGprsModem@isInitialized& (0+255),b
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;app.c: 113: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20670  00518A  0E03               	movlw	3
 20671  00518C  19CF               	xorwf	_MdmStatus& (0+255),w,b
 20672  00518E  B4D8               	btfsc	status,2,c
 20673  005190  D003               	goto	u13210
 20674                           
 20675                           ; BSR set to: 0
 20676  005192  05CF               	decf	_MdmStatus& (0+255),w,b
 20677  005194  A4D8               	btfss	status,2,c
 20678  005196  D01D               	goto	l2524
 20679  005198                     u13210:
 20680                           
 20681                           ; BSR set to: 0
 20682                           ;app.c: 114: {
 20683                           ;app.c: 115: if (secondsAppTimer(5, &modemCounter, 0))
 20684                           
 20685                           ; BSR set to: 0
 20686  005198  0EB7               	movlw	low initGprsModem@modemCounter
 20687  00519A  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20688  00519C  0E03               	movlw	high initGprsModem@modemCounter
 20689  00519E  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20690  0051A0  0E00               	movlw	0
 20691  0051A2  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20692  0051A4  0E05               	movlw	5
 20693  0051A6  EC15  F021         	call	_secondsAppTimer
 20694  0051AA  0900               	iorlw	0
 20695  0051AC  B4D8               	btfsc	status,2,c
 20696  0051AE  D011               	goto	l2524
 20697                           
 20698                           ;app.c: 116: {
 20699                           ;app.c: 117: Uart_WriteConstString(1, "AT\r\n");
 20700  0051B0  0EE5               	movlw	low STR_1
 20701  0051B2  0100               	movlb	0	; () banked
 20702  0051B4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20703  0051B6  0EFF               	movlw	high STR_1
 20704  0051B8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20705  0051BA  0E01               	movlw	1
 20706  0051BC  EC1B  F02B         	call	_Uart_WriteConstString
 20707                           
 20708                           ;app.c: 118: Led_SetLedStatus(1u, LED_STS_ON);
 20709  0051C0  0E01               	movlw	1
 20710  0051C2  0100               	movlb	0	; () banked
 20711  0051C4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20712  0051C6  0E01               	movlw	1
 20713  0051C8  ECE1  F02C         	call	_Led_SetLedStatus
 20714                           
 20715                           ;app.c: 119: isInitialized = 1;
 20716  0051CC  0E01               	movlw	1
 20717  0051CE  0100               	movlb	0	; () banked
 20718  0051D0  6F93               	movwf	initGprsModem@isInitialized& (0+255),b
 20719  0051D2                     l2524:
 20720                           
 20721                           ;app.c: 120: }
 20722                           ;app.c: 121: }
 20723                           ;app.c: 122: return isInitialized;
 20724                           
 20725                           ; BSR set to: 0
 20726                           
 20727                           ; BSR set to: 0
 20728  0051D2  0100               	movlb	0	; () banked
 20729  0051D4  5193               	movf	initGprsModem@isInitialized& (0+255),w,b
 20730  0051D6  0012               	return	
 20731  0051D8                     __end_of_initGprsModem:
 20732                           	opt stack 0
 20733                           tosu	equ	0xFFF
 20734                           tosh	equ	0xFFE
 20735                           tosl	equ	0xFFD
 20736                           pclath	equ	0xFFA
 20737                           tblptru	equ	0xFF8
 20738                           tblptrh	equ	0xFF7
 20739                           tblptrl	equ	0xFF6
 20740                           tablat	equ	0xFF5
 20741                           prodh	equ	0xFF4
 20742                           prodl	equ	0xFF3
 20743                           intcon	equ	0xFF2
 20744                           intcon2	equ	0xFF1
 20745                           intcon3	equ	0xFF0
 20746                           indf0	equ	0xFEF
 20747                           postinc0	equ	0xFEE
 20748                           plusw0	equ	0xFEB
 20749                           fsr0h	equ	0xFEA
 20750                           fsr0l	equ	0xFE9
 20751                           wreg	equ	0xFE8
 20752                           indf1	equ	0xFE7
 20753                           postinc1	equ	0xFE6
 20754                           postdec1	equ	0xFE5
 20755                           plusw1	equ	0xFE3
 20756                           fsr1h	equ	0xFE2
 20757                           fsr1l	equ	0xFE1
 20758                           indf2	equ	0xFDF
 20759                           postinc2	equ	0xFDE
 20760                           postdec2	equ	0xFDD
 20761                           plusw2	equ	0xFDB
 20762                           fsr2h	equ	0xFDA
 20763                           fsr2l	equ	0xFD9
 20764                           status	equ	0xFD8
 20765                           
 20766 ;; *************** function _secondsAppTimer *****************
 20767 ;; Defined at:
 20768 ;;		line 85 in file "../Source/c/04_App/app.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;  seconds         1    wreg     unsigned char 
 20771 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 20772 ;;		 -> initGprsModem@modemCounter(2), 
 20773 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 20774 ;; Auto vars:     Size  Location     Type
 20775 ;;  seconds         1   47[BANK0 ] unsigned char 
 20776 ;;  destinationT    2   49[BANK0 ] unsigned int 
 20777 ;;  isExpired       1   48[BANK0 ] unsigned char 
 20778 ;; Return value:  Size  Location     Type
 20779 ;;                  1    wreg      unsigned char 
 20780 ;; Registers used:
 20781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20782 ;; Tracked objects:
 20783 ;;		On entry : 0/0
 20784 ;;		On exit  : 0/0
 20785 ;;		Unchanged: 0/0
 20786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20787 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20788 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20790 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20791 ;;Total ram usage:        9 bytes
 20792 ;; Hardware stack levels used:    1
 20793 ;; Hardware stack levels required when called:   12
 20794 ;; This function calls:
 20795 ;;		___lwdiv
 20796 ;;		___wmul
 20797 ;; This function is called by:
 20798 ;;		_initGprsModem
 20799 ;; This function uses a non-reentrant model
 20800 ;;
 20801                           
 20802                           	psect	text95
 20803  00422A                     __ptext95:
 20804                           	opt stack 0
 20805  00422A                     _secondsAppTimer:
 20806                           	opt stack 14
 20807                           
 20808                           ; BSR set to: 0
 20809                           ;incstack = 0
 20810                           ;secondsAppTimer@seconds stored from wreg
 20811  00422A  0100               	movlb	0	; () banked
 20812  00422C  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 20813                           
 20814                           ;app.c: 87: bool isExpired = 0;
 20815  00422E  0E00               	movlw	0
 20816  004230  0100               	movlb	0	; () banked
 20817  004232  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20818                           
 20819                           ; BSR set to: 0
 20820                           ;app.c: 88: uint16_t destinationTicks = (seconds * 1000) / ((UINT16)(100));
 20821  004234  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 20822  004238  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 20823  00423A  0E03               	movlw	3
 20824  00423C  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20825  00423E  0EE8               	movlw	232
 20826  004240  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 20827  004242  EC67  F02D         	call	___wmul	;wreg free
 20828  004246  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 20829  00424A  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 20830  00424E  0E00               	movlw	0
 20831  004250  0100               	movlb	0	; () banked
 20832  004252  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20833  004254  0E64               	movlw	100
 20834  004256  6F85               	movwf	___lwdiv@divisor& (0+255),b
 20835  004258  EC16  F029         	call	___lwdiv	;wreg free
 20836  00425C  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 20837  004260  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 20838                           
 20839                           ;app.c: 90: if (*counter < destinationTicks)
 20840  004264  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20841  004268  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20842  00426C  0100               	movlb	0	; () banked
 20843  00426E  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20844  004270  5CDE               	subwf	postinc2,w,c
 20845  004272  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20846  004274  58DE               	subwfb	postinc2,w,c
 20847  004276  B0D8               	btfsc	status,0,c
 20848  004278  D007               	goto	l2512
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;app.c: 91: {
 20852                           ;app.c: 92: *counter += 1;
 20853  00427A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20854  00427E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20855  004282  2ADE               	incf	postinc2,f,c
 20856  004284  0E00               	movlw	0
 20857  004286  22DD               	addwfc	postdec2,f,c
 20858  004288                     l2512:
 20859                           
 20860                           ; BSR set to: 0
 20861                           ;app.c: 93: }
 20862                           ;app.c: 94: if (*counter == destinationTicks)
 20863  004288  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20864  00428C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20865  004290  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20866  004292  18DE               	xorwf	postinc2,w,c
 20867  004294  E119               	bnz	l12893
 20868  004296  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20869  004298  18DE               	xorwf	postinc2,w,c
 20870  00429A  A4D8               	btfss	status,2,c
 20871  00429C  D015               	goto	l2515
 20872                           
 20873                           ; BSR set to: 0
 20874                           ;app.c: 95: {
 20875                           ;app.c: 96: isExpired = 1;
 20876  00429E  0E01               	movlw	1
 20877  0042A0  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20878                           
 20879                           ;app.c: 97: if (isCyclic)
 20880  0042A2  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 20881  0042A4  B4D8               	btfsc	status,2,c
 20882  0042A6  D009               	goto	l2514
 20883                           
 20884                           ; BSR set to: 0
 20885                           ;app.c: 98: {
 20886                           ;app.c: 99: *counter = 0;
 20887  0042A8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20888  0042AC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20889  0042B0  0E00               	movlw	0
 20890  0042B2  6EDE               	movwf	postinc2,c
 20891  0042B4  0E00               	movlw	0
 20892  0042B6  6EDD               	movwf	postdec2,c
 20893                           
 20894                           ;app.c: 100: }
 20895  0042B8  D007               	goto	l2515
 20896  0042BA                     l2514:
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;app.c: 101: else
 20900                           ;app.c: 102: {
 20901                           ;app.c: 103: *counter += 1;
 20902                           
 20903                           ; BSR set to: 0
 20904  0042BA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20905  0042BE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20906  0042C2  2ADE               	incf	postinc2,f,c
 20907  0042C4  0E00               	movlw	0
 20908  0042C6  22DD               	addwfc	postdec2,f,c
 20909  0042C8                     l2515:
 20910  0042C8                     l12893:
 20911                           
 20912                           ; BSR set to: 0
 20913                           ;app.c: 104: }
 20914                           ;app.c: 105: }
 20915                           ;app.c: 106: return isExpired;
 20916  0042C8  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 20917  0042CA  0012               	return	
 20918  0042CC                     __end_of_secondsAppTimer:
 20919                           	opt stack 0
 20920                           tosu	equ	0xFFF
 20921                           tosh	equ	0xFFE
 20922                           tosl	equ	0xFFD
 20923                           pclath	equ	0xFFA
 20924                           tblptru	equ	0xFF8
 20925                           tblptrh	equ	0xFF7
 20926                           tblptrl	equ	0xFF6
 20927                           tablat	equ	0xFF5
 20928                           prodh	equ	0xFF4
 20929                           prodl	equ	0xFF3
 20930                           intcon	equ	0xFF2
 20931                           intcon2	equ	0xFF1
 20932                           intcon3	equ	0xFF0
 20933                           indf0	equ	0xFEF
 20934                           postinc0	equ	0xFEE
 20935                           plusw0	equ	0xFEB
 20936                           fsr0h	equ	0xFEA
 20937                           fsr0l	equ	0xFE9
 20938                           wreg	equ	0xFE8
 20939                           indf1	equ	0xFE7
 20940                           postinc1	equ	0xFE6
 20941                           postdec1	equ	0xFE5
 20942                           plusw1	equ	0xFE3
 20943                           fsr1h	equ	0xFE2
 20944                           fsr1l	equ	0xFE1
 20945                           indf2	equ	0xFDF
 20946                           postinc2	equ	0xFDE
 20947                           postdec2	equ	0xFDD
 20948                           plusw2	equ	0xFDB
 20949                           fsr2h	equ	0xFDA
 20950                           fsr2l	equ	0xFD9
 20951                           status	equ	0xFD8
 20952                           
 20953 ;; *************** function _Led_SetLedBlinkTime *****************
 20954 ;; Defined at:
 20955 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 20956 ;; Parameters:    Size  Location     Type
 20957 ;;  Led             1    wreg     unsigned char 
 20958 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 20959 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 20960 ;; Auto vars:     Size  Location     Type
 20961 ;;  Led             1   33[BANK0 ] unsigned char 
 20962 ;; Return value:  Size  Location     Type
 20963 ;;                  1    wreg      void 
 20964 ;; Registers used:
 20965 ;;		wreg, status,2, status,0
 20966 ;; Tracked objects:
 20967 ;;		On entry : 0/0
 20968 ;;		On exit  : 0/0
 20969 ;;		Unchanged: 0/0
 20970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20974 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20975 ;;Total ram usage:        5 bytes
 20976 ;; Hardware stack levels used:    1
 20977 ;; Hardware stack levels required when called:   11
 20978 ;; This function calls:
 20979 ;;		Nothing
 20980 ;; This function is called by:
 20981 ;;		_MyApp_Task
 20982 ;; This function uses a non-reentrant model
 20983 ;;
 20984                           
 20985                           	psect	text96
 20986  0051D8                     __ptext96:
 20987                           	opt stack 0
 20988  0051D8                     _Led_SetLedBlinkTime:
 20989                           	opt stack 16
 20990                           
 20991                           ; BSR set to: 0
 20992                           ;incstack = 0
 20993                           ;Led_SetLedBlinkTime@Led stored from wreg
 20994  0051D8  0100               	movlb	0	; () banked
 20995  0051DA  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 20996                           
 20997                           ;led.c: 374: switch (Led)
 20998  0051DC  D01B               	goto	l2099
 20999  0051DE                     l2100:
 21000                           
 21001                           ; BSR set to: 0
 21002                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 21003  0051DE  C07D  F371         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 21004  0051E2  C07E  F372         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 21005                           
 21006                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 21007  0051E6  C07F  F373         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 21008  0051EA  C080  F374         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 21009                           
 21010                           ;led.c: 379: break;
 21011  0051EE  0012               	return	
 21012  0051F0                     l2102:
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 21016  0051F0  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21017  0051F4  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21018                           
 21019                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 21020  0051F8  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21021  0051FC  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21022                           
 21023                           ;led.c: 384: break;
 21024  005200  0012               	return	
 21025  005202                     l2103:
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 21029  005202  C07D  F368         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21030  005206  C07E  F369         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21031                           
 21032                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21033  00520A  C07F  F36A         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21034  00520E  C080  F36B         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21035                           
 21036                           ; BSR set to: 0
 21037                           ;led.c: 393: }
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;led.c: 392: break;
 21041                           
 21042                           ;led.c: 391: default:
 21043                           
 21044                           ;led.c: 389: break;
 21045  005212  0012               	return	
 21046  005214                     l2099:
 21047                           
 21048                           ; BSR set to: 0
 21049  005214  0100               	movlb	0	; () banked
 21050  005216  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21051                           
 21052                           ; Switch size 1, requested type "space"
 21053                           ; Number of cases is 3, Range of values is 1 to 3
 21054                           ; switch strategies available:
 21055                           ; Name         Instructions Cycles
 21056                           ; simple_byte           10     6 (average)
 21057                           ;	Chosen strategy is simple_byte
 21058  005218  0A01               	xorlw	1	; case 1
 21059  00521A  B4D8               	btfsc	status,2,c
 21060  00521C  D7E0               	goto	l2100
 21061  00521E  0A03               	xorlw	3	; case 2
 21062  005220  B4D8               	btfsc	status,2,c
 21063  005222  D7E6               	goto	l2102
 21064  005224  0A01               	xorlw	1	; case 3
 21065  005226  A4D8               	btfss	status,2,c
 21066  005228  0012               	return	
 21067  00522A  D7EB               	goto	l2103
 21068  00522C                     __end_of_Led_SetLedBlinkTime:
 21069                           	opt stack 0
 21070                           tosu	equ	0xFFF
 21071                           tosh	equ	0xFFE
 21072                           tosl	equ	0xFFD
 21073                           pclath	equ	0xFFA
 21074                           tblptru	equ	0xFF8
 21075                           tblptrh	equ	0xFF7
 21076                           tblptrl	equ	0xFF6
 21077                           tablat	equ	0xFF5
 21078                           prodh	equ	0xFF4
 21079                           prodl	equ	0xFF3
 21080                           intcon	equ	0xFF2
 21081                           intcon2	equ	0xFF1
 21082                           intcon3	equ	0xFF0
 21083                           indf0	equ	0xFEF
 21084                           postinc0	equ	0xFEE
 21085                           plusw0	equ	0xFEB
 21086                           fsr0h	equ	0xFEA
 21087                           fsr0l	equ	0xFE9
 21088                           wreg	equ	0xFE8
 21089                           indf1	equ	0xFE7
 21090                           postinc1	equ	0xFE6
 21091                           postdec1	equ	0xFE5
 21092                           plusw1	equ	0xFE3
 21093                           fsr1h	equ	0xFE2
 21094                           fsr1l	equ	0xFE1
 21095                           indf2	equ	0xFDF
 21096                           postinc2	equ	0xFDE
 21097                           postdec2	equ	0xFDD
 21098                           plusw2	equ	0xFDB
 21099                           fsr2h	equ	0xFDA
 21100                           fsr2l	equ	0xFD9
 21101                           status	equ	0xFD8
 21102                           
 21103 ;; *************** function _UartSetConfig *****************
 21104 ;; Defined at:
 21105 ;;		line 185 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21106 ;; Parameters:    Size  Location     Type
 21107 ;;		None
 21108 ;; Auto vars:     Size  Location     Type
 21109 ;;		None
 21110 ;; Return value:  Size  Location     Type
 21111 ;;                  1    wreg      void 
 21112 ;; Registers used:
 21113 ;;		wreg, status,2
 21114 ;; Tracked objects:
 21115 ;;		On entry : 0/0
 21116 ;;		On exit  : 0/0
 21117 ;;		Unchanged: 0/0
 21118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21123 ;;Total ram usage:        0 bytes
 21124 ;; Hardware stack levels used:    1
 21125 ;; Hardware stack levels required when called:   11
 21126 ;; This function calls:
 21127 ;;		Nothing
 21128 ;; This function is called by:
 21129 ;;		_Mdm_MainTask
 21130 ;; This function uses a non-reentrant model
 21131 ;;
 21132                           
 21133                           	psect	text97
 21134  004F7C                     __ptext97:
 21135                           	opt stack 0
 21136  004F7C                     _UartSetConfig:
 21137                           	opt stack 16
 21138                           
 21139                           ;mdm_gsm_gprs.c: 187: UartConfig.UartEnable = ((UINT8)(1));
 21140                           
 21141                           ; BSR set to: 0
 21142                           ;incstack = 0
 21143  004F7C  0E01               	movlw	1
 21144  004F7E  0103               	movlb	3	; () banked
 21145  004F80  6F26               	movwf	_UartConfig& (0+255),b
 21146                           
 21147                           ;mdm_gsm_gprs.c: 188: UartConfig.UartMode = ((UINT8)(0));
 21148  004F82  0E00               	movlw	0
 21149  004F84  6F27               	movwf	(_UartConfig+1)& (0+255),b
 21150                           
 21151                           ;mdm_gsm_gprs.c: 190: UartConfig.BaudRateMode = ((UINT8)(0));
 21152  004F86  0E00               	movlw	0
 21153  004F88  6F28               	movwf	(_UartConfig+2)& (0+255),b
 21154                           
 21155                           ;mdm_gsm_gprs.c: 195: UartConfig.HighBaudMode = ((UINT8)(0));
 21156  004F8A  0E00               	movlw	0
 21157  004F8C  6F29               	movwf	(_UartConfig+3)& (0+255),b
 21158                           
 21159                           ;mdm_gsm_gprs.c: 199: UartConfig.Tx9bitMode = ((UINT8)(0));
 21160  004F8E  0E00               	movlw	0
 21161  004F90  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 21162                           
 21163                           ;mdm_gsm_gprs.c: 200: UartConfig.Rx9bitMode = ((UINT8)(0));
 21164  004F92  0E00               	movlw	0
 21165  004F94  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 21166                           
 21167                           ;mdm_gsm_gprs.c: 201: UartConfig.TxEnable = ((UINT8)(1));
 21168  004F96  0E01               	movlw	1
 21169  004F98  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 21170                           
 21171                           ;mdm_gsm_gprs.c: 202: UartConfig.RxEnable = ((UINT8)(1));
 21172  004F9A  0E01               	movlw	1
 21173  004F9C  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 21174                           
 21175                           ;mdm_gsm_gprs.c: 203: UartConfig.SendBreakEnable = ((UINT8)(0));
 21176  004F9E  0E00               	movlw	0
 21177  004FA0  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 21178                           
 21179                           ;mdm_gsm_gprs.c: 204: UartConfig.AutobaudEnable = ((UINT8)(0));
 21180  004FA2  0E00               	movlw	0
 21181  004FA4  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 21182                           
 21183                           ;mdm_gsm_gprs.c: 205: UartConfig.WakeUpEnable = ((UINT8)(0));
 21184  004FA6  0E00               	movlw	0
 21185  004FA8  6F30               	movwf	(_UartConfig+10)& (0+255),b
 21186                           
 21187                           ;mdm_gsm_gprs.c: 206: UartConfig.TxInterruptEnable = ((UINT8)(0));
 21188  004FAA  0E00               	movlw	0
 21189  004FAC  6F31               	movwf	(_UartConfig+11)& (0+255),b
 21190                           
 21191                           ;mdm_gsm_gprs.c: 207: UartConfig.RxInterruptEnable = ((UINT8)(1));
 21192  004FAE  0E01               	movlw	1
 21193  004FB0  6F32               	movwf	(_UartConfig+12)& (0+255),b
 21194                           
 21195                           ;mdm_gsm_gprs.c: 208: UartConfig.McuBusClock = ((UINT32)(48000000));
 21196  004FB2  0E00               	movlw	0
 21197  004FB4  6F33               	movwf	(_UartConfig+13)& (0+255),b
 21198  004FB6  0E6C               	movlw	108
 21199  004FB8  6F34               	movwf	(_UartConfig+14)& (0+255),b
 21200  004FBA  0EDC               	movlw	220
 21201  004FBC  6F35               	movwf	(_UartConfig+15)& (0+255),b
 21202  004FBE  0E02               	movlw	2
 21203  004FC0  6F36               	movwf	(_UartConfig+16)& (0+255),b
 21204                           
 21205                           ;mdm_gsm_gprs.c: 210: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 21206  004FC2  0E80               	movlw	128
 21207  004FC4  6F37               	movwf	(_UartConfig+17)& (0+255),b
 21208  004FC6  0E25               	movlw	37
 21209  004FC8  6F38               	movwf	(_UartConfig+18)& (0+255),b
 21210  004FCA  0E00               	movlw	0
 21211  004FCC  6F39               	movwf	(_UartConfig+19)& (0+255),b
 21212  004FCE  0E00               	movlw	0
 21213  004FD0  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 21214                           
 21215                           ; BSR set to: 3
 21216  004FD2  0012               	return		;funcret
 21217  004FD4                     __end_of_UartSetConfig:
 21218                           	opt stack 0
 21219                           tosu	equ	0xFFF
 21220                           tosh	equ	0xFFE
 21221                           tosl	equ	0xFFD
 21222                           pclath	equ	0xFFA
 21223                           tblptru	equ	0xFF8
 21224                           tblptrh	equ	0xFF7
 21225                           tblptrl	equ	0xFF6
 21226                           tablat	equ	0xFF5
 21227                           prodh	equ	0xFF4
 21228                           prodl	equ	0xFF3
 21229                           intcon	equ	0xFF2
 21230                           intcon2	equ	0xFF1
 21231                           intcon3	equ	0xFF0
 21232                           indf0	equ	0xFEF
 21233                           postinc0	equ	0xFEE
 21234                           plusw0	equ	0xFEB
 21235                           fsr0h	equ	0xFEA
 21236                           fsr0l	equ	0xFE9
 21237                           wreg	equ	0xFE8
 21238                           indf1	equ	0xFE7
 21239                           postinc1	equ	0xFE6
 21240                           postdec1	equ	0xFE5
 21241                           plusw1	equ	0xFE3
 21242                           fsr1h	equ	0xFE2
 21243                           fsr1l	equ	0xFE1
 21244                           indf2	equ	0xFDF
 21245                           postinc2	equ	0xFDE
 21246                           postdec2	equ	0xFDD
 21247                           plusw2	equ	0xFDB
 21248                           fsr2h	equ	0xFDA
 21249                           fsr2l	equ	0xFD9
 21250                           status	equ	0xFD8
 21251                           
 21252 ;; *************** function _TurnOnModem *****************
 21253 ;; Defined at:
 21254 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21255 ;; Parameters:    Size  Location     Type
 21256 ;;		None
 21257 ;; Auto vars:     Size  Location     Type
 21258 ;;		None
 21259 ;; Return value:  Size  Location     Type
 21260 ;;                  1    wreg      void 
 21261 ;; Registers used:
 21262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21263 ;; Tracked objects:
 21264 ;;		On entry : 0/0
 21265 ;;		On exit  : 0/0
 21266 ;;		Unchanged: 0/0
 21267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21272 ;;Total ram usage:        0 bytes
 21273 ;; Hardware stack levels used:    1
 21274 ;; Hardware stack levels required when called:   12
 21275 ;; This function calls:
 21276 ;;		_GenerateEvt
 21277 ;; This function is called by:
 21278 ;;		_Mdm_MainTask
 21279 ;; This function uses a non-reentrant model
 21280 ;;
 21281                           
 21282                           	psect	text98
 21283  0054E0                     __ptext98:
 21284                           	opt stack 0
 21285  0054E0                     _TurnOnModem:
 21286                           	opt stack 15
 21287                           
 21288                           ;mdm_gsm_gprs.c: 373: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 21289                           ;mdm_gsm_gprs.c: 374: static UINT16 Counter = 0;
 21290                           ;mdm_gsm_gprs.c: 376: switch (TurnOnMdmState)
 21291                           
 21292                           ; BSR set to: 3
 21293                           ;incstack = 0
 21294  0054E0  D019               	goto	l1003
 21295  0054E2                     
 21296                           ;mdm_gsm_gprs.c: 380: Counter++;
 21297  0054E2  0102               	movlb	2	; () banked
 21298  0054E4  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 21299  0054E6  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 21300                           
 21301                           ; BSR set to: 2
 21302                           ;mdm_gsm_gprs.c: 382: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 21303  0054E8  0EB8               	movlw	184
 21304  0054EA  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 21305  0054EC  0E0B               	movlw	11
 21306  0054EE  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 21307  0054F0  A0D8               	btfss	status,0,c
 21308  0054F2  0012               	return	
 21309                           
 21310                           ; BSR set to: 2
 21311                           ;mdm_gsm_gprs.c: 383: {
 21312                           ;mdm_gsm_gprs.c: 385: TurnOnMdmState = TurnOnModuleReq;
 21313  0054F4  0E01               	movlw	1
 21314  0054F6  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21315                           
 21316                           ; BSR set to: 2
 21317                           ;mdm_gsm_gprs.c: 386: }
 21318                           ;mdm_gsm_gprs.c: 387: break;
 21319  0054F8  0012               	return	
 21320  0054FA                     
 21321                           ;mdm_gsm_gprs.c: 391: GenerateEvt(&MdmOnOffPulseRequest);
 21322                           
 21323                           ; BSR set to: 2
 21324  0054FA  0EDE               	movlw	low _MdmOnOffPulseRequest
 21325  0054FC  0100               	movlb	0	; () banked
 21326  0054FE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21327  005500  0E00               	movlw	high _MdmOnOffPulseRequest
 21328  005502  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21329  005504  ECA4  F02E         	call	_GenerateEvt	;wreg free
 21330                           
 21331                           ;mdm_gsm_gprs.c: 393: MdmStatus = ModemOn;
 21332  005508  0E01               	movlw	1
 21333  00550A  0100               	movlb	0	; () banked
 21334  00550C  6FCF               	movwf	_MdmStatus& (0+255),b
 21335                           
 21336                           ; BSR set to: 0
 21337                           ;mdm_gsm_gprs.c: 395: TurnOnMdmState = Stop;
 21338  00550E  0E02               	movlw	2
 21339  005510  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 21340                           
 21341                           ; BSR set to: 0
 21342                           ;mdm_gsm_gprs.c: 403: }
 21343                           
 21344                           ; BSR set to: 0
 21345                           ;mdm_gsm_gprs.c: 402: break;
 21346                           
 21347                           ;mdm_gsm_gprs.c: 401: default:
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;mdm_gsm_gprs.c: 399: break;
 21351                           
 21352                           ;mdm_gsm_gprs.c: 398: case Stop:
 21353                           
 21354                           ;mdm_gsm_gprs.c: 396: break;
 21355  005512  0012               	return	
 21356  005514                     l1003:
 21357                           
 21358                           ; BSR set to: 0
 21359  005514  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 21360                           
 21361                           ; Switch size 1, requested type "space"
 21362                           ; Number of cases is 3, Range of values is 0 to 2
 21363                           ; switch strategies available:
 21364                           ; Name         Instructions Cycles
 21365                           ; simple_byte           10     6 (average)
 21366                           ;	Chosen strategy is simple_byte
 21367  005516  0A00               	xorlw	0	; case 0
 21368  005518  B4D8               	btfsc	status,2,c
 21369  00551A  D7E3               	goto	l1004
 21370  00551C  0A01               	xorlw	1	; case 1
 21371  00551E  B4D8               	btfsc	status,2,c
 21372  005520  D7EC               	goto	l1007
 21373  005522  0A03               	xorlw	3	; case 2
 21374  005524  0012               	return	
 21375  005526                     __end_of_TurnOnModem:
 21376                           	opt stack 0
 21377                           tosu	equ	0xFFF
 21378                           tosh	equ	0xFFE
 21379                           tosl	equ	0xFFD
 21380                           pclath	equ	0xFFA
 21381                           tblptru	equ	0xFF8
 21382                           tblptrh	equ	0xFF7
 21383                           tblptrl	equ	0xFF6
 21384                           tablat	equ	0xFF5
 21385                           prodh	equ	0xFF4
 21386                           prodl	equ	0xFF3
 21387                           intcon	equ	0xFF2
 21388                           intcon2	equ	0xFF1
 21389                           intcon3	equ	0xFF0
 21390                           indf0	equ	0xFEF
 21391                           postinc0	equ	0xFEE
 21392                           plusw0	equ	0xFEB
 21393                           fsr0h	equ	0xFEA
 21394                           fsr0l	equ	0xFE9
 21395                           wreg	equ	0xFE8
 21396                           indf1	equ	0xFE7
 21397                           postinc1	equ	0xFE6
 21398                           postdec1	equ	0xFE5
 21399                           plusw1	equ	0xFE3
 21400                           fsr1h	equ	0xFE2
 21401                           fsr1l	equ	0xFE1
 21402                           indf2	equ	0xFDF
 21403                           postinc2	equ	0xFDE
 21404                           postdec2	equ	0xFDD
 21405                           plusw2	equ	0xFDB
 21406                           fsr2h	equ	0xFDA
 21407                           fsr2l	equ	0xFD9
 21408                           status	equ	0xFD8
 21409                           
 21410 ;; *************** function _SendSmsSm *****************
 21411 ;; Defined at:
 21412 ;;		line 636 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21413 ;; Parameters:    Size  Location     Type
 21414 ;;		None
 21415 ;; Auto vars:     Size  Location     Type
 21416 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 21417 ;; Return value:  Size  Location     Type
 21418 ;;                  1    wreg      void 
 21419 ;; Registers used:
 21420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21421 ;; Tracked objects:
 21422 ;;		On entry : 0/0
 21423 ;;		On exit  : 0/0
 21424 ;;		Unchanged: 0/0
 21425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21427 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21429 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21430 ;;Total ram usage:       52 bytes
 21431 ;; Hardware stack levels used:    1
 21432 ;; Hardware stack levels required when called:   14
 21433 ;; This function calls:
 21434 ;;		_OsTmr_GetTimerStatus
 21435 ;;		_OsTmr_StartTimer
 21436 ;;		_ReceiveEvt
 21437 ;;		_StringCopy
 21438 ;;		_Uart_WriteStringLen
 21439 ;; This function is called by:
 21440 ;;		_Mdm_MainTask
 21441 ;; This function uses a non-reentrant model
 21442 ;;
 21443                           
 21444                           	psect	text99
 21445  0019F2                     __ptext99:
 21446                           	opt stack 0
 21447  0019F2                     _SendSmsSm:
 21448                           	opt stack 13
 21449                           
 21450                           ;mdm_gsm_gprs.c: 638: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 21451                           ;mdm_gsm_gprs.c: 639: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 21452                           ;mdm_gsm_gprs.c: 640: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 21453                           ;mdm_gsm_gprs.c: 641: UINT8 UartMessage[50];
 21454                           ;mdm_gsm_gprs.c: 644: if (MdmStatus == ModemConfigured)
 21455                           
 21456                           ;incstack = 0
 21457  0019F2  0E03               	movlw	3
 21458  0019F4  0100               	movlb	0	; () banked
 21459  0019F6  19CF               	xorwf	_MdmStatus& (0+255),w,b
 21460  0019F8  A4D8               	btfss	status,2,c
 21461  0019FA  0012               	return	
 21462  0019FC  D0C1               	goto	l1081
 21463  0019FE                     
 21464                           ;mdm_gsm_gprs.c: 650: if (ReceiveEvt(&SendSmsEvent))
 21465                           
 21466                           ; BSR set to: 0
 21467  0019FE  0EDD               	movlw	low _SendSmsEvent
 21468  001A00  0100               	movlb	0	; () banked
 21469  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21470  001A04  0E00               	movlw	high _SendSmsEvent
 21471  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21472  001A08  EC10  F02D         	call	_ReceiveEvt	;wreg free
 21473  001A0C  0900               	iorlw	0
 21474  001A0E  B4D8               	btfsc	status,2,c
 21475  001A10  0012               	return	
 21476                           
 21477                           ;mdm_gsm_gprs.c: 651: {
 21478                           ;mdm_gsm_gprs.c: 653: SendSms_State = SendSms_CmgsCmd;
 21479  001A12  0E01               	movlw	1
 21480  001A14  0101               	movlb	1	; () banked
 21481  001A16  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21482                           
 21483                           ; BSR set to: 1
 21484                           ;mdm_gsm_gprs.c: 654: }
 21485                           ;mdm_gsm_gprs.c: 655: break;
 21486  001A18  0012               	return	
 21487  001A1A                     
 21488                           ; BSR set to: 1
 21489                           ;mdm_gsm_gprs.c: 659: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 21490                           
 21491                           ; BSR set to: 1
 21492  001A1A  0ECD               	movlw	low STR_5
 21493  001A1C  0100               	movlb	0	; () banked
 21494  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21495  001A20  0EFF               	movlw	high STR_5
 21496  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21497  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 21498  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21499  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 21500  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21501  001A2C  0E00               	movlw	0
 21502  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 21503  001A30  0E09               	movlw	9
 21504  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 21505  001A34  ECD4  F026         	call	_StringCopy	;wreg free
 21506                           
 21507                           ;mdm_gsm_gprs.c: 661: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 21508  001A38  0E86               	movlw	low _PhoneNumber
 21509  001A3A  0100               	movlb	0	; () banked
 21510  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21511  001A3E  0E04               	movlw	high _PhoneNumber
 21512  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21513  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 21514  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21515  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 21516  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21517  001A4A  C0D0  F081         	movff	_PhoneNumbLen,StringCopy@Len
 21518  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21519  001A50  ECD4  F026         	call	_StringCopy	;wreg free
 21520                           
 21521                           ;mdm_gsm_gprs.c: 663: UartMessage[PhoneNumbLen + 9] = '"';
 21522  001A54  0100               	movlb	0	; () banked
 21523  001A56  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21524  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 21525  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 21526  001A5C  0E09               	movlw	9
 21527  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 21528  001A60  0E00               	movlw	0
 21529  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 21530  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 21531  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 21532  001A68  6ED9               	movwf	fsr2l,c
 21533  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 21534  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 21535  001A6E  6EDA               	movwf	fsr2h,c
 21536  001A70  0E22               	movlw	34
 21537  001A72  6EDF               	movwf	indf2,c
 21538                           
 21539                           ; BSR set to: 0
 21540                           ;mdm_gsm_gprs.c: 664: UartMessage[PhoneNumbLen + 10] = '\r';
 21541  001A74  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21542  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 21543  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 21544  001A7A  0E0A               	movlw	10
 21545  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 21546  001A7E  0E00               	movlw	0
 21547  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 21548  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 21549  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 21550  001A86  6ED9               	movwf	fsr2l,c
 21551  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 21552  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 21553  001A8C  6EDA               	movwf	fsr2h,c
 21554  001A8E  0E0D               	movlw	13
 21555  001A90  6EDF               	movwf	indf2,c
 21556                           
 21557                           ; BSR set to: 0
 21558                           ;mdm_gsm_gprs.c: 666: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 21559  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 21560  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21561  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 21562  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21563  001A9A  51D0               	movf	_PhoneNumbLen& (0+255),w,b
 21564  001A9C  0F0B               	addlw	11
 21565  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21566  001AA0  0E01               	movlw	1
 21567  001AA2  EC5D  F02B         	call	_Uart_WriteStringLen
 21568                           
 21569                           ;mdm_gsm_gprs.c: 668: OsTmr_StartTimer(&SwTimer,2500);
 21570  001AA6  0EEA               	movlw	low SendSmsSm@SwTimer
 21571  001AA8  0100               	movlb	0	; () banked
 21572  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21573  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 21574  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21575  001AB0  0EC4               	movlw	196
 21576  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21577  001AB4  0E09               	movlw	9
 21578  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21579  001AB8  0E00               	movlw	0
 21580  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21581  001ABC  0E00               	movlw	0
 21582  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21583  001AC0  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 21584                           
 21585                           ;mdm_gsm_gprs.c: 669: SendSms_State = SendSms_Delay;
 21586  001AC4  0E05               	movlw	5
 21587  001AC6  0101               	movlb	1	; () banked
 21588  001AC8  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21589                           
 21590                           ; BSR set to: 1
 21591                           ;mdm_gsm_gprs.c: 670: SendSms_NextState = SendSms_EnterCmd;
 21592  001ACA  0E02               	movlw	2
 21593  001ACC  6FF3               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 21594                           
 21595                           ;mdm_gsm_gprs.c: 671: break;
 21596  001ACE  0012               	return	
 21597  001AD0                     
 21598                           ; BSR set to: 1
 21599                           ;mdm_gsm_gprs.c: 675: UartMessage[0] = '\n';
 21600                           
 21601                           ; BSR set to: 1
 21602  001AD0  0E0A               	movlw	10
 21603  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 21604                           
 21605                           ;mdm_gsm_gprs.c: 676: UartMessage[1] = '\r';
 21606  001AD4  0E0D               	movlw	13
 21607  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 21608                           
 21609                           ; BSR set to: 1
 21610                           ;mdm_gsm_gprs.c: 678: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 21611  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 21612  001ADA  0100               	movlb	0	; () banked
 21613  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21614  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 21615  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21616  001AE2  0E02               	movlw	2
 21617  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21618  001AE6  0E01               	movlw	1
 21619  001AE8  EC5D  F02B         	call	_Uart_WriteStringLen
 21620                           
 21621                           ;mdm_gsm_gprs.c: 680: SendSms_State = SendSms_WaitConf;
 21622  001AEC  0E03               	movlw	3
 21623  001AEE  0101               	movlb	1	; () banked
 21624  001AF0  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21625                           
 21626                           ;mdm_gsm_gprs.c: 681: break;
 21627  001AF2  0012               	return	
 21628  001AF4                     
 21629                           ; BSR set to: 1
 21630                           ;mdm_gsm_gprs.c: 685: if (ReceiveEvt(&NewStringReceived))
 21631                           
 21632                           ; BSR set to: 1
 21633  001AF4  0E3C               	movlw	low _NewStringReceived
 21634  001AF6  0100               	movlb	0	; () banked
 21635  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21636  001AFA  0E00               	movlw	high _NewStringReceived
 21637  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21638  001AFE  EC10  F02D         	call	_ReceiveEvt	;wreg free
 21639  001B02  0900               	iorlw	0
 21640  001B04  B4D8               	btfsc	status,2,c
 21641  001B06  0012               	return	
 21642                           
 21643                           ;mdm_gsm_gprs.c: 686: {
 21644                           ;mdm_gsm_gprs.c: 688: if (RxBuffer[0] == '>')
 21645  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 21646  001B0C  0A3E               	xorlw	62
 21647  001B0E  A4D8               	btfss	status,2,c
 21648  001B10  0012               	return	
 21649                           
 21650                           ;mdm_gsm_gprs.c: 689: {
 21651                           ;mdm_gsm_gprs.c: 691: SendSms_State = SendSms_SendSmsText;
 21652  001B12  0E04               	movlw	4
 21653  001B14  0101               	movlb	1	; () banked
 21654  001B16  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21655                           
 21656                           ; BSR set to: 1
 21657                           ;mdm_gsm_gprs.c: 692: }
 21658                           ;mdm_gsm_gprs.c: 693: }
 21659                           ;mdm_gsm_gprs.c: 694: break;
 21660                           
 21661                           ; BSR set to: 1
 21662  001B18  0012               	return	
 21663  001B1A                     
 21664                           ; BSR set to: 1
 21665                           ;mdm_gsm_gprs.c: 698: StringCopy(MessageText,UartMessage,SmsLen);
 21666                           
 21667                           ; BSR set to: 1
 21668  001B1A  0EC2               	movlw	low _MessageText
 21669  001B1C  0100               	movlb	0	; () banked
 21670  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 21671  001B20  0E05               	movlw	high _MessageText
 21672  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 21673  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 21674  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 21675  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 21676  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 21677  001B2C  C0D1  F081         	movff	_SmsLen,StringCopy@Len
 21678  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 21679  001B32  ECD4  F026         	call	_StringCopy	;wreg free
 21680                           
 21681                           ;mdm_gsm_gprs.c: 700: UartMessage[SmsLen] = 0x1A;
 21682  001B36  0100               	movlb	0	; () banked
 21683  001B38  51D1               	movf	_SmsLen& (0+255),w,b
 21684  001B3A  0D01               	mullw	1
 21685  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 21686  001B3E  24F3               	addwf	prodl,w,c
 21687  001B40  6ED9               	movwf	fsr2l,c
 21688  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 21689  001B44  20F4               	addwfc	prodh,w,c
 21690  001B46  6EDA               	movwf	fsr2h,c
 21691  001B48  0E1A               	movlw	26
 21692  001B4A  6EDF               	movwf	indf2,c
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;mdm_gsm_gprs.c: 702: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 21696  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 21697  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 21698  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 21699  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 21700  001B54  29D1               	incf	_SmsLen& (0+255),w,b
 21701  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 21702  001B58  0E01               	movlw	1
 21703  001B5A  EC5D  F02B         	call	_Uart_WriteStringLen
 21704                           
 21705                           ;mdm_gsm_gprs.c: 704: SendSms_State = SendSms_WaitEvt;
 21706  001B5E  0E00               	movlw	0
 21707  001B60  0101               	movlb	1	; () banked
 21708  001B62  6FF4               	movwf	SendSmsSm@SendSms_State& (0+255),b
 21709                           
 21710                           ;mdm_gsm_gprs.c: 705: break;
 21711  001B64  0012               	return	
 21712  001B66                     
 21713                           ; BSR set to: 1
 21714                           ;mdm_gsm_gprs.c: 709: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 21715                           
 21716                           ; BSR set to: 1
 21717  001B66  0EEA               	movlw	low SendSmsSm@SwTimer
 21718  001B68  0100               	movlb	0	; () banked
 21719  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21720  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 21721  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21722  001B70  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 21723  001B74  06E8               	decf	wreg,f,c
 21724  001B76  A4D8               	btfss	status,2,c
 21725  001B78  0012               	return	
 21726                           
 21727                           ;mdm_gsm_gprs.c: 710: {
 21728                           ;mdm_gsm_gprs.c: 712: SendSms_State = SendSms_NextState;
 21729  001B7A  C1F3  F1F4         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 21730                           
 21731                           ;mdm_gsm_gprs.c: 718: }
 21732                           
 21733                           ;mdm_gsm_gprs.c: 717: break;
 21734                           
 21735                           ;mdm_gsm_gprs.c: 716: default:
 21736                           
 21737                           ;mdm_gsm_gprs.c: 713: }
 21738                           ;mdm_gsm_gprs.c: 714: break;
 21739  001B7E  0012               	return	
 21740  001B80                     l1081:
 21741  001B80  0101               	movlb	1	; () banked
 21742  001B82  51F4               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 21743                           
 21744                           ; Switch size 1, requested type "space"
 21745                           ; Number of cases is 6, Range of values is 0 to 5
 21746                           ; switch strategies available:
 21747                           ; Name         Instructions Cycles
 21748                           ; simple_byte           19    10 (average)
 21749                           ;	Chosen strategy is simple_byte
 21750  001B84  0A00               	xorlw	0	; case 0
 21751  001B86  B4D8               	btfsc	status,2,c
 21752  001B88  D73A               	goto	l1082
 21753  001B8A  0A01               	xorlw	1	; case 1
 21754  001B8C  B4D8               	btfsc	status,2,c
 21755  001B8E  D745               	goto	l1085
 21756  001B90  0A03               	xorlw	3	; case 2
 21757  001B92  B4D8               	btfsc	status,2,c
 21758  001B94  D79D               	goto	l1086
 21759  001B96  0A01               	xorlw	1	; case 3
 21760  001B98  B4D8               	btfsc	status,2,c
 21761  001B9A  D7AC               	goto	l1087
 21762  001B9C  0A07               	xorlw	7	; case 4
 21763  001B9E  B4D8               	btfsc	status,2,c
 21764  001BA0  D7BC               	goto	l1090
 21765  001BA2  0A01               	xorlw	1	; case 5
 21766  001BA4  A4D8               	btfss	status,2,c
 21767                           
 21768                           ; BSR set to: 1
 21769  001BA6  0012               	return	
 21770  001BA8  D7DE               	goto	l1091
 21771  001BAA                     __end_of_SendSmsSm:
 21772                           	opt stack 0
 21773                           tosu	equ	0xFFF
 21774                           tosh	equ	0xFFE
 21775                           tosl	equ	0xFFD
 21776                           pclath	equ	0xFFA
 21777                           tblptru	equ	0xFF8
 21778                           tblptrh	equ	0xFF7
 21779                           tblptrl	equ	0xFF6
 21780                           tablat	equ	0xFF5
 21781                           prodh	equ	0xFF4
 21782                           prodl	equ	0xFF3
 21783                           intcon	equ	0xFF2
 21784                           intcon2	equ	0xFF1
 21785                           intcon3	equ	0xFF0
 21786                           indf0	equ	0xFEF
 21787                           postinc0	equ	0xFEE
 21788                           plusw0	equ	0xFEB
 21789                           fsr0h	equ	0xFEA
 21790                           fsr0l	equ	0xFE9
 21791                           wreg	equ	0xFE8
 21792                           indf1	equ	0xFE7
 21793                           postinc1	equ	0xFE6
 21794                           postdec1	equ	0xFE5
 21795                           plusw1	equ	0xFE3
 21796                           fsr1h	equ	0xFE2
 21797                           fsr1l	equ	0xFE1
 21798                           indf2	equ	0xFDF
 21799                           postinc2	equ	0xFDE
 21800                           postdec2	equ	0xFDD
 21801                           plusw2	equ	0xFDB
 21802                           fsr2h	equ	0xFDA
 21803                           fsr2l	equ	0xFD9
 21804                           status	equ	0xFD8
 21805                           
 21806 ;; *************** function _Uart_WriteStringLen *****************
 21807 ;; Defined at:
 21808 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 21809 ;; Parameters:    Size  Location     Type
 21810 ;;  Module          1    wreg     unsigned char 
 21811 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 21812 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 21813 ;;  Len             1   34[BANK0 ] unsigned char 
 21814 ;; Auto vars:     Size  Location     Type
 21815 ;;  Module          1   36[BANK0 ] unsigned char 
 21816 ;;  Index           1   35[BANK0 ] unsigned char 
 21817 ;; Return value:  Size  Location     Type
 21818 ;;                  1    wreg      void 
 21819 ;; Registers used:
 21820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21821 ;; Tracked objects:
 21822 ;;		On entry : 0/0
 21823 ;;		On exit  : 0/0
 21824 ;;		Unchanged: 0/0
 21825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21826 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21829 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21830 ;;Total ram usage:        5 bytes
 21831 ;; Hardware stack levels used:    1
 21832 ;; Hardware stack levels required when called:   12
 21833 ;; This function calls:
 21834 ;;		_UartTxBufferStatus
 21835 ;;		_UartWriteByte
 21836 ;; This function is called by:
 21837 ;;		_SendSmsSm
 21838 ;;		_GsmGprsTerminal
 21839 ;; This function uses a non-reentrant model
 21840 ;;
 21841                           
 21842                           	psect	text100
 21843  0056BA                     __ptext100:
 21844                           	opt stack 0
 21845  0056BA                     _Uart_WriteStringLen:
 21846                           	opt stack 14
 21847                           
 21848                           ;incstack = 0
 21849                           ;Uart_WriteStringLen@Module stored from wreg
 21850  0056BA  0100               	movlb	0	; () banked
 21851  0056BC  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 21852                           
 21853                           ;uart_drv.c: 544: UINT8 Index;
 21854                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 21855  0056BE  0E00               	movlw	0
 21856  0056C0  0100               	movlb	0	; () banked
 21857  0056C2  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 21858  0056C4  D015               	goto	l715
 21859  0056C6                     
 21860                           ; BSR set to: 0
 21861                           ;uart_drv.c: 547: {
 21862                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 21863                           
 21864                           ; BSR set to: 0
 21865  0056C6  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 21866  0056CA  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 21867  0056CE  50DF               	movf	indf2,w,c
 21868  0056D0  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 21869  0056D2  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 21870  0056D4  EC28  F02E         	call	_UartWriteByte
 21871                           
 21872                           ;uart_drv.c: 551: StringToWrite++;
 21873  0056D8  0100               	movlb	0	; () banked
 21874  0056DA  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 21875  0056DC  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 21876  0056DE                     
 21877                           ; BSR set to: 0
 21878                           
 21879                           ; BSR set to: 0
 21880  0056DE  0100               	movlb	0	; () banked
 21881  0056E0  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 21882  0056E2  EC91  F029         	call	_UartTxBufferStatus
 21883  0056E6  06E8               	decf	wreg,f,c
 21884  0056E8  B4D8               	btfsc	status,2,c
 21885  0056EA  D7F9               	goto	l718
 21886  0056EC  0100               	movlb	0	; () banked
 21887  0056EE  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 21888  0056F0                     l715:
 21889                           
 21890                           ; BSR set to: 0
 21891                           
 21892                           ; BSR set to: 0
 21893  0056F0  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 21894  0056F2  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 21895  0056F4  B0D8               	btfsc	status,0,c
 21896  0056F6  0012               	return	
 21897  0056F8  D7E6               	goto	l716
 21898  0056FA                     __end_of_Uart_WriteStringLen:
 21899                           	opt stack 0
 21900                           tosu	equ	0xFFF
 21901                           tosh	equ	0xFFE
 21902                           tosl	equ	0xFFD
 21903                           pclath	equ	0xFFA
 21904                           tblptru	equ	0xFF8
 21905                           tblptrh	equ	0xFF7
 21906                           tblptrl	equ	0xFF6
 21907                           tablat	equ	0xFF5
 21908                           prodh	equ	0xFF4
 21909                           prodl	equ	0xFF3
 21910                           intcon	equ	0xFF2
 21911                           intcon2	equ	0xFF1
 21912                           intcon3	equ	0xFF0
 21913                           indf0	equ	0xFEF
 21914                           postinc0	equ	0xFEE
 21915                           plusw0	equ	0xFEB
 21916                           fsr0h	equ	0xFEA
 21917                           fsr0l	equ	0xFE9
 21918                           wreg	equ	0xFE8
 21919                           indf1	equ	0xFE7
 21920                           postinc1	equ	0xFE6
 21921                           postdec1	equ	0xFE5
 21922                           plusw1	equ	0xFE3
 21923                           fsr1h	equ	0xFE2
 21924                           fsr1l	equ	0xFE1
 21925                           indf2	equ	0xFDF
 21926                           postinc2	equ	0xFDE
 21927                           postdec2	equ	0xFDD
 21928                           plusw2	equ	0xFDB
 21929                           fsr2h	equ	0xFDA
 21930                           fsr2l	equ	0xFD9
 21931                           status	equ	0xFD8
 21932                           
 21933 ;; *************** function _ModemEvtParser *****************
 21934 ;; Defined at:
 21935 ;;		line 494 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21936 ;; Parameters:    Size  Location     Type
 21937 ;;		None
 21938 ;; Auto vars:     Size  Location     Type
 21939 ;;  CallReadyStr   10   40[BANK0 ] unsigned char [10]
 21940 ;;  SmsString       5   50[BANK0 ] unsigned char [5]
 21941 ;;  RingString      4   55[BANK0 ] unsigned char [4]
 21942 ;;  CompareIdx      1   60[BANK0 ] unsigned char 
 21943 ;;  Match           1   59[BANK0 ] unsigned char 
 21944 ;; Return value:  Size  Location     Type
 21945 ;;                  1    wreg      void 
 21946 ;; Registers used:
 21947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21948 ;; Tracked objects:
 21949 ;;		On entry : 0/0
 21950 ;;		On exit  : 0/0
 21951 ;;		Unchanged: 0/0
 21952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21954 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21956 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21957 ;;Total ram usage:       21 bytes
 21958 ;; Hardware stack levels used:    1
 21959 ;; Hardware stack levels required when called:   12
 21960 ;; This function calls:
 21961 ;;		_GenerateEvt
 21962 ;;		_ReceiveEvt
 21963 ;;		_StringCompare
 21964 ;;		_Uart_ClearRxBuffer
 21965 ;; This function is called by:
 21966 ;;		_Mdm_MainTask
 21967 ;; This function uses a non-reentrant model
 21968 ;;
 21969                           
 21970                           	psect	text101
 21971  002C54                     __ptext101:
 21972                           	opt stack 0
 21973  002C54                     _ModemEvtParser:
 21974                           	opt stack 15
 21975                           
 21976                           ;mdm_gsm_gprs.c: 496: UINT8 RingString[] = {'R','I','N','G'};
 21977                           
 21978                           ; BSR set to: 0
 21979                           ;incstack = 0
 21980  002C54  C3C8  F097         	movff	ModemEvtParser@F9086,ModemEvtParser@RingString
 21981  002C58  C3C9  F098         	movff	ModemEvtParser@F9086+1,ModemEvtParser@RingString+1
 21982  002C5C  C3CA  F099         	movff	ModemEvtParser@F9086+2,ModemEvtParser@RingString+2
 21983  002C60  C3CB  F09A         	movff	ModemEvtParser@F9086+3,ModemEvtParser@RingString+3
 21984                           
 21985                           ;mdm_gsm_gprs.c: 497: UINT8 SmsString[] = {'+','C','M','T','I'};
 21986  002C64  EE23  F0C3         	lfsr	2,ModemEvtParser@F9088
 21987  002C68  EE10  F092         	lfsr	1,ModemEvtParser@SmsString
 21988  002C6C  0E04               	movlw	4
 21989  002C6E                     u12231:
 21990  002C6E  CFDB FFE3          	movff	plusw2,plusw1
 21991  002C72  06E8               	decf	wreg,f,c
 21992  002C74  E2FC               	bc	u12231
 21993                           
 21994                           ;mdm_gsm_gprs.c: 498: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 21995  002C76  EE23  F0B9         	lfsr	2,ModemEvtParser@F9090
 21996  002C7A  EE10  F088         	lfsr	1,ModemEvtParser@CallReadyString
 21997  002C7E  0E09               	movlw	9
 21998  002C80                     u12241:
 21999  002C80  CFDB FFE3          	movff	plusw2,plusw1
 22000  002C84  06E8               	decf	wreg,f,c
 22001  002C86  E2FC               	bc	u12241
 22002                           
 22003                           ;mdm_gsm_gprs.c: 499: UINT8 CompareIdx = 0;
 22004  002C88  0E00               	movlw	0
 22005  002C8A  0100               	movlb	0	; () banked
 22006  002C8C  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;mdm_gsm_gprs.c: 500: UINT8 Match = 0;
 22010  002C8E  0E00               	movlw	0
 22011  002C90  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22012                           
 22013                           ; BSR set to: 0
 22014                           ;mdm_gsm_gprs.c: 503: if (ReceiveEvt(&NewMdmEvtParserRequest))
 22015  002C92  0E3B               	movlw	low _NewMdmEvtParserRequest
 22016  002C94  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22017  002C96  0E00               	movlw	high _NewMdmEvtParserRequest
 22018  002C98  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22019  002C9A  EC10  F02D         	call	_ReceiveEvt	;wreg free
 22020  002C9E  0900               	iorlw	0
 22021  002CA0  B4D8               	btfsc	status,2,c
 22022  002CA2  0012               	return	
 22023                           
 22024                           ;mdm_gsm_gprs.c: 504: {
 22025                           ;mdm_gsm_gprs.c: 505: for (CompareIdx = 0; CompareIdx < ((UINT8)(3)); CompareIdx++)
 22026  002CA4  0E00               	movlw	0
 22027  002CA6  0100               	movlb	0	; () banked
 22028  002CA8  6F9C               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 22029  002CAA                     l13077:
 22030                           
 22031                           ; BSR set to: 0
 22032  002CAA  0E02               	movlw	2
 22033  002CAC  659C               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 22034  002CAE  D04C               	goto	l1044
 22035  002CB0  D058               	goto	u12300
 22036  002CB2                     
 22037                           ; BSR set to: 0
 22038                           ;mdm_gsm_gprs.c: 511: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 22039                           
 22040                           ; BSR set to: 0
 22041  002CB2  0E97               	movlw	low ModemEvtParser@RingString
 22042  002CB4  6F7D               	movwf	StringCompare@String1& (0+255),b
 22043  002CB6  0E00               	movlw	high ModemEvtParser@RingString
 22044  002CB8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22045  002CBA  0E58               	movlw	low _RxBuffer
 22046  002CBC  6F7F               	movwf	StringCompare@String2& (0+255),b
 22047  002CBE  0E0C               	movlw	high _RxBuffer
 22048  002CC0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22049  002CC2  0E00               	movlw	0
 22050  002CC4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22051  002CC6  0E04               	movlw	4
 22052  002CC8  6F81               	movwf	StringCompare@Len& (0+255),b
 22053  002CCA  EC40  F029         	call	_StringCompare	;wreg free
 22054  002CCE  0900               	iorlw	0
 22055  002CD0  B4D8               	btfsc	status,2,c
 22056  002CD2  D044               	goto	l1047
 22057                           
 22058                           ;mdm_gsm_gprs.c: 512: {
 22059                           ;mdm_gsm_gprs.c: 514: GenerateEvt(&RingEvent);
 22060  002CD4  0EDC               	movlw	low _RingEvent
 22061  002CD6  0100               	movlb	0	; () banked
 22062  002CD8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22063  002CDA  0E00               	movlw	high _RingEvent
 22064  002CDC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22065  002CDE  ECA4  F02E         	call	_GenerateEvt	;wreg free
 22066  002CE2  D018               	goto	l13091
 22067  002CE4                     
 22068                           ; BSR set to: 0
 22069                           ;mdm_gsm_gprs.c: 522: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 22070                           
 22071                           ; BSR set to: 0
 22072  002CE4  0E92               	movlw	low ModemEvtParser@SmsString
 22073  002CE6  6F7D               	movwf	StringCompare@String1& (0+255),b
 22074  002CE8  0E00               	movlw	high ModemEvtParser@SmsString
 22075  002CEA  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22076  002CEC  0E58               	movlw	low _RxBuffer
 22077  002CEE  6F7F               	movwf	StringCompare@String2& (0+255),b
 22078  002CF0  0E0C               	movlw	high _RxBuffer
 22079  002CF2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22080  002CF4  0E00               	movlw	0
 22081  002CF6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22082  002CF8  0E05               	movlw	5
 22083  002CFA  6F81               	movwf	StringCompare@Len& (0+255),b
 22084  002CFC  EC40  F029         	call	_StringCompare	;wreg free
 22085  002D00  0900               	iorlw	0
 22086  002D02  B4D8               	btfsc	status,2,c
 22087  002D04  D02B               	goto	l1047
 22088                           
 22089                           ;mdm_gsm_gprs.c: 523: {
 22090                           ;mdm_gsm_gprs.c: 525: GenerateEvt(&SmsEvent);
 22091  002D06  0EDB               	movlw	low _SmsEvent
 22092  002D08  0100               	movlb	0	; () banked
 22093  002D0A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22094  002D0C  0E00               	movlw	high _SmsEvent
 22095  002D0E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22096  002D10  ECA4  F02E         	call	_GenerateEvt	;wreg free
 22097  002D14                     l13091:
 22098                           
 22099                           ;mdm_gsm_gprs.c: 527: Match = 1;
 22100  002D14  0E01               	movlw	1
 22101  002D16  0100               	movlb	0	; () banked
 22102  002D18  D015               	goto	L25
 22103  002D1A                     
 22104                           ; BSR set to: 0
 22105                           ;mdm_gsm_gprs.c: 533: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 22106                           
 22107                           ; BSR set to: 0
 22108  002D1A  0E88               	movlw	low ModemEvtParser@CallReadyString
 22109  002D1C  6F7D               	movwf	StringCompare@String1& (0+255),b
 22110  002D1E  0E00               	movlw	high ModemEvtParser@CallReadyString
 22111  002D20  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22112  002D22  0E58               	movlw	low _RxBuffer
 22113  002D24  6F7F               	movwf	StringCompare@String2& (0+255),b
 22114  002D26  0E0C               	movlw	high _RxBuffer
 22115  002D28  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22116  002D2A  0E00               	movlw	0
 22117  002D2C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22118  002D2E  0E0A               	movlw	10
 22119  002D30  6F81               	movwf	StringCompare@Len& (0+255),b
 22120  002D32  EC40  F029         	call	_StringCompare	;wreg free
 22121  002D36  0900               	iorlw	0
 22122  002D38  B4D8               	btfsc	status,2,c
 22123  002D3A  D010               	goto	l1047
 22124                           
 22125                           ;mdm_gsm_gprs.c: 534: {
 22126                           ;mdm_gsm_gprs.c: 536: MdmStatus = ModemReady;
 22127  002D3C  0E02               	movlw	2
 22128  002D3E  0100               	movlb	0	; () banked
 22129  002D40  6FCF               	movwf	_MdmStatus& (0+255),b
 22130                           
 22131                           ;mdm_gsm_gprs.c: 538: Match = 1;
 22132  002D42  0E01               	movlw	1
 22133  002D44                     L25:
 22134  002D44  6F9B               	movwf	ModemEvtParser@Match& (0+255),b
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;mdm_gsm_gprs.c: 544: }
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;mdm_gsm_gprs.c: 543: break;
 22141                           
 22142                           ;mdm_gsm_gprs.c: 542: default:
 22143                           
 22144                           ; BSR set to: 0
 22145                           ;mdm_gsm_gprs.c: 539: }
 22146                           ;mdm_gsm_gprs.c: 540: break;
 22147  002D46  D00A               	goto	l1047
 22148  002D48                     l1044:
 22149                           
 22150                           ; BSR set to: 0
 22151                           
 22152                           ; BSR set to: 0
 22153  002D48  519C               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 22154                           
 22155                           ; Switch size 1, requested type "space"
 22156                           ; Number of cases is 3, Range of values is 0 to 2
 22157                           ; switch strategies available:
 22158                           ; Name         Instructions Cycles
 22159                           ; simple_byte           10     6 (average)
 22160                           ;	Chosen strategy is simple_byte
 22161  002D4A  0A00               	xorlw	0	; case 0
 22162  002D4C  B4D8               	btfsc	status,2,c
 22163  002D4E  D7B1               	goto	l1045
 22164  002D50  0A01               	xorlw	1	; case 1
 22165  002D52  B4D8               	btfsc	status,2,c
 22166  002D54  D7C7               	goto	l1048
 22167  002D56  0A03               	xorlw	3	; case 2
 22168  002D58  B4D8               	btfsc	status,2,c
 22169  002D5A  D7DF               	goto	l1050
 22170  002D5C                     l1047:
 22171                           
 22172                           ; BSR set to: 0
 22173  002D5C  0100               	movlb	0	; () banked
 22174  002D5E  2B9C               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 22175  002D60  D7A4               	goto	l13077
 22176  002D62                     u12300:
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;mdm_gsm_gprs.c: 545: }
 22180                           ;mdm_gsm_gprs.c: 548: if (Match == 1)
 22181                           
 22182                           ; BSR set to: 0
 22183  002D62  059B               	decf	ModemEvtParser@Match& (0+255),w,b
 22184  002D64  A4D8               	btfss	status,2,c
 22185  002D66  0012               	return	
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;mdm_gsm_gprs.c: 549: {
 22189                           ;mdm_gsm_gprs.c: 552: Uart_ClearRxBuffer();
 22190  002D68  EC4D  F02C         	call	_Uart_ClearRxBuffer	;wreg free
 22191  002D6C  0012               	return	
 22192  002D6E                     __end_of_ModemEvtParser:
 22193                           	opt stack 0
 22194                           tosu	equ	0xFFF
 22195                           tosh	equ	0xFFE
 22196                           tosl	equ	0xFFD
 22197                           pclath	equ	0xFFA
 22198                           tblptru	equ	0xFF8
 22199                           tblptrh	equ	0xFF7
 22200                           tblptrl	equ	0xFF6
 22201                           tablat	equ	0xFF5
 22202                           prodh	equ	0xFF4
 22203                           prodl	equ	0xFF3
 22204                           intcon	equ	0xFF2
 22205                           intcon2	equ	0xFF1
 22206                           intcon3	equ	0xFF0
 22207                           indf0	equ	0xFEF
 22208                           postinc0	equ	0xFEE
 22209                           plusw0	equ	0xFEB
 22210                           fsr0h	equ	0xFEA
 22211                           fsr0l	equ	0xFE9
 22212                           wreg	equ	0xFE8
 22213                           indf1	equ	0xFE7
 22214                           postinc1	equ	0xFE6
 22215                           postdec1	equ	0xFE5
 22216                           plusw1	equ	0xFE3
 22217                           fsr1h	equ	0xFE2
 22218                           fsr1l	equ	0xFE1
 22219                           indf2	equ	0xFDF
 22220                           postinc2	equ	0xFDE
 22221                           postdec2	equ	0xFDD
 22222                           plusw2	equ	0xFDB
 22223                           fsr2h	equ	0xFDA
 22224                           fsr2l	equ	0xFD9
 22225                           status	equ	0xFD8
 22226                           
 22227 ;; *************** function _Uart_ClearRxBuffer *****************
 22228 ;; Defined at:
 22229 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 22230 ;; Parameters:    Size  Location     Type
 22231 ;;		None
 22232 ;; Auto vars:     Size  Location     Type
 22233 ;;  Index           2   29[BANK0 ] unsigned short 
 22234 ;; Return value:  Size  Location     Type
 22235 ;;                  1    wreg      void 
 22236 ;; Registers used:
 22237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22238 ;; Tracked objects:
 22239 ;;		On entry : 0/0
 22240 ;;		On exit  : 0/0
 22241 ;;		Unchanged: 0/0
 22242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22244 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22246 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22247 ;;Total ram usage:        2 bytes
 22248 ;; Hardware stack levels used:    1
 22249 ;; Hardware stack levels required when called:   11
 22250 ;; This function calls:
 22251 ;;		Nothing
 22252 ;; This function is called by:
 22253 ;;		_ModemEvtParser
 22254 ;; This function uses a non-reentrant model
 22255 ;;
 22256                           
 22257                           	psect	text102
 22258  00589A                     __ptext102:
 22259                           	opt stack 0
 22260  00589A                     _Uart_ClearRxBuffer:
 22261                           	opt stack 15
 22262                           
 22263                           ;uart_drv.c: 567: UINT16 Index = 0;
 22264                           
 22265                           ;incstack = 0
 22266  00589A  0E00               	movlw	0
 22267  00589C  0100               	movlb	0	; () banked
 22268  00589E  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22269  0058A0  0E00               	movlw	0
 22270  0058A2  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22271                           
 22272                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 22273  0058A4  0E00               	movlw	0
 22274  0058A6  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 22275  0058A8  0E00               	movlw	0
 22276  0058AA  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 22277  0058AC                     l9101:
 22278                           
 22279                           ; BSR set to: 0
 22280  0058AC  0E90               	movlw	144
 22281  0058AE  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22282  0058B0  0E01               	movlw	1
 22283  0058B2  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22284  0058B4  B0D8               	btfsc	status,0,c
 22285  0058B6  0012               	return	
 22286                           
 22287                           ; BSR set to: 0
 22288                           ;uart_drv.c: 571: {
 22289                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 22290                           
 22291                           ; BSR set to: 0
 22292                           
 22293                           ; BSR set to: 0
 22294  0058B8  0E58               	movlw	low _RxBuffer
 22295  0058BA  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 22296  0058BC  6ED9               	movwf	fsr2l,c
 22297  0058BE  0E0C               	movlw	high _RxBuffer
 22298  0058C0  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 22299  0058C2  6EDA               	movwf	fsr2h,c
 22300  0058C4  0E00               	movlw	0
 22301  0058C6  6EDF               	movwf	indf2,c
 22302                           
 22303                           ; BSR set to: 0
 22304  0058C8  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 22305  0058CA  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 22306  0058CC  D7EF               	goto	l9101
 22307  0058CE                     __end_of_Uart_ClearRxBuffer:
 22308                           	opt stack 0
 22309                           tosu	equ	0xFFF
 22310                           tosh	equ	0xFFE
 22311                           tosl	equ	0xFFD
 22312                           pclath	equ	0xFFA
 22313                           tblptru	equ	0xFF8
 22314                           tblptrh	equ	0xFF7
 22315                           tblptrl	equ	0xFF6
 22316                           tablat	equ	0xFF5
 22317                           prodh	equ	0xFF4
 22318                           prodl	equ	0xFF3
 22319                           intcon	equ	0xFF2
 22320                           intcon2	equ	0xFF1
 22321                           intcon3	equ	0xFF0
 22322                           indf0	equ	0xFEF
 22323                           postinc0	equ	0xFEE
 22324                           plusw0	equ	0xFEB
 22325                           fsr0h	equ	0xFEA
 22326                           fsr0l	equ	0xFE9
 22327                           wreg	equ	0xFE8
 22328                           indf1	equ	0xFE7
 22329                           postinc1	equ	0xFE6
 22330                           postdec1	equ	0xFE5
 22331                           plusw1	equ	0xFE3
 22332                           fsr1h	equ	0xFE2
 22333                           fsr1l	equ	0xFE1
 22334                           indf2	equ	0xFDF
 22335                           postinc2	equ	0xFDE
 22336                           postdec2	equ	0xFDD
 22337                           plusw2	equ	0xFDB
 22338                           fsr2h	equ	0xFDA
 22339                           fsr2l	equ	0xFD9
 22340                           status	equ	0xFD8
 22341                           
 22342 ;; *************** function _StringCompare *****************
 22343 ;; Defined at:
 22344 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 22345 ;; Parameters:    Size  Location     Type
 22346 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 22347 ;;		 -> ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@RingString(4), 
 22348 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 22349 ;;		 -> RxBuffer(400), 
 22350 ;;  Len             2   33[BANK0 ] unsigned short 
 22351 ;; Auto vars:     Size  Location     Type
 22352 ;;  Index           2   38[BANK0 ] unsigned short 
 22353 ;;  Result          1   37[BANK0 ] unsigned char 
 22354 ;; Return value:  Size  Location     Type
 22355 ;;                  1    wreg      unsigned char 
 22356 ;; Registers used:
 22357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22358 ;; Tracked objects:
 22359 ;;		On entry : 0/0
 22360 ;;		On exit  : 0/0
 22361 ;;		Unchanged: 0/0
 22362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22363 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22364 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22366 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22367 ;;Total ram usage:       11 bytes
 22368 ;; Hardware stack levels used:    1
 22369 ;; Hardware stack levels required when called:   11
 22370 ;; This function calls:
 22371 ;;		Nothing
 22372 ;; This function is called by:
 22373 ;;		_ModemEvtParser
 22374 ;; This function uses a non-reentrant model
 22375 ;;
 22376                           
 22377                           	psect	text103
 22378  005280                     __ptext103:
 22379                           	opt stack 0
 22380  005280                     _StringCompare:
 22381                           	opt stack 15
 22382                           
 22383                           ;sf.c: 77: UINT16 Index = 0;
 22384                           
 22385                           ; BSR set to: 0
 22386                           ;incstack = 0
 22387  005280  0E00               	movlw	0
 22388  005282  0100               	movlb	0	; () banked
 22389  005284  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 22390  005286  0E00               	movlw	0
 22391  005288  6F86               	movwf	StringCompare@Index& (0+255),b
 22392                           
 22393                           ;sf.c: 78: UINT8 Result = 1;
 22394  00528A  0E01               	movlw	1
 22395  00528C  6F85               	movwf	StringCompare@Result& (0+255),b
 22396                           
 22397                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 22398  00528E  0E00               	movlw	0
 22399  005290  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 22400  005292  0E00               	movlw	0
 22401  005294  6F86               	movwf	StringCompare@Index& (0+255),b
 22402  005296  D015               	goto	l2197
 22403  005298                     
 22404                           ; BSR set to: 0
 22405                           ;sf.c: 82: {
 22406                           ;sf.c: 83: if (String1[Index] != String2[Index])
 22407                           
 22408                           ; BSR set to: 0
 22409  005298  5186               	movf	StringCompare@Index& (0+255),w,b
 22410  00529A  257F               	addwf	StringCompare@String2& (0+255),w,b
 22411  00529C  6ED9               	movwf	fsr2l,c
 22412  00529E  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 22413  0052A0  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 22414  0052A2  6EDA               	movwf	fsr2h,c
 22415  0052A4  5186               	movf	StringCompare@Index& (0+255),w,b
 22416  0052A6  257D               	addwf	StringCompare@String1& (0+255),w,b
 22417  0052A8  6EE1               	movwf	fsr1l,c
 22418  0052AA  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 22419  0052AC  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 22420  0052AE  6EE2               	movwf	fsr1h,c
 22421  0052B0  50DE               	movf	postinc2,w,c
 22422  0052B2  18E6               	xorwf	postinc1,w,c
 22423  0052B4  B4D8               	btfsc	status,2,c
 22424  0052B6  D003               	goto	l2199
 22425                           
 22426                           ; BSR set to: 0
 22427                           ;sf.c: 84: {
 22428                           ;sf.c: 85: Result = 0;
 22429  0052B8  0E00               	movlw	0
 22430  0052BA  6F85               	movwf	StringCompare@Result& (0+255),b
 22431                           
 22432                           ;sf.c: 86: break;
 22433  0052BC  D008               	goto	u7170
 22434  0052BE                     l2199:
 22435                           
 22436                           ; BSR set to: 0
 22437                           
 22438                           ; BSR set to: 0
 22439  0052BE  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 22440  0052C0  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 22441  0052C2                     l2197:
 22442                           
 22443                           ; BSR set to: 0
 22444                           
 22445                           ; BSR set to: 0
 22446  0052C2  5181               	movf	StringCompare@Len& (0+255),w,b
 22447  0052C4  5D86               	subwf	StringCompare@Index& (0+255),w,b
 22448  0052C6  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 22449  0052C8  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 22450  0052CA  A0D8               	btfss	status,0,c
 22451  0052CC  D7E5               	goto	l2198
 22452  0052CE                     u7170:
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;sf.c: 87: }
 22456                           ;sf.c: 88: }
 22457                           ;sf.c: 91: return Result;
 22458                           
 22459                           ; BSR set to: 0
 22460  0052CE  5185               	movf	StringCompare@Result& (0+255),w,b
 22461  0052D0  0012               	return	
 22462  0052D2                     __end_of_StringCompare:
 22463                           	opt stack 0
 22464                           tosu	equ	0xFFF
 22465                           tosh	equ	0xFFE
 22466                           tosl	equ	0xFFD
 22467                           pclath	equ	0xFFA
 22468                           tblptru	equ	0xFF8
 22469                           tblptrh	equ	0xFF7
 22470                           tblptrl	equ	0xFF6
 22471                           tablat	equ	0xFF5
 22472                           prodh	equ	0xFF4
 22473                           prodl	equ	0xFF3
 22474                           intcon	equ	0xFF2
 22475                           intcon2	equ	0xFF1
 22476                           intcon3	equ	0xFF0
 22477                           indf0	equ	0xFEF
 22478                           postinc0	equ	0xFEE
 22479                           plusw0	equ	0xFEB
 22480                           fsr0h	equ	0xFEA
 22481                           fsr0l	equ	0xFE9
 22482                           wreg	equ	0xFE8
 22483                           indf1	equ	0xFE7
 22484                           postinc1	equ	0xFE6
 22485                           postdec1	equ	0xFE5
 22486                           plusw1	equ	0xFE3
 22487                           fsr1h	equ	0xFE2
 22488                           fsr1l	equ	0xFE1
 22489                           indf2	equ	0xFDF
 22490                           postinc2	equ	0xFDE
 22491                           postdec2	equ	0xFDD
 22492                           plusw2	equ	0xFDB
 22493                           fsr2h	equ	0xFDA
 22494                           fsr2l	equ	0xFD9
 22495                           status	equ	0xFD8
 22496                           
 22497 ;; *************** function _GetSmsSm *****************
 22498 ;; Defined at:
 22499 ;;		line 566 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22500 ;; Parameters:    Size  Location     Type
 22501 ;;		None
 22502 ;; Auto vars:     Size  Location     Type
 22503 ;;		None
 22504 ;; Return value:  Size  Location     Type
 22505 ;;                  1    wreg      void 
 22506 ;; Registers used:
 22507 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22508 ;; Tracked objects:
 22509 ;;		On entry : 0/0
 22510 ;;		On exit  : 0/0
 22511 ;;		Unchanged: 0/0
 22512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22517 ;;Total ram usage:        0 bytes
 22518 ;; Hardware stack levels used:    1
 22519 ;; Hardware stack levels required when called:   13
 22520 ;; This function calls:
 22521 ;;		_GenerateEvt
 22522 ;;		_ReceiveEvt
 22523 ;;		_StringCopy
 22524 ;;		_Uart_WriteConstString
 22525 ;; This function is called by:
 22526 ;;		_Mdm_MainTask
 22527 ;; This function uses a non-reentrant model
 22528 ;;
 22529                           
 22530                           	psect	text104
 22531  002F5C                     __ptext104:
 22532                           	opt stack 0
 22533  002F5C                     _GetSmsSm:
 22534                           	opt stack 14
 22535                           
 22536                           ;mdm_gsm_gprs.c: 568: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 22537                           ;mdm_gsm_gprs.c: 571: if (MdmStatus == ModemConfigured)
 22538                           
 22539                           ; BSR set to: 0
 22540                           ;incstack = 0
 22541  002F5C  0E03               	movlw	3
 22542  002F5E  0100               	movlb	0	; () banked
 22543  002F60  19CF               	xorwf	_MdmStatus& (0+255),w,b
 22544  002F62  A4D8               	btfss	status,2,c
 22545  002F64  0012               	return	
 22546  002F66  D060               	goto	l1060
 22547  002F68                     
 22548                           ;mdm_gsm_gprs.c: 577: if (ReceiveEvt(&GetSmsText))
 22549                           
 22550                           ; BSR set to: 0
 22551  002F68  0EDA               	movlw	low _GetSmsText
 22552  002F6A  0100               	movlb	0	; () banked
 22553  002F6C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22554  002F6E  0E00               	movlw	high _GetSmsText
 22555  002F70  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22556  002F72  EC10  F02D         	call	_ReceiveEvt	;wreg free
 22557  002F76  0900               	iorlw	0
 22558  002F78  B4D8               	btfsc	status,2,c
 22559  002F7A  0012               	return	
 22560                           
 22561                           ;mdm_gsm_gprs.c: 578: {
 22562                           ;mdm_gsm_gprs.c: 580: GetSmsState = GetSms_SendAtCmd;
 22563  002F7C  0E01               	movlw	1
 22564  002F7E  6E26               	movwf	GetSmsSm@GetSmsState,c
 22565                           
 22566                           ;mdm_gsm_gprs.c: 581: }
 22567                           ;mdm_gsm_gprs.c: 582: break;
 22568  002F80  0012               	return	
 22569  002F82                     
 22570                           ;mdm_gsm_gprs.c: 586: Uart_WriteConstString(1,"AT+CMGR=1\r");
 22571  002F82  0EC2               	movlw	low STR_4
 22572  002F84  0100               	movlb	0	; () banked
 22573  002F86  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22574  002F88  0EFF               	movlw	high STR_4
 22575  002F8A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22576  002F8C  0E01               	movlw	1
 22577  002F8E  EC1B  F02B         	call	_Uart_WriteConstString
 22578                           
 22579                           ;mdm_gsm_gprs.c: 588: GetSmsState = GetSms_StoreHeader;
 22580  002F92  0E02               	movlw	2
 22581  002F94  6E26               	movwf	GetSmsSm@GetSmsState,c
 22582                           
 22583                           ;mdm_gsm_gprs.c: 589: break;
 22584  002F96  0012               	return	
 22585  002F98                     
 22586                           ;mdm_gsm_gprs.c: 593: if (ReceiveEvt(&NewStringReceived))
 22587  002F98  0E3C               	movlw	low _NewStringReceived
 22588  002F9A  0100               	movlb	0	; () banked
 22589  002F9C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22590  002F9E  0E00               	movlw	high _NewStringReceived
 22591  002FA0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22592  002FA2  EC10  F02D         	call	_ReceiveEvt	;wreg free
 22593  002FA6  0900               	iorlw	0
 22594  002FA8  B4D8               	btfsc	status,2,c
 22595  002FAA  0012               	return	
 22596                           
 22597                           ;mdm_gsm_gprs.c: 594: {
 22598                           ;mdm_gsm_gprs.c: 595: if (RxBuffer[0] != 0)
 22599  002FAC  EE2C  F058         	lfsr	2,_RxBuffer
 22600  002FB0  50DF               	movf	indf2,w,c
 22601  002FB2  B4D8               	btfsc	status,2,c
 22602  002FB4  0012               	return	
 22603                           
 22604                           ;mdm_gsm_gprs.c: 596: {
 22605                           ;mdm_gsm_gprs.c: 598: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 22606  002FB6  0E58               	movlw	low _RxBuffer
 22607  002FB8  0100               	movlb	0	; () banked
 22608  002FBA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22609  002FBC  0E0C               	movlw	high _RxBuffer
 22610  002FBE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22611  002FC0  0E00               	movlw	low _Mdm_SmsRx
 22612  002FC2  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22613  002FC4  0E07               	movlw	high _Mdm_SmsRx
 22614  002FC6  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22615  002FC8  C0BE  F081         	movff	_RxLen,StringCopy@Len
 22616  002FCC  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 22617  002FD0  ECD4  F026         	call	_StringCopy	;wreg free
 22618                           
 22619                           ;mdm_gsm_gprs.c: 600: Mdm_SmsRx.HeadLen = RxLen;
 22620  002FD4  C0BE  F782         	movff	_RxLen,_Mdm_SmsRx+130
 22621                           
 22622                           ;mdm_gsm_gprs.c: 602: GetSmsState = GetSms_StoreText;
 22623  002FD8  0E03               	movlw	3
 22624  002FDA  6E26               	movwf	GetSmsSm@GetSmsState,c
 22625                           
 22626                           ;mdm_gsm_gprs.c: 603: }
 22627                           ;mdm_gsm_gprs.c: 604: }
 22628                           ;mdm_gsm_gprs.c: 605: break;
 22629  002FDC  0012               	return	
 22630  002FDE                     
 22631                           ;mdm_gsm_gprs.c: 609: if (ReceiveEvt(&NewStringReceived))
 22632  002FDE  0E3C               	movlw	low _NewStringReceived
 22633  002FE0  0100               	movlb	0	; () banked
 22634  002FE2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22635  002FE4  0E00               	movlw	high _NewStringReceived
 22636  002FE6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22637  002FE8  EC10  F02D         	call	_ReceiveEvt	;wreg free
 22638  002FEC  0900               	iorlw	0
 22639  002FEE  B4D8               	btfsc	status,2,c
 22640  002FF0  0012               	return	
 22641                           
 22642                           ;mdm_gsm_gprs.c: 610: {
 22643                           ;mdm_gsm_gprs.c: 612: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 22644  002FF2  0E58               	movlw	low _RxBuffer
 22645  002FF4  0100               	movlb	0	; () banked
 22646  002FF6  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22647  002FF8  0E0C               	movlw	high _RxBuffer
 22648  002FFA  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22649  002FFC  0E50               	movlw	low (_Mdm_SmsRx+80)
 22650  002FFE  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22651  003000  0E07               	movlw	high (_Mdm_SmsRx+80)
 22652  003002  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22653  003004  C0BE  F081         	movff	_RxLen,StringCopy@Len
 22654  003008  C0BF  F082         	movff	_RxLen+1,StringCopy@Len+1
 22655  00300C  ECD4  F026         	call	_StringCopy	;wreg free
 22656                           
 22657                           ;mdm_gsm_gprs.c: 614: Mdm_SmsRx.TextLen = RxLen;
 22658  003010  C0BE  F783         	movff	_RxLen,_Mdm_SmsRx+131
 22659                           
 22660                           ;mdm_gsm_gprs.c: 616: GetSmsState = GetSms_CheckReq;
 22661  003014  0E00               	movlw	0
 22662  003016  6E26               	movwf	GetSmsSm@GetSmsState,c
 22663                           
 22664                           ;mdm_gsm_gprs.c: 618: GenerateEvt(&SmsTxtReady);
 22665  003018  0ED9               	movlw	low _SmsTxtReady
 22666  00301A  0100               	movlb	0	; () banked
 22667  00301C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22668  00301E  0E00               	movlw	high _SmsTxtReady
 22669  003020  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22670  003022  ECA4  F02E         	call	_GenerateEvt	;wreg free
 22671                           
 22672                           ;mdm_gsm_gprs.c: 624: }
 22673                           
 22674                           ;mdm_gsm_gprs.c: 623: break;
 22675                           
 22676                           ;mdm_gsm_gprs.c: 622: default:
 22677                           
 22678                           ;mdm_gsm_gprs.c: 619: }
 22679                           ;mdm_gsm_gprs.c: 620: break;
 22680  003026  0012               	return	
 22681  003028                     l1060:
 22682  003028  5026               	movf	GetSmsSm@GetSmsState,w,c
 22683                           
 22684                           ; Switch size 1, requested type "space"
 22685                           ; Number of cases is 4, Range of values is 0 to 3
 22686                           ; switch strategies available:
 22687                           ; Name         Instructions Cycles
 22688                           ; simple_byte           13     7 (average)
 22689                           ;	Chosen strategy is simple_byte
 22690  00302A  0A00               	xorlw	0	; case 0
 22691  00302C  B4D8               	btfsc	status,2,c
 22692  00302E  D79C               	goto	l1061
 22693  003030  0A01               	xorlw	1	; case 1
 22694  003032  B4D8               	btfsc	status,2,c
 22695  003034  D7A6               	goto	l1064
 22696  003036  0A03               	xorlw	3	; case 2
 22697  003038  B4D8               	btfsc	status,2,c
 22698  00303A  D7AE               	goto	l1065
 22699  00303C  0A01               	xorlw	1	; case 3
 22700  00303E  A4D8               	btfss	status,2,c
 22701  003040  0012               	return	
 22702  003042  D7CD               	goto	l1068
 22703  003044                     __end_of_GetSmsSm:
 22704                           	opt stack 0
 22705                           tosu	equ	0xFFF
 22706                           tosh	equ	0xFFE
 22707                           tosl	equ	0xFFD
 22708                           pclath	equ	0xFFA
 22709                           tblptru	equ	0xFF8
 22710                           tblptrh	equ	0xFF7
 22711                           tblptrl	equ	0xFF6
 22712                           tablat	equ	0xFF5
 22713                           prodh	equ	0xFF4
 22714                           prodl	equ	0xFF3
 22715                           intcon	equ	0xFF2
 22716                           intcon2	equ	0xFF1
 22717                           intcon3	equ	0xFF0
 22718                           indf0	equ	0xFEF
 22719                           postinc0	equ	0xFEE
 22720                           plusw0	equ	0xFEB
 22721                           fsr0h	equ	0xFEA
 22722                           fsr0l	equ	0xFE9
 22723                           wreg	equ	0xFE8
 22724                           indf1	equ	0xFE7
 22725                           postinc1	equ	0xFE6
 22726                           postdec1	equ	0xFE5
 22727                           plusw1	equ	0xFE3
 22728                           fsr1h	equ	0xFE2
 22729                           fsr1l	equ	0xFE1
 22730                           indf2	equ	0xFDF
 22731                           postinc2	equ	0xFDE
 22732                           postdec2	equ	0xFDD
 22733                           plusw2	equ	0xFDB
 22734                           fsr2h	equ	0xFDA
 22735                           fsr2l	equ	0xFD9
 22736                           status	equ	0xFD8
 22737                           
 22738 ;; *************** function _ConfigureModem *****************
 22739 ;; Defined at:
 22740 ;;		line 414 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22741 ;; Parameters:    Size  Location     Type
 22742 ;;		None
 22743 ;; Auto vars:     Size  Location     Type
 22744 ;;		None
 22745 ;; Return value:  Size  Location     Type
 22746 ;;                  1    wreg      void 
 22747 ;; Registers used:
 22748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22749 ;; Tracked objects:
 22750 ;;		On entry : 0/0
 22751 ;;		On exit  : 0/0
 22752 ;;		Unchanged: 0/0
 22753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22758 ;;Total ram usage:        0 bytes
 22759 ;; Hardware stack levels used:    1
 22760 ;; Hardware stack levels required when called:   14
 22761 ;; This function calls:
 22762 ;;		_GenerateEvt
 22763 ;;		_UartSetConfigLow
 22764 ;;		_Uart_InitUartModule
 22765 ;;		_Uart_WriteConstString
 22766 ;; This function is called by:
 22767 ;;		_Mdm_MainTask
 22768 ;; This function uses a non-reentrant model
 22769 ;;
 22770                           
 22771                           	psect	text105
 22772  0037F2                     __ptext105:
 22773                           	opt stack 0
 22774  0037F2                     _ConfigureModem:
 22775                           	opt stack 13
 22776                           
 22777                           ;mdm_gsm_gprs.c: 416: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 22778                           ;mdm_gsm_gprs.c: 417: static MdmConfigStateType NextState = MdmCfg_Init;
 22779                           ;mdm_gsm_gprs.c: 418: static UINT16 DelayValueMs = 0;
 22780                           ;mdm_gsm_gprs.c: 419: static UINT16 DelayCounter = 0;
 22781                           ;mdm_gsm_gprs.c: 421: switch (MdmConfigState)
 22782                           
 22783                           ;incstack = 0
 22784  0037F2  D052               	goto	l1021
 22785  0037F4                     
 22786                           ;mdm_gsm_gprs.c: 425: if (MdmStatus == ModemReady)
 22787  0037F4  0E02               	movlw	2
 22788  0037F6  0100               	movlb	0	; () banked
 22789  0037F8  19CF               	xorwf	_MdmStatus& (0+255),w,b
 22790  0037FA  A4D8               	btfss	status,2,c
 22791  0037FC  0012               	return	
 22792                           
 22793                           ; BSR set to: 0
 22794                           ;mdm_gsm_gprs.c: 426: {
 22795                           ;mdm_gsm_gprs.c: 428: MdmConfigState = MdmCfg_ChangeBaud;
 22796  0037FE  0E01               	movlw	1
 22797  003800  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22798                           
 22799                           ; BSR set to: 0
 22800                           ;mdm_gsm_gprs.c: 429: }
 22801                           ;mdm_gsm_gprs.c: 430: break;
 22802  003802  0012               	return	
 22803  003804                     
 22804                           ;mdm_gsm_gprs.c: 434: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 22805                           
 22806                           ; BSR set to: 0
 22807  003804  0E81               	movlw	low STR_2
 22808  003806  0100               	movlb	0	; () banked
 22809  003808  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22810  00380A  0EFF               	movlw	high STR_2
 22811  00380C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22812  00380E  0E01               	movlw	1
 22813  003810  EC1B  F02B         	call	_Uart_WriteConstString
 22814                           
 22815                           ;mdm_gsm_gprs.c: 436: UartSetConfigLow();
 22816  003814  EC16  F028         	call	_UartSetConfigLow	;wreg free
 22817                           
 22818                           ;mdm_gsm_gprs.c: 438: Uart_InitUartModule(1,&UartConfig);
 22819  003818  0E26               	movlw	low _UartConfig
 22820  00381A  0100               	movlb	0	; () banked
 22821  00381C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 22822  00381E  0E03               	movlw	high _UartConfig
 22823  003820  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 22824  003822  0E01               	movlw	1
 22825  003824  EC5E  F005         	call	_Uart_InitUartModule
 22826                           
 22827                           ;mdm_gsm_gprs.c: 440: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 22828  003828  0E03               	movlw	3
 22829  00382A  0102               	movlb	2	; () banked
 22830  00382C  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 22831  00382E  0EE8               	movlw	232
 22832  003830  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 22833                           
 22834                           ; BSR set to: 2
 22835                           ;mdm_gsm_gprs.c: 442: NextState = MdmCfg_SetMdmEchoMode;
 22836  003832  0E02               	movlw	2
 22837  003834  6E27               	movwf	ConfigureModem@NextState,c
 22838                           
 22839                           ; BSR set to: 2
 22840                           ;mdm_gsm_gprs.c: 443: MdmConfigState = MdmCfg_Delay;
 22841  003836  0E04               	movlw	4
 22842  003838  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22843                           
 22844                           ;mdm_gsm_gprs.c: 444: break;
 22845  00383A  0012               	return	
 22846  00383C                     
 22847                           ;mdm_gsm_gprs.c: 448: Uart_WriteConstString(1,"ATE0\r\n");
 22848                           
 22849                           ; BSR set to: 2
 22850  00383C  0EDE               	movlw	low STR_3
 22851  00383E  0100               	movlb	0	; () banked
 22852  003840  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22853  003842  0EFF               	movlw	high STR_3
 22854  003844  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22855  003846  0E01               	movlw	1
 22856  003848  EC1B  F02B         	call	_Uart_WriteConstString
 22857                           
 22858                           ;mdm_gsm_gprs.c: 450: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 22859  00384C  0E03               	movlw	3
 22860  00384E  0102               	movlb	2	; () banked
 22861  003850  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 22862  003852  0EE8               	movlw	232
 22863  003854  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 22864                           
 22865                           ; BSR set to: 2
 22866                           ;mdm_gsm_gprs.c: 452: NextState = MdmCfg_UpdateMdmSts;
 22867  003856  0E05               	movlw	5
 22868  003858  6E27               	movwf	ConfigureModem@NextState,c
 22869                           
 22870                           ; BSR set to: 2
 22871                           ;mdm_gsm_gprs.c: 453: MdmConfigState = MdmCfg_Delay;
 22872  00385A  0E04               	movlw	4
 22873  00385C  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22874                           
 22875                           ;mdm_gsm_gprs.c: 454: break;
 22876  00385E  0012               	return	
 22877  003860                     
 22878                           ;mdm_gsm_gprs.c: 458: DelayCounter++;
 22879                           
 22880                           ; BSR set to: 2
 22881  003860  0102               	movlb	2	; () banked
 22882  003862  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 22883  003864  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 22884                           
 22885                           ; BSR set to: 2
 22886                           ;mdm_gsm_gprs.c: 460: if (DelayCounter >= DelayValueMs)
 22887  003866  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 22888  003868  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 22889  00386A  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 22890  00386C  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 22891  00386E  A0D8               	btfss	status,0,c
 22892  003870  0012               	return	
 22893                           
 22894                           ; BSR set to: 2
 22895                           ;mdm_gsm_gprs.c: 461: {
 22896                           ;mdm_gsm_gprs.c: 463: DelayCounter = 0;
 22897  003872  0E00               	movlw	0
 22898  003874  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 22899  003876  0E00               	movlw	0
 22900  003878  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 22901                           
 22902                           ; BSR set to: 2
 22903                           ;mdm_gsm_gprs.c: 465: MdmConfigState = NextState;
 22904  00387A  C027  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 22905                           
 22906                           ; BSR set to: 2
 22907                           ;mdm_gsm_gprs.c: 466: }
 22908                           ;mdm_gsm_gprs.c: 467: break;
 22909  00387E  0012               	return	
 22910  003880                     
 22911                           ;mdm_gsm_gprs.c: 471: MdmStatus = ModemConfigured;
 22912                           
 22913                           ; BSR set to: 2
 22914  003880  0E03               	movlw	3
 22915  003882  0100               	movlb	0	; () banked
 22916  003884  6FCF               	movwf	_MdmStatus& (0+255),b
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;mdm_gsm_gprs.c: 473: GenerateEvt(&MdmStsReady);
 22920  003886  0E39               	movlw	low _MdmStsReady
 22921  003888  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22922  00388A  0E00               	movlw	high _MdmStsReady
 22923  00388C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22924  00388E  ECA4  F02E         	call	_GenerateEvt	;wreg free
 22925                           
 22926                           ;mdm_gsm_gprs.c: 475: MdmConfigState = MdmCfg_Stop;
 22927  003892  0E06               	movlw	6
 22928  003894  6E28               	movwf	ConfigureModem@MdmConfigState,c
 22929                           
 22930                           ;mdm_gsm_gprs.c: 483: }
 22931                           
 22932                           ;mdm_gsm_gprs.c: 482: break;
 22933                           
 22934                           ;mdm_gsm_gprs.c: 481: default:
 22935                           
 22936                           ;mdm_gsm_gprs.c: 479: break;
 22937                           
 22938                           ;mdm_gsm_gprs.c: 478: case MdmCfg_Stop:
 22939                           
 22940                           ;mdm_gsm_gprs.c: 476: break;
 22941  003896  0012               	return	
 22942  003898                     l1021:
 22943  003898  5028               	movf	ConfigureModem@MdmConfigState,w,c
 22944                           
 22945                           ; Switch size 1, requested type "space"
 22946                           ; Number of cases is 6, Range of values is 0 to 6
 22947                           ; switch strategies available:
 22948                           ; Name         Instructions Cycles
 22949                           ; simple_byte           19    10 (average)
 22950                           ;	Chosen strategy is simple_byte
 22951  00389A  0A00               	xorlw	0	; case 0
 22952  00389C  B4D8               	btfsc	status,2,c
 22953  00389E  D7AA               	goto	l1022
 22954  0038A0  0A01               	xorlw	1	; case 1
 22955  0038A2  B4D8               	btfsc	status,2,c
 22956  0038A4  D7AF               	goto	l1025
 22957  0038A6  0A03               	xorlw	3	; case 2
 22958  0038A8  B4D8               	btfsc	status,2,c
 22959  0038AA  D7C8               	goto	l1026
 22960  0038AC  0A06               	xorlw	6	; case 4
 22961  0038AE  B4D8               	btfsc	status,2,c
 22962  0038B0  D7D7               	goto	l1027
 22963  0038B2  0A01               	xorlw	1	; case 5
 22964  0038B4  B4D8               	btfsc	status,2,c
 22965  0038B6  D7E4               	goto	l1029
 22966  0038B8  0A03               	xorlw	3	; case 6
 22967  0038BA  0012               	return	
 22968  0038BC                     __end_of_ConfigureModem:
 22969                           	opt stack 0
 22970                           tosu	equ	0xFFF
 22971                           tosh	equ	0xFFE
 22972                           tosl	equ	0xFFD
 22973                           pclath	equ	0xFFA
 22974                           tblptru	equ	0xFF8
 22975                           tblptrh	equ	0xFF7
 22976                           tblptrl	equ	0xFF6
 22977                           tablat	equ	0xFF5
 22978                           prodh	equ	0xFF4
 22979                           prodl	equ	0xFF3
 22980                           intcon	equ	0xFF2
 22981                           intcon2	equ	0xFF1
 22982                           intcon3	equ	0xFF0
 22983                           indf0	equ	0xFEF
 22984                           postinc0	equ	0xFEE
 22985                           plusw0	equ	0xFEB
 22986                           fsr0h	equ	0xFEA
 22987                           fsr0l	equ	0xFE9
 22988                           wreg	equ	0xFE8
 22989                           indf1	equ	0xFE7
 22990                           postinc1	equ	0xFE6
 22991                           postdec1	equ	0xFE5
 22992                           plusw1	equ	0xFE3
 22993                           fsr1h	equ	0xFE2
 22994                           fsr1l	equ	0xFE1
 22995                           indf2	equ	0xFDF
 22996                           postinc2	equ	0xFDE
 22997                           postdec2	equ	0xFDD
 22998                           plusw2	equ	0xFDB
 22999                           fsr2h	equ	0xFDA
 23000                           fsr2l	equ	0xFD9
 23001                           status	equ	0xFD8
 23002                           
 23003 ;; *************** function _Uart_InitUartModule *****************
 23004 ;; Defined at:
 23005 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;  Module          1    wreg     unsigned char 
 23008 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 23009 ;;		 -> UartConfig(21), 
 23010 ;; Auto vars:     Size  Location     Type
 23011 ;;  Module          1   65[BANK0 ] unsigned char 
 23012 ;; Return value:  Size  Location     Type
 23013 ;;                  1    wreg      void 
 23014 ;; Registers used:
 23015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23016 ;; Tracked objects:
 23017 ;;		On entry : 0/0
 23018 ;;		On exit  : 0/0
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23023 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23024 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23025 ;;Total ram usage:        5 bytes
 23026 ;; Hardware stack levels used:    1
 23027 ;; Hardware stack levels required when called:   13
 23028 ;; This function calls:
 23029 ;;		_SetUartBaudRate
 23030 ;; This function is called by:
 23031 ;;		_ConfigureModem
 23032 ;;		_Mdm_MainTask
 23033 ;; This function uses a non-reentrant model
 23034 ;;
 23035                           
 23036                           	psect	text106
 23037  000ABC                     __ptext106:
 23038                           	opt stack 0
 23039  000ABC                     _Uart_InitUartModule:
 23040                           	opt stack 14
 23041                           
 23042                           ;incstack = 0
 23043                           ;Uart_InitUartModule@Module stored from wreg
 23044  000ABC  0100               	movlb	0	; () banked
 23045  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 23046                           
 23047                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 23048  000AC0  0100               	movlb	0	; () banked
 23049  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 23050  000AC4  A4D8               	btfss	status,2,c
 23051  000AC6  D0BE               	goto	l668
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;uart_drv.c: 291: {
 23055                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 23056  000AC8  9C94               	bcf	3988,6,c	;volatile
 23057                           
 23058                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 23059  000ACA  8E94               	bsf	3988,7,c	;volatile
 23060                           
 23061                           ; BSR set to: 0
 23062                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 23063  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23064  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23065  000AD4  0E01               	movlw	1
 23066  000AD6  EC45  F013         	call	_SetUartBaudRate
 23067                           
 23068                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 23069  000ADA  0E00               	movlw	0
 23070  000ADC  6EAD               	movwf	4013,c	;volatile
 23071                           
 23072                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23073  000ADE  0100               	movlb	0	; () banked
 23074  000AE0  EE20 F004          	lfsr	2,4
 23075  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23076  000AE6  26D9               	addwf	fsr2l,f,c
 23077  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23078  000AEA  22DA               	addwfc	fsr2h,f,c
 23079  000AEC  50DF               	movf	indf2,w,c
 23080  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23081  000AF0  0E06               	movlw	6
 23082  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23083  000AF4                     u11275:
 23084  000AF4  90D8               	bcf	status,0,c
 23085  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23086  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23087  000AFA  D7FC               	goto	u11275
 23088  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23089  000AFE  12AD               	iorwf	4013,f,c	;volatile
 23090                           
 23091                           ; BSR set to: 0
 23092                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23093  000B00  EE20 F006          	lfsr	2,6
 23094  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23095  000B06  26D9               	addwf	fsr2l,f,c
 23096  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23097  000B0A  22DA               	addwfc	fsr2h,f,c
 23098  000B0C  50DF               	movf	indf2,w,c
 23099  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23100  000B10  0E05               	movlw	5
 23101  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23102  000B14                     u11285:
 23103  000B14  90D8               	bcf	status,0,c
 23104  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23105  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23106  000B1A  D7FC               	goto	u11285
 23107  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23108  000B1E  12AD               	iorwf	4013,f,c	;volatile
 23109                           
 23110                           ; BSR set to: 0
 23111                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 23112  000B20  EE20 F001          	lfsr	2,1
 23113  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23114  000B26  26D9               	addwf	fsr2l,f,c
 23115  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23116  000B2A  22DA               	addwfc	fsr2h,f,c
 23117  000B2C  50DF               	movf	indf2,w,c
 23118  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23119  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23120  000B32  0BF0               	andlw	240
 23121  000B34  12AD               	iorwf	4013,f,c	;volatile
 23122                           
 23123                           ; BSR set to: 0
 23124                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23125  000B36  EE20 F008          	lfsr	2,8
 23126  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23127  000B3C  26D9               	addwf	fsr2l,f,c
 23128  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23129  000B40  22DA               	addwfc	fsr2h,f,c
 23130  000B42  50DF               	movf	indf2,w,c
 23131  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23132  000B46  90D8               	bcf	status,0,c
 23133  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23134  000B4A  90D8               	bcf	status,0,c
 23135  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23136  000B4E  90D8               	bcf	status,0,c
 23137  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23138  000B52  12AD               	iorwf	4013,f,c	;volatile
 23139                           
 23140                           ; BSR set to: 0
 23141                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23142  000B54  EE20 F003          	lfsr	2,3
 23143  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23144  000B5A  26D9               	addwf	fsr2l,f,c
 23145  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23146  000B5E  22DA               	addwfc	fsr2h,f,c
 23147  000B60  50DF               	movf	indf2,w,c
 23148  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23149  000B64  90D8               	bcf	status,0,c
 23150  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23151  000B68  90D8               	bcf	status,0,c
 23152  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23153  000B6C  12AD               	iorwf	4013,f,c	;volatile
 23154                           
 23155                           ; BSR set to: 0
 23156                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 23157  000B6E  0E00               	movlw	0
 23158  000B70  6EAC               	movwf	4012,c	;volatile
 23159                           
 23160                           ; BSR set to: 0
 23161                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23162  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23163  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23164  000B7A  50DF               	movf	indf2,w,c
 23165  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23166  000B7E  0E00               	movlw	0
 23167  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23168  000B82  0E80               	movlw	128
 23169  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23170  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23171  000B88  12AC               	iorwf	4012,f,c	;volatile
 23172                           
 23173                           ; BSR set to: 0
 23174                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23175  000B8A  EE20 F005          	lfsr	2,5
 23176  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23177  000B90  26D9               	addwf	fsr2l,f,c
 23178  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23179  000B94  22DA               	addwfc	fsr2h,f,c
 23180  000B96  50DF               	movf	indf2,w,c
 23181  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23182  000B9A  0E06               	movlw	6
 23183  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23184  000B9E                     u11295:
 23185  000B9E  90D8               	bcf	status,0,c
 23186  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23187  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23188  000BA4  D7FC               	goto	u11295
 23189  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23190  000BA8  12AC               	iorwf	4012,f,c	;volatile
 23191                           
 23192                           ; BSR set to: 0
 23193                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23194  000BAA  EE20 F007          	lfsr	2,7
 23195  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23196  000BB0  26D9               	addwf	fsr2l,f,c
 23197  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23198  000BB4  22DA               	addwfc	fsr2h,f,c
 23199  000BB6  50DF               	movf	indf2,w,c
 23200  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23201  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23202  000BBC  0BF0               	andlw	240
 23203  000BBE  12AC               	iorwf	4012,f,c	;volatile
 23204                           
 23205                           ; BSR set to: 0
 23206                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 23207  000BC0  0E00               	movlw	0
 23208  000BC2  6E7E               	movwf	3966,c	;volatile
 23209                           
 23210                           ; BSR set to: 0
 23211                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 23212  000BC4  EE20 F002          	lfsr	2,2
 23213  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23214  000BCA  26D9               	addwf	fsr2l,f,c
 23215  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23216  000BCE  22DA               	addwfc	fsr2h,f,c
 23217  000BD0  50DF               	movf	indf2,w,c
 23218  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23219  000BD4  90D8               	bcf	status,0,c
 23220  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23221  000BD8  90D8               	bcf	status,0,c
 23222  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23223  000BDC  90D8               	bcf	status,0,c
 23224  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23225  000BE0  127E               	iorwf	3966,f,c	;volatile
 23226                           
 23227                           ; BSR set to: 0
 23228                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 23229  000BE2  EE20 F00A          	lfsr	2,10
 23230  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23231  000BE8  26D9               	addwf	fsr2l,f,c
 23232  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23233  000BEC  22DA               	addwfc	fsr2h,f,c
 23234  000BEE  50DF               	movf	indf2,w,c
 23235  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23236  000BF2  90D8               	bcf	status,0,c
 23237  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23238  000BF6  127E               	iorwf	3966,f,c	;volatile
 23239                           
 23240                           ; BSR set to: 0
 23241                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 23242  000BF8  EE20 F009          	lfsr	2,9
 23243  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23244  000BFE  26D9               	addwf	fsr2l,f,c
 23245  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23246  000C02  22DA               	addwfc	fsr2h,f,c
 23247  000C04  50DF               	movf	indf2,w,c
 23248  000C06  127E               	iorwf	3966,f,c	;volatile
 23249                           
 23250                           ; BSR set to: 0
 23251                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 23252  000C08  EE20 F00B          	lfsr	2,11
 23253  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23254  000C0E  26D9               	addwf	fsr2l,f,c
 23255  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23256  000C12  22DA               	addwfc	fsr2h,f,c
 23257  000C14  50DF               	movf	indf2,w,c
 23258  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23259  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23260  000C1A  509D               	movf	3997,w,c	;volatile
 23261  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23262  000C1E  0BEF               	andlw	-17
 23263  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23264  000C22  6E9D               	movwf	3997,c	;volatile
 23265                           
 23266                           ; BSR set to: 0
 23267                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 23268  000C24  EE20 F00C          	lfsr	2,12
 23269  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23270  000C2A  26D9               	addwf	fsr2l,f,c
 23271  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23272  000C2E  22DA               	addwfc	fsr2h,f,c
 23273  000C30  50DF               	movf	indf2,w,c
 23274  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23275  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23276  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 23277  000C38  509D               	movf	3997,w,c	;volatile
 23278  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23279  000C3C  0BDF               	andlw	-33
 23280  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23281  000C40  6E9D               	movwf	3997,c	;volatile
 23282                           
 23283                           ;uart_drv.c: 326: }
 23284  000C42  0012               	return	
 23285  000C44                     l668:
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 23289                           
 23290                           ; BSR set to: 0
 23291  000C44  0E02               	movlw	2
 23292  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 23293  000C48  A4D8               	btfss	status,2,c
 23294  000C4A  0012               	return	
 23295                           
 23296                           ; BSR set to: 0
 23297                           ;uart_drv.c: 328: {
 23298                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 23299  000C4C  9094               	bcf	3988,0,c	;volatile
 23300                           
 23301                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 23302  000C4E  8294               	bsf	3988,1,c	;volatile
 23303                           
 23304                           ; BSR set to: 0
 23305                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 23306  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 23307  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 23308  000C58  0E02               	movlw	2
 23309  000C5A  EC45  F013         	call	_SetUartBaudRate
 23310                           
 23311                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 23312  000C5E  0E00               	movlw	0
 23313  000C60  6EA8               	movwf	4008,c	;volatile
 23314                           
 23315                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 23316  000C62  0100               	movlb	0	; () banked
 23317  000C64  EE20 F004          	lfsr	2,4
 23318  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23319  000C6A  26D9               	addwf	fsr2l,f,c
 23320  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23321  000C6E  22DA               	addwfc	fsr2h,f,c
 23322  000C70  50DF               	movf	indf2,w,c
 23323  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23324  000C74  0E06               	movlw	6
 23325  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23326  000C78                     u11315:
 23327  000C78  90D8               	bcf	status,0,c
 23328  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23329  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23330  000C7E  D7FC               	goto	u11315
 23331  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23332  000C82  12A8               	iorwf	4008,f,c	;volatile
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 23336  000C84  EE20 F006          	lfsr	2,6
 23337  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23338  000C8A  26D9               	addwf	fsr2l,f,c
 23339  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23340  000C8E  22DA               	addwfc	fsr2h,f,c
 23341  000C90  50DF               	movf	indf2,w,c
 23342  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23343  000C94  0E05               	movlw	5
 23344  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23345  000C98                     u11325:
 23346  000C98  90D8               	bcf	status,0,c
 23347  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23348  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23349  000C9E  D7FC               	goto	u11325
 23350  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23351  000CA2  12A8               	iorwf	4008,f,c	;volatile
 23352                           
 23353                           ; BSR set to: 0
 23354                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 23355  000CA4  EE20 F001          	lfsr	2,1
 23356  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23357  000CAA  26D9               	addwf	fsr2l,f,c
 23358  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23359  000CAE  22DA               	addwfc	fsr2h,f,c
 23360  000CB0  50DF               	movf	indf2,w,c
 23361  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23362  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23363  000CB6  0BF0               	andlw	240
 23364  000CB8  12A8               	iorwf	4008,f,c	;volatile
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 23368  000CBA  EE20 F008          	lfsr	2,8
 23369  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23370  000CC0  26D9               	addwf	fsr2l,f,c
 23371  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23372  000CC4  22DA               	addwfc	fsr2h,f,c
 23373  000CC6  50DF               	movf	indf2,w,c
 23374  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23375  000CCA  90D8               	bcf	status,0,c
 23376  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23377  000CCE  90D8               	bcf	status,0,c
 23378  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23379  000CD2  90D8               	bcf	status,0,c
 23380  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23381  000CD6  12A8               	iorwf	4008,f,c	;volatile
 23382                           
 23383                           ; BSR set to: 0
 23384                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 23385  000CD8  EE20 F003          	lfsr	2,3
 23386  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23387  000CDE  26D9               	addwf	fsr2l,f,c
 23388  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23389  000CE2  22DA               	addwfc	fsr2h,f,c
 23390  000CE4  50DF               	movf	indf2,w,c
 23391  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23392  000CE8  90D8               	bcf	status,0,c
 23393  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23394  000CEC  90D8               	bcf	status,0,c
 23395  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23396  000CF0  12A8               	iorwf	4008,f,c	;volatile
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 23400  000CF2  0E00               	movlw	0
 23401  000CF4  6E9C               	movwf	3996,c	;volatile
 23402                           
 23403                           ; BSR set to: 0
 23404                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 23405  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 23406  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 23407  000CFE  50DF               	movf	indf2,w,c
 23408  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23409  000D02  0E00               	movlw	0
 23410  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 23411  000D06  0E80               	movlw	128
 23412  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23413  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23414  000D0C  129C               	iorwf	3996,f,c	;volatile
 23415                           
 23416                           ; BSR set to: 0
 23417                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 23418  000D0E  EE20 F005          	lfsr	2,5
 23419  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23420  000D14  26D9               	addwf	fsr2l,f,c
 23421  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23422  000D18  22DA               	addwfc	fsr2h,f,c
 23423  000D1A  50DF               	movf	indf2,w,c
 23424  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23425  000D1E  0E06               	movlw	6
 23426  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 23427  000D22                     u11335:
 23428  000D22  90D8               	bcf	status,0,c
 23429  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23430  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 23431  000D28  D7FC               	goto	u11335
 23432  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 23433  000D2C  129C               	iorwf	3996,f,c	;volatile
 23434                           
 23435                           ; BSR set to: 0
 23436                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 23437  000D2E  EE20 F007          	lfsr	2,7
 23438  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23439  000D34  26D9               	addwf	fsr2l,f,c
 23440  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23441  000D38  22DA               	addwfc	fsr2h,f,c
 23442  000D3A  50DF               	movf	indf2,w,c
 23443  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23444  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 23445  000D40  0BF0               	andlw	240
 23446  000D42  129C               	iorwf	3996,f,c	;volatile
 23447                           
 23448                           ; BSR set to: 0
 23449                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 23450  000D44  0E00               	movlw	0
 23451  000D46  6E7C               	movwf	3964,c	;volatile
 23452                           
 23453                           ; BSR set to: 0
 23454                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 23455  000D48  EE20 F002          	lfsr	2,2
 23456  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23457  000D4E  26D9               	addwf	fsr2l,f,c
 23458  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23459  000D52  22DA               	addwfc	fsr2h,f,c
 23460  000D54  50DF               	movf	indf2,w,c
 23461  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23462  000D58  90D8               	bcf	status,0,c
 23463  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23464  000D5C  90D8               	bcf	status,0,c
 23465  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 23466  000D60  90D8               	bcf	status,0,c
 23467  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23468  000D64  127C               	iorwf	3964,f,c	;volatile
 23469                           
 23470                           ; BSR set to: 0
 23471                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 23472  000D66  EE20 F00A          	lfsr	2,10
 23473  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23474  000D6C  26D9               	addwf	fsr2l,f,c
 23475  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23476  000D70  22DA               	addwfc	fsr2h,f,c
 23477  000D72  50DF               	movf	indf2,w,c
 23478  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23479  000D76  90D8               	bcf	status,0,c
 23480  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 23481  000D7A  127C               	iorwf	3964,f,c	;volatile
 23482                           
 23483                           ; BSR set to: 0
 23484                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 23485  000D7C  EE20 F009          	lfsr	2,9
 23486  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23487  000D82  26D9               	addwf	fsr2l,f,c
 23488  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23489  000D86  22DA               	addwfc	fsr2h,f,c
 23490  000D88  50DF               	movf	indf2,w,c
 23491  000D8A  127C               	iorwf	3964,f,c	;volatile
 23492                           
 23493                           ; BSR set to: 0
 23494                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 23495  000D8C  EE20 F00B          	lfsr	2,11
 23496  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23497  000D92  26D9               	addwf	fsr2l,f,c
 23498  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23499  000D96  22DA               	addwfc	fsr2h,f,c
 23500  000D98  50DF               	movf	indf2,w,c
 23501  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23502  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23503  000D9E  50A3               	movf	4003,w,c	;volatile
 23504  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23505  000DA2  0BEF               	andlw	-17
 23506  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23507  000DA6  6EA3               	movwf	4003,c	;volatile
 23508                           
 23509                           ; BSR set to: 0
 23510                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 23511  000DA8  EE20 F00C          	lfsr	2,12
 23512  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 23513  000DAE  26D9               	addwf	fsr2l,f,c
 23514  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 23515  000DB2  22DA               	addwfc	fsr2h,f,c
 23516  000DB4  50DF               	movf	indf2,w,c
 23517  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 23518  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 23519  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 23520  000DBC  50A3               	movf	4003,w,c	;volatile
 23521  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23522  000DC0  0BDF               	andlw	-33
 23523  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 23524  000DC4  6EA3               	movwf	4003,c	;volatile
 23525                           
 23526                           ; BSR set to: 0
 23527  000DC6  0012               	return	
 23528  000DC8                     __end_of_Uart_InitUartModule:
 23529                           	opt stack 0
 23530                           tosu	equ	0xFFF
 23531                           tosh	equ	0xFFE
 23532                           tosl	equ	0xFFD
 23533                           pclath	equ	0xFFA
 23534                           tblptru	equ	0xFF8
 23535                           tblptrh	equ	0xFF7
 23536                           tblptrl	equ	0xFF6
 23537                           tablat	equ	0xFF5
 23538                           prodh	equ	0xFF4
 23539                           prodl	equ	0xFF3
 23540                           intcon	equ	0xFF2
 23541                           intcon2	equ	0xFF1
 23542                           intcon3	equ	0xFF0
 23543                           indf0	equ	0xFEF
 23544                           postinc0	equ	0xFEE
 23545                           plusw0	equ	0xFEB
 23546                           fsr0h	equ	0xFEA
 23547                           fsr0l	equ	0xFE9
 23548                           wreg	equ	0xFE8
 23549                           indf1	equ	0xFE7
 23550                           postinc1	equ	0xFE6
 23551                           postdec1	equ	0xFE5
 23552                           plusw1	equ	0xFE3
 23553                           fsr1h	equ	0xFE2
 23554                           fsr1l	equ	0xFE1
 23555                           indf2	equ	0xFDF
 23556                           postinc2	equ	0xFDE
 23557                           postdec2	equ	0xFDD
 23558                           plusw2	equ	0xFDB
 23559                           fsr2h	equ	0xFDA
 23560                           fsr2l	equ	0xFD9
 23561                           status	equ	0xFD8
 23562                           
 23563 ;; *************** function _SetUartBaudRate *****************
 23564 ;; Defined at:
 23565 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23566 ;; Parameters:    Size  Location     Type
 23567 ;;  Module          1    wreg     unsigned char 
 23568 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 23569 ;;		 -> UartConfig(21), 
 23570 ;; Auto vars:     Size  Location     Type
 23571 ;;  Module          1   57[BANK0 ] unsigned char 
 23572 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 23573 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 23574 ;; Return value:  Size  Location     Type
 23575 ;;                  1    wreg      void 
 23576 ;; Registers used:
 23577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23578 ;; Tracked objects:
 23579 ;;		On entry : 0/0
 23580 ;;		On exit  : 0/0
 23581 ;;		Unchanged: 0/0
 23582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23584 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23586 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23587 ;;Total ram usage:        7 bytes
 23588 ;; Hardware stack levels used:    1
 23589 ;; Hardware stack levels required when called:   12
 23590 ;; This function calls:
 23591 ;;		___lldiv
 23592 ;;		___lmul
 23593 ;; This function is called by:
 23594 ;;		_Uart_InitUartModule
 23595 ;; This function uses a non-reentrant model
 23596 ;;
 23597                           
 23598                           	psect	text107
 23599  00268A                     __ptext107:
 23600                           	opt stack 0
 23601  00268A                     _SetUartBaudRate:
 23602                           	opt stack 14
 23603                           
 23604                           ; BSR set to: 0
 23605                           ;incstack = 0
 23606                           ;SetUartBaudRate@Module stored from wreg
 23607  00268A  0100               	movlb	0	; () banked
 23608  00268C  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 23609                           
 23610                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 23611  00268E  0E00               	movlw	0
 23612  002690  0100               	movlb	0	; () banked
 23613  002692  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 23614  002694  0E00               	movlw	0
 23615  002696  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 23616                           
 23617                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 23618  002698  0E00               	movlw	0
 23619  00269A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 23620                           
 23621                           ; BSR set to: 0
 23622                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 23623  00269C  EE20 F002          	lfsr	2,2
 23624  0026A0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23625  0026A2  26D9               	addwf	fsr2l,f,c
 23626  0026A4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23627  0026A6  22DA               	addwfc	fsr2h,f,c
 23628  0026A8  50DF               	movf	indf2,w,c
 23629  0026AA  A4D8               	btfss	status,2,c
 23630  0026AC  D00B               	goto	l625
 23631                           
 23632                           ; BSR set to: 0
 23633  0026AE  EE20 F002          	lfsr	2,2
 23634  0026B2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23635  0026B4  26D9               	addwf	fsr2l,f,c
 23636  0026B6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23637  0026B8  22DA               	addwfc	fsr2h,f,c
 23638  0026BA  50DF               	movf	indf2,w,c
 23639  0026BC  A4D8               	btfss	status,2,c
 23640  0026BE  D002               	goto	l625
 23641                           
 23642                           ; BSR set to: 0
 23643                           ;uart_drv.c: 128: {
 23644                           ;uart_drv.c: 129: DivisionFactor = 64;
 23645  0026C0  0E40               	movlw	64
 23646  0026C2  D039               	goto	L27
 23647  0026C4                     l625:
 23648                           
 23649                           ; BSR set to: 0
 23650                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 23651                           
 23652                           ; BSR set to: 0
 23653  0026C4  EE20 F002          	lfsr	2,2
 23654  0026C8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23655  0026CA  26D9               	addwf	fsr2l,f,c
 23656  0026CC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23657  0026CE  22DA               	addwfc	fsr2h,f,c
 23658  0026D0  04DE               	decf	postinc2,w,c
 23659  0026D2  A4D8               	btfss	status,2,c
 23660  0026D4  D009               	goto	l627
 23661                           
 23662                           ; BSR set to: 0
 23663  0026D6  EE20 F002          	lfsr	2,2
 23664  0026DA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23665  0026DC  26D9               	addwf	fsr2l,f,c
 23666  0026DE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23667  0026E0  22DA               	addwfc	fsr2h,f,c
 23668  0026E2  50DF               	movf	indf2,w,c
 23669  0026E4  B4D8               	btfsc	status,2,c
 23670  0026E6  D012               	goto	u10630
 23671  0026E8                     l627:
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 23675                           
 23676                           ; BSR set to: 0
 23677  0026E8  EE20 F002          	lfsr	2,2
 23678  0026EC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23679  0026EE  26D9               	addwf	fsr2l,f,c
 23680  0026F0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23681  0026F2  22DA               	addwfc	fsr2h,f,c
 23682  0026F4  50DF               	movf	indf2,w,c
 23683  0026F6  A4D8               	btfss	status,2,c
 23684  0026F8  D00B               	goto	l629
 23685                           
 23686                           ; BSR set to: 0
 23687  0026FA  EE20 F002          	lfsr	2,2
 23688  0026FE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23689  002700  26D9               	addwf	fsr2l,f,c
 23690  002702  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23691  002704  22DA               	addwfc	fsr2h,f,c
 23692  002706  04DE               	decf	postinc2,w,c
 23693  002708  A4D8               	btfss	status,2,c
 23694  00270A  D002               	goto	l629
 23695  00270C                     u10630:
 23696                           
 23697                           ; BSR set to: 0
 23698                           ;uart_drv.c: 136: {
 23699                           ;uart_drv.c: 137: DivisionFactor = 16;
 23700  00270C  0E10               	movlw	16
 23701  00270E  D013               	goto	L27
 23702  002710                     l629:
 23703                           
 23704                           ; BSR set to: 0
 23705                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 23706                           
 23707                           ; BSR set to: 0
 23708  002710  EE20 F002          	lfsr	2,2
 23709  002714  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23710  002716  26D9               	addwf	fsr2l,f,c
 23711  002718  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23712  00271A  22DA               	addwfc	fsr2h,f,c
 23713  00271C  04DE               	decf	postinc2,w,c
 23714  00271E  A4D8               	btfss	status,2,c
 23715  002720  D00B               	goto	l631
 23716                           
 23717                           ; BSR set to: 0
 23718  002722  EE20 F002          	lfsr	2,2
 23719  002726  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23720  002728  26D9               	addwf	fsr2l,f,c
 23721  00272A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23722  00272C  22DA               	addwfc	fsr2h,f,c
 23723  00272E  04DE               	decf	postinc2,w,c
 23724  002730  A4D8               	btfss	status,2,c
 23725  002732  D002               	goto	l631
 23726                           
 23727                           ; BSR set to: 0
 23728                           ;uart_drv.c: 140: {
 23729                           ;uart_drv.c: 141: DivisionFactor = 4;
 23730  002734  0E04               	movlw	4
 23731  002736                     L27:
 23732  002736  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 23733  002738                     l631:
 23734                           
 23735                           ; BSR set to: 0
 23736                           ;uart_drv.c: 146: }
 23737                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 23738                           
 23739                           ; BSR set to: 0
 23740                           
 23741                           ; BSR set to: 0
 23742                           
 23743                           ; BSR set to: 0
 23744                           
 23745                           ; BSR set to: 0
 23746                           
 23747                           ;uart_drv.c: 143: else
 23748                           ;uart_drv.c: 144: {
 23749                           
 23750                           ; BSR set to: 0
 23751  002738  EE20 F00D          	lfsr	2,13
 23752  00273C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23753  00273E  26D9               	addwf	fsr2l,f,c
 23754  002740  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23755  002742  22DA               	addwfc	fsr2h,f,c
 23756  002744  CFDE F089          	movff	postinc2,___lldiv@dividend
 23757  002748  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 23758  00274C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 23759  002750  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 23760  002754  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 23761  002756  6F7D               	movwf	___lmul@multiplier& (0+255),b
 23762  002758  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23763  00275A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23764  00275C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 23765  00275E  EE20 F011          	lfsr	2,17
 23766  002762  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 23767  002764  26D9               	addwf	fsr2l,f,c
 23768  002766  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 23769  002768  22DA               	addwfc	fsr2h,f,c
 23770  00276A  CFDE F081          	movff	postinc2,___lmul@multiplicand
 23771  00276E  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 23772  002772  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 23773  002776  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 23774  00277A  ECEA  F027         	call	___lmul	;wreg free
 23775  00277E  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 23776  002782  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 23777  002786  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 23778  00278A  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 23779  00278E  ECD5  F024         	call	___lldiv	;wreg free
 23780  002792  0EFF               	movlw	255
 23781  002794  0100               	movlb	0	; () banked
 23782  002796  2589               	addwf	?___lldiv& (0+255),w,b
 23783  002798  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 23784  00279A  0EFF               	movlw	255
 23785  00279C  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 23786  00279E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 23787                           
 23788                           ; BSR set to: 0
 23789                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 23790  0027A0  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 23791  0027A2  A4D8               	btfss	status,2,c
 23792  0027A4  D005               	goto	l633
 23793                           
 23794                           ; BSR set to: 0
 23795                           ;uart_drv.c: 152: {
 23796                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 23797  0027A6  0E00               	movlw	0
 23798  0027A8  6E7F               	movwf	3967,c	;volatile
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 23802  0027AA  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 23803                           
 23804                           ;uart_drv.c: 156: }
 23805  0027AE  0012               	return	
 23806  0027B0                     l633:
 23807                           
 23808                           ; BSR set to: 0
 23809                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 23810                           
 23811                           ; BSR set to: 0
 23812  0027B0  0E02               	movlw	2
 23813  0027B2  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 23814  0027B4  A4D8               	btfss	status,2,c
 23815  0027B6  0012               	return	
 23816                           
 23817                           ; BSR set to: 0
 23818                           ;uart_drv.c: 158: {
 23819                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 23820  0027B8  0E00               	movlw	0
 23821  0027BA  6E7D               	movwf	3965,c	;volatile
 23822                           
 23823                           ; BSR set to: 0
 23824                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 23825  0027BC  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 23826                           
 23827                           ; BSR set to: 0
 23828  0027C0  0012               	return	
 23829  0027C2                     __end_of_SetUartBaudRate:
 23830                           	opt stack 0
 23831                           tosu	equ	0xFFF
 23832                           tosh	equ	0xFFE
 23833                           tosl	equ	0xFFD
 23834                           pclath	equ	0xFFA
 23835                           tblptru	equ	0xFF8
 23836                           tblptrh	equ	0xFF7
 23837                           tblptrl	equ	0xFF6
 23838                           tablat	equ	0xFF5
 23839                           prodh	equ	0xFF4
 23840                           prodl	equ	0xFF3
 23841                           intcon	equ	0xFF2
 23842                           intcon2	equ	0xFF1
 23843                           intcon3	equ	0xFF0
 23844                           indf0	equ	0xFEF
 23845                           postinc0	equ	0xFEE
 23846                           plusw0	equ	0xFEB
 23847                           fsr0h	equ	0xFEA
 23848                           fsr0l	equ	0xFE9
 23849                           wreg	equ	0xFE8
 23850                           indf1	equ	0xFE7
 23851                           postinc1	equ	0xFE6
 23852                           postdec1	equ	0xFE5
 23853                           plusw1	equ	0xFE3
 23854                           fsr1h	equ	0xFE2
 23855                           fsr1l	equ	0xFE1
 23856                           indf2	equ	0xFDF
 23857                           postinc2	equ	0xFDE
 23858                           postdec2	equ	0xFDD
 23859                           plusw2	equ	0xFDB
 23860                           fsr2h	equ	0xFDA
 23861                           fsr2l	equ	0xFD9
 23862                           status	equ	0xFD8
 23863                           
 23864 ;; *************** function ___lmul *****************
 23865 ;; Defined at:
 23866 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 23867 ;; Parameters:    Size  Location     Type
 23868 ;;  multiplier      4   29[BANK0 ] unsigned long 
 23869 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 23870 ;; Auto vars:     Size  Location     Type
 23871 ;;  product         4   37[BANK0 ] unsigned long 
 23872 ;; Return value:  Size  Location     Type
 23873 ;;                  4   29[BANK0 ] unsigned long 
 23874 ;; Registers used:
 23875 ;;		wreg, status,2, status,0
 23876 ;; Tracked objects:
 23877 ;;		On entry : 0/0
 23878 ;;		On exit  : 0/0
 23879 ;;		Unchanged: 0/0
 23880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23881 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23882 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23884 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23885 ;;Total ram usage:       12 bytes
 23886 ;; Hardware stack levels used:    1
 23887 ;; Hardware stack levels required when called:   11
 23888 ;; This function calls:
 23889 ;;		Nothing
 23890 ;; This function is called by:
 23891 ;;		_Tmr_TmrBPrSet
 23892 ;;		_SetUartBaudRate
 23893 ;;		_strtol
 23894 ;; This function uses a non-reentrant model
 23895 ;;
 23896                           
 23897                           	psect	text108
 23898  004FD4                     __ptext108:
 23899                           	opt stack 0
 23900  004FD4                     ___lmul:
 23901                           	opt stack 15
 23902                           
 23903                           ; BSR set to: 0
 23904                           ;incstack = 0
 23905  004FD4  0E00               	movlw	0
 23906  004FD6  0100               	movlb	0	; () banked
 23907  004FD8  6F85               	movwf	___lmul@product& (0+255),b
 23908  004FDA  0E00               	movlw	0
 23909  004FDC  6F86               	movwf	(___lmul@product+1)& (0+255),b
 23910  004FDE  0E00               	movlw	0
 23911  004FE0  6F87               	movwf	(___lmul@product+2)& (0+255),b
 23912  004FE2  0E00               	movlw	0
 23913  004FE4  6F88               	movwf	(___lmul@product+3)& (0+255),b
 23914  004FE6                     
 23915                           ; BSR set to: 0
 23916                           
 23917                           ; BSR set to: 0
 23918  004FE6  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 23919  004FE8  D008               	goto	l2589
 23920                           
 23921                           ; BSR set to: 0
 23922  004FEA  5181               	movf	___lmul@multiplicand& (0+255),w,b
 23923  004FEC  2785               	addwf	___lmul@product& (0+255),f,b
 23924  004FEE  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23925  004FF0  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 23926  004FF2  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23927  004FF4  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 23928  004FF6  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23929  004FF8  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 23930  004FFA                     l2589:
 23931                           
 23932                           ; BSR set to: 0
 23933                           
 23934                           ; BSR set to: 0
 23935  004FFA  90D8               	bcf	status,0,c
 23936  004FFC  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 23937  004FFE  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23938  005000  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23939  005002  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23940                           
 23941                           ; BSR set to: 0
 23942  005004  90D8               	bcf	status,0,c
 23943  005006  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23944  005008  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23945  00500A  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23946  00500C  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 23947  00500E  517D               	movf	___lmul@multiplier& (0+255),w,b
 23948  005010  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23949  005012  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23950  005014  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23951  005016  A4D8               	btfss	status,2,c
 23952  005018  D7E6               	goto	l2588
 23953                           
 23954                           ; BSR set to: 0
 23955  00501A  C085  F07D         	movff	___lmul@product,?___lmul
 23956  00501E  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 23957  005022  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 23958  005026  C088  F080         	movff	___lmul@product+3,?___lmul+3
 23959                           
 23960                           ; BSR set to: 0
 23961  00502A  0012               	return		;funcret
 23962  00502C                     __end_of___lmul:
 23963                           	opt stack 0
 23964                           tosu	equ	0xFFF
 23965                           tosh	equ	0xFFE
 23966                           tosl	equ	0xFFD
 23967                           pclath	equ	0xFFA
 23968                           tblptru	equ	0xFF8
 23969                           tblptrh	equ	0xFF7
 23970                           tblptrl	equ	0xFF6
 23971                           tablat	equ	0xFF5
 23972                           prodh	equ	0xFF4
 23973                           prodl	equ	0xFF3
 23974                           intcon	equ	0xFF2
 23975                           intcon2	equ	0xFF1
 23976                           intcon3	equ	0xFF0
 23977                           indf0	equ	0xFEF
 23978                           postinc0	equ	0xFEE
 23979                           plusw0	equ	0xFEB
 23980                           fsr0h	equ	0xFEA
 23981                           fsr0l	equ	0xFE9
 23982                           wreg	equ	0xFE8
 23983                           indf1	equ	0xFE7
 23984                           postinc1	equ	0xFE6
 23985                           postdec1	equ	0xFE5
 23986                           plusw1	equ	0xFE3
 23987                           fsr1h	equ	0xFE2
 23988                           fsr1l	equ	0xFE1
 23989                           indf2	equ	0xFDF
 23990                           postinc2	equ	0xFDE
 23991                           postdec2	equ	0xFDD
 23992                           plusw2	equ	0xFDB
 23993                           fsr2h	equ	0xFDA
 23994                           fsr2l	equ	0xFD9
 23995                           status	equ	0xFD8
 23996                           
 23997 ;; *************** function _UartSetConfigLow *****************
 23998 ;; Defined at:
 23999 ;;		line 224 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24000 ;; Parameters:    Size  Location     Type
 24001 ;;		None
 24002 ;; Auto vars:     Size  Location     Type
 24003 ;;		None
 24004 ;; Return value:  Size  Location     Type
 24005 ;;                  1    wreg      void 
 24006 ;; Registers used:
 24007 ;;		wreg, status,2
 24008 ;; Tracked objects:
 24009 ;;		On entry : 0/0
 24010 ;;		On exit  : 0/0
 24011 ;;		Unchanged: 0/0
 24012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24017 ;;Total ram usage:        0 bytes
 24018 ;; Hardware stack levels used:    1
 24019 ;; Hardware stack levels required when called:   11
 24020 ;; This function calls:
 24021 ;;		Nothing
 24022 ;; This function is called by:
 24023 ;;		_ConfigureModem
 24024 ;; This function uses a non-reentrant model
 24025 ;;
 24026                           
 24027                           	psect	text109
 24028  00502C                     __ptext109:
 24029                           	opt stack 0
 24030  00502C                     _UartSetConfigLow:
 24031                           	opt stack 15
 24032                           
 24033                           ;mdm_gsm_gprs.c: 226: UartConfig.UartEnable = ((UINT8)(1));
 24034                           
 24035                           ; BSR set to: 0
 24036                           ;incstack = 0
 24037  00502C  0E01               	movlw	1
 24038  00502E  0103               	movlb	3	; () banked
 24039  005030  6F26               	movwf	_UartConfig& (0+255),b
 24040                           
 24041                           ;mdm_gsm_gprs.c: 227: UartConfig.UartMode = ((UINT8)(0));
 24042  005032  0E00               	movlw	0
 24043  005034  6F27               	movwf	(_UartConfig+1)& (0+255),b
 24044                           
 24045                           ;mdm_gsm_gprs.c: 228: UartConfig.BaudRateMode = ((UINT8)(0));
 24046  005036  0E00               	movlw	0
 24047  005038  6F28               	movwf	(_UartConfig+2)& (0+255),b
 24048                           
 24049                           ;mdm_gsm_gprs.c: 229: UartConfig.HighBaudMode = ((UINT8)(0));
 24050  00503A  0E00               	movlw	0
 24051  00503C  6F29               	movwf	(_UartConfig+3)& (0+255),b
 24052                           
 24053                           ;mdm_gsm_gprs.c: 230: UartConfig.Tx9bitMode = ((UINT8)(0));
 24054  00503E  0E00               	movlw	0
 24055  005040  6F2A               	movwf	(_UartConfig+4)& (0+255),b
 24056                           
 24057                           ;mdm_gsm_gprs.c: 231: UartConfig.Rx9bitMode = ((UINT8)(0));
 24058  005042  0E00               	movlw	0
 24059  005044  6F2B               	movwf	(_UartConfig+5)& (0+255),b
 24060                           
 24061                           ;mdm_gsm_gprs.c: 232: UartConfig.TxEnable = ((UINT8)(1));
 24062  005046  0E01               	movlw	1
 24063  005048  6F2C               	movwf	(_UartConfig+6)& (0+255),b
 24064                           
 24065                           ;mdm_gsm_gprs.c: 233: UartConfig.RxEnable = ((UINT8)(1));
 24066  00504A  0E01               	movlw	1
 24067  00504C  6F2D               	movwf	(_UartConfig+7)& (0+255),b
 24068                           
 24069                           ;mdm_gsm_gprs.c: 234: UartConfig.SendBreakEnable = ((UINT8)(0));
 24070  00504E  0E00               	movlw	0
 24071  005050  6F2E               	movwf	(_UartConfig+8)& (0+255),b
 24072                           
 24073                           ;mdm_gsm_gprs.c: 235: UartConfig.AutobaudEnable = ((UINT8)(0));
 24074  005052  0E00               	movlw	0
 24075  005054  6F2F               	movwf	(_UartConfig+9)& (0+255),b
 24076                           
 24077                           ;mdm_gsm_gprs.c: 236: UartConfig.WakeUpEnable = ((UINT8)(0));
 24078  005056  0E00               	movlw	0
 24079  005058  6F30               	movwf	(_UartConfig+10)& (0+255),b
 24080                           
 24081                           ;mdm_gsm_gprs.c: 237: UartConfig.TxInterruptEnable = ((UINT8)(0));
 24082  00505A  0E00               	movlw	0
 24083  00505C  6F31               	movwf	(_UartConfig+11)& (0+255),b
 24084                           
 24085                           ;mdm_gsm_gprs.c: 238: UartConfig.RxInterruptEnable = ((UINT8)(1));
 24086  00505E  0E01               	movlw	1
 24087  005060  6F32               	movwf	(_UartConfig+12)& (0+255),b
 24088                           
 24089                           ;mdm_gsm_gprs.c: 239: UartConfig.McuBusClock = ((UINT32)(48000000));
 24090  005062  0E00               	movlw	0
 24091  005064  6F33               	movwf	(_UartConfig+13)& (0+255),b
 24092  005066  0E6C               	movlw	108
 24093  005068  6F34               	movwf	(_UartConfig+14)& (0+255),b
 24094  00506A  0EDC               	movlw	220
 24095  00506C  6F35               	movwf	(_UartConfig+15)& (0+255),b
 24096  00506E  0E02               	movlw	2
 24097  005070  6F36               	movwf	(_UartConfig+16)& (0+255),b
 24098                           
 24099                           ;mdm_gsm_gprs.c: 240: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 24100  005072  0E80               	movlw	128
 24101  005074  6F37               	movwf	(_UartConfig+17)& (0+255),b
 24102  005076  0E25               	movlw	37
 24103  005078  6F38               	movwf	(_UartConfig+18)& (0+255),b
 24104  00507A  0E00               	movlw	0
 24105  00507C  6F39               	movwf	(_UartConfig+19)& (0+255),b
 24106  00507E  0E00               	movlw	0
 24107  005080  6F3A               	movwf	(_UartConfig+20)& (0+255),b
 24108                           
 24109                           ; BSR set to: 3
 24110  005082  0012               	return		;funcret
 24111  005084                     __end_of_UartSetConfigLow:
 24112                           	opt stack 0
 24113                           tosu	equ	0xFFF
 24114                           tosh	equ	0xFFE
 24115                           tosl	equ	0xFFD
 24116                           pclath	equ	0xFFA
 24117                           tblptru	equ	0xFF8
 24118                           tblptrh	equ	0xFF7
 24119                           tblptrl	equ	0xFF6
 24120                           tablat	equ	0xFF5
 24121                           prodh	equ	0xFF4
 24122                           prodl	equ	0xFF3
 24123                           intcon	equ	0xFF2
 24124                           intcon2	equ	0xFF1
 24125                           intcon3	equ	0xFF0
 24126                           indf0	equ	0xFEF
 24127                           postinc0	equ	0xFEE
 24128                           plusw0	equ	0xFEB
 24129                           fsr0h	equ	0xFEA
 24130                           fsr0l	equ	0xFE9
 24131                           wreg	equ	0xFE8
 24132                           indf1	equ	0xFE7
 24133                           postinc1	equ	0xFE6
 24134                           postdec1	equ	0xFE5
 24135                           plusw1	equ	0xFE3
 24136                           fsr1h	equ	0xFE2
 24137                           fsr1l	equ	0xFE1
 24138                           indf2	equ	0xFDF
 24139                           postinc2	equ	0xFDE
 24140                           postdec2	equ	0xFDD
 24141                           plusw2	equ	0xFDB
 24142                           fsr2h	equ	0xFDA
 24143                           fsr2l	equ	0xFD9
 24144                           status	equ	0xFD8
 24145                           
 24146 ;; *************** function _CheckModem *****************
 24147 ;; Defined at:
 24148 ;;		line 278 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24149 ;; Parameters:    Size  Location     Type
 24150 ;;		None
 24151 ;; Auto vars:     Size  Location     Type
 24152 ;;		None
 24153 ;; Return value:  Size  Location     Type
 24154 ;;                  1    wreg      void 
 24155 ;; Registers used:
 24156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24157 ;; Tracked objects:
 24158 ;;		On entry : 0/0
 24159 ;;		On exit  : 0/0
 24160 ;;		Unchanged: 0/0
 24161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24166 ;;Total ram usage:        0 bytes
 24167 ;; Hardware stack levels used:    1
 24168 ;; Hardware stack levels required when called:   14
 24169 ;; This function calls:
 24170 ;;		_GenerateEvt
 24171 ;;		_OsTmr_GetTimerStatus
 24172 ;;		_OsTmr_StartTimer
 24173 ;;		_ReceiveEvt
 24174 ;;		_Uart_WriteConstString
 24175 ;; This function is called by:
 24176 ;;		_Mdm_MainTask
 24177 ;; This function uses a non-reentrant model
 24178 ;;
 24179                           
 24180                           	psect	text110
 24181  0022AA                     __ptext110:
 24182                           	opt stack 0
 24183  0022AA                     _CheckModem:
 24184                           	opt stack 13
 24185                           
 24186                           ;mdm_gsm_gprs.c: 280: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 24187                           ;mdm_gsm_gprs.c: 281: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 24188                           ;mdm_gsm_gprs.c: 283: switch (CheckMdmSts)
 24189                           
 24190                           ; BSR set to: 3
 24191                           ;incstack = 0
 24192  0022AA  D096               	goto	l976
 24193  0022AC                     
 24194                           ;mdm_gsm_gprs.c: 287: OsTmr_StartTimer(&Timeout,2000);
 24195  0022AC  0EF5               	movlw	low CheckModem@Timeout
 24196  0022AE  0100               	movlb	0	; () banked
 24197  0022B0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24198  0022B2  0E03               	movlw	high CheckModem@Timeout
 24199  0022B4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24200  0022B6  0ED0               	movlw	208
 24201  0022B8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24202  0022BA  0E07               	movlw	7
 24203  0022BC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24204  0022BE  0E00               	movlw	0
 24205  0022C0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24206  0022C2  0E00               	movlw	0
 24207  0022C4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24208  0022C6  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 24209                           
 24210                           ;mdm_gsm_gprs.c: 289: CheckMdmSts = MdmCh_InitialDelay;
 24211  0022CA  0E01               	movlw	1
 24212  0022CC  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24213                           
 24214                           ;mdm_gsm_gprs.c: 290: break;
 24215  0022CE  0012               	return	
 24216  0022D0                     
 24217                           ;mdm_gsm_gprs.c: 294: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24218  0022D0  0EF5               	movlw	low CheckModem@Timeout
 24219  0022D2  0100               	movlb	0	; () banked
 24220  0022D4  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24221  0022D6  0E03               	movlw	high CheckModem@Timeout
 24222  0022D8  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24223  0022DA  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24224  0022DE  06E8               	decf	wreg,f,c
 24225  0022E0  A4D8               	btfss	status,2,c
 24226  0022E2  0012               	return	
 24227                           
 24228                           ;mdm_gsm_gprs.c: 295: {
 24229                           ;mdm_gsm_gprs.c: 297: CheckMdmSts = MdmCh_SendATE1;
 24230  0022E4  0E02               	movlw	2
 24231  0022E6  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24232                           
 24233                           ;mdm_gsm_gprs.c: 298: }
 24234                           ;mdm_gsm_gprs.c: 299: break;
 24235  0022E8  0012               	return	
 24236  0022EA                     
 24237                           ;mdm_gsm_gprs.c: 303: Uart_WriteConstString(1,"AT\r\n");
 24238  0022EA  0EE5               	movlw	low STR_1
 24239  0022EC  0100               	movlb	0	; () banked
 24240  0022EE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24241  0022F0  0EFF               	movlw	high STR_1
 24242  0022F2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24243  0022F4  0E01               	movlw	1
 24244  0022F6  EC1B  F02B         	call	_Uart_WriteConstString
 24245                           
 24246                           ;mdm_gsm_gprs.c: 305: OsTmr_StartTimer(&Timeout,2000u);
 24247  0022FA  0EF5               	movlw	low CheckModem@Timeout
 24248  0022FC  0100               	movlb	0	; () banked
 24249  0022FE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24250  002300  0E03               	movlw	high CheckModem@Timeout
 24251  002302  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24252  002304  0ED0               	movlw	208
 24253  002306  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24254  002308  0E07               	movlw	7
 24255  00230A  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24256  00230C  0E00               	movlw	0
 24257  00230E  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24258  002310  0E00               	movlw	0
 24259  002312  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24260  002314  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 24261                           
 24262                           ;mdm_gsm_gprs.c: 307: CheckMdmSts = MdmCh_WaitEcho;
 24263  002318  0E03               	movlw	3
 24264  00231A  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24265                           
 24266                           ;mdm_gsm_gprs.c: 308: break;
 24267  00231C  0012               	return	
 24268  00231E                     
 24269                           ;mdm_gsm_gprs.c: 312: if (ReceiveEvt(&NewStringReceived))
 24270  00231E  0E3C               	movlw	low _NewStringReceived
 24271  002320  0100               	movlb	0	; () banked
 24272  002322  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24273  002324  0E00               	movlw	high _NewStringReceived
 24274  002326  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24275  002328  EC10  F02D         	call	_ReceiveEvt	;wreg free
 24276  00232C  0900               	iorlw	0
 24277  00232E  B4D8               	btfsc	status,2,c
 24278  002330  D02F               	goto	l983
 24279                           
 24280                           ;mdm_gsm_gprs.c: 313: {
 24281                           ;mdm_gsm_gprs.c: 315: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 24282  002332  CC58  FFE8         	movff	_RxBuffer,wreg
 24283  002336  0A4F               	xorlw	79
 24284  002338  A4D8               	btfss	status,2,c
 24285  00233A  D005               	goto	u12150
 24286  00233C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24287  002340  0A4B               	xorlw	75
 24288  002342  B4D8               	btfsc	status,2,c
 24289  002344  D00A               	goto	u12170
 24290  002346                     u12150:
 24291  002346  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24292  00234A  0A4F               	xorlw	79
 24293  00234C  A4D8               	btfss	status,2,c
 24294  00234E  0012               	return	
 24295  002350  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24296  002354  0A4B               	xorlw	75
 24297  002356  A4D8               	btfss	status,2,c
 24298  002358  0012               	return	
 24299  00235A                     u12170:
 24300                           
 24301                           ;mdm_gsm_gprs.c: 316: {
 24302                           ;mdm_gsm_gprs.c: 317: MdmStatus = ModemReady;
 24303  00235A  0E02               	movlw	2
 24304  00235C  0100               	movlb	0	; () banked
 24305  00235E  6FCF               	movwf	_MdmStatus& (0+255),b
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;mdm_gsm_gprs.c: 319: GenerateEvt(&MdmOnOffPulseRequest);
 24309  002360  0EDE               	movlw	low _MdmOnOffPulseRequest
 24310  002362  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24311  002364  0E00               	movlw	high _MdmOnOffPulseRequest
 24312  002366  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24313  002368  ECA4  F02E         	call	_GenerateEvt	;wreg free
 24314                           
 24315                           ;mdm_gsm_gprs.c: 321: OsTmr_StartTimer(&Timeout,1000u);
 24316  00236C  0EF5               	movlw	low CheckModem@Timeout
 24317  00236E  0100               	movlb	0	; () banked
 24318  002370  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24319  002372  0E03               	movlw	high CheckModem@Timeout
 24320  002374  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24321  002376  0EE8               	movlw	232
 24322  002378  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24323  00237A  0E03               	movlw	3
 24324  00237C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24325  00237E  0E00               	movlw	0
 24326  002380  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24327  002382  0E00               	movlw	0
 24328  002384  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24329  002386  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 24330                           
 24331                           ;mdm_gsm_gprs.c: 323: CheckMdmSts = MdmCh_Delay;
 24332  00238A  0E04               	movlw	4
 24333  00238C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24334                           
 24335                           ;mdm_gsm_gprs.c: 324: }
 24336                           ;mdm_gsm_gprs.c: 325: }
 24337  00238E  0012               	return	
 24338  002390                     l983:
 24339                           
 24340                           ;mdm_gsm_gprs.c: 326: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24341  002390  0EF5               	movlw	low CheckModem@Timeout
 24342  002392  0100               	movlb	0	; () banked
 24343  002394  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24344  002396  0E03               	movlw	high CheckModem@Timeout
 24345  002398  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24346  00239A  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24347  00239E  06E8               	decf	wreg,f,c
 24348  0023A0  A4D8               	btfss	status,2,c
 24349  0023A2  0012               	return	
 24350                           
 24351                           ;mdm_gsm_gprs.c: 327: {
 24352                           ;mdm_gsm_gprs.c: 329: MdmStatus = ModemOff;
 24353  0023A4  0E00               	movlw	0
 24354  0023A6  0100               	movlb	0	; () banked
 24355  0023A8  6FCF               	movwf	_MdmStatus& (0+255),b
 24356                           
 24357                           ;mdm_gsm_gprs.c: 331: ComChecCompleted = 1u;
 24358  0023AA  0E01               	movlw	1
 24359  0023AC  6E2B               	movwf	_ComChecCompleted,c
 24360                           
 24361                           ;mdm_gsm_gprs.c: 333: CheckMdmSts = MdmCh_Done;
 24362  0023AE  0E05               	movlw	5
 24363  0023B0  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24364                           
 24365                           ; BSR set to: 0
 24366                           ;mdm_gsm_gprs.c: 338: }
 24367                           ;mdm_gsm_gprs.c: 339: break;
 24368                           
 24369                           ; BSR set to: 0
 24370                           
 24371                           ;mdm_gsm_gprs.c: 335: else
 24372                           ;mdm_gsm_gprs.c: 336: {
 24373                           
 24374                           ; BSR set to: 0
 24375                           
 24376                           ;mdm_gsm_gprs.c: 334: }
 24377  0023B2  0012               	return	
 24378  0023B4                     
 24379                           ;mdm_gsm_gprs.c: 343: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 24380                           
 24381                           ; BSR set to: 0
 24382  0023B4  0EF5               	movlw	low CheckModem@Timeout
 24383  0023B6  0100               	movlb	0	; () banked
 24384  0023B8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 24385  0023BA  0E03               	movlw	high CheckModem@Timeout
 24386  0023BC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 24387  0023BE  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 24388  0023C2  06E8               	decf	wreg,f,c
 24389  0023C4  A4D8               	btfss	status,2,c
 24390  0023C6  0012               	return	
 24391                           
 24392                           ;mdm_gsm_gprs.c: 344: {
 24393                           ;mdm_gsm_gprs.c: 346: MdmStatus = ModemOff;
 24394  0023C8  0E00               	movlw	0
 24395  0023CA  0100               	movlb	0	; () banked
 24396  0023CC  6FCF               	movwf	_MdmStatus& (0+255),b
 24397                           
 24398                           ;mdm_gsm_gprs.c: 348: ComChecCompleted = 1u;
 24399  0023CE  0E01               	movlw	1
 24400  0023D0  6E2B               	movwf	_ComChecCompleted,c
 24401                           
 24402                           ;mdm_gsm_gprs.c: 350: CheckMdmSts = MdmCh_Done;
 24403  0023D2  0E05               	movlw	5
 24404  0023D4  6E2A               	movwf	CheckModem@CheckMdmSts,c
 24405                           
 24406                           ; BSR set to: 0
 24407                           ;mdm_gsm_gprs.c: 360: }
 24408                           
 24409                           ; BSR set to: 0
 24410                           ;mdm_gsm_gprs.c: 359: break;
 24411                           
 24412                           ;mdm_gsm_gprs.c: 358: default:
 24413                           
 24414                           ; BSR set to: 0
 24415                           ;mdm_gsm_gprs.c: 356: break;
 24416                           
 24417                           ;mdm_gsm_gprs.c: 354: case MdmCh_Done:
 24418                           
 24419                           ; BSR set to: 0
 24420                           ;mdm_gsm_gprs.c: 351: }
 24421                           ;mdm_gsm_gprs.c: 352: break;
 24422  0023D6  0012               	return	
 24423  0023D8                     l976:
 24424                           
 24425                           ; BSR set to: 0
 24426  0023D8  502A               	movf	CheckModem@CheckMdmSts,w,c
 24427                           
 24428                           ; Switch size 1, requested type "space"
 24429                           ; Number of cases is 6, Range of values is 0 to 5
 24430                           ; switch strategies available:
 24431                           ; Name         Instructions Cycles
 24432                           ; simple_byte           19    10 (average)
 24433                           ;	Chosen strategy is simple_byte
 24434  0023DA  0A00               	xorlw	0	; case 0
 24435  0023DC  B4D8               	btfsc	status,2,c
 24436  0023DE  D766               	goto	l977
 24437  0023E0  0A01               	xorlw	1	; case 1
 24438  0023E2  B4D8               	btfsc	status,2,c
 24439  0023E4  D775               	goto	l979
 24440  0023E6  0A03               	xorlw	3	; case 2
 24441  0023E8  B4D8               	btfsc	status,2,c
 24442  0023EA  D77F               	goto	l981
 24443  0023EC  0A01               	xorlw	1	; case 3
 24444  0023EE  B4D8               	btfsc	status,2,c
 24445  0023F0  D796               	goto	l982
 24446  0023F2  0A07               	xorlw	7	; case 4
 24447  0023F4  B4D8               	btfsc	status,2,c
 24448  0023F6  D7DE               	goto	l992
 24449  0023F8  0A01               	xorlw	1	; case 5
 24450  0023FA  0012               	return	
 24451  0023FC                     __end_of_CheckModem:
 24452                           	opt stack 0
 24453                           tosu	equ	0xFFF
 24454                           tosh	equ	0xFFE
 24455                           tosl	equ	0xFFD
 24456                           pclath	equ	0xFFA
 24457                           tblptru	equ	0xFF8
 24458                           tblptrh	equ	0xFF7
 24459                           tblptrl	equ	0xFF6
 24460                           tablat	equ	0xFF5
 24461                           prodh	equ	0xFF4
 24462                           prodl	equ	0xFF3
 24463                           intcon	equ	0xFF2
 24464                           intcon2	equ	0xFF1
 24465                           intcon3	equ	0xFF0
 24466                           indf0	equ	0xFEF
 24467                           postinc0	equ	0xFEE
 24468                           plusw0	equ	0xFEB
 24469                           fsr0h	equ	0xFEA
 24470                           fsr0l	equ	0xFE9
 24471                           wreg	equ	0xFE8
 24472                           indf1	equ	0xFE7
 24473                           postinc1	equ	0xFE6
 24474                           postdec1	equ	0xFE5
 24475                           plusw1	equ	0xFE3
 24476                           fsr1h	equ	0xFE2
 24477                           fsr1l	equ	0xFE1
 24478                           indf2	equ	0xFDF
 24479                           postinc2	equ	0xFDE
 24480                           postdec2	equ	0xFDD
 24481                           plusw2	equ	0xFDB
 24482                           fsr2h	equ	0xFDA
 24483                           fsr2l	equ	0xFD9
 24484                           status	equ	0xFD8
 24485                           
 24486 ;; *************** function _MdmCntSm *****************
 24487 ;; Defined at:
 24488 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 24489 ;; Parameters:    Size  Location     Type
 24490 ;;		None
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;		None
 24493 ;; Return value:  Size  Location     Type
 24494 ;;                  1    wreg      void 
 24495 ;; Registers used:
 24496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24497 ;; Tracked objects:
 24498 ;;		On entry : 0/0
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24506 ;;Total ram usage:        0 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; Hardware stack levels required when called:   12
 24509 ;; This function calls:
 24510 ;;		_InitModemInterface
 24511 ;;		_ReceiveEvt
 24512 ;; This function is called by:
 24513 ;;		_Mdm_DrvMainFn
 24514 ;; This function uses a non-reentrant model
 24515 ;;
 24516                           
 24517                           	psect	text111
 24518  0040DA                     __ptext111:
 24519                           	opt stack 0
 24520  0040DA                     _MdmCntSm:
 24521                           	opt stack 15
 24522                           
 24523                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 24524                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 24525                           ;mdm_drv.c: 204: switch (MdmCntState)
 24526                           
 24527                           ;incstack = 0
 24528  0040DA  D045               	goto	l315
 24529  0040DC                     
 24530                           ;mdm_drv.c: 208: InitModemInterface();
 24531  0040DC  EC45  F02F         	call	_InitModemInterface	;wreg free
 24532                           
 24533                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 24534  0040E0  0E01               	movlw	1
 24535  0040E2  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24536                           
 24537                           ;mdm_drv.c: 211: break;
 24538  0040E4  0012               	return	
 24539  0040E6                     
 24540                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 24541  0040E6  0EDE               	movlw	low _MdmOnOffPulseRequest
 24542  0040E8  0100               	movlb	0	; () banked
 24543  0040EA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24544  0040EC  0E00               	movlw	high _MdmOnOffPulseRequest
 24545  0040EE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24546  0040F0  EC10  F02D         	call	_ReceiveEvt	;wreg free
 24547  0040F4  0900               	iorlw	0
 24548  0040F6  B4D8               	btfsc	status,2,c
 24549  0040F8  D009               	goto	l319
 24550                           
 24551                           ;mdm_drv.c: 216: {
 24552                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 24553  0040FA  0E02               	movlw	2
 24554  0040FC  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24555                           
 24556                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 24557  0040FE  8284               	bsf	3972,1,c	;volatile
 24558                           
 24559                           ;mdm_drv.c: 222: Counter = 0;
 24560  004100  0E00               	movlw	0
 24561  004102  0102               	movlb	2	; () banked
 24562  004104  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 24563  004106  0E00               	movlw	0
 24564  004108  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 24565                           
 24566                           ;mdm_drv.c: 223: }
 24567  00410A  0012               	return	
 24568  00410C                     l319:
 24569                           
 24570                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 24571                           
 24572                           ; BSR set to: 2
 24573  00410C  0E3D               	movlw	low _MdmResetRequest
 24574  00410E  0100               	movlb	0	; () banked
 24575  004110  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24576  004112  0E00               	movlw	high _MdmResetRequest
 24577  004114  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24578  004116  EC10  F02D         	call	_ReceiveEvt	;wreg free
 24579  00411A  0900               	iorlw	0
 24580  00411C  B4D8               	btfsc	status,2,c
 24581  00411E  0012               	return	
 24582                           
 24583                           ;mdm_drv.c: 225: {
 24584                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 24585  004120  0E03               	movlw	3
 24586  004122  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24587                           
 24588                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 24589  004124  8084               	bsf	3972,0,c	;volatile
 24590                           
 24591                           ;mdm_drv.c: 231: Counter = 0;
 24592  004126  0E00               	movlw	0
 24593  004128  0102               	movlb	2	; () banked
 24594  00412A  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 24595  00412C  0E00               	movlw	0
 24596  00412E  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 24597                           
 24598                           ; BSR set to: 2
 24599                           ;mdm_drv.c: 236: }
 24600                           ;mdm_drv.c: 237: break;
 24601                           
 24602                           ; BSR set to: 2
 24603                           
 24604                           ;mdm_drv.c: 233: else
 24605                           ;mdm_drv.c: 234: {
 24606                           
 24607                           ; BSR set to: 2
 24608                           
 24609                           ;mdm_drv.c: 232: }
 24610  004130  0012               	return	
 24611  004132                     
 24612                           ;mdm_drv.c: 241: Counter++;
 24613                           
 24614                           ; BSR set to: 2
 24615  004132  0102               	movlb	2	; () banked
 24616  004134  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 24617  004136  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 24618                           
 24619                           ; BSR set to: 2
 24620                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 24621  004138  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 24622  00413A  E104               	bnz	u12090
 24623  00413C  0E96               	movlw	150
 24624  00413E  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 24625  004140  A0D8               	btfss	status,0,c
 24626  004142  0012               	return	
 24627  004144                     u12090:
 24628                           
 24629                           ; BSR set to: 2
 24630                           ;mdm_drv.c: 244: {
 24631                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 24632  004144  9284               	bcf	3972,1,c	;volatile
 24633                           
 24634                           ; BSR set to: 2
 24635                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 24636  004146  0E01               	movlw	1
 24637  004148  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24638                           
 24639                           ; BSR set to: 2
 24640                           ;mdm_drv.c: 249: }
 24641                           ;mdm_drv.c: 250: break;
 24642  00414A  0012               	return	
 24643  00414C                     
 24644                           ;mdm_drv.c: 254: Counter++;
 24645                           
 24646                           ; BSR set to: 2
 24647  00414C  0102               	movlb	2	; () banked
 24648  00414E  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 24649  004150  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 24650                           
 24651                           ; BSR set to: 2
 24652                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 24653  004152  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 24654  004154  E104               	bnz	u12100
 24655  004156  0E0A               	movlw	10
 24656  004158  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 24657  00415A  A0D8               	btfss	status,0,c
 24658  00415C  0012               	return	
 24659  00415E                     u12100:
 24660                           
 24661                           ; BSR set to: 2
 24662                           ;mdm_drv.c: 257: {
 24663                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 24664  00415E  9084               	bcf	3972,0,c	;volatile
 24665                           
 24666                           ; BSR set to: 2
 24667                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 24668  004160  0E01               	movlw	1
 24669  004162  6E2E               	movwf	MdmCntSm@MdmCntState,c
 24670                           
 24671                           ; BSR set to: 2
 24672                           ;mdm_drv.c: 267: }
 24673                           
 24674                           ; BSR set to: 2
 24675                           ;mdm_drv.c: 266: break;
 24676                           
 24677                           ;mdm_drv.c: 265: default:
 24678                           
 24679                           ; BSR set to: 2
 24680                           ;mdm_drv.c: 262: }
 24681                           ;mdm_drv.c: 263: break;
 24682  004164  0012               	return	
 24683  004166                     l315:
 24684                           
 24685                           ; BSR set to: 2
 24686  004166  502E               	movf	MdmCntSm@MdmCntState,w,c
 24687                           
 24688                           ; Switch size 1, requested type "space"
 24689                           ; Number of cases is 4, Range of values is 0 to 3
 24690                           ; switch strategies available:
 24691                           ; Name         Instructions Cycles
 24692                           ; simple_byte           13     7 (average)
 24693                           ;	Chosen strategy is simple_byte
 24694  004168  0A00               	xorlw	0	; case 0
 24695  00416A  B4D8               	btfsc	status,2,c
 24696  00416C  D7B7               	goto	l316
 24697  00416E  0A01               	xorlw	1	; case 1
 24698  004170  B4D8               	btfsc	status,2,c
 24699  004172  D7B9               	goto	l318
 24700  004174  0A03               	xorlw	3	; case 2
 24701  004176  B4D8               	btfsc	status,2,c
 24702  004178  D7DC               	goto	l323
 24703  00417A  0A01               	xorlw	1	; case 3
 24704  00417C  A4D8               	btfss	status,2,c
 24705  00417E  0012               	return	
 24706  004180  D7E5               	goto	l325
 24707  004182                     __end_of_MdmCntSm:
 24708                           	opt stack 0
 24709                           tosu	equ	0xFFF
 24710                           tosh	equ	0xFFE
 24711                           tosl	equ	0xFFD
 24712                           pclath	equ	0xFFA
 24713                           tblptru	equ	0xFF8
 24714                           tblptrh	equ	0xFF7
 24715                           tblptrl	equ	0xFF6
 24716                           tablat	equ	0xFF5
 24717                           prodh	equ	0xFF4
 24718                           prodl	equ	0xFF3
 24719                           intcon	equ	0xFF2
 24720                           intcon2	equ	0xFF1
 24721                           intcon3	equ	0xFF0
 24722                           indf0	equ	0xFEF
 24723                           postinc0	equ	0xFEE
 24724                           plusw0	equ	0xFEB
 24725                           fsr0h	equ	0xFEA
 24726                           fsr0l	equ	0xFE9
 24727                           wreg	equ	0xFE8
 24728                           indf1	equ	0xFE7
 24729                           postinc1	equ	0xFE6
 24730                           postdec1	equ	0xFE5
 24731                           plusw1	equ	0xFE3
 24732                           fsr1h	equ	0xFE2
 24733                           fsr1l	equ	0xFE1
 24734                           indf2	equ	0xFDF
 24735                           postinc2	equ	0xFDE
 24736                           postdec2	equ	0xFDD
 24737                           plusw2	equ	0xFDB
 24738                           fsr2h	equ	0xFDA
 24739                           fsr2l	equ	0xFD9
 24740                           status	equ	0xFD8
 24741                           
 24742 ;; *************** function _InitModemInterface *****************
 24743 ;; Defined at:
 24744 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;		None
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;		None
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  1    wreg      void 
 24751 ;; Registers used:
 24752 ;;		None
 24753 ;; Tracked objects:
 24754 ;;		On entry : 0/0
 24755 ;;		On exit  : 0/0
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24762 ;;Total ram usage:        0 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; Hardware stack levels required when called:   11
 24765 ;; This function calls:
 24766 ;;		Nothing
 24767 ;; This function is called by:
 24768 ;;		_MdmCntSm
 24769 ;; This function uses a non-reentrant model
 24770 ;;
 24771                           
 24772                           	psect	text112
 24773  005E8A                     __ptext112:
 24774                           	opt stack 0
 24775  005E8A                     _InitModemInterface:
 24776                           	opt stack 15
 24777                           
 24778                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 24779                           
 24780                           ;incstack = 0
 24781  005E8A  9096               	bcf	3990,0,c	;volatile
 24782                           
 24783                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 24784  005E8C  9296               	bcf	3990,1,c	;volatile
 24785                           
 24786                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 24787  005E8E  8496               	bsf	3990,2,c	;volatile
 24788  005E90  0012               	return		;funcret
 24789  005E92                     __end_of_InitModemInterface:
 24790                           	opt stack 0
 24791                           tosu	equ	0xFFF
 24792                           tosh	equ	0xFFE
 24793                           tosl	equ	0xFFD
 24794                           pclath	equ	0xFFA
 24795                           tblptru	equ	0xFF8
 24796                           tblptrh	equ	0xFF7
 24797                           tblptrl	equ	0xFF6
 24798                           tablat	equ	0xFF5
 24799                           prodh	equ	0xFF4
 24800                           prodl	equ	0xFF3
 24801                           intcon	equ	0xFF2
 24802                           intcon2	equ	0xFF1
 24803                           intcon3	equ	0xFF0
 24804                           indf0	equ	0xFEF
 24805                           postinc0	equ	0xFEE
 24806                           plusw0	equ	0xFEB
 24807                           fsr0h	equ	0xFEA
 24808                           fsr0l	equ	0xFE9
 24809                           wreg	equ	0xFE8
 24810                           indf1	equ	0xFE7
 24811                           postinc1	equ	0xFE6
 24812                           postdec1	equ	0xFE5
 24813                           plusw1	equ	0xFE3
 24814                           fsr1h	equ	0xFE2
 24815                           fsr1l	equ	0xFE1
 24816                           indf2	equ	0xFDF
 24817                           postinc2	equ	0xFDE
 24818                           postdec2	equ	0xFDD
 24819                           plusw2	equ	0xFDB
 24820                           fsr2h	equ	0xFDA
 24821                           fsr2l	equ	0xFD9
 24822                           status	equ	0xFD8
 24823                           
 24824 ;; *************** function _InitGprsNetwork *****************
 24825 ;; Defined at:
 24826 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 24827 ;; Parameters:    Size  Location     Type
 24828 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 24829 ;;		 -> NULL(0), 
 24830 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 24833 ;;  Index           1   50[BANK1 ] unsigned char 
 24834 ;; Return value:  Size  Location     Type
 24835 ;;                  1    wreg      enum E8905
 24836 ;; Registers used:
 24837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24838 ;; Tracked objects:
 24839 ;;		On entry : 0/0
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24843 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24847 ;;Total ram usage:       56 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; Hardware stack levels required when called:   14
 24850 ;; This function calls:
 24851 ;;		_ClearBuffer
 24852 ;;		_OsTmr_GetTimerStatus
 24853 ;;		_OsTmr_StartTimer
 24854 ;;		_ReceiveEvt
 24855 ;;		_StringCopy
 24856 ;;		_Uart_WriteConstString
 24857 ;;		_Uart_WriteString
 24858 ;; This function is called by:
 24859 ;;		_MdmHttp_MainTask
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           
 24863                           	psect	text113
 24864  000DC8                     __ptext113:
 24865                           	opt stack 0
 24866  000DC8                     _InitGprsNetwork:
 24867                           	opt stack 13
 24868                           
 24869                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 24870                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 24871                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 24872                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 24873                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 24874                           
 24875                           ;incstack = 0
 24876  000DC8  0E00               	movlw	0
 24877  000DCA  0101               	movlb	1	; () banked
 24878  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 24879                           
 24880                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 24881  000DCE  D154               	goto	l1202
 24882  000DD0                     
 24883                           ; BSR set to: 1
 24884                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 24885                           
 24886                           ; BSR set to: 1
 24887  000DD0  0ED8               	movlw	low _InitNetwork
 24888  000DD2  0100               	movlb	0	; () banked
 24889  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24890  000DD6  0E00               	movlw	high _InitNetwork
 24891  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24892  000DDA  EC10  F02D         	call	_ReceiveEvt	;wreg free
 24893  000DDE  0900               	iorlw	0
 24894  000DE0  B4D8               	btfsc	status,2,c
 24895  000DE2  D166               	goto	l1205
 24896                           
 24897                           ;mdm_gsm_gprs_http.c: 137: {
 24898                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 24899  000DE4  0E01               	movlw	1
 24900  000DE6  D141               	goto	L67
 24901  000DE8                     
 24902                           ; BSR set to: 1
 24903                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 24904                           
 24905                           ; BSR set to: 1
 24906  000DE8  0EB6               	movlw	low STR_8
 24907  000DEA  0100               	movlb	0	; () banked
 24908  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24909  000DEE  0EFE               	movlw	high STR_8
 24910  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24911  000DF2  0E01               	movlw	1
 24912  000DF4  EC1B  F02B         	call	_Uart_WriteConstString
 24913                           
 24914                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 24915  000DF8  0E07               	movlw	7
 24916  000DFA  0101               	movlb	1	; () banked
 24917  000DFC  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 24918                           
 24919                           ; BSR set to: 1
 24920                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 24921  000DFE  0E02               	movlw	2
 24922  000E00  0100               	movlb	0	; () banked
 24923  000E02  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 24924                           
 24925                           ; BSR set to: 0
 24926                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 24927  000E04  0EF5               	movlw	low _ConnTimeout
 24928  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 24929  000E08  0E02               	movlw	high _ConnTimeout
 24930  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 24931  000E0C  0E20               	movlw	32
 24932  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 24933  000E10  0E4E               	movlw	78
 24934  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 24935  000E14  0E00               	movlw	0
 24936  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 24937  000E18  0E00               	movlw	0
 24938  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 24939  000E1C  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 24940  000E20  D0C7               	goto	l13253
 24941  000E22                     
 24942                           ; BSR set to: 1
 24943                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 24944                           
 24945                           ; BSR set to: 1
 24946  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 24947  000E24  0100               	movlb	0	; () banked
 24948  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24949  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 24950  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24951  000E2C  0E00               	movlw	0
 24952  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24953  000E30  0E32               	movlw	50
 24954  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24955  000E34  EC32  F02C         	call	_ClearBuffer	;wreg free
 24956                           
 24957                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 24958  000E38  0EEA               	movlw	low STR_9
 24959  000E3A  0100               	movlb	0	; () banked
 24960  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24961  000E3E  0EFE               	movlw	high STR_9
 24962  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24963  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 24964  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24965  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 24966  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24967  000E4A  0E00               	movlw	0
 24968  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 24969  000E4E  0E14               	movlw	20
 24970  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 24971  000E52  ECD4  F026         	call	_StringCopy	;wreg free
 24972                           
 24973                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 24974  000E56  0E00               	movlw	0
 24975  000E58  0101               	movlb	1	; () banked
 24976  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 24977  000E5C  D01C               	goto	l1208
 24978  000E5E                     
 24979                           ; BSR set to: 1
 24980                           ;mdm_gsm_gprs_http.c: 161: {
 24981                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 24982                           
 24983                           ; BSR set to: 1
 24984  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 24985  000E60  0D01               	mullw	1
 24986  000E62  50F3               	movf	prodl,w,c
 24987  000E64  0100               	movlb	0	; () banked
 24988  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 24989  000E68  6ED9               	movwf	fsr2l,c
 24990  000E6A  50F4               	movf	prodh,w,c
 24991  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 24992  000E6E  6EDA               	movwf	fsr2h,c
 24993  000E70  0101               	movlb	1	; () banked
 24994  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 24995  000E74  0100               	movlb	0	; () banked
 24996  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 24997  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 24998  000E7A  0E14               	movlw	20
 24999  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25000  000E7E  0E00               	movlw	0
 25001  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25002  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 25003  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25004  000E86  6EE1               	movwf	fsr1l,c
 25005  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 25006  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25007  000E8C  6EE2               	movwf	fsr1h,c
 25008  000E8E  CFDF FFE7          	movff	indf2,indf1
 25009                           
 25010                           ; BSR set to: 0
 25011  000E92  0101               	movlb	1	; () banked
 25012  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 25013  000E96                     l1208:
 25014                           
 25015                           ; BSR set to: 1
 25016                           
 25017                           ; BSR set to: 1
 25018  000E96  0100               	movlb	0	; () banked
 25019  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 25020  000E9A  0101               	movlb	1	; () banked
 25021  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 25022  000E9E  A0D8               	btfss	status,0,c
 25023  000EA0  D7DE               	goto	l1209
 25024                           
 25025                           ; BSR set to: 1
 25026                           ;mdm_gsm_gprs_http.c: 163: }
 25027                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 25028                           
 25029                           ; BSR set to: 1
 25030  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25031  000EA4  0100               	movlb	0	; () banked
 25032  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25033  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25034  000EAA  0E14               	movlw	20
 25035  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25036  000EAE  0E00               	movlw	0
 25037  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25038  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 25039  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25040  000EB6  6ED9               	movwf	fsr2l,c
 25041  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 25042  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25043  000EBC  6EDA               	movwf	fsr2h,c
 25044  000EBE  0E22               	movlw	34
 25045  000EC0  6EDF               	movwf	indf2,c
 25046                           
 25047                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 25048  000EC2  0101               	movlb	1	; () banked
 25049  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25050  000EC6  0100               	movlb	0	; () banked
 25051  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25052  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25053  000ECC  0E15               	movlw	21
 25054  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25055  000ED0  0E00               	movlw	0
 25056  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25057  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 25058  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25059  000ED8  6ED9               	movwf	fsr2l,c
 25060  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 25061  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25062  000EDE  6EDA               	movwf	fsr2h,c
 25063  000EE0  0E0D               	movlw	13
 25064  000EE2  6EDF               	movwf	indf2,c
 25065                           
 25066                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 25067  000EE4  0101               	movlb	1	; () banked
 25068  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 25069  000EE8  0100               	movlb	0	; () banked
 25070  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 25071  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 25072  000EEE  0E16               	movlw	22
 25073  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 25074  000EF2  0E00               	movlw	0
 25075  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 25076  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 25077  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 25078  000EFA  6ED9               	movwf	fsr2l,c
 25079  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 25080  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 25081  000F00  6EDA               	movwf	fsr2h,c
 25082  000F02  0E00               	movlw	0
 25083  000F04  6EDF               	movwf	indf2,c
 25084                           
 25085                           ; BSR set to: 0
 25086                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 25087  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 25088  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 25089  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 25090  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 25091  000F0E  0E01               	movlw	1
 25092  000F10  ECBB  F02B         	call	_Uart_WriteString
 25093                           
 25094                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 25095  000F14  0E07               	movlw	7
 25096  000F16  0101               	movlb	1	; () banked
 25097  000F18  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25098                           
 25099                           ; BSR set to: 1
 25100                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 25101  000F1A  0E03               	movlw	3
 25102  000F1C  0100               	movlb	0	; () banked
 25103  000F1E  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25104                           
 25105                           ; BSR set to: 0
 25106                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 25107  000F20  0EF5               	movlw	low _ConnTimeout
 25108  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25109  000F24  0E02               	movlw	high _ConnTimeout
 25110  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25111  000F28  0E20               	movlw	32
 25112  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25113  000F2C  0E4E               	movlw	78
 25114  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25115  000F30  0E00               	movlw	0
 25116  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25117  000F34  0E00               	movlw	0
 25118  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25119  000F38  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25120  000F3C  D039               	goto	l13253
 25121  000F3E                     
 25122                           ; BSR set to: 1
 25123                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 25124                           
 25125                           ; BSR set to: 1
 25126  000F3E  0E57               	movlw	low STR_10
 25127  000F40  0100               	movlb	0	; () banked
 25128  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25129  000F44  0EFF               	movlw	high STR_10
 25130  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25131  000F48  0E01               	movlw	1
 25132  000F4A  EC1B  F02B         	call	_Uart_WriteConstString
 25133                           
 25134                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 25135  000F4E  0E07               	movlw	7
 25136  000F50  0101               	movlb	1	; () banked
 25137  000F52  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25138                           
 25139                           ; BSR set to: 1
 25140                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 25141  000F54  0E05               	movlw	5
 25142  000F56  0100               	movlb	0	; () banked
 25143  000F58  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25144                           
 25145                           ; BSR set to: 0
 25146                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 25147  000F5A  0EF5               	movlw	low _ConnTimeout
 25148  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25149  000F5E  0E02               	movlw	high _ConnTimeout
 25150  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25151  000F62  0E20               	movlw	32
 25152  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25153  000F66  0E4E               	movlw	78
 25154  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25155  000F6A  0E00               	movlw	0
 25156  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25157  000F6E  0E00               	movlw	0
 25158  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25159  000F72  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25160  000F76  D01C               	goto	l13253
 25161  000F78                     
 25162                           ; BSR set to: 1
 25163                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 25164                           
 25165                           ; BSR set to: 1
 25166  000F78  0E65               	movlw	low STR_11
 25167  000F7A  0100               	movlb	0	; () banked
 25168  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25169  000F7E  0EFF               	movlw	high STR_11
 25170  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25171  000F82  0E01               	movlw	1
 25172  000F84  EC1B  F02B         	call	_Uart_WriteConstString
 25173                           
 25174                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 25175  000F88  0E08               	movlw	8
 25176  000F8A  0101               	movlb	1	; () banked
 25177  000F8C  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25178                           
 25179                           ; BSR set to: 1
 25180                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 25181  000F8E  0E05               	movlw	5
 25182  000F90  0100               	movlb	0	; () banked
 25183  000F92  6FCE               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 25184                           
 25185                           ; BSR set to: 0
 25186                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 25187  000F94  0EF5               	movlw	low _ConnTimeout
 25188  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25189  000F98  0E02               	movlw	high _ConnTimeout
 25190  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25191  000F9C  0E20               	movlw	32
 25192  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25193  000FA0  0E4E               	movlw	78
 25194  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25195  000FA4  0E00               	movlw	0
 25196  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25197  000FA8  0E00               	movlw	0
 25198  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25199  000FAC  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25200  000FB0                     l13253:
 25201                           
 25202                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 25203  000FB0  0E01               	movlw	1
 25204  000FB2  0101               	movlb	1	; () banked
 25205  000FB4  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25206                           
 25207                           ;mdm_gsm_gprs_http.c: 201: break;
 25208  000FB6  D07C               	goto	l1205
 25209  000FB8                     
 25210                           ; BSR set to: 1
 25211                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 25212                           
 25213                           ; BSR set to: 1
 25214  000FB8  0E02               	movlw	2
 25215  000FBA  D05A               	goto	L66
 25216  000FBC                     
 25217                           ; BSR set to: 1
 25218                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 25219                           
 25220                           ; BSR set to: 1
 25221  000FBC  0E3C               	movlw	low _NewStringReceived
 25222  000FBE  0100               	movlb	0	; () banked
 25223  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25224  000FC2  0E00               	movlw	high _NewStringReceived
 25225  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25226  000FC6  EC10  F02D         	call	_ReceiveEvt	;wreg free
 25227  000FCA  0900               	iorlw	0
 25228  000FCC  B4D8               	btfsc	status,2,c
 25229  000FCE  D018               	goto	l1215
 25230                           
 25231                           ;mdm_gsm_gprs_http.c: 212: {
 25232                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 25233  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 25234  000FD4  0A4F               	xorlw	79
 25235  000FD6  A4D8               	btfss	status,2,c
 25236  000FD8  D06B               	goto	l1205
 25237  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25238  000FDE  0A4B               	xorlw	75
 25239  000FE0  A4D8               	btfss	status,2,c
 25240  000FE2  D066               	goto	l1205
 25241                           
 25242                           ;mdm_gsm_gprs_http.c: 215: {
 25243                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 25244  000FE4  C0CE  F1EE         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25245                           
 25246                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 25247  000FE8  0E58               	movlw	low _RxBuffer
 25248  000FEA  0100               	movlb	0	; () banked
 25249  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25250  000FEE  0E0C               	movlw	high _RxBuffer
 25251  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25252  000FF2  0E01               	movlw	1
 25253  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25254  000FF6  0E90               	movlw	144
 25255  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25256  000FFA  EC32  F02C         	call	_ClearBuffer	;wreg free
 25257                           
 25258                           ;mdm_gsm_gprs_http.c: 220: }
 25259                           ;mdm_gsm_gprs_http.c: 221: }
 25260  000FFE  D058               	goto	l1205
 25261  001000                     l1215:
 25262                           
 25263                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25264  001000  0EF5               	movlw	low _ConnTimeout
 25265  001002  0100               	movlb	0	; () banked
 25266  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25267  001006  0E02               	movlw	high _ConnTimeout
 25268  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25269  00100A  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25270  00100E  D029               	goto	L31
 25271  001010                     
 25272                           ; BSR set to: 1
 25273                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 25274                           
 25275                           ; BSR set to: 1
 25276  001010  0E3C               	movlw	low _NewStringReceived
 25277  001012  0100               	movlb	0	; () banked
 25278  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25279  001016  0E00               	movlw	high _NewStringReceived
 25280  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25281  00101A  EC10  F02D         	call	_ReceiveEvt	;wreg free
 25282  00101E  0900               	iorlw	0
 25283  001020  B4D8               	btfsc	status,2,c
 25284  001022  D018               	goto	l1220
 25285                           
 25286                           ;mdm_gsm_gprs_http.c: 232: {
 25287                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 25288  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 25289  001028  0A2B               	xorlw	43
 25290  00102A  A4D8               	btfss	status,2,c
 25291  00102C  D041               	goto	l1205
 25292  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25293  001032  0A53               	xorlw	83
 25294  001034  A4D8               	btfss	status,2,c
 25295  001036  D03C               	goto	l1205
 25296                           
 25297                           ;mdm_gsm_gprs_http.c: 235: {
 25298                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 25299  001038  C0CE  F1EE         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 25300                           
 25301                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 25302  00103C  0E58               	movlw	low _RxBuffer
 25303  00103E  0100               	movlb	0	; () banked
 25304  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25305  001042  0E0C               	movlw	high _RxBuffer
 25306  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25307  001046  0E01               	movlw	1
 25308  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25309  00104A  0E90               	movlw	144
 25310  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25311  00104E  EC32  F02C         	call	_ClearBuffer	;wreg free
 25312                           
 25313                           ;mdm_gsm_gprs_http.c: 240: }
 25314                           ;mdm_gsm_gprs_http.c: 241: }
 25315  001052  D02E               	goto	l1205
 25316  001054                     l1220:
 25317                           
 25318                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 25319  001054  0EF5               	movlw	low _ConnTimeout
 25320  001056  0100               	movlb	0	; () banked
 25321  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25322  00105A  0E02               	movlw	high _ConnTimeout
 25323  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25324  00105E  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 25325  001062                     L31:
 25326  001062  06E8               	decf	wreg,f,c
 25327  001064  A4D8               	btfss	status,2,c
 25328  001066  D024               	goto	l1205
 25329                           
 25330                           ;mdm_gsm_gprs_http.c: 243: {
 25331                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 25332  001068  0E06               	movlw	6
 25333  00106A                     L67:
 25334  00106A  0101               	movlb	1	; () banked
 25335  00106C  D003               	goto	L30
 25336  00106E                     
 25337                           ; BSR set to: 1
 25338                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 25339                           
 25340                           ; BSR set to: 1
 25341  00106E  0E03               	movlw	3
 25342  001070                     L66:
 25343  001070  6FFE               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 25344                           
 25345                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 25346  001072  0E00               	movlw	0
 25347  001074                     L30:
 25348  001074  6FEE               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 25349                           
 25350                           ; BSR set to: 1
 25351                           ;mdm_gsm_gprs_http.c: 257: }
 25352                           
 25353                           ; BSR set to: 1
 25354                           ;mdm_gsm_gprs_http.c: 256: break;
 25355                           
 25356                           ;mdm_gsm_gprs_http.c: 255: default:
 25357                           
 25358                           ;mdm_gsm_gprs_http.c: 253: break;
 25359  001076  D01C               	goto	l1205
 25360  001078                     l1202:
 25361                           
 25362                           ; BSR set to: 1
 25363                           
 25364                           ; BSR set to: 1
 25365  001078  51EE               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 25366                           
 25367                           ; Switch size 1, requested type "space"
 25368                           ; Number of cases is 9, Range of values is 0 to 8
 25369                           ; switch strategies available:
 25370                           ; Name         Instructions Cycles
 25371                           ; simple_byte           28    15 (average)
 25372                           ;	Chosen strategy is simple_byte
 25373  00107A  0A00               	xorlw	0	; case 0
 25374  00107C  B4D8               	btfsc	status,2,c
 25375  00107E  D6A8               	goto	l1203
 25376  001080  0A01               	xorlw	1	; case 1
 25377  001082  B4D8               	btfsc	status,2,c
 25378  001084  D6B1               	goto	l1206
 25379  001086  0A03               	xorlw	3	; case 2
 25380  001088  B4D8               	btfsc	status,2,c
 25381  00108A  D6CB               	goto	l1207
 25382  00108C  0A01               	xorlw	1	; case 3
 25383  00108E  B4D8               	btfsc	status,2,c
 25384  001090  D756               	goto	l1211
 25385  001092  0A07               	xorlw	7	; case 4
 25386  001094  B4D8               	btfsc	status,2,c
 25387  001096  D770               	goto	l1212
 25388  001098  0A01               	xorlw	1	; case 5
 25389  00109A  B4D8               	btfsc	status,2,c
 25390  00109C  D78D               	goto	l1213
 25391  00109E  0A03               	xorlw	3	; case 6
 25392  0010A0  B4D8               	btfsc	status,2,c
 25393  0010A2  D7E5               	goto	l1224
 25394  0010A4  0A01               	xorlw	1	; case 7
 25395  0010A6  B4D8               	btfsc	status,2,c
 25396  0010A8  D789               	goto	l1214
 25397  0010AA  0A0F               	xorlw	15	; case 8
 25398  0010AC  B4D8               	btfsc	status,2,c
 25399  0010AE  D7B0               	goto	l1219
 25400  0010B0                     l1205:
 25401                           
 25402                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 25403                           
 25404                           ; BSR set to: 1
 25405  0010B0  0101               	movlb	1	; () banked
 25406  0010B2  51FE               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 25407  0010B4  0012               	return	
 25408  0010B6                     __end_of_InitGprsNetwork:
 25409                           	opt stack 0
 25410                           tosu	equ	0xFFF
 25411                           tosh	equ	0xFFE
 25412                           tosl	equ	0xFFD
 25413                           pclath	equ	0xFFA
 25414                           tblptru	equ	0xFF8
 25415                           tblptrh	equ	0xFF7
 25416                           tblptrl	equ	0xFF6
 25417                           tablat	equ	0xFF5
 25418                           prodh	equ	0xFF4
 25419                           prodl	equ	0xFF3
 25420                           intcon	equ	0xFF2
 25421                           intcon2	equ	0xFF1
 25422                           intcon3	equ	0xFF0
 25423                           indf0	equ	0xFEF
 25424                           postinc0	equ	0xFEE
 25425                           plusw0	equ	0xFEB
 25426                           fsr0h	equ	0xFEA
 25427                           fsr0l	equ	0xFE9
 25428                           wreg	equ	0xFE8
 25429                           indf1	equ	0xFE7
 25430                           postinc1	equ	0xFE6
 25431                           postdec1	equ	0xFE5
 25432                           plusw1	equ	0xFE3
 25433                           fsr1h	equ	0xFE2
 25434                           fsr1l	equ	0xFE1
 25435                           indf2	equ	0xFDF
 25436                           postinc2	equ	0xFDE
 25437                           postdec2	equ	0xFDD
 25438                           plusw2	equ	0xFDB
 25439                           fsr2h	equ	0xFDA
 25440                           fsr2l	equ	0xFD9
 25441                           status	equ	0xFD8
 25442                           
 25443 ;; *************** function _HttpGetMethod *****************
 25444 ;; Defined at:
 25445 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 25446 ;; Parameters:    Size  Location     Type
 25447 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 25448 ;;		 -> HttpGetDataLocal(5), 
 25449 ;; Auto vars:     Size  Location     Type
 25450 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 25451 ;;  Index           1  200[BANK1 ] unsigned char 
 25452 ;; Return value:  Size  Location     Type
 25453 ;;                  1    wreg      enum E8905
 25454 ;; Registers used:
 25455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25456 ;; Tracked objects:
 25457 ;;		On entry : 0/0
 25458 ;;		On exit  : 0/0
 25459 ;;		Unchanged: 0/0
 25460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25462 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25463 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25464 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25465 ;;Total ram usage:      207 bytes
 25466 ;; Hardware stack levels used:    1
 25467 ;; Hardware stack levels required when called:   14
 25468 ;; This function calls:
 25469 ;;		_ClearBuffer
 25470 ;;		_OsTmr_GetTimerStatus
 25471 ;;		_OsTmr_StartTimer
 25472 ;;		_ReceiveEvt
 25473 ;;		_StringCopy
 25474 ;;		_Uart_WriteConstString
 25475 ;;		_Uart_WriteString
 25476 ;; This function is called by:
 25477 ;;		_MdmHttp_MainTask
 25478 ;; This function uses a non-reentrant model
 25479 ;;
 25480                           
 25481                           	psect	text114
 25482  0005EC                     __ptext114:
 25483                           	opt stack 0
 25484  0005EC                     _HttpGetMethod:
 25485                           	opt stack 13
 25486                           
 25487                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 25488                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 25489                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 25490                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 25491                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 25492                           
 25493                           ; BSR set to: 1
 25494                           ;incstack = 0
 25495  0005EC  0E00               	movlw	0
 25496  0005EE  0101               	movlb	1	; () banked
 25497  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 25498                           
 25499                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 25500  0005F2  D230               	goto	l1235
 25501  0005F4                     
 25502                           ; BSR set to: 1
 25503                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 25504                           
 25505                           ; BSR set to: 1
 25506  0005F4  0ED7               	movlw	low _GetMethod
 25507  0005F6  0100               	movlb	0	; () banked
 25508  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25509  0005FA  0E00               	movlw	high _GetMethod
 25510  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25511  0005FE  EC10  F02D         	call	_ReceiveEvt	;wreg free
 25512  000602  0900               	iorlw	0
 25513  000604  B4D8               	btfsc	status,2,c
 25514  000606  D257               	goto	l1238
 25515                           
 25516                           ;mdm_gsm_gprs_http.c: 284: {
 25517                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 25518  000608  0E01               	movlw	1
 25519  00060A  D18C               	goto	L33
 25520  00060C                     
 25521                           ; BSR set to: 1
 25522                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 25523                           
 25524                           ; BSR set to: 1
 25525  00060C  0EA9               	movlw	low STR_12
 25526  00060E  0100               	movlb	0	; () banked
 25527  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25528  000612  0EFF               	movlw	high STR_12
 25529  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25530  000616  0E01               	movlw	1
 25531  000618  EC1B  F02B         	call	_Uart_WriteConstString
 25532                           
 25533                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 25534  00061C  0E0A               	movlw	10
 25535  00061E  0101               	movlb	1	; () banked
 25536  000620  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25537                           
 25538                           ; BSR set to: 1
 25539                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 25540  000622  0E02               	movlw	2
 25541  000624  0100               	movlb	0	; () banked
 25542  000626  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25543                           
 25544                           ; BSR set to: 0
 25545                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 25546  000628  0EF5               	movlw	low _ConnTimeout
 25547  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25548  00062C  0E02               	movlw	high _ConnTimeout
 25549  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25550  000630  0E20               	movlw	32
 25551  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25552  000634  0E4E               	movlw	78
 25553  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25554  000638  0E00               	movlw	0
 25555  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25556  00063C  0E00               	movlw	0
 25557  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25558  000640  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25559  000644  D1AF               	goto	l13419
 25560  000646                     
 25561                           ; BSR set to: 1
 25562                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 25563                           
 25564                           ; BSR set to: 1
 25565  000646  0E73               	movlw	low STR_13
 25566  000648  0100               	movlb	0	; () banked
 25567  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25568  00064C  0EFF               	movlw	high STR_13
 25569  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25570  000650  0E01               	movlw	1
 25571  000652  EC1B  F02B         	call	_Uart_WriteConstString
 25572                           
 25573                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 25574  000656  0E0A               	movlw	10
 25575  000658  0101               	movlb	1	; () banked
 25576  00065A  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25577                           
 25578                           ; BSR set to: 1
 25579                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 25580  00065C  0E03               	movlw	3
 25581  00065E  0100               	movlb	0	; () banked
 25582  000660  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25583                           
 25584                           ; BSR set to: 0
 25585                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 25586  000662  0EF5               	movlw	low _ConnTimeout
 25587  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25588  000666  0E02               	movlw	high _ConnTimeout
 25589  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25590  00066A  0E20               	movlw	32
 25591  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25592  00066E  0E4E               	movlw	78
 25593  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25594  000672  0E00               	movlw	0
 25595  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25596  000676  0E00               	movlw	0
 25597  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25598  00067A  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25599  00067E  D192               	goto	l13419
 25600  000680                     
 25601                           ; BSR set to: 1
 25602                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 25603                           
 25604                           ; BSR set to: 1
 25605  000680  0ED5               	movlw	low STR_14
 25606  000682  0100               	movlb	0	; () banked
 25607  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25608  000686  0EFE               	movlw	high STR_14
 25609  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25610  00068A  0E01               	movlw	1
 25611  00068C  EC1B  F02B         	call	_Uart_WriteConstString
 25612                           
 25613                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 25614  000690  0E0A               	movlw	10
 25615  000692  0101               	movlb	1	; () banked
 25616  000694  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25617                           
 25618                           ; BSR set to: 1
 25619                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 25620  000696  0E04               	movlw	4
 25621  000698  0100               	movlb	0	; () banked
 25622  00069A  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25623                           
 25624                           ; BSR set to: 0
 25625                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 25626  00069C  0EF5               	movlw	low _ConnTimeout
 25627  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25628  0006A0  0E02               	movlw	high _ConnTimeout
 25629  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25630  0006A4  0E20               	movlw	32
 25631  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25632  0006A8  0E4E               	movlw	78
 25633  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25634  0006AC  0E00               	movlw	0
 25635  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25636  0006B0  0E00               	movlw	0
 25637  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25638  0006B4  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25639  0006B8  D175               	goto	l13419
 25640  0006BA                     
 25641                           ; BSR set to: 1
 25642                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 25643                           
 25644                           ; BSR set to: 1
 25645  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 25646  0006BC  0100               	movlb	0	; () banked
 25647  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25648  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 25649  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25650  0006C4  0E00               	movlw	0
 25651  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25652  0006C8  0EC8               	movlw	200
 25653  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25654  0006CC  EC32  F02C         	call	_ClearBuffer	;wreg free
 25655                           
 25656                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 25657  0006D0  0E13               	movlw	low STR_15
 25658  0006D2  0100               	movlb	0	; () banked
 25659  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 25660  0006D6  0EFF               	movlw	high STR_15
 25661  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25662  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 25663  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 25664  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 25665  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25666  0006E2  0E00               	movlw	0
 25667  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 25668  0006E6  0E13               	movlw	19
 25669  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 25670  0006EA  ECD4  F026         	call	_StringCopy	;wreg free
 25671                           
 25672                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 25673  0006EE  0E00               	movlw	0
 25674  0006F0  0101               	movlb	1	; () banked
 25675  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 25676  0006F4  D024               	goto	l1243
 25677  0006F6                     
 25678                           ; BSR set to: 1
 25679                           ;mdm_gsm_gprs_http.c: 332: {
 25680                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 25681                           
 25682                           ; BSR set to: 1
 25683  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25684  0006F8  0D01               	mullw	1
 25685  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 25686  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 25687  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 25688  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 25689  00070A  50F3               	movf	prodl,w,c
 25690  00070C  0100               	movlb	0	; () banked
 25691  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25692  000710  6ED9               	movwf	fsr2l,c
 25693  000712  50F4               	movf	prodh,w,c
 25694  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25695  000716  6EDA               	movwf	fsr2h,c
 25696  000718  0101               	movlb	1	; () banked
 25697  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25698  00071C  0100               	movlb	0	; () banked
 25699  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 25700  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 25701  000722  0E13               	movlw	19
 25702  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 25703  000726  0E00               	movlw	0
 25704  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 25705  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 25706  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 25707  00072E  6EE1               	movwf	fsr1l,c
 25708  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 25709  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 25710  000734  6EE2               	movwf	fsr1h,c
 25711  000736  CFDF FFE7          	movff	indf2,indf1
 25712                           
 25713                           ; BSR set to: 0
 25714  00073A  0101               	movlb	1	; () banked
 25715  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 25716  00073E                     l1243:
 25717                           
 25718                           ; BSR set to: 1
 25719                           
 25720                           ; BSR set to: 1
 25721  00073E  0100               	movlb	0	; () banked
 25722  000740  EE20 F002          	lfsr	2,2
 25723  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 25724  000746  26D9               	addwf	fsr2l,f,c
 25725  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 25726  00074A  22DA               	addwfc	fsr2h,f,c
 25727  00074C  50DE               	movf	postinc2,w,c
 25728  00074E  0101               	movlb	1	; () banked
 25729  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 25730  000752  A0D8               	btfss	status,0,c
 25731  000754  D7D0               	goto	l1244
 25732                           
 25733                           ; BSR set to: 1
 25734                           ;mdm_gsm_gprs_http.c: 334: }
 25735                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 25736                           
 25737                           ; BSR set to: 1
 25738  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25739  000758  0100               	movlb	0	; () banked
 25740  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 25741  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 25742  00075E  0E13               	movlw	19
 25743  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 25744  000762  0E00               	movlw	0
 25745  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 25746  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 25747  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25748  00076A  6ED9               	movwf	fsr2l,c
 25749  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 25750  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25751  000770  6EDA               	movwf	fsr2h,c
 25752  000772  0E22               	movlw	34
 25753  000774  6EDF               	movwf	indf2,c
 25754                           
 25755                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 25756  000776  0101               	movlb	1	; () banked
 25757  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25758  00077A  0100               	movlb	0	; () banked
 25759  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 25760  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 25761  000780  0E14               	movlw	20
 25762  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 25763  000784  0E00               	movlw	0
 25764  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 25765  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 25766  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25767  00078C  6ED9               	movwf	fsr2l,c
 25768  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 25769  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25770  000792  6EDA               	movwf	fsr2h,c
 25771  000794  0E0D               	movlw	13
 25772  000796  6EDF               	movwf	indf2,c
 25773                           
 25774                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 25775  000798  0101               	movlb	1	; () banked
 25776  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 25777  00079C  0100               	movlb	0	; () banked
 25778  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 25779  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 25780  0007A2  0E15               	movlw	21
 25781  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 25782  0007A6  0E00               	movlw	0
 25783  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 25784  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 25785  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 25786  0007AE  6ED9               	movwf	fsr2l,c
 25787  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 25788  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 25789  0007B4  6EDA               	movwf	fsr2h,c
 25790  0007B6  0E00               	movlw	0
 25791  0007B8  6EDF               	movwf	indf2,c
 25792                           
 25793                           ; BSR set to: 0
 25794                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 25795  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 25796  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 25797  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 25798  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 25799  0007C2  0E01               	movlw	1
 25800  0007C4  ECBB  F02B         	call	_Uart_WriteString
 25801                           
 25802                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 25803  0007C8  0E0A               	movlw	10
 25804  0007CA  0101               	movlb	1	; () banked
 25805  0007CC  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25806                           
 25807                           ; BSR set to: 1
 25808                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 25809  0007CE  0E05               	movlw	5
 25810  0007D0  0100               	movlb	0	; () banked
 25811  0007D2  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25812                           
 25813                           ; BSR set to: 0
 25814                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 25815  0007D4  0EF5               	movlw	low _ConnTimeout
 25816  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25817  0007D8  0E02               	movlw	high _ConnTimeout
 25818  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25819  0007DC  0E20               	movlw	32
 25820  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25821  0007E0  0E4E               	movlw	78
 25822  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25823  0007E4  0E00               	movlw	0
 25824  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25825  0007E8  0E00               	movlw	0
 25826  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25827  0007EC  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25828  0007F0  D0D9               	goto	l13419
 25829  0007F2                     
 25830                           ; BSR set to: 1
 25831                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 25832                           
 25833                           ; BSR set to: 1
 25834  0007F2  0E38               	movlw	low STR_16
 25835  0007F4  0100               	movlb	0	; () banked
 25836  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25837  0007F8  0EFF               	movlw	high STR_16
 25838  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25839  0007FC  0E01               	movlw	1
 25840  0007FE  EC1B  F02B         	call	_Uart_WriteConstString
 25841                           
 25842                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 25843  000802  0E0A               	movlw	10
 25844  000804  0101               	movlb	1	; () banked
 25845  000806  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25846                           
 25847                           ; BSR set to: 1
 25848                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 25849  000808  0E06               	movlw	6
 25850  00080A  0100               	movlb	0	; () banked
 25851  00080C  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25852                           
 25853                           ; BSR set to: 0
 25854                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 25855  00080E  0EF5               	movlw	low _ConnTimeout
 25856  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25857  000812  0E02               	movlw	high _ConnTimeout
 25858  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25859  000816  0E20               	movlw	32
 25860  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25861  00081A  0E4E               	movlw	78
 25862  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25863  00081E  0E00               	movlw	0
 25864  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25865  000822  0E00               	movlw	0
 25866  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25867  000826  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25868                           
 25869                           ;mdm_gsm_gprs_http.c: 358: break;
 25870  00082A  D145               	goto	l1238
 25871  00082C                     
 25872                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 25873  00082C  0E07               	movlw	7
 25874  00082E  0101               	movlb	1	; () banked
 25875  000830  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25876                           
 25877                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 25878  000832  0E09               	movlw	9
 25879  000834  0100               	movlb	0	; () banked
 25880  000836  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25881                           
 25882                           ; BSR set to: 0
 25883                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 25884  000838  0EF5               	movlw	low _ConnTimeout
 25885  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25886  00083C  0E02               	movlw	high _ConnTimeout
 25887  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25888  000840  0E20               	movlw	32
 25889  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25890  000844  0E4E               	movlw	78
 25891  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25892  000848  0E00               	movlw	0
 25893  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25894  00084C  0E00               	movlw	0
 25895  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25896  000850  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25897                           
 25898                           ;mdm_gsm_gprs_http.c: 371: break;
 25899  000854  D130               	goto	l1238
 25900  000856                     
 25901                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 25902  000856  0E8F               	movlw	low STR_17
 25903  000858  0100               	movlb	0	; () banked
 25904  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25905  00085C  0EFF               	movlw	high STR_17
 25906  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25907  000860  0E01               	movlw	1
 25908  000862  EC1B  F02B         	call	_Uart_WriteConstString
 25909                           
 25910                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 25911  000866  0E0D               	movlw	13
 25912  000868  0101               	movlb	1	; () banked
 25913  00086A  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25914                           
 25915                           ; BSR set to: 1
 25916                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 25917  00086C  0E09               	movlw	9
 25918  00086E  0100               	movlb	0	; () banked
 25919  000870  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25920                           
 25921                           ; BSR set to: 0
 25922                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 25923  000872  0EF5               	movlw	low _ConnTimeout
 25924  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25925  000876  0E02               	movlw	high _ConnTimeout
 25926  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25927  00087A  0E20               	movlw	32
 25928  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25929  00087E  0E4E               	movlw	78
 25930  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25931  000882  0E00               	movlw	0
 25932  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25933  000886  0E00               	movlw	0
 25934  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25935  00088A  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25936  00088E  D08A               	goto	l13419
 25937  000890                     
 25938                           ; BSR set to: 1
 25939                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 25940                           
 25941                           ; BSR set to: 1
 25942  000890  0E9C               	movlw	low STR_18
 25943  000892  0100               	movlb	0	; () banked
 25944  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25945  000896  0EFF               	movlw	high STR_18
 25946  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25947  00089A  0E01               	movlw	1
 25948  00089C  EC1B  F02B         	call	_Uart_WriteConstString
 25949                           
 25950                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 25951  0008A0  0E0A               	movlw	10
 25952  0008A2  0101               	movlb	1	; () banked
 25953  0008A4  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 25954                           
 25955                           ; BSR set to: 1
 25956                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 25957  0008A6  0E0E               	movlw	14
 25958  0008A8  0100               	movlb	0	; () banked
 25959  0008AA  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 25960                           
 25961                           ; BSR set to: 0
 25962                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 25963  0008AC  0EF5               	movlw	low _ConnTimeout
 25964  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25965  0008B0  0E02               	movlw	high _ConnTimeout
 25966  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25967  0008B4  0E20               	movlw	32
 25968  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25969  0008B8  0E4E               	movlw	78
 25970  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25971  0008BC  0E00               	movlw	0
 25972  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25973  0008C0  0E00               	movlw	0
 25974  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25975  0008C4  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 25976  0008C8  D06D               	goto	l13419
 25977  0008CA                     
 25978                           ; BSR set to: 1
 25979                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 25980                           
 25981                           ; BSR set to: 1
 25982  0008CA  0E3C               	movlw	low _NewStringReceived
 25983  0008CC  0100               	movlb	0	; () banked
 25984  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25985  0008D0  0E00               	movlw	high _NewStringReceived
 25986  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25987  0008D4  EC10  F02D         	call	_ReceiveEvt	;wreg free
 25988  0008D8  0900               	iorlw	0
 25989  0008DA  B4D8               	btfsc	status,2,c
 25990  0008DC  D018               	goto	l1251
 25991                           
 25992                           ;mdm_gsm_gprs_http.c: 400: {
 25993                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 25994  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 25995  0008E2  0A4F               	xorlw	79
 25996  0008E4  A4D8               	btfss	status,2,c
 25997  0008E6  D0E7               	goto	l1238
 25998  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25999  0008EC  0A4B               	xorlw	75
 26000  0008EE  A4D8               	btfss	status,2,c
 26001  0008F0  D0E2               	goto	l1238
 26002                           
 26003                           ;mdm_gsm_gprs_http.c: 403: {
 26004                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 26005  0008F2  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26006                           
 26007                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 26008  0008F6  0E58               	movlw	low _RxBuffer
 26009  0008F8  0100               	movlb	0	; () banked
 26010  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26011  0008FC  0E0C               	movlw	high _RxBuffer
 26012  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26013  000900  0E01               	movlw	1
 26014  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26015  000904  0E90               	movlw	144
 26016  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26017  000908  EC32  F02C         	call	_ClearBuffer	;wreg free
 26018                           
 26019                           ;mdm_gsm_gprs_http.c: 408: }
 26020                           ;mdm_gsm_gprs_http.c: 409: }
 26021  00090C  D0D4               	goto	l1238
 26022  00090E                     l1251:
 26023                           
 26024                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26025  00090E  0EF5               	movlw	low _ConnTimeout
 26026  000910  0100               	movlb	0	; () banked
 26027  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26028  000914  0E02               	movlw	high _ConnTimeout
 26029  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26030  000918  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26031  00091C                     L34:
 26032  00091C  06E8               	decf	wreg,f,c
 26033  00091E  A4D8               	btfss	status,2,c
 26034  000920  D0CA               	goto	l1238
 26035                           
 26036                           ;mdm_gsm_gprs_http.c: 411: {
 26037                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 26038  000922  0E0F               	movlw	15
 26039  000924                     L33:
 26040  000924  0101               	movlb	1	; () banked
 26041  000926  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26042                           
 26043                           ; BSR set to: 1
 26044                           ;mdm_gsm_gprs_http.c: 414: }
 26045                           ;mdm_gsm_gprs_http.c: 415: break;
 26046                           
 26047                           ; BSR set to: 1
 26048  000928  D0C6               	goto	l1238
 26049  00092A                     
 26050                           ; BSR set to: 1
 26051                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 26052                           
 26053                           ; BSR set to: 1
 26054  00092A  0E3C               	movlw	low _NewStringReceived
 26055  00092C  0100               	movlb	0	; () banked
 26056  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26057  000930  0E00               	movlw	high _NewStringReceived
 26058  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26059  000934  EC10  F02D         	call	_ReceiveEvt	;wreg free
 26060  000938  0900               	iorlw	0
 26061  00093A  B4D8               	btfsc	status,2,c
 26062  00093C  D018               	goto	l1256
 26063                           
 26064                           ;mdm_gsm_gprs_http.c: 420: {
 26065                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26066  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 26067  000942  0A2B               	xorlw	43
 26068  000944  A4D8               	btfss	status,2,c
 26069  000946  D0B7               	goto	l1238
 26070  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26071  00094C  0A48               	xorlw	72
 26072  00094E  A4D8               	btfss	status,2,c
 26073  000950  D0B2               	goto	l1238
 26074                           
 26075                           ;mdm_gsm_gprs_http.c: 423: {
 26076                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 26077  000952  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26078                           
 26079                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 26080  000956  0E58               	movlw	low _RxBuffer
 26081  000958  0100               	movlb	0	; () banked
 26082  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26083  00095C  0E0C               	movlw	high _RxBuffer
 26084  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26085  000960  0E01               	movlw	1
 26086  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26087  000964  0E90               	movlw	144
 26088  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26089  000968  EC32  F02C         	call	_ClearBuffer	;wreg free
 26090                           
 26091                           ;mdm_gsm_gprs_http.c: 428: }
 26092                           ;mdm_gsm_gprs_http.c: 429: }
 26093  00096C  D0A4               	goto	l1238
 26094  00096E                     l1256:
 26095                           
 26096                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26097  00096E  0EF5               	movlw	low _ConnTimeout
 26098  000970  0100               	movlb	0	; () banked
 26099  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26100  000974  0E02               	movlw	high _ConnTimeout
 26101  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26102  000978  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26103  00097C  D7CF               	goto	L34
 26104  00097E                     
 26105                           ; BSR set to: 1
 26106                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 26107                           
 26108                           ; BSR set to: 1
 26109  00097E  0E0C               	movlw	12
 26110  000980  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26111                           
 26112                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 26113  000982  0E05               	movlw	5
 26114  000984  0100               	movlb	0	; () banked
 26115  000986  6FCD               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 26116                           
 26117                           ; BSR set to: 0
 26118                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 26119  000988  0EDF               	movlw	low _ConnWait
 26120  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26121  00098C  0E03               	movlw	high _ConnWait
 26122  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26123  000990  0EE8               	movlw	232
 26124  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26125  000994  0E03               	movlw	3
 26126  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26127  000998  0E00               	movlw	0
 26128  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26129  00099C  0E00               	movlw	0
 26130  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26131  0009A0  EC34  F027         	call	_OsTmr_StartTimer	;wreg free
 26132  0009A4                     l13419:
 26133                           
 26134                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 26135  0009A4  0E01               	movlw	1
 26136  0009A6  0101               	movlb	1	; () banked
 26137  0009A8  D053               	goto	L36
 26138  0009AA                     
 26139                           ; BSR set to: 1
 26140                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 26141                           
 26142                           ; BSR set to: 1
 26143  0009AA  0EDF               	movlw	low _ConnWait
 26144  0009AC  0100               	movlb	0	; () banked
 26145  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26146  0009B0  0E03               	movlw	high _ConnWait
 26147  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26148  0009B4  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26149  0009B8  06E8               	decf	wreg,f,c
 26150  0009BA  A4D8               	btfss	status,2,c
 26151  0009BC  D07C               	goto	l1238
 26152                           
 26153                           ;mdm_gsm_gprs_http.c: 450: {
 26154                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 26155  0009BE  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26156                           
 26157                           ;mdm_gsm_gprs_http.c: 453: }
 26158                           ;mdm_gsm_gprs_http.c: 454: break;
 26159  0009C2  D079               	goto	l1238
 26160  0009C4                     
 26161                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 26162  0009C4  0E3C               	movlw	low _NewStringReceived
 26163  0009C6  0100               	movlb	0	; () banked
 26164  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26165  0009CA  0E00               	movlw	high _NewStringReceived
 26166  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26167  0009CE  EC10  F02D         	call	_ReceiveEvt	;wreg free
 26168  0009D2  0900               	iorlw	0
 26169  0009D4  B4D8               	btfsc	status,2,c
 26170  0009D6  D02D               	goto	l1264
 26171                           
 26172                           ;mdm_gsm_gprs_http.c: 459: {
 26173                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 26174  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 26175  0009DC  0A2B               	xorlw	43
 26176  0009DE  A4D8               	btfss	status,2,c
 26177  0009E0  D06A               	goto	l1238
 26178  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26179  0009E6  0A48               	xorlw	72
 26180  0009E8  A4D8               	btfss	status,2,c
 26181  0009EA  D065               	goto	l1238
 26182                           
 26183                           ;mdm_gsm_gprs_http.c: 462: {
 26184                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 26185  0009EC  C0CD  F1ED         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 26186                           
 26187                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 26188  0009F0  0E58               	movlw	low _RxBuffer
 26189  0009F2  0100               	movlb	0	; () banked
 26190  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26191  0009F6  0E0C               	movlw	high _RxBuffer
 26192  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26193  0009FA  EE20 F003          	lfsr	2,3
 26194  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 26195  000A00  26D9               	addwf	fsr2l,f,c
 26196  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 26197  000A04  22DA               	addwfc	fsr2h,f,c
 26198  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 26199  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 26200  000A0E  0E01               	movlw	1
 26201  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26202  000A12  0E90               	movlw	144
 26203  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 26204  000A16  ECD4  F026         	call	_StringCopy	;wreg free
 26205                           
 26206                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 26207  000A1A  0E58               	movlw	low _RxBuffer
 26208  000A1C  0100               	movlb	0	; () banked
 26209  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26210  000A20  0E0C               	movlw	high _RxBuffer
 26211  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26212  000A24  0E01               	movlw	1
 26213  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26214  000A28  0E90               	movlw	144
 26215  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26216  000A2C  EC32  F02C         	call	_ClearBuffer	;wreg free
 26217                           
 26218                           ;mdm_gsm_gprs_http.c: 469: }
 26219                           ;mdm_gsm_gprs_http.c: 470: }
 26220  000A30  D042               	goto	l1238
 26221  000A32                     l1264:
 26222                           
 26223                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26224  000A32  0EF5               	movlw	low _ConnTimeout
 26225  000A34  0100               	movlb	0	; () banked
 26226  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26227  000A38  0E02               	movlw	high _ConnTimeout
 26228  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26229  000A3C  EC7B  F023         	call	_OsTmr_GetTimerStatus	;wreg free
 26230  000A40  D76D               	goto	L34
 26231  000A42                     
 26232                           ; BSR set to: 1
 26233                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 26234                           
 26235                           ; BSR set to: 1
 26236  000A42  0E00               	movlw	0
 26237  000A44  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26238                           
 26239                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 26240  000A46  0E02               	movlw	2
 26241  000A48  D003               	goto	L36
 26242  000A4A                     
 26243                           ; BSR set to: 1
 26244                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 26245                           
 26246                           ; BSR set to: 1
 26247  000A4A  0E00               	movlw	0
 26248  000A4C  6FED               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 26249                           
 26250                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 26251  000A4E  0E03               	movlw	3
 26252  000A50                     L36:
 26253  000A50  6FEC               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 26254                           
 26255                           ; BSR set to: 1
 26256                           ;mdm_gsm_gprs_http.c: 494: }
 26257                           
 26258                           ; BSR set to: 1
 26259                           ;mdm_gsm_gprs_http.c: 493: break;
 26260                           
 26261                           ;mdm_gsm_gprs_http.c: 492: default:
 26262                           
 26263                           ;mdm_gsm_gprs_http.c: 490: break;
 26264  000A52  D031               	goto	l1238
 26265  000A54                     l1235:
 26266                           
 26267                           ; BSR set to: 1
 26268                           
 26269                           ; BSR set to: 1
 26270  000A54  51ED               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 26271                           
 26272                           ; Switch size 1, requested type "space"
 26273                           ; Number of cases is 16, Range of values is 0 to 15
 26274                           ; switch strategies available:
 26275                           ; Name         Instructions Cycles
 26276                           ; simple_byte           49    25 (average)
 26277                           ;	Chosen strategy is simple_byte
 26278  000A56  0A00               	xorlw	0	; case 0
 26279  000A58  B4D8               	btfsc	status,2,c
 26280  000A5A  D5CC               	goto	l1236
 26281  000A5C  0A01               	xorlw	1	; case 1
 26282  000A5E  B4D8               	btfsc	status,2,c
 26283  000A60  D5D5               	goto	l1239
 26284  000A62  0A03               	xorlw	3	; case 2
 26285  000A64  B4D8               	btfsc	status,2,c
 26286  000A66  D5EF               	goto	l1240
 26287  000A68  0A01               	xorlw	1	; case 3
 26288  000A6A  B4D8               	btfsc	status,2,c
 26289  000A6C  D609               	goto	l1241
 26290  000A6E  0A07               	xorlw	7	; case 4
 26291  000A70  B4D8               	btfsc	status,2,c
 26292  000A72  D623               	goto	l1242
 26293  000A74  0A01               	xorlw	1	; case 5
 26294  000A76  B4D8               	btfsc	status,2,c
 26295  000A78  D6BC               	goto	l1246
 26296  000A7A  0A03               	xorlw	3	; case 6
 26297  000A7C  B4D8               	btfsc	status,2,c
 26298  000A7E  D6D6               	goto	l1247
 26299  000A80  0A01               	xorlw	1	; case 7
 26300  000A82  B4D8               	btfsc	status,2,c
 26301  000A84  D752               	goto	l1255
 26302  000A86  0A0F               	xorlw	15	; case 8
 26303  000A88  B4D8               	btfsc	status,2,c
 26304  000A8A  D6E5               	goto	l1248
 26305  000A8C  0A01               	xorlw	1	; case 9
 26306  000A8E  B4D8               	btfsc	status,2,c
 26307  000A90  D6FF               	goto	l1249
 26308  000A92  0A03               	xorlw	3	; case 10
 26309  000A94  B4D8               	btfsc	status,2,c
 26310  000A96  D719               	goto	l1250
 26311  000A98  0A01               	xorlw	1	; case 11
 26312  000A9A  B4D8               	btfsc	status,2,c
 26313  000A9C  D770               	goto	l1260
 26314  000A9E  0A07               	xorlw	7	; case 12
 26315  000AA0  B4D8               	btfsc	status,2,c
 26316  000AA2  D783               	goto	l1261
 26317  000AA4  0A01               	xorlw	1	; case 13
 26318  000AA6  B4D8               	btfsc	status,2,c
 26319  000AA8  D78D               	goto	l1263
 26320  000AAA  0A03               	xorlw	3	; case 14
 26321  000AAC  B4D8               	btfsc	status,2,c
 26322  000AAE  D7C9               	goto	l1268
 26323  000AB0  0A01               	xorlw	1	; case 15
 26324  000AB2  B4D8               	btfsc	status,2,c
 26325  000AB4  D7CA               	goto	l1269
 26326  000AB6                     l1238:
 26327                           
 26328                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 26329                           
 26330                           ; BSR set to: 1
 26331  000AB6  0101               	movlb	1	; () banked
 26332  000AB8  51EC               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 26333  000ABA  0012               	return	
 26334  000ABC                     __end_of_HttpGetMethod:
 26335                           	opt stack 0
 26336                           tosu	equ	0xFFF
 26337                           tosh	equ	0xFFE
 26338                           tosl	equ	0xFFD
 26339                           pclath	equ	0xFFA
 26340                           tblptru	equ	0xFF8
 26341                           tblptrh	equ	0xFF7
 26342                           tblptrl	equ	0xFF6
 26343                           tablat	equ	0xFF5
 26344                           prodh	equ	0xFF4
 26345                           prodl	equ	0xFF3
 26346                           intcon	equ	0xFF2
 26347                           intcon2	equ	0xFF1
 26348                           intcon3	equ	0xFF0
 26349                           indf0	equ	0xFEF
 26350                           postinc0	equ	0xFEE
 26351                           plusw0	equ	0xFEB
 26352                           fsr0h	equ	0xFEA
 26353                           fsr0l	equ	0xFE9
 26354                           wreg	equ	0xFE8
 26355                           indf1	equ	0xFE7
 26356                           postinc1	equ	0xFE6
 26357                           postdec1	equ	0xFE5
 26358                           plusw1	equ	0xFE3
 26359                           fsr1h	equ	0xFE2
 26360                           fsr1l	equ	0xFE1
 26361                           indf2	equ	0xFDF
 26362                           postinc2	equ	0xFDE
 26363                           postdec2	equ	0xFDD
 26364                           plusw2	equ	0xFDB
 26365                           fsr2h	equ	0xFDA
 26366                           fsr2l	equ	0xFD9
 26367                           status	equ	0xFD8
 26368                           
 26369 ;; *************** function _Uart_WriteString *****************
 26370 ;; Defined at:
 26371 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26372 ;; Parameters:    Size  Location     Type
 26373 ;;  Module          1    wreg     unsigned char 
 26374 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 26375 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 26376 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 26377 ;; Auto vars:     Size  Location     Type
 26378 ;;  Module          1   34[BANK0 ] unsigned char 
 26379 ;; Return value:  Size  Location     Type
 26380 ;;                  1    wreg      void 
 26381 ;; Registers used:
 26382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26383 ;; Tracked objects:
 26384 ;;		On entry : 0/0
 26385 ;;		On exit  : 0/0
 26386 ;;		Unchanged: 0/0
 26387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26391 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26392 ;;Total ram usage:        3 bytes
 26393 ;; Hardware stack levels used:    1
 26394 ;; Hardware stack levels required when called:   12
 26395 ;; This function calls:
 26396 ;;		_UartTxBufferStatus
 26397 ;;		_UartWriteByte
 26398 ;; This function is called by:
 26399 ;;		_InitGprsNetwork
 26400 ;;		_HttpGetMethod
 26401 ;;		_Mdm_PinUnlock
 26402 ;;		_Mdm_SetSmsFormat
 26403 ;;		_Mdm_MakePhoneCall
 26404 ;; This function uses a non-reentrant model
 26405 ;;
 26406                           
 26407                           	psect	text115
 26408  005776                     __ptext115:
 26409                           	opt stack 0
 26410  005776                     _Uart_WriteString:
 26411                           	opt stack 14
 26412                           
 26413                           ; BSR set to: 1
 26414                           ;incstack = 0
 26415                           ;Uart_WriteString@Module stored from wreg
 26416  005776  0100               	movlb	0	; () banked
 26417  005778  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 26418                           
 26419                           ;uart_drv.c: 521: while (*StringToWrite)
 26420  00577A  D014               	goto	u11360
 26421  00577C                     
 26422                           ;uart_drv.c: 522: {
 26423                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 26424  00577C  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 26425  005780  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 26426  005784  50DF               	movf	indf2,w,c
 26427  005786  0100               	movlb	0	; () banked
 26428  005788  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 26429  00578A  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 26430  00578C  EC28  F02E         	call	_UartWriteByte
 26431                           
 26432                           ;uart_drv.c: 526: StringToWrite++;
 26433  005790  0100               	movlb	0	; () banked
 26434  005792  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 26435  005794  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 26436  005796                     
 26437                           ; BSR set to: 0
 26438                           
 26439                           ; BSR set to: 0
 26440  005796  0100               	movlb	0	; () banked
 26441  005798  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 26442  00579A  EC91  F029         	call	_UartTxBufferStatus
 26443  00579E  06E8               	decf	wreg,f,c
 26444  0057A0  B4D8               	btfsc	status,2,c
 26445  0057A2  D7F9               	goto	l709
 26446  0057A4                     u11360:
 26447  0057A4  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 26448  0057A8  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 26449  0057AC  50DF               	movf	indf2,w,c
 26450  0057AE  B4D8               	btfsc	status,2,c
 26451  0057B0  0012               	return	
 26452  0057B2  D7E4               	goto	l707
 26453  0057B4                     __end_of_Uart_WriteString:
 26454                           	opt stack 0
 26455                           tosu	equ	0xFFF
 26456                           tosh	equ	0xFFE
 26457                           tosl	equ	0xFFD
 26458                           pclath	equ	0xFFA
 26459                           tblptru	equ	0xFF8
 26460                           tblptrh	equ	0xFF7
 26461                           tblptrl	equ	0xFF6
 26462                           tablat	equ	0xFF5
 26463                           prodh	equ	0xFF4
 26464                           prodl	equ	0xFF3
 26465                           intcon	equ	0xFF2
 26466                           intcon2	equ	0xFF1
 26467                           intcon3	equ	0xFF0
 26468                           indf0	equ	0xFEF
 26469                           postinc0	equ	0xFEE
 26470                           plusw0	equ	0xFEB
 26471                           fsr0h	equ	0xFEA
 26472                           fsr0l	equ	0xFE9
 26473                           wreg	equ	0xFE8
 26474                           indf1	equ	0xFE7
 26475                           postinc1	equ	0xFE6
 26476                           postdec1	equ	0xFE5
 26477                           plusw1	equ	0xFE3
 26478                           fsr1h	equ	0xFE2
 26479                           fsr1l	equ	0xFE1
 26480                           indf2	equ	0xFDF
 26481                           postinc2	equ	0xFDE
 26482                           postdec2	equ	0xFDD
 26483                           plusw2	equ	0xFDB
 26484                           fsr2h	equ	0xFDA
 26485                           fsr2l	equ	0xFD9
 26486                           status	equ	0xFD8
 26487                           
 26488 ;; *************** function _Uart_WriteConstString *****************
 26489 ;; Defined at:
 26490 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26491 ;; Parameters:    Size  Location     Type
 26492 ;;  Module          1    wreg     unsigned char 
 26493 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 26494 ;;		 -> STR_29(5), STR_20(14), STR_19(14), STR_18(13), 
 26495 ;;		 -> STR_17(13), STR_16(17), STR_14(21), STR_13(14), 
 26496 ;;		 -> STR_12(13), STR_11(14), STR_10(14), STR_8(31), 
 26497 ;;		 -> STR_7(5), STR_6(5), STR_4(11), STR_3(7), 
 26498 ;;		 -> STR_2(14), STR_1(5), 
 26499 ;; Auto vars:     Size  Location     Type
 26500 ;;  Module          1   34[BANK0 ] unsigned char 
 26501 ;; Return value:  Size  Location     Type
 26502 ;;                  1    wreg      void 
 26503 ;; Registers used:
 26504 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26505 ;; Tracked objects:
 26506 ;;		On entry : 0/0
 26507 ;;		On exit  : 0/0
 26508 ;;		Unchanged: 0/0
 26509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26513 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26514 ;;Total ram usage:        3 bytes
 26515 ;; Hardware stack levels used:    1
 26516 ;; Hardware stack levels required when called:   12
 26517 ;; This function calls:
 26518 ;;		_UartTxBufferStatus
 26519 ;;		_UartWriteByte
 26520 ;; This function is called by:
 26521 ;;		_CheckModem
 26522 ;;		_ConfigureModem
 26523 ;;		_GetSmsSm
 26524 ;;		_InitGprsNetwork
 26525 ;;		_HttpGetMethod
 26526 ;;		_initGprsModem
 26527 ;;		_Mdm_HangPhoneCall
 26528 ;;		_Mdm_GetPhoneCall
 26529 ;;		_MdmHttp_SetSsl
 26530 ;; This function uses a non-reentrant model
 26531 ;;
 26532                           
 26533                           	psect	text116
 26534  005636                     __ptext116:
 26535                           	opt stack 0
 26536  005636                     _Uart_WriteConstString:
 26537                           	opt stack 14
 26538                           
 26539                           ;incstack = 0
 26540                           ;Uart_WriteConstString@Module stored from wreg
 26541  005636  0100               	movlb	0	; () banked
 26542  005638  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 26543                           
 26544                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 26545  00563A  D015               	goto	u11340
 26546  00563C                     
 26547                           ;uart_drv.c: 500: {
 26548                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 26549  00563C  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 26550  005640  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 26551  005644                     	if	0	;tblptru may be non-zero
 26552  005644                     	endif
 26553  005644                     	if	0	;tblptru may be non-zero
 26554  005644                     	endif
 26555  005644  0008               	tblrd		*
 26556  005646  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 26557  00564A  0100               	movlb	0	; () banked
 26558  00564C  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 26559  00564E  EC28  F02E         	call	_UartWriteByte
 26560                           
 26561                           ;uart_drv.c: 504: ConstStringToWrite++;
 26562  005652  0100               	movlb	0	; () banked
 26563  005654  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 26564  005656  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 26565  005658                     
 26566                           ; BSR set to: 0
 26567                           
 26568                           ; BSR set to: 0
 26569  005658  0100               	movlb	0	; () banked
 26570  00565A  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 26571  00565C  EC91  F029         	call	_UartTxBufferStatus
 26572  005660  06E8               	decf	wreg,f,c
 26573  005662  B4D8               	btfsc	status,2,c
 26574  005664  D7F9               	goto	l700
 26575  005666                     u11340:
 26576  005666  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 26577  00566A  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 26578  00566E                     	if	0	;tblptru may be non-zero
 26579  00566E                     	endif
 26580  00566E                     	if	0	;tblptru may be non-zero
 26581  00566E                     	endif
 26582  00566E  0008               	tblrd		*
 26583  005670  50F5               	movf	tablat,w,c
 26584  005672  0900               	iorlw	0
 26585  005674  B4D8               	btfsc	status,2,c
 26586  005676  0012               	return	
 26587  005678  D7E1               	goto	l698
 26588  00567A                     __end_of_Uart_WriteConstString:
 26589                           	opt stack 0
 26590                           tosu	equ	0xFFF
 26591                           tosh	equ	0xFFE
 26592                           tosl	equ	0xFFD
 26593                           pclath	equ	0xFFA
 26594                           tblptru	equ	0xFF8
 26595                           tblptrh	equ	0xFF7
 26596                           tblptrl	equ	0xFF6
 26597                           tablat	equ	0xFF5
 26598                           prodh	equ	0xFF4
 26599                           prodl	equ	0xFF3
 26600                           intcon	equ	0xFF2
 26601                           intcon2	equ	0xFF1
 26602                           intcon3	equ	0xFF0
 26603                           indf0	equ	0xFEF
 26604                           postinc0	equ	0xFEE
 26605                           plusw0	equ	0xFEB
 26606                           fsr0h	equ	0xFEA
 26607                           fsr0l	equ	0xFE9
 26608                           wreg	equ	0xFE8
 26609                           indf1	equ	0xFE7
 26610                           postinc1	equ	0xFE6
 26611                           postdec1	equ	0xFE5
 26612                           plusw1	equ	0xFE3
 26613                           fsr1h	equ	0xFE2
 26614                           fsr1l	equ	0xFE1
 26615                           indf2	equ	0xFDF
 26616                           postinc2	equ	0xFDE
 26617                           postdec2	equ	0xFDD
 26618                           plusw2	equ	0xFDB
 26619                           fsr2h	equ	0xFDA
 26620                           fsr2l	equ	0xFD9
 26621                           status	equ	0xFD8
 26622                           
 26623 ;; *************** function _UartWriteByte *****************
 26624 ;; Defined at:
 26625 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26626 ;; Parameters:    Size  Location     Type
 26627 ;;  Module          1    wreg     unsigned char 
 26628 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 26629 ;; Auto vars:     Size  Location     Type
 26630 ;;  Module          1   30[BANK0 ] unsigned char 
 26631 ;; Return value:  Size  Location     Type
 26632 ;;                  1    wreg      void 
 26633 ;; Registers used:
 26634 ;;		wreg, status,2, status,0
 26635 ;; Tracked objects:
 26636 ;;		On entry : 0/0
 26637 ;;		On exit  : 0/0
 26638 ;;		Unchanged: 0/0
 26639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26640 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26644 ;;Total ram usage:        2 bytes
 26645 ;; Hardware stack levels used:    1
 26646 ;; Hardware stack levels required when called:   11
 26647 ;; This function calls:
 26648 ;;		Nothing
 26649 ;; This function is called by:
 26650 ;;		_Uart_WriteConstString
 26651 ;;		_Uart_WriteString
 26652 ;;		_Uart_WriteStringLen
 26653 ;; This function uses a non-reentrant model
 26654 ;;
 26655                           
 26656                           	psect	text117
 26657  005C50                     __ptext117:
 26658                           	opt stack 0
 26659  005C50                     _UartWriteByte:
 26660                           	opt stack 14
 26661                           
 26662                           ;incstack = 0
 26663                           ;UartWriteByte@Module stored from wreg
 26664  005C50  0100               	movlb	0	; () banked
 26665  005C52  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 26666                           
 26667                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 26668  005C54  0100               	movlb	0	; () banked
 26669  005C56  057E               	decf	UartWriteByte@Module& (0+255),w,b
 26670  005C58  A4D8               	btfss	status,2,c
 26671  005C5A  D003               	goto	l639
 26672                           
 26673                           ; BSR set to: 0
 26674                           ;uart_drv.c: 176: {
 26675                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 26676  005C5C  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 26677                           
 26678                           ;uart_drv.c: 179: }
 26679  005C60  0012               	return	
 26680  005C62                     l639:
 26681                           
 26682                           ; BSR set to: 0
 26683                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 26684                           
 26685                           ; BSR set to: 0
 26686  005C62  0E02               	movlw	2
 26687  005C64  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 26688  005C66  A4D8               	btfss	status,2,c
 26689  005C68  0012               	return	
 26690                           
 26691                           ; BSR set to: 0
 26692                           ;uart_drv.c: 181: {
 26693                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 26694  005C6A  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 26695                           
 26696                           ; BSR set to: 0
 26697  005C6E  0012               	return	
 26698  005C70                     __end_of_UartWriteByte:
 26699                           	opt stack 0
 26700                           tosu	equ	0xFFF
 26701                           tosh	equ	0xFFE
 26702                           tosl	equ	0xFFD
 26703                           pclath	equ	0xFFA
 26704                           tblptru	equ	0xFF8
 26705                           tblptrh	equ	0xFF7
 26706                           tblptrl	equ	0xFF6
 26707                           tablat	equ	0xFF5
 26708                           prodh	equ	0xFF4
 26709                           prodl	equ	0xFF3
 26710                           intcon	equ	0xFF2
 26711                           intcon2	equ	0xFF1
 26712                           intcon3	equ	0xFF0
 26713                           indf0	equ	0xFEF
 26714                           postinc0	equ	0xFEE
 26715                           plusw0	equ	0xFEB
 26716                           fsr0h	equ	0xFEA
 26717                           fsr0l	equ	0xFE9
 26718                           wreg	equ	0xFE8
 26719                           indf1	equ	0xFE7
 26720                           postinc1	equ	0xFE6
 26721                           postdec1	equ	0xFE5
 26722                           plusw1	equ	0xFE3
 26723                           fsr1h	equ	0xFE2
 26724                           fsr1l	equ	0xFE1
 26725                           indf2	equ	0xFDF
 26726                           postinc2	equ	0xFDE
 26727                           postdec2	equ	0xFDD
 26728                           plusw2	equ	0xFDB
 26729                           fsr2h	equ	0xFDA
 26730                           fsr2l	equ	0xFD9
 26731                           status	equ	0xFD8
 26732                           
 26733 ;; *************** function _UartTxBufferStatus *****************
 26734 ;; Defined at:
 26735 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26736 ;; Parameters:    Size  Location     Type
 26737 ;;  Module          1    wreg     unsigned char 
 26738 ;; Auto vars:     Size  Location     Type
 26739 ;;  Module          1   30[BANK0 ] unsigned char 
 26740 ;;  TxBufferStat    1   31[BANK0 ] enum E9017
 26741 ;; Return value:  Size  Location     Type
 26742 ;;                  1    wreg      enum E9017
 26743 ;; Registers used:
 26744 ;;		wreg, status,2, status,0
 26745 ;; Tracked objects:
 26746 ;;		On entry : 0/0
 26747 ;;		On exit  : 0/0
 26748 ;;		Unchanged: 0/0
 26749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26753 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26754 ;;Total ram usage:        3 bytes
 26755 ;; Hardware stack levels used:    1
 26756 ;; Hardware stack levels required when called:   11
 26757 ;; This function calls:
 26758 ;;		Nothing
 26759 ;; This function is called by:
 26760 ;;		_Uart_WriteConstString
 26761 ;;		_Uart_WriteString
 26762 ;;		_Uart_WriteStringLen
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text118
 26767  005322                     __ptext118:
 26768                           	opt stack 0
 26769  005322                     _UartTxBufferStatus:
 26770                           	opt stack 14
 26771                           
 26772                           ; BSR set to: 0
 26773                           ;incstack = 0
 26774                           ;UartTxBufferStatus@Module stored from wreg
 26775  005322  0100               	movlb	0	; () banked
 26776  005324  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 26777                           
 26778                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 26779  005326  0E00               	movlw	0
 26780  005328  0100               	movlb	0	; () banked
 26781  00532A  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 26782                           
 26783                           ; BSR set to: 0
 26784                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 26785  00532C  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 26786  00532E  A4D8               	btfss	status,2,c
 26787  005330  D00B               	goto	l651
 26788                           
 26789                           ; BSR set to: 0
 26790                           ;uart_drv.c: 228: {
 26791                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 26792  005332  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 26793  005336  90D8               	bcf	status,0,c
 26794  005338  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 26795  00533A  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 26796  00533C  D002               	goto	l652
 26797  00533E                     u10710:
 26798                           
 26799                           ; BSR set to: 0
 26800                           ;uart_drv.c: 231: {
 26801                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 26802  00533E  0E01               	movlw	1
 26803  005340  D014               	goto	L39
 26804  005342                     l652:
 26805                           
 26806                           ; BSR set to: 0
 26807                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 26808                           
 26809                           ; BSR set to: 0
 26810  005342  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 26811  005346  D00C               	goto	L68
 26812  005348                     l651:
 26813                           
 26814                           ; BSR set to: 0
 26815                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 26816                           
 26817                           ; BSR set to: 0
 26818  005348  0E02               	movlw	2
 26819  00534A  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 26820  00534C  A4D8               	btfss	status,2,c
 26821  00534E  D00E               	goto	l660
 26822                           
 26823                           ; BSR set to: 0
 26824                           ;uart_drv.c: 244: {
 26825                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 26826  005350  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 26827  005354  90D8               	bcf	status,0,c
 26828  005356  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 26829  005358  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 26830  00535A  D7F1               	goto	u10710
 26831                           
 26832                           ; BSR set to: 0
 26833                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 26834                           
 26835                           ; BSR set to: 0
 26836                           
 26837                           ;uart_drv.c: 249: }
 26838                           
 26839                           ; BSR set to: 0
 26840                           ;uart_drv.c: 247: {
 26841                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 26842  00535C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 26843  005360                     L68:
 26844  005360  90D8               	bcf	status,0,c
 26845  005362  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 26846  005364  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 26847  005366  D002               	goto	l660
 26848                           
 26849                           ; BSR set to: 0
 26850                           ;uart_drv.c: 251: {
 26851                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 26852  005368  0E02               	movlw	2
 26853  00536A                     L39:
 26854  00536A  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 26855  00536C                     l660:
 26856                           
 26857                           ; BSR set to: 0
 26858                           ;uart_drv.c: 257: }
 26859                           ;uart_drv.c: 258: }
 26860                           ;uart_drv.c: 260: return TxBufferStatus;
 26861                           
 26862                           ; BSR set to: 0
 26863                           
 26864                           ; BSR set to: 0
 26865                           
 26866                           ; BSR set to: 0
 26867                           
 26868                           ; BSR set to: 0
 26869                           
 26870                           ;uart_drv.c: 254: else
 26871                           ;uart_drv.c: 255: {
 26872                           
 26873                           ; BSR set to: 0
 26874  00536C  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 26875  00536E  0012               	return	
 26876  005370                     __end_of_UartTxBufferStatus:
 26877                           	opt stack 0
 26878                           tosu	equ	0xFFF
 26879                           tosh	equ	0xFFE
 26880                           tosl	equ	0xFFD
 26881                           pclath	equ	0xFFA
 26882                           tblptru	equ	0xFF8
 26883                           tblptrh	equ	0xFF7
 26884                           tblptrl	equ	0xFF6
 26885                           tablat	equ	0xFF5
 26886                           prodh	equ	0xFF4
 26887                           prodl	equ	0xFF3
 26888                           intcon	equ	0xFF2
 26889                           intcon2	equ	0xFF1
 26890                           intcon3	equ	0xFF0
 26891                           indf0	equ	0xFEF
 26892                           postinc0	equ	0xFEE
 26893                           plusw0	equ	0xFEB
 26894                           fsr0h	equ	0xFEA
 26895                           fsr0l	equ	0xFE9
 26896                           wreg	equ	0xFE8
 26897                           indf1	equ	0xFE7
 26898                           postinc1	equ	0xFE6
 26899                           postdec1	equ	0xFE5
 26900                           plusw1	equ	0xFE3
 26901                           fsr1h	equ	0xFE2
 26902                           fsr1l	equ	0xFE1
 26903                           indf2	equ	0xFDF
 26904                           postinc2	equ	0xFDE
 26905                           postdec2	equ	0xFDD
 26906                           plusw2	equ	0xFDB
 26907                           fsr2h	equ	0xFDA
 26908                           fsr2l	equ	0xFD9
 26909                           status	equ	0xFD8
 26910                           
 26911 ;; *************** function _StringCopy *****************
 26912 ;; Defined at:
 26913 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 26914 ;; Parameters:    Size  Location     Type
 26915 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 26916 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 26917 ;;		 -> STR_5(10), Mdm_SmsRx(132), RxBuffer(400), 
 26918 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 26919 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), 
 26920 ;;		 -> SendSmsSm@UartMessage(50), Mdm_SmsRx(132), 
 26921 ;;  Len             2   33[BANK0 ] unsigned short 
 26922 ;; Auto vars:     Size  Location     Type
 26923 ;;  Index           2   37[BANK0 ] unsigned short 
 26924 ;; Return value:  Size  Location     Type
 26925 ;;                  1    wreg      void 
 26926 ;; Registers used:
 26927 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26928 ;; Tracked objects:
 26929 ;;		On entry : 0/0
 26930 ;;		On exit  : 0/0
 26931 ;;		Unchanged: 0/0
 26932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26933 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26935 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26936 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26937 ;;Total ram usage:       10 bytes
 26938 ;; Hardware stack levels used:    1
 26939 ;; Hardware stack levels required when called:   11
 26940 ;; This function calls:
 26941 ;;		Nothing
 26942 ;; This function is called by:
 26943 ;;		_GetSmsSm
 26944 ;;		_SendSmsSm
 26945 ;;		_InitGprsNetwork
 26946 ;;		_HttpGetMethod
 26947 ;;		_Mdm_GetSmsData
 26948 ;;		_Mdm_SendSmsData
 26949 ;; This function uses a non-reentrant model
 26950 ;;
 26951                           
 26952                           	psect	text119
 26953  004DA8                     __ptext119:
 26954                           	opt stack 0
 26955  004DA8                     _StringCopy:
 26956                           	opt stack 15
 26957                           
 26958                           ;sf.c: 106: UINT16 Index = 0;
 26959                           
 26960                           ; BSR set to: 0
 26961                           ;incstack = 0
 26962  004DA8  0E00               	movlw	0
 26963  004DAA  0100               	movlb	0	; () banked
 26964  004DAC  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 26965  004DAE  0E00               	movlw	0
 26966  004DB0  6F85               	movwf	StringCopy@Index& (0+255),b
 26967                           
 26968                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 26969  004DB2  0E00               	movlw	0
 26970  004DB4  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 26971  004DB6  0E00               	movlw	0
 26972  004DB8  6F85               	movwf	StringCopy@Index& (0+255),b
 26973  004DBA  D020               	goto	l2204
 26974  004DBC                     
 26975                           ; BSR set to: 0
 26976                           ;sf.c: 110: {
 26977                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 26978                           
 26979                           ; BSR set to: 0
 26980  004DBC  5185               	movf	StringCopy@Index& (0+255),w,b
 26981  004DBE  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 26982  004DC0  6F83               	movwf	??_StringCopy& (0+255),b
 26983  004DC2  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 26984  004DC4  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 26985  004DC6  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 26986  004DC8  C083  FFF6         	movff	??_StringCopy,tblptrl
 26987  004DCC  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 26988  004DD0  6AF8               	clrf	tblptru,c
 26989  004DD2  5185               	movf	StringCopy@Index& (0+255),w,b
 26990  004DD4  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 26991  004DD6  6ED9               	movwf	fsr2l,c
 26992  004DD8  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 26993  004DDA  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 26994  004DDC  6EDA               	movwf	fsr2h,c
 26995  004DDE  0E0E               	movlw	(high __ramtop+-1)
 26996  004DE0  64F7               	cpfsgt	tblptrh,c
 26997  004DE2  D003               	bra	u11407
 26998  004DE4  0008               	tblrd		*
 26999  004DE6  50F5               	movf	tablat,w,c
 27000  004DE8  D005               	bra	u11400
 27001  004DEA                     u11407:
 27002  004DEA  CFF6 FFE9          	movff	tblptrl,fsr0l
 27003  004DEE  CFF7 FFEA          	movff	tblptrh,fsr0h
 27004  004DF2  50EF               	movf	indf0,w,c
 27005  004DF4                     u11400:
 27006  004DF4  6EDF               	movwf	indf2,c
 27007  004DF6  0100               	movlb	0	; () banked
 27008  004DF8  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 27009  004DFA  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 27010  004DFC                     l2204:
 27011                           
 27012                           ; BSR set to: 0
 27013                           
 27014                           ; BSR set to: 0
 27015  004DFC  5181               	movf	StringCopy@Len& (0+255),w,b
 27016  004DFE  5D85               	subwf	StringCopy@Index& (0+255),w,b
 27017  004E00  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 27018  004E02  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 27019  004E04  B0D8               	btfsc	status,0,c
 27020  004E06  0012               	return	
 27021  004E08  D7D9               	goto	l2205
 27022  004E0A                     __end_of_StringCopy:
 27023                           	opt stack 0
 27024                           tosu	equ	0xFFF
 27025                           tosh	equ	0xFFE
 27026                           tosl	equ	0xFFD
 27027                           pclath	equ	0xFFA
 27028                           tblptru	equ	0xFF8
 27029                           tblptrh	equ	0xFF7
 27030                           tblptrl	equ	0xFF6
 27031                           tablat	equ	0xFF5
 27032                           prodh	equ	0xFF4
 27033                           prodl	equ	0xFF3
 27034                           intcon	equ	0xFF2
 27035                           intcon2	equ	0xFF1
 27036                           intcon3	equ	0xFF0
 27037                           indf0	equ	0xFEF
 27038                           postinc0	equ	0xFEE
 27039                           plusw0	equ	0xFEB
 27040                           fsr0h	equ	0xFEA
 27041                           fsr0l	equ	0xFE9
 27042                           wreg	equ	0xFE8
 27043                           indf1	equ	0xFE7
 27044                           postinc1	equ	0xFE6
 27045                           postdec1	equ	0xFE5
 27046                           plusw1	equ	0xFE3
 27047                           fsr1h	equ	0xFE2
 27048                           fsr1l	equ	0xFE1
 27049                           indf2	equ	0xFDF
 27050                           postinc2	equ	0xFDE
 27051                           postdec2	equ	0xFDD
 27052                           plusw2	equ	0xFDB
 27053                           fsr2h	equ	0xFDA
 27054                           fsr2l	equ	0xFD9
 27055                           status	equ	0xFD8
 27056                           
 27057 ;; *************** function _OsTmr_StartTimer *****************
 27058 ;; Defined at:
 27059 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27060 ;; Parameters:    Size  Location     Type
 27061 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 27062 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27063 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27064 ;;  Timeout         4   35[BANK0 ] unsigned long 
 27065 ;; Auto vars:     Size  Location     Type
 27066 ;;		None
 27067 ;; Return value:  Size  Location     Type
 27068 ;;                  1    wreg      void 
 27069 ;; Registers used:
 27070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27071 ;; Tracked objects:
 27072 ;;		On entry : 0/0
 27073 ;;		On exit  : 0/0
 27074 ;;		Unchanged: 0/0
 27075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27076 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27079 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27080 ;;Total ram usage:        6 bytes
 27081 ;; Hardware stack levels used:    1
 27082 ;; Hardware stack levels required when called:   12
 27083 ;; This function calls:
 27084 ;;		_GetOsTickCounter
 27085 ;; This function is called by:
 27086 ;;		_OsTmr_Wait
 27087 ;;		_CheckModem
 27088 ;;		_SendSmsSm
 27089 ;;		_InitGprsNetwork
 27090 ;;		_HttpGetMethod
 27091 ;;		_Term_MainSm
 27092 ;;		_I2cSlv_QueryI2cData
 27093 ;; This function uses a non-reentrant model
 27094 ;;
 27095                           
 27096                           	psect	text120
 27097  004E68                     __ptext120:
 27098                           	opt stack 0
 27099  004E68                     _OsTmr_StartTimer:
 27100                           	opt stack 12
 27101                           
 27102                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 27103                           
 27104                           ; BSR set to: 0
 27105                           ;incstack = 0
 27106  004E68  0100               	movlb	0	; () banked
 27107  004E6A  EE20 F001          	lfsr	2,1
 27108  004E6E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27109  004E70  26D9               	addwf	fsr2l,f,c
 27110  004E72  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27111  004E74  22DA               	addwfc	fsr2h,f,c
 27112  004E76  0E00               	movlw	0
 27113  004E78  6EDF               	movwf	indf2,c
 27114                           
 27115                           ; BSR set to: 0
 27116                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 27117  004E7A  ECEF  F02E         	call	_GetOsTickCounter	;wreg free
 27118  004E7E  0100               	movlb	0	; () banked
 27119  004E80  EE20 F002          	lfsr	2,2
 27120  004E84  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27121  004E86  26D9               	addwf	fsr2l,f,c
 27122  004E88  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27123  004E8A  22DA               	addwfc	fsr2h,f,c
 27124  004E8C  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 27125  004E90  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 27126  004E94  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 27127  004E98  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 27128                           
 27129                           ; BSR set to: 0
 27130                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 27131  004E9C  EE20 F006          	lfsr	2,6
 27132  004EA0  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 27133  004EA2  26D9               	addwf	fsr2l,f,c
 27134  004EA4  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 27135  004EA6  22DA               	addwfc	fsr2h,f,c
 27136  004EA8  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 27137  004EAC  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 27138  004EB0  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 27139  004EB4  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 27140                           
 27141                           ; BSR set to: 0
 27142                           ;os_timers.c: 127: Timer->Enabled = 1u;
 27143  004EB8  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 27144  004EBC  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 27145  004EC0  0E01               	movlw	1
 27146  004EC2  6EDF               	movwf	indf2,c
 27147                           
 27148                           ; BSR set to: 0
 27149  004EC4  0012               	return		;funcret
 27150  004EC6                     __end_of_OsTmr_StartTimer:
 27151                           	opt stack 0
 27152                           tosu	equ	0xFFF
 27153                           tosh	equ	0xFFE
 27154                           tosl	equ	0xFFD
 27155                           pclath	equ	0xFFA
 27156                           tblptru	equ	0xFF8
 27157                           tblptrh	equ	0xFF7
 27158                           tblptrl	equ	0xFF6
 27159                           tablat	equ	0xFF5
 27160                           prodh	equ	0xFF4
 27161                           prodl	equ	0xFF3
 27162                           intcon	equ	0xFF2
 27163                           intcon2	equ	0xFF1
 27164                           intcon3	equ	0xFF0
 27165                           indf0	equ	0xFEF
 27166                           postinc0	equ	0xFEE
 27167                           plusw0	equ	0xFEB
 27168                           fsr0h	equ	0xFEA
 27169                           fsr0l	equ	0xFE9
 27170                           wreg	equ	0xFE8
 27171                           indf1	equ	0xFE7
 27172                           postinc1	equ	0xFE6
 27173                           postdec1	equ	0xFE5
 27174                           plusw1	equ	0xFE3
 27175                           fsr1h	equ	0xFE2
 27176                           fsr1l	equ	0xFE1
 27177                           indf2	equ	0xFDF
 27178                           postinc2	equ	0xFDE
 27179                           postdec2	equ	0xFDD
 27180                           plusw2	equ	0xFDB
 27181                           fsr2h	equ	0xFDA
 27182                           fsr2l	equ	0xFD9
 27183                           status	equ	0xFD8
 27184                           
 27185 ;; *************** function _OsTmr_GetTimerStatus *****************
 27186 ;; Defined at:
 27187 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27188 ;; Parameters:    Size  Location     Type
 27189 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 27190 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 27191 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 27192 ;; Auto vars:     Size  Location     Type
 27193 ;;		None
 27194 ;; Return value:  Size  Location     Type
 27195 ;;                  1    wreg      enum E7740
 27196 ;; Registers used:
 27197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27198 ;; Tracked objects:
 27199 ;;		On entry : 0/0
 27200 ;;		On exit  : 0/0
 27201 ;;		Unchanged: 0/0
 27202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27205 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27206 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27207 ;;Total ram usage:        6 bytes
 27208 ;; Hardware stack levels used:    1
 27209 ;; Hardware stack levels required when called:   13
 27210 ;; This function calls:
 27211 ;;		_GetElapsedTime
 27212 ;; This function is called by:
 27213 ;;		_OsTmr_Wait
 27214 ;;		_CheckModem
 27215 ;;		_SendSmsSm
 27216 ;;		_InitGprsNetwork
 27217 ;;		_HttpGetMethod
 27218 ;;		_Term_MainSm
 27219 ;;		_I2cSlv_QueryI2cData
 27220 ;; This function uses a non-reentrant model
 27221 ;;
 27222                           
 27223                           	psect	text121
 27224  0046F6                     __ptext121:
 27225                           	opt stack 0
 27226  0046F6                     _OsTmr_GetTimerStatus:
 27227                           	opt stack 11
 27228                           
 27229                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 27230                           
 27231                           ; BSR set to: 0
 27232                           ;incstack = 0
 27233  0046F6  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27234  0046FA  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27235  0046FE  04DE               	decf	postinc2,w,c
 27236  004700  A4D8               	btfss	status,2,c
 27237  004702  D030               	goto	l864
 27238                           
 27239                           ;os_timers.c: 197: {
 27240                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 27241  004704  0100               	movlb	0	; () banked
 27242  004706  EE20 F006          	lfsr	2,6
 27243  00470A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27244  00470C  26D9               	addwf	fsr2l,f,c
 27245  00470E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27246  004710  22DA               	addwfc	fsr2h,f,c
 27247  004712  EE10 F002          	lfsr	1,2
 27248  004716  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27249  004718  26E1               	addwf	fsr1l,f,c
 27250  00471A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27251  00471C  22E2               	addwfc	fsr1h,f,c
 27252  00471E  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 27253  004722  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 27254  004726  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 27255  00472A  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 27256  00472E  EC27  F01D         	call	_GetElapsedTime	;wreg free
 27257  004732  50DE               	movf	postinc2,w,c
 27258  004734  0100               	movlb	0	; () banked
 27259  004736  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 27260  004738  50DE               	movf	postinc2,w,c
 27261  00473A  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 27262  00473C  50DE               	movf	postinc2,w,c
 27263  00473E  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 27264  004740  50DE               	movf	postinc2,w,c
 27265  004742  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 27266  004744  A0D8               	btfss	status,0,c
 27267  004746  D017               	goto	l867
 27268                           
 27269                           ; BSR set to: 0
 27270                           ;os_timers.c: 200: {
 27271                           ;os_timers.c: 202: Timer->Enabled = 0u;
 27272  004748  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 27273  00474C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 27274  004750  0E00               	movlw	0
 27275  004752  6EDF               	movwf	indf2,c
 27276                           
 27277                           ; BSR set to: 0
 27278                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 27279  004754  EE20 F001          	lfsr	2,1
 27280  004758  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27281  00475A  26D9               	addwf	fsr2l,f,c
 27282  00475C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27283  00475E  22DA               	addwfc	fsr2h,f,c
 27284  004760  0E01               	movlw	1
 27285  004762  D008               	goto	L69
 27286  004764                     l864:
 27287                           
 27288                           ;os_timers.c: 211: else
 27289                           ;os_timers.c: 212: {
 27290                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 27291                           
 27292                           ; BSR set to: 0
 27293  004764  0100               	movlb	0	; () banked
 27294  004766  EE20 F001          	lfsr	2,1
 27295  00476A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27296  00476C  26D9               	addwf	fsr2l,f,c
 27297  00476E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27298  004770  22DA               	addwfc	fsr2h,f,c
 27299  004772  0E02               	movlw	2
 27300  004774                     L69:
 27301  004774  6EDF               	movwf	indf2,c
 27302  004776                     l867:
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;os_timers.c: 215: }
 27306                           ;os_timers.c: 218: return Timer->Status;
 27307  004776  EE20 F001          	lfsr	2,1
 27308  00477A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 27309  00477C  26D9               	addwf	fsr2l,f,c
 27310  00477E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 27311  004780  22DA               	addwfc	fsr2h,f,c
 27312  004782  50DF               	movf	indf2,w,c
 27313  004784  0012               	return	
 27314  004786                     __end_of_OsTmr_GetTimerStatus:
 27315                           	opt stack 0
 27316                           tosu	equ	0xFFF
 27317                           tosh	equ	0xFFE
 27318                           tosl	equ	0xFFD
 27319                           pclath	equ	0xFFA
 27320                           tblptru	equ	0xFF8
 27321                           tblptrh	equ	0xFF7
 27322                           tblptrl	equ	0xFF6
 27323                           tablat	equ	0xFF5
 27324                           prodh	equ	0xFF4
 27325                           prodl	equ	0xFF3
 27326                           intcon	equ	0xFF2
 27327                           intcon2	equ	0xFF1
 27328                           intcon3	equ	0xFF0
 27329                           indf0	equ	0xFEF
 27330                           postinc0	equ	0xFEE
 27331                           plusw0	equ	0xFEB
 27332                           fsr0h	equ	0xFEA
 27333                           fsr0l	equ	0xFE9
 27334                           wreg	equ	0xFE8
 27335                           indf1	equ	0xFE7
 27336                           postinc1	equ	0xFE6
 27337                           postdec1	equ	0xFE5
 27338                           plusw1	equ	0xFE3
 27339                           fsr1h	equ	0xFE2
 27340                           fsr1l	equ	0xFE1
 27341                           indf2	equ	0xFDF
 27342                           postinc2	equ	0xFDE
 27343                           postdec2	equ	0xFDD
 27344                           plusw2	equ	0xFDB
 27345                           fsr2h	equ	0xFDA
 27346                           fsr2l	equ	0xFD9
 27347                           status	equ	0xFD8
 27348                           
 27349 ;; *************** function _GetElapsedTime *****************
 27350 ;; Defined at:
 27351 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27352 ;; Parameters:    Size  Location     Type
 27353 ;;  StartTime       4   33[BANK0 ] unsigned long 
 27354 ;; Auto vars:     Size  Location     Type
 27355 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 27356 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 27357 ;; Return value:  Size  Location     Type
 27358 ;;                  4   33[BANK0 ] unsigned long 
 27359 ;; Registers used:
 27360 ;;		wreg, status,2, status,0, cstack
 27361 ;; Tracked objects:
 27362 ;;		On entry : 0/0
 27363 ;;		On exit  : 0/0
 27364 ;;		Unchanged: 0/0
 27365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27367 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27368 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27369 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27370 ;;Total ram usage:       20 bytes
 27371 ;; Hardware stack levels used:    1
 27372 ;; Hardware stack levels required when called:   12
 27373 ;; This function calls:
 27374 ;;		_GetOsTickCounter
 27375 ;; This function is called by:
 27376 ;;		_OsTmr_GetTimerStatus
 27377 ;;		_OsTmr_GetRemainingTime
 27378 ;; This function uses a non-reentrant model
 27379 ;;
 27380                           
 27381                           	psect	text122
 27382  003A4E                     __ptext122:
 27383                           	opt stack 0
 27384  003A4E                     _GetElapsedTime:
 27385                           	opt stack 11
 27386                           
 27387                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 27388                           ;os_timers.c: 87: UINT32 TimeValue;
 27389                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;incstack = 0
 27393  003A4E  ECEF  F02E         	call	_GetOsTickCounter	;wreg free
 27394  003A52  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 27395  003A56  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 27396  003A5A  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 27397  003A5E  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 27398                           
 27399                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 27400  003A62  0100               	movlb	0	; () banked
 27401  003A64  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 27402  003A66  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27403  003A68  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 27404  003A6A  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27405  003A6C  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 27406  003A6E  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27407  003A70  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 27408  003A72  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27409  003A74  A0D8               	btfss	status,0,c
 27410  003A76  D01D               	goto	l844
 27411                           
 27412                           ; BSR set to: 0
 27413                           ;os_timers.c: 94: {
 27414                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 27415  003A78  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 27416  003A7C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 27417  003A80  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 27418  003A84  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 27419  003A88  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 27420  003A8A  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 27421  003A8C  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 27422  003A8E  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 27423  003A90  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 27424  003A92  0E00               	movlw	0
 27425  003A94  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 27426  003A96  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 27427  003A98  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 27428  003A9A  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27429  003A9C  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 27430  003A9E  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 27431  003AA0  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27432  003AA2  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 27433  003AA4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 27434  003AA6  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27435  003AA8  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 27436  003AAA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 27437  003AAC  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27438  003AAE  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 27439  003AB0  D028               	goto	L40
 27440  003AB2                     l844:
 27441                           
 27442                           ; BSR set to: 0
 27443                           ;os_timers.c: 97: else
 27444                           ;os_timers.c: 98: {
 27445                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 27446                           
 27447                           ; BSR set to: 0
 27448  003AB2  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 27449  003AB6  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 27450  003ABA  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 27451  003ABE  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 27452  003AC2  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 27453  003AC4  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 27454  003AC6  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 27455  003AC8  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 27456  003ACA  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 27457  003ACC  0E00               	movlw	0
 27458  003ACE  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 27459  003AD0  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 27460  003AD2  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 27461  003AD4  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 27462  003AD6  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 27463  003AD8  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 27464  003ADA  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 27465  003ADC  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 27466  003ADE  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 27467  003AE0  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 27468  003AE2  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 27469  003AE4  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 27470  003AE6  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 27471  003AE8  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 27472  003AEA  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 27473  003AEC  0EFF               	movlw	255
 27474  003AEE  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 27475  003AF0  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 27476  003AF2  0EFF               	movlw	255
 27477  003AF4  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 27478  003AF6  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 27479  003AF8  0EFF               	movlw	255
 27480  003AFA  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 27481  003AFC  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 27482  003AFE  0EFF               	movlw	255
 27483  003B00  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 27484  003B02                     L40:
 27485  003B02  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 27486                           
 27487                           ; BSR set to: 0
 27488                           ;os_timers.c: 100: }
 27489                           ;os_timers.c: 102: return TimeValue;
 27490                           
 27491                           ; BSR set to: 0
 27492  003B04  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 27493  003B08  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 27494  003B0C  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 27495  003B10  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 27496  003B14  0012               	return	
 27497  003B16                     __end_of_GetElapsedTime:
 27498                           	opt stack 0
 27499                           tosu	equ	0xFFF
 27500                           tosh	equ	0xFFE
 27501                           tosl	equ	0xFFD
 27502                           pclath	equ	0xFFA
 27503                           tblptru	equ	0xFF8
 27504                           tblptrh	equ	0xFF7
 27505                           tblptrl	equ	0xFF6
 27506                           tablat	equ	0xFF5
 27507                           prodh	equ	0xFF4
 27508                           prodl	equ	0xFF3
 27509                           intcon	equ	0xFF2
 27510                           intcon2	equ	0xFF1
 27511                           intcon3	equ	0xFF0
 27512                           indf0	equ	0xFEF
 27513                           postinc0	equ	0xFEE
 27514                           plusw0	equ	0xFEB
 27515                           fsr0h	equ	0xFEA
 27516                           fsr0l	equ	0xFE9
 27517                           wreg	equ	0xFE8
 27518                           indf1	equ	0xFE7
 27519                           postinc1	equ	0xFE6
 27520                           postdec1	equ	0xFE5
 27521                           plusw1	equ	0xFE3
 27522                           fsr1h	equ	0xFE2
 27523                           fsr1l	equ	0xFE1
 27524                           indf2	equ	0xFDF
 27525                           postinc2	equ	0xFDE
 27526                           postdec2	equ	0xFDD
 27527                           plusw2	equ	0xFDB
 27528                           fsr2h	equ	0xFDA
 27529                           fsr2l	equ	0xFD9
 27530                           status	equ	0xFD8
 27531                           
 27532 ;; *************** function _GetOsTickCounter *****************
 27533 ;; Defined at:
 27534 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 27535 ;; Parameters:    Size  Location     Type
 27536 ;;		None
 27537 ;; Auto vars:     Size  Location     Type
 27538 ;;		None
 27539 ;; Return value:  Size  Location     Type
 27540 ;;                  4   29[BANK0 ] unsigned long 
 27541 ;; Registers used:
 27542 ;;		None
 27543 ;; Tracked objects:
 27544 ;;		On entry : 0/0
 27545 ;;		On exit  : 0/0
 27546 ;;		Unchanged: 0/0
 27547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27552 ;;Total ram usage:        4 bytes
 27553 ;; Hardware stack levels used:    1
 27554 ;; Hardware stack levels required when called:   11
 27555 ;; This function calls:
 27556 ;;		Nothing
 27557 ;; This function is called by:
 27558 ;;		_GetElapsedTime
 27559 ;;		_OsTmr_StartTimer
 27560 ;;		_OsTmr_GetElapsedTime
 27561 ;; This function uses a non-reentrant model
 27562 ;;
 27563                           
 27564                           	psect	text123
 27565  005DDE                     __ptext123:
 27566                           	opt stack 0
 27567  005DDE                     _GetOsTickCounter:
 27568                           	opt stack 12
 27569                           
 27570                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 27571                           
 27572                           ; BSR set to: 0
 27573                           ;incstack = 0
 27574  005DDE  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 27575  005DE2  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 27576  005DE6  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 27577  005DEA  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 27578  005DEE  0012               	return		;funcret
 27579  005DF0                     __end_of_GetOsTickCounter:
 27580                           	opt stack 0
 27581                           tosu	equ	0xFFF
 27582                           tosh	equ	0xFFE
 27583                           tosl	equ	0xFFD
 27584                           pclath	equ	0xFFA
 27585                           tblptru	equ	0xFF8
 27586                           tblptrh	equ	0xFF7
 27587                           tblptrl	equ	0xFF6
 27588                           tablat	equ	0xFF5
 27589                           prodh	equ	0xFF4
 27590                           prodl	equ	0xFF3
 27591                           intcon	equ	0xFF2
 27592                           intcon2	equ	0xFF1
 27593                           intcon3	equ	0xFF0
 27594                           indf0	equ	0xFEF
 27595                           postinc0	equ	0xFEE
 27596                           plusw0	equ	0xFEB
 27597                           fsr0h	equ	0xFEA
 27598                           fsr0l	equ	0xFE9
 27599                           wreg	equ	0xFE8
 27600                           indf1	equ	0xFE7
 27601                           postinc1	equ	0xFE6
 27602                           postdec1	equ	0xFE5
 27603                           plusw1	equ	0xFE3
 27604                           fsr1h	equ	0xFE2
 27605                           fsr1l	equ	0xFE1
 27606                           indf2	equ	0xFDF
 27607                           postinc2	equ	0xFDE
 27608                           postdec2	equ	0xFDD
 27609                           plusw2	equ	0xFDB
 27610                           fsr2h	equ	0xFDA
 27611                           fsr2l	equ	0xFD9
 27612                           status	equ	0xFD8
 27613                           
 27614 ;; *************** function _ClearBuffer *****************
 27615 ;; Defined at:
 27616 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27617 ;; Parameters:    Size  Location     Type
 27618 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 27619 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), RxBuffer(400),
      + 
 27620 ;;  Len             2   31[BANK0 ] unsigned short 
 27621 ;; Auto vars:     Size  Location     Type
 27622 ;;  Index           2   33[BANK0 ] unsigned short 
 27623 ;; Return value:  Size  Location     Type
 27624 ;;                  1    wreg      void 
 27625 ;; Registers used:
 27626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27627 ;; Tracked objects:
 27628 ;;		On entry : 0/0
 27629 ;;		On exit  : 0/0
 27630 ;;		Unchanged: 0/0
 27631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27633 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27635 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27636 ;;Total ram usage:        6 bytes
 27637 ;; Hardware stack levels used:    1
 27638 ;; Hardware stack levels required when called:   11
 27639 ;; This function calls:
 27640 ;;		Nothing
 27641 ;; This function is called by:
 27642 ;;		_InitGprsNetwork
 27643 ;;		_HttpGetMethod
 27644 ;;		_GsmGprsTerminal
 27645 ;; This function uses a non-reentrant model
 27646 ;;
 27647                           
 27648                           	psect	text124
 27649  005864                     __ptext124:
 27650                           	opt stack 0
 27651  005864                     _ClearBuffer:
 27652                           	opt stack 15
 27653                           
 27654                           ;sf.c: 126: UINT16 Index = 0;
 27655                           
 27656                           ;incstack = 0
 27657  005864  0E00               	movlw	0
 27658  005866  0100               	movlb	0	; () banked
 27659  005868  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 27660  00586A  0E00               	movlw	0
 27661  00586C  6F81               	movwf	ClearBuffer@Index& (0+255),b
 27662                           
 27663                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 27664  00586E  0E00               	movlw	0
 27665  005870  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 27666  005872  0E00               	movlw	0
 27667  005874  6F81               	movwf	ClearBuffer@Index& (0+255),b
 27668  005876  D00A               	goto	l2210
 27669  005878                     
 27670                           ; BSR set to: 0
 27671                           ;sf.c: 130: {
 27672                           ;sf.c: 131: *(Buffer + Index) = 0;
 27673                           
 27674                           ; BSR set to: 0
 27675  005878  5181               	movf	ClearBuffer@Index& (0+255),w,b
 27676  00587A  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 27677  00587C  6ED9               	movwf	fsr2l,c
 27678  00587E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 27679  005880  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 27680  005882  6EDA               	movwf	fsr2h,c
 27681  005884  0E00               	movlw	0
 27682  005886  6EDF               	movwf	indf2,c
 27683                           
 27684                           ; BSR set to: 0
 27685  005888  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 27686  00588A  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 27687  00588C                     l2210:
 27688                           
 27689                           ; BSR set to: 0
 27690                           
 27691                           ; BSR set to: 0
 27692  00588C  5181               	movf	ClearBuffer@Index& (0+255),w,b
 27693  00588E  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 27694  005890  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 27695  005892  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 27696  005894  A0D8               	btfss	status,0,c
 27697  005896  0012               	return	
 27698  005898  D7EF               	goto	l2211
 27699  00589A                     __end_of_ClearBuffer:
 27700                           	opt stack 0
 27701                           tosu	equ	0xFFF
 27702                           tosh	equ	0xFFE
 27703                           tosl	equ	0xFFD
 27704                           pclath	equ	0xFFA
 27705                           tblptru	equ	0xFF8
 27706                           tblptrh	equ	0xFF7
 27707                           tblptrl	equ	0xFF6
 27708                           tablat	equ	0xFF5
 27709                           prodh	equ	0xFF4
 27710                           prodl	equ	0xFF3
 27711                           intcon	equ	0xFF2
 27712                           intcon2	equ	0xFF1
 27713                           intcon3	equ	0xFF0
 27714                           indf0	equ	0xFEF
 27715                           postinc0	equ	0xFEE
 27716                           plusw0	equ	0xFEB
 27717                           fsr0h	equ	0xFEA
 27718                           fsr0l	equ	0xFE9
 27719                           wreg	equ	0xFE8
 27720                           indf1	equ	0xFE7
 27721                           postinc1	equ	0xFE6
 27722                           postdec1	equ	0xFE5
 27723                           plusw1	equ	0xFE3
 27724                           fsr1h	equ	0xFE2
 27725                           fsr1l	equ	0xFE1
 27726                           indf2	equ	0xFDF
 27727                           postinc2	equ	0xFDE
 27728                           postdec2	equ	0xFDD
 27729                           plusw2	equ	0xFDB
 27730                           fsr2h	equ	0xFDA
 27731                           fsr2l	equ	0xFD9
 27732                           status	equ	0xFD8
 27733                           
 27734 ;; *************** function _LedStateMachine *****************
 27735 ;; Defined at:
 27736 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 27737 ;; Parameters:    Size  Location     Type
 27738 ;;  Led             1    wreg     unsigned char 
 27739 ;;  LedSts          2   47[BANK0 ] PTR enum E8934
 27740 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 27741 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 27742 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 27743 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 27744 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 27745 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 27746 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 27747 ;; Auto vars:     Size  Location     Type
 27748 ;;  Led             1   57[BANK0 ] unsigned char 
 27749 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 27750 ;; Return value:  Size  Location     Type
 27751 ;;                  1    wreg      unsigned char 
 27752 ;; Registers used:
 27753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27754 ;; Tracked objects:
 27755 ;;		On entry : 0/0
 27756 ;;		On exit  : 0/0
 27757 ;;		Unchanged: 0/0
 27758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27759 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27762 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27763 ;;Total ram usage:       11 bytes
 27764 ;; Hardware stack levels used:    1
 27765 ;; Hardware stack levels required when called:   13
 27766 ;; This function calls:
 27767 ;;		_LedBlinkStateMachine
 27768 ;;		_LedPulseStateMachine
 27769 ;;		_Led_SetLedStatus
 27770 ;; This function is called by:
 27771 ;;		_Led_MainTask
 27772 ;; This function uses a non-reentrant model
 27773 ;;
 27774                           
 27775                           	psect	text125
 27776  004182                     __ptext125:
 27777                           	opt stack 0
 27778  004182                     _LedStateMachine:
 27779                           	opt stack 14
 27780                           
 27781                           ; BSR set to: 0
 27782                           ;incstack = 0
 27783                           ;LedStateMachine@Led stored from wreg
 27784  004182  0100               	movlb	0	; () banked
 27785  004184  6F99               	movwf	LedStateMachine@Led& (0+255),b
 27786                           
 27787                           ;led.c: 238: UINT8 LedOutSts = 0u;
 27788  004186  0E00               	movlw	0
 27789  004188  0100               	movlb	0	; () banked
 27790  00418A  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27791                           
 27792                           ;led.c: 241: switch (*LedSts)
 27793  00418C  D037               	goto	l2069
 27794  00418E                     
 27795                           ; BSR set to: 0
 27796                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 27797                           
 27798                           ; BSR set to: 0
 27799  00418E  0E00               	movlw	0
 27800  004190  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27801                           
 27802                           ; BSR set to: 0
 27803                           ;led.c: 246: *LedOut = ((UINT8)(0));
 27804  004192  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 27805  004196  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 27806  00419A  0E00               	movlw	0
 27807  00419C  D007               	goto	L41
 27808  00419E                     
 27809                           ; BSR set to: 0
 27810                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 27811                           
 27812                           ; BSR set to: 0
 27813  00419E  0E01               	movlw	1
 27814  0041A0  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27815                           
 27816                           ; BSR set to: 0
 27817                           ;led.c: 252: *LedOut = ((UINT8)(1));
 27818  0041A2  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 27819  0041A6  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 27820  0041AA  0E01               	movlw	1
 27821  0041AC                     L41:
 27822  0041AC  6EDF               	movwf	indf2,c
 27823                           
 27824                           ;led.c: 253: break;
 27825  0041AE  D03A               	goto	l2071
 27826  0041B0                     
 27827                           ; BSR set to: 0
 27828                           ;led.c: 257: if (*LedOut == 1)
 27829                           
 27830                           ; BSR set to: 0
 27831  0041B0  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 27832  0041B4  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 27833  0041B8  04DE               	decf	postinc2,w,c
 27834  0041BA  A4D8               	btfss	status,2,c
 27835  0041BC  D006               	goto	l2074
 27836                           
 27837                           ; BSR set to: 0
 27838                           ;led.c: 258: {
 27839                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 27840  0041BE  0E00               	movlw	0
 27841  0041C0  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 27842  0041C2  5199               	movf	LedStateMachine@Led& (0+255),w,b
 27843  0041C4  ECE1  F02C         	call	_Led_SetLedStatus
 27844                           
 27845                           ;led.c: 261: }
 27846  0041C8  D02D               	goto	l2071
 27847  0041CA                     l2074:
 27848                           
 27849                           ;led.c: 262: else
 27850                           ;led.c: 263: {
 27851                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 27852  0041CA  0E01               	movlw	1
 27853  0041CC  0100               	movlb	0	; () banked
 27854  0041CE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 27855  0041D0  5199               	movf	LedStateMachine@Led& (0+255),w,b
 27856  0041D2  ECE1  F02C         	call	_Led_SetLedStatus
 27857                           
 27858                           ;led.c: 266: }
 27859                           ;led.c: 267: break;
 27860  0041D6  D026               	goto	l2071
 27861  0041D8                     
 27862                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 27863  0041D8  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 27864  0041DC  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 27865  0041E0  ECFE  F011         	call	_LedBlinkStateMachine	;wreg free
 27866  0041E4  D008               	goto	L42
 27867  0041E6                     
 27868                           ; BSR set to: 0
 27869                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 27870                           
 27871                           ; BSR set to: 0
 27872  0041E6  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 27873  0041EA  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 27874  0041EE  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 27875  0041F2  EC22  F018         	call	_LedPulseStateMachine	;wreg free
 27876  0041F6                     L42:
 27877  0041F6  0100               	movlb	0	; () banked
 27878  0041F8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 27879                           
 27880                           ; BSR set to: 0
 27881                           ;led.c: 281: }
 27882                           
 27883                           ; BSR set to: 0
 27884                           ;led.c: 280: break;
 27885                           
 27886                           ;led.c: 279: default:
 27887                           
 27888                           ;led.c: 277: break;
 27889  0041FA  D014               	goto	l2071
 27890  0041FC                     l2069:
 27891                           
 27892                           ; BSR set to: 0
 27893                           
 27894                           ; BSR set to: 0
 27895  0041FC  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 27896  004200  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 27897  004204  50DF               	movf	indf2,w,c
 27898                           
 27899                           ; Switch size 1, requested type "space"
 27900                           ; Number of cases is 5, Range of values is 0 to 4
 27901                           ; switch strategies available:
 27902                           ; Name         Instructions Cycles
 27903                           ; simple_byte           16     9 (average)
 27904                           ;	Chosen strategy is simple_byte
 27905  004206  0A00               	xorlw	0	; case 0
 27906  004208  B4D8               	btfsc	status,2,c
 27907  00420A  D7C1               	goto	l2070
 27908  00420C  0A01               	xorlw	1	; case 1
 27909  00420E  B4D8               	btfsc	status,2,c
 27910  004210  D7C6               	goto	l2072
 27911  004212  0A03               	xorlw	3	; case 2
 27912  004214  B4D8               	btfsc	status,2,c
 27913  004216  D7CC               	goto	l2073
 27914  004218  0A01               	xorlw	1	; case 3
 27915  00421A  B4D8               	btfsc	status,2,c
 27916  00421C  D7DD               	goto	l2076
 27917  00421E  0A07               	xorlw	7	; case 4
 27918  004220  B4D8               	btfsc	status,2,c
 27919  004222  D7E1               	goto	l2077
 27920  004224                     l2071:
 27921                           
 27922                           ;led.c: 283: return LedOutSts;
 27923                           
 27924                           ; BSR set to: 0
 27925  004224  0100               	movlb	0	; () banked
 27926  004226  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 27927  004228  0012               	return	
 27928  00422A                     __end_of_LedStateMachine:
 27929                           	opt stack 0
 27930                           tosu	equ	0xFFF
 27931                           tosh	equ	0xFFE
 27932                           tosl	equ	0xFFD
 27933                           pclath	equ	0xFFA
 27934                           tblptru	equ	0xFF8
 27935                           tblptrh	equ	0xFF7
 27936                           tblptrl	equ	0xFF6
 27937                           tablat	equ	0xFF5
 27938                           prodh	equ	0xFF4
 27939                           prodl	equ	0xFF3
 27940                           intcon	equ	0xFF2
 27941                           intcon2	equ	0xFF1
 27942                           intcon3	equ	0xFF0
 27943                           indf0	equ	0xFEF
 27944                           postinc0	equ	0xFEE
 27945                           plusw0	equ	0xFEB
 27946                           fsr0h	equ	0xFEA
 27947                           fsr0l	equ	0xFE9
 27948                           wreg	equ	0xFE8
 27949                           indf1	equ	0xFE7
 27950                           postinc1	equ	0xFE6
 27951                           postdec1	equ	0xFE5
 27952                           plusw1	equ	0xFE3
 27953                           fsr1h	equ	0xFE2
 27954                           fsr1l	equ	0xFE1
 27955                           indf2	equ	0xFDF
 27956                           postinc2	equ	0xFDE
 27957                           postdec2	equ	0xFDD
 27958                           plusw2	equ	0xFDB
 27959                           fsr2h	equ	0xFDA
 27960                           fsr2l	equ	0xFD9
 27961                           status	equ	0xFD8
 27962                           
 27963 ;; *************** function _LedPulseStateMachine *****************
 27964 ;; Defined at:
 27965 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 27966 ;; Parameters:    Size  Location     Type
 27967 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 27968 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 27969 ;;  Led             1   44[BANK0 ] unsigned char 
 27970 ;; Auto vars:     Size  Location     Type
 27971 ;;		None
 27972 ;; Return value:  Size  Location     Type
 27973 ;;                  1    wreg      unsigned char 
 27974 ;; Registers used:
 27975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27976 ;; Tracked objects:
 27977 ;;		On entry : 0/0
 27978 ;;		On exit  : 0/0
 27979 ;;		Unchanged: 0/0
 27980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27981 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27983 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27984 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27985 ;;Total ram usage:        5 bytes
 27986 ;; Hardware stack levels used:    1
 27987 ;; Hardware stack levels required when called:   12
 27988 ;; This function calls:
 27989 ;;		_Led_SetLedStatus
 27990 ;;		___lwdiv
 27991 ;; This function is called by:
 27992 ;;		_LedStateMachine
 27993 ;; This function uses a non-reentrant model
 27994 ;;
 27995                           
 27996                           	psect	text126
 27997  003044                     __ptext126:
 27998                           	opt stack 0
 27999  003044                     _LedPulseStateMachine:
 28000                           	opt stack 14
 28001                           
 28002                           ;led.c: 185: switch (LedPulse->LedPulseState)
 28003                           
 28004                           ; BSR set to: 0
 28005                           ;incstack = 0
 28006  003044  D05C               	goto	l2059
 28007  003046                     
 28008                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 28009  003046  0100               	movlb	0	; () banked
 28010  003048  EE20 F001          	lfsr	2,1
 28011  00304C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28012  00304E  26D9               	addwf	fsr2l,f,c
 28013  003050  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28014  003052  22DA               	addwfc	fsr2h,f,c
 28015  003054  0E01               	movlw	1
 28016  003056  6EDF               	movwf	indf2,c
 28017                           
 28018                           ; BSR set to: 0
 28019                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 28020  003058  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28021  00305C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28022  003060  0E01               	movlw	1
 28023  003062  D036               	goto	L43
 28024  003064                     
 28025                           ;led.c: 196: LedPulse->LedPulseCounter++;
 28026                           
 28027                           ; BSR set to: 0
 28028  003064  0100               	movlb	0	; () banked
 28029  003066  EE20 F002          	lfsr	2,2
 28030  00306A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28031  00306C  26D9               	addwf	fsr2l,f,c
 28032  00306E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28033  003070  22DA               	addwfc	fsr2h,f,c
 28034  003072  2ADE               	incf	postinc2,f,c
 28035  003074  0E00               	movlw	0
 28036  003076  22DD               	addwfc	postdec2,f,c
 28037                           
 28038                           ; BSR set to: 0
 28039                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 28040  003078  EE20 F004          	lfsr	2,4
 28041  00307C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28042  00307E  26D9               	addwf	fsr2l,f,c
 28043  003080  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28044  003082  22DA               	addwfc	fsr2h,f,c
 28045  003084  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28046  003088  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28047  00308C  0E00               	movlw	0
 28048  00308E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28049  003090  0E32               	movlw	50
 28050  003092  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28051  003094  EC16  F029         	call	___lwdiv	;wreg free
 28052  003098  0100               	movlb	0	; () banked
 28053  00309A  EE20 F002          	lfsr	2,2
 28054  00309E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28055  0030A0  26D9               	addwf	fsr2l,f,c
 28056  0030A2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28057  0030A4  22DA               	addwfc	fsr2h,f,c
 28058  0030A6  5183               	movf	?___lwdiv& (0+255),w,b
 28059  0030A8  5CDE               	subwf	postinc2,w,c
 28060  0030AA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28061  0030AC  58DE               	subwfb	postinc2,w,c
 28062  0030AE  A0D8               	btfss	status,0,c
 28063  0030B0  D034               	goto	l2061
 28064                           
 28065                           ; BSR set to: 0
 28066                           ;led.c: 199: {
 28067                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 28068  0030B2  EE20 F002          	lfsr	2,2
 28069  0030B6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28070  0030B8  26D9               	addwf	fsr2l,f,c
 28071  0030BA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28072  0030BC  22DA               	addwfc	fsr2h,f,c
 28073  0030BE  0E00               	movlw	0
 28074  0030C0  6EDE               	movwf	postinc2,c
 28075  0030C2  0E00               	movlw	0
 28076  0030C4  6EDD               	movwf	postdec2,c
 28077                           
 28078                           ; BSR set to: 0
 28079                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 28080  0030C6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28081  0030CA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28082  0030CE  0E02               	movlw	2
 28083  0030D0                     L43:
 28084  0030D0  6EDF               	movwf	indf2,c
 28085                           
 28086                           ; BSR set to: 0
 28087                           ;led.c: 204: }
 28088                           ;led.c: 205: break;
 28089  0030D2  D023               	goto	l2061
 28090  0030D4                     
 28091                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 28092                           
 28093                           ; BSR set to: 0
 28094  0030D4  0100               	movlb	0	; () banked
 28095  0030D6  EE20 F001          	lfsr	2,1
 28096  0030DA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28097  0030DC  26D9               	addwf	fsr2l,f,c
 28098  0030DE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28099  0030E0  22DA               	addwfc	fsr2h,f,c
 28100  0030E2  0E00               	movlw	0
 28101  0030E4  6EDF               	movwf	indf2,c
 28102                           
 28103                           ; BSR set to: 0
 28104                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 28105  0030E6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28106  0030EA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28107  0030EE  0E00               	movlw	0
 28108  0030F0  6EDF               	movwf	indf2,c
 28109                           
 28110                           ; BSR set to: 0
 28111                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 28112  0030F2  0E00               	movlw	0
 28113  0030F4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 28114  0030F6  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 28115  0030F8  ECE1  F02C         	call	_Led_SetLedStatus
 28116                           
 28117                           ;led.c: 218: }
 28118                           
 28119                           ;led.c: 217: break;
 28120                           
 28121                           ;led.c: 216: default:
 28122                           
 28123                           ;led.c: 214: break;
 28124  0030FC  D00E               	goto	l2061
 28125  0030FE                     l2059:
 28126  0030FE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 28127  003102  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 28128  003106  50DF               	movf	indf2,w,c
 28129                           
 28130                           ; Switch size 1, requested type "space"
 28131                           ; Number of cases is 3, Range of values is 0 to 2
 28132                           ; switch strategies available:
 28133                           ; Name         Instructions Cycles
 28134                           ; simple_byte           10     6 (average)
 28135                           ;	Chosen strategy is simple_byte
 28136  003108  0A00               	xorlw	0	; case 0
 28137  00310A  B4D8               	btfsc	status,2,c
 28138  00310C  D79C               	goto	l2060
 28139  00310E  0A01               	xorlw	1	; case 1
 28140  003110  B4D8               	btfsc	status,2,c
 28141  003112  D7A8               	goto	l2062
 28142  003114  0A03               	xorlw	3	; case 2
 28143  003116  B4D8               	btfsc	status,2,c
 28144  003118  D7DD               	goto	l2064
 28145  00311A                     l2061:
 28146                           
 28147                           ;led.c: 221: return (LedPulse->LedOutState);
 28148  00311A  0100               	movlb	0	; () banked
 28149  00311C  EE20 F001          	lfsr	2,1
 28150  003120  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 28151  003122  26D9               	addwf	fsr2l,f,c
 28152  003124  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 28153  003126  22DA               	addwfc	fsr2h,f,c
 28154  003128  50DF               	movf	indf2,w,c
 28155  00312A  0012               	return	
 28156  00312C                     __end_of_LedPulseStateMachine:
 28157                           	opt stack 0
 28158                           tosu	equ	0xFFF
 28159                           tosh	equ	0xFFE
 28160                           tosl	equ	0xFFD
 28161                           pclath	equ	0xFFA
 28162                           tblptru	equ	0xFF8
 28163                           tblptrh	equ	0xFF7
 28164                           tblptrl	equ	0xFF6
 28165                           tablat	equ	0xFF5
 28166                           prodh	equ	0xFF4
 28167                           prodl	equ	0xFF3
 28168                           intcon	equ	0xFF2
 28169                           intcon2	equ	0xFF1
 28170                           intcon3	equ	0xFF0
 28171                           indf0	equ	0xFEF
 28172                           postinc0	equ	0xFEE
 28173                           plusw0	equ	0xFEB
 28174                           fsr0h	equ	0xFEA
 28175                           fsr0l	equ	0xFE9
 28176                           wreg	equ	0xFE8
 28177                           indf1	equ	0xFE7
 28178                           postinc1	equ	0xFE6
 28179                           postdec1	equ	0xFE5
 28180                           plusw1	equ	0xFE3
 28181                           fsr1h	equ	0xFE2
 28182                           fsr1l	equ	0xFE1
 28183                           indf2	equ	0xFDF
 28184                           postinc2	equ	0xFDE
 28185                           postdec2	equ	0xFDD
 28186                           plusw2	equ	0xFDB
 28187                           fsr2h	equ	0xFDA
 28188                           fsr2l	equ	0xFD9
 28189                           status	equ	0xFD8
 28190                           
 28191 ;; *************** function _Led_SetLedStatus *****************
 28192 ;; Defined at:
 28193 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28194 ;; Parameters:    Size  Location     Type
 28195 ;;  Led             1    wreg     unsigned char 
 28196 ;;  LedSts          1   29[BANK0 ] enum E8934
 28197 ;; Auto vars:     Size  Location     Type
 28198 ;;  Led             1   30[BANK0 ] unsigned char 
 28199 ;; Return value:  Size  Location     Type
 28200 ;;                  1    wreg      void 
 28201 ;; Registers used:
 28202 ;;		wreg, status,2, status,0
 28203 ;; Tracked objects:
 28204 ;;		On entry : 0/0
 28205 ;;		On exit  : 0/0
 28206 ;;		Unchanged: 0/0
 28207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28208 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28211 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28212 ;;Total ram usage:        2 bytes
 28213 ;; Hardware stack levels used:    1
 28214 ;; Hardware stack levels required when called:   11
 28215 ;; This function calls:
 28216 ;;		Nothing
 28217 ;; This function is called by:
 28218 ;;		_LedPulseStateMachine
 28219 ;;		_LedStateMachine
 28220 ;;		_initGprsModem
 28221 ;;		_MyApp_Task
 28222 ;; This function uses a non-reentrant model
 28223 ;;
 28224                           
 28225                           	psect	text127
 28226  0059C2                     __ptext127:
 28227                           	opt stack 0
 28228  0059C2                     _Led_SetLedStatus:
 28229                           	opt stack 15
 28230                           
 28231                           ; BSR set to: 0
 28232                           ;incstack = 0
 28233                           ;Led_SetLedStatus@Led stored from wreg
 28234  0059C2  0100               	movlb	0	; () banked
 28235  0059C4  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 28236                           
 28237                           ;led.c: 341: switch (Led)
 28238  0059C6  D009               	goto	l2090
 28239  0059C8                     l2091:
 28240                           
 28241                           ; BSR set to: 0
 28242                           ;led.c: 344: Led1Sts = LedSts;
 28243  0059C8  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 28244                           
 28245                           ;led.c: 345: break;
 28246  0059CC  0012               	return	
 28247  0059CE                     l2093:
 28248                           
 28249                           ; BSR set to: 0
 28250                           ;led.c: 348: Led2Sts = LedSts;
 28251  0059CE  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 28252                           
 28253                           ;led.c: 349: break;
 28254  0059D2  0012               	return	
 28255  0059D4                     l2094:
 28256                           
 28257                           ; BSR set to: 0
 28258                           ;led.c: 352: Led3Sts = LedSts;
 28259  0059D4  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 28260                           
 28261                           ; BSR set to: 0
 28262                           ;led.c: 357: }
 28263                           
 28264                           ; BSR set to: 0
 28265                           ;led.c: 356: break;
 28266                           
 28267                           ;led.c: 355: default:
 28268                           
 28269                           ;led.c: 353: break;
 28270  0059D8  0012               	return	
 28271  0059DA                     l2090:
 28272                           
 28273                           ; BSR set to: 0
 28274  0059DA  0100               	movlb	0	; () banked
 28275  0059DC  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 28276                           
 28277                           ; Switch size 1, requested type "space"
 28278                           ; Number of cases is 3, Range of values is 1 to 3
 28279                           ; switch strategies available:
 28280                           ; Name         Instructions Cycles
 28281                           ; simple_byte           10     6 (average)
 28282                           ;	Chosen strategy is simple_byte
 28283  0059DE  0A01               	xorlw	1	; case 1
 28284  0059E0  B4D8               	btfsc	status,2,c
 28285  0059E2  D7F2               	goto	l2091
 28286  0059E4  0A03               	xorlw	3	; case 2
 28287  0059E6  B4D8               	btfsc	status,2,c
 28288  0059E8  D7F2               	goto	l2093
 28289  0059EA  0A01               	xorlw	1	; case 3
 28290  0059EC  A4D8               	btfss	status,2,c
 28291  0059EE  0012               	return	
 28292  0059F0  D7F1               	goto	l2094
 28293  0059F2                     __end_of_Led_SetLedStatus:
 28294                           	opt stack 0
 28295                           tosu	equ	0xFFF
 28296                           tosh	equ	0xFFE
 28297                           tosl	equ	0xFFD
 28298                           pclath	equ	0xFFA
 28299                           tblptru	equ	0xFF8
 28300                           tblptrh	equ	0xFF7
 28301                           tblptrl	equ	0xFF6
 28302                           tablat	equ	0xFF5
 28303                           prodh	equ	0xFF4
 28304                           prodl	equ	0xFF3
 28305                           intcon	equ	0xFF2
 28306                           intcon2	equ	0xFF1
 28307                           intcon3	equ	0xFF0
 28308                           indf0	equ	0xFEF
 28309                           postinc0	equ	0xFEE
 28310                           plusw0	equ	0xFEB
 28311                           fsr0h	equ	0xFEA
 28312                           fsr0l	equ	0xFE9
 28313                           wreg	equ	0xFE8
 28314                           indf1	equ	0xFE7
 28315                           postinc1	equ	0xFE6
 28316                           postdec1	equ	0xFE5
 28317                           plusw1	equ	0xFE3
 28318                           fsr1h	equ	0xFE2
 28319                           fsr1l	equ	0xFE1
 28320                           indf2	equ	0xFDF
 28321                           postinc2	equ	0xFDE
 28322                           postdec2	equ	0xFDD
 28323                           plusw2	equ	0xFDB
 28324                           fsr2h	equ	0xFDA
 28325                           fsr2l	equ	0xFD9
 28326                           status	equ	0xFD8
 28327                           
 28328 ;; *************** function _LedBlinkStateMachine *****************
 28329 ;; Defined at:
 28330 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 28331 ;; Parameters:    Size  Location     Type
 28332 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 28333 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 28334 ;; Auto vars:     Size  Location     Type
 28335 ;;		None
 28336 ;; Return value:  Size  Location     Type
 28337 ;;                  1    wreg      unsigned char 
 28338 ;; Registers used:
 28339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28340 ;; Tracked objects:
 28341 ;;		On entry : 0/0
 28342 ;;		On exit  : 0/0
 28343 ;;		Unchanged: 0/0
 28344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28348 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28349 ;;Total ram usage:        4 bytes
 28350 ;; Hardware stack levels used:    1
 28351 ;; Hardware stack levels required when called:   12
 28352 ;; This function calls:
 28353 ;;		___lwdiv
 28354 ;; This function is called by:
 28355 ;;		_LedStateMachine
 28356 ;; This function uses a non-reentrant model
 28357 ;;
 28358                           
 28359                           	psect	text128
 28360  0023FC                     __ptext128:
 28361                           	opt stack 0
 28362  0023FC                     _LedBlinkStateMachine:
 28363                           	opt stack 14
 28364                           
 28365                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 28366                           
 28367                           ; BSR set to: 0
 28368                           ;incstack = 0
 28369  0023FC  D08F               	goto	l2046
 28370  0023FE                     
 28371                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 28372  0023FE  0100               	movlb	0	; () banked
 28373  002400  EE20 F008          	lfsr	2,8
 28374  002404  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28375  002406  26D9               	addwf	fsr2l,f,c
 28376  002408  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28377  00240A  22DA               	addwfc	fsr2h,f,c
 28378  00240C  EE10 F001          	lfsr	1,1
 28379  002410  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28380  002412  26E1               	addwf	fsr1l,f,c
 28381  002414  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28382  002416  22E2               	addwfc	fsr1h,f,c
 28383  002418  CFDF FFE7          	movff	indf2,indf1
 28384                           
 28385                           ; BSR set to: 0
 28386                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 28387  00241C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 28388  002420  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 28389  002424  D040               	goto	L44
 28390  002426                     
 28391                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 28392                           
 28393                           ; BSR set to: 0
 28394  002426  0100               	movlb	0	; () banked
 28395  002428  EE20 F002          	lfsr	2,2
 28396  00242C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28397  00242E  26D9               	addwf	fsr2l,f,c
 28398  002430  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28399  002432  22DA               	addwfc	fsr2h,f,c
 28400  002434  2ADE               	incf	postinc2,f,c
 28401  002436  0E00               	movlw	0
 28402  002438  22DD               	addwfc	postdec2,f,c
 28403                           
 28404                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 28405  00243A  EE20 F001          	lfsr	2,1
 28406  00243E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28407  002440  26D9               	addwf	fsr2l,f,c
 28408  002442  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28409  002444  22DA               	addwfc	fsr2h,f,c
 28410  002446  50DF               	movf	indf2,w,c
 28411  002448  A4D8               	btfss	status,2,c
 28412  00244A  D02F               	goto	l2050
 28413                           
 28414                           ; BSR set to: 0
 28415                           ;led.c: 142: {
 28416                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 28417  00244C  EE20 F006          	lfsr	2,6
 28418  002450  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28419  002452  26D9               	addwf	fsr2l,f,c
 28420  002454  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28421  002456  22DA               	addwfc	fsr2h,f,c
 28422  002458  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28423  00245C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28424  002460  0E00               	movlw	0
 28425  002462  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28426  002464  0E32               	movlw	50
 28427  002466  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28428  002468  EC16  F029         	call	___lwdiv	;wreg free
 28429  00246C  0100               	movlb	0	; () banked
 28430  00246E  EE20 F002          	lfsr	2,2
 28431  002472  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28432  002474  26D9               	addwf	fsr2l,f,c
 28433  002476  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28434  002478  22DA               	addwfc	fsr2h,f,c
 28435  00247A  5183               	movf	?___lwdiv& (0+255),w,b
 28436  00247C  5CDE               	subwf	postinc2,w,c
 28437  00247E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28438  002480  58DE               	subwfb	postinc2,w,c
 28439  002482  A0D8               	btfss	status,0,c
 28440  002484  D056               	goto	l2048
 28441                           
 28442                           ; BSR set to: 0
 28443                           ;led.c: 145: {
 28444                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 28445  002486  EE20 F002          	lfsr	2,2
 28446  00248A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28447  00248C  26D9               	addwf	fsr2l,f,c
 28448  00248E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28449  002490  22DA               	addwfc	fsr2h,f,c
 28450  002492  0E00               	movlw	0
 28451  002494  6EDE               	movwf	postinc2,c
 28452  002496  0E00               	movlw	0
 28453  002498  6EDD               	movwf	postdec2,c
 28454                           
 28455                           ;led.c: 149: LedBlink->LedOutState = OnState;
 28456  00249A  EE20 F001          	lfsr	2,1
 28457  00249E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28458  0024A0  26D9               	addwf	fsr2l,f,c
 28459  0024A2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28460  0024A4  22DA               	addwfc	fsr2h,f,c
 28461  0024A6                     L44:
 28462  0024A6  0E01               	movlw	1
 28463  0024A8  D037               	goto	L45
 28464  0024AA                     l2050:
 28465                           
 28466                           ; BSR set to: 0
 28467                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 28468                           
 28469                           ; BSR set to: 0
 28470  0024AA  EE20 F001          	lfsr	2,1
 28471  0024AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28472  0024B0  26D9               	addwf	fsr2l,f,c
 28473  0024B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28474  0024B4  22DA               	addwfc	fsr2h,f,c
 28475  0024B6  04DE               	decf	postinc2,w,c
 28476  0024B8  A4D8               	btfss	status,2,c
 28477  0024BA  D03B               	goto	l2048
 28478                           
 28479                           ; BSR set to: 0
 28480                           ;led.c: 153: {
 28481                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 28482  0024BC  EE20 F004          	lfsr	2,4
 28483  0024C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28484  0024C2  26D9               	addwf	fsr2l,f,c
 28485  0024C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28486  0024C6  22DA               	addwfc	fsr2h,f,c
 28487  0024C8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 28488  0024CC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 28489  0024D0  0E00               	movlw	0
 28490  0024D2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 28491  0024D4  0E32               	movlw	50
 28492  0024D6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 28493  0024D8  EC16  F029         	call	___lwdiv	;wreg free
 28494  0024DC  0100               	movlb	0	; () banked
 28495  0024DE  EE20 F002          	lfsr	2,2
 28496  0024E2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28497  0024E4  26D9               	addwf	fsr2l,f,c
 28498  0024E6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28499  0024E8  22DA               	addwfc	fsr2h,f,c
 28500  0024EA  5183               	movf	?___lwdiv& (0+255),w,b
 28501  0024EC  5CDE               	subwf	postinc2,w,c
 28502  0024EE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 28503  0024F0  58DE               	subwfb	postinc2,w,c
 28504  0024F2  A0D8               	btfss	status,0,c
 28505  0024F4  D01E               	goto	l2048
 28506                           
 28507                           ; BSR set to: 0
 28508                           ;led.c: 156: {
 28509                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 28510  0024F6  EE20 F002          	lfsr	2,2
 28511  0024FA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28512  0024FC  26D9               	addwf	fsr2l,f,c
 28513  0024FE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28514  002500  22DA               	addwfc	fsr2h,f,c
 28515  002502  0E00               	movlw	0
 28516  002504  6EDE               	movwf	postinc2,c
 28517  002506  0E00               	movlw	0
 28518  002508  6EDD               	movwf	postdec2,c
 28519                           
 28520                           ;led.c: 160: LedBlink->LedOutState = OffState;
 28521  00250A  EE20 F001          	lfsr	2,1
 28522  00250E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28523  002510  26D9               	addwf	fsr2l,f,c
 28524  002512  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28525  002514  22DA               	addwfc	fsr2h,f,c
 28526  002516  0E00               	movlw	0
 28527  002518                     L45:
 28528  002518  6EDF               	movwf	indf2,c
 28529                           
 28530                           ; BSR set to: 0
 28531                           ;led.c: 167: }
 28532                           
 28533                           ; BSR set to: 0
 28534                           ;led.c: 166: break;
 28535                           
 28536                           ;led.c: 165: default:
 28537                           
 28538                           ; BSR set to: 0
 28539                           ;led.c: 161: }
 28540                           ;led.c: 162: }
 28541                           ;led.c: 163: break;
 28542                           
 28543                           ; BSR set to: 0
 28544                           
 28545                           ; BSR set to: 0
 28546  00251A  D00B               	goto	l2048
 28547  00251C                     l2046:
 28548                           
 28549                           ; BSR set to: 0
 28550  00251C  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 28551  002520  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 28552  002524  50DF               	movf	indf2,w,c
 28553                           
 28554                           ; Switch size 1, requested type "space"
 28555                           ; Number of cases is 2, Range of values is 0 to 1
 28556                           ; switch strategies available:
 28557                           ; Name         Instructions Cycles
 28558                           ; simple_byte            7     4 (average)
 28559                           ;	Chosen strategy is simple_byte
 28560  002526  0A00               	xorlw	0	; case 0
 28561  002528  B4D8               	btfsc	status,2,c
 28562  00252A  D769               	goto	l2047
 28563  00252C  0A01               	xorlw	1	; case 1
 28564  00252E  B4D8               	btfsc	status,2,c
 28565  002530  D77A               	goto	l2049
 28566  002532                     l2048:
 28567                           
 28568                           ;led.c: 170: return (LedBlink->LedOutState);
 28569  002532  0100               	movlb	0	; () banked
 28570  002534  EE20 F001          	lfsr	2,1
 28571  002538  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 28572  00253A  26D9               	addwf	fsr2l,f,c
 28573  00253C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 28574  00253E  22DA               	addwfc	fsr2h,f,c
 28575  002540  50DF               	movf	indf2,w,c
 28576  002542  0012               	return	
 28577  002544                     __end_of_LedBlinkStateMachine:
 28578                           	opt stack 0
 28579                           tosu	equ	0xFFF
 28580                           tosh	equ	0xFFE
 28581                           tosl	equ	0xFFD
 28582                           pclath	equ	0xFFA
 28583                           tblptru	equ	0xFF8
 28584                           tblptrh	equ	0xFF7
 28585                           tblptrl	equ	0xFF6
 28586                           tablat	equ	0xFF5
 28587                           prodh	equ	0xFF4
 28588                           prodl	equ	0xFF3
 28589                           intcon	equ	0xFF2
 28590                           intcon2	equ	0xFF1
 28591                           intcon3	equ	0xFF0
 28592                           indf0	equ	0xFEF
 28593                           postinc0	equ	0xFEE
 28594                           plusw0	equ	0xFEB
 28595                           fsr0h	equ	0xFEA
 28596                           fsr0l	equ	0xFE9
 28597                           wreg	equ	0xFE8
 28598                           indf1	equ	0xFE7
 28599                           postinc1	equ	0xFE6
 28600                           postdec1	equ	0xFE5
 28601                           plusw1	equ	0xFE3
 28602                           fsr1h	equ	0xFE2
 28603                           fsr1l	equ	0xFE1
 28604                           indf2	equ	0xFDF
 28605                           postinc2	equ	0xFDE
 28606                           postdec2	equ	0xFDD
 28607                           plusw2	equ	0xFDB
 28608                           fsr2h	equ	0xFDA
 28609                           fsr2l	equ	0xFD9
 28610                           status	equ	0xFD8
 28611                           
 28612 ;; *************** function ___lwdiv *****************
 28613 ;; Defined at:
 28614 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 28615 ;; Parameters:    Size  Location     Type
 28616 ;;  dividend        2   35[BANK0 ] unsigned int 
 28617 ;;  divisor         2   37[BANK0 ] unsigned int 
 28618 ;; Auto vars:     Size  Location     Type
 28619 ;;  quotient        2   40[BANK0 ] unsigned int 
 28620 ;;  counter         1   39[BANK0 ] unsigned char 
 28621 ;; Return value:  Size  Location     Type
 28622 ;;                  2   35[BANK0 ] unsigned int 
 28623 ;; Registers used:
 28624 ;;		wreg, status,2, status,0
 28625 ;; Tracked objects:
 28626 ;;		On entry : 0/0
 28627 ;;		On exit  : 0/0
 28628 ;;		Unchanged: 0/0
 28629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28631 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28633 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28634 ;;Total ram usage:        7 bytes
 28635 ;; Hardware stack levels used:    1
 28636 ;; Hardware stack levels required when called:   11
 28637 ;; This function calls:
 28638 ;;		Nothing
 28639 ;; This function is called by:
 28640 ;;		_LedBlinkStateMachine
 28641 ;;		_LedPulseStateMachine
 28642 ;;		_secondsAppTimer
 28643 ;;		_utoa
 28644 ;; This function uses a non-reentrant model
 28645 ;;
 28646                           
 28647                           	psect	text129
 28648  00522C                     __ptext129:
 28649                           	opt stack 0
 28650  00522C                     ___lwdiv:
 28651                           	opt stack 14
 28652                           
 28653                           ; BSR set to: 0
 28654                           ;incstack = 0
 28655  00522C  0E00               	movlw	0
 28656  00522E  0100               	movlb	0	; () banked
 28657  005230  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 28658  005232  0E00               	movlw	0
 28659  005234  6F88               	movwf	___lwdiv@quotient& (0+255),b
 28660                           
 28661                           ; BSR set to: 0
 28662  005236  5185               	movf	___lwdiv@divisor& (0+255),w,b
 28663  005238  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 28664  00523A  B4D8               	btfsc	status,2,c
 28665  00523C  D01C               	goto	l3019
 28666                           
 28667                           ; BSR set to: 0
 28668  00523E  0E01               	movlw	1
 28669  005240  6F87               	movwf	___lwdiv@counter& (0+255),b
 28670  005242  D004               	goto	l3014
 28671  005244                     
 28672                           ; BSR set to: 0
 28673                           
 28674                           ; BSR set to: 0
 28675  005244  90D8               	bcf	status,0,c
 28676  005246  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 28677  005248  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 28678  00524A  2B87               	incf	___lwdiv@counter& (0+255),f,b
 28679  00524C                     l3014:
 28680                           
 28681                           ; BSR set to: 0
 28682                           
 28683                           ; BSR set to: 0
 28684  00524C  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 28685  00524E  D7FA               	goto	l3015
 28686  005250                     u10270:
 28687                           
 28688                           ; BSR set to: 0
 28689                           
 28690                           ; BSR set to: 0
 28691                           
 28692                           ; BSR set to: 0
 28693  005250  90D8               	bcf	status,0,c
 28694  005252  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 28695  005254  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 28696                           
 28697                           ; BSR set to: 0
 28698  005256  5185               	movf	___lwdiv@divisor& (0+255),w,b
 28699  005258  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 28700  00525A  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28701  00525C  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 28702  00525E  A0D8               	btfss	status,0,c
 28703  005260  D005               	goto	l3018
 28704                           
 28705                           ; BSR set to: 0
 28706  005262  5185               	movf	___lwdiv@divisor& (0+255),w,b
 28707  005264  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 28708  005266  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 28709  005268  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 28710                           
 28711                           ; BSR set to: 0
 28712  00526A  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 28713  00526C                     l3018:
 28714                           
 28715                           ; BSR set to: 0
 28716                           
 28717                           ; BSR set to: 0
 28718  00526C  90D8               	bcf	status,0,c
 28719  00526E  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 28720  005270  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 28721                           
 28722                           ; BSR set to: 0
 28723  005272  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 28724  005274  D7ED               	goto	u10270
 28725  005276                     l3019:
 28726                           
 28727                           ; BSR set to: 0
 28728                           
 28729                           ; BSR set to: 0
 28730  005276  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 28731  00527A  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28732                           
 28733                           ; BSR set to: 0
 28734  00527E  0012               	return		;funcret
 28735  005280                     __end_of___lwdiv:
 28736                           	opt stack 0
 28737                           tosu	equ	0xFFF
 28738                           tosh	equ	0xFFE
 28739                           tosl	equ	0xFFD
 28740                           pclath	equ	0xFFA
 28741                           tblptru	equ	0xFF8
 28742                           tblptrh	equ	0xFF7
 28743                           tblptrl	equ	0xFF6
 28744                           tablat	equ	0xFF5
 28745                           prodh	equ	0xFF4
 28746                           prodl	equ	0xFF3
 28747                           intcon	equ	0xFF2
 28748                           intcon2	equ	0xFF1
 28749                           intcon3	equ	0xFF0
 28750                           indf0	equ	0xFEF
 28751                           postinc0	equ	0xFEE
 28752                           plusw0	equ	0xFEB
 28753                           fsr0h	equ	0xFEA
 28754                           fsr0l	equ	0xFE9
 28755                           wreg	equ	0xFE8
 28756                           indf1	equ	0xFE7
 28757                           postinc1	equ	0xFE6
 28758                           postdec1	equ	0xFE5
 28759                           plusw1	equ	0xFE3
 28760                           fsr1h	equ	0xFE2
 28761                           fsr1l	equ	0xFE1
 28762                           indf2	equ	0xFDF
 28763                           postinc2	equ	0xFDE
 28764                           postdec2	equ	0xFDD
 28765                           plusw2	equ	0xFDB
 28766                           fsr2h	equ	0xFDA
 28767                           fsr2l	equ	0xFD9
 28768                           status	equ	0xFD8
 28769                           
 28770 ;; *************** function _OsAlrm_SetOsAlarm *****************
 28771 ;; Defined at:
 28772 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 28773 ;; Parameters:    Size  Location     Type
 28774 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 28775 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 28776 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 28777 ;;		 -> I2cDummyTx(1), 
 28778 ;; Auto vars:     Size  Location     Type
 28779 ;;		None
 28780 ;; Return value:  Size  Location     Type
 28781 ;;                  1    wreg      void 
 28782 ;; Registers used:
 28783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28784 ;; Tracked objects:
 28785 ;;		On entry : 0/0
 28786 ;;		On exit  : 0/0
 28787 ;;		Unchanged: 0/0
 28788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28792 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28793 ;;Total ram usage:        8 bytes
 28794 ;; Hardware stack levels used:    1
 28795 ;; Hardware stack levels required when called:   12
 28796 ;; This function calls:
 28797 ;;		___wmul
 28798 ;; This function is called by:
 28799 ;;		_I2cSlv_MainTask
 28800 ;; This function uses a non-reentrant model
 28801 ;;
 28802                           
 28803                           	psect	text130
 28804  003B16                     __ptext130:
 28805                           	opt stack 0
 28806  003B16                     _OsAlrm_SetOsAlarm:
 28807                           	opt stack 15
 28808                           
 28809                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 28810                           
 28811                           ; BSR set to: 0
 28812                           ;incstack = 0
 28813  003B16  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28814  003B1A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28815  003B1E  0E00               	movlw	0
 28816  003B20  0100               	movlb	0	; () banked
 28817  003B22  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28818  003B24  0E0B               	movlw	11
 28819  003B26  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28820  003B28  EC67  F02D         	call	___wmul	;wreg free
 28821  003B2C  0E00               	movlw	low _OsAlarms
 28822  003B2E  0100               	movlb	0	; () banked
 28823  003B30  257D               	addwf	?___wmul& (0+255),w,b
 28824  003B32  6ED9               	movwf	fsr2l,c
 28825  003B34  0E06               	movlw	high _OsAlarms
 28826  003B36  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28827  003B38  6EDA               	movwf	fsr2h,c
 28828  003B3A  0E01               	movlw	1
 28829  003B3C  6EDF               	movwf	indf2,c
 28830                           
 28831                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 28832  003B3E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28833  003B42  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28834  003B46  0E00               	movlw	0
 28835  003B48  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28836  003B4A  0E0B               	movlw	11
 28837  003B4C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28838  003B4E  EC67  F02D         	call	___wmul	;wreg free
 28839  003B52  0E01               	movlw	1
 28840  003B54  0100               	movlb	0	; () banked
 28841  003B56  277D               	addwf	?___wmul& (0+255),f,b
 28842  003B58  0E00               	movlw	0
 28843  003B5A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 28844  003B5C  0E00               	movlw	low _OsAlarms
 28845  003B5E  257D               	addwf	?___wmul& (0+255),w,b
 28846  003B60  6ED9               	movwf	fsr2l,c
 28847  003B62  0E06               	movlw	high _OsAlarms
 28848  003B64  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28849  003B66  6EDA               	movwf	fsr2h,c
 28850  003B68  6ADE               	clrf	postinc2,c
 28851  003B6A  6ADE               	clrf	postinc2,c
 28852  003B6C  6ADE               	clrf	postinc2,c
 28853  003B6E  6ADD               	clrf	postdec2,c
 28854                           
 28855                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 28856  003B70  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28857  003B74  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28858  003B78  0E00               	movlw	0
 28859  003B7A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28860  003B7C  0E0B               	movlw	11
 28861  003B7E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28862  003B80  EC67  F02D         	call	___wmul	;wreg free
 28863  003B84  0E05               	movlw	5
 28864  003B86  0100               	movlb	0	; () banked
 28865  003B88  277D               	addwf	?___wmul& (0+255),f,b
 28866  003B8A  0E00               	movlw	0
 28867  003B8C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 28868  003B8E  0E00               	movlw	low _OsAlarms
 28869  003B90  257D               	addwf	?___wmul& (0+255),w,b
 28870  003B92  6ED9               	movwf	fsr2l,c
 28871  003B94  0E06               	movlw	high _OsAlarms
 28872  003B96  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28873  003B98  6EDA               	movwf	fsr2h,c
 28874  003B9A  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 28875  003B9E  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 28876  003BA2  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 28877  003BA6  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 28878                           
 28879                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 28880  003BAA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 28881  003BAE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 28882  003BB2  0E00               	movlw	0
 28883  003BB4  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28884  003BB6  0E0B               	movlw	11
 28885  003BB8  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 28886  003BBA  EC67  F02D         	call	___wmul	;wreg free
 28887  003BBE  0E09               	movlw	9
 28888  003BC0  0100               	movlb	0	; () banked
 28889  003BC2  277D               	addwf	?___wmul& (0+255),f,b
 28890  003BC4  0E00               	movlw	0
 28891  003BC6  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 28892  003BC8  0E00               	movlw	low _OsAlarms
 28893  003BCA  257D               	addwf	?___wmul& (0+255),w,b
 28894  003BCC  6ED9               	movwf	fsr2l,c
 28895  003BCE  0E06               	movlw	high _OsAlarms
 28896  003BD0  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 28897  003BD2  6EDA               	movwf	fsr2h,c
 28898  003BD4  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 28899  003BD8  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 28900                           
 28901                           ; BSR set to: 0
 28902  003BDC  0012               	return		;funcret
 28903  003BDE                     __end_of_OsAlrm_SetOsAlarm:
 28904                           	opt stack 0
 28905                           tosu	equ	0xFFF
 28906                           tosh	equ	0xFFE
 28907                           tosl	equ	0xFFD
 28908                           pclath	equ	0xFFA
 28909                           tblptru	equ	0xFF8
 28910                           tblptrh	equ	0xFF7
 28911                           tblptrl	equ	0xFF6
 28912                           tablat	equ	0xFF5
 28913                           prodh	equ	0xFF4
 28914                           prodl	equ	0xFF3
 28915                           intcon	equ	0xFF2
 28916                           intcon2	equ	0xFF1
 28917                           intcon3	equ	0xFF0
 28918                           indf0	equ	0xFEF
 28919                           postinc0	equ	0xFEE
 28920                           plusw0	equ	0xFEB
 28921                           fsr0h	equ	0xFEA
 28922                           fsr0l	equ	0xFE9
 28923                           wreg	equ	0xFE8
 28924                           indf1	equ	0xFE7
 28925                           postinc1	equ	0xFE6
 28926                           postdec1	equ	0xFE5
 28927                           plusw1	equ	0xFE3
 28928                           fsr1h	equ	0xFE2
 28929                           fsr1l	equ	0xFE1
 28930                           indf2	equ	0xFDF
 28931                           postinc2	equ	0xFDE
 28932                           postdec2	equ	0xFDD
 28933                           plusw2	equ	0xFDB
 28934                           fsr2h	equ	0xFDA
 28935                           fsr2l	equ	0xFD9
 28936                           status	equ	0xFD8
 28937                           
 28938 ;; *************** function ___wmul *****************
 28939 ;; Defined at:
 28940 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 28941 ;; Parameters:    Size  Location     Type
 28942 ;;  multiplier      2   29[BANK0 ] unsigned int 
 28943 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 28944 ;; Auto vars:     Size  Location     Type
 28945 ;;  product         2   33[BANK0 ] unsigned int 
 28946 ;; Return value:  Size  Location     Type
 28947 ;;                  2   29[BANK0 ] unsigned int 
 28948 ;; Registers used:
 28949 ;;		wreg, status,2, status,0, prodl, prodh
 28950 ;; Tracked objects:
 28951 ;;		On entry : 0/0
 28952 ;;		On exit  : 0/0
 28953 ;;		Unchanged: 0/0
 28954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28956 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28958 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28959 ;;Total ram usage:        6 bytes
 28960 ;; Hardware stack levels used:    1
 28961 ;; Hardware stack levels required when called:   11
 28962 ;; This function calls:
 28963 ;;		Nothing
 28964 ;; This function is called by:
 28965 ;;		_OsAlrm_SetOsAlarm
 28966 ;;		_secondsAppTimer
 28967 ;;		_atoi
 28968 ;; This function uses a non-reentrant model
 28969 ;;
 28970                           
 28971                           	psect	text131
 28972  005ACE                     __ptext131:
 28973                           	opt stack 0
 28974  005ACE                     ___wmul:
 28975                           	opt stack 13
 28976                           
 28977                           ; BSR set to: 0
 28978                           ;incstack = 0
 28979  005ACE  0100               	movlb	0	; () banked
 28980  005AD0  517D               	movf	___wmul@multiplier& (0+255),w,b
 28981  005AD2  037F               	mulwf	___wmul@multiplicand& (0+255),b
 28982  005AD4  CFF3 F081          	movff	prodl,___wmul@product
 28983  005AD8  CFF4 F082          	movff	prodh,___wmul@product+1
 28984  005ADC  517D               	movf	___wmul@multiplier& (0+255),w,b
 28985  005ADE  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28986  005AE0  50F3               	movf	prodl,w,c
 28987  005AE2  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 28988  005AE4  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28989  005AE6  037F               	mulwf	___wmul@multiplicand& (0+255),b
 28990  005AE8  50F3               	movf	prodl,w,c
 28991  005AEA  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 28992                           
 28993                           ; BSR set to: 0
 28994  005AEC  C081  F07D         	movff	___wmul@product,?___wmul
 28995  005AF0  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 28996  005AF4  0012               	return	
 28997  005AF6                     __end_of___wmul:
 28998                           	opt stack 0
 28999                           tosu	equ	0xFFF
 29000                           tosh	equ	0xFFE
 29001                           tosl	equ	0xFFD
 29002                           pclath	equ	0xFFA
 29003                           tblptru	equ	0xFF8
 29004                           tblptrh	equ	0xFF7
 29005                           tblptrl	equ	0xFF6
 29006                           tablat	equ	0xFF5
 29007                           prodh	equ	0xFF4
 29008                           prodl	equ	0xFF3
 29009                           intcon	equ	0xFF2
 29010                           intcon2	equ	0xFF1
 29011                           intcon3	equ	0xFF0
 29012                           indf0	equ	0xFEF
 29013                           postinc0	equ	0xFEE
 29014                           plusw0	equ	0xFEB
 29015                           fsr0h	equ	0xFEA
 29016                           fsr0l	equ	0xFE9
 29017                           wreg	equ	0xFE8
 29018                           indf1	equ	0xFE7
 29019                           postinc1	equ	0xFE6
 29020                           postdec1	equ	0xFE5
 29021                           plusw1	equ	0xFE3
 29022                           fsr1h	equ	0xFE2
 29023                           fsr1l	equ	0xFE1
 29024                           indf2	equ	0xFDF
 29025                           postinc2	equ	0xFDE
 29026                           postdec2	equ	0xFDD
 29027                           plusw2	equ	0xFDB
 29028                           fsr2h	equ	0xFDA
 29029                           fsr2l	equ	0xFD9
 29030                           status	equ	0xFD8
 29031                           
 29032 ;; *************** function _I2c_InitI2cModule *****************
 29033 ;; Defined at:
 29034 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29035 ;; Parameters:    Size  Location     Type
 29036 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 29037 ;;		 -> I2cConfig(10), 
 29038 ;; Auto vars:     Size  Location     Type
 29039 ;;		None
 29040 ;; Return value:  Size  Location     Type
 29041 ;;                  1    wreg      void 
 29042 ;; Registers used:
 29043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29044 ;; Tracked objects:
 29045 ;;		On entry : 0/0
 29046 ;;		On exit  : 0/0
 29047 ;;		Unchanged: 0/0
 29048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29053 ;;Total ram usage:        4 bytes
 29054 ;; Hardware stack levels used:    1
 29055 ;; Hardware stack levels required when called:   13
 29056 ;; This function calls:
 29057 ;;		_SetBaudRate
 29058 ;; This function is called by:
 29059 ;;		_I2cSlv_MainTask
 29060 ;; This function uses a non-reentrant model
 29061 ;;
 29062                           
 29063                           	psect	text132
 29064  004B22                     __ptext132:
 29065                           	opt stack 0
 29066  004B22                     _I2c_InitI2cModule:
 29067                           	opt stack 14
 29068                           
 29069                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 29070                           
 29071                           ; BSR set to: 0
 29072                           ;incstack = 0
 29073  004B22  8295               	bsf	3989,1,c	;volatile
 29074                           
 29075                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 29076  004B24  8095               	bsf	3989,0,c	;volatile
 29077                           
 29078                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 29079  004B26  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 29080  004B2A  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 29081  004B2E  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 29082  004B32  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 29083  004B36  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 29084  004B3A  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 29085  004B3E  0100               	movlb	0	; () banked
 29086  004B40  EE20 F004          	lfsr	2,4
 29087  004B44  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29088  004B46  26D9               	addwf	fsr2l,f,c
 29089  004B48  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29090  004B4A  22DA               	addwfc	fsr2h,f,c
 29091  004B4C  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 29092  004B50  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 29093  004B54  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 29094  004B58  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 29095  004B5C  ECB8  F029         	call	_SetBaudRate	;wreg free
 29096                           
 29097                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 29098  004B60  0100               	movlb	0	; () banked
 29099  004B62  EE20 F008          	lfsr	2,8
 29100  004B66  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29101  004B68  26D9               	addwf	fsr2l,f,c
 29102  004B6A  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29103  004B6C  22DA               	addwfc	fsr2h,f,c
 29104  004B6E  50DF               	movf	indf2,w,c
 29105  004B70  1272               	iorwf	3954,f,c	;volatile
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 29109  004B72  EE20 F009          	lfsr	2,9
 29110  004B76  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 29111  004B78  26D9               	addwf	fsr2l,f,c
 29112  004B7A  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 29113  004B7C  22DA               	addwfc	fsr2h,f,c
 29114  004B7E  50DF               	movf	indf2,w,c
 29115  004B80  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 29116  004B82  0E05               	movlw	5
 29117  004B84  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 29118  004B86                     u7915:
 29119  004B86  90D8               	bcf	status,0,c
 29120  004B88  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 29121  004B8A  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 29122  004B8C  D7FC               	goto	u7915
 29123  004B8E  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 29124  004B90  1272               	iorwf	3954,f,c	;volatile
 29125                           
 29126                           ; BSR set to: 0
 29127  004B92  0012               	return		;funcret
 29128  004B94                     __end_of_I2c_InitI2cModule:
 29129                           	opt stack 0
 29130                           tosu	equ	0xFFF
 29131                           tosh	equ	0xFFE
 29132                           tosl	equ	0xFFD
 29133                           pclath	equ	0xFFA
 29134                           tblptru	equ	0xFF8
 29135                           tblptrh	equ	0xFF7
 29136                           tblptrl	equ	0xFF6
 29137                           tablat	equ	0xFF5
 29138                           prodh	equ	0xFF4
 29139                           prodl	equ	0xFF3
 29140                           intcon	equ	0xFF2
 29141                           intcon2	equ	0xFF1
 29142                           intcon3	equ	0xFF0
 29143                           indf0	equ	0xFEF
 29144                           postinc0	equ	0xFEE
 29145                           plusw0	equ	0xFEB
 29146                           fsr0h	equ	0xFEA
 29147                           fsr0l	equ	0xFE9
 29148                           wreg	equ	0xFE8
 29149                           indf1	equ	0xFE7
 29150                           postinc1	equ	0xFE6
 29151                           postdec1	equ	0xFE5
 29152                           plusw1	equ	0xFE3
 29153                           fsr1h	equ	0xFE2
 29154                           fsr1l	equ	0xFE1
 29155                           indf2	equ	0xFDF
 29156                           postinc2	equ	0xFDE
 29157                           postdec2	equ	0xFDD
 29158                           plusw2	equ	0xFDB
 29159                           fsr2h	equ	0xFDA
 29160                           fsr2l	equ	0xFD9
 29161                           status	equ	0xFD8
 29162                           
 29163 ;; *************** function _SetBaudRate *****************
 29164 ;; Defined at:
 29165 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29166 ;; Parameters:    Size  Location     Type
 29167 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 29168 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 29169 ;; Auto vars:     Size  Location     Type
 29170 ;;		None
 29171 ;; Return value:  Size  Location     Type
 29172 ;;                  1    wreg      void 
 29173 ;; Registers used:
 29174 ;;		wreg, status,2, status,0, cstack
 29175 ;; Tracked objects:
 29176 ;;		On entry : 0/0
 29177 ;;		On exit  : 0/0
 29178 ;;		Unchanged: 0/0
 29179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29180 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29183 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29184 ;;Total ram usage:       12 bytes
 29185 ;; Hardware stack levels used:    1
 29186 ;; Hardware stack levels required when called:   12
 29187 ;; This function calls:
 29188 ;;		___lldiv
 29189 ;; This function is called by:
 29190 ;;		_I2c_InitI2cModule
 29191 ;; This function uses a non-reentrant model
 29192 ;;
 29193                           
 29194                           	psect	text133
 29195  005370                     __ptext133:
 29196                           	opt stack 0
 29197  005370                     _SetBaudRate:
 29198                           	opt stack 14
 29199                           
 29200                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 29201                           
 29202                           ; BSR set to: 0
 29203                           ;incstack = 0
 29204  005370  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 29205  005374  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 29206  005378  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 29207  00537C  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 29208  005380  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 29209  005384  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 29210  005388  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 29211  00538C  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 29212  005390  0E02               	movlw	2
 29213  005392                     u6875:
 29214  005392  90D8               	bcf	status,0,c
 29215  005394  0100               	movlb	0	; () banked
 29216  005396  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 29217  005398  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 29218  00539A  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 29219  00539C  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 29220  00539E  2EE8               	decfsz	wreg,f,c
 29221  0053A0  D7F8               	goto	u6875
 29222  0053A2  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 29223  0053A6  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 29224  0053AA  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 29225  0053AE  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 29226  0053B2  ECD5  F024         	call	___lldiv	;wreg free
 29227  0053B6  0100               	movlb	0	; () banked
 29228  0053B8  0589               	decf	?___lldiv& (0+255),w,b
 29229  0053BA  6E74               	movwf	3956,c	;volatile
 29230                           
 29231                           ; BSR set to: 0
 29232  0053BC  0012               	return		;funcret
 29233  0053BE                     __end_of_SetBaudRate:
 29234                           	opt stack 0
 29235                           tosu	equ	0xFFF
 29236                           tosh	equ	0xFFE
 29237                           tosl	equ	0xFFD
 29238                           pclath	equ	0xFFA
 29239                           tblptru	equ	0xFF8
 29240                           tblptrh	equ	0xFF7
 29241                           tblptrl	equ	0xFF6
 29242                           tablat	equ	0xFF5
 29243                           prodh	equ	0xFF4
 29244                           prodl	equ	0xFF3
 29245                           intcon	equ	0xFF2
 29246                           intcon2	equ	0xFF1
 29247                           intcon3	equ	0xFF0
 29248                           indf0	equ	0xFEF
 29249                           postinc0	equ	0xFEE
 29250                           plusw0	equ	0xFEB
 29251                           fsr0h	equ	0xFEA
 29252                           fsr0l	equ	0xFE9
 29253                           wreg	equ	0xFE8
 29254                           indf1	equ	0xFE7
 29255                           postinc1	equ	0xFE6
 29256                           postdec1	equ	0xFE5
 29257                           plusw1	equ	0xFE3
 29258                           fsr1h	equ	0xFE2
 29259                           fsr1l	equ	0xFE1
 29260                           indf2	equ	0xFDF
 29261                           postinc2	equ	0xFDE
 29262                           postdec2	equ	0xFDD
 29263                           plusw2	equ	0xFDB
 29264                           fsr2h	equ	0xFDA
 29265                           fsr2l	equ	0xFD9
 29266                           status	equ	0xFD8
 29267                           
 29268 ;; *************** function ___lldiv *****************
 29269 ;; Defined at:
 29270 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 29271 ;; Parameters:    Size  Location     Type
 29272 ;;  dividend        4   41[BANK0 ] unsigned long 
 29273 ;;  divisor         4   45[BANK0 ] unsigned long 
 29274 ;; Auto vars:     Size  Location     Type
 29275 ;;  quotient        4   49[BANK0 ] unsigned long 
 29276 ;;  counter         1   53[BANK0 ] unsigned char 
 29277 ;; Return value:  Size  Location     Type
 29278 ;;                  4   41[BANK0 ] unsigned long 
 29279 ;; Registers used:
 29280 ;;		wreg, status,2, status,0
 29281 ;; Tracked objects:
 29282 ;;		On entry : 0/0
 29283 ;;		On exit  : 0/0
 29284 ;;		Unchanged: 0/0
 29285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29286 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29287 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29289 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29290 ;;Total ram usage:       13 bytes
 29291 ;; Hardware stack levels used:    1
 29292 ;; Hardware stack levels required when called:   11
 29293 ;; This function calls:
 29294 ;;		Nothing
 29295 ;; This function is called by:
 29296 ;;		_SetBaudRate
 29297 ;;		_Tmr_TmrBPrSet
 29298 ;;		_SetUartBaudRate
 29299 ;; This function uses a non-reentrant model
 29300 ;;
 29301                           
 29302                           	psect	text134
 29303  0049AA                     __ptext134:
 29304                           	opt stack 0
 29305  0049AA                     ___lldiv:
 29306                           	opt stack 15
 29307                           
 29308                           ; BSR set to: 0
 29309                           ;incstack = 0
 29310  0049AA  0E00               	movlw	0
 29311  0049AC  0100               	movlb	0	; () banked
 29312  0049AE  6F91               	movwf	___lldiv@quotient& (0+255),b
 29313  0049B0  0E00               	movlw	0
 29314  0049B2  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 29315  0049B4  0E00               	movlw	0
 29316  0049B6  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 29317  0049B8  0E00               	movlw	0
 29318  0049BA  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 29319                           
 29320                           ; BSR set to: 0
 29321  0049BC  518D               	movf	___lldiv@divisor& (0+255),w,b
 29322  0049BE  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 29323  0049C0  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 29324  0049C2  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 29325  0049C4  B4D8               	btfsc	status,2,c
 29326  0049C6  D02A               	goto	l2966
 29327                           
 29328                           ; BSR set to: 0
 29329  0049C8  0E01               	movlw	1
 29330  0049CA  6F95               	movwf	___lldiv@counter& (0+255),b
 29331  0049CC  D006               	goto	l2961
 29332  0049CE                     
 29333                           ; BSR set to: 0
 29334                           
 29335                           ; BSR set to: 0
 29336  0049CE  90D8               	bcf	status,0,c
 29337  0049D0  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 29338  0049D2  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 29339  0049D4  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 29340  0049D6  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 29341  0049D8  2B95               	incf	___lldiv@counter& (0+255),f,b
 29342  0049DA                     l2961:
 29343                           
 29344                           ; BSR set to: 0
 29345                           
 29346                           ; BSR set to: 0
 29347  0049DA  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 29348  0049DC  D7F8               	goto	l2962
 29349  0049DE                     u5910:
 29350                           
 29351                           ; BSR set to: 0
 29352                           
 29353                           ; BSR set to: 0
 29354                           
 29355                           ; BSR set to: 0
 29356  0049DE  90D8               	bcf	status,0,c
 29357  0049E0  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 29358  0049E2  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 29359  0049E4  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 29360  0049E6  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 29361                           
 29362                           ; BSR set to: 0
 29363  0049E8  518D               	movf	___lldiv@divisor& (0+255),w,b
 29364  0049EA  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 29365  0049EC  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29366  0049EE  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 29367  0049F0  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29368  0049F2  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 29369  0049F4  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29370  0049F6  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 29371  0049F8  A0D8               	btfss	status,0,c
 29372  0049FA  D009               	goto	l2965
 29373                           
 29374                           ; BSR set to: 0
 29375  0049FC  518D               	movf	___lldiv@divisor& (0+255),w,b
 29376  0049FE  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 29377  004A00  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 29378  004A02  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 29379  004A04  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 29380  004A06  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 29381  004A08  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 29382  004A0A  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 29383                           
 29384                           ; BSR set to: 0
 29385  004A0C  8191               	bsf	___lldiv@quotient& (0+255),0,b
 29386  004A0E                     l2965:
 29387                           
 29388                           ; BSR set to: 0
 29389                           
 29390                           ; BSR set to: 0
 29391  004A0E  90D8               	bcf	status,0,c
 29392  004A10  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 29393  004A12  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 29394  004A14  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 29395  004A16  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 29396                           
 29397                           ; BSR set to: 0
 29398  004A18  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 29399  004A1A  D7E1               	goto	u5910
 29400  004A1C                     l2966:
 29401                           
 29402                           ; BSR set to: 0
 29403                           
 29404                           ; BSR set to: 0
 29405  004A1C  C091  F089         	movff	___lldiv@quotient,?___lldiv
 29406  004A20  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 29407  004A24  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 29408  004A28  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 29409                           
 29410                           ; BSR set to: 0
 29411  004A2C  0012               	return		;funcret
 29412  004A2E                     __end_of___lldiv:
 29413                           	opt stack 0
 29414                           tosu	equ	0xFFF
 29415                           tosh	equ	0xFFE
 29416                           tosl	equ	0xFFD
 29417                           pclath	equ	0xFFA
 29418                           tblptru	equ	0xFF8
 29419                           tblptrh	equ	0xFF7
 29420                           tblptrl	equ	0xFF6
 29421                           tablat	equ	0xFF5
 29422                           prodh	equ	0xFF4
 29423                           prodl	equ	0xFF3
 29424                           intcon	equ	0xFF2
 29425                           intcon2	equ	0xFF1
 29426                           intcon3	equ	0xFF0
 29427                           indf0	equ	0xFEF
 29428                           postinc0	equ	0xFEE
 29429                           plusw0	equ	0xFEB
 29430                           fsr0h	equ	0xFEA
 29431                           fsr0l	equ	0xFE9
 29432                           wreg	equ	0xFE8
 29433                           indf1	equ	0xFE7
 29434                           postinc1	equ	0xFE6
 29435                           postdec1	equ	0xFE5
 29436                           plusw1	equ	0xFE3
 29437                           fsr1h	equ	0xFE2
 29438                           fsr1l	equ	0xFE1
 29439                           indf2	equ	0xFDF
 29440                           postinc2	equ	0xFDE
 29441                           postdec2	equ	0xFDD
 29442                           plusw2	equ	0xFDB
 29443                           fsr2h	equ	0xFDA
 29444                           fsr2l	equ	0xFD9
 29445                           status	equ	0xFD8
 29446                           
 29447 ;; *************** function _I2cSetConfig *****************
 29448 ;; Defined at:
 29449 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 29450 ;; Parameters:    Size  Location     Type
 29451 ;;		None
 29452 ;; Auto vars:     Size  Location     Type
 29453 ;;		None
 29454 ;; Return value:  Size  Location     Type
 29455 ;;                  1    wreg      void 
 29456 ;; Registers used:
 29457 ;;		wreg, status,2
 29458 ;; Tracked objects:
 29459 ;;		On entry : 0/0
 29460 ;;		On exit  : 0/0
 29461 ;;		Unchanged: 0/0
 29462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29467 ;;Total ram usage:        0 bytes
 29468 ;; Hardware stack levels used:    1
 29469 ;; Hardware stack levels required when called:   11
 29470 ;; This function calls:
 29471 ;;		Nothing
 29472 ;; This function is called by:
 29473 ;;		_I2cSlv_MainTask
 29474 ;; This function uses a non-reentrant model
 29475 ;;
 29476                           
 29477                           	psect	text135
 29478  005A4E                     __ptext135:
 29479                           	opt stack 0
 29480  005A4E                     _I2cSetConfig:
 29481                           	opt stack 16
 29482                           
 29483                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 29484                           
 29485                           ; BSR set to: 0
 29486                           ;incstack = 0
 29487  005A4E  0E80               	movlw	128
 29488  005A50  0103               	movlb	3	; () banked
 29489  005A52  6F51               	movwf	_I2cConfig& (0+255),b
 29490  005A54  0E1A               	movlw	26
 29491  005A56  6F52               	movwf	(_I2cConfig+1)& (0+255),b
 29492  005A58  0E06               	movlw	6
 29493  005A5A  6F53               	movwf	(_I2cConfig+2)& (0+255),b
 29494  005A5C  0E00               	movlw	0
 29495  005A5E  6F54               	movwf	(_I2cConfig+3)& (0+255),b
 29496                           
 29497                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 29498  005A60  0E00               	movlw	0
 29499  005A62  6F55               	movwf	(_I2cConfig+4)& (0+255),b
 29500  005A64  0E6C               	movlw	108
 29501  005A66  6F56               	movwf	(_I2cConfig+5)& (0+255),b
 29502  005A68  0EDC               	movlw	220
 29503  005A6A  6F57               	movwf	(_I2cConfig+6)& (0+255),b
 29504  005A6C  0E02               	movlw	2
 29505  005A6E  6F58               	movwf	(_I2cConfig+7)& (0+255),b
 29506                           
 29507                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 29508  005A70  0E08               	movlw	8
 29509  005A72  6F59               	movwf	(_I2cConfig+8)& (0+255),b
 29510                           
 29511                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 29512  005A74  0E01               	movlw	1
 29513  005A76  6F5A               	movwf	(_I2cConfig+9)& (0+255),b
 29514                           
 29515                           ; BSR set to: 3
 29516  005A78  0012               	return		;funcret
 29517  005A7A                     __end_of_I2cSetConfig:
 29518                           	opt stack 0
 29519                           tosu	equ	0xFFF
 29520                           tosh	equ	0xFFE
 29521                           tosl	equ	0xFFD
 29522                           pclath	equ	0xFFA
 29523                           tblptru	equ	0xFF8
 29524                           tblptrh	equ	0xFF7
 29525                           tblptrl	equ	0xFF6
 29526                           tablat	equ	0xFF5
 29527                           prodh	equ	0xFF4
 29528                           prodl	equ	0xFF3
 29529                           intcon	equ	0xFF2
 29530                           intcon2	equ	0xFF1
 29531                           intcon3	equ	0xFF0
 29532                           indf0	equ	0xFEF
 29533                           postinc0	equ	0xFEE
 29534                           plusw0	equ	0xFEB
 29535                           fsr0h	equ	0xFEA
 29536                           fsr0l	equ	0xFE9
 29537                           wreg	equ	0xFE8
 29538                           indf1	equ	0xFE7
 29539                           postinc1	equ	0xFE6
 29540                           postdec1	equ	0xFE5
 29541                           plusw1	equ	0xFE3
 29542                           fsr1h	equ	0xFE2
 29543                           fsr1l	equ	0xFE1
 29544                           indf2	equ	0xFDF
 29545                           postinc2	equ	0xFDE
 29546                           postdec2	equ	0xFDD
 29547                           plusw2	equ	0xFDB
 29548                           fsr2h	equ	0xFDA
 29549                           fsr2l	equ	0xFD9
 29550                           status	equ	0xFD8
 29551                           
 29552 ;; *************** function _I2cSendMsgSm *****************
 29553 ;; Defined at:
 29554 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 29555 ;; Parameters:    Size  Location     Type
 29556 ;;		None
 29557 ;; Auto vars:     Size  Location     Type
 29558 ;;		None
 29559 ;; Return value:  Size  Location     Type
 29560 ;;                  1    wreg      void 
 29561 ;; Registers used:
 29562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29563 ;; Tracked objects:
 29564 ;;		On entry : 0/0
 29565 ;;		On exit  : 0/0
 29566 ;;		Unchanged: 0/0
 29567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29572 ;;Total ram usage:        0 bytes
 29573 ;; Hardware stack levels used:    1
 29574 ;; Hardware stack levels required when called:   13
 29575 ;; This function calls:
 29576 ;;		_I2c_ReadData
 29577 ;;		_I2c_WriteData
 29578 ;;		_ReceiveEvt
 29579 ;; This function is called by:
 29580 ;;		_I2cSlv_MainTask
 29581 ;; This function uses a non-reentrant model
 29582 ;;
 29583                           
 29584                           	psect	text136
 29585  003BDE                     __ptext136:
 29586                           	opt stack 0
 29587  003BDE                     _I2cSendMsgSm:
 29588                           	opt stack 14
 29589                           
 29590                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 29591                           ;i2c_slv.c: 122: switch(I2cComState)
 29592                           
 29593                           ; BSR set to: 3
 29594                           ;incstack = 0
 29595  003BDE  D04F               	goto	l1365
 29596  003BE0                     
 29597                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 29598  003BE0  0ED6               	movlw	low _I2cWriteDataEvt
 29599  003BE2  0100               	movlb	0	; () banked
 29600  003BE4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29601  003BE6  0E00               	movlw	high _I2cWriteDataEvt
 29602  003BE8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29603  003BEA  EC10  F02D         	call	_ReceiveEvt	;wreg free
 29604  003BEE  0900               	iorlw	0
 29605  003BF0  B4D8               	btfsc	status,2,c
 29606  003BF2  D007               	goto	l1367
 29607                           
 29608                           ;i2c_slv.c: 127: {
 29609                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 29610  003BF4  0E01               	movlw	1
 29611  003BF6  0101               	movlb	1	; () banked
 29612  003BF8  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29613                           
 29614                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 29615  003BFA  0E01               	movlw	1
 29616  003BFC  0100               	movlb	0	; () banked
 29617  003BFE  6FCC               	movwf	_I2cComSts& (0+255),b
 29618                           
 29619                           ;i2c_slv.c: 132: }
 29620  003C00  0012               	return	
 29621  003C02                     l1367:
 29622                           
 29623                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 29624                           
 29625                           ; BSR set to: 0
 29626  003C02  0ED5               	movlw	low _I2cReadDataEvt
 29627  003C04  0100               	movlb	0	; () banked
 29628  003C06  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29629  003C08  0E00               	movlw	high _I2cReadDataEvt
 29630  003C0A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29631  003C0C  EC10  F02D         	call	_ReceiveEvt	;wreg free
 29632  003C10  0900               	iorlw	0
 29633  003C12  B4D8               	btfsc	status,2,c
 29634  003C14  D007               	goto	l1369
 29635                           
 29636                           ;i2c_slv.c: 134: {
 29637                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 29638  003C16  0E02               	movlw	2
 29639  003C18  0101               	movlb	1	; () banked
 29640  003C1A  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29641                           
 29642                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 29643  003C1C  0E02               	movlw	2
 29644  003C1E  0100               	movlb	0	; () banked
 29645  003C20  6FCC               	movwf	_I2cComSts& (0+255),b
 29646                           
 29647                           ;i2c_slv.c: 139: }
 29648  003C22  0012               	return	
 29649  003C24                     l1369:
 29650                           
 29651                           ;i2c_slv.c: 140: else
 29652                           ;i2c_slv.c: 141: {
 29653                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 29654                           
 29655                           ; BSR set to: 0
 29656  003C24  0E00               	movlw	0
 29657  003C26  0100               	movlb	0	; () banked
 29658  003C28  6FCC               	movwf	_I2cComSts& (0+255),b
 29659                           
 29660                           ; BSR set to: 0
 29661                           ;i2c_slv.c: 144: }
 29662                           ;i2c_slv.c: 145: break;
 29663                           
 29664                           ; BSR set to: 0
 29665  003C2A  0012               	return	
 29666  003C2C                     
 29667                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 29668                           
 29669                           ; BSR set to: 0
 29670  003C2C  0E9D               	movlw	low _I2cTxPacket
 29671  003C2E  0100               	movlb	0	; () banked
 29672  003C30  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 29673  003C32  0E03               	movlw	high _I2cTxPacket
 29674  003C34  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 29675  003C36  EC99  F00E         	call	_I2c_WriteData	;wreg free
 29676  003C3A  0900               	iorlw	0
 29677  003C3C  B4D8               	btfsc	status,2,c
 29678  003C3E  0012               	return	
 29679                           
 29680                           ;i2c_slv.c: 150: {
 29681                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 29682  003C40  0E03               	movlw	3
 29683  003C42  0101               	movlb	1	; () banked
 29684  003C44  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29685                           
 29686                           ; BSR set to: 1
 29687                           ;i2c_slv.c: 153: }
 29688                           ;i2c_slv.c: 154: break;
 29689  003C46  0012               	return	
 29690  003C48                     
 29691                           ; BSR set to: 1
 29692                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 29693                           
 29694                           ; BSR set to: 1
 29695  003C48  0E97               	movlw	low _I2cRxPacket
 29696  003C4A  0100               	movlb	0	; () banked
 29697  003C4C  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 29698  003C4E  0E03               	movlw	high _I2cRxPacket
 29699  003C50  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 29700  003C52  EC50  F00F         	call	_I2c_ReadData	;wreg free
 29701  003C56  0900               	iorlw	0
 29702  003C58  B4D8               	btfsc	status,2,c
 29703  003C5A  0012               	return	
 29704                           
 29705                           ;i2c_slv.c: 159: {
 29706                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 29707  003C5C  0E04               	movlw	4
 29708  003C5E  0101               	movlb	1	; () banked
 29709  003C60  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29710                           
 29711                           ; BSR set to: 1
 29712                           ;i2c_slv.c: 162: }
 29713                           ;i2c_slv.c: 164: break;
 29714  003C62  0012               	return	
 29715  003C64                     
 29716                           ; BSR set to: 1
 29717                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 29718                           
 29719                           ; BSR set to: 1
 29720  003C64  0E00               	movlw	0
 29721  003C66  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29722                           
 29723                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 29724  003C68  0E00               	movlw	0
 29725  003C6A  0100               	movlb	0	; () banked
 29726  003C6C  6FCC               	movwf	_I2cComSts& (0+255),b
 29727                           
 29728                           ;i2c_slv.c: 171: break;
 29729  003C6E  0012               	return	
 29730  003C70                     
 29731                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 29732                           
 29733                           ; BSR set to: 0
 29734  003C70  0E00               	movlw	0
 29735  003C72  0101               	movlb	1	; () banked
 29736  003C74  6FEA               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 29737                           
 29738                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 29739  003C76  0E00               	movlw	0
 29740  003C78  0100               	movlb	0	; () banked
 29741  003C7A  6FCC               	movwf	_I2cComSts& (0+255),b
 29742                           
 29743                           ; BSR set to: 0
 29744                           ;i2c_slv.c: 182: }
 29745                           
 29746                           ; BSR set to: 0
 29747                           ;i2c_slv.c: 181: break;
 29748                           
 29749                           ;i2c_slv.c: 180: default:
 29750                           
 29751                           ;i2c_slv.c: 178: break;
 29752  003C7C  0012               	return	
 29753  003C7E                     l1365:
 29754                           
 29755                           ; BSR set to: 0
 29756  003C7E  0101               	movlb	1	; () banked
 29757  003C80  51EA               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 29758                           
 29759                           ; Switch size 1, requested type "space"
 29760                           ; Number of cases is 5, Range of values is 0 to 4
 29761                           ; switch strategies available:
 29762                           ; Name         Instructions Cycles
 29763                           ; simple_byte           16     9 (average)
 29764                           ;	Chosen strategy is simple_byte
 29765  003C82  0A00               	xorlw	0	; case 0
 29766  003C84  B4D8               	btfsc	status,2,c
 29767  003C86  D7AC               	goto	l1366
 29768  003C88  0A01               	xorlw	1	; case 1
 29769  003C8A  B4D8               	btfsc	status,2,c
 29770  003C8C  D7CF               	goto	l1372
 29771  003C8E  0A03               	xorlw	3	; case 2
 29772  003C90  B4D8               	btfsc	status,2,c
 29773  003C92  D7DA               	goto	l1374
 29774  003C94  0A01               	xorlw	1	; case 3
 29775  003C96  B4D8               	btfsc	status,2,c
 29776  003C98  D7E5               	goto	l1376
 29777  003C9A  0A07               	xorlw	7	; case 4
 29778  003C9C  A4D8               	btfss	status,2,c
 29779  003C9E  0012               	return	
 29780  003CA0  D7E7               	goto	l1377
 29781  003CA2                     __end_of_I2cSendMsgSm:
 29782                           	opt stack 0
 29783                           tosu	equ	0xFFF
 29784                           tosh	equ	0xFFE
 29785                           tosl	equ	0xFFD
 29786                           pclath	equ	0xFFA
 29787                           tblptru	equ	0xFF8
 29788                           tblptrh	equ	0xFF7
 29789                           tblptrl	equ	0xFF6
 29790                           tablat	equ	0xFF5
 29791                           prodh	equ	0xFF4
 29792                           prodl	equ	0xFF3
 29793                           intcon	equ	0xFF2
 29794                           intcon2	equ	0xFF1
 29795                           intcon3	equ	0xFF0
 29796                           indf0	equ	0xFEF
 29797                           postinc0	equ	0xFEE
 29798                           plusw0	equ	0xFEB
 29799                           fsr0h	equ	0xFEA
 29800                           fsr0l	equ	0xFE9
 29801                           wreg	equ	0xFE8
 29802                           indf1	equ	0xFE7
 29803                           postinc1	equ	0xFE6
 29804                           postdec1	equ	0xFE5
 29805                           plusw1	equ	0xFE3
 29806                           fsr1h	equ	0xFE2
 29807                           fsr1l	equ	0xFE1
 29808                           indf2	equ	0xFDF
 29809                           postinc2	equ	0xFDE
 29810                           postdec2	equ	0xFDD
 29811                           plusw2	equ	0xFDB
 29812                           fsr2h	equ	0xFDA
 29813                           fsr2l	equ	0xFD9
 29814                           status	equ	0xFD8
 29815                           
 29816 ;; *************** function _ReceiveEvt *****************
 29817 ;; Defined at:
 29818 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 29819 ;; Parameters:    Size  Location     Type
 29820 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 29821 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 29822 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 29823 ;;		 -> RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), 
 29824 ;;		 -> NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), ActivateRiDetection(1), 
 29825 ;; Auto vars:     Size  Location     Type
 29826 ;;  EventStatus     1   32[BANK0 ] enum E7727
 29827 ;; Return value:  Size  Location     Type
 29828 ;;                  1    wreg      enum E7699
 29829 ;; Registers used:
 29830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29831 ;; Tracked objects:
 29832 ;;		On entry : 0/0
 29833 ;;		On exit  : 0/0
 29834 ;;		Unchanged: 0/0
 29835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29839 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29840 ;;Total ram usage:        4 bytes
 29841 ;; Hardware stack levels used:    1
 29842 ;; Hardware stack levels required when called:   11
 29843 ;; This function calls:
 29844 ;;		Nothing
 29845 ;; This function is called by:
 29846 ;;		_MdmCntSm
 29847 ;;		_CheckModem
 29848 ;;		_ModemEvtParser
 29849 ;;		_GetSmsSm
 29850 ;;		_SendSmsSm
 29851 ;;		_InitGprsNetwork
 29852 ;;		_HttpGetMethod
 29853 ;;		_I2cSendMsgSm
 29854 ;;		_I2cSlv_I2cReadMsgSts
 29855 ;;		_MyApp_Task
 29856 ;;		_RiSm
 29857 ;;		_Mdm_GetSmsData
 29858 ;;		_Mdm_IsSmsReceived
 29859 ;;		_Mdm_IsRinging
 29860 ;;		_GsmGprsTerminal
 29861 ;; This function uses a non-reentrant model
 29862 ;;
 29863                           
 29864                           	psect	text137
 29865  005A20                     __ptext137:
 29866                           	opt stack 0
 29867  005A20                     _ReceiveEvt:
 29868                           	opt stack 13
 29869                           
 29870                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 29871                           
 29872                           ;incstack = 0
 29873  005A20  0E00               	movlw	0
 29874  005A22  0100               	movlb	0	; () banked
 29875  005A24  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 29879  005A26  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 29880  005A2A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 29881  005A2E  0E02               	movlw	2
 29882  005A30  18DE               	xorwf	postinc2,w,c
 29883  005A32  A4D8               	btfss	status,2,c
 29884  005A34  D008               	goto	l832
 29885                           
 29886                           ; BSR set to: 0
 29887                           ;os_ser.c: 106: {
 29888                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 29889  005A36  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 29890  005A3A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 29891  005A3E  0E01               	movlw	1
 29892  005A40  6EDF               	movwf	indf2,c
 29893                           
 29894                           ; BSR set to: 0
 29895                           ;os_ser.c: 110: EventStatus = EventReceived;
 29896  005A42  0E01               	movlw	1
 29897  005A44  D001               	goto	L46
 29898  005A46                     l832:
 29899                           
 29900                           ; BSR set to: 0
 29901                           ;os_ser.c: 112: else
 29902                           ;os_ser.c: 113: {
 29903                           ;os_ser.c: 115: EventStatus = EventIdle;
 29904                           
 29905                           ; BSR set to: 0
 29906  005A46  0E00               	movlw	0
 29907  005A48                     L46:
 29908  005A48  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 29909                           
 29910                           ; BSR set to: 0
 29911                           ;os_ser.c: 116: }
 29912                           ;os_ser.c: 119: return(EventStatus);
 29913  005A4A  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 29914  005A4C  0012               	return	
 29915  005A4E                     __end_of_ReceiveEvt:
 29916                           	opt stack 0
 29917                           tosu	equ	0xFFF
 29918                           tosh	equ	0xFFE
 29919                           tosl	equ	0xFFD
 29920                           pclath	equ	0xFFA
 29921                           tblptru	equ	0xFF8
 29922                           tblptrh	equ	0xFF7
 29923                           tblptrl	equ	0xFF6
 29924                           tablat	equ	0xFF5
 29925                           prodh	equ	0xFF4
 29926                           prodl	equ	0xFF3
 29927                           intcon	equ	0xFF2
 29928                           intcon2	equ	0xFF1
 29929                           intcon3	equ	0xFF0
 29930                           indf0	equ	0xFEF
 29931                           postinc0	equ	0xFEE
 29932                           plusw0	equ	0xFEB
 29933                           fsr0h	equ	0xFEA
 29934                           fsr0l	equ	0xFE9
 29935                           wreg	equ	0xFE8
 29936                           indf1	equ	0xFE7
 29937                           postinc1	equ	0xFE6
 29938                           postdec1	equ	0xFE5
 29939                           plusw1	equ	0xFE3
 29940                           fsr1h	equ	0xFE2
 29941                           fsr1l	equ	0xFE1
 29942                           indf2	equ	0xFDF
 29943                           postinc2	equ	0xFDE
 29944                           postdec2	equ	0xFDD
 29945                           plusw2	equ	0xFDB
 29946                           fsr2h	equ	0xFDA
 29947                           fsr2l	equ	0xFD9
 29948                           status	equ	0xFD8
 29949                           
 29950 ;; *************** function _I2c_WriteData *****************
 29951 ;; Defined at:
 29952 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 29953 ;; Parameters:    Size  Location     Type
 29954 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 29955 ;;		 -> I2cTxPacket(5), 
 29956 ;; Auto vars:     Size  Location     Type
 29957 ;;		None
 29958 ;; Return value:  Size  Location     Type
 29959 ;;                  1    wreg      enum E7740
 29960 ;; Registers used:
 29961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29962 ;; Tracked objects:
 29963 ;;		On entry : 0/0
 29964 ;;		On exit  : 0/0
 29965 ;;		Unchanged: 0/0
 29966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29969 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29970 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29971 ;;Total ram usage:        4 bytes
 29972 ;; Hardware stack levels used:    1
 29973 ;; Hardware stack levels required when called:   12
 29974 ;; This function calls:
 29975 ;;		_CheckAckStatus
 29976 ;;		_CheckTxStatus
 29977 ;;		_StartCondition
 29978 ;;		_StopCondition
 29979 ;;		_WriteByte
 29980 ;; This function is called by:
 29981 ;;		_I2cSendMsgSm
 29982 ;; This function uses a non-reentrant model
 29983 ;;
 29984                           
 29985                           	psect	text138
 29986  001D32                     __ptext138:
 29987                           	opt stack 0
 29988  001D32                     _I2c_WriteData:
 29989                           	opt stack 14
 29990                           
 29991                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 29992                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 29993                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 29994                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 29995                           ;i2c_drv.c: 260: switch (I2cWriteState)
 29996                           
 29997                           ; BSR set to: 0
 29998                           ;incstack = 0
 29999  001D32  D095               	goto	l160
 30000  001D34                     
 30001                           ;i2c_drv.c: 264: StartCondition();
 30002  001D34  EC53  F02F         	call	_StartCondition	;wreg free
 30003                           
 30004                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 30005  001D38  0E00               	movlw	0
 30006  001D3A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30007                           
 30008                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 30009  001D3C  0E01               	movlw	1
 30010  001D3E  D084               	goto	L53
 30011  001D40                     
 30012                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 30013  001D40  0100               	movlb	0	; () banked
 30014  001D42  EE20 F001          	lfsr	2,1
 30015  001D46  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30016  001D48  26D9               	addwf	fsr2l,f,c
 30017  001D4A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30018  001D4C  22DA               	addwfc	fsr2h,f,c
 30019  001D4E  50DF               	movf	indf2,w,c
 30020  001D50  6F80               	movwf	??_I2c_WriteData& (0+255),b
 30021  001D52  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30022  001D56  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30023  001D5A  50DF               	movf	indf2,w,c
 30024  001D5C  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 30025  001D5E  90D8               	bcf	status,0,c
 30026  001D60  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 30027  001D62  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 30028  001D64  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30029  001D68  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30030  001D6C  6EDF               	movwf	indf2,c
 30031                           
 30032                           ; BSR set to: 0
 30033                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 30034  001D6E  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 30035  001D72  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 30036  001D76  50DF               	movf	indf2,w,c
 30037  001D78  EC31  F02F         	call	_WriteByte
 30038                           
 30039                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 30040  001D7C  0E02               	movlw	2
 30041  001D7E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30042  001D80                     
 30043                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 30044  001D80  EC3B  F02F         	call	_CheckTxStatus	;wreg free
 30045  001D84  0900               	iorlw	0
 30046  001D86  A4D8               	btfss	status,2,c
 30047  001D88  D089               	goto	l162
 30048                           
 30049                           ;i2c_drv.c: 282: {
 30050                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 30051  001D8A  0E03               	movlw	3
 30052  001D8C  D01A               	goto	L55
 30053  001D8E                     
 30054                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 30055  001D8E  0100               	movlb	0	; () banked
 30056  001D90  EE20 F002          	lfsr	2,2
 30057  001D94  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30058  001D96  26D9               	addwf	fsr2l,f,c
 30059  001D98  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30060  001D9A  22DA               	addwfc	fsr2h,f,c
 30061  001D9C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 30062  001DA0  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 30063  001DA4  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 30064  001DA8  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 30065  001DAC  50DF               	movf	indf2,w,c
 30066  001DAE  EC31  F02F         	call	_WriteByte
 30067                           
 30068                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 30069  001DB2  0E04               	movlw	4
 30070  001DB4  D049               	goto	L53
 30071  001DB6                     
 30072                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 30073  001DB6  EC3B  F02F         	call	_CheckTxStatus	;wreg free
 30074  001DBA  0900               	iorlw	0
 30075  001DBC  A4D8               	btfss	status,2,c
 30076  001DBE  D06E               	goto	l162
 30077                           
 30078                           ;i2c_drv.c: 300: {
 30079                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 30080  001DC0  0E05               	movlw	5
 30081  001DC2                     L55:
 30082  001DC2  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30083                           
 30084                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 30085  001DC4  0E08               	movlw	8
 30086  001DC6  D040               	goto	L53
 30087  001DC8                     
 30088                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 30089  001DC8  0100               	movlb	0	; () banked
 30090  001DCA  EE20 F004          	lfsr	2,4
 30091  001DCE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30092  001DD0  26D9               	addwf	fsr2l,f,c
 30093  001DD2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30094  001DD4  22DA               	addwfc	fsr2h,f,c
 30095  001DD6  50DF               	movf	indf2,w,c
 30096  001DD8  B4D8               	btfsc	status,2,c
 30097  001DDA  D010               	goto	l170
 30098                           
 30099                           ; BSR set to: 0
 30100                           ;i2c_drv.c: 310: {
 30101                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 30102  001DDC  EE20 F004          	lfsr	2,4
 30103  001DE0  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30104  001DE2  26D9               	addwf	fsr2l,f,c
 30105  001DE4  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30106  001DE6  22DA               	addwfc	fsr2h,f,c
 30107  001DE8  06DF               	decf	indf2,f,c
 30108                           
 30109                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 30110  001DEA  EE20 F002          	lfsr	2,2
 30111  001DEE  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30112  001DF0  26D9               	addwf	fsr2l,f,c
 30113  001DF2  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30114  001DF4  22DA               	addwfc	fsr2h,f,c
 30115  001DF6  2ADE               	incf	postinc2,f,c
 30116  001DF8  0E00               	movlw	0
 30117  001DFA  22DD               	addwfc	postdec2,f,c
 30118  001DFC                     l170:
 30119                           
 30120                           ; BSR set to: 0
 30121                           ;i2c_drv.c: 315: }
 30122                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 30123  001DFC  EE20 F004          	lfsr	2,4
 30124  001E00  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 30125  001E02  26D9               	addwf	fsr2l,f,c
 30126  001E04  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 30127  001E06  22DA               	addwfc	fsr2h,f,c
 30128  001E08  50DF               	movf	indf2,w,c
 30129  001E0A  A4D8               	btfss	status,2,c
 30130  001E0C  D002               	goto	l171
 30131                           
 30132                           ; BSR set to: 0
 30133                           ;i2c_drv.c: 319: {
 30134                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 30135  001E0E  0E06               	movlw	6
 30136  001E10  D01B               	goto	L53
 30137  001E12                     l171:
 30138                           
 30139                           ; BSR set to: 0
 30140                           ;i2c_drv.c: 323: else
 30141                           ;i2c_drv.c: 324: {
 30142                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 30143                           
 30144                           ; BSR set to: 0
 30145  001E12  0E03               	movlw	3
 30146  001E14  D019               	goto	L53
 30147  001E16                     
 30148                           ;i2c_drv.c: 332: StopCondition();
 30149                           
 30150                           ; BSR set to: 0
 30151  001E16  EC51  F02F         	call	_StopCondition	;wreg free
 30152                           
 30153                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 30154  001E1A  0E07               	movlw	7
 30155  001E1C  D015               	goto	L53
 30156  001E1E                     
 30157                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 30158  001E1E  0E00               	movlw	0
 30159  001E20  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30160                           
 30161                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 30162  001E22  0E00               	movlw	0
 30163  001E24  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30164                           
 30165                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 30166  001E26  0E02               	movlw	2
 30167  001E28  D018               	goto	L54
 30168  001E2A                     
 30169                           ;i2c_drv.c: 347: TentativeCounter++;
 30170  001E2A  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 30171                           
 30172                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 30173  001E2C  EC40  F02F         	call	_CheckAckStatus	;wreg free
 30174  001E30  0900               	iorlw	0
 30175  001E32  A4D8               	btfss	status,2,c
 30176  001E34  D005               	goto	l176
 30177                           
 30178                           ;i2c_drv.c: 350: {
 30179                           ;i2c_drv.c: 352: TentativeCounter = 0;
 30180  001E36  0E00               	movlw	0
 30181  001E38  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30182                           
 30183                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 30184  001E3A  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 30185                           
 30186                           ;i2c_drv.c: 355: }
 30187  001E3E  D02E               	goto	l162
 30188  001E40                     l176:
 30189                           
 30190                           ;i2c_drv.c: 356: else
 30191                           ;i2c_drv.c: 357: {
 30192                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 30193  001E40  0E02               	movlw	2
 30194  001E42  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 30195  001E44  D02B               	goto	l162
 30196                           
 30197                           ;i2c_drv.c: 360: {
 30198                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 30199  001E46  0E09               	movlw	9
 30200  001E48                     L53:
 30201  001E48  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30202                           
 30203                           ;i2c_drv.c: 363: }
 30204                           ;i2c_drv.c: 364: }
 30205                           ;i2c_drv.c: 365: break;
 30206  001E4A  D028               	goto	l162
 30207  001E4C                     
 30208                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 30209  001E4C  0E00               	movlw	0
 30210  001E4E  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 30211                           
 30212                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 30213  001E50  0E00               	movlw	0
 30214  001E52  6E37               	movwf	I2c_WriteData@I2cNextState,c
 30215                           
 30216                           ;i2c_drv.c: 372: TentativeCounter = 0;
 30217  001E54  0E00               	movlw	0
 30218  001E56  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 30219                           
 30220                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 30221  001E58  0E01               	movlw	1
 30222  001E5A                     L54:
 30223  001E5A  6E35               	movwf	I2c_WriteData@WriteStatus,c
 30224                           
 30225                           ;i2c_drv.c: 379: }
 30226                           
 30227                           ;i2c_drv.c: 378: break;
 30228                           
 30229                           ;i2c_drv.c: 377: default:
 30230                           
 30231                           ;i2c_drv.c: 375: break;
 30232  001E5C  D01F               	goto	l162
 30233  001E5E                     l160:
 30234  001E5E  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 30235                           
 30236                           ; Switch size 1, requested type "space"
 30237                           ; Number of cases is 10, Range of values is 0 to 9
 30238                           ; switch strategies available:
 30239                           ; Name         Instructions Cycles
 30240                           ; simple_byte           31    16 (average)
 30241                           ;	Chosen strategy is simple_byte
 30242  001E60  0A00               	xorlw	0	; case 0
 30243  001E62  B4D8               	btfsc	status,2,c
 30244  001E64  D767               	goto	l161
 30245  001E66  0A01               	xorlw	1	; case 1
 30246  001E68  B4D8               	btfsc	status,2,c
 30247  001E6A  D76A               	goto	l163
 30248  001E6C  0A03               	xorlw	3	; case 2
 30249  001E6E  B4D8               	btfsc	status,2,c
 30250  001E70  D787               	goto	l164
 30251  001E72  0A01               	xorlw	1	; case 3
 30252  001E74  B4D8               	btfsc	status,2,c
 30253  001E76  D78B               	goto	l166
 30254  001E78  0A07               	xorlw	7	; case 4
 30255  001E7A  B4D8               	btfsc	status,2,c
 30256  001E7C  D79C               	goto	l167
 30257  001E7E  0A01               	xorlw	1	; case 5
 30258  001E80  B4D8               	btfsc	status,2,c
 30259  001E82  D7A2               	goto	l169
 30260  001E84  0A03               	xorlw	3	; case 6
 30261  001E86  B4D8               	btfsc	status,2,c
 30262  001E88  D7C6               	goto	l173
 30263  001E8A  0A01               	xorlw	1	; case 7
 30264  001E8C  B4D8               	btfsc	status,2,c
 30265  001E8E  D7C7               	goto	l174
 30266  001E90  0A0F               	xorlw	15	; case 8
 30267  001E92  B4D8               	btfsc	status,2,c
 30268  001E94  D7CA               	goto	l175
 30269  001E96  0A01               	xorlw	1	; case 9
 30270  001E98  B4D8               	btfsc	status,2,c
 30271  001E9A  D7D8               	goto	l179
 30272  001E9C                     l162:
 30273                           
 30274                           ;i2c_drv.c: 382: return WriteStatus;
 30275  001E9C  5035               	movf	I2c_WriteData@WriteStatus,w,c
 30276  001E9E  0012               	return	
 30277  001EA0                     __end_of_I2c_WriteData:
 30278                           	opt stack 0
 30279                           tosu	equ	0xFFF
 30280                           tosh	equ	0xFFE
 30281                           tosl	equ	0xFFD
 30282                           pclath	equ	0xFFA
 30283                           tblptru	equ	0xFF8
 30284                           tblptrh	equ	0xFF7
 30285                           tblptrl	equ	0xFF6
 30286                           tablat	equ	0xFF5
 30287                           prodh	equ	0xFF4
 30288                           prodl	equ	0xFF3
 30289                           intcon	equ	0xFF2
 30290                           intcon2	equ	0xFF1
 30291                           intcon3	equ	0xFF0
 30292                           indf0	equ	0xFEF
 30293                           postinc0	equ	0xFEE
 30294                           plusw0	equ	0xFEB
 30295                           fsr0h	equ	0xFEA
 30296                           fsr0l	equ	0xFE9
 30297                           wreg	equ	0xFE8
 30298                           indf1	equ	0xFE7
 30299                           postinc1	equ	0xFE6
 30300                           postdec1	equ	0xFE5
 30301                           plusw1	equ	0xFE3
 30302                           fsr1h	equ	0xFE2
 30303                           fsr1l	equ	0xFE1
 30304                           indf2	equ	0xFDF
 30305                           postinc2	equ	0xFDE
 30306                           postdec2	equ	0xFDD
 30307                           plusw2	equ	0xFDB
 30308                           fsr2h	equ	0xFDA
 30309                           fsr2l	equ	0xFD9
 30310                           status	equ	0xFD8
 30311                           
 30312 ;; *************** function _I2c_ReadData *****************
 30313 ;; Defined at:
 30314 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30315 ;; Parameters:    Size  Location     Type
 30316 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 30317 ;;		 -> I2cRxPacket(6), 
 30318 ;; Auto vars:     Size  Location     Type
 30319 ;;		None
 30320 ;; Return value:  Size  Location     Type
 30321 ;;                  1    wreg      enum E7787
 30322 ;; Registers used:
 30323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30324 ;; Tracked objects:
 30325 ;;		On entry : 0/0
 30326 ;;		On exit  : 0/0
 30327 ;;		Unchanged: 0/0
 30328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30333 ;;Total ram usage:        4 bytes
 30334 ;; Hardware stack levels used:    1
 30335 ;; Hardware stack levels required when called:   12
 30336 ;; This function calls:
 30337 ;;		_CheckAckStatus
 30338 ;;		_CheckTxStatus
 30339 ;;		_EnableReceiver
 30340 ;;		_GenerateEvt
 30341 ;;		_ReadByte
 30342 ;;		_SetAckStatus
 30343 ;;		_StartCondition
 30344 ;;		_StopCondition
 30345 ;;		_WriteByte
 30346 ;; This function is called by:
 30347 ;;		_I2cSendMsgSm
 30348 ;; This function uses a non-reentrant model
 30349 ;;
 30350                           
 30351                           	psect	text139
 30352  001EA0                     __ptext139:
 30353                           	opt stack 0
 30354  001EA0                     _I2c_ReadData:
 30355                           	opt stack 14
 30356                           
 30357                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 30358                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 30359                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 30360                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 30361                           ;i2c_drv.c: 402: switch (I2cReadState)
 30362                           
 30363                           ;incstack = 0
 30364  001EA0  D090               	goto	l192
 30365  001EA2                     
 30366                           ;i2c_drv.c: 406: StartCondition();
 30367  001EA2  EC53  F02F         	call	_StartCondition	;wreg free
 30368                           
 30369                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 30370  001EA6  0E00               	movlw	0
 30371  001EA8  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30372                           
 30373                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 30374  001EAA  0E01               	movlw	1
 30375  001EAC  D083               	goto	L63
 30376  001EAE                     
 30377                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 30378  001EAE  0100               	movlb	0	; () banked
 30379  001EB0  EE20 F001          	lfsr	2,1
 30380  001EB4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30381  001EB6  26D9               	addwf	fsr2l,f,c
 30382  001EB8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30383  001EBA  22DA               	addwfc	fsr2h,f,c
 30384  001EBC  50DF               	movf	indf2,w,c
 30385  001EBE  6F82               	movwf	??_I2c_ReadData& (0+255),b
 30386  001EC0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30387  001EC4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30388  001EC8  50DF               	movf	indf2,w,c
 30389  001ECA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 30390  001ECC  90D8               	bcf	status,0,c
 30391  001ECE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 30392  001ED0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 30393  001ED2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30394  001ED6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30395  001EDA  6EDF               	movwf	indf2,c
 30396                           
 30397                           ; BSR set to: 0
 30398                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 30399  001EDC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 30400  001EE0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 30401  001EE4  50DF               	movf	indf2,w,c
 30402  001EE6  EC31  F02F         	call	_WriteByte
 30403                           
 30404                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 30405  001EEA  0E02               	movlw	2
 30406  001EEC  D063               	goto	L63
 30407  001EEE                     
 30408                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 30409  001EEE  EC3B  F02F         	call	_CheckTxStatus	;wreg free
 30410  001EF2  0900               	iorlw	0
 30411  001EF4  A4D8               	btfss	status,2,c
 30412  001EF6  D081               	goto	l194
 30413                           
 30414                           ;i2c_drv.c: 425: {
 30415                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 30416  001EF8  0E03               	movlw	3
 30417  001EFA  D05C               	goto	L63
 30418  001EFC                     
 30419                           ;i2c_drv.c: 433: TentativeCounter++;
 30420  001EFC  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 30421                           
 30422                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 30423  001EFE  EC40  F02F         	call	_CheckAckStatus	;wreg free
 30424  001F02  0900               	iorlw	0
 30425  001F04  A4D8               	btfss	status,2,c
 30426  001F06  D004               	goto	l199
 30427                           
 30428                           ;i2c_drv.c: 436: {
 30429                           ;i2c_drv.c: 438: TentativeCounter = 0;
 30430  001F08  0E00               	movlw	0
 30431  001F0A  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 30432  001F0C                     
 30433                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 30434  001F0C  0E04               	movlw	4
 30435  001F0E  D052               	goto	L63
 30436  001F10                     l199:
 30437                           
 30438                           ;i2c_drv.c: 442: else
 30439                           ;i2c_drv.c: 443: {
 30440                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 30441  001F10  0E02               	movlw	2
 30442  001F12  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 30443  001F14  D072               	goto	l194
 30444                           
 30445                           ;i2c_drv.c: 446: {
 30446                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 30447  001F16  0E08               	movlw	8
 30448  001F18  D04D               	goto	L63
 30449  001F1A                     
 30450                           ;i2c_drv.c: 455: EnableReceiver();
 30451  001F1A  EC55  F02F         	call	_EnableReceiver	;wreg free
 30452                           
 30453                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 30454  001F1E  0E05               	movlw	5
 30455  001F20  D049               	goto	L63
 30456  001F22                     
 30457                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 30458  001F22  EC3B  F02F         	call	_CheckTxStatus	;wreg free
 30459  001F26  0900               	iorlw	0
 30460  001F28  A4D8               	btfss	status,2,c
 30461  001F2A  D067               	goto	l194
 30462                           
 30463                           ;i2c_drv.c: 463: {
 30464                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 30465  001F2C  0100               	movlb	0	; () banked
 30466  001F2E  EE20 F002          	lfsr	2,2
 30467  001F32  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30468  001F34  26D9               	addwf	fsr2l,f,c
 30469  001F36  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30470  001F38  22DA               	addwfc	fsr2h,f,c
 30471  001F3A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 30472  001F3E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 30473  001F42  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 30474  001F46  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 30475  001F4A  EC36  F02F         	call	_ReadByte	;wreg free
 30476  001F4E  6EDF               	movwf	indf2,c
 30477                           
 30478                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 30479  001F50  0100               	movlb	0	; () banked
 30480  001F52  EE20 F002          	lfsr	2,2
 30481  001F56  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30482  001F58  26D9               	addwf	fsr2l,f,c
 30483  001F5A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30484  001F5C  22DA               	addwfc	fsr2h,f,c
 30485  001F5E  2ADE               	incf	postinc2,f,c
 30486  001F60  0E00               	movlw	0
 30487  001F62  22DD               	addwfc	postdec2,f,c
 30488                           
 30489                           ; BSR set to: 0
 30490                           ;i2c_drv.c: 469: DataCounter++;
 30491  001F64  2A33               	incf	I2c_ReadData@DataCounter,f,c
 30492                           
 30493                           ; BSR set to: 0
 30494                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 30495  001F66  0E06               	movlw	6
 30496  001F68  D025               	goto	L63
 30497  001F6A                     
 30498                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 30499                           
 30500                           ; BSR set to: 0
 30501  001F6A  0100               	movlb	0	; () banked
 30502  001F6C  EE20 F004          	lfsr	2,4
 30503  001F70  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 30504  001F72  26D9               	addwf	fsr2l,f,c
 30505  001F74  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30506  001F76  22DA               	addwfc	fsr2h,f,c
 30507  001F78  50DE               	movf	postinc2,w,c
 30508  001F7A  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 30509  001F7C  A0D8               	btfss	status,0,c
 30510  001F7E  D008               	goto	l206
 30511                           
 30512                           ; BSR set to: 0
 30513                           ;i2c_drv.c: 478: {
 30514                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 30515  001F80  0E01               	movlw	1
 30516  001F82  ECDC  F02E         	call	_SetAckStatus
 30517                           
 30518                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 30519  001F86  0E07               	movlw	7
 30520  001F88  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30521                           
 30522                           ;i2c_drv.c: 484: DataCounter = 0;
 30523  001F8A  0E00               	movlw	0
 30524  001F8C  6E33               	movwf	I2c_ReadData@DataCounter,c
 30525                           
 30526                           ;i2c_drv.c: 485: }
 30527  001F8E  D035               	goto	l194
 30528  001F90                     l206:
 30529                           
 30530                           ;i2c_drv.c: 486: else
 30531                           ;i2c_drv.c: 487: {
 30532                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 30533  001F90  0E00               	movlw	0
 30534  001F92  ECDC  F02E         	call	_SetAckStatus
 30535  001F96  D7BA               	goto	L64
 30536  001F98                     
 30537                           ;i2c_drv.c: 497: StopCondition();
 30538  001F98  EC51  F02F         	call	_StopCondition	;wreg free
 30539                           
 30540                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 30541  001F9C  0E02               	movlw	2
 30542  001F9E  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30543                           
 30544                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 30545  001FA0  0E05               	movlw	5
 30546  001FA2  0100               	movlb	0	; () banked
 30547  001FA4  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 30548  001FA6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 30549  001FA8  0E00               	movlw	0
 30550  001FAA  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 30551  001FAC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 30552  001FAE  ECA4  F02E         	call	_GenerateEvt	;wreg free
 30553                           
 30554                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 30555  001FB2  0E00               	movlw	0
 30556  001FB4                     L63:
 30557  001FB4  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30558                           
 30559                           ;i2c_drv.c: 504: break;
 30560  001FB6  D021               	goto	l194
 30561  001FB8                     
 30562                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 30563  001FB8  0E00               	movlw	0
 30564  001FBA  6E34               	movwf	I2c_ReadData@I2cReadState,c
 30565                           
 30566                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 30567  001FBC  0E01               	movlw	1
 30568  001FBE  6E31               	movwf	I2c_ReadData@ReadStatus,c
 30569                           
 30570                           ;i2c_drv.c: 515: }
 30571                           
 30572                           ;i2c_drv.c: 514: break;
 30573                           
 30574                           ;i2c_drv.c: 513: default:
 30575                           
 30576                           ;i2c_drv.c: 511: break;
 30577  001FC0  D01C               	goto	l194
 30578  001FC2                     l192:
 30579  001FC2  5034               	movf	I2c_ReadData@I2cReadState,w,c
 30580                           
 30581                           ; Switch size 1, requested type "space"
 30582                           ; Number of cases is 9, Range of values is 0 to 8
 30583                           ; switch strategies available:
 30584                           ; Name         Instructions Cycles
 30585                           ; simple_byte           28    15 (average)
 30586                           ;	Chosen strategy is simple_byte
 30587  001FC4  0A00               	xorlw	0	; case 0
 30588  001FC6  B4D8               	btfsc	status,2,c
 30589  001FC8  D76C               	goto	l193
 30590  001FCA  0A01               	xorlw	1	; case 1
 30591  001FCC  B4D8               	btfsc	status,2,c
 30592  001FCE  D76F               	goto	l195
 30593  001FD0  0A03               	xorlw	3	; case 2
 30594  001FD2  B4D8               	btfsc	status,2,c
 30595  001FD4  D78C               	goto	l196
 30596  001FD6  0A01               	xorlw	1	; case 3
 30597  001FD8  B4D8               	btfsc	status,2,c
 30598  001FDA  D790               	goto	l198
 30599  001FDC  0A07               	xorlw	7	; case 4
 30600  001FDE  B4D8               	btfsc	status,2,c
 30601  001FE0  D79C               	goto	l202
 30602  001FE2  0A01               	xorlw	1	; case 5
 30603  001FE4  B4D8               	btfsc	status,2,c
 30604  001FE6  D79D               	goto	l203
 30605  001FE8  0A03               	xorlw	3	; case 6
 30606  001FEA  B4D8               	btfsc	status,2,c
 30607  001FEC  D7BE               	goto	l205
 30608  001FEE  0A01               	xorlw	1	; case 7
 30609  001FF0  B4D8               	btfsc	status,2,c
 30610  001FF2  D7D2               	goto	l208
 30611  001FF4  0A0F               	xorlw	15	; case 8
 30612  001FF6  B4D8               	btfsc	status,2,c
 30613  001FF8  D7DF               	goto	l209
 30614  001FFA                     l194:
 30615                           
 30616                           ;i2c_drv.c: 518: return ReadStatus;
 30617  001FFA  5031               	movf	I2c_ReadData@ReadStatus,w,c
 30618  001FFC  0012               	return	
 30619  001FFE                     __end_of_I2c_ReadData:
 30620                           	opt stack 0
 30621                           tosu	equ	0xFFF
 30622                           tosh	equ	0xFFE
 30623                           tosl	equ	0xFFD
 30624                           pclath	equ	0xFFA
 30625                           tblptru	equ	0xFF8
 30626                           tblptrh	equ	0xFF7
 30627                           tblptrl	equ	0xFF6
 30628                           tablat	equ	0xFF5
 30629                           prodh	equ	0xFF4
 30630                           prodl	equ	0xFF3
 30631                           intcon	equ	0xFF2
 30632                           intcon2	equ	0xFF1
 30633                           intcon3	equ	0xFF0
 30634                           indf0	equ	0xFEF
 30635                           postinc0	equ	0xFEE
 30636                           plusw0	equ	0xFEB
 30637                           fsr0h	equ	0xFEA
 30638                           fsr0l	equ	0xFE9
 30639                           wreg	equ	0xFE8
 30640                           indf1	equ	0xFE7
 30641                           postinc1	equ	0xFE6
 30642                           postdec1	equ	0xFE5
 30643                           plusw1	equ	0xFE3
 30644                           fsr1h	equ	0xFE2
 30645                           fsr1l	equ	0xFE1
 30646                           indf2	equ	0xFDF
 30647                           postinc2	equ	0xFDE
 30648                           postdec2	equ	0xFDD
 30649                           plusw2	equ	0xFDB
 30650                           fsr2h	equ	0xFDA
 30651                           fsr2l	equ	0xFD9
 30652                           status	equ	0xFD8
 30653                           
 30654 ;; *************** function _WriteByte *****************
 30655 ;; Defined at:
 30656 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30657 ;; Parameters:    Size  Location     Type
 30658 ;;  Byte            1    wreg     unsigned char 
 30659 ;; Auto vars:     Size  Location     Type
 30660 ;;  Byte            1   29[BANK0 ] unsigned char 
 30661 ;; Return value:  Size  Location     Type
 30662 ;;                  1    wreg      void 
 30663 ;; Registers used:
 30664 ;;		wreg
 30665 ;; Tracked objects:
 30666 ;;		On entry : 0/0
 30667 ;;		On exit  : 0/0
 30668 ;;		Unchanged: 0/0
 30669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30673 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30674 ;;Total ram usage:        1 bytes
 30675 ;; Hardware stack levels used:    1
 30676 ;; Hardware stack levels required when called:   11
 30677 ;; This function calls:
 30678 ;;		Nothing
 30679 ;; This function is called by:
 30680 ;;		_I2c_WriteData
 30681 ;;		_I2c_ReadData
 30682 ;; This function uses a non-reentrant model
 30683 ;;
 30684                           
 30685                           	psect	text140
 30686  005E62                     __ptext140:
 30687                           	opt stack 0
 30688  005E62                     _WriteByte:
 30689                           	opt stack 14
 30690                           
 30691                           ;incstack = 0
 30692                           ;WriteByte@Byte stored from wreg
 30693  005E62  0100               	movlb	0	; () banked
 30694  005E64  6F7D               	movwf	WriteByte@Byte& (0+255),b
 30695                           
 30696                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 30697  005E66  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 30698  005E6A  0012               	return		;funcret
 30699  005E6C                     __end_of_WriteByte:
 30700                           	opt stack 0
 30701                           tosu	equ	0xFFF
 30702                           tosh	equ	0xFFE
 30703                           tosl	equ	0xFFD
 30704                           pclath	equ	0xFFA
 30705                           tblptru	equ	0xFF8
 30706                           tblptrh	equ	0xFF7
 30707                           tblptrl	equ	0xFF6
 30708                           tablat	equ	0xFF5
 30709                           prodh	equ	0xFF4
 30710                           prodl	equ	0xFF3
 30711                           intcon	equ	0xFF2
 30712                           intcon2	equ	0xFF1
 30713                           intcon3	equ	0xFF0
 30714                           indf0	equ	0xFEF
 30715                           postinc0	equ	0xFEE
 30716                           plusw0	equ	0xFEB
 30717                           fsr0h	equ	0xFEA
 30718                           fsr0l	equ	0xFE9
 30719                           wreg	equ	0xFE8
 30720                           indf1	equ	0xFE7
 30721                           postinc1	equ	0xFE6
 30722                           postdec1	equ	0xFE5
 30723                           plusw1	equ	0xFE3
 30724                           fsr1h	equ	0xFE2
 30725                           fsr1l	equ	0xFE1
 30726                           indf2	equ	0xFDF
 30727                           postinc2	equ	0xFDE
 30728                           postdec2	equ	0xFDD
 30729                           plusw2	equ	0xFDB
 30730                           fsr2h	equ	0xFDA
 30731                           fsr2l	equ	0xFD9
 30732                           status	equ	0xFD8
 30733                           
 30734 ;; *************** function _StopCondition *****************
 30735 ;; Defined at:
 30736 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30737 ;; Parameters:    Size  Location     Type
 30738 ;;		None
 30739 ;; Auto vars:     Size  Location     Type
 30740 ;;		None
 30741 ;; Return value:  Size  Location     Type
 30742 ;;                  1    wreg      void 
 30743 ;; Registers used:
 30744 ;;		status,2, status,0
 30745 ;; Tracked objects:
 30746 ;;		On entry : 0/0
 30747 ;;		On exit  : 0/0
 30748 ;;		Unchanged: 0/0
 30749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30754 ;;Total ram usage:        0 bytes
 30755 ;; Hardware stack levels used:    1
 30756 ;; Hardware stack levels required when called:   11
 30757 ;; This function calls:
 30758 ;;		Nothing
 30759 ;; This function is called by:
 30760 ;;		_I2c_WriteData
 30761 ;;		_I2c_ReadData
 30762 ;; This function uses a non-reentrant model
 30763 ;;
 30764                           
 30765                           	psect	text141
 30766  005EA2                     __ptext141:
 30767                           	opt stack 0
 30768  005EA2                     _StopCondition:
 30769                           	opt stack 14
 30770                           
 30771                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 30772                           
 30773                           ;incstack = 0
 30774  005EA2  8471               	bsf	3953,2,c	;volatile
 30775  005EA4  0012               	return		;funcret
 30776  005EA6                     __end_of_StopCondition:
 30777                           	opt stack 0
 30778                           tosu	equ	0xFFF
 30779                           tosh	equ	0xFFE
 30780                           tosl	equ	0xFFD
 30781                           pclath	equ	0xFFA
 30782                           tblptru	equ	0xFF8
 30783                           tblptrh	equ	0xFF7
 30784                           tblptrl	equ	0xFF6
 30785                           tablat	equ	0xFF5
 30786                           prodh	equ	0xFF4
 30787                           prodl	equ	0xFF3
 30788                           intcon	equ	0xFF2
 30789                           intcon2	equ	0xFF1
 30790                           intcon3	equ	0xFF0
 30791                           indf0	equ	0xFEF
 30792                           postinc0	equ	0xFEE
 30793                           plusw0	equ	0xFEB
 30794                           fsr0h	equ	0xFEA
 30795                           fsr0l	equ	0xFE9
 30796                           wreg	equ	0xFE8
 30797                           indf1	equ	0xFE7
 30798                           postinc1	equ	0xFE6
 30799                           postdec1	equ	0xFE5
 30800                           plusw1	equ	0xFE3
 30801                           fsr1h	equ	0xFE2
 30802                           fsr1l	equ	0xFE1
 30803                           indf2	equ	0xFDF
 30804                           postinc2	equ	0xFDE
 30805                           postdec2	equ	0xFDD
 30806                           plusw2	equ	0xFDB
 30807                           fsr2h	equ	0xFDA
 30808                           fsr2l	equ	0xFD9
 30809                           status	equ	0xFD8
 30810                           
 30811 ;; *************** function _StartCondition *****************
 30812 ;; Defined at:
 30813 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30814 ;; Parameters:    Size  Location     Type
 30815 ;;		None
 30816 ;; Auto vars:     Size  Location     Type
 30817 ;;		None
 30818 ;; Return value:  Size  Location     Type
 30819 ;;                  1    wreg      void 
 30820 ;; Registers used:
 30821 ;;		status,2, status,0
 30822 ;; Tracked objects:
 30823 ;;		On entry : 0/0
 30824 ;;		On exit  : 0/0
 30825 ;;		Unchanged: 0/0
 30826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30831 ;;Total ram usage:        0 bytes
 30832 ;; Hardware stack levels used:    1
 30833 ;; Hardware stack levels required when called:   11
 30834 ;; This function calls:
 30835 ;;		Nothing
 30836 ;; This function is called by:
 30837 ;;		_I2c_WriteData
 30838 ;;		_I2c_ReadData
 30839 ;; This function uses a non-reentrant model
 30840 ;;
 30841                           
 30842                           	psect	text142
 30843  005EA6                     __ptext142:
 30844                           	opt stack 0
 30845  005EA6                     _StartCondition:
 30846                           	opt stack 14
 30847                           
 30848                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 30849                           
 30850                           ;incstack = 0
 30851  005EA6  8071               	bsf	3953,0,c	;volatile
 30852  005EA8  0012               	return		;funcret
 30853  005EAA                     __end_of_StartCondition:
 30854                           	opt stack 0
 30855                           tosu	equ	0xFFF
 30856                           tosh	equ	0xFFE
 30857                           tosl	equ	0xFFD
 30858                           pclath	equ	0xFFA
 30859                           tblptru	equ	0xFF8
 30860                           tblptrh	equ	0xFF7
 30861                           tblptrl	equ	0xFF6
 30862                           tablat	equ	0xFF5
 30863                           prodh	equ	0xFF4
 30864                           prodl	equ	0xFF3
 30865                           intcon	equ	0xFF2
 30866                           intcon2	equ	0xFF1
 30867                           intcon3	equ	0xFF0
 30868                           indf0	equ	0xFEF
 30869                           postinc0	equ	0xFEE
 30870                           plusw0	equ	0xFEB
 30871                           fsr0h	equ	0xFEA
 30872                           fsr0l	equ	0xFE9
 30873                           wreg	equ	0xFE8
 30874                           indf1	equ	0xFE7
 30875                           postinc1	equ	0xFE6
 30876                           postdec1	equ	0xFE5
 30877                           plusw1	equ	0xFE3
 30878                           fsr1h	equ	0xFE2
 30879                           fsr1l	equ	0xFE1
 30880                           indf2	equ	0xFDF
 30881                           postinc2	equ	0xFDE
 30882                           postdec2	equ	0xFDD
 30883                           plusw2	equ	0xFDB
 30884                           fsr2h	equ	0xFDA
 30885                           fsr2l	equ	0xFD9
 30886                           status	equ	0xFD8
 30887                           
 30888 ;; *************** function _SetAckStatus *****************
 30889 ;; Defined at:
 30890 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30891 ;; Parameters:    Size  Location     Type
 30892 ;;  AckSts          1    wreg     unsigned char 
 30893 ;; Auto vars:     Size  Location     Type
 30894 ;;  AckSts          1   29[BANK0 ] unsigned char 
 30895 ;; Return value:  Size  Location     Type
 30896 ;;                  1    wreg      void 
 30897 ;; Registers used:
 30898 ;;		wreg
 30899 ;; Tracked objects:
 30900 ;;		On entry : 0/0
 30901 ;;		On exit  : 0/0
 30902 ;;		Unchanged: 0/0
 30903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30908 ;;Total ram usage:        1 bytes
 30909 ;; Hardware stack levels used:    1
 30910 ;; Hardware stack levels required when called:   11
 30911 ;; This function calls:
 30912 ;;		Nothing
 30913 ;; This function is called by:
 30914 ;;		_I2c_ReadData
 30915 ;; This function uses a non-reentrant model
 30916 ;;
 30917                           
 30918                           	psect	text143
 30919  005DB8                     __ptext143:
 30920                           	opt stack 0
 30921  005DB8                     _SetAckStatus:
 30922                           	opt stack 14
 30923                           
 30924                           ;incstack = 0
 30925                           ;SetAckStatus@AckSts stored from wreg
 30926  005DB8  0100               	movlb	0	; () banked
 30927  005DBA  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 30928                           
 30929                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 30930  005DBC  0100               	movlb	0	; () banked
 30931  005DBE  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 30932  005DC0  D002               	bra	u6085
 30933  005DC2  9A71               	bcf	3953,5,c	;volatile
 30934  005DC4  D001               	bra	u6086
 30935  005DC6                     u6085:
 30936  005DC6  8A71               	bsf	3953,5,c	;volatile
 30937  005DC8                     u6086:
 30938                           
 30939                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 30940  005DC8  8871               	bsf	3953,4,c	;volatile
 30941  005DCA  0012               	return		;funcret
 30942  005DCC                     __end_of_SetAckStatus:
 30943                           	opt stack 0
 30944                           tosu	equ	0xFFF
 30945                           tosh	equ	0xFFE
 30946                           tosl	equ	0xFFD
 30947                           pclath	equ	0xFFA
 30948                           tblptru	equ	0xFF8
 30949                           tblptrh	equ	0xFF7
 30950                           tblptrl	equ	0xFF6
 30951                           tablat	equ	0xFF5
 30952                           prodh	equ	0xFF4
 30953                           prodl	equ	0xFF3
 30954                           intcon	equ	0xFF2
 30955                           intcon2	equ	0xFF1
 30956                           intcon3	equ	0xFF0
 30957                           indf0	equ	0xFEF
 30958                           postinc0	equ	0xFEE
 30959                           plusw0	equ	0xFEB
 30960                           fsr0h	equ	0xFEA
 30961                           fsr0l	equ	0xFE9
 30962                           wreg	equ	0xFE8
 30963                           indf1	equ	0xFE7
 30964                           postinc1	equ	0xFE6
 30965                           postdec1	equ	0xFE5
 30966                           plusw1	equ	0xFE3
 30967                           fsr1h	equ	0xFE2
 30968                           fsr1l	equ	0xFE1
 30969                           indf2	equ	0xFDF
 30970                           postinc2	equ	0xFDE
 30971                           postdec2	equ	0xFDD
 30972                           plusw2	equ	0xFDB
 30973                           fsr2h	equ	0xFDA
 30974                           fsr2l	equ	0xFD9
 30975                           status	equ	0xFD8
 30976                           
 30977 ;; *************** function _ReadByte *****************
 30978 ;; Defined at:
 30979 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30980 ;; Parameters:    Size  Location     Type
 30981 ;;		None
 30982 ;; Auto vars:     Size  Location     Type
 30983 ;;  Byte            1   29[BANK0 ] unsigned char 
 30984 ;; Return value:  Size  Location     Type
 30985 ;;                  1    wreg      unsigned char 
 30986 ;; Registers used:
 30987 ;;		wreg, status,2
 30988 ;; Tracked objects:
 30989 ;;		On entry : 0/0
 30990 ;;		On exit  : 0/0
 30991 ;;		Unchanged: 0/0
 30992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30996 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30997 ;;Total ram usage:        1 bytes
 30998 ;; Hardware stack levels used:    1
 30999 ;; Hardware stack levels required when called:   11
 31000 ;; This function calls:
 31001 ;;		Nothing
 31002 ;; This function is called by:
 31003 ;;		_I2c_ReadData
 31004 ;; This function uses a non-reentrant model
 31005 ;;
 31006                           
 31007                           	psect	text144
 31008  005E6C                     __ptext144:
 31009                           	opt stack 0
 31010  005E6C                     _ReadByte:
 31011                           	opt stack 14
 31012                           
 31013                           ;i2c_drv.c: 207: UINT8 Byte;
 31014                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 31015                           
 31016                           ;incstack = 0
 31017  005E6C  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 31018                           
 31019                           ;i2c_drv.c: 213: return Byte;
 31020  005E70  0100               	movlb	0	; () banked
 31021  005E72  517D               	movf	ReadByte@Byte& (0+255),w,b
 31022  005E74  0012               	return	
 31023  005E76                     __end_of_ReadByte:
 31024                           	opt stack 0
 31025                           tosu	equ	0xFFF
 31026                           tosh	equ	0xFFE
 31027                           tosl	equ	0xFFD
 31028                           pclath	equ	0xFFA
 31029                           tblptru	equ	0xFF8
 31030                           tblptrh	equ	0xFF7
 31031                           tblptrl	equ	0xFF6
 31032                           tablat	equ	0xFF5
 31033                           prodh	equ	0xFF4
 31034                           prodl	equ	0xFF3
 31035                           intcon	equ	0xFF2
 31036                           intcon2	equ	0xFF1
 31037                           intcon3	equ	0xFF0
 31038                           indf0	equ	0xFEF
 31039                           postinc0	equ	0xFEE
 31040                           plusw0	equ	0xFEB
 31041                           fsr0h	equ	0xFEA
 31042                           fsr0l	equ	0xFE9
 31043                           wreg	equ	0xFE8
 31044                           indf1	equ	0xFE7
 31045                           postinc1	equ	0xFE6
 31046                           postdec1	equ	0xFE5
 31047                           plusw1	equ	0xFE3
 31048                           fsr1h	equ	0xFE2
 31049                           fsr1l	equ	0xFE1
 31050                           indf2	equ	0xFDF
 31051                           postinc2	equ	0xFDE
 31052                           postdec2	equ	0xFDD
 31053                           plusw2	equ	0xFDB
 31054                           fsr2h	equ	0xFDA
 31055                           fsr2l	equ	0xFD9
 31056                           status	equ	0xFD8
 31057                           
 31058 ;; *************** function _GenerateEvt *****************
 31059 ;; Defined at:
 31060 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31061 ;; Parameters:    Size  Location     Type
 31062 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31063 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 31064 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 31065 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 31066 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 31067 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 31068 ;; Auto vars:     Size  Location     Type
 31069 ;;  EventStatus     1   31[BANK0 ] enum E7727
 31070 ;; Return value:  Size  Location     Type
 31071 ;;                  1    wreg      enum E7699
 31072 ;; Registers used:
 31073 ;;		wreg, fsr2l, fsr2h, status,2
 31074 ;; Tracked objects:
 31075 ;;		On entry : 0/0
 31076 ;;		On exit  : 0/0
 31077 ;;		Unchanged: 0/0
 31078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31082 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31083 ;;Total ram usage:        3 bytes
 31084 ;; Hardware stack levels used:    1
 31085 ;; Hardware stack levels required when called:   11
 31086 ;; This function calls:
 31087 ;;		Nothing
 31088 ;; This function is called by:
 31089 ;;		_I2c_ReadData
 31090 ;;		_CheckModem
 31091 ;;		_TurnOnModem
 31092 ;;		_ConfigureModem
 31093 ;;		_ModemEvtParser
 31094 ;;		_GetSmsSm
 31095 ;;		_I2cSlv_SendI2cMsg
 31096 ;;		_I2cSlv_ReceiveI2cMsg
 31097 ;;		_RiSm
 31098 ;;		_Mdm_RequestSmsData
 31099 ;;		_Mdm_SendSmsData
 31100 ;;		_MdmHttp_InitGprsNetwork
 31101 ;;		_MdmHttp_GetMethod
 31102 ;;		_Alarm
 31103 ;; This function uses a non-reentrant model
 31104 ;;
 31105                           
 31106                           	psect	text145
 31107  005D48                     __ptext145:
 31108                           	opt stack 0
 31109  005D48                     _GenerateEvt:
 31110                           	opt stack 13
 31111                           
 31112                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 31113                           
 31114                           ; BSR set to: 0
 31115                           ;incstack = 0
 31116  005D48  0E00               	movlw	0
 31117  005D4A  0100               	movlb	0	; () banked
 31118  005D4C  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31119                           
 31120                           ; BSR set to: 0
 31121                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 31122  005D4E  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 31123  005D52  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 31124  005D56  0E02               	movlw	2
 31125  005D58  6EDF               	movwf	indf2,c
 31126                           
 31127                           ; BSR set to: 0
 31128                           ;os_ser.c: 83: EventStatus = EventSent;
 31129  005D5A  0E02               	movlw	2
 31130  005D5C  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 31131  005D5E  0012               	return	
 31132  005D60                     __end_of_GenerateEvt:
 31133                           	opt stack 0
 31134                           tosu	equ	0xFFF
 31135                           tosh	equ	0xFFE
 31136                           tosl	equ	0xFFD
 31137                           pclath	equ	0xFFA
 31138                           tblptru	equ	0xFF8
 31139                           tblptrh	equ	0xFF7
 31140                           tblptrl	equ	0xFF6
 31141                           tablat	equ	0xFF5
 31142                           prodh	equ	0xFF4
 31143                           prodl	equ	0xFF3
 31144                           intcon	equ	0xFF2
 31145                           intcon2	equ	0xFF1
 31146                           intcon3	equ	0xFF0
 31147                           indf0	equ	0xFEF
 31148                           postinc0	equ	0xFEE
 31149                           plusw0	equ	0xFEB
 31150                           fsr0h	equ	0xFEA
 31151                           fsr0l	equ	0xFE9
 31152                           wreg	equ	0xFE8
 31153                           indf1	equ	0xFE7
 31154                           postinc1	equ	0xFE6
 31155                           postdec1	equ	0xFE5
 31156                           plusw1	equ	0xFE3
 31157                           fsr1h	equ	0xFE2
 31158                           fsr1l	equ	0xFE1
 31159                           indf2	equ	0xFDF
 31160                           postinc2	equ	0xFDE
 31161                           postdec2	equ	0xFDD
 31162                           plusw2	equ	0xFDB
 31163                           fsr2h	equ	0xFDA
 31164                           fsr2l	equ	0xFD9
 31165                           status	equ	0xFD8
 31166                           
 31167 ;; *************** function _EnableReceiver *****************
 31168 ;; Defined at:
 31169 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31170 ;; Parameters:    Size  Location     Type
 31171 ;;		None
 31172 ;; Auto vars:     Size  Location     Type
 31173 ;;		None
 31174 ;; Return value:  Size  Location     Type
 31175 ;;                  1    wreg      void 
 31176 ;; Registers used:
 31177 ;;		status,2, status,0
 31178 ;; Tracked objects:
 31179 ;;		On entry : 0/0
 31180 ;;		On exit  : 0/0
 31181 ;;		Unchanged: 0/0
 31182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31187 ;;Total ram usage:        0 bytes
 31188 ;; Hardware stack levels used:    1
 31189 ;; Hardware stack levels required when called:   11
 31190 ;; This function calls:
 31191 ;;		Nothing
 31192 ;; This function is called by:
 31193 ;;		_I2c_ReadData
 31194 ;; This function uses a non-reentrant model
 31195 ;;
 31196                           
 31197                           	psect	text146
 31198  005EAA                     __ptext146:
 31199                           	opt stack 0
 31200  005EAA                     _EnableReceiver:
 31201                           	opt stack 14
 31202                           
 31203                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 31204                           
 31205                           ; BSR set to: 0
 31206                           ;incstack = 0
 31207  005EAA  8671               	bsf	3953,3,c	;volatile
 31208  005EAC  0012               	return		;funcret
 31209  005EAE                     __end_of_EnableReceiver:
 31210                           	opt stack 0
 31211                           tosu	equ	0xFFF
 31212                           tosh	equ	0xFFE
 31213                           tosl	equ	0xFFD
 31214                           pclath	equ	0xFFA
 31215                           tblptru	equ	0xFF8
 31216                           tblptrh	equ	0xFF7
 31217                           tblptrl	equ	0xFF6
 31218                           tablat	equ	0xFF5
 31219                           prodh	equ	0xFF4
 31220                           prodl	equ	0xFF3
 31221                           intcon	equ	0xFF2
 31222                           intcon2	equ	0xFF1
 31223                           intcon3	equ	0xFF0
 31224                           indf0	equ	0xFEF
 31225                           postinc0	equ	0xFEE
 31226                           plusw0	equ	0xFEB
 31227                           fsr0h	equ	0xFEA
 31228                           fsr0l	equ	0xFE9
 31229                           wreg	equ	0xFE8
 31230                           indf1	equ	0xFE7
 31231                           postinc1	equ	0xFE6
 31232                           postdec1	equ	0xFE5
 31233                           plusw1	equ	0xFE3
 31234                           fsr1h	equ	0xFE2
 31235                           fsr1l	equ	0xFE1
 31236                           indf2	equ	0xFDF
 31237                           postinc2	equ	0xFDE
 31238                           postdec2	equ	0xFDD
 31239                           plusw2	equ	0xFDB
 31240                           fsr2h	equ	0xFDA
 31241                           fsr2l	equ	0xFD9
 31242                           status	equ	0xFD8
 31243                           
 31244 ;; *************** function _CheckTxStatus *****************
 31245 ;; Defined at:
 31246 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31247 ;; Parameters:    Size  Location     Type
 31248 ;;		None
 31249 ;; Auto vars:     Size  Location     Type
 31250 ;;		None
 31251 ;; Return value:  Size  Location     Type
 31252 ;;                  1    wreg      unsigned char 
 31253 ;; Registers used:
 31254 ;;		wreg, status,2, status,0
 31255 ;; Tracked objects:
 31256 ;;		On entry : 0/0
 31257 ;;		On exit  : 0/0
 31258 ;;		Unchanged: 0/0
 31259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31264 ;;Total ram usage:        0 bytes
 31265 ;; Hardware stack levels used:    1
 31266 ;; Hardware stack levels required when called:   11
 31267 ;; This function calls:
 31268 ;;		Nothing
 31269 ;; This function is called by:
 31270 ;;		_I2c_WriteData
 31271 ;;		_I2c_ReadData
 31272 ;; This function uses a non-reentrant model
 31273 ;;
 31274                           
 31275                           	psect	text147
 31276  005E76                     __ptext147:
 31277                           	opt stack 0
 31278  005E76                     _CheckTxStatus:
 31279                           	opt stack 14
 31280                           
 31281                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 31282                           
 31283                           ;incstack = 0
 31284  005E76  4073               	rrncf	3955,w,c	;volatile
 31285  005E78  42E8               	rrncf	wreg,f,c
 31286  005E7A  0B3F               	andlw	63
 31287  005E7C  0B01               	andlw	1
 31288  005E7E  0012               	return	
 31289  005E80                     __end_of_CheckTxStatus:
 31290                           	opt stack 0
 31291                           tosu	equ	0xFFF
 31292                           tosh	equ	0xFFE
 31293                           tosl	equ	0xFFD
 31294                           pclath	equ	0xFFA
 31295                           tblptru	equ	0xFF8
 31296                           tblptrh	equ	0xFF7
 31297                           tblptrl	equ	0xFF6
 31298                           tablat	equ	0xFF5
 31299                           prodh	equ	0xFF4
 31300                           prodl	equ	0xFF3
 31301                           intcon	equ	0xFF2
 31302                           intcon2	equ	0xFF1
 31303                           intcon3	equ	0xFF0
 31304                           indf0	equ	0xFEF
 31305                           postinc0	equ	0xFEE
 31306                           plusw0	equ	0xFEB
 31307                           fsr0h	equ	0xFEA
 31308                           fsr0l	equ	0xFE9
 31309                           wreg	equ	0xFE8
 31310                           indf1	equ	0xFE7
 31311                           postinc1	equ	0xFE6
 31312                           postdec1	equ	0xFE5
 31313                           plusw1	equ	0xFE3
 31314                           fsr1h	equ	0xFE2
 31315                           fsr1l	equ	0xFE1
 31316                           indf2	equ	0xFDF
 31317                           postinc2	equ	0xFDE
 31318                           postdec2	equ	0xFDD
 31319                           plusw2	equ	0xFDB
 31320                           fsr2h	equ	0xFDA
 31321                           fsr2l	equ	0xFD9
 31322                           status	equ	0xFD8
 31323                           
 31324 ;; *************** function _CheckAckStatus *****************
 31325 ;; Defined at:
 31326 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31327 ;; Parameters:    Size  Location     Type
 31328 ;;		None
 31329 ;; Auto vars:     Size  Location     Type
 31330 ;;		None
 31331 ;; Return value:  Size  Location     Type
 31332 ;;                  1    wreg      unsigned char 
 31333 ;; Registers used:
 31334 ;;		wreg, status,2, status,0
 31335 ;; Tracked objects:
 31336 ;;		On entry : 0/0
 31337 ;;		On exit  : 0/0
 31338 ;;		Unchanged: 0/0
 31339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31344 ;;Total ram usage:        0 bytes
 31345 ;; Hardware stack levels used:    1
 31346 ;; Hardware stack levels required when called:   11
 31347 ;; This function calls:
 31348 ;;		Nothing
 31349 ;; This function is called by:
 31350 ;;		_I2c_WriteData
 31351 ;;		_I2c_ReadData
 31352 ;; This function uses a non-reentrant model
 31353 ;;
 31354                           
 31355                           	psect	text148
 31356  005E80                     __ptext148:
 31357                           	opt stack 0
 31358  005E80                     _CheckAckStatus:
 31359                           	opt stack 14
 31360                           
 31361                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 31362                           
 31363                           ;incstack = 0
 31364  005E80  4471               	rlncf	3953,w,c	;volatile
 31365  005E82  46E8               	rlncf	wreg,f,c
 31366  005E84  0B03               	andlw	3
 31367  005E86  0B01               	andlw	1
 31368  005E88  0012               	return	
 31369  005E8A                     __end_of_CheckAckStatus:
 31370                           	opt stack 0
 31371                           tosu	equ	0xFFF
 31372                           tosh	equ	0xFFE
 31373                           tosl	equ	0xFFD
 31374                           pclath	equ	0xFFA
 31375                           tblptru	equ	0xFF8
 31376                           tblptrh	equ	0xFF7
 31377                           tblptrl	equ	0xFF6
 31378                           tablat	equ	0xFF5
 31379                           prodh	equ	0xFF4
 31380                           prodl	equ	0xFF3
 31381                           intcon	equ	0xFF2
 31382                           intcon2	equ	0xFF1
 31383                           intcon3	equ	0xFF0
 31384                           indf0	equ	0xFEF
 31385                           postinc0	equ	0xFEE
 31386                           plusw0	equ	0xFEB
 31387                           fsr0h	equ	0xFEA
 31388                           fsr0l	equ	0xFE9
 31389                           wreg	equ	0xFE8
 31390                           indf1	equ	0xFE7
 31391                           postinc1	equ	0xFE6
 31392                           postdec1	equ	0xFE5
 31393                           plusw1	equ	0xFE3
 31394                           fsr1h	equ	0xFE2
 31395                           fsr1l	equ	0xFE1
 31396                           indf2	equ	0xFDF
 31397                           postinc2	equ	0xFDE
 31398                           postdec2	equ	0xFDD
 31399                           plusw2	equ	0xFDB
 31400                           fsr2h	equ	0xFDA
 31401                           fsr2l	equ	0xFD9
 31402                           status	equ	0xFD8
 31403                           
 31404 ;; *************** function _LowPriorityIsr *****************
 31405 ;; Defined at:
 31406 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 31407 ;; Parameters:    Size  Location     Type
 31408 ;;		None
 31409 ;; Auto vars:     Size  Location     Type
 31410 ;;		None
 31411 ;; Return value:  Size  Location     Type
 31412 ;;                  1    wreg      void 
 31413 ;; Registers used:
 31414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31415 ;; Tracked objects:
 31416 ;;		On entry : 0/0
 31417 ;;		On exit  : 0/0
 31418 ;;		Unchanged: 0/0
 31419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31422 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31423 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31424 ;;Total ram usage:       21 bytes
 31425 ;; Hardware stack levels used:    1
 31426 ;; Hardware stack levels required when called:   10
 31427 ;; This function calls:
 31428 ;;		_Tmr_Tmr2Isr
 31429 ;; This function is called by:
 31430 ;;		Interrupt level 1
 31431 ;; This function uses a non-reentrant model
 31432 ;;
 31433                           
 31434                           	psect	intcodelo
 31435  000018                     __pintcodelo:
 31436                           	opt stack 0
 31437  000018                     _LowPriorityIsr:
 31438                           	opt stack 8
 31439                           
 31440                           ;incstack = 0
 31441  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 31442  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 31443  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 31444  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 31445  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 31446  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 31447  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 31448  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 31449  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 31450  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 31451  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 31452  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 31453  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 31454  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 31455  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 31456  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 31457  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 31458  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 31459  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 31460  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 31461  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 31462  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 31463                           
 31464                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 31465  00006E  B29E               	btfsc	3998,1,c	;volatile
 31466                           
 31467                           ;irq.c: 259: {
 31468                           ;irq.c: 261: Tmr_Tmr2Isr();
 31469  000070  ECA0  F02D         	call	_Tmr_Tmr2Isr	;wreg free
 31470  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 31471  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 31472  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 31473  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 31474  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 31475  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 31476  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 31477  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 31478  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 31479  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 31480  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 31481  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 31482  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 31483  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 31484  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 31485  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 31486  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 31487  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 31488  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 31489  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 31490  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 31491  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 31492  0000CA  0010               	retfie	
 31493  0000CC                     __end_of_LowPriorityIsr:
 31494                           	opt stack 0
 31495                           tosu	equ	0xFFF
 31496                           tosh	equ	0xFFE
 31497                           tosl	equ	0xFFD
 31498                           pclatu	equ	0xFFB
 31499                           pclath	equ	0xFFA
 31500                           tblptru	equ	0xFF8
 31501                           tblptrh	equ	0xFF7
 31502                           tblptrl	equ	0xFF6
 31503                           tablat	equ	0xFF5
 31504                           prodh	equ	0xFF4
 31505                           prodl	equ	0xFF3
 31506                           intcon	equ	0xFF2
 31507                           intcon2	equ	0xFF1
 31508                           intcon3	equ	0xFF0
 31509                           indf0	equ	0xFEF
 31510                           postinc0	equ	0xFEE
 31511                           plusw0	equ	0xFEB
 31512                           fsr0h	equ	0xFEA
 31513                           fsr0l	equ	0xFE9
 31514                           wreg	equ	0xFE8
 31515                           indf1	equ	0xFE7
 31516                           postinc1	equ	0xFE6
 31517                           postdec1	equ	0xFE5
 31518                           plusw1	equ	0xFE3
 31519                           fsr1h	equ	0xFE2
 31520                           fsr1l	equ	0xFE1
 31521                           bsr	equ	0xFE0
 31522                           indf2	equ	0xFDF
 31523                           postinc2	equ	0xFDE
 31524                           postdec2	equ	0xFDD
 31525                           plusw2	equ	0xFDB
 31526                           fsr2h	equ	0xFDA
 31527                           fsr2l	equ	0xFD9
 31528                           status	equ	0xFD8
 31529                           
 31530 ;; *************** function _Tmr_Tmr2Isr *****************
 31531 ;; Defined at:
 31532 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 31533 ;; Parameters:    Size  Location     Type
 31534 ;;		None
 31535 ;; Auto vars:     Size  Location     Type
 31536 ;;		None
 31537 ;; Return value:  Size  Location     Type
 31538 ;;                  1    wreg      void 
 31539 ;; Registers used:
 31540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31541 ;; Tracked objects:
 31542 ;;		On entry : 0/0
 31543 ;;		On exit  : 0/0
 31544 ;;		Unchanged: 0/0
 31545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31550 ;;Total ram usage:        0 bytes
 31551 ;; Hardware stack levels used:    1
 31552 ;; Hardware stack levels required when called:    9
 31553 ;; This function calls:
 31554 ;;		Absolute function
 31555 ;;		_Sch_SchmIntService
 31556 ;; This function is called by:
 31557 ;;		_LowPriorityIsr
 31558 ;; This function uses a non-reentrant model
 31559 ;;
 31560                           
 31561                           	psect	text150
 31562  005B40                     __ptext150:
 31563                           	opt stack 0
 31564  005B40                     _Tmr_Tmr2Isr:
 31565                           	opt stack 8
 31566                           
 31567                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 31568                           
 31569                           ;incstack = 0
 31570  005B40  929E               	bcf	3998,1,c	;volatile
 31571                           
 31572                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 31573  005B42  0101               	movlb	1	; () banked
 31574  005B44  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 31575  005B46  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 31576  005B48  B4D8               	btfsc	status,2,c
 31577  005B4A  0012               	return	
 31578                           
 31579                           ; BSR set to: 1
 31580                           ;tmr_drv.c: 315: {
 31581                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 31582  005B4C  D801               	call	i1u1346_28
 31583  005B4E  0012               	return	
 31584  005B50                     i1u1346_28:
 31585  005B50  0005               	push	
 31586  005B52  6EFA               	movwf	pclath,c
 31587  005B54  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 31588  005B56  6EFD               	movwf	tosl,c
 31589  005B58  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 31590  005B5A  6EFE               	movwf	tosh,c
 31591  005B5C  50F8               	movf	tblptru,w,c
 31592  005B5E  6EFF               	movwf	tosu,c
 31593  005B60  50FA               	movf	pclath,w,c
 31594  005B62  0012               	return		;indir
 31595  005B64                     __end_of_Tmr_Tmr2Isr:
 31596                           	opt stack 0
 31597                           tosu	equ	0xFFF
 31598                           tosh	equ	0xFFE
 31599                           tosl	equ	0xFFD
 31600                           pclatu	equ	0xFFB
 31601                           pclath	equ	0xFFA
 31602                           tblptru	equ	0xFF8
 31603                           tblptrh	equ	0xFF7
 31604                           tblptrl	equ	0xFF6
 31605                           tablat	equ	0xFF5
 31606                           prodh	equ	0xFF4
 31607                           prodl	equ	0xFF3
 31608                           intcon	equ	0xFF2
 31609                           intcon2	equ	0xFF1
 31610                           intcon3	equ	0xFF0
 31611                           indf0	equ	0xFEF
 31612                           postinc0	equ	0xFEE
 31613                           plusw0	equ	0xFEB
 31614                           fsr0h	equ	0xFEA
 31615                           fsr0l	equ	0xFE9
 31616                           wreg	equ	0xFE8
 31617                           indf1	equ	0xFE7
 31618                           postinc1	equ	0xFE6
 31619                           postdec1	equ	0xFE5
 31620                           plusw1	equ	0xFE3
 31621                           fsr1h	equ	0xFE2
 31622                           fsr1l	equ	0xFE1
 31623                           bsr	equ	0xFE0
 31624                           indf2	equ	0xFDF
 31625                           postinc2	equ	0xFDE
 31626                           postdec2	equ	0xFDD
 31627                           plusw2	equ	0xFDB
 31628                           fsr2h	equ	0xFDA
 31629                           fsr2l	equ	0xFD9
 31630                           status	equ	0xFD8
 31631                           
 31632 ;; *************** function _Sch_SchmIntService *****************
 31633 ;; Defined at:
 31634 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31635 ;; Parameters:    Size  Location     Type
 31636 ;;		None
 31637 ;; Auto vars:     Size  Location     Type
 31638 ;;		None
 31639 ;; Return value:  Size  Location     Type
 31640 ;;                  1    wreg      void 
 31641 ;; Registers used:
 31642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31643 ;; Tracked objects:
 31644 ;;		On entry : 0/0
 31645 ;;		On exit  : 0/0
 31646 ;;		Unchanged: 0/0
 31647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31652 ;;Total ram usage:        0 bytes
 31653 ;; Hardware stack levels used:    1
 31654 ;; Hardware stack levels required when called:    8
 31655 ;; This function calls:
 31656 ;;		_OsAlrm_ProcessOsAlarms
 31657 ;;		_UpdateOsCounters
 31658 ;;		_UpdateSchFlag
 31659 ;; This function is called by:
 31660 ;;		_SystemInit
 31661 ;;		_Tmr_Tmr2Isr
 31662 ;; This function uses a non-reentrant model
 31663 ;;
 31664                           
 31665                           	psect	text151
 31666  005E30                     __ptext151:
 31667                           	opt stack 0
 31668  005E30                     _Sch_SchmIntService:
 31669                           	opt stack 8
 31670                           
 31671                           ;os_sched.c: 217: UpdateSchFlag();
 31672                           
 31673                           ;incstack = 0
 31674  005E30  EC56  F02E         	call	_UpdateSchFlag	;wreg free
 31675                           
 31676                           ;os_sched.c: 219: UpdateOsCounters();
 31677  005E34  EC08  F02F         	call	_UpdateOsCounters	;wreg free
 31678                           
 31679                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 31680  005E38  ECAA  F010         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 31681  005E3C  0012               	return		;funcret
 31682  005E3E                     __end_of_Sch_SchmIntService:
 31683                           	opt stack 0
 31684                           tosu	equ	0xFFF
 31685                           tosh	equ	0xFFE
 31686                           tosl	equ	0xFFD
 31687                           pclatu	equ	0xFFB
 31688                           pclath	equ	0xFFA
 31689                           tblptru	equ	0xFF8
 31690                           tblptrh	equ	0xFF7
 31691                           tblptrl	equ	0xFF6
 31692                           tablat	equ	0xFF5
 31693                           prodh	equ	0xFF4
 31694                           prodl	equ	0xFF3
 31695                           intcon	equ	0xFF2
 31696                           intcon2	equ	0xFF1
 31697                           intcon3	equ	0xFF0
 31698                           indf0	equ	0xFEF
 31699                           postinc0	equ	0xFEE
 31700                           plusw0	equ	0xFEB
 31701                           fsr0h	equ	0xFEA
 31702                           fsr0l	equ	0xFE9
 31703                           wreg	equ	0xFE8
 31704                           indf1	equ	0xFE7
 31705                           postinc1	equ	0xFE6
 31706                           postdec1	equ	0xFE5
 31707                           plusw1	equ	0xFE3
 31708                           fsr1h	equ	0xFE2
 31709                           fsr1l	equ	0xFE1
 31710                           bsr	equ	0xFE0
 31711                           indf2	equ	0xFDF
 31712                           postinc2	equ	0xFDE
 31713                           postdec2	equ	0xFDD
 31714                           plusw2	equ	0xFDB
 31715                           fsr2h	equ	0xFDA
 31716                           fsr2l	equ	0xFD9
 31717                           status	equ	0xFD8
 31718                           
 31719 ;; *************** function _UpdateSchFlag *****************
 31720 ;; Defined at:
 31721 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31722 ;; Parameters:    Size  Location     Type
 31723 ;;		None
 31724 ;; Auto vars:     Size  Location     Type
 31725 ;;		None
 31726 ;; Return value:  Size  Location     Type
 31727 ;;                  1    wreg      void 
 31728 ;; Registers used:
 31729 ;;		wreg, status,2, status,0
 31730 ;; Tracked objects:
 31731 ;;		On entry : 0/0
 31732 ;;		On exit  : 0/0
 31733 ;;		Unchanged: 0/0
 31734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31739 ;;Total ram usage:        0 bytes
 31740 ;; Hardware stack levels used:    1
 31741 ;; Hardware stack levels required when called:    4
 31742 ;; This function calls:
 31743 ;;		Nothing
 31744 ;; This function is called by:
 31745 ;;		_Sch_SchmIntService
 31746 ;; This function uses a non-reentrant model
 31747 ;;
 31748                           
 31749                           	psect	text152
 31750  005CAC                     __ptext152:
 31751                           	opt stack 0
 31752  005CAC                     _UpdateSchFlag:
 31753                           	opt stack 11
 31754                           
 31755                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 31756                           ;os_sched.c: 138: InterruptCounter++;
 31757                           
 31758                           ;incstack = 0
 31759  005CAC  0102               	movlb	2	; () banked
 31760  005CAE  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 31761  005CB0  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 31762                           
 31763                           ; BSR set to: 2
 31764                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 31765  005CB2  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 31766  005CB4  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 31767  005CB6  B4D8               	btfsc	status,2,c
 31768  005CB8  0012               	return	
 31769                           
 31770                           ; BSR set to: 2
 31771                           ;os_sched.c: 141: {
 31772                           ;os_sched.c: 143: InterruptCounter = 0;
 31773  005CBA  0E00               	movlw	0
 31774  005CBC  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 31775  005CBE  0E00               	movlw	0
 31776  005CC0  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 31777                           
 31778                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 31779  005CC2  0E00               	movlw	0
 31780  005CC4  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 31781  005CC6  0012               	return	
 31782  005CC8                     __end_of_UpdateSchFlag:
 31783                           	opt stack 0
 31784                           tosu	equ	0xFFF
 31785                           tosh	equ	0xFFE
 31786                           tosl	equ	0xFFD
 31787                           pclatu	equ	0xFFB
 31788                           pclath	equ	0xFFA
 31789                           tblptru	equ	0xFF8
 31790                           tblptrh	equ	0xFF7
 31791                           tblptrl	equ	0xFF6
 31792                           tablat	equ	0xFF5
 31793                           prodh	equ	0xFF4
 31794                           prodl	equ	0xFF3
 31795                           intcon	equ	0xFF2
 31796                           intcon2	equ	0xFF1
 31797                           intcon3	equ	0xFF0
 31798                           indf0	equ	0xFEF
 31799                           postinc0	equ	0xFEE
 31800                           plusw0	equ	0xFEB
 31801                           fsr0h	equ	0xFEA
 31802                           fsr0l	equ	0xFE9
 31803                           wreg	equ	0xFE8
 31804                           indf1	equ	0xFE7
 31805                           postinc1	equ	0xFE6
 31806                           postdec1	equ	0xFE5
 31807                           plusw1	equ	0xFE3
 31808                           fsr1h	equ	0xFE2
 31809                           fsr1l	equ	0xFE1
 31810                           bsr	equ	0xFE0
 31811                           indf2	equ	0xFDF
 31812                           postinc2	equ	0xFDE
 31813                           postdec2	equ	0xFDD
 31814                           plusw2	equ	0xFDB
 31815                           fsr2h	equ	0xFDA
 31816                           fsr2l	equ	0xFD9
 31817                           status	equ	0xFD8
 31818                           
 31819 ;; *************** function _UpdateOsCounters *****************
 31820 ;; Defined at:
 31821 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 31822 ;; Parameters:    Size  Location     Type
 31823 ;;		None
 31824 ;; Auto vars:     Size  Location     Type
 31825 ;;		None
 31826 ;; Return value:  Size  Location     Type
 31827 ;;                  1    wreg      void 
 31828 ;; Registers used:
 31829 ;;		wreg, status,2, status,0
 31830 ;; Tracked objects:
 31831 ;;		On entry : 0/0
 31832 ;;		On exit  : 0/0
 31833 ;;		Unchanged: 0/0
 31834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31839 ;;Total ram usage:        0 bytes
 31840 ;; Hardware stack levels used:    1
 31841 ;; Hardware stack levels required when called:    4
 31842 ;; This function calls:
 31843 ;;		Nothing
 31844 ;; This function is called by:
 31845 ;;		_Sch_SchmIntService
 31846 ;; This function uses a non-reentrant model
 31847 ;;
 31848                           
 31849                           	psect	text153
 31850  005E10                     __ptext153:
 31851                           	opt stack 0
 31852  005E10                     _UpdateOsCounters:
 31853                           	opt stack 11
 31854                           
 31855                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 31856                           
 31857                           ; BSR set to: 2
 31858                           ;incstack = 0
 31859  005E10  0E01               	movlw	1
 31860  005E12  0103               	movlb	3	; () banked
 31861  005E14  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 31862  005E16  0E00               	movlw	0
 31863  005E18  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 31864  005E1A  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 31865  005E1C  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 31866                           
 31867                           ; BSR set to: 3
 31868  005E1E  0012               	return		;funcret
 31869  005E20                     __end_of_UpdateOsCounters:
 31870                           	opt stack 0
 31871                           tosu	equ	0xFFF
 31872                           tosh	equ	0xFFE
 31873                           tosl	equ	0xFFD
 31874                           pclatu	equ	0xFFB
 31875                           pclath	equ	0xFFA
 31876                           tblptru	equ	0xFF8
 31877                           tblptrh	equ	0xFF7
 31878                           tblptrl	equ	0xFF6
 31879                           tablat	equ	0xFF5
 31880                           prodh	equ	0xFF4
 31881                           prodl	equ	0xFF3
 31882                           intcon	equ	0xFF2
 31883                           intcon2	equ	0xFF1
 31884                           intcon3	equ	0xFF0
 31885                           indf0	equ	0xFEF
 31886                           postinc0	equ	0xFEE
 31887                           plusw0	equ	0xFEB
 31888                           fsr0h	equ	0xFEA
 31889                           fsr0l	equ	0xFE9
 31890                           wreg	equ	0xFE8
 31891                           indf1	equ	0xFE7
 31892                           postinc1	equ	0xFE6
 31893                           postdec1	equ	0xFE5
 31894                           plusw1	equ	0xFE3
 31895                           fsr1h	equ	0xFE2
 31896                           fsr1l	equ	0xFE1
 31897                           bsr	equ	0xFE0
 31898                           indf2	equ	0xFDF
 31899                           postinc2	equ	0xFDE
 31900                           postdec2	equ	0xFDD
 31901                           plusw2	equ	0xFDB
 31902                           fsr2h	equ	0xFDA
 31903                           fsr2l	equ	0xFD9
 31904                           status	equ	0xFD8
 31905                           
 31906 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 31907 ;; Defined at:
 31908 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 31909 ;; Parameters:    Size  Location     Type
 31910 ;;		None
 31911 ;; Auto vars:     Size  Location     Type
 31912 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 31913 ;; Return value:  Size  Location     Type
 31914 ;;                  1    wreg      void 
 31915 ;; Registers used:
 31916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 31917 ;; Tracked objects:
 31918 ;;		On entry : 0/0
 31919 ;;		On exit  : 0/0
 31920 ;;		Unchanged: 0/0
 31921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31924 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31925 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31926 ;;Total ram usage:       10 bytes
 31927 ;; Hardware stack levels used:    1
 31928 ;; Hardware stack levels required when called:    7
 31929 ;; This function calls:
 31930 ;;		_I2cDummyTx
 31931 ;;		_OsAlrm_ClearOsAlarm
 31932 ;;		i1___wmul
 31933 ;; This function is called by:
 31934 ;;		_Sch_SchmIntService
 31935 ;; This function uses a non-reentrant model
 31936 ;;
 31937                           
 31938                           	psect	text154
 31939  002154                     __ptext154:
 31940                           	opt stack 0
 31941  002154                     _OsAlrm_ProcessOsAlarms:
 31942                           	opt stack 8
 31943                           
 31944                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 31945                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 31946                           
 31947                           ; BSR set to: 3
 31948                           ;incstack = 0
 31949  002154  0E00               	movlw	0
 31950  002156  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 31951  002158  0E00               	movlw	0
 31952  00215A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 31953  00215C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 31954  00215E  E105               	bnz	i1u1325_20
 31955  002160  0E14               	movlw	20
 31956  002162  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 31957  002164  B0D8               	btfsc	status,0,c
 31958  002166  0012               	return	
 31959  002168  D001               	goto	i1l742
 31960  00216A                     i1u1325_20:
 31961  00216A  0012               	return	
 31962  00216C                     i1l742:
 31963                           
 31964                           ;os_alarms.c: 121: {
 31965                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 31966  00216C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 31967  002170  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 31968  002174  0E00               	movlw	0
 31969  002176  6E1C               	movwf	i1___wmul@multiplicand+1,c
 31970  002178  0E0B               	movlw	11
 31971  00217A  6E1B               	movwf	i1___wmul@multiplicand,c
 31972  00217C  EC7B  F02D         	call	i1___wmul	;wreg free
 31973  002180  0E00               	movlw	low _OsAlarms
 31974  002182  2419               	addwf	?i1___wmul,w,c
 31975  002184  6ED9               	movwf	fsr2l,c
 31976  002186  0E06               	movlw	high _OsAlarms
 31977  002188  201A               	addwfc	?i1___wmul+1,w,c
 31978  00218A  6EDA               	movwf	fsr2h,c
 31979  00218C  04DE               	decf	postinc2,w,c
 31980  00218E  A4D8               	btfss	status,2,c
 31981  002190  D086               	goto	i1u1329_29
 31982                           
 31983                           ;os_alarms.c: 124: {
 31984                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 31985  002192  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 31986  002196  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 31987  00219A  0E00               	movlw	0
 31988  00219C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 31989  00219E  0E0B               	movlw	11
 31990  0021A0  6E1B               	movwf	i1___wmul@multiplicand,c
 31991  0021A2  EC7B  F02D         	call	i1___wmul	;wreg free
 31992  0021A6  0E01               	movlw	1
 31993  0021A8  2619               	addwf	?i1___wmul,f,c
 31994  0021AA  0E00               	movlw	0
 31995  0021AC  221A               	addwfc	?i1___wmul+1,f,c
 31996  0021AE  0E00               	movlw	low _OsAlarms
 31997  0021B0  2419               	addwf	?i1___wmul,w,c
 31998  0021B2  6ED9               	movwf	fsr2l,c
 31999  0021B4  0E06               	movlw	high _OsAlarms
 32000  0021B6  201A               	addwfc	?i1___wmul+1,w,c
 32001  0021B8  6EDA               	movwf	fsr2h,c
 32002  0021BA  2ADE               	incf	postinc2,f,c
 32003  0021BC  0E00               	movlw	0
 32004  0021BE  22DE               	addwfc	postinc2,f,c
 32005  0021C0  22DE               	addwfc	postinc2,f,c
 32006  0021C2  22DE               	addwfc	postinc2,f,c
 32007                           
 32008                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 32009  0021C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32010  0021C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32011  0021CC  0E00               	movlw	0
 32012  0021CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32013  0021D0  0E0B               	movlw	11
 32014  0021D2  6E1B               	movwf	i1___wmul@multiplicand,c
 32015  0021D4  EC7B  F02D         	call	i1___wmul	;wreg free
 32016  0021D8  0E05               	movlw	5
 32017  0021DA  2619               	addwf	?i1___wmul,f,c
 32018  0021DC  0E00               	movlw	0
 32019  0021DE  221A               	addwfc	?i1___wmul+1,f,c
 32020  0021E0  0E00               	movlw	low _OsAlarms
 32021  0021E2  2419               	addwf	?i1___wmul,w,c
 32022  0021E4  6ED9               	movwf	fsr2l,c
 32023  0021E6  0E06               	movlw	high _OsAlarms
 32024  0021E8  201A               	addwfc	?i1___wmul+1,w,c
 32025  0021EA  6EDA               	movwf	fsr2h,c
 32026  0021EC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32027  0021F0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32028  0021F4  0E00               	movlw	0
 32029  0021F6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32030  0021F8  0E0B               	movlw	11
 32031  0021FA  6E1B               	movwf	i1___wmul@multiplicand,c
 32032  0021FC  EC7B  F02D         	call	i1___wmul	;wreg free
 32033  002200  0E01               	movlw	1
 32034  002202  2619               	addwf	?i1___wmul,f,c
 32035  002204  0E00               	movlw	0
 32036  002206  221A               	addwfc	?i1___wmul+1,f,c
 32037  002208  0E00               	movlw	low _OsAlarms
 32038  00220A  2419               	addwf	?i1___wmul,w,c
 32039  00220C  6EE1               	movwf	fsr1l,c
 32040  00220E  0E06               	movlw	high _OsAlarms
 32041  002210  201A               	addwfc	?i1___wmul+1,w,c
 32042  002212  6EE2               	movwf	fsr1h,c
 32043  002214  50DE               	movf	postinc2,w,c
 32044  002216  5CE6               	subwf	postinc1,w,c
 32045  002218  50DE               	movf	postinc2,w,c
 32046  00221A  58E6               	subwfb	postinc1,w,c
 32047  00221C  50DE               	movf	postinc2,w,c
 32048  00221E  58E6               	subwfb	postinc1,w,c
 32049  002220  50DE               	movf	postinc2,w,c
 32050  002222  58E6               	subwfb	postinc1,w,c
 32051  002224  A0D8               	btfss	status,0,c
 32052  002226  D03B               	goto	i1u1329_29
 32053                           
 32054                           ;os_alarms.c: 129: {
 32055                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 32056  002228  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 32057  00222A  EC42  F028         	call	_OsAlrm_ClearOsAlarm
 32058                           
 32059                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 32060  00222E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32061  002232  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32062  002236  0E00               	movlw	0
 32063  002238  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32064  00223A  0E0B               	movlw	11
 32065  00223C  6E1B               	movwf	i1___wmul@multiplicand,c
 32066  00223E  EC7B  F02D         	call	i1___wmul	;wreg free
 32067  002242  0E09               	movlw	9
 32068  002244  2619               	addwf	?i1___wmul,f,c
 32069  002246  0E00               	movlw	0
 32070  002248  221A               	addwfc	?i1___wmul+1,f,c
 32071  00224A  0E00               	movlw	low _OsAlarms
 32072  00224C  2419               	addwf	?i1___wmul,w,c
 32073  00224E  6ED9               	movwf	fsr2l,c
 32074  002250  0E06               	movlw	high _OsAlarms
 32075  002252  201A               	addwfc	?i1___wmul+1,w,c
 32076  002254  6EDA               	movwf	fsr2h,c
 32077  002256  50DE               	movf	postinc2,w,c
 32078  002258  10DE               	iorwf	postinc2,w,c
 32079  00225A  B4D8               	btfsc	status,2,c
 32080  00225C  D020               	goto	i1u1329_29
 32081                           
 32082                           ;os_alarms.c: 134: {
 32083                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 32084  00225E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 32085  002262  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 32086  002266  0E00               	movlw	0
 32087  002268  6E1C               	movwf	i1___wmul@multiplicand+1,c
 32088  00226A  0E0B               	movlw	11
 32089  00226C  6E1B               	movwf	i1___wmul@multiplicand,c
 32090  00226E  EC7B  F02D         	call	i1___wmul	;wreg free
 32091  002272  0E09               	movlw	9
 32092  002274  2619               	addwf	?i1___wmul,f,c
 32093  002276  0E00               	movlw	0
 32094  002278  221A               	addwfc	?i1___wmul+1,f,c
 32095  00227A  0E00               	movlw	low _OsAlarms
 32096  00227C  2419               	addwf	?i1___wmul,w,c
 32097  00227E  6ED9               	movwf	fsr2l,c
 32098  002280  0E06               	movlw	high _OsAlarms
 32099  002282  201A               	addwfc	?i1___wmul+1,w,c
 32100  002284  6EDA               	movwf	fsr2h,c
 32101  002286  D801               	call	i1u1329_28
 32102  002288  D00A               	goto	i1u1329_29
 32103  00228A                     i1u1329_28:
 32104  00228A  0005               	push	
 32105  00228C  6EFA               	movwf	pclath,c
 32106  00228E  50DE               	movf	postinc2,w,c
 32107  002290  6EFD               	movwf	tosl,c
 32108  002292  50DE               	movf	postinc2,w,c
 32109  002294  6EFE               	movwf	tosh,c
 32110  002296  50F8               	movf	tblptru,w,c
 32111  002298  6EFF               	movwf	tosu,c
 32112  00229A  50FA               	movf	pclath,w,c
 32113  00229C  0012               	return		;indir
 32114  00229E                     i1u1329_29:
 32115  00229E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 32116  0022A0  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 32117  0022A2  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 32118  0022A4  E101               	bnz	i1l747
 32119  0022A6  D75C               	goto	L65
 32120  0022A8                     i1l747:
 32121  0022A8  0012               	return		;funcret
 32122  0022AA                     __end_of_OsAlrm_ProcessOsAlarms:
 32123                           	opt stack 0
 32124                           tosu	equ	0xFFF
 32125                           tosh	equ	0xFFE
 32126                           tosl	equ	0xFFD
 32127                           pclatu	equ	0xFFB
 32128                           pclath	equ	0xFFA
 32129                           tblptru	equ	0xFF8
 32130                           tblptrh	equ	0xFF7
 32131                           tblptrl	equ	0xFF6
 32132                           tablat	equ	0xFF5
 32133                           prodh	equ	0xFF4
 32134                           prodl	equ	0xFF3
 32135                           intcon	equ	0xFF2
 32136                           intcon2	equ	0xFF1
 32137                           intcon3	equ	0xFF0
 32138                           indf0	equ	0xFEF
 32139                           postinc0	equ	0xFEE
 32140                           plusw0	equ	0xFEB
 32141                           fsr0h	equ	0xFEA
 32142                           fsr0l	equ	0xFE9
 32143                           wreg	equ	0xFE8
 32144                           indf1	equ	0xFE7
 32145                           postinc1	equ	0xFE6
 32146                           postdec1	equ	0xFE5
 32147                           plusw1	equ	0xFE3
 32148                           fsr1h	equ	0xFE2
 32149                           fsr1l	equ	0xFE1
 32150                           bsr	equ	0xFE0
 32151                           indf2	equ	0xFDF
 32152                           postinc2	equ	0xFDE
 32153                           postdec2	equ	0xFDD
 32154                           plusw2	equ	0xFDB
 32155                           fsr2h	equ	0xFDA
 32156                           fsr2l	equ	0xFD9
 32157                           status	equ	0xFD8
 32158                           
 32159 ;; *************** function i1___wmul *****************
 32160 ;; Defined at:
 32161 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 32162 ;; Parameters:    Size  Location     Type
 32163 ;;  multiplier      2   24[COMRAM] unsigned int 
 32164 ;;  multiplicand    2   26[COMRAM] unsigned int 
 32165 ;; Auto vars:     Size  Location     Type
 32166 ;;  __wmul          2   28[COMRAM] unsigned int 
 32167 ;; Return value:  Size  Location     Type
 32168 ;;                  2   24[COMRAM] unsigned int 
 32169 ;; Registers used:
 32170 ;;		wreg, status,2, status,0, prodl, prodh
 32171 ;; Tracked objects:
 32172 ;;		On entry : 0/0
 32173 ;;		On exit  : 0/0
 32174 ;;		Unchanged: 0/0
 32175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32180 ;;Total ram usage:        6 bytes
 32181 ;; Hardware stack levels used:    1
 32182 ;; Hardware stack levels required when called:    4
 32183 ;; This function calls:
 32184 ;;		Nothing
 32185 ;; This function is called by:
 32186 ;;		_OsAlrm_ProcessOsAlarms
 32187 ;; This function uses a non-reentrant model
 32188 ;;
 32189                           
 32190                           	psect	text155
 32191  005AF6                     __ptext155:
 32192                           	opt stack 0
 32193  005AF6                     i1___wmul:
 32194                           	opt stack 10
 32195                           
 32196                           ;incstack = 0
 32197  005AF6  5019               	movf	i1___wmul@multiplier,w,c
 32198  005AF8  021B               	mulwf	i1___wmul@multiplicand,c
 32199  005AFA  CFF3 F01D          	movff	prodl,i1___wmul@product
 32200  005AFE  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 32201  005B02  5019               	movf	i1___wmul@multiplier,w,c
 32202  005B04  021C               	mulwf	i1___wmul@multiplicand+1,c
 32203  005B06  50F3               	movf	prodl,w,c
 32204  005B08  261E               	addwf	i1___wmul@product+1,f,c
 32205  005B0A  501A               	movf	i1___wmul@multiplier+1,w,c
 32206  005B0C  021B               	mulwf	i1___wmul@multiplicand,c
 32207  005B0E  50F3               	movf	prodl,w,c
 32208  005B10  261E               	addwf	i1___wmul@product+1,f,c
 32209  005B12  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 32210  005B16  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 32211  005B1A  0012               	return	
 32212  005B1C                     __end_ofi1___wmul:
 32213                           	opt stack 0
 32214                           tosu	equ	0xFFF
 32215                           tosh	equ	0xFFE
 32216                           tosl	equ	0xFFD
 32217                           pclatu	equ	0xFFB
 32218                           pclath	equ	0xFFA
 32219                           tblptru	equ	0xFF8
 32220                           tblptrh	equ	0xFF7
 32221                           tblptrl	equ	0xFF6
 32222                           tablat	equ	0xFF5
 32223                           prodh	equ	0xFF4
 32224                           prodl	equ	0xFF3
 32225                           intcon	equ	0xFF2
 32226                           intcon2	equ	0xFF1
 32227                           intcon3	equ	0xFF0
 32228                           indf0	equ	0xFEF
 32229                           postinc0	equ	0xFEE
 32230                           plusw0	equ	0xFEB
 32231                           fsr0h	equ	0xFEA
 32232                           fsr0l	equ	0xFE9
 32233                           wreg	equ	0xFE8
 32234                           indf1	equ	0xFE7
 32235                           postinc1	equ	0xFE6
 32236                           postdec1	equ	0xFE5
 32237                           plusw1	equ	0xFE3
 32238                           fsr1h	equ	0xFE2
 32239                           fsr1l	equ	0xFE1
 32240                           bsr	equ	0xFE0
 32241                           indf2	equ	0xFDF
 32242                           postinc2	equ	0xFDE
 32243                           postdec2	equ	0xFDD
 32244                           plusw2	equ	0xFDB
 32245                           fsr2h	equ	0xFDA
 32246                           fsr2l	equ	0xFD9
 32247                           status	equ	0xFD8
 32248                           
 32249 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 32250 ;; Defined at:
 32251 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32252 ;; Parameters:    Size  Location     Type
 32253 ;;  OsAlarmId       1    wreg     unsigned char 
 32254 ;; Auto vars:     Size  Location     Type
 32255 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 32256 ;; Return value:  Size  Location     Type
 32257 ;;                  1    wreg      void 
 32258 ;; Registers used:
 32259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32260 ;; Tracked objects:
 32261 ;;		On entry : 0/0
 32262 ;;		On exit  : 0/0
 32263 ;;		Unchanged: 0/0
 32264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32269 ;;Total ram usage:        1 bytes
 32270 ;; Hardware stack levels used:    1
 32271 ;; Hardware stack levels required when called:    4
 32272 ;; This function calls:
 32273 ;;		Nothing
 32274 ;; This function is called by:
 32275 ;;		_OsAlrm_ProcessOsAlarms
 32276 ;; This function uses a non-reentrant model
 32277 ;;
 32278                           
 32279                           	psect	text156
 32280  005084                     __ptext156:
 32281                           	opt stack 0
 32282  005084                     _OsAlrm_ClearOsAlarm:
 32283                           	opt stack 10
 32284                           
 32285                           ;incstack = 0
 32286                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 32287  005084  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 32288                           
 32289                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 32290  005086  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32291  005088  0D0B               	mullw	11
 32292  00508A  0E00               	movlw	low _OsAlarms
 32293  00508C  24F3               	addwf	prodl,w,c
 32294  00508E  6ED9               	movwf	fsr2l,c
 32295  005090  0E06               	movlw	high _OsAlarms
 32296  005092  20F4               	addwfc	prodh,w,c
 32297  005094  6EDA               	movwf	fsr2h,c
 32298  005096  0E00               	movlw	0
 32299  005098  6EDF               	movwf	indf2,c
 32300                           
 32301                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 32302  00509A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32303  00509C  0D0B               	mullw	11
 32304  00509E  0E01               	movlw	1
 32305  0050A0  26F3               	addwf	prodl,f,c
 32306  0050A2  0E00               	movlw	0
 32307  0050A4  22F4               	addwfc	prodh,f,c
 32308  0050A6  0E00               	movlw	low _OsAlarms
 32309  0050A8  24F3               	addwf	prodl,w,c
 32310  0050AA  6ED9               	movwf	fsr2l,c
 32311  0050AC  0E06               	movlw	high _OsAlarms
 32312  0050AE  20F4               	addwfc	prodh,w,c
 32313  0050B0  6EDA               	movwf	fsr2h,c
 32314  0050B2  6ADE               	clrf	postinc2,c
 32315  0050B4  6ADE               	clrf	postinc2,c
 32316  0050B6  6ADE               	clrf	postinc2,c
 32317  0050B8  6ADD               	clrf	postdec2,c
 32318                           
 32319                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 32320  0050BA  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 32321  0050BC  0D0B               	mullw	11
 32322  0050BE  0E05               	movlw	5
 32323  0050C0  26F3               	addwf	prodl,f,c
 32324  0050C2  0E00               	movlw	0
 32325  0050C4  22F4               	addwfc	prodh,f,c
 32326  0050C6  0E00               	movlw	low _OsAlarms
 32327  0050C8  24F3               	addwf	prodl,w,c
 32328  0050CA  6ED9               	movwf	fsr2l,c
 32329  0050CC  0E06               	movlw	high _OsAlarms
 32330  0050CE  20F4               	addwfc	prodh,w,c
 32331  0050D0  6EDA               	movwf	fsr2h,c
 32332  0050D2  6ADE               	clrf	postinc2,c
 32333  0050D4  6ADE               	clrf	postinc2,c
 32334  0050D6  6ADE               	clrf	postinc2,c
 32335  0050D8  6ADD               	clrf	postdec2,c
 32336  0050DA  0012               	return		;funcret
 32337  0050DC                     __end_of_OsAlrm_ClearOsAlarm:
 32338                           	opt stack 0
 32339                           tosu	equ	0xFFF
 32340                           tosh	equ	0xFFE
 32341                           tosl	equ	0xFFD
 32342                           pclatu	equ	0xFFB
 32343                           pclath	equ	0xFFA
 32344                           tblptru	equ	0xFF8
 32345                           tblptrh	equ	0xFF7
 32346                           tblptrl	equ	0xFF6
 32347                           tablat	equ	0xFF5
 32348                           prodh	equ	0xFF4
 32349                           prodl	equ	0xFF3
 32350                           intcon	equ	0xFF2
 32351                           intcon2	equ	0xFF1
 32352                           intcon3	equ	0xFF0
 32353                           indf0	equ	0xFEF
 32354                           postinc0	equ	0xFEE
 32355                           plusw0	equ	0xFEB
 32356                           fsr0h	equ	0xFEA
 32357                           fsr0l	equ	0xFE9
 32358                           wreg	equ	0xFE8
 32359                           indf1	equ	0xFE7
 32360                           postinc1	equ	0xFE6
 32361                           postdec1	equ	0xFE5
 32362                           plusw1	equ	0xFE3
 32363                           fsr1h	equ	0xFE2
 32364                           fsr1l	equ	0xFE1
 32365                           bsr	equ	0xFE0
 32366                           indf2	equ	0xFDF
 32367                           postinc2	equ	0xFDE
 32368                           postdec2	equ	0xFDD
 32369                           plusw2	equ	0xFDB
 32370                           fsr2h	equ	0xFDA
 32371                           fsr2l	equ	0xFD9
 32372                           status	equ	0xFD8
 32373                           
 32374 ;; *************** function _I2cDummyTx *****************
 32375 ;; Defined at:
 32376 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32377 ;; Parameters:    Size  Location     Type
 32378 ;;		None
 32379 ;; Auto vars:     Size  Location     Type
 32380 ;;		None
 32381 ;; Return value:  Size  Location     Type
 32382 ;;                  1    wreg      void 
 32383 ;; Registers used:
 32384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32385 ;; Tracked objects:
 32386 ;;		On entry : 0/0
 32387 ;;		On exit  : 0/0
 32388 ;;		Unchanged: 0/0
 32389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32394 ;;Total ram usage:        0 bytes
 32395 ;; Hardware stack levels used:    1
 32396 ;; Hardware stack levels required when called:    6
 32397 ;; This function calls:
 32398 ;;		i1_I2cSlv_SendI2cMsg
 32399 ;; This function is called by:
 32400 ;;		_I2cSlv_MainTask
 32401 ;;		_OsAlrm_ProcessOsAlarms
 32402 ;; This function uses a non-reentrant model
 32403 ;;
 32404                           
 32405                           	psect	text157
 32406  005CC8                     __ptext157:
 32407                           	opt stack 0
 32408  005CC8                     _I2cDummyTx:
 32409                           	opt stack 8
 32410                           
 32411                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 32412                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 32413                           
 32414                           ;incstack = 0
 32415  005CC8  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 32416  005CCA  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 32417  005CCC  0E01               	movlw	high I2cDummyTx@DummyBuffer
 32418  005CCE  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 32419  005CD0  0E00               	movlw	0
 32420  005CD2  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 32421  005CD4  0E01               	movlw	1
 32422  005CD6  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 32423  005CD8  EC15  F02C         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 32424                           
 32425                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 32426  005CDC  0E01               	movlw	1
 32427  005CDE  0101               	movlb	1	; () banked
 32428  005CE0  6FEB               	movwf	_I2cBusStatus& (0+255),b
 32429                           
 32430                           ; BSR set to: 1
 32431  005CE2  0012               	return		;funcret
 32432  005CE4                     __end_of_I2cDummyTx:
 32433                           	opt stack 0
 32434                           tosu	equ	0xFFF
 32435                           tosh	equ	0xFFE
 32436                           tosl	equ	0xFFD
 32437                           pclatu	equ	0xFFB
 32438                           pclath	equ	0xFFA
 32439                           tblptru	equ	0xFF8
 32440                           tblptrh	equ	0xFF7
 32441                           tblptrl	equ	0xFF6
 32442                           tablat	equ	0xFF5
 32443                           prodh	equ	0xFF4
 32444                           prodl	equ	0xFF3
 32445                           intcon	equ	0xFF2
 32446                           intcon2	equ	0xFF1
 32447                           intcon3	equ	0xFF0
 32448                           indf0	equ	0xFEF
 32449                           postinc0	equ	0xFEE
 32450                           plusw0	equ	0xFEB
 32451                           fsr0h	equ	0xFEA
 32452                           fsr0l	equ	0xFE9
 32453                           wreg	equ	0xFE8
 32454                           indf1	equ	0xFE7
 32455                           postinc1	equ	0xFE6
 32456                           postdec1	equ	0xFE5
 32457                           plusw1	equ	0xFE3
 32458                           fsr1h	equ	0xFE2
 32459                           fsr1l	equ	0xFE1
 32460                           bsr	equ	0xFE0
 32461                           indf2	equ	0xFDF
 32462                           postinc2	equ	0xFDE
 32463                           postdec2	equ	0xFDD
 32464                           plusw2	equ	0xFDB
 32465                           fsr2h	equ	0xFDA
 32466                           fsr2l	equ	0xFD9
 32467                           status	equ	0xFD8
 32468                           
 32469 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 32470 ;; Defined at:
 32471 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 32472 ;; Parameters:    Size  Location     Type
 32473 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 32474 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 32475 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 32476 ;;  DataLenght      1   30[COMRAM] unsigned char 
 32477 ;; Auto vars:     Size  Location     Type
 32478 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 32479 ;; Return value:  Size  Location     Type
 32480 ;;                  1    wreg      unsigned char 
 32481 ;; Registers used:
 32482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32483 ;; Tracked objects:
 32484 ;;		On entry : 0/0
 32485 ;;		On exit  : 0/0
 32486 ;;		Unchanged: 0/0
 32487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32491 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32492 ;;Total ram usage:        5 bytes
 32493 ;; Hardware stack levels used:    1
 32494 ;; Hardware stack levels required when called:    5
 32495 ;; This function calls:
 32496 ;;		i1_GenerateEvt
 32497 ;; This function is called by:
 32498 ;;		_I2cDummyTx
 32499 ;; This function uses a non-reentrant model
 32500 ;;
 32501                           
 32502                           	psect	text158
 32503  00582A                     __ptext158:
 32504                           	opt stack 0
 32505  00582A                     i1_I2cSlv_SendI2cMsg:
 32506                           	opt stack 8
 32507                           
 32508                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 32509                           
 32510                           ; BSR set to: 1
 32511                           ;incstack = 0
 32512  00582A  0E00               	movlw	0
 32513  00582C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32514                           
 32515                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 32516  00582E  0100               	movlb	0	; () banked
 32517  005830  05CC               	decf	_I2cComSts& (0+255),w,b
 32518  005832  B4D8               	btfsc	status,2,c
 32519  005834  D014               	goto	i1l1395
 32520                           
 32521                           ; BSR set to: 0
 32522                           ;i2c_slv.c: 257: {
 32523                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 32524  005836  C01E  F39D         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 32525                           
 32526                           ; BSR set to: 0
 32527                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 32528  00583A  0E00               	movlw	0
 32529  00583C  0103               	movlb	3	; () banked
 32530  00583E  6F9E               	movwf	(_I2cTxPacket+1)& (0+255),b
 32531                           
 32532                           ; BSR set to: 3
 32533                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 32534  005840  C01F  F3A1         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 32535                           
 32536                           ; BSR set to: 3
 32537                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 32538  005844  C01C  F39F         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 32539  005848  C01D  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 32540                           
 32541                           ; BSR set to: 3
 32542                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 32543  00584C  0ED6               	movlw	low _I2cWriteDataEvt
 32544  00584E  6E19               	movwf	i1GenerateEvt@Event,c
 32545  005850  0E00               	movlw	high _I2cWriteDataEvt
 32546  005852  6E1A               	movwf	i1GenerateEvt@Event+1,c
 32547  005854  ECC6  F02E         	call	i1_GenerateEvt	;wreg free
 32548                           
 32549                           ;i2c_slv.c: 267: TxSts = 1u;
 32550  005858  0E01               	movlw	1
 32551  00585A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32552                           
 32553                           ;i2c_slv.c: 268: }
 32554  00585C  0012               	return	
 32555  00585E                     i1l1395:
 32556                           
 32557                           ;i2c_slv.c: 269: else
 32558                           ;i2c_slv.c: 270: {
 32559                           ;i2c_slv.c: 272: TxSts = 0u;
 32560  00585E  0E00               	movlw	0
 32561  005860  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 32562  005862  0012               	return	
 32563  005864                     __end_ofi1_I2cSlv_SendI2cMsg:
 32564                           	opt stack 0
 32565                           tosu	equ	0xFFF
 32566                           tosh	equ	0xFFE
 32567                           tosl	equ	0xFFD
 32568                           pclatu	equ	0xFFB
 32569                           pclath	equ	0xFFA
 32570                           tblptru	equ	0xFF8
 32571                           tblptrh	equ	0xFF7
 32572                           tblptrl	equ	0xFF6
 32573                           tablat	equ	0xFF5
 32574                           prodh	equ	0xFF4
 32575                           prodl	equ	0xFF3
 32576                           intcon	equ	0xFF2
 32577                           intcon2	equ	0xFF1
 32578                           intcon3	equ	0xFF0
 32579                           indf0	equ	0xFEF
 32580                           postinc0	equ	0xFEE
 32581                           plusw0	equ	0xFEB
 32582                           fsr0h	equ	0xFEA
 32583                           fsr0l	equ	0xFE9
 32584                           wreg	equ	0xFE8
 32585                           indf1	equ	0xFE7
 32586                           postinc1	equ	0xFE6
 32587                           postdec1	equ	0xFE5
 32588                           plusw1	equ	0xFE3
 32589                           fsr1h	equ	0xFE2
 32590                           fsr1l	equ	0xFE1
 32591                           bsr	equ	0xFE0
 32592                           indf2	equ	0xFDF
 32593                           postinc2	equ	0xFDE
 32594                           postdec2	equ	0xFDD
 32595                           plusw2	equ	0xFDB
 32596                           fsr2h	equ	0xFDA
 32597                           fsr2l	equ	0xFD9
 32598                           status	equ	0xFD8
 32599                           
 32600 ;; *************** function i1_GenerateEvt *****************
 32601 ;; Defined at:
 32602 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32603 ;; Parameters:    Size  Location     Type
 32604 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 32605 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32606 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32607 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 32608 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 32609 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32610 ;; Auto vars:     Size  Location     Type
 32611 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 32612 ;; Return value:  Size  Location     Type
 32613 ;;                  1    wreg      enum E7699
 32614 ;; Registers used:
 32615 ;;		wreg, fsr2l, fsr2h, status,2
 32616 ;; Tracked objects:
 32617 ;;		On entry : 0/0
 32618 ;;		On exit  : 0/0
 32619 ;;		Unchanged: 0/0
 32620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32624 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32625 ;;Total ram usage:        3 bytes
 32626 ;; Hardware stack levels used:    1
 32627 ;; Hardware stack levels required when called:    4
 32628 ;; This function calls:
 32629 ;;		Nothing
 32630 ;; This function is called by:
 32631 ;;		i1_I2cSlv_SendI2cMsg
 32632 ;; This function uses a non-reentrant model
 32633 ;;
 32634                           
 32635                           	psect	text159
 32636  005D8C                     __ptext159:
 32637                           	opt stack 0
 32638  005D8C                     i1_GenerateEvt:
 32639                           	opt stack 8
 32640                           
 32641                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32642                           
 32643                           ;incstack = 0
 32644  005D8C  0E00               	movlw	0
 32645  005D8E  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 32646                           
 32647                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32648  005D90  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 32649  005D94  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 32650  005D98  0E02               	movlw	2
 32651  005D9A  6EDF               	movwf	indf2,c
 32652                           
 32653                           ;os_ser.c: 83: EventStatus = EventSent;
 32654  005D9C  0E02               	movlw	2
 32655  005D9E  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 32656  005DA0  0012               	return	
 32657  005DA2                     __end_ofi1_GenerateEvt:
 32658                           	opt stack 0
 32659                           tosu	equ	0xFFF
 32660                           tosh	equ	0xFFE
 32661                           tosl	equ	0xFFD
 32662                           pclatu	equ	0xFFB
 32663                           pclath	equ	0xFFA
 32664                           tblptru	equ	0xFF8
 32665                           tblptrh	equ	0xFF7
 32666                           tblptrl	equ	0xFF6
 32667                           tablat	equ	0xFF5
 32668                           prodh	equ	0xFF4
 32669                           prodl	equ	0xFF3
 32670                           intcon	equ	0xFF2
 32671                           intcon2	equ	0xFF1
 32672                           intcon3	equ	0xFF0
 32673                           indf0	equ	0xFEF
 32674                           postinc0	equ	0xFEE
 32675                           plusw0	equ	0xFEB
 32676                           fsr0h	equ	0xFEA
 32677                           fsr0l	equ	0xFE9
 32678                           wreg	equ	0xFE8
 32679                           indf1	equ	0xFE7
 32680                           postinc1	equ	0xFE6
 32681                           postdec1	equ	0xFE5
 32682                           plusw1	equ	0xFE3
 32683                           fsr1h	equ	0xFE2
 32684                           fsr1l	equ	0xFE1
 32685                           bsr	equ	0xFE0
 32686                           indf2	equ	0xFDF
 32687                           postinc2	equ	0xFDE
 32688                           postdec2	equ	0xFDD
 32689                           plusw2	equ	0xFDB
 32690                           fsr2h	equ	0xFDA
 32691                           fsr2l	equ	0xFD9
 32692                           status	equ	0xFD8
 32693                           
 32694 ;; *************** function _HighPriorityIsr *****************
 32695 ;; Defined at:
 32696 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 32697 ;; Parameters:    Size  Location     Type
 32698 ;;		None
 32699 ;; Auto vars:     Size  Location     Type
 32700 ;;		None
 32701 ;; Return value:  Size  Location     Type
 32702 ;;                  1    wreg      void 
 32703 ;; Registers used:
 32704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32705 ;; Tracked objects:
 32706 ;;		On entry : 0/0
 32707 ;;		On exit  : 0/0
 32708 ;;		Unchanged: 0/0
 32709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32712 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32713 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32714 ;;Total ram usage:       18 bytes
 32715 ;; Hardware stack levels used:    1
 32716 ;; Hardware stack levels required when called:    3
 32717 ;; This function calls:
 32718 ;;		_Mcu_Int0Isr
 32719 ;;		_Mcu_Int1Isr
 32720 ;;		_Rtcc_RtcIsr
 32721 ;;		_Uart_Uart1RxIsr
 32722 ;; This function is called by:
 32723 ;;		Interrupt level 2
 32724 ;; This function uses a non-reentrant model
 32725 ;;
 32726                           
 32727                           	psect	intcode
 32728  000008                     __pintcode:
 32729                           	opt stack 0
 32730  000008                     _HighPriorityIsr:
 32731                           	opt stack 8
 32732                           
 32733                           ;incstack = 0
 32734  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 32735  00000A  EFC2  F01F         	goto	int_func
 32736                           tosu	equ	0xFFF
 32737                           tosh	equ	0xFFE
 32738                           tosl	equ	0xFFD
 32739                           pclatu	equ	0xFFB
 32740                           pclath	equ	0xFFA
 32741                           tblptru	equ	0xFF8
 32742                           tblptrh	equ	0xFF7
 32743                           tblptrl	equ	0xFF6
 32744                           tablat	equ	0xFF5
 32745                           prodh	equ	0xFF4
 32746                           prodl	equ	0xFF3
 32747                           intcon	equ	0xFF2
 32748                           intcon2	equ	0xFF1
 32749                           intcon3	equ	0xFF0
 32750                           indf0	equ	0xFEF
 32751                           postinc0	equ	0xFEE
 32752                           plusw0	equ	0xFEB
 32753                           fsr0h	equ	0xFEA
 32754                           fsr0l	equ	0xFE9
 32755                           wreg	equ	0xFE8
 32756                           indf1	equ	0xFE7
 32757                           postinc1	equ	0xFE6
 32758                           postdec1	equ	0xFE5
 32759                           plusw1	equ	0xFE3
 32760                           fsr1h	equ	0xFE2
 32761                           fsr1l	equ	0xFE1
 32762                           bsr	equ	0xFE0
 32763                           indf2	equ	0xFDF
 32764                           postinc2	equ	0xFDE
 32765                           postdec2	equ	0xFDD
 32766                           plusw2	equ	0xFDB
 32767                           fsr2h	equ	0xFDA
 32768                           fsr2l	equ	0xFD9
 32769                           status	equ	0xFD8
 32770                           
 32771                           	psect	intcode_body
 32772  003F84                     __pintcode_body:
 32773                           	opt stack 8
 32774  003F84                     int_func:
 32775                           	opt stack 8
 32776  003F84  CFFA F007          	movff	pclath,??_HighPriorityIsr
 32777  003F88  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 32778  003F8C  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 32779  003F90  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 32780  003F94  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 32781  003F98  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 32782  003F9C  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 32783  003FA0  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 32784  003FA4  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 32785  003FA8  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 32786  003FAC  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 32787  003FB0  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 32788  003FB4  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 32789  003FB8  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 32790  003FBC  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 32791  003FC0  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 32792  003FC4  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 32793  003FC8  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 32794                           
 32795                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 32796  003FCC  B2F2               	btfsc	intcon,1,c	;volatile
 32797                           
 32798                           ;irq.c: 158: {
 32799                           ;irq.c: 160: Mcu_Int0Isr();
 32800  003FCE  EC5B  F02F         	call	_Mcu_Int0Isr	;wreg free
 32801                           
 32802                           ;irq.c: 161: }
 32803                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 32804  003FD2  B0F0               	btfsc	intcon3,0,c	;volatile
 32805                           
 32806                           ;irq.c: 167: {
 32807                           ;irq.c: 169: Mcu_Int1Isr();
 32808  003FD4  EC59  F02F         	call	_Mcu_Int1Isr	;wreg free
 32809                           
 32810                           ;irq.c: 170: }
 32811                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 32812  003FD8  B0A4               	btfsc	4004,0,c	;volatile
 32813                           
 32814                           ;irq.c: 203: {
 32815                           ;irq.c: 205: Rtcc_RtcIsr();
 32816  003FDA  EC57  F02F         	call	_Rtcc_RtcIsr	;wreg free
 32817                           
 32818                           ;irq.c: 206: }
 32819                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 32820  003FDE  BA9E               	btfsc	3998,5,c	;volatile
 32821                           
 32822                           ;irq.c: 212: {
 32823                           ;irq.c: 214: Uart_Uart1RxIsr();
 32824  003FE0  EC10  F02F         	call	_Uart_Uart1RxIsr	;wreg free
 32825  003FE4  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 32826  003FE8  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 32827  003FEC  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 32828  003FF0  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 32829  003FF4  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 32830  003FF8  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 32831  003FFC  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 32832  004000  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 32833  004004  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 32834  004008  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 32835  00400C  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 32836  004010  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 32837  004014  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 32838  004018  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 32839  00401C  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 32840  004020  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 32841  004024  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 32842  004028  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 32843  00402C  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 32844  00402E  0011               	retfie		f
 32845  004030                     __end_of_HighPriorityIsr:
 32846                           	opt stack 0
 32847                           tosu	equ	0xFFF
 32848                           tosh	equ	0xFFE
 32849                           tosl	equ	0xFFD
 32850                           pclatu	equ	0xFFB
 32851                           pclath	equ	0xFFA
 32852                           tblptru	equ	0xFF8
 32853                           tblptrh	equ	0xFF7
 32854                           tblptrl	equ	0xFF6
 32855                           tablat	equ	0xFF5
 32856                           prodh	equ	0xFF4
 32857                           prodl	equ	0xFF3
 32858                           intcon	equ	0xFF2
 32859                           intcon2	equ	0xFF1
 32860                           intcon3	equ	0xFF0
 32861                           indf0	equ	0xFEF
 32862                           postinc0	equ	0xFEE
 32863                           plusw0	equ	0xFEB
 32864                           fsr0h	equ	0xFEA
 32865                           fsr0l	equ	0xFE9
 32866                           wreg	equ	0xFE8
 32867                           indf1	equ	0xFE7
 32868                           postinc1	equ	0xFE6
 32869                           postdec1	equ	0xFE5
 32870                           plusw1	equ	0xFE3
 32871                           fsr1h	equ	0xFE2
 32872                           fsr1l	equ	0xFE1
 32873                           bsr	equ	0xFE0
 32874                           indf2	equ	0xFDF
 32875                           postinc2	equ	0xFDE
 32876                           postdec2	equ	0xFDD
 32877                           plusw2	equ	0xFDB
 32878                           fsr2h	equ	0xFDA
 32879                           fsr2l	equ	0xFD9
 32880                           status	equ	0xFD8
 32881                           
 32882 ;; *************** function _Uart_Uart1RxIsr *****************
 32883 ;; Defined at:
 32884 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32885 ;; Parameters:    Size  Location     Type
 32886 ;;		None
 32887 ;; Auto vars:     Size  Location     Type
 32888 ;;		None
 32889 ;; Return value:  Size  Location     Type
 32890 ;;                  1    wreg      void 
 32891 ;; Registers used:
 32892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32893 ;; Tracked objects:
 32894 ;;		On entry : 0/0
 32895 ;;		On exit  : 0/0
 32896 ;;		Unchanged: 0/0
 32897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32902 ;;Total ram usage:        0 bytes
 32903 ;; Hardware stack levels used:    1
 32904 ;; Hardware stack levels required when called:    2
 32905 ;; This function calls:
 32906 ;;		_Uart_MdmGsmGprsReadService
 32907 ;; This function is called by:
 32908 ;;		_HighPriorityIsr
 32909 ;; This function uses a non-reentrant model
 32910 ;;
 32911                           
 32912                           	psect	text161
 32913  005E20                     __ptext161:
 32914                           	opt stack 0
 32915  005E20                     _Uart_Uart1RxIsr:
 32916                           	opt stack 8
 32917                           
 32918                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 32919                           ;uart_drv.c: 590: UartRxData = RCREG1;
 32920                           
 32921                           ;incstack = 0
 32922  005E20  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 32923                           
 32924                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 32925  005E24  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 32926  005E28  0E01               	movlw	1
 32927  005E2A  EC5E  F01C         	call	_Uart_MdmGsmGprsReadService
 32928  005E2E  0012               	return		;funcret
 32929  005E30                     __end_of_Uart_Uart1RxIsr:
 32930                           	opt stack 0
 32931                           tosu	equ	0xFFF
 32932                           tosh	equ	0xFFE
 32933                           tosl	equ	0xFFD
 32934                           pclatu	equ	0xFFB
 32935                           pclath	equ	0xFFA
 32936                           tblptru	equ	0xFF8
 32937                           tblptrh	equ	0xFF7
 32938                           tblptrl	equ	0xFF6
 32939                           tablat	equ	0xFF5
 32940                           prodh	equ	0xFF4
 32941                           prodl	equ	0xFF3
 32942                           intcon	equ	0xFF2
 32943                           intcon2	equ	0xFF1
 32944                           intcon3	equ	0xFF0
 32945                           indf0	equ	0xFEF
 32946                           postinc0	equ	0xFEE
 32947                           plusw0	equ	0xFEB
 32948                           fsr0h	equ	0xFEA
 32949                           fsr0l	equ	0xFE9
 32950                           wreg	equ	0xFE8
 32951                           indf1	equ	0xFE7
 32952                           postinc1	equ	0xFE6
 32953                           postdec1	equ	0xFE5
 32954                           plusw1	equ	0xFE3
 32955                           fsr1h	equ	0xFE2
 32956                           fsr1l	equ	0xFE1
 32957                           bsr	equ	0xFE0
 32958                           indf2	equ	0xFDF
 32959                           postinc2	equ	0xFDE
 32960                           postdec2	equ	0xFDD
 32961                           plusw2	equ	0xFDB
 32962                           fsr2h	equ	0xFDA
 32963                           fsr2l	equ	0xFD9
 32964                           status	equ	0xFD8
 32965                           
 32966 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 32967 ;; Defined at:
 32968 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32969 ;; Parameters:    Size  Location     Type
 32970 ;;  Module          1    wreg     unsigned char 
 32971 ;;  UartData        1    3[COMRAM] unsigned char 
 32972 ;; Auto vars:     Size  Location     Type
 32973 ;;  Module          1    0[COMRAM] unsigned char 
 32974 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 32975 ;; Return value:  Size  Location     Type
 32976 ;;                  1    wreg      void 
 32977 ;; Registers used:
 32978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32979 ;; Tracked objects:
 32980 ;;		On entry : 0/0
 32981 ;;		On exit  : 0/0
 32982 ;;		Unchanged: 0/0
 32983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32984 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32988 ;;Total ram usage:        3 bytes
 32989 ;; Hardware stack levels used:    1
 32990 ;; Hardware stack levels required when called:    1
 32991 ;; This function calls:
 32992 ;;		i2_GenerateEvt
 32993 ;; This function is called by:
 32994 ;;		_Uart_Uart1RxIsr
 32995 ;; This function uses a non-reentrant model
 32996 ;;
 32997                           
 32998                           	psect	text162
 32999  0038BC                     __ptext162:
 33000                           	opt stack 0
 33001  0038BC                     _Uart_MdmGsmGprsReadService:
 33002                           	opt stack 8
 33003                           
 33004                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 33005                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 33006                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 33007                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 33008                           
 33009                           ;incstack = 0
 33010  0038BC  0E00               	movlw	0
 33011  0038BE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33012  0038C0  0E00               	movlw	0
 33013  0038C2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33014                           
 33015                           ;uart_drv.c: 383: switch (RxState)
 33016  0038C4  D058               	goto	i2l680
 33017  0038C6                     
 33018                           ;uart_drv.c: 387: if (UartData == '\r')
 33019  0038C6  0E0D               	movlw	13
 33020  0038C8  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33021  0038CA  A4D8               	btfss	status,2,c
 33022  0038CC  D003               	goto	i2l682
 33023                           
 33024                           ;uart_drv.c: 388: {
 33025                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 33026  0038CE  0E01               	movlw	1
 33027  0038D0  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33028                           
 33029                           ;uart_drv.c: 391: }
 33030  0038D2  0012               	return	
 33031  0038D4                     i2l682:
 33032                           
 33033                           ;uart_drv.c: 392: else
 33034                           ;uart_drv.c: 393: {
 33035                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 33036  0038D4  0E90               	movlw	144
 33037  0038D6  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33038  0038D8  0E01               	movlw	1
 33039  0038DA  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33040  0038DC  B0D8               	btfsc	status,0,c
 33041  0038DE  0012               	return	
 33042                           
 33043                           ;uart_drv.c: 395: {
 33044                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 33045  0038E0  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33046  0038E2  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33047  0038E4  6ED9               	movwf	fsr2l,c
 33048  0038E6  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33049  0038E8  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33050  0038EA  6EDA               	movwf	fsr2h,c
 33051  0038EC  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 33052                           
 33053                           ;uart_drv.c: 399: RxCounter++;
 33054  0038F0  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 33055  0038F2  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 33056                           
 33057                           ;uart_drv.c: 400: }
 33058                           ;uart_drv.c: 401: }
 33059                           ;uart_drv.c: 402: break;
 33060  0038F4  0012               	return	
 33061  0038F6                     
 33062                           ;uart_drv.c: 406: if (UartData == '\n')
 33063  0038F6  0E0A               	movlw	10
 33064  0038F8  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 33065  0038FA  A4D8               	btfss	status,2,c
 33066  0038FC  D035               	goto	i2l688
 33067                           
 33068                           ;uart_drv.c: 407: {
 33069                           ;uart_drv.c: 409: if (RxCounter > 0)
 33070  0038FE  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33071  003900  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33072  003902  B4D8               	btfsc	status,2,c
 33073  003904  D031               	goto	i2l688
 33074                           
 33075                           ;uart_drv.c: 410: {
 33076                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 33077  003906  0E00               	movlw	0
 33078  003908  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 33079  00390A  0E00               	movlw	0
 33080  00390C  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 33081  00390E  D010               	goto	i2l689
 33082  003910                     
 33083                           ;uart_drv.c: 413: {
 33084                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 33085  003910  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 33086  003912  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33087  003914  6ED9               	movwf	fsr2l,c
 33088  003916  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 33089  003918  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33090  00391A  6EDA               	movwf	fsr2h,c
 33091  00391C  0E58               	movlw	low _RxBuffer
 33092  00391E  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33093  003920  6EE1               	movwf	fsr1l,c
 33094  003922  0E0C               	movlw	high _RxBuffer
 33095  003924  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33096  003926  6EE2               	movwf	fsr1h,c
 33097  003928  CFDF FFE7          	movff	indf2,indf1
 33098  00392C  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 33099  00392E  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 33100  003930                     i2l689:
 33101  003930  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 33102  003932  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 33103  003934  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 33104  003936  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 33105  003938  A0D8               	btfss	status,0,c
 33106  00393A  D7EA               	goto	i2l690
 33107                           
 33108                           ;uart_drv.c: 415: }
 33109                           ;uart_drv.c: 417: RxLen = RxCounter;
 33110  00393C  C023  F0BE         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 33111  003940  C024  F0BF         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 33112                           
 33113                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 33114  003944  0E3C               	movlw	low _NewStringReceived
 33115  003946  6E01               	movwf	i2GenerateEvt@Event,c
 33116  003948  0E00               	movlw	high _NewStringReceived
 33117  00394A  6E02               	movwf	i2GenerateEvt@Event+1,c
 33118  00394C  ECD1  F02E         	call	i2_GenerateEvt	;wreg free
 33119                           
 33120                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 33121  003950  0E3B               	movlw	low _NewMdmEvtParserRequest
 33122  003952  6E01               	movwf	i2GenerateEvt@Event,c
 33123  003954  0E00               	movlw	high _NewMdmEvtParserRequest
 33124  003956  6E02               	movwf	i2GenerateEvt@Event+1,c
 33125  003958  ECD1  F02E         	call	i2_GenerateEvt	;wreg free
 33126                           
 33127                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 33128  00395C  0E3A               	movlw	low _NewStringMdmTerminal
 33129  00395E  6E01               	movwf	i2GenerateEvt@Event,c
 33130  003960  0E00               	movlw	high _NewStringMdmTerminal
 33131  003962  6E02               	movwf	i2GenerateEvt@Event+1,c
 33132  003964  ECD1  F02E         	call	i2_GenerateEvt	;wreg free
 33133  003968                     i2l688:
 33134                           
 33135                           ;uart_drv.c: 427: }
 33136                           ;uart_drv.c: 429: RxState = ReadData;
 33137                           
 33138                           ;uart_drv.c: 424: else
 33139                           ;uart_drv.c: 425: {
 33140                           
 33141                           ;uart_drv.c: 422: }
 33142                           ;uart_drv.c: 423: }
 33143  003968  0E00               	movlw	0
 33144  00396A  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 33145                           
 33146                           ;uart_drv.c: 431: RxCounter = 0;
 33147  00396C  0E00               	movlw	0
 33148  00396E  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 33149  003970  0E00               	movlw	0
 33150  003972  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 33151                           
 33152                           ;uart_drv.c: 436: }
 33153                           
 33154                           ;uart_drv.c: 435: break;
 33155                           
 33156                           ;uart_drv.c: 434: default:
 33157                           
 33158                           ;uart_drv.c: 432: break;
 33159  003974  0012               	return	
 33160  003976                     i2l680:
 33161  003976  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 33162                           
 33163                           ; Switch size 1, requested type "space"
 33164                           ; Number of cases is 2, Range of values is 0 to 1
 33165                           ; switch strategies available:
 33166                           ; Name         Instructions Cycles
 33167                           ; simple_byte            7     4 (average)
 33168                           ;	Chosen strategy is simple_byte
 33169  003978  0A00               	xorlw	0	; case 0
 33170  00397A  B4D8               	btfsc	status,2,c
 33171  00397C  D7A4               	goto	i2l681
 33172  00397E  0A01               	xorlw	1	; case 1
 33173  003980  A4D8               	btfss	status,2,c
 33174  003982  0012               	return	
 33175  003984  D7B8               	goto	i2l686
 33176  003986                     __end_of_Uart_MdmGsmGprsReadService:
 33177                           	opt stack 0
 33178                           tosu	equ	0xFFF
 33179                           tosh	equ	0xFFE
 33180                           tosl	equ	0xFFD
 33181                           pclatu	equ	0xFFB
 33182                           pclath	equ	0xFFA
 33183                           tblptru	equ	0xFF8
 33184                           tblptrh	equ	0xFF7
 33185                           tblptrl	equ	0xFF6
 33186                           tablat	equ	0xFF5
 33187                           prodh	equ	0xFF4
 33188                           prodl	equ	0xFF3
 33189                           intcon	equ	0xFF2
 33190                           intcon2	equ	0xFF1
 33191                           intcon3	equ	0xFF0
 33192                           indf0	equ	0xFEF
 33193                           postinc0	equ	0xFEE
 33194                           plusw0	equ	0xFEB
 33195                           fsr0h	equ	0xFEA
 33196                           fsr0l	equ	0xFE9
 33197                           wreg	equ	0xFE8
 33198                           indf1	equ	0xFE7
 33199                           postinc1	equ	0xFE6
 33200                           postdec1	equ	0xFE5
 33201                           plusw1	equ	0xFE3
 33202                           fsr1h	equ	0xFE2
 33203                           fsr1l	equ	0xFE1
 33204                           bsr	equ	0xFE0
 33205                           indf2	equ	0xFDF
 33206                           postinc2	equ	0xFDE
 33207                           postdec2	equ	0xFDD
 33208                           plusw2	equ	0xFDB
 33209                           fsr2h	equ	0xFDA
 33210                           fsr2l	equ	0xFD9
 33211                           status	equ	0xFD8
 33212                           
 33213 ;; *************** function i2_GenerateEvt *****************
 33214 ;; Defined at:
 33215 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 33216 ;; Parameters:    Size  Location     Type
 33217 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 33218 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 33219 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 33220 ;;		 -> GetSmsText(1), SmsEvent(1), RingEvent(1), SendSmsEvent(1), 
 33221 ;;		 -> NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), MdmOnOffPulseRequest(1), 
 33222 ;;		 -> CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 33223 ;; Auto vars:     Size  Location     Type
 33224 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 33225 ;; Return value:  Size  Location     Type
 33226 ;;                  1    wreg      enum E7699
 33227 ;; Registers used:
 33228 ;;		wreg, fsr2l, fsr2h, status,2
 33229 ;; Tracked objects:
 33230 ;;		On entry : 0/0
 33231 ;;		On exit  : 0/0
 33232 ;;		Unchanged: 0/0
 33233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33238 ;;Total ram usage:        3 bytes
 33239 ;; Hardware stack levels used:    1
 33240 ;; This function calls:
 33241 ;;		Nothing
 33242 ;; This function is called by:
 33243 ;;		_Uart_MdmGsmGprsReadService
 33244 ;; This function uses a non-reentrant model
 33245 ;;
 33246                           
 33247                           	psect	text163
 33248  005DA2                     __ptext163:
 33249                           	opt stack 0
 33250  005DA2                     i2_GenerateEvt:
 33251                           	opt stack 8
 33252                           
 33253                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 33254                           
 33255                           ;incstack = 0
 33256  005DA2  0E00               	movlw	0
 33257  005DA4  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33258                           
 33259                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 33260  005DA6  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 33261  005DAA  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 33262  005DAE  0E02               	movlw	2
 33263  005DB0  6EDF               	movwf	indf2,c
 33264                           
 33265                           ;os_ser.c: 83: EventStatus = EventSent;
 33266  005DB2  0E02               	movlw	2
 33267  005DB4  6E03               	movwf	i2GenerateEvt@EventStatus,c
 33268  005DB6  0012               	return	
 33269  005DB8                     __end_ofi2_GenerateEvt:
 33270                           	opt stack 0
 33271                           tosu	equ	0xFFF
 33272                           tosh	equ	0xFFE
 33273                           tosl	equ	0xFFD
 33274                           pclatu	equ	0xFFB
 33275                           pclath	equ	0xFFA
 33276                           tblptru	equ	0xFF8
 33277                           tblptrh	equ	0xFF7
 33278                           tblptrl	equ	0xFF6
 33279                           tablat	equ	0xFF5
 33280                           prodh	equ	0xFF4
 33281                           prodl	equ	0xFF3
 33282                           intcon	equ	0xFF2
 33283                           intcon2	equ	0xFF1
 33284                           intcon3	equ	0xFF0
 33285                           indf0	equ	0xFEF
 33286                           postinc0	equ	0xFEE
 33287                           plusw0	equ	0xFEB
 33288                           fsr0h	equ	0xFEA
 33289                           fsr0l	equ	0xFE9
 33290                           wreg	equ	0xFE8
 33291                           indf1	equ	0xFE7
 33292                           postinc1	equ	0xFE6
 33293                           postdec1	equ	0xFE5
 33294                           plusw1	equ	0xFE3
 33295                           fsr1h	equ	0xFE2
 33296                           fsr1l	equ	0xFE1
 33297                           bsr	equ	0xFE0
 33298                           indf2	equ	0xFDF
 33299                           postinc2	equ	0xFDE
 33300                           postdec2	equ	0xFDD
 33301                           plusw2	equ	0xFDB
 33302                           fsr2h	equ	0xFDA
 33303                           fsr2l	equ	0xFD9
 33304                           status	equ	0xFD8
 33305                           
 33306 ;; *************** function _Rtcc_RtcIsr *****************
 33307 ;; Defined at:
 33308 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 33309 ;; Parameters:    Size  Location     Type
 33310 ;;		None
 33311 ;; Auto vars:     Size  Location     Type
 33312 ;;		None
 33313 ;; Return value:  Size  Location     Type
 33314 ;;                  1    wreg      void 
 33315 ;; Registers used:
 33316 ;;		wreg, status,2, status,0
 33317 ;; Tracked objects:
 33318 ;;		On entry : 0/0
 33319 ;;		On exit  : 0/0
 33320 ;;		Unchanged: 0/0
 33321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33326 ;;Total ram usage:        0 bytes
 33327 ;; Hardware stack levels used:    1
 33328 ;; This function calls:
 33329 ;;		Nothing
 33330 ;; This function is called by:
 33331 ;;		_HighPriorityIsr
 33332 ;; This function uses a non-reentrant model
 33333 ;;
 33334                           
 33335                           	psect	text164
 33336  005EAE                     __ptext164:
 33337                           	opt stack 0
 33338  005EAE                     _Rtcc_RtcIsr:
 33339                           	opt stack 10
 33340                           
 33341                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 33342                           
 33343                           ;incstack = 0
 33344  005EAE  90A4               	bcf	4004,0,c	;volatile
 33345  005EB0  0012               	return	
 33346  005EB2                     __end_of_Rtcc_RtcIsr:
 33347                           	opt stack 0
 33348                           tosu	equ	0xFFF
 33349                           tosh	equ	0xFFE
 33350                           tosl	equ	0xFFD
 33351                           pclatu	equ	0xFFB
 33352                           pclath	equ	0xFFA
 33353                           tblptru	equ	0xFF8
 33354                           tblptrh	equ	0xFF7
 33355                           tblptrl	equ	0xFF6
 33356                           tablat	equ	0xFF5
 33357                           prodh	equ	0xFF4
 33358                           prodl	equ	0xFF3
 33359                           intcon	equ	0xFF2
 33360                           intcon2	equ	0xFF1
 33361                           intcon3	equ	0xFF0
 33362                           indf0	equ	0xFEF
 33363                           postinc0	equ	0xFEE
 33364                           plusw0	equ	0xFEB
 33365                           fsr0h	equ	0xFEA
 33366                           fsr0l	equ	0xFE9
 33367                           wreg	equ	0xFE8
 33368                           indf1	equ	0xFE7
 33369                           postinc1	equ	0xFE6
 33370                           postdec1	equ	0xFE5
 33371                           plusw1	equ	0xFE3
 33372                           fsr1h	equ	0xFE2
 33373                           fsr1l	equ	0xFE1
 33374                           bsr	equ	0xFE0
 33375                           indf2	equ	0xFDF
 33376                           postinc2	equ	0xFDE
 33377                           postdec2	equ	0xFDD
 33378                           plusw2	equ	0xFDB
 33379                           fsr2h	equ	0xFDA
 33380                           fsr2l	equ	0xFD9
 33381                           status	equ	0xFD8
 33382                           
 33383 ;; *************** function _Mcu_Int1Isr *****************
 33384 ;; Defined at:
 33385 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 33386 ;; Parameters:    Size  Location     Type
 33387 ;;		None
 33388 ;; Auto vars:     Size  Location     Type
 33389 ;;		None
 33390 ;; Return value:  Size  Location     Type
 33391 ;;                  1    wreg      void 
 33392 ;; Registers used:
 33393 ;;		wreg, status,2, status,0
 33394 ;; Tracked objects:
 33395 ;;		On entry : 0/0
 33396 ;;		On exit  : 0/0
 33397 ;;		Unchanged: 0/0
 33398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33403 ;;Total ram usage:        0 bytes
 33404 ;; Hardware stack levels used:    1
 33405 ;; This function calls:
 33406 ;;		Nothing
 33407 ;; This function is called by:
 33408 ;;		_HighPriorityIsr
 33409 ;; This function uses a non-reentrant model
 33410 ;;
 33411                           
 33412                           	psect	text165
 33413  005EB2                     __ptext165:
 33414                           	opt stack 0
 33415  005EB2                     _Mcu_Int1Isr:
 33416                           	opt stack 10
 33417                           
 33418                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 33419                           
 33420                           ;incstack = 0
 33421  005EB2  90F0               	bcf	intcon3,0,c	;volatile
 33422  005EB4  0012               	return	
 33423  005EB6                     __end_of_Mcu_Int1Isr:
 33424                           	opt stack 0
 33425                           tosu	equ	0xFFF
 33426                           tosh	equ	0xFFE
 33427                           tosl	equ	0xFFD
 33428                           pclatu	equ	0xFFB
 33429                           pclath	equ	0xFFA
 33430                           tblptru	equ	0xFF8
 33431                           tblptrh	equ	0xFF7
 33432                           tblptrl	equ	0xFF6
 33433                           tablat	equ	0xFF5
 33434                           prodh	equ	0xFF4
 33435                           prodl	equ	0xFF3
 33436                           intcon	equ	0xFF2
 33437                           intcon2	equ	0xFF1
 33438                           intcon3	equ	0xFF0
 33439                           indf0	equ	0xFEF
 33440                           postinc0	equ	0xFEE
 33441                           plusw0	equ	0xFEB
 33442                           fsr0h	equ	0xFEA
 33443                           fsr0l	equ	0xFE9
 33444                           wreg	equ	0xFE8
 33445                           indf1	equ	0xFE7
 33446                           postinc1	equ	0xFE6
 33447                           postdec1	equ	0xFE5
 33448                           plusw1	equ	0xFE3
 33449                           fsr1h	equ	0xFE2
 33450                           fsr1l	equ	0xFE1
 33451                           bsr	equ	0xFE0
 33452                           indf2	equ	0xFDF
 33453                           postinc2	equ	0xFDE
 33454                           postdec2	equ	0xFDD
 33455                           plusw2	equ	0xFDB
 33456                           fsr2h	equ	0xFDA
 33457                           fsr2l	equ	0xFD9
 33458                           status	equ	0xFD8
 33459                           
 33460 ;; *************** function _Mcu_Int0Isr *****************
 33461 ;; Defined at:
 33462 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 33463 ;; Parameters:    Size  Location     Type
 33464 ;;		None
 33465 ;; Auto vars:     Size  Location     Type
 33466 ;;		None
 33467 ;; Return value:  Size  Location     Type
 33468 ;;                  1    wreg      void 
 33469 ;; Registers used:
 33470 ;;		wreg, status,2, status,0
 33471 ;; Tracked objects:
 33472 ;;		On entry : 0/0
 33473 ;;		On exit  : 0/0
 33474 ;;		Unchanged: 0/0
 33475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33480 ;;Total ram usage:        0 bytes
 33481 ;; Hardware stack levels used:    1
 33482 ;; This function calls:
 33483 ;;		Nothing
 33484 ;; This function is called by:
 33485 ;;		_HighPriorityIsr
 33486 ;; This function uses a non-reentrant model
 33487 ;;
 33488                           
 33489                           	psect	text166
 33490  005EB6                     __ptext166:
 33491                           	opt stack 0
 33492  005EB6                     _Mcu_Int0Isr:
 33493                           	opt stack 10
 33494                           
 33495                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 33496                           
 33497                           ;incstack = 0
 33498  005EB6  92F2               	bcf	intcon,1,c	;volatile
 33499  005EB8  0012               	return	
 33500  005EBA                     __end_of_Mcu_Int0Isr:
 33501                           	opt stack 0
 33502                           tosu	equ	0xFFF
 33503                           tosh	equ	0xFFE
 33504                           tosl	equ	0xFFD
 33505                           pclatu	equ	0xFFB
 33506                           pclath	equ	0xFFA
 33507                           tblptru	equ	0xFF8
 33508                           tblptrh	equ	0xFF7
 33509                           tblptrl	equ	0xFF6
 33510                           tablat	equ	0xFF5
 33511                           prodh	equ	0xFF4
 33512                           prodl	equ	0xFF3
 33513                           intcon	equ	0xFF2
 33514                           intcon2	equ	0xFF1
 33515                           intcon3	equ	0xFF0
 33516                           indf0	equ	0xFEF
 33517                           postinc0	equ	0xFEE
 33518                           plusw0	equ	0xFEB
 33519                           fsr0h	equ	0xFEA
 33520                           fsr0l	equ	0xFE9
 33521                           wreg	equ	0xFE8
 33522                           indf1	equ	0xFE7
 33523                           postinc1	equ	0xFE6
 33524                           postdec1	equ	0xFE5
 33525                           plusw1	equ	0xFE3
 33526                           fsr1h	equ	0xFE2
 33527                           fsr1l	equ	0xFE1
 33528                           bsr	equ	0xFE0
 33529                           indf2	equ	0xFDF
 33530                           postinc2	equ	0xFDE
 33531                           postdec2	equ	0xFDD
 33532                           plusw2	equ	0xFDB
 33533                           fsr2h	equ	0xFDA
 33534                           fsr2l	equ	0xFD9
 33535                           status	equ	0xFD8
 33536                           tosu	equ	0xFFF
 33537                           tosh	equ	0xFFE
 33538                           tosl	equ	0xFFD
 33539                           pclatu	equ	0xFFB
 33540                           pclath	equ	0xFFA
 33541                           tblptru	equ	0xFF8
 33542                           tblptrh	equ	0xFF7
 33543                           tblptrl	equ	0xFF6
 33544                           tablat	equ	0xFF5
 33545                           prodh	equ	0xFF4
 33546                           prodl	equ	0xFF3
 33547                           intcon	equ	0xFF2
 33548                           intcon2	equ	0xFF1
 33549                           intcon3	equ	0xFF0
 33550                           indf0	equ	0xFEF
 33551                           postinc0	equ	0xFEE
 33552                           plusw0	equ	0xFEB
 33553                           fsr0h	equ	0xFEA
 33554                           fsr0l	equ	0xFE9
 33555                           wreg	equ	0xFE8
 33556                           indf1	equ	0xFE7
 33557                           postinc1	equ	0xFE6
 33558                           postdec1	equ	0xFE5
 33559                           plusw1	equ	0xFE3
 33560                           fsr1h	equ	0xFE2
 33561                           fsr1l	equ	0xFE1
 33562                           bsr	equ	0xFE0
 33563                           indf2	equ	0xFDF
 33564                           postinc2	equ	0xFDE
 33565                           postdec2	equ	0xFDD
 33566                           plusw2	equ	0xFDB
 33567                           fsr2h	equ	0xFDA
 33568                           fsr2l	equ	0xFD9
 33569                           status	equ	0xFD8
 33570                           
 33571                           	psect	text167
 33572  000000                     __ptext167:
 33573                           	opt stack 0
 33574                           tosu	equ	0xFFF
 33575                           tosh	equ	0xFFE
 33576                           tosl	equ	0xFFD
 33577                           pclatu	equ	0xFFB
 33578                           pclath	equ	0xFFA
 33579                           tblptru	equ	0xFF8
 33580                           tblptrh	equ	0xFF7
 33581                           tblptrl	equ	0xFF6
 33582                           tablat	equ	0xFF5
 33583                           prodh	equ	0xFF4
 33584                           prodl	equ	0xFF3
 33585                           intcon	equ	0xFF2
 33586                           intcon2	equ	0xFF1
 33587                           intcon3	equ	0xFF0
 33588                           indf0	equ	0xFEF
 33589                           postinc0	equ	0xFEE
 33590                           plusw0	equ	0xFEB
 33591                           fsr0h	equ	0xFEA
 33592                           fsr0l	equ	0xFE9
 33593                           wreg	equ	0xFE8
 33594                           indf1	equ	0xFE7
 33595                           postinc1	equ	0xFE6
 33596                           postdec1	equ	0xFE5
 33597                           plusw1	equ	0xFE3
 33598                           fsr1h	equ	0xFE2
 33599                           fsr1l	equ	0xFE1
 33600                           bsr	equ	0xFE0
 33601                           indf2	equ	0xFDF
 33602                           postinc2	equ	0xFDE
 33603                           postdec2	equ	0xFDD
 33604                           plusw2	equ	0xFDB
 33605                           fsr2h	equ	0xFDA
 33606                           fsr2l	equ	0xFD9
 33607                           status	equ	0xFD8
 33608                           
 33609                           	psect	rparam
 33610  0000                     tosu	equ	0xFFF
 33611                           tosh	equ	0xFFE
 33612                           tosl	equ	0xFFD
 33613                           pclatu	equ	0xFFB
 33614                           pclath	equ	0xFFA
 33615                           tblptru	equ	0xFF8
 33616                           tblptrh	equ	0xFF7
 33617                           tblptrl	equ	0xFF6
 33618                           tablat	equ	0xFF5
 33619                           prodh	equ	0xFF4
 33620                           prodl	equ	0xFF3
 33621                           intcon	equ	0xFF2
 33622                           intcon2	equ	0xFF1
 33623                           intcon3	equ	0xFF0
 33624                           indf0	equ	0xFEF
 33625                           postinc0	equ	0xFEE
 33626                           plusw0	equ	0xFEB
 33627                           fsr0h	equ	0xFEA
 33628                           fsr0l	equ	0xFE9
 33629                           wreg	equ	0xFE8
 33630                           indf1	equ	0xFE7
 33631                           postinc1	equ	0xFE6
 33632                           postdec1	equ	0xFE5
 33633                           plusw1	equ	0xFE3
 33634                           fsr1h	equ	0xFE2
 33635                           fsr1l	equ	0xFE1
 33636                           bsr	equ	0xFE0
 33637                           indf2	equ	0xFDF
 33638                           postinc2	equ	0xFDE
 33639                           postdec2	equ	0xFDD
 33640                           plusw2	equ	0xFDB
 33641                           fsr2h	equ	0xFDA
 33642                           fsr2l	equ	0xFD9
 33643                           status	equ	0xFD8
 33644                           
 33645                           	psect	temp
 33646  000042                     btemp:
 33647                           	opt stack 0
 33648  000042                     	ds	1
 33649  0000                     int$flags	set	btemp
 33650  0000                     wtemp6	set	btemp+1
 33651                           tosu	equ	0xFFF
 33652                           tosh	equ	0xFFE
 33653                           tosl	equ	0xFFD
 33654                           pclatu	equ	0xFFB
 33655                           pclath	equ	0xFFA
 33656                           tblptru	equ	0xFF8
 33657                           tblptrh	equ	0xFF7
 33658                           tblptrl	equ	0xFF6
 33659                           tablat	equ	0xFF5
 33660                           prodh	equ	0xFF4
 33661                           prodl	equ	0xFF3
 33662                           intcon	equ	0xFF2
 33663                           intcon2	equ	0xFF1
 33664                           intcon3	equ	0xFF0
 33665                           indf0	equ	0xFEF
 33666                           postinc0	equ	0xFEE
 33667                           plusw0	equ	0xFEB
 33668                           fsr0h	equ	0xFEA
 33669                           fsr0l	equ	0xFE9
 33670                           wreg	equ	0xFE8
 33671                           indf1	equ	0xFE7
 33672                           postinc1	equ	0xFE6
 33673                           postdec1	equ	0xFE5
 33674                           plusw1	equ	0xFE3
 33675                           fsr1h	equ	0xFE2
 33676                           fsr1l	equ	0xFE1
 33677                           bsr	equ	0xFE0
 33678                           indf2	equ	0xFDF
 33679                           postinc2	equ	0xFDE
 33680                           postdec2	equ	0xFDD
 33681                           plusw2	equ	0xFDB
 33682                           fsr2h	equ	0xFDA
 33683                           fsr2l	equ	0xFD9
 33684                           status	equ	0xFD8


Data Sizes:
    Strings     362
    Constant    567
    Data        176
    BSS         2323
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     76     127
    BANK1           256    201     255
    BANK2           256    200     256
    BANK3           256      0     256
    BANK4           192      0     191
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     196
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK5[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK5[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx(BANK7[132]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[132]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 10
		 -> ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8934 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK5[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4602$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4602$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4602$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4602$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3055$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3045$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3045$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3021$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3021$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3021$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3021$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2517_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2517_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), 
		 -> NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), 
		 -> NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(COMRAM[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_29(CODE[5]), STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), 
		 -> STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), 
		 -> STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[11]), STR_3(CODE[7]), 
		 -> STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_initGprsModem
    _initGprsModem->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_MainTask->_Uart_InitUartModule
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  519782
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4410
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4032
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3786
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2368
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  515372
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  257779
                                             71 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  257593
                                             71 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   51775
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   47243
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   27130
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26491
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20484
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8054
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   58522
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   58522
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41312
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3295
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2752
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          17    17      0   17394
                                             52 BANK0     16    16      0
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                         _ReceiveEvt
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        1     1      0   13815
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10702
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     332
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   59105
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2019
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   14637
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      21    21      0    6006
                                             40 BANK0     21    21      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0      69
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6     960
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   10891
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8214
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3652
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2514
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13686
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   37939
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   19006
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   18933
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2543
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    3627
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    1797
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6293
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6293
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2350
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     533
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16374
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5563
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2447
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2019
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _ReceiveEvt
         _initGprsModem
           _Led_SetLedStatus
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _ReceiveEvt
         _initGprsModem
           _Led_SetLedStatus
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C4      20       76.6%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9      FF       7       99.6%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      BF      14       99.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     96A       8        0.0%
DATA                 0      0     C8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 13 14:51:31 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5084  
                              _USB_SD_Ptr FC55                      __size_of_TurnOnModem 0046  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 5C70  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 1FFE  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 1F1A                                       l203 1F22  
                                     l205 1F6A                                       l206 1F90  
                                     l208 1F98                                       l160 1E5E  
                                     l209 1FB8                                       l161 1D34  
                                     l162 1E9C                                       l170 1DFC  
                                     l171 1E12                                       l163 1D40  
                                     l315 4166                                       l323 4132  
                                     l164 1D80                                       l316 40DC  
                                     l420 4676                                       l500 4526  
                                     l173 1E16                                       l325 414C  
                                     l421 4696                                       l237 5C7C  
                                     l174 1E1E                                       l166 1D8E  
                                     l318 40E6                                       l422 46A2  
             __end_of_USBStdGetDscHandler 28F0                                       l510 44F8  
                                     l502 44B8                                       l175 1E2A  
                                     l167 1DB6                                       l319 410C  
                                     l423 46AE                                       l511 44E8  
                                     l503 44A8                                       l192 1FC2  
                                     l176 1E40                                       l416 46C2  
                                     l424 46BA                                       l512 450C  
                                     l504 44CE                                       l520 53F8  
                                     l193 1EA2                                       l169 1DC8  
                                     l417 4668                                       l441 17EC  
                                     l513 44EC                                       l505 44AC  
                                     l521 53C4                                       l194 1FFA  
                                     l418 46F0                                       l442 15F4  
                                     l514 44F2                                       l506 44B2  
                                     l530 2EEA                                       l195 1EAE  
                                     l179 1E4C                                       l419 4670  
                                     l523 53DE                                       l531 2F50  
                                     l196 1EEE                                       l700 5658  
                                     l444 163C                                       l532 2F16  
                                     l445 1684                                       l541 5C3A  
                                     l198 1EFC                                       l446 16CC  
                                     l199 1F10                                       l631 2738  
                                     l447 1714                                       l448 175C  
                                     l528 2F56                                       l633 27B0  
                                     l625 26C4                                       l449 17A4  
                                     l529 2F42                                       l538 5C3E  
                                     l546 39DE                                       l651 5348  
                                     l707 577C                                       l627 26E8  
                                     l715 56F0                                       l539 5C36  
                                     l547 39FA                                       l660 536C  
                                     l652 5342                                       l716 56C6  
                                     l709 5796                                       l629 2710  
                                     l718 56DE                                       l639 5C62  
                                     l832 5A46                                       l844 3AB2  
                                     l668 0C44                                       _BDT 000400  
                                     l790 5C98                                       l855 4A90  
                                     l775 2B32                                       l864 4764  
                                     l856 4A36                                       l857 4AAA  
                                     l698 563C                                       l858 4A66  
                                     l867 4776                                       l981 22EA  
                                     l982 231E                                       l983 2390  
                                     l976 23D8                                       l992 23B4  
                                     l977 22AC                                       l979 22D0  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 4030                            ??_Mdm_MainTask 00A2  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 58CE  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00CB               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 56BA                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 22AA             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1003 5514           InitGprsNetwork@GprsNetInitState 01EE  
                                    l1004 54E2                                      l1100 52EA  
                                    l1021 3898                                      l1101 52FE  
                                    l1022 37F4                               RiSm@Counter 02E2  
                                    l1007 54FA                                      l1025 3804  
                                    l1202 1078                                      l1026 383C  
                                    l1050 2D1A                                      l1211 0F3E  
                                    l1203 0DD0                                      l1027 3860  
                                    l1220 1054                                      l1212 0F78  
                                    l1060 3028                                      l1044 2D48  
                                    l2100 51DE                                      l1205 10B0  
                                    l1213 0FB8                                      l1029 3880  
                                    l1061 2F68                                      l1045 2CB2  
                                    l1214 0FBC                                      l1206 0DE8  
                                    l2102 51F0                                      l1215 1000  
                                    l1207 0E22                                      l1047 2D5C  
                                    l2103 5202                                      l1240 0646  
                                    l1224 106E                                      l1208 0E96  
                                    l1064 2F82                                      l1048 2CE4  
                                    l1400 56B4                                      l1241 0680  
                                    l1209 0E5E                                      l1065 2F98  
                                    l1081 1B80                                      l2050 24AA  
                                    l2210 588C                                      l1250 08CA  
                                    l1242 06BA                                      l1090 1B1A  
                                    l1082 19FE                                      l2211 5878  
                                    l1235 0A54                                      l1251 090E  
                                    l1243 073E                                      l1219 1010  
                                    l1091 1B66                                      l2060 3046  
                                    l2204 4DFC                                      l1260 097E  
                                    l1244 06F6                                      l1236 05F4  
                                    l1068 2FDE                                      l2061 311A  
                                    l2205 4DBC                                      l1261 09AA  
                                    l1085 1A1A                                      l1405 5C26  
                                    l3014 524C                                      l2046 251C  
                                    l2062 3064                                      l2070 418E  
                                    l1238 0AB6                                      l1246 07F2  
                                    l1086 1AD0                                      l3015 5244  
                                    l2047 23FE                                      l2071 4224  
                                    l1263 09C4                                      l1255 092A  
                                    l1247 082C                                      l1239 060C  
                                    l1087 1AF4                                      l2048 2532  
                                    l2064 30D4                                      l2072 419E  
                                    l1264 0A32                                      l1256 096E  
                                    l1248 0856                                      l3024 560A  
                                    l1600 1BCA                                      l2049 2426  
                                    l2073 41B0                                      l1249 0890  
                                    l3025 5602                                      l3201 185C  
                                    l1097 5310                                      l3018 526C  
                                    l2090 59DA                                      l2074 41CA  
                                    l1098 52D4                                      l1274 54CE  
                                    l2082 3714                                      l3019 5276  
                                    l2091 59C8                                      l2059 30FE  
                                    l3211 18D8                                      l3203 1874  
                                    l1611 1C6A                                      l1603 1BF2  
                                    l2083 365C                                      l2171 47EE  
                                    l1372 3C2C                                      l2076 41D8  
                                    l1268 0A42                                      l3028 5622  
                                    l3220 19A6                                      l3212 18E8  
                                    l3044 597E                                      l1700 29AA  
                                    l1612 1C76                                      l1604 1C02  
                                    l1365 3C7E                                      l2093 59CE  
                                    l2069 41FC                                      l2077 41E6  
                                    l1269 0A4A                                      l3029 562C  
                                    l3221 19E0                                      l3205 18C8  
                                    l3045 596C                                      l2413 131E  
                                    l1621 1D0A                                      l1613 1CA0  
                                    l1605 1C0A                                      l1277 549C  
                                    l2085 366A                                      l1374 3C48  
                                    l1366 3BE0                                      l2094 59D4  
                                    l3214 1902                                      l2414 10B8  
                                    l1710 31EE                                      l3038 543E  
                                    l1614 1CAC                                      l1606 1C20  
                                    l1390 5118                                      l1367 3C02  
                                    l1631 3D7E                                      l2431 12F8  
                                    l2423 110E                                      l3039 541C  
                                    l1623 1D28                                      l1607 1C2C  
                                    l1376 3C64                                      l2512 4288  
                                    l3240 3222                                      l2360 01AE  
                                    l2416 10DE                                      l1720 2870  
                                    l1800 333E                                      l1616 1CC0  
                                    l2168 4802                                      l1377 3C70  
                                    l1369 3C24                                      l1633 3DA8  
                                    l3225 5D44                                      l3217 1914  
                                    l2353 05D2                                      l2361 019C  
                                    l2433 1318                                      l2425 112E  
                                    l1801 335C                                      l1609 1C54  
                                    l2169 4788                                      l2441 5D00  
                                    l2514 42BA                                      l3218 1980  
                                    l3242 3250                                      l2354 00E2  
                                    l3170 4ED6                                      l2418 10FA  
                                    l1650 376E                                      l1626 557E  
                                    l1722 2878                                      l1730 3E2E  
                                    l1802 3378                                      l2099 5214  
                                    l2515 42C8                                      l1395 576E  
                                    l1635 3E04                                      l3251 32EE  
                                    l2371 0392                                      l3171 4ED0  
                                    l2427 114E                                      l1627 558E  
                                    l1811 13F6                                      l1723 28C8  
                                    l1619 1CE6                                      l1387 511E  
                                    l2524 51D2                                      l3180 590A  
                                    l2372 0326                                      l1820 14D0  
                                    l1716 28D8                                      l1708 317A  
                                    l1388 50DE                USBConfigureEndpoint@handle 0083  
                                    l2197 52C2                                      l3245 32B0  
                                    l2373 02B4                                      l2357 0152  
                                    l3173 4EF0                                      l2429 128E  
                                    l1813 143E                                      l1725 28D0  
                                    l1717 27D4                                      l1733 3EBE  
                                    l2461 5B6E                                      l2198 5298  
                                    l1910 4576                                      l3246 3268  
                                    l2374 0250                                      l2358 01E2  
                                    l2366 01D0                                      l3174 4EE6  
                                    l1662 4470                                      l1822 1532  
                                    l1814 1440                                      l1734 3E40  
                                    l2438 5D06                                      l2199 52BE  
                                    l1911 45A2                                      l3247 3280  
                                    l3239 3228                                      l2391 045E  
                                    l2383 0402                                      l1823 153E  
                                    l1815 145C                                      l1719 27E8  
                                    l1735 3E46                                      l1591 20B0  
                                    l1743 5566                                      l1751 581E  
                                    l2551 496C                                      l1912 457C  
                                    l3248 3290                                      l2392 0578  
                                    l2384 03D2                                      l2376 0304  
                                    l1824 15BA                                      l1808 137E  
                                    l1736 3E66                                      l1656 43BC  
                                    l1672 2E18                                      l1744 5564  
                                    l1752 581C                                      l2377 02C6  
                                    l3185 570A                                      l1681 33FC  
                                    l1817 14EA                                      l1809 1384  
                                    l1729 3EA8                                      l3282 5AC6  
                                    l2394 04B4                                      l2570 3600  
                                    l3186 5704                                      l1690 3472  
                                    l1770 4D3A                                      l1658 43D6  
                                    l2458 5B74                                      l1907 45C8  
                                    l3179 5914                                      l2395 0478  
                                    l2571 35E2                                      l2563 3598  
                                    l1683 3406                                      l1827 1570  
                                    l1819 14B2                                      l1667 2DEE  
                                    l1587 2048                                      l2459 5B66  
                                    l2740 34BC                                      l2564 35B2  
                                    l1668 2D96                                      l2548 4998  
                                    l2741 34B6                                      l3277 59B8  
                                    l2389 041E                                      l2565 3614  
                                    l1685 346A                                      l1781 3D3C  
                                    l1829 15C6                                      l1757 4650  
                                    l1589 2070                                      l2549 4952  
                                    l3294 57E6                                      l2398 0524  
                                    l2574 3634                                      l1950 2614  
                                    l1942 25AE                                      l1686 3430  
                                    l1758 464A                                      l1598 1BD6  
                                    l2743 34FE                                      l3287 5BC2  
                                    l2399 0570                                      l1943 25B2  
                                    l1935 255A                                      l1791 3398  
                                    l1599 1BCC                                      l2760 48C6  
                                    l2568 35B8                                      l1776 3CD4  
                                    l1696 294C                                      l1768 4CEC  
                                    l1792 3308                                      l2921 5C06  
                                    l1953 2666                                      l1945 260A  
                                    l1937 2568                                      l1689 34AC  
                                    l1777 3CDA                                      l1697 2926  
                                    l2762 48E4                                      l2746 354E  
                                    l3298 5D2C                                      l1954 266A  
                                    l1946 25D2                                      l1778 3D56  
                                    l1890 3F3E                                      l1794 3312  
                                    l2763 48DC                                      l2747 3510  
                                    l2931 4038                                      l1939 259C  
                                    l1779 3D1C                                      l1699 29C4  
                                    l1891 3F56                                      l1795 3318  
                                    l2588 4FE6                                      l2780 4B0A  
                                    l2772 4AC6                                      l1796 331E  
                                    l2589 4FFA                                      l2781 4B18  
                                    l2773 4AD2                                      l2749 3582  
                                    l2933 4074                                      l1949 264C  
                                    l1885 3F60                                      l1797 3332  
                                    l2766 4904                                      l2934 40B6  
                                    l1886 3EFA                                      l1798 3338  
                                    l2767 490E                                      l2759 48B6  
                                    l2775 4AE8                                      l2927 55D4  
                                    l1983 4E18                                      l1991 4E12  
                                    l1975 5B2E                                      l2768 491C  
                                    l2776 4AE0                                      l1888 3F12  
                                    l1976 5B1E                                _Led1OutSts 01FA  
                                    l2961 49DA                                      l1889 3F20  
                                    l2962 49CE                                      l1978 5B24  
                                    l2779 4B00                                      l2965 4A0E  
                                    l1989 4E0C                                      l2966 4A1C  
                                    l9101 58AC                                      l7613 3406  
                                    l8431 541C                                      l8955 467C  
                                    STR_1 FFE5                                      STR_2 FF81  
                                    STR_3 FFDE                                      STR_4 FFC2  
                                    STR_5 FFCD                                      STR_6 FFEF  
                                    STR_7 FFEA                                      STR_8 FEB6  
                                    STR_9 FEEA                                _Led2OutSts 01F8  
                              _Led3OutSts 01F6                                      u5160 3458  
                                    u5320 283A                                      u5330 286A  
                                    u5180 349A                                      u5350 28BC  
                                    u5167 344E                                      u5327 2830  
                                    u5337 2860                                      u5187 3490  
                                    u6085 5DC6                                      u5357 28B2  
                                    u8005 53DA                                      u6086 5DC8  
                                    u8006 53DC                                      u8015 53E8  
                                    u8016 53EA                                      u8025 53F4  
                                    u7170 52CE                                      u8026 53F6  
                                    u5910 49DE                     ??_USBCtrlTrfTxService 007D  
                                    u9041 4D9E                                      _UCFG 000F39  
                                    u6840 4AEC                                      u6780 48E8  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u9335 5A88                                      u9336 5A8A  
                                    u9281 47E0                                      u9345 5A94  
                                    u9346 5A96                                      u6875 5392  
                                    u7915 4B86                                      u9291 47F8  
                                    u9355 5AA0                                      _UEIE 000F37  
                                    u9356 5AA2                                      u7925 5DDA  
                __size_of_Uart_Uart1RxIsr 0010                                      u7926 5DDC  
                                    u6995 5D86                                      u6996 5D88  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u7985 5D70                                      u7986 5D74  
                                    u7995 53CE                                      u7996 53D0  
                              _AlarmEvent 01F5                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 5E8A  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 34B4  
                                    _main 5E4C                                      _itoa 55AE  
                        ?_SetUartBaudRate 0096                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4030                                      _xtoi 3212  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 5E92  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4662  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 56FA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 5D60                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D                __end_of_USBCheckStdRequest 33DC  
                         _Rtcm_SystemDate 0300                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 5DF0                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
                          _GetElapsedTime 3A4E             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 007D               __end_of_OsAlrm_ClearOsAlarm 50DC  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                       __size_of_I2cDummyTx 001C  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 5776                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDD8                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DA  
                                   l11433 596C                                     l12079 354A  
                                   l12511 20A8                                     l13091 2D14  
                                   l13253 0FB0                                     l13077 2CAA  
                                   l11477 3172                                     l10781 5C7C  
                                   l13419 09A4                                     l12483 2040  
                                   l14285 4E32                                     l14287 4E62  
                                   l13911 4B9E                                     l13569 1CB8  
                                   l12953 2F56                                     l13923 2A1E  
                                   l12893 42C8                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 4926                                     STR_10 FF57  
                                   STR_11 FF65                                     STR_12 FFA9  
                                   STR_20 FF49                                     STR_13 FF73  
                                   STR_21 FE8C                                     STR_30 FFD7  
                                   STR_14 FED5                                     STR_15 FF13  
                                   STR_23 FEFF                                     STR_24 FFF4  
                                   STR_16 FF38                                     STR_25 FFF4  
                                   STR_17 FF8F                                     STR_26 FEB3  
                                   STR_18 FF9C                                     STR_27 FF27  
                                   STR_28 FFB6                           __end_of___awmod 4B22  
                                   STR_29 FFE5         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4A2E                                     ?_utoa 008A  
                                   u11000 1864                                     u10040 31A6  
                                   u10300 560E                                     u10220 1554  
                                   u11030 189E                                     u11050 18AE  
                                   u12100 415E                                     u10270 5250  
                                   u12030 364C                                     u11400 4DF4  
                                   u10450 5AC2                                     u11315 0C78  
                                   u11340 5666                                     u12300 2D62  
                                   u10540 57CA                           ___awdiv@divisor 007F  
                                   u11325 0C98                                     u10710 533E  
                                   u12150 2346                                     u10630 270C  
                                   u10470 59A8                                     u11407 4DEA  
                                   u11335 0D22                                     u12231 2C6E  
                                   u11360 57A4                                     u10560 57D6  
                                   u11440 2064                                     u12241 2C80  
                                   u12090 4144                                     u12170 235A  
                                   u13210 5198                                     u10810 4552  
                                   u13050 25FA                    __end_of_USBDeviceTasks 1D32  
                                   u11275 0AF4                                     u11285 0B14  
                                   u13070 263C                                     u11470 210C  
                                   u11295 0B9E                                     ?_xtoi 0083  
                                   u13080 2654                                     u13057 25F0  
                                   u13077 2632                                     u13341 4948  
                                   u11910 04BE                                     u13428 2AE6  
                                   u13429 2B14                                     u11970 4F18  
               ?_USBCtrlEPServiceComplete 0001                                     u13388 4BD0  
                                   u13389 4BFE                                     u12960 1D2E  
                                   u11977 4F0E                           __end_of___lwdiv 5280  
                         __end_of___lwmod 5636                 TurnOnModem@TurnOnMdmState 0029  
                      ??_UpdateOsCounters 0019                                     i1l742 216C  
                                   i1l747 22A8                                     i2l680 3976  
                                   i2l681 38C6                                     i2l690 3910  
                                   i2l682 38D4                                     i2l686 38F6  
                                   i2l688 3968                                     i2l689 3930  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03AF              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01EA                                     _USTAT 000F64  
                 __end_of_LedStateMachine 422A        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00BE           __end_of_USBCtrlEPAllowDataStage 440A  
                           _StringCompare 5280                                     _sd000 FE88  
                                   _sd001 FE41                                     _sd002 FE1B  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3726                               _ApnLenLocal 01F2  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_isalpha 59C2                           __end_of_isdigit 5C0E  
                                   atoi@a 0088                                     atoi@s 0083  
                             _ClearBuffer 5864                           __end_of_isspace 5ACE  
              I2c_WriteData@I2cWriteState 0038                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 5BCA  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 5B1C                 __end_of_Rtcc_GetRtccValue 46F6  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 4C70  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 50DC                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 365A                           __end_of_tolower 5D30  
                     __end_of_Mcu_Int0Isr 5EBA                       __end_of_Mcu_Int1Isr 5EB6  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 5D48                    __end_of_GetElapsedTime 3B16  
                   __end_of_UartSetConfig 4FD4                    __size_of_initGprsModem 0054  
             Rtcc_SetRtccValue@RtccPtrVal 0088                     __end_of_Term_MainTask 5D18  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 3044  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 5A7A                            _InitSchedTimer 59F2  
                         __initialization 2B36                          __end_of_MdmCntSm 4182  
                    __end_of_I2c_ReadData 1FFE                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 3CA2                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 4926                              __end_of_atoi 358C  
                            __end_of_main 5E58                       StringCompare@Result 0085  
                            __end_of_itoa 55F2                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01E2                              __end_of_utoa 40DA  
                            __end_of_xtoi 32F8                  __end_of_Rtcm_SetRtccDate 5184  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 5E76                      Term_MainSm@TermDelay 03D4  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE76  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00AC              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4538  
                              _ReceiveEvt 5A20          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 4A2E  
                            _cdc_mem_type 01E3                        ??_Mcu_ConfigExtInt 007D  
                       CheckModem@Timeout 03F5                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00B8  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3986  
              _Uart_MdmGsmGprsReadService 38BC                __end_of_UsbDevice_MainTask 5B40  
                         getsUSBUSART@len 0086                     __end_of_UartWriteByte 5C70  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1395 585E  
                             _GenerateEvt 5D48                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 002C                             CDCTxService@i 0084  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FC5D                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                  __end_of_Rtcc_AlarmConfig 4CDC  
                         ??_Mcu_SetWdgSts 007D                    __end_of_InitSchedTimer 5A20  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0081  
                          _EnableReceiver 5EAA                                _UartConfig 0326  
                    __end_of_Mdm_MainTask 5322                         ??_Uart_Uart1RxIsr 0007  
                       _shortPacketStatus 00CA                             ??_Term_MainSm 00A7  
                                  _Relay1 01DD                                    _Relay2 01DC  
                                  _Relay3 01DB                                    _Relay4 01DA  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                __end_of_MdmHttp_MainTask 54E0                                    _SmsLen 00D1  
                         USBDeviceTasks@i 0098               USBStdFeatureReqHandler@pUEP 0092  
                USBTransferOnePacket@data 007E                USBCtrlTrfInHandler@lastDTS 007E  
                           ??_RtccIrqInit 007D                  ??_OsAlrm_ProcessOsAlarms 0060  
                         ??_USBDeviceInit 0085                       __end_of_SetBaudRate 53BE  
                                  ___lmul 4FD4                      _I2cSlv_ReceiveI2cMsg 567A  
                      TurnOnModem@Counter 02DC                              ?_putUSBUSART 0083  
                                  ___wmul 5ACE                                 ??___awdiv 0081  
          GetElapsedTime@CurrentTimestamp 0091                            __CFG_STVREN$ON 000000  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 51D8  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 45CE  
                               ??___lwdiv 0087                    Tmr_TmrBPrSet@IntFreqHz 0096  
                               ??___lwmod 0081                         _USBEnableEndpoint 556A  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                                    _memcpy 540A  
                  __size_of_HttpGetMethod 04D0                                    _memset 5962  
                                  clear_0 2BB6                                    clear_1 2BC8  
                                  clear_2 2BD4                                    clear_3 2BE0  
                                  clear_4 2BEC                                    clear_5 2BF8  
                                  clear_6 2C04                                    clear_7 2C10  
                                  clear_8 2C1C                                    clear_9 2C28  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E6  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EF  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 0026                        ?_USBEnableEndpoint 0085  
                                  _strcat 4EC6                                    _strcpy 5900  
                                  _strlen 56FA                                    _strtol 181C  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 57F0                  HttpGetMethod@UartMessage 0100  
                           _initGprsModem 5184                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                                 ??_isalpha 0080  
                               ??_isdigit 007D                            ??_SetAckStatus 007D  
                            _CDCTxService 2544                       ModemEvtParser@F9090 03B9  
                     ModemEvtParser@F9086 03C8                       ModemEvtParser@F9088 03C3  
                     MdmCntSm@MdmCntState 002E                              MyApp_Task@on 00A0  
                        ?_LedStateMachine 008F                              __mediumconst FC54  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                                  tblptrh 000FF7                                 ??_isupper 007D  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 5EA2                       ??_USBEnableEndpoint 0086  
                             _MdmStsReady 0039                   __end_of_I2cSlv_MainTask 5130  
                         _InitGprsNetwork 0DC8                             ??_Tmr_Tmr2Isr 0023  
                            ??_I2cDummyTx 0021                 OsTmr_GetTimerStatus@Timer 0095  
                             _Mcu_Int0Isr 5EB6                               _Mcu_Int1Isr 5EB2  
                    ?_Led_SetLedBlinkTime 007D                                 ??_sprintf 0083  
                               ??_tolower 007D                    __size_of_ScheduleTasks 0122  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 009B                      _controlTransferState 00C9  
                   __end_ofi1_GenerateEvt 5DA2                     __end_of_Rtcm_MainTask 4814  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 02E4  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2C46                    Tmr_TmrBPrSet@Prescaler 0098  
                            __pbssBIGRAMl 0AC8                    __end_of_EnableReceiver 5EAE  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 011A  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 5370  
         I2cSlv_QueryI2cData@TimeoutTimer 033B                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 4DA8  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FC  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02E0  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 55AE                               _InitNetwork 00D8  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE8C                             __end_of_sd001 FE5F  
                           __end_of_sd002 FE41                              __pidataBANK1 5EBA  
                            __pidataBANK2 5E3E                              __pidataBANK3 5452  
                            __pidataBANK4 4F22                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5636  
                     __size_of_CheckModem 0152                __end_of_Uart_ClearRxBuffer 58CE  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 5CE4               __end_of_USBCtrlTrfInHandler 3D64  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
                     __end_of_Term_MainSm 135A                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 5D8C                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E9  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 5932                                _cdc_notice 044A  
                   __end_of_Tmr_TmrBPrSet 2F5C                       __end_of_Rtcc_RtcIsr 5EB2  
                              _cdc_rx_len 00C2                         __end_of_MsgFormat FD4F  
                              _cdc_tx_len 00C0                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 5864                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E4                            ClearBuffer@Len 007F  
                         _secondsAppTimer 422A                                 ?_MdmCntSm 0001  
                   _Irq_InitIntController 5A7A                    _USBStdGetStatusHandler 3E22  
                       __end_of_SendSmsSm 1BAA       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01F1                            _Rtcc_RtcConfig 42CC  
                              __pbssBANK0 00AC                                __pbssBANK1 01C9  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 05C2                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 5DB8                  __end_of_Uart_WriteString 57B4  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 5B64                               _SetBaudRate 5370  
               initGprsModem@modemCounter 03B7               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01F3                               _pBDTEntryIn 00B2  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 2E6E  
                               ?_TmrBInit 007D                             _CheckTxStatus 5E76  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 365A  
                          _Rtcc_UnlockRtc 5DF0                              _I2cBusStatus 01EB  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2A14                 Uart_InitUartModule@Module 00A1  
                   MyApp_Task@I2cStsReady 01D5                     __end_of_I2c_WriteData 1EA0  
                      ??_GetOsTickCounter 0081                                   ?_memcpy 007D  
                                 ?_memset 007D                            ___lmul@product 0085  
                              _device_dsc FE76                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 45CE                     __end_of_UpdateSchFlag 5CC8  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D6  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2A14  
                       __end_of_WriteByte 5E6C                        _USBCheckStdRequest 32F8  
                       _configDescriptor1 FDD8                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0486               __end_of_USBCtrlTrfTxService 34B4  
                     _USBStdSetCfgHandler 312C                         triggerRelay@F8966 03D2  
                 __size_of_ConfigureModem 00CA                    I2cSlv_QueryI2cData@Ret 01E8  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 5A4E  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 436C                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 1EA0                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3BDE  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01E0  
          __end_of_Pm_DsReleasePinControl 5E98                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 0084                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00DE                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 002A                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                                   _Led2Sts 01F9  
                                 _Led3Sts 01F7                __end_of_Sch_SchmIntService 5E3E  
                   __size_of_Mdm_MainTask 0050             ModemEvtParser@CallReadyString 0088  
                           _cdc_trf_state 00C1                                ??_ReadByte 007D  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 5E9E  
                        _ComChecCompleted 002B                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 02C8  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01DF  
                                 _RelayB2 01DE                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D5  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4C04                    __end_of_Rtcc_UnlockRtc 5E00  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 5DCC                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD4F  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 5C8E  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 5D76  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 48A0  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4AB0  
                                 ___lldiv 49AA                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 522C  
                       ??_USBStallHandler 007D                                   ___lwmod 55F2  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                           ??_initGprsModem 0093  
                             _Rtcc_RtcIsr 5EAE                      __size_of_putUSBUSART 0022  
                                 __pcinit 2B36                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CC  
                     __end_of_TurnOnModem 5526                           __size_of_memset 0030  
                               _I2cConfig 0351                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FE1B                                   __ramtop 0F00  
                   MyApp_Task@countRelay1 01FD                     MyApp_Task@countRelay2 03D0  
                             Terminal@Len 03AB                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 5E4C                                   __ptext1 5932  
                                 __ptext2 5E58                                   __ptext3 5E92  
                                 __ptext4 5C70                                   __ptext5 5CE4  
                                 __ptext6 5A7A                                   __ptext7 59F2  
                                 __ptext8 3986                                   __ptext9 2E6E  
                                 _inPipes 00AC                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 42CC  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 5992                                   _isdigit 5BEC  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00AC  
                             ?_SystemInit 0001                                   clear_10 2C34  
                                 clear_11 2C40                          ___awmod@dividend 007D  
                       ??_InitializeTasks 00A7                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 01D3       __end_of_Tmr_RegisterTmr2IsrCallback 5E62  
             _Tmr_RegisterTmr2IsrCallback 5E58                                   _isspace 5AA4  
                            _Mdm_MainTask 52D2                                   _isupper 5BA8  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 2154  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC5D  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 5B40  
                                 _sprintf 358C                                   _tolower 5D18  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 5E20  
                        _HttpGetDataLocal 03A2                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 3F84                                   _toupper 5D30  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2C46                              _getsUSBUSART 4538  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00D9  
             ?_Uart_MdmGsmGprsReadService 0004             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 007D                    _MainSystemTimebaseFlag 02F4  
           i1I2cSlv_SendI2cMsg@DataLenght 001F                        __end_of_USB_SD_Ptr FC5B  
     Irq_InitIntController@PerInt_LowPInt 007E                                   memcpy@d 0083  
                                 memcpy@n 0081                                   memcpy@s 0085  
                     _pBDTEntryEP0OutNext 00BA                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC54  
                          _ModemEvtParser 2C54                                 i1u1325_20 216A  
                                 int_func 3F84                                 i1u1329_28 228A  
                               i1u1329_29 229E                           _USB1msTickCount 0318  
                               i1u1346_28 5B50           _dummy_encapsulated_cmd_response 0376  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
                           MyApp_Task@off 009E                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 5CAC                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 5D60                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 5900                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                   _USBCtrlEPAllowDataStage 436C  
                      _UsbDevice_MainTask 5B1C                              _Mcu_ClearWdg 5E9E  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 008A  
                      ??_MdmHttp_MainTask 00A1                  _USBCtrlEPServiceComplete 2D6E  
                                 utoa@val 008C                   HttpGetMethod@GetMOutSts 01EC  
                   i1___wmul@multiplicand 001B                        __end_of_CheckModem 23FC  
                         _RtccIsrCallback 02E8          OsAlrm_ProcessOsAlarms@AlarmIndex 0021  
                      Terminal@EchoOption 02F3             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 007D                _USBStatusStageEnabledFlag1 00C5  
              _USBStatusStageEnabledFlag2 00C4                     ??_Uart_InitUartModule 009F  
                    __end_of_Wdg_MainTask 5B86                                   strtol@a 0094  
                                 strtol@c 0098                            _Rtcm_RtccAlarm 0308  
                                 strtol@s 0089                        USBEnableEndpoint@p 0086  
                     ?_UsbDevice_MainTask 0001                                   xtoi@val 0088  
                               _PORTDbits 000F83                                 _PORTEbits 000F84  
                     ??_Rtcc_SetRtccValue 0086                       ??_Rtcc_SetRtcStatus 007D  
                        __CFG_DSBOREN$OFF 000000                          ?_InitGprsNetwork 009B  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 5C30  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 02EA                          _HttpGetMethodSts 01F0  
                               _TRISBbits 000F93                      SendSmsSm@UartMessage 0100  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0062  
                      _BothEP0OutUOWNsSet 01E5                           ??_HttpGetMethod 009D  
                            strtol@endptr 008B                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001                 I2c_WriteData@I2cNextState 0037  
               USBConfigureEndpoint@EPNum 0082                ?_USBCtrlEPAllowStatusStage 0001  
                  __end_of_ModemEvtParser 2D6E                          ??_InitSchedTimer 00A4  
     USER_USB_CALLBACK_EVENT_HANDLER@size 008D                                 _USTATcopy 00D3  
                   __end_of_StopCondition 5EA6                  __size_of_HighPriorityIsr 4028  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036D  
                               _Led2Blink 0364                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035B              __end_of_USBTransferOnePacket 3E22  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0391  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 5D76  
                               _Led2Pulse 038B                                 _Led3Pulse 0385  
                       _I2cSlv_SendI2cMsg 5738           SetBaudRate@DesiredI2cBusClockHz 0096  
                         ??_ScheduleTasks 00A7                            _Tmr_TmrBConfig 3986  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 5DDE  
                       _OsAlrm_SetOsAlarm 3B16                      Terminal@TermRxBuffer 0590  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 53BE                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 54E0                              ??_MyApp_Task 0094  
                    Terminal@TermTxBuffer 0100                                 _GetMethod 00D7  
                  _USBCtrlTrfSetupHandler 4814                        ?_OsAlrm_SetOsAlarm 0083  
                   __end_of_USBDeviceInit 2154     __end_of_USBIncrement1msInternalTimers 5BA8  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 5B86  
                          __end_of___lmul 502C                            _CheckAckStatus 5E80  
                          __end_of___wmul 5AF6                       ??_I2cSlv_SendI2cMsg 0084  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 5452  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002D  
                          __end_of_memset 5992                        _UartTxBufferStatus 5322  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E6  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 5E30  
                               _MdmStatus 00CF                            __end_of_strcat 4F22  
                          __end_of_strcpy 5932                            __end_of_strlen 5738  
                          __end_of_strtol 19F2                       start_initialization 2B36  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 37F2                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 589A                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0550  
                             _cdc_data_tx 0784              __end_of_USBConfigureEndpoint 44A2  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC5F  
                      __end_of_MyApp_Task 49AA                          _UpdateOsCounters 5E10  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 00E8         __end_of_USBCtrlEPAllowStatusStage 37F2  
               __end_of_I2cSlv_SendI2cMsg 5776                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 4662  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 5E10                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3A4E  
                               _SendSmsSm 19F2                 __end_of_OsAlrm_SetOsAlarm 3BDE  
                  __end_of_Tmr_TmrBIrqSet 540A                                 _TaskTable 04AF  
                               _RingEvent 00DC                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D2  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B3  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 4F7C                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 5A4E                    _pBDTEntryEP0OutCurrent 00BC  
                           _Term_MainTask 5CFE                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                           _isxdigit$6400 0081                    __end_of_CheckAckStatus 5E8A  
                                ??___lmul 0085                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 27C2  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 4AB0  
                      HttpGetMethod@Index 01C8                               __pdataBANK1 01FD  
                             __pdataBANK2 02F3                               __pdataBANK3 03B9  
                             __pdataBANK4 04A5                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 522C                    __end_of_ConfigureModem 38BC  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D4  
          __end_of_USBStdGetStatusHandler 3ED4                             WriteByte@Byte 007D  
                      __end_of_TaskNumber FC5F                               __pbssCOMRAM 0023  
                 GetElapsedTime@TimeValue 008D                     __end_of_StringCompare 52D2  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0200  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                            _SetAckStatus 5DB8                              _isalpha$6390 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 5E62  
                            _isdigit$6124 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02DE                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 56BA       InitGprsNetwork@GprsNetInitNextState 00CE  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 5C50  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 582A  
            __end_of_LedBlinkStateMachine 2544                               sprintf@flag 0083  
                         _USBStallHandler 5526                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 5CE4  
              __end_of_USBCheckCDCRequest 3F84              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5084                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 5C50                              ??_StringCopy 0083  
                        _Led_SetLedStatus 59C2                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 5C0E  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC54  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 56BA  
                               __ptext101 2C54                                 __ptext110 22AA  
                               __ptext102 589A                                 __ptext111 40DA  
                               __ptext103 5280                                 __ptext120 4E68  
                               __ptext112 5E8A                                 __ptext104 2F5C  
                               __ptext121 46F6                                 __ptext113 0DC8  
                               __ptext105 37F2                                 __ptext130 3B16  
                               __ptext122 3A4E                                 __ptext114 05EC  
                               __ptext106 0ABC                             Terminal@Index 00A6  
                               __ptext131 5ACE                                 __ptext123 5DDE  
                               __ptext115 5776                                 __ptext107 268A  
                               __ptext140 5E62                                 __ptext132 4B22  
                               __ptext124 5864                                 __ptext116 5636  
                               __ptext108 4FD4                                 __ptext141 5EA2  
                               __ptext133 5370                                 __ptext125 4182  
                               __ptext117 5C50                                 __ptext109 502C  
                               __ptext150 5B40                                 __ptext142 5EA6  
                               __ptext134 49AA                                 __ptext126 3044  
                               __ptext118 5322                                 __ptext151 5E30  
                               __ptext143 5DB8                                 __ptext135 5A4E  
                               __ptext127 59C2                                 __ptext119 4DA8  
                               __ptext152 5CAC                                 __ptext144 5E6C  
                               __ptext136 3BDE                                 __ptext128 23FC  
                               __ptext161 5E20                                 __ptext153 5E10  
                               __ptext145 5D48                                 __ptext137 5A20  
                               __ptext129 522C                                 __ptext162 38BC  
                               __ptext154 2154                                 __ptext146 5EAA  
                               __ptext138 1D32                                 __ptext163 5DA2  
                               __ptext155 5AF6                                 __ptext147 5E76  
                               __ptext139 1EA0                                 __ptext164 5EAE  
                               __ptext156 5084                                 __ptext148 5E80  
                               __ptext165 5EB2                                 __ptext157 5CC8  
                               __ptext166 5EB6                                 __ptext158 582A  
                               __ptext167 0000                                 __ptext159 5D8C  
                                ?___awmod 007D                        _Sch_SchmIntService 5E30  
                         _InitializeTasks 4B94                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 0346  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 0397                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 3D64  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
                    MyApp_Task@isRelay1On 01D8                      MyApp_Task@isRelay2On 01D7  
      Uart_MdmGsmGprsReadService@UartData 0004                               _I2cTxBuffer 0440  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039D  
          InitializeTasks@ActiveTaskIndex 00A9                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0500                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4D42                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 4D42  
              ConfigureModem@DelayCounter 02D8                        __end_of_StringCopy 4E0A  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DD  
                         Terminal@SwTimer 049A                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 01D9  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02DA                          _OsTmr_StartTimer 4E68  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 5D8C                __end_of_Mcu_StartSystemPll 5C8E  
                            _PhoneNumbLen 00D0                              _Wdg_MainTask 5B64  
                           _Rtcm_MainTask 4786                            ___wmul@product 0081  
                        SendSmsSm@SwTimer 03EA                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 0028           HttpGetMethod@GetMethodNextState 00CD  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 4B22  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 5962  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 00C3                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4786  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 009C                      _USBConfigureEndpoint 440A  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 22AA                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 5AF6                     __end_of_initGprsModem 51D8  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 5E92                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E7                                  _ApnLocal 02D6  
                          _StartCondition 5EA6                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01ED                             _Tmr_TmrBPrSet 2E6E  
                       _NewStringReceived 003C                              _isspace$6393 007E  
                        _UartSetConfigLow 502C                                  _GetSmsSm 2F5C  
                 __end_of_USBStallHandler 556A                      Mdm_DrvMainFn@Options 0001  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DF  
                                _MdmCntSm 40DA                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2B4A  
                               copy_data1 2B6A                                 copy_data2 2BA2  
            __end_of_LedPulseStateMachine 312C                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 3212  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 5E6C                             i2_GenerateEvt 5DA2  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE88                 __end_of_I2c_InitI2cModule 4B94  
                                _MsgReady FE5F                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 4C04                initGprsModem@isInitialized 0093  
                 ?_USBCtrlTrfSetupHandler 0001                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 44A2  
                    __size_of_SetBaudRate 004E                              ?_TurnOnModem 0001  
                                _TxBuffer 0322                            _LowPriorityIsr 0018  
                               memcpy@tmp 0087                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DB  
                         _SetUartBaudRate 268A              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1D32                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 5E20  
                        __size_of___lldiv 0084                           MyApp_Task@F8992 0320  
                         MyApp_Task@F8986 03CE                           MyApp_Task@F8995 04A5  
                         MyApp_Task@F8989 03CC                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 5CAC                       __end_of_putUSBUSART 5BEC  
                             _line_coding 037E                              _Rtcc_LockRtc 5E00  
                    _LedBlinkStateMachine 23FC                    __end_of_StartCondition 5EAA  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01F4                 Rtcm_GetRtccDate@LocalDate 008A  
                I2c_WriteData@WriteStatus 0035                              _isupper$6396 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0033  
                          ?_Tmr_TmrBPrSet 0096                          ??_ModemEvtParser 0088  
                        _GetOsTickCounter 5DDE                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0188  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03A7  
                ModemEvtParser@RingString 0097                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                         MyApp_Task@phone 0094                                  __ptext10 53BE  
                                __ptext11 5C30                                  __ptext20 5B1C  
                                __ptext12 44A2                                  __ptext21 549A  
                                __ptext13 5C8E                           ??_UartWriteByte 007E  
                                __ptext30 58CE                                  __ptext22 52D2  
                                __ptext14 2A14                                  __ptext31 5526  
                                __ptext23 50DC                                  __ptext15 4B94  
                                __ptext40 312C                                  __ptext32 5B86  
                                __ptext24 5E98                                  __ptext16 4926  
                                __ptext41 3E22                                  __ptext33 1FFE  
                                __ptext25 5B64                                  __ptext17 5CFE  
                                __ptext50 28F0                                  __ptext42 27C2  
                                __ptext34 45CE                                  __ptext26 5DCC  
                                __ptext18 4786                                  __ptext51 3726  
                                __ptext43 135A                                  __ptext35 540A  
                                __ptext27 5E9E                                  __ptext19 365A  
                                __ptext60 00D0                                  __ptext52 3CA2  
                                __ptext44 4E0A                                  __ptext36 4814  
                                __ptext28 1BAA                                  __ptext61 3212  
                                __ptext53 33DC                                  __ptext45 3ED4  
                                __ptext37 2D6E                                  __ptext29 57F0  
                                __ptext70 5BCA                                  __ptext62 5D18  
                                __ptext54 2544                                  __ptext46 4C04  
                                __ptext38 436C                                  __ptext71 55AE  
                                __ptext63 57B4                                  __ptext55 10B6  
                                __ptext47 556A                                  __ptext39 32F8  
                                __ptext80 567A                                  __ptext72 4030  
                                __ptext64 181C                                  __ptext56 56FA  
                                __ptext48 440A                                  __ptext81 5C0E  
                                __ptext73 55F2                                  __ptext65 5D30  
                                __ptext57 4EC6                                  __ptext49 4CDC  
                                __ptext90 5D60                                  __ptext82 5130  
                                __ptext74 4538                                  __ptext66 5AA4  
                                __ptext58 358C                                  __ptext91 42CC  
                                __ptext83 5DF0                                  __ptext75 3D64  
                                __ptext67 5992                                  __ptext59 5962  
                                __ptext92 5D76                                  __ptext84 15EE  
                                __ptext76 34B4                                  __ptext68 5BA8  
                                __ptext93 4C70                                  __ptext85 4AB0  
                                __ptext77 5BEC                                  __ptext69 5900  
                                __ptext94 5184                                  __ptext86 48A0  
                                __ptext78 4A2E                                  __ptext95 422A  
                                __ptext87 5E00                                  __ptext79 5738  
                                __ptext96 51D8                                  __ptext88 4D42  
                                __ptext97 4F7C                                  __ptext89 4662  
                                __ptext98 54E0                                  __ptext99 19F2  
                        __size_of_isupper 0022                                _I2cDummyTx 5CC8  
                  Tmr_TmrBIrqSet@Priority 007D                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 0030                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 48A0                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 5E80  
                           _Mdm_DrvMainFn 5E98                        ??_USBCtrlEPService 0097  
                                _isxdigit 57B4                       _USBCtrlTrfInHandler 3CA2  
                I2c_ReadData@I2cReadState 0034                     __end_of_ScheduleTasks 2B36  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 4CDC  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 0085                 _USBCtrlEPAllowStatusStage 3726  
               MyApp_Task@I2cTxBufferTest 00A2                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 00AB                                strtol@sign 0093  
                         Term_MainSm@Data 0454                            _PhoneNumberLen 0324  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 582A  
                __end_of_Mcu_ConfigExtInt 5CFE                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C6                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 5C30                  __end_of_Led_SetLedStatus 59F2  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 5130                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 46F6                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0156   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4E68  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 4E0A  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                          MyApp_Task@test 01D6                   __end_of_SetUartBaudRate 27C2  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 0092  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 567A  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                __end_of_Rtcm_GetRtccDate 4DA8                               _putUSBUSART 5BCA  
                     _USBCtrlTrfRxService 28F0                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 57F0  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 4EC6  
                    _LedPulseStateMachine 3044                        _USBCheckCDCRequest 3ED4  
                     _USBCtrlTrfTxService 33DC                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                          _Rtcc_AlarmConfig 4C70  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FE  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01E1  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 549A  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5AA4                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00C8                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 003B       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 4182  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 5EA2  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00C7                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 589A                      __end_of_CDCTxService 268A  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC5B                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 0027                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 5DCC  
