

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 27 12:29:10 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	text178,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   220                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	text187,global,reloc=2,class=CODE,delta=1
   226                           	psect	text188,global,reloc=2,class=CODE,delta=1
   227                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   228                           	psect	text189,global,reloc=2,class=CODE,delta=1
   229                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   230                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   231                           	dabs	1,0x400,48,_BDT
   232                           	dabs	1,0x438,8,_CtrlTrfData
   233                           	dabs	1,0x430,8,_SetupPkt
   234  0000                     
   235                           ; Version 1.45
   236                           ; Generated 16/11/2017 GMT
   237                           ; 
   238                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   239                           ; All rights reserved.
   240                           ; 
   241                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   242                           ; 
   243                           ; Redistribution and use in source and binary forms, with or without modification, are
   244                           ; permitted provided that the following conditions are met:
   245                           ; 
   246                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   247                           ;        conditions and the following disclaimer.
   248                           ; 
   249                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   250                           ;        of conditions and the following disclaimer in the documentation and/or other
   251                           ;        materials provided with the distribution.
   252                           ; 
   253                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   254                           ;        software without specific prior written permission.
   255                           ; 
   256                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   257                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   258                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   259                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   260                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   261                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   262                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   263                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   264                           ; 
   265                           ; 
   266                           ; Code-generator required, PIC18F46J50 Definitions
   267                           ; 
   268                           ; SFR Addresses
   269  0000                     
   270                           	psect	idataBANK0
   271  0068F2                     __pidataBANK0:
   272                           	opt stack 0
   273                           
   274                           ;initializer for findEmptySpot@currentPosition
   275  0068F2  10                 	db	16
   276                           
   277                           ;initializer for isNumberInMemory@currentPosition
   278  0068F3  10                 	db	16
   279                           
   280                           	psect	idataBANK1
   281  0068F4                     __pidataBANK1:
   282                           	opt stack 0
   283                           
   284                           ;initializer for _isMemoryEmpty
   285  0068F4  01                 	db	1
   286                           
   287                           ;initializer for InitGprsNetwork@GprsInitSts
   288  0068F5  01                 	db	1
   289                           
   290                           	psect	idataBANK2
   291  00686A                     __pidataBANK2:
   292                           	opt stack 0
   293                           
   294                           ;initializer for Terminal@EchoOption
   295  00686A  01                 	db	1
   296                           
   297                           ;initializer for _MainSystemTimebaseFlag
   298  00686B  01                 	db	1
   299                           
   300                           ;initializer for _ConnTimeout
   301  00686C  00                 	db	0
   302  00686D  01                 	db	1
   303  00686E  0000               	dw	0
   304  006870  0000               	dw	0
   305  006872  0000               	dw	0
   306  006874  0000               	dw	0
   307  006876  00                 	db	0
   308                           
   309                           	psect	idataBANK3
   310  005FB4                     __pidataBANK3:
   311                           	opt stack 0
   312                           
   313                           ;initializer for ModemEvtParser@F9112
   314  005FB4  2B                 	db	43
   315  005FB5  43                 	db	67
   316  005FB6  4D                 	db	77
   317  005FB7  54                 	db	84
   318  005FB8  49                 	db	73
   319                           
   320                           ;initializer for ModemEvtParser@F9110
   321  005FB9  2B                 	db	43
   322  005FBA  43                 	db	67
   323  005FBB  4C                 	db	76
   324  005FBC  49                 	db	73
   325  005FBD  50                 	db	80
   326                           
   327                           ;initializer for ModemEvtParser@F9108
   328  005FBE  52                 	db	82
   329  005FBF  49                 	db	73
   330  005FC0  4E                 	db	78
   331  005FC1  47                 	db	71
   332                           
   333                           ;initializer for MyApp_Task@F9038
   334  005FC2  63                 	db	99
   335  005FC3  61                 	db	97
   336  005FC4  74                 	db	116
   337                           
   338                           ;initializer for triggerRelay@F9027
   339  005FC5  50                 	db	80
   340  005FC6  00                 	db	0
   341                           
   342                           ;initializer for Term_MainSm@TermDelay
   343  005FC7  01                 	db	1
   344  005FC8  01                 	db	1
   345  005FC9  0000               	dw	0
   346  005FCB  0000               	dw	0
   347  005FCD  0000               	dw	0
   348  005FCF  0000               	dw	0
   349  005FD1  00                 	db	0
   350                           
   351                           ;initializer for _ConnWait
   352  005FD2  00                 	db	0
   353  005FD3  01                 	db	1
   354  005FD4  0000               	dw	0
   355  005FD6  0000               	dw	0
   356  005FD8  0000               	dw	0
   357  005FDA  0000               	dw	0
   358  005FDC  00                 	db	0
   359                           
   360                           ;initializer for SendSmsSm@SwTimer
   361  005FDD  01                 	db	1
   362  005FDE  01                 	db	1
   363  005FDF  0000               	dw	0
   364  005FE1  0000               	dw	0
   365  005FE3  0000               	dw	0
   366  005FE5  0000               	dw	0
   367  005FE7  00                 	db	0
   368                           
   369                           ;initializer for CheckModem@Timeout
   370  005FE8  00                 	db	0
   371  005FE9  01                 	db	1
   372  005FEA  0000               	dw	0
   373  005FEC  0000               	dw	0
   374  005FEE  0000               	dw	0
   375  005FF0  0000               	dw	0
   376  005FF2  00                 	db	0
   377                           
   378                           	psect	idataBANK4
   379  006752                     __pidataBANK4:
   380                           	opt stack 0
   381                           
   382                           ;initializer for ModemEvtParser@F9114
   383  006752  43                 	db	67
   384  006753  61                 	db	97
   385  006754  6C                 	db	108
   386  006755  6C                 	db	108
   387  006756  20                 	db	32
   388  006757  52                 	db	82
   389  006758  65                 	db	101
   390  006759  61                 	db	97
   391  00675A  64                 	db	100
   392  00675B  79                 	db	121
   393                           
   394                           ;initializer for MyApp_Task@receivedNumber
   395  00675C  2B                 	db	43
   396  00675D  33                 	db	51
   397  00675E  39                 	db	57
   398  00675F  30                 	db	48
   399  006760  31                 	db	49
   400  006761  32                 	db	50
   401  006762  33                 	db	51
   402  006763  34                 	db	52
   403  006764  35                 	db	53
   404  006765  36                 	db	54
   405  006766  37                 	db	55
   406  006767  38                 	db	56
   407  006768  39                 	db	57
   408                           
   409                           	psect	idataBANK5
   410  005A98                     __pidataBANK5:
   411                           	opt stack 0
   412                           
   413                           ;initializer for _TaskTable
   414  005A98  D0                 	db	low _Mdm_DrvMainFn
   415  005A99  68                 	db	high _Mdm_DrvMainFn
   416  005A9A  00                 	db	0
   417  005A9B  0000               	dw	0
   418  005A9D  000A               	dw	10
   419  005A9F  00                 	db	0
   420  005AA0  50                 	db	low _I2cSlv_MainTask
   421  005AA1  58                 	db	high _I2cSlv_MainTask
   422  005AA2  00                 	db	0
   423  005AA3  0000               	dw	0
   424  005AA5  0001               	dw	1
   425  005AA7  00                 	db	0
   426  005AA8  E8                 	db	low _Mdm_MainTask
   427  005AA9  5A                 	db	high _Mdm_MainTask
   428  005AAA  00                 	db	0
   429  005AAB  0000               	dw	0
   430  005AAD  0001               	dw	1
   431  005AAF  00                 	db	0
   432  005AB0  9A                 	db	low _MdmHttp_MainTask
   433  005AB1  5D                 	db	high _MdmHttp_MainTask
   434  005AB2  00                 	db	0
   435  005AB3  0000               	dw	0
   436  005AB5  0001               	dw	1
   437  005AB7  00                 	db	0
   438  005AB8  72                 	db	low _UsbDevice_MainTask
   439  005AB9  64                 	db	high _UsbDevice_MainTask
   440  005ABA  00                 	db	0
   441  005ABB  0000               	dw	0
   442  005ABD  0001               	dw	1
   443  005ABF  00                 	db	0
   444  005AC0  02                 	db	low _Wdg_MainTask
   445  005AC1  65                 	db	high _Wdg_MainTask
   446  005AC2  00                 	db	0
   447  005AC3  0000               	dw	0
   448  005AC5  0064               	dw	100
   449  005AC7  00                 	db	0
   450  005AC8  DA                 	db	low _Led_MainTask
   451  005AC9  3B                 	db	high _Led_MainTask
   452  005ACA  00                 	db	0
   453  005ACB  0000               	dw	0
   454  005ACD  0032               	dw	50
   455  005ACF  00                 	db	0
   456  005AD0  18                 	db	low _Rtcm_MainTask
   457  005AD1  4E                 	db	high _Rtcm_MainTask
   458  005AD2  00                 	db	0
   459  005AD3  0000               	dw	0
   460  005AD5  0064               	dw	100
   461  005AD7  00                 	db	0
   462  005AD8  BC                 	db	low _Term_MainTask
   463  005AD9  66                 	db	high _Term_MainTask
   464  005ADA  00                 	db	0
   465  005ADB  0000               	dw	0
   466  005ADD  0001               	dw	1
   467  005ADF  00                 	db	0
   468  005AE0  C8                 	db	low _MyApp_Task
   469  005AE1  0D                 	db	high _MyApp_Task
   470  005AE2  00                 	db	0
   471  005AE3  0000               	dw	0
   472  005AE5  0064               	dw	100
   473  005AE7  00                 	db	0
   474                           
   475                           	psect	mediumconst
   476  00FC10                     __pmediumconst:
   477                           	opt stack 0
   478  00FC10  00                 	db	0
   479  00FC11                     MyApp_Task@F9033:
   480                           	opt stack 0
   481  00FC11  00                 	db	0
   482  00FC12  00                 	db	0
   483  00FC13  00                 	db	0
   484  00FC14  00                 	db	0
   485  00FC15  00                 	db	0
   486  00FC16  00                 	db	0
   487  00FC17  00                 	db	0
   488  00FC18  00                 	db	0
   489  00FC19  00                 	db	0
   490  00FC1A  00                 	db	0
   491  00FC1B  00                 	db	0
   492  00FC1C  00                 	db	0
   493  00FC1D  00                 	db	0
   494  00FC1E                     __end_ofMyApp_Task@F9033:
   495                           	opt stack 0
   496  00FC1E                     _USB_SD_Ptr:
   497                           	opt stack 0
   498  00FC1E  5B                 	db	low _sd000
   499  00FC1F  FE                 	db	high _sd000
   500  00FC20  14                 	db	low _sd001
   501  00FC21  FE                 	db	high _sd001
   502  00FC22  EE                 	db	low _sd002
   503  00FC23  FD                 	db	high _sd002
   504  00FC24                     __end_of_USB_SD_Ptr:
   505                           	opt stack 0
   506  00FC24                     MyApp_Task@F9036:
   507                           	opt stack 0
   508  00FC24  4E                 	db	78
   509  00FC25  55                 	db	85
   510  00FC26  4D                 	db	77
   511  00FC27  2B                 	db	43
   512  00FC28                     __end_ofMyApp_Task@F9036:
   513                           	opt stack 0
   514  00FC28                     parseCommand@F9021:
   515                           	opt stack 0
   516  00FC28  44                 	db	68
   517  00FC29  45                 	db	69
   518  00FC2A  4C                 	db	76
   519  00FC2B                     __end_ofparseCommand@F9021:
   520                           	opt stack 0
   521  00FC2B                     parseCommand@F9019:
   522                           	opt stack 0
   523  00FC2B  41                 	db	65
   524  00FC2C  44                 	db	68
   525  00FC2D  44                 	db	68
   526  00FC2E                     __end_ofparseCommand@F9019:
   527                           	opt stack 0
   528  00FC2E                     _USB_CD_Ptr:
   529                           	opt stack 0
   530  00FC2E  AB                 	db	low _configDescriptor1
   531  00FC2F  FD                 	db	high _configDescriptor1
   532  00FC30                     __end_of_USB_CD_Ptr:
   533                           	opt stack 0
   534  00FC30                     _TaskNumber:
   535                           	opt stack 0
   536  00FC30  000A               	dw	10
   537  00FC32                     __end_of_TaskNumber:
   538                           	opt stack 0
   539  00FC32                     _MsgFormat:
   540                           	opt stack 0
   541  00FC32  48                 	db	72
   542  00FC33  6F                 	db	111
   543  00FC34  73                 	db	115
   544  00FC35  74                 	db	116
   545  00FC36  20                 	db	32
   546  00FC37  6D                 	db	109
   547  00FC38  65                 	db	101
   548  00FC39  73                 	db	115
   549  00FC3A  73                 	db	115
   550  00FC3B  61                 	db	97
   551  00FC3C  67                 	db	103
   552  00FC3D  65                 	db	101
   553  00FC3E  20                 	db	32
   554  00FC3F  66                 	db	102
   555  00FC40  6F                 	db	111
   556  00FC41  72                 	db	114
   557  00FC42  6D                 	db	109
   558  00FC43  61                 	db	97
   559  00FC44  74                 	db	116
   560  00FC45  3A                 	db	58
   561  00FC46  20                 	db	32
   562  00FC47  0D                 	db	13
   563  00FC48  0A                 	db	10
   564  00FC49  5B                 	db	91
   565  00FC4A  6F                 	db	111
   566  00FC4B  70                 	db	112
   567  00FC4C  5F                 	db	95
   568  00FC4D  74                 	db	116
   569  00FC4E  79                 	db	121
   570  00FC4F  70                 	db	112
   571  00FC50  65                 	db	101
   572  00FC51  5D                 	db	93
   573  00FC52  3A                 	db	58
   574  00FC53  5B                 	db	91
   575  00FC54  6F                 	db	111
   576  00FC55  70                 	db	112
   577  00FC56  5D                 	db	93
   578  00FC57  3A                 	db	58
   579  00FC58  5B                 	db	91
   580  00FC59  6C                 	db	108
   581  00FC5A  65                 	db	101
   582  00FC5B  6E                 	db	110
   583  00FC5C  5D                 	db	93
   584  00FC5D  3A                 	db	58
   585  00FC5E  5B                 	db	91
   586  00FC5F  61                 	db	97
   587  00FC60  64                 	db	100
   588  00FC61  64                 	db	100
   589  00FC62  72                 	db	114
   590  00FC63  5D                 	db	93
   591  00FC64  3A                 	db	58
   592  00FC65  5B                 	db	91
   593  00FC66  70                 	db	112
   594  00FC67  61                 	db	97
   595  00FC68  79                 	db	121
   596  00FC69  6C                 	db	108
   597  00FC6A  6F                 	db	111
   598  00FC6B  61                 	db	97
   599  00FC6C  64                 	db	100
   600  00FC6D  5D                 	db	93
   601  00FC6E  0D                 	db	13
   602  00FC6F  0A                 	db	10
   603  00FC70  0D                 	db	13
   604  00FC71  0A                 	db	10
   605  00FC72  5B                 	db	91
   606  00FC73  6F                 	db	111
   607  00FC74  70                 	db	112
   608  00FC75  5F                 	db	95
   609  00FC76  74                 	db	116
   610  00FC77  79                 	db	121
   611  00FC78  70                 	db	112
   612  00FC79  65                 	db	101
   613  00FC7A  5D                 	db	93
   614  00FC7B  20                 	db	32
   615  00FC7C  3D                 	db	61
   616  00FC7D  20                 	db	32
   617  00FC7E  53                 	db	83
   618  00FC7F  4F                 	db	79
   619  00FC80  2C                 	db	44
   620  00FC81  53                 	db	83
   621  00FC82  42                 	db	66
   622  00FC83  0D                 	db	13
   623  00FC84  0A                 	db	10
   624  00FC85  5B                 	db	91
   625  00FC86  6F                 	db	111
   626  00FC87  70                 	db	112
   627  00FC88  5D                 	db	93
   628  00FC89  20                 	db	32
   629  00FC8A  3D                 	db	61
   630  00FC8B  20                 	db	32
   631  00FC8C  52                 	db	82
   632  00FC8D  3A                 	db	58
   633  00FC8E  20                 	db	32
   634  00FC8F  72                 	db	114
   635  00FC90  65                 	db	101
   636  00FC91  61                 	db	97
   637  00FC92  64                 	db	100
   638  00FC93  2C                 	db	44
   639  00FC94  57                 	db	87
   640  00FC95  3A                 	db	58
   641  00FC96  20                 	db	32
   642  00FC97  77                 	db	119
   643  00FC98  72                 	db	114
   644  00FC99  69                 	db	105
   645  00FC9A  74                 	db	116
   646  00FC9B  65                 	db	101
   647  00FC9C  0D                 	db	13
   648  00FC9D  0A                 	db	10
   649  00FC9E  5B                 	db	91
   650  00FC9F  6C                 	db	108
   651  00FCA0  65                 	db	101
   652  00FCA1  6E                 	db	110
   653  00FCA2  5D                 	db	93
   654  00FCA3  20                 	db	32
   655  00FCA4  3D                 	db	61
   656  00FCA5  20                 	db	32
   657  00FCA6  32                 	db	50
   658  00FCA7  20                 	db	32
   659  00FCA8  62                 	db	98
   660  00FCA9  79                 	db	121
   661  00FCAA  74                 	db	116
   662  00FCAB  65                 	db	101
   663  00FCAC  20                 	db	32
   664  00FCAD  41                 	db	65
   665  00FCAE  53                 	db	83
   666  00FCAF  43                 	db	67
   667  00FCB0  49                 	db	73
   668  00FCB1  49                 	db	73
   669  00FCB2  0D                 	db	13
   670  00FCB3  0A                 	db	10
   671  00FCB4  5B                 	db	91
   672  00FCB5  61                 	db	97
   673  00FCB6  64                 	db	100
   674  00FCB7  64                 	db	100
   675  00FCB8  72                 	db	114
   676  00FCB9  5D                 	db	93
   677  00FCBA  20                 	db	32
   678  00FCBB  3D                 	db	61
   679  00FCBC  20                 	db	32
   680  00FCBD  32                 	db	50
   681  00FCBE  20                 	db	32
   682  00FCBF  62                 	db	98
   683  00FCC0  79                 	db	121
   684  00FCC1  74                 	db	116
   685  00FCC2  65                 	db	101
   686  00FCC3  20                 	db	32
   687  00FCC4  41                 	db	65
   688  00FCC5  53                 	db	83
   689  00FCC6  43                 	db	67
   690  00FCC7  49                 	db	73
   691  00FCC8  49                 	db	73
   692  00FCC9  0D                 	db	13
   693  00FCCA  0A                 	db	10
   694  00FCCB  5B                 	db	91
   695  00FCCC  70                 	db	112
   696  00FCCD  61                 	db	97
   697  00FCCE  79                 	db	121
   698  00FCCF  6C                 	db	108
   699  00FCD0  6F                 	db	111
   700  00FCD1  61                 	db	97
   701  00FCD2  64                 	db	100
   702  00FCD3  5D                 	db	93
   703  00FCD4  20                 	db	32
   704  00FCD5  3D                 	db	61
   705  00FCD6  20                 	db	32
   706  00FCD7  6D                 	db	109
   707  00FCD8  61                 	db	97
   708  00FCD9  78                 	db	120
   709  00FCDA  20                 	db	32
   710  00FCDB  32                 	db	50
   711  00FCDC  30                 	db	48
   712  00FCDD  20                 	db	32
   713  00FCDE  62                 	db	98
   714  00FCDF  79                 	db	121
   715  00FCE0  74                 	db	116
   716  00FCE1  65                 	db	101
   717  00FCE2  20                 	db	32
   718  00FCE3  41                 	db	65
   719  00FCE4  53                 	db	83
   720  00FCE5  43                 	db	67
   721  00FCE6  49                 	db	73
   722  00FCE7  49                 	db	73
   723  00FCE8  0D                 	db	13
   724  00FCE9  0A                 	db	10
   725  00FCEA  0D                 	db	13
   726  00FCEB  0A                 	db	10
   727  00FCEC  54                 	db	84
   728  00FCED  65                 	db	101
   729  00FCEE  72                 	db	114
   730  00FCEF  6D                 	db	109
   731  00FCF0  69                 	db	105
   732  00FCF1  6E                 	db	110
   733  00FCF2  61                 	db	97
   734  00FCF3  6C                 	db	108
   735  00FCF4  20                 	db	32
   736  00FCF5  4D                 	db	77
   737  00FCF6  6F                 	db	111
   738  00FCF7  64                 	db	100
   739  00FCF8  65                 	db	101
   740  00FCF9  3A                 	db	58
   741  00FCFA  20                 	db	32
   742  00FCFB  43                 	db	67
   743  00FCFC  4F                 	db	79
   744  00FCFD  4D                 	db	77
   745  00FCFE  4D                 	db	77
   746  00FCFF  41                 	db	65
   747  00FD00  4E                 	db	78
   748  00FD01  44                 	db	68
   749  00FD02  20                 	db	32
   750  00FD03  4D                 	db	77
   751  00FD04  4F                 	db	79
   752  00FD05  44                 	db	68
   753  00FD06  45                 	db	69
   754  00FD07  0D                 	db	13
   755  00FD08  0A                 	db	10
   756  00FD09  4D                 	db	77
   757  00FD0A  6F                 	db	111
   758  00FD0B  64                 	db	100
   759  00FD0C  65                 	db	101
   760  00FD0D  6D                 	db	109
   761  00FD0E  20                 	db	32
   762  00FD0F  54                 	db	84
   763  00FD10  79                 	db	121
   764  00FD11  70                 	db	112
   765  00FD12  65                 	db	101
   766  00FD13  3A                 	db	58
   767  00FD14  20                 	db	32
   768  00FD15  47                 	db	71
   769  00FD16  53                 	db	83
   770  00FD17  4D                 	db	77
   771  00FD18  2F                 	db	47
   772  00FD19  47                 	db	71
   773  00FD1A  50                 	db	80
   774  00FD1B  52                 	db	82
   775  00FD1C  53                 	db	83
   776  00FD1D  0D                 	db	13
   777  00FD1E  0A                 	db	10
   778  00FD1F  0D                 	db	13
   779  00FD20  0A                 	db	10
   780  00FD21  00                 	db	0
   781  00FD22                     __end_of_MsgFormat:
   782                           	opt stack 0
   783  00FD22                     _Welcome:
   784                           	opt stack 0
   785  00FD22  2A                 	db	42
   786  00FD23  2A                 	db	42
   787  00FD24  2A                 	db	42
   788  00FD25  2A                 	db	42
   789  00FD26  2A                 	db	42
   790  00FD27  2A                 	db	42
   791  00FD28  2A                 	db	42
   792  00FD29  2A                 	db	42
   793  00FD2A  2A                 	db	42
   794  00FD2B  2A                 	db	42
   795  00FD2C  2A                 	db	42
   796  00FD2D  2A                 	db	42
   797  00FD2E  2A                 	db	42
   798  00FD2F  2A                 	db	42
   799  00FD30  2A                 	db	42
   800  00FD31  2A                 	db	42
   801  00FD32  2A                 	db	42
   802  00FD33  2A                 	db	42
   803  00FD34  2A                 	db	42
   804  00FD35  2A                 	db	42
   805  00FD36  2A                 	db	42
   806  00FD37  2A                 	db	42
   807  00FD38  2A                 	db	42
   808  00FD39  2A                 	db	42
   809  00FD3A  2A                 	db	42
   810  00FD3B  2A                 	db	42
   811  00FD3C  2A                 	db	42
   812  00FD3D  2A                 	db	42
   813  00FD3E  2A                 	db	42
   814  00FD3F  2A                 	db	42
   815  00FD40  2A                 	db	42
   816  00FD41  2A                 	db	42
   817  00FD42  2A                 	db	42
   818  00FD43  2A                 	db	42
   819  00FD44  2A                 	db	42
   820  00FD45  2A                 	db	42
   821  00FD46  2A                 	db	42
   822  00FD47  2A                 	db	42
   823  00FD48  2A                 	db	42
   824  00FD49  2A                 	db	42
   825  00FD4A  2A                 	db	42
   826  00FD4B  2A                 	db	42
   827  00FD4C  2A                 	db	42
   828  00FD4D  2A                 	db	42
   829  00FD4E  2A                 	db	42
   830  00FD4F  2A                 	db	42
   831  00FD50  2A                 	db	42
   832  00FD51  2A                 	db	42
   833  00FD52  2A                 	db	42
   834  00FD53  0D                 	db	13
   835  00FD54  0A                 	db	10
   836  00FD55  20                 	db	32
   837  00FD56  20                 	db	32
   838  00FD57  20                 	db	32
   839  00FD58  20                 	db	32
   840  00FD59  20                 	db	32
   841  00FD5A  20                 	db	32
   842  00FD5B  20                 	db	32
   843  00FD5C  20                 	db	32
   844  00FD5D  20                 	db	32
   845  00FD5E  20                 	db	32
   846  00FD5F  20                 	db	32
   847  00FD60  20                 	db	32
   848  00FD61  20                 	db	32
   849  00FD62  20                 	db	32
   850  00FD63  20                 	db	32
   851  00FD64  20                 	db	32
   852  00FD65  20                 	db	32
   853  00FD66  20                 	db	32
   854  00FD67  4D                 	db	77
   855  00FD68  45                 	db	69
   856  00FD69  52                 	db	82
   857  00FD6A  43                 	db	67
   858  00FD6B  55                 	db	85
   859  00FD6C  52                 	db	82
   860  00FD6D  59                 	db	89
   861  00FD6E  20                 	db	32
   862  00FD6F  53                 	db	83
   863  00FD70  59                 	db	89
   864  00FD71  53                 	db	83
   865  00FD72  54                 	db	84
   866  00FD73  45                 	db	69
   867  00FD74  4D                 	db	77
   868  00FD75  0D                 	db	13
   869  00FD76  0A                 	db	10
   870  00FD77  2A                 	db	42
   871  00FD78  2A                 	db	42
   872  00FD79  2A                 	db	42
   873  00FD7A  2A                 	db	42
   874  00FD7B  2A                 	db	42
   875  00FD7C  2A                 	db	42
   876  00FD7D  2A                 	db	42
   877  00FD7E  2A                 	db	42
   878  00FD7F  2A                 	db	42
   879  00FD80  2A                 	db	42
   880  00FD81  2A                 	db	42
   881  00FD82  2A                 	db	42
   882  00FD83  2A                 	db	42
   883  00FD84  2A                 	db	42
   884  00FD85  2A                 	db	42
   885  00FD86  2A                 	db	42
   886  00FD87  2A                 	db	42
   887  00FD88  2A                 	db	42
   888  00FD89  2A                 	db	42
   889  00FD8A  2A                 	db	42
   890  00FD8B  2A                 	db	42
   891  00FD8C  2A                 	db	42
   892  00FD8D  2A                 	db	42
   893  00FD8E  2A                 	db	42
   894  00FD8F  2A                 	db	42
   895  00FD90  2A                 	db	42
   896  00FD91  2A                 	db	42
   897  00FD92  2A                 	db	42
   898  00FD93  2A                 	db	42
   899  00FD94  2A                 	db	42
   900  00FD95  2A                 	db	42
   901  00FD96  2A                 	db	42
   902  00FD97  2A                 	db	42
   903  00FD98  2A                 	db	42
   904  00FD99  2A                 	db	42
   905  00FD9A  2A                 	db	42
   906  00FD9B  2A                 	db	42
   907  00FD9C  2A                 	db	42
   908  00FD9D  2A                 	db	42
   909  00FD9E  2A                 	db	42
   910  00FD9F  2A                 	db	42
   911  00FDA0  2A                 	db	42
   912  00FDA1  2A                 	db	42
   913  00FDA2  2A                 	db	42
   914  00FDA3  2A                 	db	42
   915  00FDA4  2A                 	db	42
   916  00FDA5  2A                 	db	42
   917  00FDA6  2A                 	db	42
   918  00FDA7  2A                 	db	42
   919  00FDA8  0D                 	db	13
   920  00FDA9  0A                 	db	10
   921  00FDAA  00                 	db	0
   922  00FDAB                     __end_of_Welcome:
   923                           	opt stack 0
   924  00FDAB                     _configDescriptor1:
   925                           	opt stack 0
   926  00FDAB  09                 	db	9
   927  00FDAC  02                 	db	2
   928  00FDAD  43                 	db	67
   929  00FDAE  00                 	db	0
   930  00FDAF  02                 	db	2
   931  00FDB0  01                 	db	1
   932  00FDB1  00                 	db	0
   933  00FDB2  C0                 	db	192
   934  00FDB3  32                 	db	50
   935  00FDB4  09                 	db	9
   936  00FDB5  04                 	db	4
   937  00FDB6  00                 	db	0
   938  00FDB7  00                 	db	0
   939  00FDB8  01                 	db	1
   940  00FDB9  02                 	db	2
   941  00FDBA  02                 	db	2
   942  00FDBB  01                 	db	1
   943  00FDBC  00                 	db	0
   944  00FDBD  05                 	db	5
   945  00FDBE  24                 	db	36
   946  00FDBF  00                 	db	0
   947  00FDC0  10                 	db	16
   948  00FDC1  01                 	db	1
   949  00FDC2  04                 	db	4
   950  00FDC3  24                 	db	36
   951  00FDC4  02                 	db	2
   952  00FDC5  02                 	db	2
   953  00FDC6  05                 	db	5
   954  00FDC7  24                 	db	36
   955  00FDC8  06                 	db	6
   956  00FDC9  00                 	db	0
   957  00FDCA  01                 	db	1
   958  00FDCB  05                 	db	5
   959  00FDCC  24                 	db	36
   960  00FDCD  01                 	db	1
   961  00FDCE  00                 	db	0
   962  00FDCF  01                 	db	1
   963  00FDD0  07                 	db	7
   964  00FDD1  05                 	db	5
   965  00FDD2  81                 	db	129
   966  00FDD3  03                 	db	3
   967  00FDD4  08                 	db	8
   968  00FDD5  00                 	db	0
   969  00FDD6  02                 	db	2
   970  00FDD7  09                 	db	9
   971  00FDD8  04                 	db	4
   972  00FDD9  01                 	db	1
   973  00FDDA  00                 	db	0
   974  00FDDB  02                 	db	2
   975  00FDDC  0A                 	db	10
   976  00FDDD  00                 	db	0
   977  00FDDE  00                 	db	0
   978  00FDDF  00                 	db	0
   979  00FDE0  07                 	db	7
   980  00FDE1  05                 	db	5
   981  00FDE2  02                 	db	2
   982  00FDE3  02                 	db	2
   983  00FDE4  40                 	db	64
   984  00FDE5  00                 	db	0
   985  00FDE6  00                 	db	0
   986  00FDE7  07                 	db	7
   987  00FDE8  05                 	db	5
   988  00FDE9  82                 	db	130
   989  00FDEA  02                 	db	2
   990  00FDEB  40                 	db	64
   991  00FDEC  00                 	db	0
   992  00FDED  00                 	db	0
   993  00FDEE                     __end_of_configDescriptor1:
   994                           	opt stack 0
   995  00FDEE                     _sd002:
   996                           	opt stack 0
   997  00FDEE  26                 	db	38
   998  00FDEF  03                 	db	3
   999  00FDF0  0054               	dw	84
  1000  00FDF2  0065               	dw	101
  1001  00FDF4  0072               	dw	114
  1002  00FDF6  006D               	dw	109
  1003  00FDF8  0069               	dw	105
  1004  00FDFA  006E               	dw	110
  1005  00FDFC  0061               	dw	97
  1006  00FDFE  006C               	dw	108
  1007  00FE00  0020               	dw	32
  1008  00FE02  0049               	dw	73
  1009  00FE04  006E               	dw	110
  1010  00FE06  0074               	dw	116
  1011  00FE08  0065               	dw	101
  1012  00FE0A  0072               	dw	114
  1013  00FE0C  0066               	dw	102
  1014  00FE0E  0061               	dw	97
  1015  00FE10  0063               	dw	99
  1016  00FE12  0065               	dw	101
  1017  00FE14                     __end_of_sd002:
  1018                           	opt stack 0
  1019  00FE14                     _sd001:
  1020                           	opt stack 0
  1021  00FE14  1E                 	db	30
  1022  00FE15  03                 	db	3
  1023  00FE16  004D               	dw	77
  1024  00FE18  0065               	dw	101
  1025  00FE1A  0072               	dw	114
  1026  00FE1C  0063               	dw	99
  1027  00FE1E  0075               	dw	117
  1028  00FE20  0072               	dw	114
  1029  00FE22  0079               	dw	121
  1030  00FE24  0020               	dw	32
  1031  00FE26  0053               	dw	83
  1032  00FE28  0079               	dw	121
  1033  00FE2A  0073               	dw	115
  1034  00FE2C  0074               	dw	116
  1035  00FE2E  0065               	dw	101
  1036  00FE30  006D               	dw	109
  1037  00FE32                     __end_of_sd001:
  1038                           	opt stack 0
  1039  00FE32                     _MsgReady:
  1040                           	opt stack 0
  1041  00FE32  0D                 	db	13
  1042  00FE33  0A                 	db	10
  1043  00FE34  53                 	db	83
  1044  00FE35  79                 	db	121
  1045  00FE36  73                 	db	115
  1046  00FE37  74                 	db	116
  1047  00FE38  65                 	db	101
  1048  00FE39  6D                 	db	109
  1049  00FE3A  20                 	db	32
  1050  00FE3B  52                 	db	82
  1051  00FE3C  65                 	db	101
  1052  00FE3D  61                 	db	97
  1053  00FE3E  64                 	db	100
  1054  00FE3F  79                 	db	121
  1055  00FE40  2E                 	db	46
  1056  00FE41  2E                 	db	46
  1057  00FE42  2E                 	db	46
  1058  00FE43  20                 	db	32
  1059  00FE44  0D                 	db	13
  1060  00FE45  0A                 	db	10
  1061  00FE46  0D                 	db	13
  1062  00FE47  0A                 	db	10
  1063  00FE48  00                 	db	0
  1064  00FE49                     __end_of_MsgReady:
  1065                           	opt stack 0
  1066  00FE49                     _device_dsc:
  1067                           	opt stack 0
  1068  00FE49  12                 	db	18
  1069  00FE4A  01                 	db	1
  1070  00FE4B  0200               	dw	512
  1071  00FE4D  02                 	db	2
  1072  00FE4E  00                 	db	0
  1073  00FE4F  00                 	db	0
  1074  00FE50  08                 	db	8
  1075  00FE51  04D8               	dw	1240
  1076  00FE53  000A               	dw	10
  1077  00FE55  0100               	dw	256
  1078  00FE57  01                 	db	1
  1079  00FE58  02                 	db	2
  1080  00FE59  00                 	db	0
  1081  00FE5A  01                 	db	1
  1082  00FE5B                     __end_of_device_dsc:
  1083                           	opt stack 0
  1084  00FE5B                     _sd000:
  1085                           	opt stack 0
  1086  00FE5B  04                 	db	4
  1087  00FE5C  03                 	db	3
  1088  00FE5D  0409               	dw	1033
  1089  00FE5F                     __end_of_sd000:
  1090                           	opt stack 0
  1091  0000                     _RPINR1	set	3815
  1092  0000                     _UEP0bits	set	3878
  1093  0000                     _UIEbits	set	3894
  1094  0000                     _UADDR	set	3896
  1095  0000                     _UIE	set	3894
  1096  0000                     _UEIE	set	3895
  1097  0000                     _UCFG	set	3897
  1098  0000                     _RTCCAL	set	3902
  1099  0000                     _PADCFG1bits	set	3900
  1100  0000                     _RTCCFGbits	set	3903
  1101  0000                     _DSCONLbits	set	3916
  1102  0000                     _DSGPR1	set	3919
  1103  0000                     _DSGPR0	set	3918
  1104  0000                     _DSCONHbits	set	3917
  1105  0000                     _ANCON1bits	set	3913
  1106  0000                     _UEP1	set	3879
  1107  0000                     _UEP0	set	3878
  1108  0000                     _T1CONbits	set	4045
  1109  0000                     _PORTDbits	set	3971
  1110  0000                     _USTAT	set	3940
  1111  0000                     _PIR2bits	set	4001
  1112  0000                     _UCON	set	3941
  1113  0000                     _UIRbits	set	3938
  1114  0000                     _UCONbits	set	3941
  1115  0000                     _UIR	set	3938
  1116  0000                     _UEIR	set	3939
  1117  0000                     _PIE2bits	set	4000
  1118  0000                     _BAUDCON2	set	3964
  1119  0000                     _RCSTA2	set	3996
  1120  0000                     _BAUDCON1	set	3966
  1121  0000                     _RCSTA1	set	4012
  1122  0000                     _TRISCbits	set	3988
  1123  0000                     _TXSTA2	set	4008
  1124  0000                     _TXSTA1	set	4013
  1125  0000                     _RCREG2	set	4010
  1126  0000                     _RCREG1	set	4015
  1127  0000                     _TXREG2	set	4009
  1128  0000                     _TXREG1	set	4014
  1129  0000                     _SPBRG2	set	4011
  1130  0000                     _SPBRGH2	set	3965
  1131  0000                     _SPBRG1	set	4016
  1132  0000                     _SPBRGH1	set	3967
  1133  0000                     _PR4	set	3959
  1134  0000                     _PR2	set	4043
  1135  0000                     _PIE1bits	set	3997
  1136  0000                     _IPR1bits	set	3999
  1137  0000                     _T4CONbits	set	3958
  1138  0000                     _T2CONbits	set	4042
  1139  0000                     _ALRMVALL	set	3982
  1140  0000                     _ALRMVALH	set	3983
  1141  0000                     _RTCVALH	set	3993
  1142  0000                     _RTCVALL	set	3992
  1143  0000                     _ALRMRPTbits	set	3984
  1144  0000                     _ALRMCFGbits	set	3985
  1145  0000                     _PIE3bits	set	4003
  1146  0000                     _IPR3bits	set	4005
  1147  0000                     _OSCCONbits	set	4051
  1148  0000                     _PORTEbits	set	3972
  1149  0000                     _TRISEbits	set	3990
  1150  0000                     _WDTCONbits	set	4032
  1151  0000                     _INTCON2bits	set	4081
  1152  0000                     _TRISBbits	set	3987
  1153  0000                     _OSCTUNEbits	set	3995
  1154  0000                     _SSP2CON1	set	3954
  1155  0000                     _TRISDbits	set	3989
  1156  0000                     _SSP2BUF	set	3957
  1157  0000                     _SSP2CON2bits	set	3953
  1158  0000                     _SSP2STAT	set	3955
  1159  0000                     _SSP2CON2	set	3953
  1160  0000                     _SSP2ADD	set	3956
  1161  0000                     _PIR1bits	set	3998
  1162  0000                     _PIR3bits	set	4004
  1163  0000                     _INTCON3bits	set	4080
  1164  0000                     _INTCONbits	set	4082
  1165  0000                     _RCONbits	set	4048
  1166  00FE5F                     STR_21:
  1167  00FE5F  20                 	db	32
  1168  00FE60  4C                 	db	76	;'L'
  1169  00FE61  61                 	db	97	;'a'
  1170  00FE62  7A                 	db	122	;'z'
  1171  00FE63  79                 	db	121	;'y'
  1172  00FE64  20                 	db	32
  1173  00FE65  64                 	db	100	;'d'
  1174  00FE66  65                 	db	101	;'e'
  1175  00FE67  76                 	db	118	;'v'
  1176  00FE68  69                 	db	105	;'i'
  1177  00FE69  63                 	db	99	;'c'
  1178  00FE6A  65                 	db	101	;'e'
  1179  00FE6B  2E                 	db	46
  1180  00FE6C  2E                 	db	46
  1181  00FE6D  2E                 	db	46
  1182  00FE6E  79                 	db	121	;'y'
  1183  00FE6F  6F                 	db	111	;'o'
  1184  00FE70  75                 	db	117	;'u'
  1185  00FE71  27                 	db	39
  1186  00FE72  76                 	db	118	;'v'
  1187  00FE73  65                 	db	101	;'e'
  1188  00FE74  20                 	db	32
  1189  00FE75  62                 	db	98	;'b'
  1190  00FE76  65                 	db	101	;'e'
  1191  00FE77  65                 	db	101	;'e'
  1192  00FE78  6E                 	db	110	;'n'
  1193  00FE79  20                 	db	32
  1194  00FE7A  74                 	db	116	;'t'
  1195  00FE7B  69                 	db	105	;'i'
  1196  00FE7C  6D                 	db	109	;'m'
  1197  00FE7D  65                 	db	101	;'e'
  1198  00FE7E  64                 	db	100	;'d'
  1199  00FE7F  2D                 	db	45
  1200  00FE80  6F                 	db	111	;'o'
  1201  00FE81  75                 	db	117	;'u'
  1202  00FE82  74                 	db	116	;'t'
  1203  00FE83  21                 	db	33
  1204  00FE84  21                 	db	33
  1205  00FE85  21                 	db	33
  1206  00FE86  0D                 	db	13
  1207  00FE87  0A                 	db	10
  1208  00FE88  00                 	db	0
  1209  00FE89                     STR_8:
  1210  00FE89  41                 	db	65	;'A'
  1211  00FE8A  54                 	db	84	;'T'
  1212  00FE8B  2B                 	db	43
  1213  00FE8C  53                 	db	83	;'S'
  1214  00FE8D  41                 	db	65	;'A'
  1215  00FE8E  50                 	db	80	;'P'
  1216  00FE8F  42                 	db	66	;'B'
  1217  00FE90  52                 	db	82	;'R'
  1218  00FE91  3D                 	db	61	;'='
  1219  00FE92  33                 	db	51	;'3'
  1220  00FE93  2C                 	db	44
  1221  00FE94  31                 	db	49	;'1'
  1222  00FE95  2C                 	db	44
  1223  00FE96  22                 	db	34
  1224  00FE97  43                 	db	67	;'C'
  1225  00FE98  6F                 	db	111	;'o'
  1226  00FE99  6E                 	db	110	;'n'
  1227  00FE9A  74                 	db	116	;'t'
  1228  00FE9B  79                 	db	121	;'y'
  1229  00FE9C  70                 	db	112	;'p'
  1230  00FE9D  65                 	db	101	;'e'
  1231  00FE9E  22                 	db	34
  1232  00FE9F  2C                 	db	44
  1233  00FEA0  22                 	db	34
  1234  00FEA1  47                 	db	71	;'G'
  1235  00FEA2  50                 	db	80	;'P'
  1236  00FEA3  52                 	db	82	;'R'
  1237  00FEA4  53                 	db	83	;'S'
  1238  00FEA5  22                 	db	34
  1239  00FEA6  0D                 	db	13
  1240  00FEA7  00                 	db	0
  1241  00FEA8                     STR_14:
  1242  00FEA8  41                 	db	65	;'A'
  1243  00FEA9  54                 	db	84	;'T'
  1244  00FEAA  2B                 	db	43
  1245  00FEAB  48                 	db	72	;'H'
  1246  00FEAC  54                 	db	84	;'T'
  1247  00FEAD  54                 	db	84	;'T'
  1248  00FEAE  50                 	db	80	;'P'
  1249  00FEAF  50                 	db	80	;'P'
  1250  00FEB0  41                 	db	65	;'A'
  1251  00FEB1  52                 	db	82	;'R'
  1252  00FEB2  41                 	db	65	;'A'
  1253  00FEB3  3D                 	db	61	;'='
  1254  00FEB4  22                 	db	34
  1255  00FEB5  43                 	db	67	;'C'
  1256  00FEB6  49                 	db	73	;'I'
  1257  00FEB7  44                 	db	68	;'D'
  1258  00FEB8  22                 	db	34
  1259  00FEB9  2C                 	db	44
  1260  00FEBA  31                 	db	49	;'1'
  1261  00FEBB  0D                 	db	13
  1262  00FEBC  00                 	db	0
  1263  00FEBD                     STR_9:
  1264  00FEBD  41                 	db	65	;'A'
  1265  00FEBE  54                 	db	84	;'T'
  1266  00FEBF  2B                 	db	43
  1267  00FEC0  53                 	db	83	;'S'
  1268  00FEC1  41                 	db	65	;'A'
  1269  00FEC2  50                 	db	80	;'P'
  1270  00FEC3  42                 	db	66	;'B'
  1271  00FEC4  52                 	db	82	;'R'
  1272  00FEC5  3D                 	db	61	;'='
  1273  00FEC6  33                 	db	51	;'3'
  1274  00FEC7  2C                 	db	44
  1275  00FEC8  31                 	db	49	;'1'
  1276  00FEC9  2C                 	db	44
  1277  00FECA  22                 	db	34
  1278  00FECB  41                 	db	65	;'A'
  1279  00FECC  50                 	db	80	;'P'
  1280  00FECD  4E                 	db	78	;'N'
  1281  00FECE  22                 	db	34
  1282  00FECF  2C                 	db	44
  1283  00FED0  22                 	db	34
  1284  00FED1  00                 	db	0
  1285  00FED2                     STR_23:
  1286  00FED2  46                 	db	70	;'F'
  1287  00FED3  72                 	db	114	;'r'
  1288  00FED4  61                 	db	97	;'a'
  1289  00FED5  6D                 	db	109	;'m'
  1290  00FED6  65                 	db	101	;'e'
  1291  00FED7  77                 	db	119	;'w'
  1292  00FED8  6F                 	db	111	;'o'
  1293  00FED9  72                 	db	114	;'r'
  1294  00FEDA  6B                 	db	107	;'k'
  1295  00FEDB  20                 	db	32
  1296  00FEDC  56                 	db	86	;'V'
  1297  00FEDD  65                 	db	101	;'e'
  1298  00FEDE  72                 	db	114	;'r'
  1299  00FEDF  73                 	db	115	;'s'
  1300  00FEE0  69                 	db	105	;'i'
  1301  00FEE1  6F                 	db	111	;'o'
  1302  00FEE2  6E                 	db	110	;'n'
  1303  00FEE3  3A                 	db	58	;':'
  1304  00FEE4  20                 	db	32
  1305  00FEE5  00                 	db	0
  1306  00FEE6                     STR_15:
  1307  00FEE6  41                 	db	65	;'A'
  1308  00FEE7  54                 	db	84	;'T'
  1309  00FEE8  2B                 	db	43
  1310  00FEE9  48                 	db	72	;'H'
  1311  00FEEA  54                 	db	84	;'T'
  1312  00FEEB  54                 	db	84	;'T'
  1313  00FEEC  50                 	db	80	;'P'
  1314  00FEED  50                 	db	80	;'P'
  1315  00FEEE  41                 	db	65	;'A'
  1316  00FEEF  52                 	db	82	;'R'
  1317  00FEF0  41                 	db	65	;'A'
  1318  00FEF1  3D                 	db	61	;'='
  1319  00FEF2  22                 	db	34
  1320  00FEF3  55                 	db	85	;'U'
  1321  00FEF4  52                 	db	82	;'R'
  1322  00FEF5  4C                 	db	76	;'L'
  1323  00FEF6  22                 	db	34
  1324  00FEF7  2C                 	db	44
  1325  00FEF8  22                 	db	34
  1326  00FEF9  00                 	db	0
  1327  00FEFA                     STR_31:
  1328  00FEFA  41                 	db	65	;'A'
  1329  00FEFB  54                 	db	84	;'T'
  1330  00FEFC  2B                 	db	43
  1331  00FEFD  43                 	db	67	;'C'
  1332  00FEFE  4D                 	db	77	;'M'
  1333  00FEFF  47                 	db	71	;'G'
  1334  00FF00  44                 	db	68	;'D'
  1335  00FF01  41                 	db	65	;'A'
  1336  00FF02  3D                 	db	61	;'='
  1337  00FF03  44                 	db	68	;'D'
  1338  00FF04  45                 	db	69	;'E'
  1339  00FF05  4C                 	db	76	;'L'
  1340  00FF06  20                 	db	32
  1341  00FF07  41                 	db	65	;'A'
  1342  00FF08  4C                 	db	76	;'L'
  1343  00FF09  4C                 	db	76	;'L'
  1344  00FF0A  0D                 	db	13
  1345  00FF0B  0A                 	db	10
  1346  00FF0C  00                 	db	0
  1347  00FF0D                     STR_27:
  1348  00FF0D  42                 	db	66	;'B'
  1349  00FF0E  75                 	db	117	;'u'
  1350  00FF0F  69                 	db	105	;'i'
  1351  00FF10  6C                 	db	108	;'l'
  1352  00FF11  64                 	db	100	;'d'
  1353  00FF12  20                 	db	32
  1354  00FF13  44                 	db	68	;'D'
  1355  00FF14  61                 	db	97	;'a'
  1356  00FF15  74                 	db	116	;'t'
  1357  00FF16  65                 	db	101	;'e'
  1358  00FF17  3A                 	db	58	;':'
  1359  00FF18  20                 	db	32
  1360  00FF19  25                 	db	37
  1361  00FF1A  73                 	db	115	;'s'
  1362  00FF1B  0D                 	db	13
  1363  00FF1C  0A                 	db	10
  1364  00FF1D  00                 	db	0
  1365  00FF1E                     STR_16:
  1366  00FF1E  41                 	db	65	;'A'
  1367  00FF1F  54                 	db	84	;'T'
  1368  00FF20  2B                 	db	43
  1369  00FF21  48                 	db	72	;'H'
  1370  00FF22  54                 	db	84	;'T'
  1371  00FF23  54                 	db	84	;'T'
  1372  00FF24  50                 	db	80	;'P'
  1373  00FF25  41                 	db	65	;'A'
  1374  00FF26  43                 	db	67	;'C'
  1375  00FF27  54                 	db	84	;'T'
  1376  00FF28  49                 	db	73	;'I'
  1377  00FF29  4F                 	db	79	;'O'
  1378  00FF2A  4E                 	db	78	;'N'
  1379  00FF2B  3D                 	db	61	;'='
  1380  00FF2C  30                 	db	48	;'0'
  1381  00FF2D  0D                 	db	13
  1382  00FF2E  00                 	db	0
  1383  00FF2F                     STR_29:
  1384  00FF2F  41                 	db	65	;'A'
  1385  00FF30  54                 	db	84	;'T'
  1386  00FF31  2B                 	db	43
  1387  00FF32  43                 	db	67	;'C'
  1388  00FF33  4D                 	db	77	;'M'
  1389  00FF34  47                 	db	71	;'G'
  1390  00FF35  44                 	db	68	;'D'
  1391  00FF36  3D                 	db	61	;'='
  1392  00FF37  31                 	db	49	;'1'
  1393  00FF38  2C                 	db	44
  1394  00FF39  30                 	db	48	;'0'
  1395  00FF3A  0D                 	db	13
  1396  00FF3B  0A                 	db	10
  1397  00FF3C  00                 	db	0
  1398  00FF3D  41                 	db	65	;'A'
  1399  00FF3E  54                 	db	84	;'T'
  1400  00FF3F  2B                 	db	43
  1401  00FF40  48                 	db	72	;'H'
  1402  00FF41  54                 	db	84	;'T'
  1403  00FF42  54                 	db	84	;'T'
  1404  00FF43  50                 	db	80	;'P'
  1405  00FF44  53                 	db	83	;'S'
  1406  00FF45  53                 	db	83	;'S'
  1407  00FF46  4C                 	db	76	;'L'
  1408  00FF47  3D                 	db	61	;'='
  1409  00FF48  30                 	db	48	;'0'
  1410  00FF49  0D                 	db	13
  1411  00FF4A  00                 	db	0
  1412  00FF4B                     STR_10:
  1413  00FF4B  41                 	db	65	;'A'
  1414  00FF4C  54                 	db	84	;'T'
  1415  00FF4D  2B                 	db	43
  1416  00FF4E  53                 	db	83	;'S'
  1417  00FF4F  41                 	db	65	;'A'
  1418  00FF50  50                 	db	80	;'P'
  1419  00FF51  42                 	db	66	;'B'
  1420  00FF52  52                 	db	82	;'R'
  1421  00FF53  3D                 	db	61	;'='
  1422  00FF54  31                 	db	49	;'1'
  1423  00FF55  2C                 	db	44
  1424  00FF56  31                 	db	49	;'1'
  1425  00FF57  0D                 	db	13
  1426  00FF58  00                 	db	0
  1427  00FF59                     STR_11:
  1428  00FF59  41                 	db	65	;'A'
  1429  00FF5A  54                 	db	84	;'T'
  1430  00FF5B  2B                 	db	43
  1431  00FF5C  53                 	db	83	;'S'
  1432  00FF5D  41                 	db	65	;'A'
  1433  00FF5E  50                 	db	80	;'P'
  1434  00FF5F  42                 	db	66	;'B'
  1435  00FF60  52                 	db	82	;'R'
  1436  00FF61  3D                 	db	61	;'='
  1437  00FF62  32                 	db	50	;'2'
  1438  00FF63  2C                 	db	44
  1439  00FF64  31                 	db	49	;'1'
  1440  00FF65  0D                 	db	13
  1441  00FF66  00                 	db	0
  1442  00FF67                     STR_13:
  1443  00FF67  41                 	db	65	;'A'
  1444  00FF68  54                 	db	84	;'T'
  1445  00FF69  2B                 	db	43
  1446  00FF6A  48                 	db	72	;'H'
  1447  00FF6B  54                 	db	84	;'T'
  1448  00FF6C  54                 	db	84	;'T'
  1449  00FF6D  50                 	db	80	;'P'
  1450  00FF6E  53                 	db	83	;'S'
  1451  00FF6F  53                 	db	83	;'S'
  1452  00FF70  4C                 	db	76	;'L'
  1453  00FF71  3D                 	db	61	;'='
  1454  00FF72  31                 	db	49	;'1'
  1455  00FF73  0D                 	db	13
  1456  00FF74  00                 	db	0
  1457  00FF75                     STR_2:
  1458  00FF75  41                 	db	65	;'A'
  1459  00FF76  54                 	db	84	;'T'
  1460  00FF77  2B                 	db	43
  1461  00FF78  49                 	db	73	;'I'
  1462  00FF79  50                 	db	80	;'P'
  1463  00FF7A  52                 	db	82	;'R'
  1464  00FF7B  3D                 	db	61	;'='
  1465  00FF7C  39                 	db	57	;'9'
  1466  00FF7D  36                 	db	54	;'6'
  1467  00FF7E  30                 	db	48	;'0'
  1468  00FF7F  30                 	db	48	;'0'
  1469  00FF80  0D                 	db	13
  1470  00FF81  0A                 	db	10
  1471  00FF82  00                 	db	0
  1472  00FF83                     STR_17:
  1473  00FF83  41                 	db	65	;'A'
  1474  00FF84  54                 	db	84	;'T'
  1475  00FF85  2B                 	db	43
  1476  00FF86  48                 	db	72	;'H'
  1477  00FF87  54                 	db	84	;'T'
  1478  00FF88  54                 	db	84	;'T'
  1479  00FF89  50                 	db	80	;'P'
  1480  00FF8A  52                 	db	82	;'R'
  1481  00FF8B  45                 	db	69	;'E'
  1482  00FF8C  41                 	db	65	;'A'
  1483  00FF8D  44                 	db	68	;'D'
  1484  00FF8E  0D                 	db	13
  1485  00FF8F  00                 	db	0
  1486  00FF90                     STR_18:
  1487  00FF90  41                 	db	65	;'A'
  1488  00FF91  54                 	db	84	;'T'
  1489  00FF92  2B                 	db	43
  1490  00FF93  48                 	db	72	;'H'
  1491  00FF94  54                 	db	84	;'T'
  1492  00FF95  54                 	db	84	;'T'
  1493  00FF96  50                 	db	80	;'P'
  1494  00FF97  54                 	db	84	;'T'
  1495  00FF98  45                 	db	69	;'E'
  1496  00FF99  52                 	db	82	;'R'
  1497  00FF9A  4D                 	db	77	;'M'
  1498  00FF9B  0D                 	db	13
  1499  00FF9C  00                 	db	0
  1500  00FF9D                     STR_12:
  1501  00FF9D  41                 	db	65	;'A'
  1502  00FF9E  54                 	db	84	;'T'
  1503  00FF9F  2B                 	db	43
  1504  00FFA0  48                 	db	72	;'H'
  1505  00FFA1  54                 	db	84	;'T'
  1506  00FFA2  54                 	db	84	;'T'
  1507  00FFA3  50                 	db	80	;'P'
  1508  00FFA4  49                 	db	73	;'I'
  1509  00FFA5  4E                 	db	78	;'N'
  1510  00FFA6  49                 	db	73	;'I'
  1511  00FFA7  54                 	db	84	;'T'
  1512  00FFA8  0D                 	db	13
  1513  00FFA9  00                 	db	0
  1514  00FFAA                     STR_32:
  1515  00FFAA  41                 	db	65	;'A'
  1516  00FFAB  54                 	db	84	;'T'
  1517  00FFAC  2B                 	db	43
  1518  00FFAD  43                 	db	67	;'C'
  1519  00FFAE  4C                 	db	76	;'L'
  1520  00FFAF  49                 	db	73	;'I'
  1521  00FFB0  50                 	db	80	;'P'
  1522  00FFB1  3D                 	db	61	;'='
  1523  00FFB2  31                 	db	49	;'1'
  1524  00FFB3  0D                 	db	13
  1525  00FFB4  0A                 	db	10
  1526  00FFB5  00                 	db	0
  1527  00FFB6                     STR_28:
  1528  00FFB6  4D                 	db	77	;'M'
  1529  00FFB7  61                 	db	97	;'a'
  1530  00FFB8  72                 	db	114	;'r'
  1531  00FFB9  20                 	db	32
  1532  00FFBA  32                 	db	50	;'2'
  1533  00FFBB  37                 	db	55	;'7'
  1534  00FFBC  20                 	db	32
  1535  00FFBD  32                 	db	50	;'2'
  1536  00FFBE  30                 	db	48	;'0'
  1537  00FFBF  32                 	db	50	;'2'
  1538  00FFC0  32                 	db	50	;'2'
  1539  00FFC1  00                 	db	0
  1540  00FFC2                     STR_4:
  1541  00FFC2  41                 	db	65	;'A'
  1542  00FFC3  54                 	db	84	;'T'
  1543  00FFC4  2B                 	db	43
  1544  00FFC5  43                 	db	67	;'C'
  1545  00FFC6  4D                 	db	77	;'M'
  1546  00FFC7  47                 	db	71	;'G'
  1547  00FFC8  52                 	db	82	;'R'
  1548  00FFC9  3D                 	db	61	;'='
  1549  00FFCA  31                 	db	49	;'1'
  1550  00FFCB  0D                 	db	13
  1551  00FFCC  0A                 	db	10
  1552  00FFCD  00                 	db	0
  1553  00FFCE                     STR_5:
  1554  00FFCE  41                 	db	65	;'A'
  1555  00FFCF  54                 	db	84	;'T'
  1556  00FFD0  2B                 	db	43
  1557  00FFD1  43                 	db	67	;'C'
  1558  00FFD2  4D                 	db	77	;'M'
  1559  00FFD3  47                 	db	71	;'G'
  1560  00FFD4  53                 	db	83	;'S'
  1561  00FFD5  3D                 	db	61	;'='
  1562  00FFD6  22                 	db	34
  1563  00FFD7  00                 	db	0
  1564  00FFD8                     STR_33:
  1565  00FFD8  28                 	db	40
  1566  00FFD9  6E                 	db	110	;'n'
  1567  00FFDA  75                 	db	117	;'u'
  1568  00FFDB  6C                 	db	108	;'l'
  1569  00FFDC  6C                 	db	108	;'l'
  1570  00FFDD  29                 	db	41
  1571  00FFDE  00                 	db	0
  1572  00FFDF                     STR_3:
  1573  00FFDF  41                 	db	65	;'A'
  1574  00FFE0  54                 	db	84	;'T'
  1575  00FFE1  45                 	db	69	;'E'
  1576  00FFE2  30                 	db	48	;'0'
  1577  00FFE3  0D                 	db	13
  1578  00FFE4  0A                 	db	10
  1579  00FFE5  00                 	db	0
  1580  00FFE6                     STR_1:
  1581  00FFE6  41                 	db	65	;'A'
  1582  00FFE7  54                 	db	84	;'T'
  1583  00FFE8  0D                 	db	13
  1584  00FFE9  0A                 	db	10
  1585  00FFEA  00                 	db	0
  1586  00FFEB  41                 	db	65	;'A'
  1587  00FFEC  54                 	db	84	;'T'
  1588  00FFED  41                 	db	65	;'A'
  1589  00FFEE  0D                 	db	13
  1590  00FFEF  00                 	db	0
  1591  00FFF0                     STR_6:
  1592  00FFF0  41                 	db	65	;'A'
  1593  00FFF1  54                 	db	84	;'T'
  1594  00FFF2  48                 	db	72	;'H'
  1595  00FFF3  0D                 	db	13
  1596  00FFF4  00                 	db	0
  1597  00FFF5                     STR_24:
  1598  00FFF5  2E                 	db	46
  1599  00FFF6  00                 	db	0
  1600  0000                     
  1601                           ; #config settings
  1602  00FFF7  00                 	db	0	; dummy byte at the end
  1603  0000                     
  1604                           	psect	cinit
  1605  00246E                     __pcinit:
  1606                           	opt stack 0
  1607  00246E                     start_initialization:
  1608                           	opt stack 0
  1609  00246E                     __initialization:
  1610                           	opt stack 0
  1611                           
  1612                           ; Initialize objects allocated to BANK5 (80 bytes)
  1613                           ; load TBLPTR registers with __pidataBANK5
  1614  00246E  0E98               	movlw	low __pidataBANK5
  1615  002470  6EF6               	movwf	tblptrl,c
  1616  002472  0E5A               	movlw	high __pidataBANK5
  1617  002474  6EF7               	movwf	tblptrh,c
  1618  002476  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1619  002478  6EF8               	movwf	tblptru,c
  1620  00247A  EE05  F086         	lfsr	0,__pdataBANK5
  1621  00247E  EE10 F050          	lfsr	1,80
  1622  002482                     copy_data0:
  1623  002482  0009               	tblrd		*+
  1624  002484  CFF5 FFEE          	movff	tablat,postinc0
  1625  002488  50E5               	movf	postdec1,w,c
  1626  00248A  50E1               	movf	fsr1l,w,c
  1627  00248C  E1FA               	bnz	copy_data0
  1628                           
  1629                           ; Initialize objects allocated to BANK3 (63 bytes)
  1630                           ; load TBLPTR registers with __pidataBANK3
  1631  00248E  0EB4               	movlw	low __pidataBANK3
  1632  002490  6EF6               	movwf	tblptrl,c
  1633  002492  0E5F               	movlw	high __pidataBANK3
  1634  002494  6EF7               	movwf	tblptrh,c
  1635  002496  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1636  002498  6EF8               	movwf	tblptru,c
  1637  00249A  EE03  F0BC         	lfsr	0,__pdataBANK3
  1638  00249E  EE10 F03F          	lfsr	1,63
  1639  0024A2                     copy_data1:
  1640  0024A2  0009               	tblrd		*+
  1641  0024A4  CFF5 FFEE          	movff	tablat,postinc0
  1642  0024A8  50E5               	movf	postdec1,w,c
  1643  0024AA  50E1               	movf	fsr1l,w,c
  1644  0024AC  E1FA               	bnz	copy_data1
  1645                           
  1646                           ; Initialize objects allocated to BANK2 (13 bytes)
  1647                           ; load TBLPTR registers with __pidataBANK2
  1648  0024AE  0E6A               	movlw	low __pidataBANK2
  1649  0024B0  6EF6               	movwf	tblptrl,c
  1650  0024B2  0E68               	movlw	high __pidataBANK2
  1651  0024B4  6EF7               	movwf	tblptrh,c
  1652  0024B6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1653  0024B8  6EF8               	movwf	tblptru,c
  1654  0024BA  EE02  F0F3         	lfsr	0,__pdataBANK2
  1655  0024BE  EE10 F00D          	lfsr	1,13
  1656  0024C2                     copy_data2:
  1657  0024C2  0009               	tblrd		*+
  1658  0024C4  CFF5 FFEE          	movff	tablat,postinc0
  1659  0024C8  50E5               	movf	postdec1,w,c
  1660  0024CA  50E1               	movf	fsr1l,w,c
  1661  0024CC  E1FA               	bnz	copy_data2
  1662                           
  1663                           ; Initialize objects allocated to BANK1 (2 bytes)
  1664                           ; load TBLPTR registers with __pidataBANK1
  1665  0024CE  0EF4               	movlw	low __pidataBANK1
  1666  0024D0  6EF6               	movwf	tblptrl,c
  1667  0024D2  0E68               	movlw	high __pidataBANK1
  1668  0024D4  6EF7               	movwf	tblptrh,c
  1669  0024D6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1670  0024D8  6EF8               	movwf	tblptru,c
  1671  0024DA  0009               	tblrd		*+	;fetch initializer
  1672  0024DC  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1673  0024E0  0009               	tblrd		*+	;fetch initializer
  1674  0024E2  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1675                           
  1676                           ; Initialize objects allocated to BANK4 (23 bytes)
  1677                           ; load TBLPTR registers with __pidataBANK4
  1678  0024E6  0E52               	movlw	low __pidataBANK4
  1679  0024E8  6EF6               	movwf	tblptrl,c
  1680  0024EA  0E67               	movlw	high __pidataBANK4
  1681  0024EC  6EF7               	movwf	tblptrh,c
  1682  0024EE  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1683  0024F0  6EF8               	movwf	tblptru,c
  1684  0024F2  EE04  F0D6         	lfsr	0,__pdataBANK4
  1685  0024F6  EE10 F017          	lfsr	1,23
  1686  0024FA                     copy_data3:
  1687  0024FA  0009               	tblrd		*+
  1688  0024FC  CFF5 FFEE          	movff	tablat,postinc0
  1689  002500  50E5               	movf	postdec1,w,c
  1690  002502  50E1               	movf	fsr1l,w,c
  1691  002504  E1FA               	bnz	copy_data3
  1692                           
  1693                           ; Initialize objects allocated to BANK0 (2 bytes)
  1694                           ; load TBLPTR registers with __pidataBANK0
  1695  002506  0EF2               	movlw	low __pidataBANK0
  1696  002508  6EF6               	movwf	tblptrl,c
  1697  00250A  0E68               	movlw	high __pidataBANK0
  1698  00250C  6EF7               	movwf	tblptrh,c
  1699  00250E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1700  002510  6EF8               	movwf	tblptru,c
  1701  002512  0009               	tblrd		*+	;fetch initializer
  1702  002514  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1703  002518  0009               	tblrd		*+	;fetch initializer
  1704  00251A  CFF5 F0E2          	movff	tablat,__pdataBANK0+1
  1705                           
  1706                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1707  00251E  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1708  002522  EE13 F020          	lfsr	1,800
  1709  002526                     clear_0:
  1710  002526  6AEE               	clrf	postinc0,c
  1711  002528  50E5               	movf	postdec1,w,c
  1712  00252A  50E1               	movf	fsr1l,w,c
  1713  00252C  E1FC               	bnz	clear_0
  1714  00252E  50E2               	movf	fsr1h,w,c
  1715  002530  E1FA               	bnz	clear_0
  1716                           
  1717                           ; Clear objects allocated to BANK9 (200 bytes)
  1718  002532  EE09  F000         	lfsr	0,__pbssBANK9
  1719  002536  0EC8               	movlw	200
  1720  002538                     clear_1:
  1721  002538  6AEE               	clrf	postinc0,c
  1722  00253A  06E8               	decf	wreg,f,c
  1723  00253C  E1FD               	bnz	clear_1
  1724                           
  1725                           ; Clear objects allocated to BANK8 (250 bytes)
  1726  00253E  EE08  F000         	lfsr	0,__pbssBANK8
  1727  002542  0EFA               	movlw	250
  1728  002544                     clear_2:
  1729  002544  6AEE               	clrf	postinc0,c
  1730  002546  06E8               	decf	wreg,f,c
  1731  002548  E1FD               	bnz	clear_2
  1732                           
  1733                           ; Clear objects allocated to BANK7 (246 bytes)
  1734  00254A  EE07  F000         	lfsr	0,__pbssBANK7
  1735  00254E  0EF6               	movlw	246
  1736  002550                     clear_3:
  1737  002550  6AEE               	clrf	postinc0,c
  1738  002552  06E8               	decf	wreg,f,c
  1739  002554  E1FD               	bnz	clear_3
  1740                           
  1741                           ; Clear objects allocated to BANK6 (220 bytes)
  1742  002556  EE06  F000         	lfsr	0,__pbssBANK6
  1743  00255A  0EDC               	movlw	220
  1744  00255C                     clear_4:
  1745  00255C  6AEE               	clrf	postinc0,c
  1746  00255E  06E8               	decf	wreg,f,c
  1747  002560  E1FD               	bnz	clear_4
  1748                           
  1749                           ; Clear objects allocated to BANK5 (134 bytes)
  1750  002562  EE05  F000         	lfsr	0,__pbssBANK5
  1751  002566  0E86               	movlw	134
  1752  002568                     clear_5:
  1753  002568  6AEE               	clrf	postinc0,c
  1754  00256A  06E8               	decf	wreg,f,c
  1755  00256C  E1FD               	bnz	clear_5
  1756                           
  1757                           ; Clear objects allocated to BANK3 (188 bytes)
  1758  00256E  EE03  F000         	lfsr	0,__pbssBANK3
  1759  002572  0EBC               	movlw	188
  1760  002574                     clear_6:
  1761  002574  6AEE               	clrf	postinc0,c
  1762  002576  06E8               	decf	wreg,f,c
  1763  002578  E1FD               	bnz	clear_6
  1764                           
  1765                           ; Clear objects allocated to BANK2 (43 bytes)
  1766  00257A  EE02  F0C8         	lfsr	0,__pbssBANK2
  1767  00257E  0E2B               	movlw	43
  1768  002580                     clear_7:
  1769  002580  6AEE               	clrf	postinc0,c
  1770  002582  06E8               	decf	wreg,f,c
  1771  002584  E1FD               	bnz	clear_7
  1772                           
  1773                           ; Clear objects allocated to BANK1 (53 bytes)
  1774  002586  EE01  F0C9         	lfsr	0,__pbssBANK1
  1775  00258A  0E35               	movlw	53
  1776  00258C                     clear_8:
  1777  00258C  6AEE               	clrf	postinc0,c
  1778  00258E  06E8               	decf	wreg,f,c
  1779  002590  E1FD               	bnz	clear_8
  1780                           
  1781                           ; Clear objects allocated to BANK4 (150 bytes)
  1782  002592  EE04  F040         	lfsr	0,__pbssBANK4
  1783  002596  0E96               	movlw	150
  1784  002598                     clear_9:
  1785  002598  6AEE               	clrf	postinc0,c
  1786  00259A  06E8               	decf	wreg,f,c
  1787  00259C  E1FD               	bnz	clear_9
  1788                           
  1789                           ; Clear objects allocated to BANK0 (49 bytes)
  1790  00259E  EE00  F0B0         	lfsr	0,__pbssBANK0
  1791  0025A2  0E31               	movlw	49
  1792  0025A4                     clear_10:
  1793  0025A4  6AEE               	clrf	postinc0,c
  1794  0025A6  06E8               	decf	wreg,f,c
  1795  0025A8  E1FD               	bnz	clear_10
  1796                           
  1797                           ; Clear objects allocated to COMRAM (31 bytes)
  1798  0025AA  EE00  F023         	lfsr	0,__pbssCOMRAM
  1799  0025AE  0E1F               	movlw	31
  1800  0025B0                     clear_11:
  1801  0025B0  6AEE               	clrf	postinc0,c
  1802  0025B2  06E8               	decf	wreg,f,c
  1803  0025B4  E1FD               	bnz	clear_11
  1804  0025B6                     end_of_initialization:
  1805                           	opt stack 0
  1806  0025B6                     __end_of__initialization:
  1807                           	opt stack 0
  1808  0025B6  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1809  0025B8  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1810  0025BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1811  0025BC  6EF8               	movwf	tblptru,c
  1812  0025BE  0100               	movlb	0
  1813  0025C0  EF3C  F034         	goto	_main	;jump to C main() function
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1h	equ	0xFE2
  1822                           fsr1l	equ	0xFE1
  1823                           
  1824                           	psect	bssCOMRAM
  1825  000023                     __pbssCOMRAM:
  1826                           	opt stack 0
  1827  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1828                           	opt stack 0
  1829  000023                     	ds	2
  1830  000025                     _USBDeferOUTDataStagePackets:
  1831                           	opt stack 0
  1832  000025                     	ds	1
  1833  000026                     _USBDeferINDataStagePackets:
  1834                           	opt stack 0
  1835  000026                     	ds	1
  1836  000027                     _USBStatusStageEnabledFlag2:
  1837                           	opt stack 0
  1838  000027                     	ds	1
  1839  000028                     _USBStatusStageEnabledFlag1:
  1840                           	opt stack 0
  1841  000028                     	ds	1
  1842  000029                     CheckModem@CheckMdmSts:
  1843                           	opt stack 0
  1844  000029                     	ds	1
  1845  00002A                     _ComChecCompleted:
  1846                           	opt stack 0
  1847  00002A                     	ds	1
  1848  00002B                     Uart_Uart1RxIsr@UartRxData:
  1849                           	opt stack 0
  1850  00002B                     	ds	1
  1851  00002C                     Uart_MdmGsmGprsReadService@RxState:
  1852                           	opt stack 0
  1853  00002C                     	ds	1
  1854  00002D                     MdmCntSm@MdmCntState:
  1855                           	opt stack 0
  1856  00002D                     	ds	1
  1857  00002E                     RiSm@MdmDrvState:
  1858                           	opt stack 0
  1859  00002E                     	ds	1
  1860  00002F                     _Mmd_RingIndicator:
  1861                           	opt stack 0
  1862  00002F                     	ds	1
  1863  000030                     I2c_ReadData@ReadStatus:
  1864                           	opt stack 0
  1865  000030                     	ds	1
  1866  000031                     I2c_ReadData@TentativeCounter:
  1867                           	opt stack 0
  1868  000031                     	ds	1
  1869  000032                     I2c_ReadData@DataCounter:
  1870                           	opt stack 0
  1871  000032                     	ds	1
  1872  000033                     I2c_ReadData@I2cReadState:
  1873                           	opt stack 0
  1874  000033                     	ds	1
  1875  000034                     I2c_WriteData@WriteStatus:
  1876                           	opt stack 0
  1877  000034                     	ds	1
  1878  000035                     I2c_WriteData@TentativeCounter:
  1879                           	opt stack 0
  1880  000035                     	ds	1
  1881  000036                     I2c_WriteData@I2cNextState:
  1882                           	opt stack 0
  1883  000036                     	ds	1
  1884  000037                     I2c_WriteData@I2cWriteState:
  1885                           	opt stack 0
  1886  000037                     	ds	1
  1887  000038                     _memorizedNumbersCount:
  1888                           	opt stack 0
  1889  000038                     	ds	1
  1890  000039                     _MdmStsReady:
  1891                           	opt stack 0
  1892  000039                     	ds	1
  1893  00003A                     _NewStringMdmTerminal:
  1894                           	opt stack 0
  1895  00003A                     	ds	1
  1896  00003B                     _NewMdmEvtParserRequest:
  1897                           	opt stack 0
  1898  00003B                     	ds	1
  1899  00003C                     _NewStringReceived:
  1900                           	opt stack 0
  1901  00003C                     	ds	1
  1902  00003D                     _MdmResetRequest:
  1903                           	opt stack 0
  1904  00003D                     	ds	1
  1905  00003E                     _CallClosedEvent:
  1906                           	opt stack 0
  1907  00003E                     	ds	1
  1908  00003F                     _IncomingCallEvent:
  1909                           	opt stack 0
  1910  00003F                     	ds	1
  1911  000040                     _NewSmsEvent:
  1912                           	opt stack 0
  1913  000040                     	ds	1
  1914  000041                     _ActivateRiDetection:
  1915                           	opt stack 0
  1916  000041                     	ds	1
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1h	equ	0xFE2
  1925                           fsr1l	equ	0xFE1
  1926                           
  1927                           	psect	bssBANK0
  1928  0000B0                     __pbssBANK0:
  1929                           	opt stack 0
  1930  0000B0                     _inPipes:
  1931                           	opt stack 0
  1932  0000B0                     	ds	6
  1933  0000B6                     _pBDTEntryIn:
  1934                           	opt stack 0
  1935  0000B6                     	ds	6
  1936  0000BC                     _CDCDataOutHandle:
  1937                           	opt stack 0
  1938  0000BC                     	ds	2
  1939  0000BE                     _pBDTEntryEP0OutNext:
  1940                           	opt stack 0
  1941  0000BE                     	ds	2
  1942  0000C0                     _pBDTEntryEP0OutCurrent:
  1943                           	opt stack 0
  1944  0000C0                     	ds	2
  1945  0000C2                     _RxLen:
  1946                           	opt stack 0
  1947  0000C2                     	ds	2
  1948  0000C4                     _cdc_tx_len:
  1949                           	opt stack 0
  1950  0000C4                     	ds	1
  1951  0000C5                     _cdc_trf_state:
  1952                           	opt stack 0
  1953  0000C5                     	ds	1
  1954  0000C6                     _cdc_rx_len:
  1955                           	opt stack 0
  1956  0000C6                     	ds	1
  1957  0000C7                     _USBDeferStatusStagePacket:
  1958                           	opt stack 0
  1959  0000C7                     	ds	1
  1960  0000C8                     _USBStatusStageTimeoutCounter:
  1961                           	opt stack 0
  1962  0000C8                     	ds	1
  1963  0000C9                     _endpoint_number:
  1964                           	opt stack 0
  1965  0000C9                     	ds	1
  1966  0000CA                     _controlTransferState:
  1967                           	opt stack 0
  1968  0000CA                     	ds	1
  1969  0000CB                     _shortPacketStatus:
  1970                           	opt stack 0
  1971  0000CB                     	ds	1
  1972  0000CC                     _USBDeviceState:
  1973                           	opt stack 0
  1974  0000CC                     	ds	1
  1975  0000CD                     _I2cComSts:
  1976                           	opt stack 0
  1977  0000CD                     	ds	1
  1978  0000CE                     HttpGetMethod@GetMethodNextState:
  1979                           	opt stack 0
  1980  0000CE                     	ds	1
  1981  0000CF                     InitGprsNetwork@GprsNetInitNextState:
  1982                           	opt stack 0
  1983  0000CF                     	ds	1
  1984  0000D0                     _MdmStatus:
  1985                           	opt stack 0
  1986  0000D0                     	ds	1
  1987  0000D1                     _PhoneNumbLen:
  1988                           	opt stack 0
  1989  0000D1                     	ds	1
  1990  0000D2                     _SmsLen:
  1991                           	opt stack 0
  1992  0000D2                     	ds	1
  1993  0000D3                     _SystemState:
  1994                           	opt stack 0
  1995  0000D3                     	ds	1
  1996  0000D4                     _USTATcopy:
  1997                           	opt stack 0
  1998  0000D4                     	ds	1
  1999  0000D5                     _USBActiveConfiguration:
  2000                           	opt stack 0
  2001  0000D5                     	ds	1
  2002  0000D6                     _I2cReadDataEvt:
  2003                           	opt stack 0
  2004  0000D6                     	ds	1
  2005  0000D7                     _I2cWriteDataEvt:
  2006                           	opt stack 0
  2007  0000D7                     	ds	1
  2008  0000D8                     _GetMethod:
  2009                           	opt stack 0
  2010  0000D8                     	ds	1
  2011  0000D9                     _InitNetwork:
  2012                           	opt stack 0
  2013  0000D9                     	ds	1
  2014  0000DA                     _SmsTxtReady:
  2015                           	opt stack 0
  2016  0000DA                     	ds	1
  2017  0000DB                     _GetSmsText:
  2018                           	opt stack 0
  2019  0000DB                     	ds	1
  2020  0000DC                     _SmsEvent:
  2021                           	opt stack 0
  2022  0000DC                     	ds	1
  2023  0000DD                     _ClipEvent:
  2024                           	opt stack 0
  2025  0000DD                     	ds	1
  2026  0000DE                     _RingEvent:
  2027                           	opt stack 0
  2028  0000DE                     	ds	1
  2029  0000DF                     _SendSmsEvent:
  2030                           	opt stack 0
  2031  0000DF                     	ds	1
  2032  0000E0                     _MdmOnOffPulseRequest:
  2033                           	opt stack 0
  2034  0000E0                     	ds	1
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postdec1	equ	0xFE5
  2042                           fsr1h	equ	0xFE2
  2043                           fsr1l	equ	0xFE1
  2044                           
  2045                           	psect	dataBANK0
  2046  0000E1                     __pdataBANK0:
  2047                           	opt stack 0
  2048  0000E1                     findEmptySpot@currentPosition:
  2049                           	opt stack 0
  2050  0000E1                     	ds	1
  2051  0000E2                     isNumberInMemory@currentPosition:
  2052                           	opt stack 0
  2053  0000E2                     	ds	1
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           postdec1	equ	0xFE5
  2061                           fsr1h	equ	0xFE2
  2062                           fsr1l	equ	0xFE1
  2063                           
  2064                           	psect	bssBANK1
  2065  0001C9                     __pbssBANK1:
  2066                           	opt stack 0
  2067  0001C9                     _outPipes:
  2068                           	opt stack 0
  2069  0001C9                     	ds	8
  2070  0001D1                     _CDCDataInHandle:
  2071                           	opt stack 0
  2072  0001D1                     	ds	2
  2073  0001D3                     initFsm@currentState:
  2074                           	opt stack 0
  2075  0001D3                     	ds	1
  2076  0001D4                     initEeprom@currentState:
  2077                           	opt stack 0
  2078  0001D4                     	ds	1
  2079  0001D5                     initGprsModem@currentState:
  2080                           	opt stack 0
  2081  0001D5                     	ds	1
  2082  0001D6                     MyApp_Task@currentState:
  2083                           	opt stack 0
  2084  0001D6                     	ds	1
  2085  0001D7                     	ds	1
  2086  0001D8                     	ds	1
  2087  0001D9                     	ds	1
  2088  0001DA                     	ds	1
  2089  0001DB                     	ds	1
  2090  0001DC                     GsmGprsTerminal@SMS:
  2091                           	opt stack 0
  2092  0001DC                     	ds	1
  2093  0001DD                     	ds	1
  2094  0001DE                     _control_signal_bitmap:
  2095                           	opt stack 0
  2096  0001DE                     	ds	1
  2097  0001DF                     _cdc_mem_type:
  2098                           	opt stack 0
  2099  0001DF                     	ds	1
  2100  0001E0                     _USBTicksSinceSuspendEnd:
  2101                           	opt stack 0
  2102  0001E0                     	ds	1
  2103  0001E1                     _BothEP0OutUOWNsSet:
  2104                           	opt stack 0
  2105  0001E1                     	ds	1
  2106  0001E2                     _USBBusIsSuspended:
  2107                           	opt stack 0
  2108  0001E2                     	ds	1
  2109  0001E3                     _RemoteWakeup:
  2110                           	opt stack 0
  2111  0001E3                     	ds	1
  2112  0001E4                     I2cSlv_QueryI2cData@Ret:
  2113                           	opt stack 0
  2114  0001E4                     	ds	1
  2115  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2116                           	opt stack 0
  2117  0001E5                     	ds	1
  2118  0001E6                     I2cSendMsgSm@I2cComState:
  2119                           	opt stack 0
  2120  0001E6                     	ds	1
  2121  0001E7                     _I2cBusStatus:
  2122                           	opt stack 0
  2123  0001E7                     	ds	1
  2124  0001E8                     HttpGetMethod@GetMOutSts:
  2125                           	opt stack 0
  2126  0001E8                     	ds	1
  2127  0001E9                     HttpGetMethod@GetMethodState:
  2128                           	opt stack 0
  2129  0001E9                     	ds	1
  2130  0001EA                     InitGprsNetwork@GprsNetInitState:
  2131                           	opt stack 0
  2132  0001EA                     	ds	1
  2133  0001EB                     _PostMethod:
  2134                           	opt stack 0
  2135  0001EB                     	ds	1
  2136  0001EC                     _HttpGetMethodSts:
  2137                           	opt stack 0
  2138  0001EC                     	ds	1
  2139  0001ED                     _GprsNetworkSts:
  2140                           	opt stack 0
  2141  0001ED                     	ds	1
  2142  0001EE                     _ApnLenLocal:
  2143                           	opt stack 0
  2144  0001EE                     	ds	1
  2145  0001EF                     SendSmsSm@SendSms_NextState:
  2146                           	opt stack 0
  2147  0001EF                     	ds	1
  2148  0001F0                     SendSmsSm@SendSms_State:
  2149                           	opt stack 0
  2150  0001F0                     	ds	1
  2151  0001F1                     GetSmsSm@GetSmsState:
  2152                           	opt stack 0
  2153  0001F1                     	ds	1
  2154  0001F2                     ConfigureModem@NextState:
  2155                           	opt stack 0
  2156  0001F2                     	ds	1
  2157  0001F3                     ConfigureModem@MdmConfigState:
  2158                           	opt stack 0
  2159  0001F3                     	ds	1
  2160  0001F4                     TurnOnModem@TurnOnMdmState:
  2161                           	opt stack 0
  2162  0001F4                     	ds	1
  2163  0001F5                     _AlarmEvent:
  2164                           	opt stack 0
  2165  0001F5                     	ds	1
  2166  0001F6                     _Led3OutSts:
  2167                           	opt stack 0
  2168  0001F6                     	ds	1
  2169  0001F7                     _Led3Sts:
  2170                           	opt stack 0
  2171  0001F7                     	ds	1
  2172  0001F8                     _Led2OutSts:
  2173                           	opt stack 0
  2174  0001F8                     	ds	1
  2175  0001F9                     _Led2Sts:
  2176                           	opt stack 0
  2177  0001F9                     	ds	1
  2178  0001FA                     _Led1OutSts:
  2179                           	opt stack 0
  2180  0001FA                     	ds	1
  2181  0001FB                     _Led1Sts:
  2182                           	opt stack 0
  2183  0001FB                     	ds	1
  2184  0001FC                     _ReadAddress:
  2185                           	opt stack 0
  2186  0001FC                     	ds	1
  2187  0001FD                     I2cDummyTx@DummyBuffer:
  2188                           	opt stack 0
  2189  0001FD                     	ds	1
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           postinc0	equ	0xFEE
  2195                           wreg	equ	0xFE8
  2196                           postdec1	equ	0xFE5
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           
  2200                           	psect	dataBANK1
  2201  0001FE                     __pdataBANK1:
  2202                           	opt stack 0
  2203  0001FE                     _isMemoryEmpty:
  2204                           	opt stack 0
  2205  0001FE                     	ds	1
  2206  0001FF                     InitGprsNetwork@GprsInitSts:
  2207                           	opt stack 0
  2208  0001FF                     	ds	1
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	bssBANK2
  2220  0002C8                     __pbssBANK2:
  2221                           	opt stack 0
  2222  0002C8                     _pCDCDst:
  2223                           	opt stack 0
  2224  0002C8                     	ds	3
  2225  0002CB                     _pCDCSrc:
  2226                           	opt stack 0
  2227  0002CB                     	ds	3
  2228  0002CE                     _ep_data_out:
  2229                           	opt stack 0
  2230  0002CE                     	ds	3
  2231  0002D1                     _ep_data_in:
  2232                           	opt stack 0
  2233  0002D1                     	ds	3
  2234  0002D4                     _pDst:
  2235                           	opt stack 0
  2236  0002D4                     	ds	2
  2237  0002D6                     ConfigureModem@DelayValueMs:
  2238                           	opt stack 0
  2239  0002D6                     	ds	2
  2240  0002D8                     TurnOnModem@Counter:
  2241                           	opt stack 0
  2242  0002D8                     	ds	2
  2243  0002DA                     UpdateSchFlag@InterruptCounter:
  2244                           	opt stack 0
  2245  0002DA                     	ds	2
  2246  0002DC                     MdmCntSm@Counter:
  2247                           	opt stack 0
  2248  0002DC                     	ds	2
  2249  0002DE                     RiSm@Counter:
  2250                           	opt stack 0
  2251  0002DE                     	ds	2
  2252  0002E0                     _ExtInt1IsrCallback:
  2253                           	opt stack 0
  2254  0002E0                     	ds	2
  2255  0002E2                     _ExtInt0IsrCallback:
  2256                           	opt stack 0
  2257  0002E2                     	ds	2
  2258  0002E4                     _RtccIsrCallback:
  2259                           	opt stack 0
  2260  0002E4                     	ds	2
  2261  0002E6                     _Tmr4IsrCallback:
  2262                           	opt stack 0
  2263  0002E6                     	ds	2
  2264  0002E8                     _Tmr2IsrCallback:
  2265                           	opt stack 0
  2266  0002E8                     	ds	2
  2267  0002EA                     	ds	1
  2268  0002EB                     	ds	1
  2269  0002EC                     Term_MainSm@TermMainSmState:
  2270                           	opt stack 0
  2271  0002EC                     	ds	1
  2272  0002ED                     Terminal@FormatOption:
  2273                           	opt stack 0
  2274  0002ED                     	ds	1
  2275  0002EE                     Terminal@SlaveAddr:
  2276                           	opt stack 0
  2277  0002EE                     	ds	1
  2278  0002EF                     Terminal@PackageLen:
  2279                           	opt stack 0
  2280  0002EF                     	ds	1
  2281  0002F0                     Terminal@TermState:
  2282                           	opt stack 0
  2283  0002F0                     	ds	1
  2284  0002F1                     _USBAlternateInterface:
  2285                           	opt stack 0
  2286  0002F1                     	ds	2
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	dataBANK2
  2298  0002F3                     __pdataBANK2:
  2299                           	opt stack 0
  2300  0002F3                     Terminal@EchoOption:
  2301                           	opt stack 0
  2302  0002F3                     	ds	1
  2303  0002F4                     _MainSystemTimebaseFlag:
  2304                           	opt stack 0
  2305  0002F4                     	ds	1
  2306  0002F5                     _ConnTimeout:
  2307                           	opt stack 0
  2308  0002F5                     	ds	11
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	bssBANK3
  2320  000300                     __pbssBANK3:
  2321                           	opt stack 0
  2322  000300                     _Rtcm_RtccAlarm:
  2323                           	opt stack 0
  2324  000300                     	ds	6
  2325  000306                     _pBDTEntryOut:
  2326                           	opt stack 0
  2327  000306                     	ds	6
  2328  00030C                     _BaudRateGen:
  2329                           	opt stack 0
  2330  00030C                     	ds	4
  2331  000310                     _USB1msTickCount:
  2332                           	opt stack 0
  2333  000310                     	ds	4
  2334  000314                     _OsTmr_OsTickCounter:
  2335                           	opt stack 0
  2336  000314                     	ds	4
  2337  000318                     	ds	2
  2338  00031A                     _UsbMasterPhoneNumberLen:
  2339                           	opt stack 0
  2340  00031A                     	ds	2
  2341  00031C                     _ApnLocal:
  2342                           	opt stack 0
  2343  00031C                     	ds	2
  2344  00031E                     ConfigureModem@DelayCounter:
  2345                           	opt stack 0
  2346  00031E                     	ds	2
  2347  000320                     _UartConfig:
  2348                           	opt stack 0
  2349  000320                     	ds	21
  2350  000335                     _callerNumber:
  2351                           	opt stack 0
  2352  000335                     	ds	13
  2353  000342                     I2cSlv_QueryI2cData@TimeoutTimer:
  2354                           	opt stack 0
  2355  000342                     	ds	11
  2356  00034D                     _I2cConfig:
  2357                           	opt stack 0
  2358  00034D                     	ds	10
  2359  000357                     _Led3Blink:
  2360                           	opt stack 0
  2361  000357                     	ds	9
  2362  000360                     _Led2Blink:
  2363                           	opt stack 0
  2364  000360                     	ds	9
  2365  000369                     _Led1Blink:
  2366                           	opt stack 0
  2367  000369                     	ds	9
  2368  000372                     _dummy_encapsulated_cmd_response:
  2369                           	opt stack 0
  2370  000372                     	ds	8
  2371  00037A                     _line_coding:
  2372                           	opt stack 0
  2373  00037A                     	ds	7
  2374  000381                     _Led3Pulse:
  2375                           	opt stack 0
  2376  000381                     	ds	6
  2377  000387                     _Led2Pulse:
  2378                           	opt stack 0
  2379  000387                     	ds	6
  2380  00038D                     _Led1Pulse:
  2381                           	opt stack 0
  2382  00038D                     	ds	6
  2383  000393                     _I2cRxPacket:
  2384                           	opt stack 0
  2385  000393                     	ds	6
  2386  000399                     _memoryPreamble:
  2387                           	opt stack 0
  2388  000399                     	ds	5
  2389  00039E                     _I2cTxPacket:
  2390                           	opt stack 0
  2391  00039E                     	ds	5
  2392  0003A3                     _HttpGetDataLocal:
  2393                           	opt stack 0
  2394  0003A3                     	ds	5
  2395  0003A8                     Terminal@Addr:
  2396                           	opt stack 0
  2397  0003A8                     	ds	4
  2398  0003AC                     Terminal@Len:
  2399                           	opt stack 0
  2400  0003AC                     	ds	4
  2401  0003B0                     _AlCfg:
  2402                           	opt stack 0
  2403  0003B0                     	ds	4
  2404  0003B4                     _RtcConfig:
  2405                           	opt stack 0
  2406  0003B4                     	ds	4
  2407  0003B8                     _setupCallTicks:
  2408                           	opt stack 0
  2409  0003B8                     	ds	2
  2410  0003BA                     initGprsModem@modemCounter:
  2411                           	opt stack 0
  2412  0003BA                     	ds	2
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           
  2423                           	psect	dataBANK3
  2424  0003BC                     __pdataBANK3:
  2425                           	opt stack 0
  2426  0003BC                     ModemEvtParser@F9112:
  2427                           	opt stack 0
  2428  0003BC                     	ds	5
  2429  0003C1                     ModemEvtParser@F9110:
  2430                           	opt stack 0
  2431  0003C1                     	ds	5
  2432  0003C6                     ModemEvtParser@F9108:
  2433                           	opt stack 0
  2434  0003C6                     	ds	4
  2435  0003CA                     MyApp_Task@F9038:
  2436                           	opt stack 0
  2437  0003CA                     	ds	3
  2438  0003CD                     triggerRelay@F9027:
  2439                           	opt stack 0
  2440  0003CD                     	ds	2
  2441  0003CF                     Term_MainSm@TermDelay:
  2442                           	opt stack 0
  2443  0003CF                     	ds	11
  2444  0003DA                     _ConnWait:
  2445                           	opt stack 0
  2446  0003DA                     	ds	11
  2447  0003E5                     SendSmsSm@SwTimer:
  2448                           	opt stack 0
  2449  0003E5                     	ds	11
  2450  0003F0                     CheckModem@Timeout:
  2451                           	opt stack 0
  2452  0003F0                     	ds	11
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1h	equ	0xFE2
  2461                           fsr1l	equ	0xFE1
  2462                           
  2463                           	psect	bssBANK4
  2464  000440                     __pbssBANK4:
  2465                           	opt stack 0
  2466  000440                     _UsbMasterPhoneNumber:
  2467                           	opt stack 0
  2468  000440                     	ds	15
  2469  00044F                     	ds	10
  2470  000459                     _cdc_notice:
  2471                           	opt stack 0
  2472  000459                     	ds	10
  2473  000463                     _Rtcm_SystemDate:
  2474                           	opt stack 0
  2475  000463                     	ds	8
  2476  00046B                     Term_MainSm@Data:
  2477                           	opt stack 0
  2478  00046B                     	ds	50
  2479  00049D                     _smsText:
  2480                           	opt stack 0
  2481  00049D                     	ds	20
  2482  0004B1                     _EepromBuffer:
  2483                           	opt stack 0
  2484  0004B1                     	ds	15
  2485  0004C0                     Terminal@SwTimer:
  2486                           	opt stack 0
  2487  0004C0                     	ds	11
  2488  0004CB                     I2cSlv_QueryI2cData@QueryTimer:
  2489                           	opt stack 0
  2490  0004CB                     	ds	11
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           postdec1	equ	0xFE5
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           
  2501                           	psect	dataBANK4
  2502  0004D6                     __pdataBANK4:
  2503                           	opt stack 0
  2504  0004D6                     ModemEvtParser@F9114:
  2505                           	opt stack 0
  2506  0004D6                     	ds	10
  2507  0004E0                     MyApp_Task@receivedNumber:
  2508                           	opt stack 0
  2509  0004E0                     	ds	13
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postdec1	equ	0xFE5
  2517                           fsr1h	equ	0xFE2
  2518                           fsr1l	equ	0xFE1
  2519                           
  2520                           	psect	bssBANK5
  2521  000500                     __pbssBANK5:
  2522                           	opt stack 0
  2523  000500                     _cdc_data_rx:
  2524                           	opt stack 0
  2525  000500                     	ds	64
  2526  000540                     Terminal@TermRxBuffer:
  2527                           	opt stack 0
  2528  000540                     	ds	50
  2529  000572                     _PhoneNumber:
  2530                           	opt stack 0
  2531  000572                     	ds	20
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           
  2542                           	psect	dataBANK5
  2543  000586                     __pdataBANK5:
  2544                           	opt stack 0
  2545  000586                     _TaskTable:
  2546                           	opt stack 0
  2547  000586                     	ds	80
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec1	equ	0xFE5
  2555                           fsr1h	equ	0xFE2
  2556                           fsr1l	equ	0xFE1
  2557                           
  2558                           	psect	bssBANK6
  2559  000600                     __pbssBANK6:
  2560                           	opt stack 0
  2561  000600                     _OsAlarms:
  2562                           	opt stack 0
  2563  000600                     	ds	220
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1h	equ	0xFE2
  2572                           fsr1l	equ	0xFE1
  2573                           
  2574                           	psect	bssBANK7
  2575  000700                     __pbssBANK7:
  2576                           	opt stack 0
  2577  000700                     _Mdm_SmsRx:
  2578                           	opt stack 0
  2579  000700                     	ds	102
  2580  000766                     Terminal@Payload:
  2581                           	opt stack 0
  2582  000766                     	ds	80
  2583  0007B6                     _cdc_data_tx:
  2584                           	opt stack 0
  2585  0007B6                     	ds	64
  2586                           tblptru	equ	0xFF8
  2587                           tblptrh	equ	0xFF7
  2588                           tblptrl	equ	0xFF6
  2589                           tablat	equ	0xFF5
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           postdec1	equ	0xFE5
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           
  2596                           	psect	bssBANK8
  2597  000800                     __pbssBANK8:
  2598                           	opt stack 0
  2599  000800                     GsmGprsTerminal@UsbBuffer:
  2600                           	opt stack 0
  2601  000800                     	ds	200
  2602  0008C8                     _MessageText:
  2603                           	opt stack 0
  2604  0008C8                     	ds	50
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1h	equ	0xFE2
  2613                           fsr1l	equ	0xFE1
  2614                           
  2615                           	psect	bssBANK9
  2616  000900                     __pbssBANK9:
  2617                           	opt stack 0
  2618  000900                     GsmGprsTerminal@UartBuffer:
  2619                           	opt stack 0
  2620  000900                     	ds	200
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           postinc0	equ	0xFEE
  2626                           wreg	equ	0xFE8
  2627                           postdec1	equ	0xFE5
  2628                           fsr1h	equ	0xFE2
  2629                           fsr1l	equ	0xFE1
  2630                           
  2631                           	psect	bssBIGRAMl
  2632  000AC8                     __pbssBIGRAMl:
  2633                           	opt stack 0
  2634  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2635                           	opt stack 0
  2636  000AC8                     	ds	400
  2637  000C58                     _RxBuffer:
  2638                           	opt stack 0
  2639  000C58                     	ds	400
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           postdec1	equ	0xFE5
  2647                           fsr1h	equ	0xFE2
  2648                           fsr1l	equ	0xFE1
  2649                           
  2650                           	psect	cstackBANK10
  2651  000A00                     __pcstackBANK10:
  2652                           	opt stack 0
  2653  000A00                     Terminal@UsbRxBuffer:
  2654                           	opt stack 0
  2655                           
  2656                           ; 200 bytes @ 0x0
  2657  000A00                     	ds	200
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           postdec1	equ	0xFE5
  2665                           fsr1h	equ	0xFE2
  2666                           fsr1l	equ	0xFE1
  2667                           
  2668                           	psect	cstackBANK3
  2669  0003FB                     __pcstackBANK3:
  2670                           	opt stack 0
  2671  0003FB                     ??_InitializeTasks:
  2672  0003FB                     ??_ScheduleTasks:
  2673                           
  2674                           ; 1 bytes @ 0x0
  2675  0003FB                     	ds	2
  2676  0003FD                     InitializeTasks@ActiveTaskIndex:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0x2
  2680  0003FD                     	ds	2
  2681  0003FF                     ScheduleTasks@ActiveTaskIndex:
  2682                           	opt stack 0
  2683                           
  2684                           ; 1 bytes @ 0x4
  2685  0003FF                     	ds	1
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           fsr1h	equ	0xFE2
  2694                           fsr1l	equ	0xFE1
  2695                           
  2696                           	psect	cstackBANK2
  2697  000200                     __pcstackBANK2:
  2698                           	opt stack 0
  2699  000200                     Terminal@UsbTxBuffer:
  2700                           	opt stack 0
  2701                           
  2702                           ; 200 bytes @ 0x0
  2703  000200                     	ds	200
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           
  2714                           	psect	cstackBANK1
  2715  000100                     __pcstackBANK1:
  2716                           	opt stack 0
  2717  000100                     initEeprom@addressToRead:
  2718                           	opt stack 0
  2719  000100                     isNumberInMemory@phoneNumber:
  2720                           	opt stack 0
  2721  000100                     findEmptySpot@readBuffer:
  2722                           	opt stack 0
  2723  000100                     SendSmsSm@UartMessage:
  2724                           	opt stack 0
  2725  000100                     InitGprsNetwork@UartMessage:
  2726                           	opt stack 0
  2727  000100                     Terminal@TermTxBuffer:
  2728                           	opt stack 0
  2729  000100                     HttpGetMethod@UartMessage:
  2730                           	opt stack 0
  2731                           
  2732                           ; 200 bytes @ 0x0
  2733  000100                     	ds	1
  2734  000101                     initEeprom@memoryOpResult:
  2735                           	opt stack 0
  2736                           
  2737                           ; 1 bytes @ 0x1
  2738  000101                     	ds	1
  2739  000102                     initEeprom@isInitialized:
  2740                           	opt stack 0
  2741  000102                     isNumberInMemory@readBuffer:
  2742                           	opt stack 0
  2743                           
  2744                           ; 13 bytes @ 0x2
  2745  000102                     	ds	1
  2746  000103                     initFsm@isInitialized:
  2747                           	opt stack 0
  2748                           
  2749                           ; 1 bytes @ 0x3
  2750  000103                     	ds	10
  2751  00010D                     findEmptySpot@searchFailed:
  2752                           	opt stack 0
  2753                           
  2754                           ; 1 bytes @ 0xD
  2755  00010D                     	ds	1
  2756  00010E                     findEmptySpot@searchInProgress:
  2757                           	opt stack 0
  2758                           
  2759                           ; 1 bytes @ 0xE
  2760  00010E                     	ds	1
  2761  00010F                     isNumberInMemory@searchInProgress:
  2762                           	opt stack 0
  2763  00010F                     findEmptySpot@positionInMemory:
  2764                           	opt stack 0
  2765                           
  2766                           ; 1 bytes @ 0xF
  2767  00010F                     	ds	1
  2768  000110                     isNumberInMemory@searchFailed:
  2769                           	opt stack 0
  2770  000110                     findEmptySpot@memoryOpResult:
  2771                           	opt stack 0
  2772                           
  2773                           ; 1 bytes @ 0x10
  2774  000110                     	ds	1
  2775  000111                     isNumberInMemory@memoryOpResult:
  2776                           	opt stack 0
  2777                           
  2778                           ; 1 bytes @ 0x11
  2779  000111                     	ds	1
  2780  000112                     isNumberInMemory@positionInMemory:
  2781                           	opt stack 0
  2782                           
  2783                           ; 1 bytes @ 0x12
  2784  000112                     	ds	1
  2785  000113                     MyApp_Task@emptyNumber:
  2786                           	opt stack 0
  2787                           
  2788                           ; 13 bytes @ 0x13
  2789  000113                     	ds	13
  2790  000120                     MyApp_Task@cmpString:
  2791                           	opt stack 0
  2792                           
  2793                           ; 3 bytes @ 0x20
  2794  000120                     	ds	3
  2795  000123                     MyApp_Task@cmdAddNumber:
  2796                           	opt stack 0
  2797                           
  2798                           ; 4 bytes @ 0x23
  2799  000123                     	ds	4
  2800  000127                     MyApp_Task@memoryResult:
  2801                           	opt stack 0
  2802                           
  2803                           ; 1 bytes @ 0x27
  2804  000127                     	ds	1
  2805  000128                     MyApp_Task@numberInMemory:
  2806                           	opt stack 0
  2807                           
  2808                           ; 1 bytes @ 0x28
  2809  000128                     	ds	10
  2810  000132                     InitGprsNetwork@Index:
  2811                           	opt stack 0
  2812  000132                     Term_MainSm@FwkMajorStr:
  2813                           	opt stack 0
  2814                           
  2815                           ; 4 bytes @ 0x32
  2816  000132                     	ds	4
  2817  000136                     Term_MainSm@FwkMinorStr:
  2818                           	opt stack 0
  2819                           
  2820                           ; 4 bytes @ 0x36
  2821  000136                     	ds	4
  2822  00013A                     Term_MainSm@FwkBuildStr:
  2823                           	opt stack 0
  2824                           
  2825                           ; 4 bytes @ 0x3A
  2826  00013A                     	ds	142
  2827  0001C8                     HttpGetMethod@Index:
  2828                           	opt stack 0
  2829                           
  2830                           ; 1 bytes @ 0xC8
  2831  0001C8                     	ds	1
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           postdec1	equ	0xFE5
  2839                           fsr1h	equ	0xFE2
  2840                           fsr1l	equ	0xFE1
  2841                           
  2842                           	psect	cstackBANK0
  2843  000060                     __pcstackBANK0:
  2844                           	opt stack 0
  2845  000060                     
  2846                           ; 1 bytes @ 0x0
  2847  000060                     	ds	8
  2848  000068                     ??_LowPriorityIsr:
  2849                           
  2850                           ; 1 bytes @ 0x8
  2851  000068                     	ds	21
  2852  00007D                     ??_isdigit:
  2853  00007D                     ??_isspace:
  2854  00007D                     ??_isupper:
  2855  00007D                     ??_Rtcc_GetRtccValue:
  2856  00007D                     ??_UartTxBufferStatus:
  2857  00007D                     ??_USBStdGetDscHandler:
  2858  00007D                     ??_USBStdGetStatusHandler:
  2859  00007D                     ?_GetLastInteractionNumber:
  2860                           	opt stack 0
  2861  00007D                     ?_USBTransferOnePacket:
  2862                           	opt stack 0
  2863  00007D                     ?_strlen:
  2864                           	opt stack 0
  2865  00007D                     ?_sprintf:
  2866                           	opt stack 0
  2867  00007D                     ?_initPreamble:
  2868                           	opt stack 0
  2869  00007D                     ?___wmul:
  2870                           	opt stack 0
  2871  00007D                     ?___awdiv:
  2872                           	opt stack 0
  2873  00007D                     ?___awmod:
  2874                           	opt stack 0
  2875  00007D                     ?___lwmod:
  2876                           	opt stack 0
  2877  00007D                     ?_GetOsTickCounter:
  2878                           	opt stack 0
  2879  00007D                     ?___lmul:
  2880                           	opt stack 0
  2881  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2882                           	opt stack 0
  2883  00007D                     SetAckStatus@AckSts:
  2884                           	opt stack 0
  2885  00007D                     WriteByte@Byte:
  2886                           	opt stack 0
  2887  00007D                     ReadByte@Byte:
  2888                           	opt stack 0
  2889  00007D                     Mcu_SetWdgSts@WdgSts:
  2890                           	opt stack 0
  2891  00007D                     RtccIrqInit@Priority:
  2892                           	opt stack 0
  2893  00007D                     Rtcc_SetRtcStatus@Status:
  2894                           	opt stack 0
  2895  00007D                     TmrBInit@Prescaler:
  2896                           	opt stack 0
  2897  00007D                     Tmr_TmrBIrqSet@Priority:
  2898                           	opt stack 0
  2899  00007D                     Tmr_StartTmr@TmrNumb:
  2900                           	opt stack 0
  2901  00007D                     UartWriteByte@ByteToWrite:
  2902                           	opt stack 0
  2903  00007D                     USBTransferOnePacket@dir:
  2904                           	opt stack 0
  2905  00007D                     USBConfigureEndpoint@direction:
  2906                           	opt stack 0
  2907  00007D                     USBCtrlTrfTxService@byteToSend:
  2908                           	opt stack 0
  2909  00007D                     USBCtrlTrfRxService@i:
  2910                           	opt stack 0
  2911  00007D                     Led_SetLedStatus@LedSts:
  2912                           	opt stack 0
  2913  00007D                     toupper@c:
  2914                           	opt stack 0
  2915  00007D                     tolower@c:
  2916                           	opt stack 0
  2917  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2918                           	opt stack 0
  2919  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2920                           	opt stack 0
  2921  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2922                           	opt stack 0
  2923  00007D                     Uart_ClearRxBuffer@Index:
  2924                           	opt stack 0
  2925  00007D                     GenerateEvt@Event:
  2926                           	opt stack 0
  2927  00007D                     ReceiveEvt@Event:
  2928                           	opt stack 0
  2929  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2930                           	opt stack 0
  2931  00007D                     StringCompare@String1:
  2932                           	opt stack 0
  2933  00007D                     ClearBuffer@Buffer:
  2934                           	opt stack 0
  2935  00007D                     isNumberValid@phoneNumber:
  2936                           	opt stack 0
  2937  00007D                     sprintf@sp:
  2938                           	opt stack 0
  2939  00007D                     ___wmul@multiplier:
  2940                           	opt stack 0
  2941  00007D                     ___awdiv@dividend:
  2942                           	opt stack 0
  2943  00007D                     ___awmod@dividend:
  2944                           	opt stack 0
  2945  00007D                     ___lwmod@dividend:
  2946                           	opt stack 0
  2947  00007D                     memcpy@d1:
  2948                           	opt stack 0
  2949  00007D                     memset@p1:
  2950                           	opt stack 0
  2951  00007D                     strcat@to:
  2952                           	opt stack 0
  2953  00007D                     strcpy@to:
  2954                           	opt stack 0
  2955  00007D                     strlen@s:
  2956                           	opt stack 0
  2957  00007D                     ___lmul@multiplier:
  2958                           	opt stack 0
  2959                           
  2960                           ; 4 bytes @ 0x1D
  2961  00007D                     	ds	1
  2962  00007E                     ??_USBConfigureEndpoint:
  2963  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2964                           	opt stack 0
  2965  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2966                           	opt stack 0
  2967  00007E                     TmrBInit@Postscaler:
  2968                           	opt stack 0
  2969  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2970                           	opt stack 0
  2971  00007E                     UartWriteByte@Module:
  2972                           	opt stack 0
  2973  00007E                     UartTxBufferStatus@Module:
  2974                           	opt stack 0
  2975  00007E                     USBCtrlTrfRxService@byteToRead:
  2976                           	opt stack 0
  2977  00007E                     USBCtrlTrfInHandler@lastDTS:
  2978                           	opt stack 0
  2979  00007E                     Led_SetLedStatus@Led:
  2980                           	opt stack 0
  2981  00007E                     _isdigit$6366:
  2982                           	opt stack 0
  2983  00007E                     _isspace$6635:
  2984                           	opt stack 0
  2985  00007E                     _isupper$6638:
  2986                           	opt stack 0
  2987  00007E                     I2c_WriteData@WritePacket:
  2988                           	opt stack 0
  2989  00007E                     Rtcc_RtcConfig@RtcConfig:
  2990                           	opt stack 0
  2991  00007E                     USBTransferOnePacket@data:
  2992                           	opt stack 0
  2993  00007E                     USBStdGetStatusHandler@p:
  2994                           	opt stack 0
  2995                           
  2996                           ; 2 bytes @ 0x1E
  2997  00007E                     	ds	1
  2998  00007F                     ??_strlen:
  2999  00007F                     ??_Rtcc_AlarmConfig:
  3000  00007F                     ??_TmrBInit:
  3001  00007F                     Irq_InitIntController@IntPriorityEn:
  3002                           	opt stack 0
  3003  00007F                     Rtcc_GetRtccValue@RetValue:
  3004                           	opt stack 0
  3005  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3006                           	opt stack 0
  3007  00007F                     UartTxBufferStatus@TxBufferStatus:
  3008                           	opt stack 0
  3009  00007F                     GenerateEvt@EventStatus:
  3010                           	opt stack 0
  3011  00007F                     isdigit@c:
  3012                           	opt stack 0
  3013  00007F                     isspace@c:
  3014                           	opt stack 0
  3015  00007F                     isupper@c:
  3016                           	opt stack 0
  3017  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3018                           	opt stack 0
  3019  00007F                     StringCompare@String2:
  3020                           	opt stack 0
  3021  00007F                     ClearBuffer@Len:
  3022                           	opt stack 0
  3023  00007F                     sprintf@f:
  3024                           	opt stack 0
  3025  00007F                     ___wmul@multiplicand:
  3026                           	opt stack 0
  3027  00007F                     ___awdiv@divisor:
  3028                           	opt stack 0
  3029  00007F                     ___awmod@divisor:
  3030                           	opt stack 0
  3031  00007F                     ___lwmod@divisor:
  3032                           	opt stack 0
  3033  00007F                     memcpy@s1:
  3034                           	opt stack 0
  3035  00007F                     memset@c:
  3036                           	opt stack 0
  3037  00007F                     strcat@from:
  3038                           	opt stack 0
  3039  00007F                     strcpy@from:
  3040                           	opt stack 0
  3041                           
  3042                           ; 2 bytes @ 0x1F
  3043  00007F                     	ds	1
  3044  000080                     ??_isalpha:
  3045  000080                     ??_isxdigit:
  3046  000080                     ??_I2c_WriteData:
  3047  000080                     ??_Rtcc_RtcConfig:
  3048  000080                     Rtcc_GetRtccValue@RegValue:
  3049                           	opt stack 0
  3050  000080                     TmrBInit@TmrNumb:
  3051                           	opt stack 0
  3052  000080                     ReceiveEvt@EventStatus:
  3053                           	opt stack 0
  3054  000080                     USBTransferOnePacket@len:
  3055                           	opt stack 0
  3056  000080                     isNumberValid@isNumberOk:
  3057                           	opt stack 0
  3058  000080                     I2c_ReadData@ReadPacket:
  3059                           	opt stack 0
  3060  000080                     Uart_WriteConstString@ConstStringToWrite:
  3061                           	opt stack 0
  3062  000080                     Uart_WriteString@StringToWrite:
  3063                           	opt stack 0
  3064  000080                     Uart_WriteStringLen@StringToWrite:
  3065                           	opt stack 0
  3066  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3067                           	opt stack 0
  3068  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3069                           	opt stack 0
  3070                           
  3071                           ; 2 bytes @ 0x20
  3072  000080                     	ds	1
  3073  000081                     ?_GetElapsedTime:
  3074                           	opt stack 0
  3075  000081                     ?_Rtcm_GetRtccDate:
  3076                           	opt stack 0
  3077  000081                     Mdm_IsSmsReceived@Ret:
  3078                           	opt stack 0
  3079  000081                     Mdm_IsRinging@Ret:
  3080                           	opt stack 0
  3081  000081                     I2cSlv_I2cReadMsgSts@Result:
  3082                           	opt stack 0
  3083  000081                     USBTransferOnePacket@ep:
  3084                           	opt stack 0
  3085  000081                     Led_SetLedBlinkTime@Led:
  3086                           	opt stack 0
  3087  000081                     isNumberValid@i:
  3088                           	opt stack 0
  3089  000081                     ___awdiv@counter:
  3090                           	opt stack 0
  3091  000081                     ___awmod@counter:
  3092                           	opt stack 0
  3093  000081                     ___lwmod@counter:
  3094                           	opt stack 0
  3095  000081                     _isalpha$6632:
  3096                           	opt stack 0
  3097  000081                     _isxdigit$6642:
  3098                           	opt stack 0
  3099  000081                     OsTmr_StartTimer@Timer:
  3100                           	opt stack 0
  3101  000081                     StringCompare@Len:
  3102                           	opt stack 0
  3103  000081                     ClearBuffer@Index:
  3104                           	opt stack 0
  3105  000081                     ___wmul@product:
  3106                           	opt stack 0
  3107  000081                     memcpy@n:
  3108                           	opt stack 0
  3109  000081                     memset@n:
  3110                           	opt stack 0
  3111  000081                     strcat@cp:
  3112                           	opt stack 0
  3113  000081                     strcpy@cp:
  3114                           	opt stack 0
  3115  000081                     strlen@cp:
  3116                           	opt stack 0
  3117  000081                     GetElapsedTime@StartTime:
  3118                           	opt stack 0
  3119  000081                     ___lmul@multiplicand:
  3120                           	opt stack 0
  3121                           
  3122                           ; 4 bytes @ 0x21
  3123  000081                     	ds	1
  3124  000082                     ??_I2c_ReadData:
  3125  000082                     Uart_WriteConstString@Module:
  3126                           	opt stack 0
  3127  000082                     Uart_WriteString@Module:
  3128                           	opt stack 0
  3129  000082                     Uart_WriteStringLen@Len:
  3130                           	opt stack 0
  3131  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3132                           	opt stack 0
  3133  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3134                           	opt stack 0
  3135  000082                     USBConfigureEndpoint@EPNum:
  3136                           	opt stack 0
  3137  000082                     ___awdiv@sign:
  3138                           	opt stack 0
  3139  000082                     ___awmod@sign:
  3140                           	opt stack 0
  3141  000082                     isalpha@c:
  3142                           	opt stack 0
  3143  000082                     isxdigit@c:
  3144                           	opt stack 0
  3145  000082                     USBTransferOnePacket@handle:
  3146                           	opt stack 0
  3147                           
  3148                           ; 2 bytes @ 0x22
  3149  000082                     	ds	1
  3150  000083                     ?_GetCallerNumber:
  3151                           	opt stack 0
  3152  000083                     ?_atoi:
  3153                           	opt stack 0
  3154  000083                     ?_xtoi:
  3155                           	opt stack 0
  3156  000083                     ?___lwdiv:
  3157                           	opt stack 0
  3158  000083                     Uart_WriteStringLen@Index:
  3159                           	opt stack 0
  3160  000083                     Mdm_SetSmsFormat@Index:
  3161                           	opt stack 0
  3162  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3163                           	opt stack 0
  3164  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3165                           	opt stack 0
  3166  000083                     getSetupCall@isCalledReceived:
  3167                           	opt stack 0
  3168  000083                     sprintf@flag:
  3169                           	opt stack 0
  3170  000083                     memcpy@tmp:
  3171                           	opt stack 0
  3172  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3173                           	opt stack 0
  3174  000083                     USBConfigureEndpoint@handle:
  3175                           	opt stack 0
  3176  000083                     putUSBUSART@data:
  3177                           	opt stack 0
  3178  000083                     atoi@s:
  3179                           	opt stack 0
  3180  000083                     ___awdiv@quotient:
  3181                           	opt stack 0
  3182  000083                     ___lwdiv@dividend:
  3183                           	opt stack 0
  3184  000083                     memset@p:
  3185                           	opt stack 0
  3186  000083                     xtoi@s:
  3187                           	opt stack 0
  3188  000083                     OsTmr_StartTimer@Timeout:
  3189                           	opt stack 0
  3190                           
  3191                           ; 4 bytes @ 0x23
  3192  000083                     	ds	1
  3193  000084                     Uart_WriteStringLen@Module:
  3194                           	opt stack 0
  3195  000084                     I2cSlv_SendI2cMsg@TxSts:
  3196                           	opt stack 0
  3197  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3198                           	opt stack 0
  3199  000084                     CDCTxService@i:
  3200                           	opt stack 0
  3201  000084                     getsUSBUSART@buffer:
  3202                           	opt stack 0
  3203  000084                     sprintf@ap:
  3204                           	opt stack 0
  3205  000084                     memcpy@d:
  3206                           	opt stack 0
  3207  000084                     Mdm_SetSmsFormat@UartMessage:
  3208                           	opt stack 0
  3209                           
  3210                           ; 20 bytes @ 0x24
  3211  000084                     	ds	1
  3212  000085                     ??_atoi:
  3213  000085                     ??_xtoi:
  3214  000085                     ??_GetElapsedTime:
  3215  000085                     Rtcc_SetRtccValue@Value:
  3216                           	opt stack 0
  3217  000085                     USBDeviceInit@i:
  3218                           	opt stack 0
  3219  000085                     USBEnableEndpoint@options:
  3220                           	opt stack 0
  3221  000085                     putUSBUSART@length:
  3222                           	opt stack 0
  3223  000085                     CDCTxService@byte_to_send:
  3224                           	opt stack 0
  3225  000085                     StringCompare@Result:
  3226                           	opt stack 0
  3227  000085                     StringCopy@SourceStr:
  3228                           	opt stack 0
  3229  000085                     ___lwdiv@divisor:
  3230                           	opt stack 0
  3231  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3232                           	opt stack 0
  3233  000085                     ___lmul@product:
  3234                           	opt stack 0
  3235                           
  3236                           ; 4 bytes @ 0x25
  3237  000085                     	ds	1
  3238  000086                     ??_Rtcc_SetRtccValue:
  3239  000086                     getsUSBUSART@len:
  3240                           	opt stack 0
  3241  000086                     sprintf@c:
  3242                           	opt stack 0
  3243  000086                     USBEnableEndpoint@p:
  3244                           	opt stack 0
  3245  000086                     StringCompare@Index:
  3246                           	opt stack 0
  3247  000086                     memcpy@s:
  3248                           	opt stack 0
  3249                           
  3250                           ; 2 bytes @ 0x26
  3251  000086                     	ds	1
  3252  000087                     atoi@sign:
  3253                           	opt stack 0
  3254  000087                     ___lwdiv@counter:
  3255                           	opt stack 0
  3256  000087                     xtoi@sign:
  3257                           	opt stack 0
  3258  000087                     StringCopy@DestStr:
  3259                           	opt stack 0
  3260  000087                     sprintf@cp:
  3261                           	opt stack 0
  3262                           
  3263                           ; 2 bytes @ 0x27
  3264  000087                     	ds	1
  3265  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3266                           	opt stack 0
  3267  000088                     USBEnableEndpoint@ep:
  3268                           	opt stack 0
  3269  000088                     parseCommand@text:
  3270                           	opt stack 0
  3271  000088                     atoi@a:
  3272                           	opt stack 0
  3273  000088                     ___lwdiv@quotient:
  3274                           	opt stack 0
  3275  000088                     xtoi@val:
  3276                           	opt stack 0
  3277                           
  3278                           ; 2 bytes @ 0x28
  3279  000088                     	ds	1
  3280  000089                     ??_Rtcm_GetRtccDate:
  3281  000089                     ?_strtol:
  3282                           	opt stack 0
  3283  000089                     ?___lldiv:
  3284                           	opt stack 0
  3285  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3286                           	opt stack 0
  3287  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3288                           	opt stack 0
  3289  000089                     StringCopy@Len:
  3290                           	opt stack 0
  3291  000089                     strtol@s:
  3292                           	opt stack 0
  3293  000089                     ___lldiv@dividend:
  3294                           	opt stack 0
  3295  000089                     Rtcm_SetRtccDate@Date:
  3296                           	opt stack 0
  3297                           
  3298                           ; 8 bytes @ 0x29
  3299  000089                     	ds	1
  3300  00008A                     xtoi@c:
  3301                           	opt stack 0
  3302  00008A                     LedBlinkStateMachine@LedBlink:
  3303                           	opt stack 0
  3304  00008A                     LedPulseStateMachine@LedPulse:
  3305                           	opt stack 0
  3306  00008A                     secondsAppTimer@counter:
  3307                           	opt stack 0
  3308  00008A                     utoa@buf:
  3309                           	opt stack 0
  3310  00008A                     parseCommand@addNumberCmd:
  3311                           	opt stack 0
  3312  00008A                     Rtcm_GetRtccDate@LocalDate:
  3313                           	opt stack 0
  3314                           
  3315                           ; 8 bytes @ 0x2A
  3316  00008A                     	ds	1
  3317  00008B                     ??_StringCopy:
  3318  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3319                           	opt stack 0
  3320  00008B                     strtol@endptr:
  3321                           	opt stack 0
  3322                           
  3323                           ; 2 bytes @ 0x2B
  3324  00008B                     	ds	1
  3325  00008C                     LedPulseStateMachine@Led:
  3326                           	opt stack 0
  3327  00008C                     secondsAppTimer@isCyclic:
  3328                           	opt stack 0
  3329  00008C                     utoa@val:
  3330                           	opt stack 0
  3331                           
  3332                           ; 2 bytes @ 0x2C
  3333  00008C                     	ds	1
  3334  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3335                           	opt stack 0
  3336  00008D                     StringCopy@Index:
  3337                           	opt stack 0
  3338  00008D                     strtol@base:
  3339                           	opt stack 0
  3340  00008D                     parseCommand@deleteNumberCmd:
  3341                           	opt stack 0
  3342  00008D                     GetElapsedTime@TimeValue:
  3343                           	opt stack 0
  3344  00008D                     ___lldiv@divisor:
  3345                           	opt stack 0
  3346                           
  3347                           ; 4 bytes @ 0x2D
  3348  00008D                     	ds	1
  3349  00008E                     utoa@base:
  3350                           	opt stack 0
  3351                           
  3352                           ; 2 bytes @ 0x2E
  3353  00008E                     	ds	1
  3354  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3355  00008F                     ??_strtol:
  3356  00008F                     secondsAppTimer@seconds:
  3357                           	opt stack 0
  3358  00008F                     Mdm_GetSmsData@MessageText:
  3359                           	opt stack 0
  3360  00008F                     Eeprom_Write@WriteBuffer:
  3361                           	opt stack 0
  3362  00008F                     LedStateMachine@LedSts:
  3363                           	opt stack 0
  3364  00008F                     ModemEvtParser@CallReadyString:
  3365                           	opt stack 0
  3366                           
  3367                           ; 10 bytes @ 0x2F
  3368  00008F                     	ds	1
  3369  000090                     parseCommand@state:
  3370                           	opt stack 0
  3371  000090                     secondsAppTimer@isExpired:
  3372                           	opt stack 0
  3373  000090                     utoa@v:
  3374                           	opt stack 0
  3375                           
  3376                           ; 2 bytes @ 0x30
  3377  000090                     	ds	1
  3378  000091                     ??_USBStdFeatureReqHandler:
  3379  000091                     Mdm_GetSmsData@GetSmsStatus:
  3380                           	opt stack 0
  3381  000091                     USBStdSetCfgHandler@i:
  3382                           	opt stack 0
  3383  000091                     Eeprom_Write@DataLength:
  3384                           	opt stack 0
  3385  000091                     LedStateMachine@LedOut:
  3386                           	opt stack 0
  3387  000091                     secondsAppTimer@destinationTicks:
  3388                           	opt stack 0
  3389  000091                     GetElapsedTime@CurrentTimestamp:
  3390                           	opt stack 0
  3391  000091                     ___lldiv@quotient:
  3392                           	opt stack 0
  3393                           
  3394                           ; 4 bytes @ 0x31
  3395  000091                     	ds	1
  3396  000092                     Eeprom_Write@WriteSts:
  3397                           	opt stack 0
  3398  000092                     utoa@c:
  3399                           	opt stack 0
  3400  000092                     USBStdFeatureReqHandler@pUEP:
  3401                           	opt stack 0
  3402                           
  3403                           ; 2 bytes @ 0x32
  3404  000092                     	ds	1
  3405  000093                     Eeprom_Write@MemoryAddress:
  3406                           	opt stack 0
  3407  000093                     waitSetupCall@isCallArrived:
  3408                           	opt stack 0
  3409  000093                     strtol@sign:
  3410                           	opt stack 0
  3411  000093                     LedStateMachine@LedBlink:
  3412                           	opt stack 0
  3413  000093                     itoa@buf:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x33
  3417  000093                     	ds	1
  3418  000094                     USBStdFeatureReqHandler@current_ep_data:
  3419                           	opt stack 0
  3420  000094                     Eeprom_Write@SlaveAddress:
  3421                           	opt stack 0
  3422  000094                     strtol@a:
  3423                           	opt stack 0
  3424                           
  3425                           ; 4 bytes @ 0x34
  3426  000094                     	ds	1
  3427  000095                     Eeprom_Write@CommandLength:
  3428                           	opt stack 0
  3429  000095                     ___lldiv@counter:
  3430                           	opt stack 0
  3431  000095                     OsTmr_GetTimerStatus@Timer:
  3432                           	opt stack 0
  3433  000095                     USBStdFeatureReqHandler@p:
  3434                           	opt stack 0
  3435  000095                     LedStateMachine@LedPulse:
  3436                           	opt stack 0
  3437  000095                     itoa@val:
  3438                           	opt stack 0
  3439                           
  3440                           ; 2 bytes @ 0x35
  3441  000095                     	ds	1
  3442  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3443                           	opt stack 0
  3444  000096                     SetUartBaudRate@UartConfig:
  3445                           	opt stack 0
  3446  000096                     saveNumberInMemory@phoneNumber:
  3447                           	opt stack 0
  3448  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3449                           	opt stack 0
  3450                           
  3451                           ; 4 bytes @ 0x36
  3452  000096                     	ds	1
  3453  000097                     ??_USBCtrlEPService:
  3454  000097                     itoa@base:
  3455                           	opt stack 0
  3456                           
  3457                           ; 2 bytes @ 0x37
  3458  000097                     	ds	1
  3459  000098                     Tmr_TmrBPrSet@Prescaler:
  3460                           	opt stack 0
  3461  000098                     Mdm_SetSmsFormat@TextFormat:
  3462                           	opt stack 0
  3463  000098                     USBDeviceTasks@i:
  3464                           	opt stack 0
  3465  000098                     LedStateMachine@LedOutSts:
  3466                           	opt stack 0
  3467  000098                     saveNumberInMemory@address:
  3468                           	opt stack 0
  3469  000098                     strtol@c:
  3470                           	opt stack 0
  3471                           
  3472                           ; 1 bytes @ 0x38
  3473  000098                     	ds	1
  3474  000099                     Tmr_TmrBPrSet@Postscaler:
  3475                           	opt stack 0
  3476  000099                     SetUartBaudRate@Module:
  3477                           	opt stack 0
  3478  000099                     LedStateMachine@Led:
  3479                           	opt stack 0
  3480  000099                     initGprsModem@isInitialized:
  3481                           	opt stack 0
  3482  000099                     itoa@cp:
  3483                           	opt stack 0
  3484  000099                     ModemEvtParser@ClipString:
  3485                           	opt stack 0
  3486                           
  3487                           ; 5 bytes @ 0x39
  3488  000099                     	ds	1
  3489  00009A                     ??_Led_MainTask:
  3490  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3491                           	opt stack 0
  3492  00009A                     SetUartBaudRate@BaudRateRegister:
  3493                           	opt stack 0
  3494  00009A                     SetBaudRate@McuClockHz:
  3495                           	opt stack 0
  3496                           
  3497                           ; 4 bytes @ 0x3A
  3498  00009A                     	ds	1
  3499  00009B                     ??_SendSmsSm:
  3500  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3501                           	opt stack 0
  3502  00009B                     OsTmr_Wait@WaitTimer:
  3503                           	opt stack 0
  3504  00009B                     InitGprsNetwork@Apn:
  3505                           	opt stack 0
  3506  00009B                     HttpGetMethod@GetData:
  3507                           	opt stack 0
  3508                           
  3509                           ; 2 bytes @ 0x3B
  3510  00009B                     	ds	1
  3511  00009C                     SetUartBaudRate@DivisionFactor:
  3512                           	opt stack 0
  3513  00009C                     Tmr_TmrBPrSet@Divisor:
  3514                           	opt stack 0
  3515                           
  3516                           ; 4 bytes @ 0x3C
  3517  00009C                     	ds	1
  3518  00009D                     ??_HttpGetMethod:
  3519  00009D                     InitGprsNetwork@ApnLen:
  3520                           	opt stack 0
  3521  00009D                     Uart_InitUartModule@UartConfig:
  3522                           	opt stack 0
  3523  00009D                     OsTmr_Wait@DelayMs:
  3524                           	opt stack 0
  3525                           
  3526                           ; 4 bytes @ 0x3D
  3527  00009D                     	ds	1
  3528  00009E                     ??_SetBaudRate:
  3529  00009E                     ??_InitGprsNetwork:
  3530  00009E                     ModemEvtParser@SmsString:
  3531                           	opt stack 0
  3532                           
  3533                           ; 5 bytes @ 0x3E
  3534  00009E                     	ds	1
  3535  00009F                     ??_Uart_InitUartModule:
  3536                           
  3537                           ; 1 bytes @ 0x3F
  3538  00009F                     	ds	1
  3539  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3540                           	opt stack 0
  3541                           
  3542                           ; 2 bytes @ 0x40
  3543  0000A0                     	ds	1
  3544  0000A1                     Uart_InitUartModule@Module:
  3545                           	opt stack 0
  3546  0000A1                     OsTmr_Wait@Ret:
  3547                           	opt stack 0
  3548                           
  3549                           ; 1 bytes @ 0x41
  3550  0000A1                     	ds	1
  3551  0000A2                     ??_Terminal:
  3552  0000A2                     I2c_InitI2cModule@I2cConfig:
  3553                           	opt stack 0
  3554  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3555                           	opt stack 0
  3556                           
  3557                           ; 2 bytes @ 0x42
  3558  0000A2                     	ds	1
  3559  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3560                           	opt stack 0
  3561  0000A3                     ModemEvtParser@RingString:
  3562                           	opt stack 0
  3563                           
  3564                           ; 4 bytes @ 0x43
  3565  0000A3                     	ds	1
  3566  0000A4                     ??_I2c_InitI2cModule:
  3567  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3568                           	opt stack 0
  3569  0000A4                     Terminal@i:
  3570                           	opt stack 0
  3571  0000A4                     InitSchedTimer@TmrBConfig:
  3572                           	opt stack 0
  3573                           
  3574                           ; 7 bytes @ 0x44
  3575  0000A4                     	ds	1
  3576  0000A5                     Terminal@ReceivedBytes:
  3577                           	opt stack 0
  3578  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3579                           	opt stack 0
  3580                           
  3581                           ; 2 bytes @ 0x45
  3582  0000A5                     	ds	1
  3583  0000A6                     Terminal@Index:
  3584                           	opt stack 0
  3585                           
  3586                           ; 1 bytes @ 0x46
  3587  0000A6                     	ds	1
  3588  0000A7                     ModemEvtParser@Match:
  3589                           	opt stack 0
  3590  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3591                           	opt stack 0
  3592                           
  3593                           ; 1 bytes @ 0x47
  3594  0000A7                     	ds	1
  3595  0000A8                     ModemEvtParser@CompareIdx:
  3596                           	opt stack 0
  3597  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3598                           	opt stack 0
  3599                           
  3600                           ; 1 bytes @ 0x48
  3601  0000A8                     	ds	1
  3602  0000A9                     Eeprom_Read@ReadBuffer:
  3603                           	opt stack 0
  3604                           
  3605                           ; 2 bytes @ 0x49
  3606  0000A9                     	ds	2
  3607  0000AB                     Eeprom_Read@DataLength:
  3608                           	opt stack 0
  3609                           
  3610                           ; 1 bytes @ 0x4B
  3611  0000AB                     	ds	1
  3612  0000AC                     Eeprom_Read@MemoryAddress:
  3613                           	opt stack 0
  3614                           
  3615                           ; 1 bytes @ 0x4C
  3616  0000AC                     	ds	1
  3617  0000AD                     Eeprom_Read@SlaveAddress:
  3618                           	opt stack 0
  3619                           
  3620                           ; 1 bytes @ 0x4D
  3621  0000AD                     	ds	1
  3622  0000AE                     Eeprom_Read@ReadSts:
  3623                           	opt stack 0
  3624                           
  3625                           ; 1 bytes @ 0x4E
  3626  0000AE                     	ds	1
  3627  0000AF                     Eeprom_Read@QuerySts:
  3628                           	opt stack 0
  3629                           
  3630                           ; 1 bytes @ 0x4F
  3631  0000AF                     	ds	1
  3632  0000B0                     tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           fsr1h	equ	0xFE2
  3640                           fsr1l	equ	0xFE1
  3641                           
  3642                           ; 1 bytes @ 0x50
  3643                           
  3644                           	psect	cstackCOMRAM
  3645  000001                     __pcstackCOMRAM:
  3646                           	opt stack 0
  3647  000001                     i2GenerateEvt@Event:
  3648                           	opt stack 0
  3649                           
  3650                           ; 2 bytes @ 0x0
  3651  000001                     	ds	2
  3652  000003                     i2GenerateEvt@EventStatus:
  3653                           	opt stack 0
  3654                           
  3655                           ; 1 bytes @ 0x2
  3656  000003                     	ds	1
  3657  000004                     Uart_MdmGsmGprsReadService@UartData:
  3658                           	opt stack 0
  3659                           
  3660                           ; 1 bytes @ 0x3
  3661  000004                     	ds	1
  3662  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3663                           	opt stack 0
  3664                           
  3665                           ; 2 bytes @ 0x4
  3666  000005                     	ds	2
  3667  000007                     ??_HighPriorityIsr:
  3668                           
  3669                           ; 1 bytes @ 0x6
  3670  000007                     	ds	18
  3671  000019                     ?i1___wmul:
  3672                           	opt stack 0
  3673  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3674                           	opt stack 0
  3675  000019                     i1GenerateEvt@Event:
  3676                           	opt stack 0
  3677  000019                     i1___wmul@multiplier:
  3678                           	opt stack 0
  3679                           
  3680                           ; 2 bytes @ 0x18
  3681  000019                     	ds	2
  3682  00001B                     i1GenerateEvt@EventStatus:
  3683                           	opt stack 0
  3684  00001B                     i1___wmul@multiplicand:
  3685                           	opt stack 0
  3686                           
  3687                           ; 2 bytes @ 0x1A
  3688  00001B                     	ds	1
  3689  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3690                           	opt stack 0
  3691                           
  3692                           ; 2 bytes @ 0x1B
  3693  00001C                     	ds	1
  3694  00001D                     i1___wmul@product:
  3695                           	opt stack 0
  3696                           
  3697                           ; 2 bytes @ 0x1C
  3698  00001D                     	ds	1
  3699  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3700                           	opt stack 0
  3701                           
  3702                           ; 1 bytes @ 0x1D
  3703  00001E                     	ds	1
  3704  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3705                           	opt stack 0
  3706                           
  3707                           ; 1 bytes @ 0x1E
  3708  00001F                     	ds	1
  3709  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3710                           	opt stack 0
  3711                           
  3712                           ; 1 bytes @ 0x1F
  3713  000020                     	ds	1
  3714  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3715                           	opt stack 0
  3716                           
  3717                           ; 2 bytes @ 0x20
  3718  000021                     	ds	2
  3719  000023                     tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           
  3729                           ; 1 bytes @ 0x22
  3730 ;;
  3731 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3732 ;;
  3733 ;; *************** function _main *****************
  3734 ;; Defined at:
  3735 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2   14[None  ] short 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels required when called:   23
  3755 ;; This function calls:
  3756 ;;		_Sch_MainScheduler
  3757 ;;		_SystemInit
  3758 ;; This function is called by:
  3759 ;;		Startup code after reset
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text0
  3764  006878                     __ptext0:
  3765                           	opt stack 0
  3766  006878                     _main:
  3767                           	opt stack 8
  3768                           
  3769                           ;main.c: 61: SystemInit();
  3770                           
  3771                           ;incstack = 0
  3772  006878  EC31  F031         	call	_SystemInit	;wreg free
  3773                           
  3774                           ;main.c: 64: Sch_MainScheduler();
  3775  00687C  EC26  F033         	call	_Sch_MainScheduler	;wreg free
  3776                           
  3777                           ;main.c: 67: return 0;
  3778                           ;	Return value of _main is never used
  3779  006880  EF66  F000         	goto	start
  3780  006884                     __end_of_main:
  3781                           	opt stack 0
  3782                           tblptru	equ	0xFF8
  3783                           tblptrh	equ	0xFF7
  3784                           tblptrl	equ	0xFF6
  3785                           tablat	equ	0xFF5
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           postdec1	equ	0xFE5
  3789                           fsr1h	equ	0xFE2
  3790                           fsr1l	equ	0xFE1
  3791                           
  3792 ;; *************** function _SystemInit *****************
  3793 ;; Defined at:
  3794 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:   15
  3815 ;; This function calls:
  3816 ;;		_InitSchedTimer
  3817 ;;		_Irq_InitIntController
  3818 ;;		_Mcu_ConfigExtInt
  3819 ;;		_Mcu_StartSystemPll
  3820 ;;		_Pm_DsReleasePinControl
  3821 ;;		_Tmr_RegisterTmr2IsrCallback
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text1
  3828  006262                     __ptext1:
  3829                           	opt stack 0
  3830  006262                     _SystemInit:
  3831                           	opt stack 15
  3832                           
  3833                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3834                           
  3835                           ;incstack = 0
  3836  006262  EC65  F034         	call	_Pm_DsReleasePinControl	;wreg free
  3837                           
  3838                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3839  006266  EC17  F033         	call	_Mcu_StartSystemPll	;wreg free
  3840                           
  3841                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3842  00626A  0E01               	movlw	1
  3843  00626C  0100               	movlb	0	; () banked
  3844  00626E  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3845  006270  0E01               	movlw	1
  3846  006272  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3847  006274  0E01               	movlw	1
  3848  006276  ECD5  F031         	call	_Irq_InitIntController
  3849                           
  3850                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3851  00627A  0E5C               	movlw	low _Sch_SchmIntService
  3852  00627C  0100               	movlb	0	; () banked
  3853  00627E  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3854  006280  0E68               	movlw	high _Sch_SchmIntService
  3855  006282  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3856  006284  EC48  F034         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3857                           
  3858                           ;sys_init.c: 132: InitSchedTimer();
  3859  006288  EC91  F031         	call	_InitSchedTimer	;wreg free
  3860                           
  3861                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3862  00628C  EC51  F033         	call	_Mcu_ConfigExtInt	;wreg free
  3863  006290  0012               	return		;funcret
  3864  006292                     __end_of_SystemInit:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           postdec1	equ	0xFE5
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           
  3876 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3877 ;; Defined at:
  3878 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3881 ;;		 -> Sch_SchmIntService(1), 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;Total ram usage:        2 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:   11
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_SystemInit
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text2
  3908  006890                     __ptext2:
  3909                           	opt stack 0
  3910  006890                     _Tmr_RegisterTmr2IsrCallback:
  3911                           	opt stack 18
  3912                           
  3913                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3914                           
  3915                           ;incstack = 0
  3916  006890  C07D  F2E8         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3917  006894  C07E  F2E9         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3918  006898  0012               	return		;funcret
  3919  00689A                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3920                           	opt stack 0
  3921                           tblptru	equ	0xFF8
  3922                           tblptrh	equ	0xFF7
  3923                           tblptrl	equ	0xFF6
  3924                           tablat	equ	0xFF5
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           postdec1	equ	0xFE5
  3928                           fsr1h	equ	0xFE2
  3929                           fsr1l	equ	0xFE1
  3930                           
  3931 ;; *************** function _Pm_DsReleasePinControl *****************
  3932 ;; Defined at:
  3933 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		None
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:   11
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_SystemInit
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text3
  3962  0068CA                     __ptext3:
  3963                           	opt stack 0
  3964  0068CA                     _Pm_DsReleasePinControl:
  3965                           	opt stack 18
  3966                           
  3967                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3968                           
  3969                           ;incstack = 0
  3970  0068CA  010F               	movlb	15	; () banked
  3971  0068CC  914C               	bcf	76,0,b	;volatile
  3972                           
  3973                           ; BSR set to: 15
  3974  0068CE  0012               	return		;funcret
  3975  0068D0                     __end_of_Pm_DsReleasePinControl:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           postinc0	equ	0xFEE
  3982                           wreg	equ	0xFE8
  3983                           postdec1	equ	0xFE5
  3984                           fsr1h	equ	0xFE2
  3985                           fsr1l	equ	0xFE1
  3986                           
  3987 ;; *************** function _Mcu_StartSystemPll *****************
  3988 ;; Defined at:
  3989 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:   11
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_SystemInit
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text4
  4018  00662E                     __ptext4:
  4019                           	opt stack 0
  4020  00662E                     _Mcu_StartSystemPll:
  4021                           	opt stack 18
  4022                           
  4023                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4024                           
  4025                           ; BSR set to: 15
  4026                           ;incstack = 0
  4027  00662E  0E03               	movlw	3
  4028  006630  0100               	movlb	0	; () banked
  4029  006632  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4030  006634  0EE8               	movlw	232
  4031  006636  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4035  006638  8C9B               	bsf	3995,6,c	;volatile
  4036  00663A                     l11898:
  4037                           
  4038                           ; BSR set to: 0
  4039  00663A  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4040  00663C  A0D8               	btfss	status,0,c
  4041  00663E  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4042  006640  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4043  006642  E1FB               	bnz	l11898
  4044  006644  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4045  006646  B4D8               	btfsc	status,2,c
  4046  006648  0012               	return	
  4047  00664A  D7F7               	goto	l237
  4048  00664C                     __end_of_Mcu_StartSystemPll:
  4049                           	opt stack 0
  4050                           tblptru	equ	0xFF8
  4051                           tblptrh	equ	0xFF7
  4052                           tblptrl	equ	0xFF6
  4053                           tablat	equ	0xFF5
  4054                           postinc0	equ	0xFEE
  4055                           wreg	equ	0xFE8
  4056                           postdec1	equ	0xFE5
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _Mcu_ConfigExtInt *****************
  4062 ;; Defined at:
  4063 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:   11
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_SystemInit
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text5
  4092  0066A2                     __ptext5:
  4093                           	opt stack 0
  4094  0066A2                     _Mcu_ConfigExtInt:
  4095                           	opt stack 18
  4096                           
  4097                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;incstack = 0
  4101  0066A2  8093               	bsf	3987,0,c	;volatile
  4102                           
  4103                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4104  0066A4  8695               	bsf	3989,3,c	;volatile
  4105                           
  4106                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4107  0066A6  010F               	movlb	15	; () banked
  4108  0066A8  8949               	bsf	73,4,b	;volatile
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;mcu_drv.c: 108: RPINR1 = 20;
  4112  0066AA  0E14               	movlw	20
  4113  0066AC  010E               	movlb	14	; () banked
  4114  0066AE  6FE7               	movwf	231,b	;volatile
  4115                           
  4116                           ; BSR set to: 14
  4117                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4118  0066B0  88F2               	bsf	intcon,4,c	;volatile
  4119                           
  4120                           ; BSR set to: 14
  4121                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4122  0066B2  86F0               	bsf	intcon3,3,c	;volatile
  4123                           
  4124                           ; BSR set to: 14
  4125                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4126  0066B4  8CF0               	bsf	intcon3,6,c	;volatile
  4127                           
  4128                           ; BSR set to: 14
  4129                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4130  0066B6  9CF1               	bcf	intcon2,6,c	;volatile
  4131                           
  4132                           ; BSR set to: 14
  4133                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4134  0066B8  9AF1               	bcf	intcon2,5,c	;volatile
  4135                           
  4136                           ; BSR set to: 14
  4137  0066BA  0012               	return		;funcret
  4138  0066BC                     __end_of_Mcu_ConfigExtInt:
  4139                           	opt stack 0
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           intcon	equ	0xFF2
  4145                           intcon2	equ	0xFF1
  4146                           intcon3	equ	0xFF0
  4147                           postinc0	equ	0xFEE
  4148                           wreg	equ	0xFE8
  4149                           postdec1	equ	0xFE5
  4150                           fsr1h	equ	0xFE2
  4151                           fsr1l	equ	0xFE1
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _Irq_InitIntController *****************
  4155 ;; Defined at:
  4156 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  IntPriorityE    1    wreg     enum E7720
  4159 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4160 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;Total ram usage:        3 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:   11
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_SystemInit
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text6
  4187  0063AA                     __ptext6:
  4188                           	opt stack 0
  4189  0063AA                     _Irq_InitIntController:
  4190                           	opt stack 18
  4191                           
  4192                           ; BSR set to: 14
  4193                           ;incstack = 0
  4194                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4195  0063AA  0100               	movlb	0	; () banked
  4196  0063AC  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4197                           
  4198                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4199  0063AE  0100               	movlb	0	; () banked
  4200  0063B0  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4201  0063B2  D002               	bra	u10515
  4202  0063B4  9ED0               	bcf	4048,7,c	;volatile
  4203  0063B6  D001               	bra	u10516
  4204  0063B8                     u10515:
  4205  0063B8  8ED0               	bsf	4048,7,c	;volatile
  4206  0063BA                     u10516:
  4207                           
  4208                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4209  0063BA  0100               	movlb	0	; () banked
  4210  0063BC  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4211  0063BE  D002               	bra	u10525
  4212  0063C0  9EF2               	bcf	intcon,7,c	;volatile
  4213  0063C2  D001               	bra	u10526
  4214  0063C4                     u10525:
  4215  0063C4  8EF2               	bsf	intcon,7,c	;volatile
  4216  0063C6                     u10526:
  4217                           
  4218                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4219  0063C6  0100               	movlb	0	; () banked
  4220  0063C8  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4221  0063CA  D002               	bra	u10535
  4222  0063CC  9CF2               	bcf	intcon,6,c	;volatile
  4223  0063CE  D001               	bra	u10536
  4224  0063D0                     u10535:
  4225  0063D0  8CF2               	bsf	intcon,6,c	;volatile
  4226  0063D2                     u10536:
  4227  0063D2  0012               	return		;funcret
  4228  0063D4                     __end_of_Irq_InitIntController:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           intcon	equ	0xFF2
  4235                           intcon2	equ	0xFF1
  4236                           intcon3	equ	0xFF0
  4237                           postinc0	equ	0xFEE
  4238                           wreg	equ	0xFE8
  4239                           postdec1	equ	0xFE5
  4240                           fsr1h	equ	0xFE2
  4241                           fsr1l	equ	0xFE1
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function _InitSchedTimer *****************
  4245 ;; Defined at:
  4246 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;Total ram usage:        7 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:   14
  4267 ;; This function calls:
  4268 ;;		_Tmr_TmrBConfig
  4269 ;; This function is called by:
  4270 ;;		_SystemInit
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text7
  4275  006322                     __ptext7:
  4276                           	opt stack 0
  4277  006322                     _InitSchedTimer:
  4278                           	opt stack 15
  4279                           
  4280                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4281                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4282                           
  4283                           ;incstack = 0
  4284  006322  0E04               	movlw	4
  4285  006324  0100               	movlb	0	; () banked
  4286  006326  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4287                           
  4288                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4289  006328  0E0C               	movlw	12
  4290  00632A  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4291                           
  4292                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4293  00632C  0E00               	movlw	0
  4294  00632E  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4295                           
  4296                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4297  006330  0E01               	movlw	1
  4298  006332  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4299                           
  4300                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4301  006334  0E03               	movlw	3
  4302  006336  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4303  006338  0EE8               	movlw	232
  4304  00633A  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4305                           
  4306                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4307  00633C  0E01               	movlw	1
  4308  00633E  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4312  006340  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4313  006342  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4314  006344  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4315  006346  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4316  006348  0E02               	movlw	2
  4317  00634A  EC1E  F01F         	call	_Tmr_TmrBConfig
  4318  00634E  0012               	return		;funcret
  4319  006350                     __end_of_InitSchedTimer:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           intcon	equ	0xFF2
  4326                           intcon2	equ	0xFF1
  4327                           intcon3	equ	0xFF0
  4328                           postinc0	equ	0xFEE
  4329                           wreg	equ	0xFE8
  4330                           postdec1	equ	0xFE5
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function _Tmr_TmrBConfig *****************
  4336 ;; Defined at:
  4337 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  TmrNumb         1    wreg     unsigned char 
  4340 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4341 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;Total ram usage:        4 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   13
  4360 ;; This function calls:
  4361 ;;		_TmrBInit
  4362 ;;		_Tmr_StartTmr
  4363 ;;		_Tmr_TmrBIrqSet
  4364 ;;		_Tmr_TmrBPrSet
  4365 ;; This function is called by:
  4366 ;;		_InitSchedTimer
  4367 ;;		_InitAuxTimer
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text8
  4372  003E3C                     __ptext8:
  4373                           	opt stack 0
  4374  003E3C                     _Tmr_TmrBConfig:
  4375                           	opt stack 15
  4376                           
  4377                           ;incstack = 0
  4378                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4379  003E3C  0100               	movlb	0	; () banked
  4380  003E3E  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4381                           
  4382                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4383  003E40  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4384  003E44  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4385  003E48  50DF               	movf	indf2,w,c
  4386  003E4A  0100               	movlb	0	; () banked
  4387  003E4C  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4388  003E4E  EE20 F001          	lfsr	2,1
  4389  003E52  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4390  003E54  26D9               	addwf	fsr2l,f,c
  4391  003E56  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4392  003E58  22DA               	addwfc	fsr2h,f,c
  4393  003E5A  50DF               	movf	indf2,w,c
  4394  003E5C  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4395  003E5E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4396  003E60  EC52  F025         	call	_TmrBInit
  4397                           
  4398                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4399  003E64  0100               	movlb	0	; () banked
  4400  003E66  EE20 F002          	lfsr	2,2
  4401  003E6A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4402  003E6C  26D9               	addwf	fsr2l,f,c
  4403  003E6E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4404  003E70  22DA               	addwfc	fsr2h,f,c
  4405  003E72  04DE               	decf	postinc2,w,c
  4406  003E74  A4D8               	btfss	status,2,c
  4407  003E76  D00E               	goto	l546
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;tmr_drv.c: 277: {
  4411                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4412  003E78  EE20 F003          	lfsr	2,3
  4413  003E7C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4414  003E7E  26D9               	addwf	fsr2l,f,c
  4415  003E80  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4416  003E82  22DA               	addwfc	fsr2h,f,c
  4417  003E84  50DF               	movf	indf2,w,c
  4418  003E86  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4419  003E88  0E01               	movlw	1
  4420  003E8A  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4421  003E8C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4422  003E8E  EC39  F02E         	call	_Tmr_TmrBIrqSet
  4423                           
  4424                           ;tmr_drv.c: 280: }
  4425  003E92  D00E               	goto	l547
  4426  003E94                     l546:
  4427                           
  4428                           ;tmr_drv.c: 281: else
  4429                           ;tmr_drv.c: 282: {
  4430                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4431  003E94  0100               	movlb	0	; () banked
  4432  003E96  EE20 F003          	lfsr	2,3
  4433  003E9A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4434  003E9C  26D9               	addwf	fsr2l,f,c
  4435  003E9E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4436  003EA0  22DA               	addwfc	fsr2h,f,c
  4437  003EA2  50DF               	movf	indf2,w,c
  4438  003EA4  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4439  003EA6  0E00               	movlw	0
  4440  003EA8  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4441  003EAA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4442  003EAC  EC39  F02E         	call	_Tmr_TmrBIrqSet
  4443  003EB0                     l547:
  4444                           
  4445                           ;tmr_drv.c: 285: }
  4446                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4447  003EB0  0100               	movlb	0	; () banked
  4448  003EB2  EE20 F004          	lfsr	2,4
  4449  003EB6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4450  003EB8  26D9               	addwf	fsr2l,f,c
  4451  003EBA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4452  003EBC  22DA               	addwfc	fsr2h,f,c
  4453  003EBE  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4454  003EC2  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4455  003EC6  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4456  003ECA  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4457  003ECE  50DF               	movf	indf2,w,c
  4458  003ED0  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4459  003ED2  EE20 F001          	lfsr	2,1
  4460  003ED6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4461  003ED8  26D9               	addwf	fsr2l,f,c
  4462  003EDA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4463  003EDC  22DA               	addwfc	fsr2h,f,c
  4464  003EDE  50DF               	movf	indf2,w,c
  4465  003EE0  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4466  003EE2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4467  003EE4  EC94  F019         	call	_Tmr_TmrBPrSet
  4468                           
  4469                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4470  003EE8  0100               	movlb	0	; () banked
  4471  003EEA  EE20 F006          	lfsr	2,6
  4472  003EEE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4473  003EF0  26D9               	addwf	fsr2l,f,c
  4474  003EF2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4475  003EF4  22DA               	addwfc	fsr2h,f,c
  4476  003EF6  04DE               	decf	postinc2,w,c
  4477  003EF8  A4D8               	btfss	status,2,c
  4478  003EFA  0012               	return	
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;tmr_drv.c: 290: {
  4482                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4483  003EFC  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4484  003EFE  ECE7  F032         	call	_Tmr_StartTmr
  4485                           
  4486                           ;tmr_drv.c: 293: }
  4487  003F02  0012               	return	
  4488  003F04                     __end_of_Tmr_TmrBConfig:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           intcon	equ	0xFF2
  4495                           intcon2	equ	0xFF1
  4496                           intcon3	equ	0xFF0
  4497                           postinc0	equ	0xFEE
  4498                           wreg	equ	0xFE8
  4499                           postdec1	equ	0xFE5
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _Tmr_TmrBPrSet *****************
  4510 ;; Defined at:
  4511 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  TmrNumb         1    wreg     unsigned char 
  4514 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4515 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4516 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4519 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4520 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      enum E7736
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4530 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;Total ram usage:       10 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:   12
  4537 ;; This function calls:
  4538 ;;		___lldiv
  4539 ;;		___lmul
  4540 ;; This function is called by:
  4541 ;;		_Tmr_TmrBConfig
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text9
  4546  003328                     __ptext9:
  4547                           	opt stack 0
  4548  003328                     _Tmr_TmrBPrSet:
  4549                           	opt stack 15
  4550                           
  4551                           ;incstack = 0
  4552                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4553  003328  0100               	movlb	0	; () banked
  4554  00332A  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4555                           
  4556                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4557                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4558  00332C  0E00               	movlw	0
  4559  00332E  0100               	movlb	0	; () banked
  4560  003330  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4561  003332  0E00               	movlw	0
  4562  003334  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4563  003336  0E00               	movlw	0
  4564  003338  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4565  00333A  0E00               	movlw	0
  4566  00333C  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4570  00333E  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4571  003340  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4572  003342  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4573  003346  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4574  00334A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4575  00334C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4576  00334E  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4577  003352  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4578  003356  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4579  003358  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4580  00335A  ECA4  F02B         	call	___lmul	;wreg free
  4581  00335E  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4582  003362  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4583  003366  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4584  00336A  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4585                           
  4586                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4587  00336E  0E00               	movlw	0
  4588  003370  0100               	movlb	0	; () banked
  4589  003372  6F89               	movwf	___lldiv@dividend& (0+255),b
  4590  003374  0E1B               	movlw	27
  4591  003376  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4592  003378  0EB7               	movlw	183
  4593  00337A  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4594  00337C  0E00               	movlw	0
  4595  00337E  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4596  003380  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4597  003384  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4598  003388  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4599  00338C  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4600  003390  EC21  F028         	call	___lldiv	;wreg free
  4601  003394  0100               	movlb	0	; () banked
  4602  003396  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4603  003398  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4604  00339A  E13A               	bnz	l14858
  4605  00339C  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4606  00339E  A0D8               	btfss	status,0,c
  4607  0033A0  D02D               	goto	l529
  4608  0033A2  D036               	goto	l528
  4609  0033A4                     
  4610                           ; BSR set to: 0
  4611                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4612                           
  4613                           ; BSR set to: 0
  4614  0033A4  0E00               	movlw	0
  4615  0033A6  6F89               	movwf	___lldiv@dividend& (0+255),b
  4616  0033A8  0E1B               	movlw	27
  4617  0033AA  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4618  0033AC  0EB7               	movlw	183
  4619  0033AE  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4620  0033B0  0E00               	movlw	0
  4621  0033B2  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4622  0033B4  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4623  0033B8  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4624  0033BC  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4625  0033C0  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4626  0033C4  EC21  F028         	call	___lldiv	;wreg free
  4627  0033C8  0100               	movlb	0	; () banked
  4628  0033CA  5189               	movf	?___lldiv& (0+255),w,b
  4629  0033CC  6ECB               	movwf	4043,c	;volatile
  4630                           
  4631                           ;tmr_drv.c: 210: break;
  4632  0033CE  D01D               	goto	l531
  4633  0033D0                     
  4634                           ; BSR set to: 0
  4635                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4636                           
  4637                           ; BSR set to: 0
  4638  0033D0  0E00               	movlw	0
  4639  0033D2  6F89               	movwf	___lldiv@dividend& (0+255),b
  4640  0033D4  0E1B               	movlw	27
  4641  0033D6  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4642  0033D8  0EB7               	movlw	183
  4643  0033DA  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4644  0033DC  0E00               	movlw	0
  4645  0033DE  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4646  0033E0  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4647  0033E4  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4648  0033E8  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4649  0033EC  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4650  0033F0  EC21  F028         	call	___lldiv	;wreg free
  4651  0033F4  0100               	movlb	0	; () banked
  4652  0033F6  5189               	movf	?___lldiv& (0+255),w,b
  4653  0033F8  6E77               	movwf	3959,c	;volatile
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;tmr_drv.c: 219: }
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;tmr_drv.c: 218: break;
  4660                           
  4661                           ;tmr_drv.c: 217: default:
  4662                           
  4663                           ;tmr_drv.c: 215: break;
  4664  0033FA  D007               	goto	l531
  4665  0033FC                     l529:
  4666                           
  4667                           ; BSR set to: 0
  4668                           
  4669                           ; BSR set to: 0
  4670  0033FC  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4671                           
  4672                           ; Switch size 1, requested type "space"
  4673                           ; Number of cases is 2, Range of values is 2 to 4
  4674                           ; switch strategies available:
  4675                           ; Name         Instructions Cycles
  4676                           ; simple_byte            7     4 (average)
  4677                           ;	Chosen strategy is simple_byte
  4678  0033FE  0A02               	xorlw	2	; case 2
  4679  003400  B4D8               	btfsc	status,2,c
  4680  003402  D7D0               	goto	l530
  4681  003404  0A06               	xorlw	6	; case 4
  4682  003406  B4D8               	btfsc	status,2,c
  4683  003408  D7E3               	goto	l532
  4684  00340A                     l531:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4688                           
  4689                           ; BSR set to: 0
  4690  00340A  0E00               	movlw	0
  4691  00340C  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4692                           
  4693                           ;tmr_drv.c: 223: }
  4694  00340E  0012               	return	
  4695  003410                     l528:
  4696  003410                     l14858:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;tmr_drv.c: 224: else
  4700                           ;tmr_drv.c: 225: {
  4701                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4702  003410  0E01               	movlw	1
  4703  003412  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4704                           
  4705                           ; BSR set to: 0
  4706  003414  0012               	return	
  4707  003416                     __end_of_Tmr_TmrBPrSet:
  4708                           	opt stack 0
  4709                           tblptru	equ	0xFF8
  4710                           tblptrh	equ	0xFF7
  4711                           tblptrl	equ	0xFF6
  4712                           tablat	equ	0xFF5
  4713                           prodh	equ	0xFF4
  4714                           prodl	equ	0xFF3
  4715                           intcon	equ	0xFF2
  4716                           intcon2	equ	0xFF1
  4717                           intcon3	equ	0xFF0
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           postdec1	equ	0xFE5
  4721                           fsr1h	equ	0xFE2
  4722                           fsr1l	equ	0xFE1
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           postdec2	equ	0xFDD
  4726                           fsr2h	equ	0xFDA
  4727                           fsr2l	equ	0xFD9
  4728                           status	equ	0xFD8
  4729                           
  4730 ;; *************** function _Tmr_TmrBIrqSet *****************
  4731 ;; Defined at:
  4732 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  TmrNumb         1    wreg     unsigned char 
  4735 ;;  Priority        1   29[BANK0 ] enum E7716
  4736 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4751 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4752 ;;Total ram usage:        3 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:   11
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_Tmr_TmrBConfig
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text10
  4763  005C72                     __ptext10:
  4764                           	opt stack 0
  4765  005C72                     _Tmr_TmrBIrqSet:
  4766                           	opt stack 16
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;incstack = 0
  4770                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4771  005C72  0100               	movlb	0	; () banked
  4772  005C74  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4773                           
  4774                           ;tmr_drv.c: 156: switch (TmrNumb)
  4775  005C76  D01A               	goto	l520
  4776  005C78                     l521:
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4780  005C78  929E               	bcf	3998,1,c	;volatile
  4781                           
  4782                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4783  005C7A  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4784  005C7C  D002               	bra	u8785
  4785  005C7E  929F               	bcf	3999,1,c	;volatile
  4786  005C80  D001               	bra	u8786
  4787  005C82                     u8785:
  4788  005C82  829F               	bsf	3999,1,c	;volatile
  4789  005C84                     u8786:
  4790                           
  4791                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4792  005C84  0100               	movlb	0	; () banked
  4793  005C86  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4794  005C88  D002               	bra	u8795
  4795  005C8A  929D               	bcf	3997,1,c	;volatile
  4796  005C8C  D001               	bra	u8796
  4797  005C8E                     u8795:
  4798  005C8E  829D               	bsf	3997,1,c	;volatile
  4799  005C90                     u8796:
  4800                           
  4801                           ;tmr_drv.c: 165: break;
  4802  005C90  0012               	return	
  4803  005C92                     l523:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4807  005C92  96A4               	bcf	4004,3,c	;volatile
  4808                           
  4809                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4810  005C94  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4811  005C96  D002               	bra	u8805
  4812  005C98  96A5               	bcf	4005,3,c	;volatile
  4813  005C9A  D001               	bra	u8806
  4814  005C9C                     u8805:
  4815  005C9C  86A5               	bsf	4005,3,c	;volatile
  4816  005C9E                     u8806:
  4817                           
  4818                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4819  005C9E  0100               	movlb	0	; () banked
  4820  005CA0  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4821  005CA2  D002               	bra	u8815
  4822  005CA4  96A3               	bcf	4003,3,c	;volatile
  4823  005CA6  D001               	bra	u8816
  4824  005CA8                     u8815:
  4825  005CA8  86A3               	bsf	4003,3,c	;volatile
  4826  005CAA                     u8816:
  4827                           
  4828                           ;tmr_drv.c: 178: }
  4829                           
  4830                           ;tmr_drv.c: 177: break;
  4831                           
  4832                           ;tmr_drv.c: 176: default:
  4833                           
  4834                           ;tmr_drv.c: 174: break;
  4835  005CAA  0012               	return	
  4836  005CAC                     l520:
  4837  005CAC  0100               	movlb	0	; () banked
  4838  005CAE  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4839                           
  4840                           ; Switch size 1, requested type "space"
  4841                           ; Number of cases is 2, Range of values is 2 to 4
  4842                           ; switch strategies available:
  4843                           ; Name         Instructions Cycles
  4844                           ; simple_byte            7     4 (average)
  4845                           ;	Chosen strategy is simple_byte
  4846  005CB0  0A02               	xorlw	2	; case 2
  4847  005CB2  B4D8               	btfsc	status,2,c
  4848  005CB4  D7E1               	goto	l521
  4849  005CB6  0A06               	xorlw	6	; case 4
  4850  005CB8  A4D8               	btfss	status,2,c
  4851  005CBA  0012               	return	
  4852  005CBC  D7EA               	goto	l523
  4853  005CBE                     __end_of_Tmr_TmrBIrqSet:
  4854                           	opt stack 0
  4855                           tblptru	equ	0xFF8
  4856                           tblptrh	equ	0xFF7
  4857                           tblptrl	equ	0xFF6
  4858                           tablat	equ	0xFF5
  4859                           prodh	equ	0xFF4
  4860                           prodl	equ	0xFF3
  4861                           intcon	equ	0xFF2
  4862                           intcon2	equ	0xFF1
  4863                           intcon3	equ	0xFF0
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           postdec1	equ	0xFE5
  4867                           fsr1h	equ	0xFE2
  4868                           fsr1l	equ	0xFE1
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           fsr2h	equ	0xFDA
  4873                           fsr2l	equ	0xFD9
  4874                           status	equ	0xFD8
  4875                           
  4876 ;; *************** function _Tmr_StartTmr *****************
  4877 ;; Defined at:
  4878 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  TmrNumb         1    wreg     unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;Total ram usage:        1 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:   11
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_Tmr_TmrBConfig
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text11
  4907  0065CE                     __ptext11:
  4908                           	opt stack 0
  4909  0065CE                     _Tmr_StartTmr:
  4910                           	opt stack 16
  4911                           
  4912                           ;incstack = 0
  4913                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4914  0065CE  0100               	movlb	0	; () banked
  4915  0065D0  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4916                           
  4917                           ;tmr_drv.c: 245: switch (TmrNumb)
  4918  0065D2  D004               	goto	l538
  4919  0065D4                     l539:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4923  0065D4  84CA               	bsf	4042,2,c	;volatile
  4924                           
  4925                           ;tmr_drv.c: 250: break;
  4926  0065D6  0012               	return	
  4927  0065D8                     l541:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4931  0065D8  8476               	bsf	3958,2,c	;volatile
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;tmr_drv.c: 259: }
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;tmr_drv.c: 258: break;
  4938                           
  4939                           ;tmr_drv.c: 257: default:
  4940                           
  4941                           ;tmr_drv.c: 255: break;
  4942  0065DA  0012               	return	
  4943  0065DC                     l538:
  4944                           
  4945                           ; BSR set to: 0
  4946  0065DC  0100               	movlb	0	; () banked
  4947  0065DE  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4948                           
  4949                           ; Switch size 1, requested type "space"
  4950                           ; Number of cases is 2, Range of values is 2 to 4
  4951                           ; switch strategies available:
  4952                           ; Name         Instructions Cycles
  4953                           ; simple_byte            7     4 (average)
  4954                           ;	Chosen strategy is simple_byte
  4955  0065E0  0A02               	xorlw	2	; case 2
  4956  0065E2  B4D8               	btfsc	status,2,c
  4957  0065E4  D7F7               	goto	l539
  4958  0065E6  0A06               	xorlw	6	; case 4
  4959  0065E8  A4D8               	btfss	status,2,c
  4960  0065EA  0012               	return	
  4961  0065EC  D7F5               	goto	l541
  4962  0065EE                     __end_of_Tmr_StartTmr:
  4963                           	opt stack 0
  4964                           tblptru	equ	0xFF8
  4965                           tblptrh	equ	0xFF7
  4966                           tblptrl	equ	0xFF6
  4967                           tablat	equ	0xFF5
  4968                           prodh	equ	0xFF4
  4969                           prodl	equ	0xFF3
  4970                           intcon	equ	0xFF2
  4971                           intcon2	equ	0xFF1
  4972                           intcon3	equ	0xFF0
  4973                           postinc0	equ	0xFEE
  4974                           wreg	equ	0xFE8
  4975                           postdec1	equ	0xFE5
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           indf2	equ	0xFDF
  4979                           postinc2	equ	0xFDE
  4980                           postdec2	equ	0xFDD
  4981                           fsr2h	equ	0xFDA
  4982                           fsr2l	equ	0xFD9
  4983                           status	equ	0xFD8
  4984                           
  4985 ;; *************** function _TmrBInit *****************
  4986 ;; Defined at:
  4987 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  TmrNumb         1    wreg     unsigned char 
  4990 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4991 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;Total ram usage:        4 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:   11
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_Tmr_TmrBConfig
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text12
  5018  004AA4                     __ptext12:
  5019                           	opt stack 0
  5020  004AA4                     _TmrBInit:
  5021                           	opt stack 16
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;incstack = 0
  5025                           ;TmrBInit@TmrNumb stored from wreg
  5026  004AA4  0100               	movlb	0	; () banked
  5027  004AA6  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5028                           
  5029                           ;tmr_drv.c: 75: switch (TmrNumb)
  5030  004AA8  D03F               	goto	l500
  5031  004AAA                     l503:
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5035  004AAA  90CA               	bcf	4042,0,c	;volatile
  5036  004AAC  D001               	goto	L1
  5037  004AAE                     l505:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5041  004AAE  80CA               	bsf	4042,0,c	;volatile
  5042  004AB0                     L1:
  5043                           
  5044                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5045  004AB0  92CA               	bcf	4042,1,c	;volatile
  5046                           
  5047                           ;tmr_drv.c: 91: break;
  5048  004AB2  D00E               	goto	l504
  5049  004AB4                     l506:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5053  004AB4  80CA               	bsf	4042,0,c	;volatile
  5054                           
  5055                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5056  004AB6  82CA               	bsf	4042,1,c	;volatile
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;tmr_drv.c: 100: }
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;tmr_drv.c: 99: break;
  5063                           
  5064                           ;tmr_drv.c: 98: default:
  5065                           
  5066                           ;tmr_drv.c: 96: break;
  5067  004AB8  D00B               	goto	l504
  5068  004ABA                     
  5069                           ; BSR set to: 0
  5070  004ABA  0100               	movlb	0	; () banked
  5071  004ABC  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5072                           
  5073                           ; Switch size 1, requested type "space"
  5074                           ; Number of cases is 3, Range of values is 1 to 16
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte           10     6 (average)
  5078                           ;	Chosen strategy is simple_byte
  5079  004ABE  0A01               	xorlw	1	; case 1
  5080  004AC0  B4D8               	btfsc	status,2,c
  5081  004AC2  D7F3               	goto	l503
  5082  004AC4  0A05               	xorlw	5	; case 4
  5083  004AC6  B4D8               	btfsc	status,2,c
  5084  004AC8  D7F2               	goto	l505
  5085  004ACA  0A14               	xorlw	20	; case 16
  5086  004ACC  B4D8               	btfsc	status,2,c
  5087  004ACE  D7F2               	goto	l506
  5088  004AD0                     l504:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5092                           
  5093                           ; BSR set to: 0
  5094  004AD0  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5095  004AD4  0EFF               	movlw	255
  5096  004AD6  277F               	addwf	??_TmrBInit& (0+255),f,b
  5097  004AD8  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5098  004ADA  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5099  004ADC  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5100  004ADE  50CA               	movf	4042,w,c	;volatile
  5101  004AE0  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5102  004AE2  0B87               	andlw	-121
  5103  004AE4  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5104  004AE6  6ECA               	movwf	4042,c	;volatile
  5105                           
  5106                           ;tmr_drv.c: 104: break;
  5107  004AE8  0012               	return	
  5108  004AEA                     l511:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5112  004AEA  9076               	bcf	3958,0,c	;volatile
  5113  004AEC  D001               	goto	L2
  5114  004AEE                     l513:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5118  004AEE  8076               	bsf	3958,0,c	;volatile
  5119  004AF0                     L2:
  5120                           
  5121                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5122  004AF0  9276               	bcf	3958,1,c	;volatile
  5123                           
  5124                           ;tmr_drv.c: 120: break;
  5125  004AF2  D00D               	goto	l512
  5126  004AF4                     l514:
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5130  004AF4  8076               	bsf	3958,0,c	;volatile
  5131                           
  5132                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5133  004AF6  8276               	bsf	3958,1,c	;volatile
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;tmr_drv.c: 129: }
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;tmr_drv.c: 128: break;
  5140                           
  5141                           ;tmr_drv.c: 127: default:
  5142                           
  5143                           ;tmr_drv.c: 125: break;
  5144  004AF8  D00A               	goto	l512
  5145  004AFA                     
  5146                           ; BSR set to: 0
  5147                           
  5148                           ; BSR set to: 0
  5149  004AFA  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5150                           
  5151                           ; Switch size 1, requested type "space"
  5152                           ; Number of cases is 3, Range of values is 1 to 16
  5153                           ; switch strategies available:
  5154                           ; Name         Instructions Cycles
  5155                           ; simple_byte           10     6 (average)
  5156                           ;	Chosen strategy is simple_byte
  5157  004AFC  0A01               	xorlw	1	; case 1
  5158  004AFE  B4D8               	btfsc	status,2,c
  5159  004B00  D7F4               	goto	l511
  5160  004B02  0A05               	xorlw	5	; case 4
  5161  004B04  B4D8               	btfsc	status,2,c
  5162  004B06  D7F3               	goto	l513
  5163  004B08  0A14               	xorlw	20	; case 16
  5164  004B0A  B4D8               	btfsc	status,2,c
  5165  004B0C  D7F3               	goto	l514
  5166  004B0E                     l512:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5170                           
  5171                           ; BSR set to: 0
  5172  004B0E  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5173  004B12  0EFF               	movlw	255
  5174  004B14  277F               	addwf	??_TmrBInit& (0+255),f,b
  5175  004B16  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5176  004B18  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5177  004B1A  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5178  004B1C  5076               	movf	3958,w,c	;volatile
  5179  004B1E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5180  004B20  0B87               	andlw	-121
  5181  004B22  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5182  004B24  6E76               	movwf	3958,c	;volatile
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;tmr_drv.c: 137: }
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;tmr_drv.c: 136: break;
  5189                           
  5190                           ;tmr_drv.c: 135: default:
  5191                           
  5192                           ;tmr_drv.c: 133: break;
  5193  004B26  0012               	return	
  5194  004B28                     l500:
  5195                           
  5196                           ; BSR set to: 0
  5197  004B28  0100               	movlb	0	; () banked
  5198  004B2A  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5199                           
  5200                           ; Switch size 1, requested type "space"
  5201                           ; Number of cases is 2, Range of values is 2 to 4
  5202                           ; switch strategies available:
  5203                           ; Name         Instructions Cycles
  5204                           ; simple_byte            7     4 (average)
  5205                           ;	Chosen strategy is simple_byte
  5206  004B2C  0A02               	xorlw	2	; case 2
  5207  004B2E  B4D8               	btfsc	status,2,c
  5208  004B30  D7C4               	goto	l502
  5209  004B32  0A06               	xorlw	6	; case 4
  5210  004B34  A4D8               	btfss	status,2,c
  5211  004B36  0012               	return	
  5212  004B38  D7E0               	goto	l510
  5213  004B3A                     __end_of_TmrBInit:
  5214                           	opt stack 0
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           intcon	equ	0xFF2
  5222                           intcon2	equ	0xFF1
  5223                           intcon3	equ	0xFF0
  5224                           postinc0	equ	0xFEE
  5225                           wreg	equ	0xFE8
  5226                           postdec1	equ	0xFE5
  5227                           fsr1h	equ	0xFE2
  5228                           fsr1l	equ	0xFE1
  5229                           indf2	equ	0xFDF
  5230                           postinc2	equ	0xFDE
  5231                           postdec2	equ	0xFDD
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function _Sch_MainScheduler *****************
  5237 ;; Defined at:
  5238 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:   22
  5259 ;; This function calls:
  5260 ;;		_InitializeTasks
  5261 ;;		_ScheduleTasks
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text13
  5268  00664C                     __ptext13:
  5269                           	opt stack 0
  5270  00664C                     _Sch_MainScheduler:
  5271                           	opt stack 8
  5272                           
  5273                           ;os_sched.c: 178: InitializeTasks();
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;incstack = 0
  5277  00664C  EC16  F029         	call	_InitializeTasks	;wreg free
  5278                           
  5279                           ;os_sched.c: 180: SystemState = RunningState;
  5280  006650  0E01               	movlw	1
  5281  006652  0100               	movlb	0	; () banked
  5282  006654  6FD3               	movwf	_SystemState& (0+255),b
  5283  006656                     
  5284                           ;os_sched.c: 188: {
  5285                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5286                           
  5287                           ; BSR set to: 0
  5288  006656  0102               	movlb	2	; () banked
  5289  006658  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5290  00665A  A4D8               	btfss	status,2,c
  5291  00665C  D7FC               	goto	l790
  5292                           
  5293                           ; BSR set to: 2
  5294                           ;os_sched.c: 191: {
  5295                           ;os_sched.c: 196: ScheduleTasks();
  5296  00665E  EC84  F018         	call	_ScheduleTasks	;wreg free
  5297                           
  5298                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5299  006662  0E01               	movlw	1
  5300  006664  0102               	movlb	2	; () banked
  5301  006666  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5302                           
  5303                           ; BSR set to: 2
  5304                           
  5305                           ; BSR set to: 2
  5306  006668  D7F6               	goto	l790
  5307  00666A                     __end_of_Sch_MainScheduler:
  5308                           	opt stack 0
  5309                           tblptru	equ	0xFF8
  5310                           tblptrh	equ	0xFF7
  5311                           tblptrl	equ	0xFF6
  5312                           tablat	equ	0xFF5
  5313                           prodh	equ	0xFF4
  5314                           prodl	equ	0xFF3
  5315                           intcon	equ	0xFF2
  5316                           intcon2	equ	0xFF1
  5317                           intcon3	equ	0xFF0
  5318                           postinc0	equ	0xFEE
  5319                           wreg	equ	0xFE8
  5320                           postdec1	equ	0xFE5
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           postdec2	equ	0xFDD
  5326                           fsr2h	equ	0xFDA
  5327                           fsr2l	equ	0xFD9
  5328                           status	equ	0xFD8
  5329                           
  5330 ;; *************** function _ScheduleTasks *****************
  5331 ;; Defined at:
  5332 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;		None
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  ActiveTaskIn    1    4[BANK3 ] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;Total ram usage:        5 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:   21
  5353 ;; This function calls:
  5354 ;;		_I2cSlv_MainTask
  5355 ;;		_Led_MainTask
  5356 ;;		_MdmHttp_MainTask
  5357 ;;		_Mdm_DrvMainFn
  5358 ;;		_Mdm_MainTask
  5359 ;;		_MyApp_Task
  5360 ;;		_Rtcm_MainTask
  5361 ;;		_Term_MainTask
  5362 ;;		_UsbDevice_MainTask
  5363 ;;		_Wdg_MainTask
  5364 ;; This function is called by:
  5365 ;;		_Sch_MainScheduler
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text14
  5370  003108                     __ptext14:
  5371                           	opt stack 0
  5372  003108                     _ScheduleTasks:
  5373                           	opt stack 8
  5374                           
  5375                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5376                           
  5377                           ; BSR set to: 2
  5378                           ;incstack = 0
  5379  003108  0E00               	movlw	0
  5380  00310A  0103               	movlb	3	; () banked
  5381  00310C  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5382                           
  5383                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5384  00310E  0E00               	movlw	0
  5385  003110  6FFF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5386  003112                     l16146:
  5387                           
  5388                           ; BSR set to: 3
  5389  003112  0E30               	movlw	low _TaskNumber
  5390  003114  6EF6               	movwf	tblptrl,c
  5391  003116                     	if	1	;There is more than 1 active tblptr byte
  5392  003116  0EFC               	movlw	high _TaskNumber
  5393  003118  6EF7               	movwf	tblptrh,c
  5394  00311A                     	endif
  5395  00311A                     	if	0	;There are less than 3 active tblptr bytes
  5396  00311A                     	endif
  5397  00311A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5398  00311C  6FFB               	movwf	??_ScheduleTasks& (0+255),b
  5399  00311E  6BFC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5400  003120  0009               	tblrd		*+
  5401  003122  50F5               	movf	tablat,w,c
  5402  003124  5DFB               	subwf	??_ScheduleTasks& (0+255),w,b
  5403  003126  0009               	tblrd		*+
  5404  003128  50F5               	movf	tablat,w,c
  5405  00312A  59FC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5406  00312C  B0D8               	btfsc	status,0,c
  5407  00312E  0012               	return	
  5408                           
  5409                           ; BSR set to: 3
  5410                           ;os_sched.c: 106: {
  5411                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5412                           
  5413                           ; BSR set to: 3
  5414                           
  5415                           ; BSR set to: 3
  5416  003130  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5417  003132  0D08               	mullw	8
  5418  003134  0E03               	movlw	3
  5419  003136  26F3               	addwf	prodl,f,c
  5420  003138  0E00               	movlw	0
  5421  00313A  22F4               	addwfc	prodh,f,c
  5422  00313C  0E86               	movlw	low _TaskTable
  5423  00313E  24F3               	addwf	prodl,w,c
  5424  003140  6ED9               	movwf	fsr2l,c
  5425  003142  0E05               	movlw	high _TaskTable
  5426  003144  20F4               	addwfc	prodh,w,c
  5427  003146  6EDA               	movwf	fsr2h,c
  5428  003148  2ADE               	incf	postinc2,f,c
  5429  00314A  0E00               	movlw	0
  5430  00314C  22DD               	addwfc	postdec2,f,c
  5431                           
  5432                           ; BSR set to: 3
  5433                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5434  00314E  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5435  003150  0D08               	mullw	8
  5436  003152  0E05               	movlw	5
  5437  003154  26F3               	addwf	prodl,f,c
  5438  003156  0E00               	movlw	0
  5439  003158  22F4               	addwfc	prodh,f,c
  5440  00315A  0E86               	movlw	low _TaskTable
  5441  00315C  24F3               	addwf	prodl,w,c
  5442  00315E  6ED9               	movwf	fsr2l,c
  5443  003160  0E05               	movlw	high _TaskTable
  5444  003162  20F4               	addwfc	prodh,w,c
  5445  003164  6EDA               	movwf	fsr2h,c
  5446  003166  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5447  003168  0D08               	mullw	8
  5448  00316A  0E03               	movlw	3
  5449  00316C  26F3               	addwf	prodl,f,c
  5450  00316E  0E00               	movlw	0
  5451  003170  22F4               	addwfc	prodh,f,c
  5452  003172  0E86               	movlw	low _TaskTable
  5453  003174  24F3               	addwf	prodl,w,c
  5454  003176  6EE1               	movwf	fsr1l,c
  5455  003178  0E05               	movlw	high _TaskTable
  5456  00317A  20F4               	addwfc	prodh,w,c
  5457  00317C  6EE2               	movwf	fsr1h,c
  5458  00317E  50DE               	movf	postinc2,w,c
  5459  003180  5CE6               	subwf	postinc1,w,c
  5460  003182  50DE               	movf	postinc2,w,c
  5461  003184  58E6               	subwfb	postinc1,w,c
  5462  003186  A0D8               	btfss	status,0,c
  5463  003188  D04E               	goto	l775
  5464                           
  5465                           ; BSR set to: 3
  5466                           ;os_sched.c: 111: {
  5467                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5468  00318A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5469  00318C  0D08               	mullw	8
  5470  00318E  0E03               	movlw	3
  5471  003190  26F3               	addwf	prodl,f,c
  5472  003192  0E00               	movlw	0
  5473  003194  22F4               	addwfc	prodh,f,c
  5474  003196  0E86               	movlw	low _TaskTable
  5475  003198  24F3               	addwf	prodl,w,c
  5476  00319A  6ED9               	movwf	fsr2l,c
  5477  00319C  0E05               	movlw	high _TaskTable
  5478  00319E  20F4               	addwfc	prodh,w,c
  5479  0031A0  6EDA               	movwf	fsr2h,c
  5480  0031A2  0E00               	movlw	0
  5481  0031A4  6EDE               	movwf	postinc2,c
  5482  0031A6  0E00               	movlw	0
  5483  0031A8  6EDD               	movwf	postdec2,c
  5484                           
  5485                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5486  0031AA  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5487  0031AC  0D08               	mullw	8
  5488  0031AE  0E02               	movlw	2
  5489  0031B0  26F3               	addwf	prodl,f,c
  5490  0031B2  0E00               	movlw	0
  5491  0031B4  22F4               	addwfc	prodh,f,c
  5492  0031B6  0E86               	movlw	low _TaskTable
  5493  0031B8  24F3               	addwf	prodl,w,c
  5494  0031BA  6ED9               	movwf	fsr2l,c
  5495  0031BC  0E05               	movlw	high _TaskTable
  5496  0031BE  20F4               	addwfc	prodh,w,c
  5497  0031C0  6EDA               	movwf	fsr2h,c
  5498  0031C2  0E01               	movlw	1
  5499  0031C4  6EDF               	movwf	indf2,c
  5500                           
  5501                           ; BSR set to: 3
  5502                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5503  0031C6  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5504  0031C8  0D08               	mullw	8
  5505  0031CA  0E86               	movlw	low _TaskTable
  5506  0031CC  24F3               	addwf	prodl,w,c
  5507  0031CE  6ED9               	movwf	fsr2l,c
  5508  0031D0  0E05               	movlw	high _TaskTable
  5509  0031D2  20F4               	addwfc	prodh,w,c
  5510  0031D4  6EDA               	movwf	fsr2h,c
  5511  0031D6  D801               	call	u16048
  5512  0031D8  D017               	goto	u16049
  5513  0031DA                     u16048:
  5514  0031DA  0005               	push	
  5515  0031DC  6EFA               	movwf	pclath,c
  5516  0031DE  50DE               	movf	postinc2,w,c
  5517  0031E0  6EFD               	movwf	tosl,c
  5518  0031E2  50DE               	movf	postinc2,w,c
  5519  0031E4  6EFE               	movwf	tosh,c
  5520  0031E6  50F8               	movf	tblptru,w,c
  5521  0031E8  6EFF               	movwf	tosu,c
  5522  0031EA  50FA               	movf	pclath,w,c
  5523  0031EC  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5524  0031EE  0D08               	mullw	8
  5525  0031F0  0E07               	movlw	7
  5526  0031F2  26F3               	addwf	prodl,f,c
  5527  0031F4  0E00               	movlw	0
  5528  0031F6  22F4               	addwfc	prodh,f,c
  5529  0031F8  0E86               	movlw	low _TaskTable
  5530  0031FA  24F3               	addwf	prodl,w,c
  5531  0031FC  6ED9               	movwf	fsr2l,c
  5532  0031FE  0E05               	movlw	high _TaskTable
  5533  003200  20F4               	addwfc	prodh,w,c
  5534  003202  6EDA               	movwf	fsr2h,c
  5535  003204  50DF               	movf	indf2,w,c
  5536  003206  0012               	return		;indir
  5537  003208                     u16049:
  5538                           
  5539                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5540  003208  0103               	movlb	3	; () banked
  5541  00320A  51FF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5542  00320C  0D08               	mullw	8
  5543  00320E  0E02               	movlw	2
  5544  003210  26F3               	addwf	prodl,f,c
  5545  003212  0E00               	movlw	0
  5546  003214  22F4               	addwfc	prodh,f,c
  5547  003216  0E86               	movlw	low _TaskTable
  5548  003218  24F3               	addwf	prodl,w,c
  5549  00321A  6ED9               	movwf	fsr2l,c
  5550  00321C  0E05               	movlw	high _TaskTable
  5551  00321E  20F4               	addwfc	prodh,w,c
  5552  003220  6EDA               	movwf	fsr2h,c
  5553  003222  0E00               	movlw	0
  5554  003224  6EDF               	movwf	indf2,c
  5555  003226                     l775:
  5556                           
  5557                           ; BSR set to: 3
  5558                           
  5559                           ; BSR set to: 3
  5560                           
  5561                           ;os_sched.c: 117: else
  5562                           ;os_sched.c: 118: {
  5563                           
  5564                           ; BSR set to: 3
  5565  003226  2BFF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5566  003228  D774               	goto	l16146
  5567  00322A                     __end_of_ScheduleTasks:
  5568                           	opt stack 0
  5569                           tosu	equ	0xFFF
  5570                           tosh	equ	0xFFE
  5571                           tosl	equ	0xFFD
  5572                           pclath	equ	0xFFA
  5573                           tblptru	equ	0xFF8
  5574                           tblptrh	equ	0xFF7
  5575                           tblptrl	equ	0xFF6
  5576                           tablat	equ	0xFF5
  5577                           prodh	equ	0xFF4
  5578                           prodl	equ	0xFF3
  5579                           intcon	equ	0xFF2
  5580                           intcon2	equ	0xFF1
  5581                           intcon3	equ	0xFF0
  5582                           postinc0	equ	0xFEE
  5583                           wreg	equ	0xFE8
  5584                           postinc1	equ	0xFE6
  5585                           postdec1	equ	0xFE5
  5586                           fsr1h	equ	0xFE2
  5587                           fsr1l	equ	0xFE1
  5588                           indf2	equ	0xFDF
  5589                           postinc2	equ	0xFDE
  5590                           postdec2	equ	0xFDD
  5591                           fsr2h	equ	0xFDA
  5592                           fsr2l	equ	0xFD9
  5593                           status	equ	0xFD8
  5594                           
  5595 ;; *************** function _InitializeTasks *****************
  5596 ;; Defined at:
  5597 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  ActiveTaskIn    1    2[BANK3 ] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5612 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5613 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5614 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
  5615 ;;Total ram usage:        3 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:   21
  5618 ;; This function calls:
  5619 ;;		_I2cSlv_MainTask
  5620 ;;		_Led_MainTask
  5621 ;;		_MdmHttp_MainTask
  5622 ;;		_Mdm_DrvMainFn
  5623 ;;		_Mdm_MainTask
  5624 ;;		_MyApp_Task
  5625 ;;		_Rtcm_MainTask
  5626 ;;		_Term_MainTask
  5627 ;;		_UsbDevice_MainTask
  5628 ;;		_Wdg_MainTask
  5629 ;; This function is called by:
  5630 ;;		_Sch_MainScheduler
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text15
  5635  00522C                     __ptext15:
  5636                           	opt stack 0
  5637  00522C                     _InitializeTasks:
  5638                           	opt stack 8
  5639                           
  5640                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5641                           
  5642                           ; BSR set to: 3
  5643                           ;incstack = 0
  5644  00522C  0E00               	movlw	0
  5645  00522E  0103               	movlb	3	; () banked
  5646  005230  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5647                           
  5648                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5649  005232  0E00               	movlw	0
  5650  005234  6FFD               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5651  005236                     l16134:
  5652                           
  5653                           ; BSR set to: 3
  5654  005236  0E30               	movlw	low _TaskNumber
  5655  005238  6EF6               	movwf	tblptrl,c
  5656  00523A                     	if	1	;There is more than 1 active tblptr byte
  5657  00523A  0EFC               	movlw	high _TaskNumber
  5658  00523C  6EF7               	movwf	tblptrh,c
  5659  00523E                     	endif
  5660  00523E                     	if	0	;There are less than 3 active tblptr bytes
  5661  00523E                     	endif
  5662  00523E  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5663  005240  6FFB               	movwf	??_InitializeTasks& (0+255),b
  5664  005242  6BFC               	clrf	(??_InitializeTasks+1)& (0+255),b
  5665  005244  0009               	tblrd		*+
  5666  005246  50F5               	movf	tablat,w,c
  5667  005248  5DFB               	subwf	??_InitializeTasks& (0+255),w,b
  5668  00524A  0009               	tblrd		*+
  5669  00524C  50F5               	movf	tablat,w,c
  5670  00524E  59FC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5671  005250  B0D8               	btfsc	status,0,c
  5672  005252  0012               	return	
  5673                           
  5674                           ; BSR set to: 3
  5675                           ;os_sched.c: 86: {
  5676                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5677                           
  5678                           ; BSR set to: 3
  5679                           
  5680                           ; BSR set to: 3
  5681  005254  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5682  005256  0D08               	mullw	8
  5683  005258  0E86               	movlw	low _TaskTable
  5684  00525A  24F3               	addwf	prodl,w,c
  5685  00525C  6ED9               	movwf	fsr2l,c
  5686  00525E  0E05               	movlw	high _TaskTable
  5687  005260  20F4               	addwfc	prodh,w,c
  5688  005262  6EDA               	movwf	fsr2h,c
  5689  005264  D801               	call	u16008
  5690  005266  D017               	goto	u16009
  5691  005268                     u16008:
  5692  005268  0005               	push	
  5693  00526A  6EFA               	movwf	pclath,c
  5694  00526C  50DE               	movf	postinc2,w,c
  5695  00526E  6EFD               	movwf	tosl,c
  5696  005270  50DE               	movf	postinc2,w,c
  5697  005272  6EFE               	movwf	tosh,c
  5698  005274  50F8               	movf	tblptru,w,c
  5699  005276  6EFF               	movwf	tosu,c
  5700  005278  50FA               	movf	pclath,w,c
  5701  00527A  51FD               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5702  00527C  0D08               	mullw	8
  5703  00527E  0E07               	movlw	7
  5704  005280  26F3               	addwf	prodl,f,c
  5705  005282  0E00               	movlw	0
  5706  005284  22F4               	addwfc	prodh,f,c
  5707  005286  0E86               	movlw	low _TaskTable
  5708  005288  24F3               	addwf	prodl,w,c
  5709  00528A  6ED9               	movwf	fsr2l,c
  5710  00528C  0E05               	movlw	high _TaskTable
  5711  00528E  20F4               	addwfc	prodh,w,c
  5712  005290  6EDA               	movwf	fsr2h,c
  5713  005292  50DF               	movf	indf2,w,c
  5714  005294  0012               	return		;indir
  5715  005296                     u16009:
  5716  005296  0103               	movlb	3	; () banked
  5717  005298  2BFD               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5718  00529A  D7CD               	goto	l16134
  5719  00529C                     __end_of_InitializeTasks:
  5720                           	opt stack 0
  5721                           tosu	equ	0xFFF
  5722                           tosh	equ	0xFFE
  5723                           tosl	equ	0xFFD
  5724                           pclath	equ	0xFFA
  5725                           tblptru	equ	0xFF8
  5726                           tblptrh	equ	0xFF7
  5727                           tblptrl	equ	0xFF6
  5728                           tablat	equ	0xFF5
  5729                           prodh	equ	0xFF4
  5730                           prodl	equ	0xFF3
  5731                           intcon	equ	0xFF2
  5732                           intcon2	equ	0xFF1
  5733                           intcon3	equ	0xFF0
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           postinc1	equ	0xFE6
  5737                           postdec1	equ	0xFE5
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _MyApp_Task *****************
  5748 ;; Defined at:
  5749 ;;		line 140 in file "../Source/c/04_App/app.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  Options         1    wreg     unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  Options         1    0[COMRAM] unsigned char 
  5754 ;;  emptyNumber    13   19[BANK1 ] const unsigned char [13]
  5755 ;;  cmdAddNumber    4   35[BANK1 ] const unsigned char [4]
  5756 ;;  cmpString       3   32[BANK1 ] unsigned char [3]
  5757 ;;  numberInMemo    1   40[BANK1 ] unsigned char 
  5758 ;;  memoryResult    1   39[BANK1 ] enum E8114
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5771 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5772 ;;Total ram usage:       22 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:   19
  5775 ;; This function calls:
  5776 ;;		_GetCallerNumber
  5777 ;;		_GetLastInteractionNumber
  5778 ;;		_Led_SetLedBlinkTime
  5779 ;;		_Led_SetLedStatus
  5780 ;;		_Mdm_GetSmsData
  5781 ;;		_Mdm_HangPhoneCall
  5782 ;;		_Mdm_IsRinging
  5783 ;;		_Mdm_IsSmsReceived
  5784 ;;		_Mdm_RequestSmsData
  5785 ;;		_StringCompare
  5786 ;;		_StringCopy
  5787 ;;		_Uart_WriteConstString
  5788 ;;		_findEmptySpot
  5789 ;;		_initFsm
  5790 ;;		_initMemorizedNumbersCount
  5791 ;;		_isNumberInMemory
  5792 ;;		_parseCommand
  5793 ;;		_saveNumberInMemory
  5794 ;;		_waitSetupCall
  5795 ;; This function is called by:
  5796 ;;		_InitializeTasks
  5797 ;;		_ScheduleTasks
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text16
  5802  000DC8                     __ptext16:
  5803                           	opt stack 0
  5804  000DC8                     _MyApp_Task:
  5805                           	opt stack 9
  5806                           
  5807                           ;app.c: 142: const uint8_t emptyNumber[((UINT8)(13))] = {0};
  5808                           
  5809                           ; BSR set to: 3
  5810                           ;incstack = 0
  5811  000DC8  0E11               	movlw	low MyApp_Task@F9033
  5812  000DCA  6EF6               	movwf	tblptrl,c
  5813  000DCC                     	if	1	;There is more than 1 active tblptr byte
  5814  000DCC  0EFC               	movlw	high MyApp_Task@F9033
  5815  000DCE  6EF7               	movwf	tblptrh,c
  5816  000DD0                     	endif
  5817  000DD0                     	if	0	;There are less than 3 active tblptr bytes
  5818  000DD0                     	endif
  5819  000DD0  EE21  F013         	lfsr	2,MyApp_Task@emptyNumber
  5820  000DD4  0E0C               	movlw	12
  5821  000DD6                     u15770:
  5822  000DD6  0009               	tblrd		*+
  5823  000DD8  CFF5 FFDE          	movff	tablat,postinc2
  5824  000DDC  06E8               	decf	wreg,f,c
  5825  000DDE  E2FB               	bc	u15770
  5826                           
  5827                           ;app.c: 143: static UINT8 receivedNumber[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5
      +                          ', '6', '7', '8', '9'};
  5828                           ;app.c: 148: const uint8_t cmdAddNumber[] = {'N', 'U', 'M', '+'};
  5829  000DE0  0E24               	movlw	low MyApp_Task@F9036
  5830  000DE2  6EF6               	movwf	tblptrl,c
  5831  000DE4                     	if	1	;There is more than 1 active tblptr byte
  5832  000DE4  0EFC               	movlw	high MyApp_Task@F9036
  5833  000DE6  6EF7               	movwf	tblptrh,c
  5834  000DE8                     	endif
  5835  000DE8                     	if	0	;There are less than 3 active tblptr bytes
  5836  000DE8                     	endif
  5837  000DE8  0009               	tblrd		*+
  5838  000DEA  CFF5 F123          	movff	tablat,MyApp_Task@cmdAddNumber
  5839  000DEE  0009               	tblrd		*+
  5840  000DF0  CFF5 F124          	movff	tablat,MyApp_Task@cmdAddNumber+1
  5841  000DF4  0009               	tblrd		*+
  5842  000DF6  CFF5 F125          	movff	tablat,MyApp_Task@cmdAddNumber+2
  5843  000DFA  000A               	tblrd		*-
  5844  000DFC  CFF5 F126          	movff	tablat,MyApp_Task@cmdAddNumber+3
  5845                           
  5846                           ;app.c: 149: uint8_t cmpString[] = {'c', 'a', 't'};
  5847  000E00  C3CA  F120         	movff	MyApp_Task@F9038,MyApp_Task@cmpString
  5848  000E04  C3CB  F121         	movff	MyApp_Task@F9038+1,MyApp_Task@cmpString+1
  5849  000E08  C3CC  F122         	movff	MyApp_Task@F9038+2,MyApp_Task@cmpString+2
  5850                           
  5851                           ;app.c: 151: static gateFsmStates currentState = GATE_INIT;
  5852                           ;app.c: 152: I2cOpStsType memoryResult = OP_COMPLETE;
  5853  000E0C  0E01               	movlw	1
  5854  000E0E  0101               	movlb	1	; () banked
  5855  000E10  6F27               	movwf	MyApp_Task@memoryResult& (0+255),b
  5856                           
  5857                           ; BSR set to: 1
  5858                           ;app.c: 153: uint8_t numberInMemory = 0;
  5859  000E12  0E00               	movlw	0
  5860  000E14  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  5861                           
  5862                           ;app.c: 155: switch (SystemState)
  5863  000E16  D146               	goto	l2607
  5864  000E18                     
  5865                           ;app.c: 160: Led_SetLedBlinkTime(1u,100,900);
  5866                           
  5867                           ; BSR set to: 1
  5868  000E18  0E00               	movlw	0
  5869  000E1A  0100               	movlb	0	; () banked
  5870  000E1C  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5871  000E1E  0E64               	movlw	100
  5872  000E20  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5873  000E22  0E03               	movlw	3
  5874  000E24  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5875  000E26  0E84               	movlw	132
  5876  000E28  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5877  000E2A  0E01               	movlw	1
  5878  000E2C  ECA6  F02C         	call	_Led_SetLedBlinkTime
  5879                           
  5880                           ;app.c: 161: break;
  5881  000E30  0012               	return	
  5882  000E32                     
  5883                           ;app.c: 168: if (initFsm())
  5884  000E32  ECA9  F02E         	call	_initFsm	;wreg free
  5885  000E36  0900               	iorlw	0
  5886  000E38  B4D8               	btfsc	status,2,c
  5887  000E3A  0012               	return	
  5888                           
  5889                           ;app.c: 169: {
  5890                           ;app.c: 170: if (isMemoryEmpty)
  5891  000E3C  0101               	movlb	1	; () banked
  5892  000E3E  51FE               	movf	_isMemoryEmpty& (0+255),w,b
  5893  000E40  B4D8               	btfsc	status,2,c
  5894  000E42  D036               	goto	l2614
  5895                           
  5896                           ; BSR set to: 1
  5897                           ;app.c: 171: {
  5898                           ;app.c: 172: if (waitSetupCall())
  5899  000E44  ECC4  F02D         	call	_waitSetupCall	;wreg free
  5900  000E48  0900               	iorlw	0
  5901  000E4A  B4D8               	btfsc	status,2,c
  5902  000E4C  D003               	goto	l2615
  5903                           
  5904                           ;app.c: 173: {
  5905                           ;app.c: 174: currentState = GATE_SAVE_FIRST_MASTER;
  5906  000E4E  0E01               	movlw	1
  5907  000E50  0101               	movlb	1	; () banked
  5908  000E52  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5909  000E54                     l2615:
  5910                           
  5911                           ;app.c: 175: }
  5912                           ;app.c: 176: if (Mdm_IsSmsReceived())
  5913                           
  5914                           ; BSR set to: 1
  5915  000E54  EC5D  F032         	call	_Mdm_IsSmsReceived	;wreg free
  5916  000E58  0900               	iorlw	0
  5917  000E5A  A4D8               	btfss	status,2,c
  5918                           
  5919                           ;app.c: 177: {
  5920                           ;app.c: 178: Mdm_RequestSmsData();
  5921  000E5C  EC16  F034         	call	_Mdm_RequestSmsData	;wreg free
  5922                           
  5923                           ;app.c: 179: }
  5924                           ;app.c: 180: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  5925  000E60  0E9D               	movlw	low _smsText
  5926  000E62  0100               	movlb	0	; () banked
  5927  000E64  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  5928  000E66  0E04               	movlw	high _smsText
  5929  000E68  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  5930  000E6A  ECEE  F029         	call	_Mdm_GetSmsData	;wreg free
  5931  000E6E  06E8               	decf	wreg,f,c
  5932  000E70  A4D8               	btfss	status,2,c
  5933  000E72  0012               	return	
  5934                           
  5935                           ;app.c: 181: {
  5936                           ;app.c: 182: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  5937  000E74  0E2F               	movlw	low STR_29
  5938  000E76  0100               	movlb	0	; () banked
  5939  000E78  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  5940  000E7A  0EFF               	movlw	high STR_29
  5941  000E7C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  5942  000E7E  0E01               	movlw	1
  5943  000E80  EC78  F02F         	call	_Uart_WriteConstString
  5944                           
  5945                           ;app.c: 183: if (StringCompare(smsText, cmdAddNumber, sizeof(cmdAddNumber)))
  5946  000E84  0E9D               	movlw	low _smsText
  5947  000E86  0100               	movlb	0	; () banked
  5948  000E88  6F7D               	movwf	StringCompare@String1& (0+255),b
  5949  000E8A  0E04               	movlw	high _smsText
  5950  000E8C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
  5951  000E8E  0E23               	movlw	low MyApp_Task@cmdAddNumber
  5952  000E90  6F7F               	movwf	StringCompare@String2& (0+255),b
  5953  000E92  0E01               	movlw	high MyApp_Task@cmdAddNumber
  5954  000E94  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
  5955  000E96  0E00               	movlw	0
  5956  000E98  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
  5957  000E9A  0E04               	movlw	4
  5958  000E9C  6F81               	movwf	StringCompare@Len& (0+255),b
  5959  000E9E  EC23  F02D         	call	_StringCompare	;wreg free
  5960  000EA2  0900               	iorlw	0
  5961  000EA4  B4D8               	btfsc	status,2,c
  5962  000EA6  0012               	return	
  5963                           
  5964                           ;app.c: 184: {
  5965                           ;app.c: 185: currentState = GATE_SAVE_FIRST_MASTER;
  5966  000EA8  0E01               	movlw	1
  5967  000EAA  0101               	movlb	1	; () banked
  5968  000EAC  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5969                           
  5970                           ; BSR set to: 1
  5971                           ;app.c: 186: }
  5972                           ;app.c: 187: }
  5973                           ;app.c: 188: }
  5974                           
  5975                           ; BSR set to: 1
  5976  000EAE  0012               	return	
  5977  000EB0                     l2614:
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;app.c: 189: else
  5981                           ;app.c: 190: {
  5982                           ;app.c: 191: Led_SetLedStatus(1u, LED_STS_ON);
  5983                           
  5984                           ; BSR set to: 1
  5985  000EB0  0E01               	movlw	1
  5986  000EB2  0100               	movlb	0	; () banked
  5987  000EB4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  5988  000EB6  0E01               	movlw	1
  5989  000EB8  EC79  F031         	call	_Led_SetLedStatus
  5990                           
  5991                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5992  000EBC  0E03               	movlw	3
  5993  000EBE  0101               	movlb	1	; () banked
  5994  000EC0  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;app.c: 193: }
  5998                           ;app.c: 194: }
  5999                           ;app.c: 195: break;
  6000                           
  6001                           ; BSR set to: 1
  6002  000EC2  0012               	return	
  6003  000EC4                     
  6004                           ; BSR set to: 1
  6005                           ;app.c: 198: saveNumberInMemory(16, GetCallerNumber());
  6006                           
  6007                           ; BSR set to: 1
  6008  000EC4  ECAF  F030         	call	_GetCallerNumber	;wreg free
  6009  000EC8  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
  6010  000ECC  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
  6011  000ED0  0E10               	movlw	16
  6012  000ED2  EC6B  F033         	call	_saveNumberInMemory
  6013                           
  6014                           ;app.c: 199: currentState = GATE_UPDATE_NUMBERS_COUNT;
  6015  000ED6  0E02               	movlw	2
  6016  000ED8  0101               	movlb	1	; () banked
  6017  000EDA  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6018                           
  6019                           ;app.c: 200: break;
  6020  000EDC  0012               	return	
  6021  000EDE                     
  6022                           ; BSR set to: 1
  6023                           ;app.c: 203: initMemorizedNumbersCount();
  6024                           
  6025                           ; BSR set to: 1
  6026  000EDE  EC78  F033         	call	_initMemorizedNumbersCount	;wreg free
  6027                           
  6028                           ;app.c: 204: Led_SetLedStatus(1u, LED_STS_ON);
  6029  000EE2  0E01               	movlw	1
  6030  000EE4  0100               	movlb	0	; () banked
  6031  000EE6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  6032  000EE8  0E01               	movlw	1
  6033  000EEA  EC79  F031         	call	_Led_SetLedStatus
  6034                           
  6035                           ;app.c: 205: currentState = GATE_WAIT_EVENT;
  6036  000EEE  0E03               	movlw	3
  6037  000EF0  0101               	movlb	1	; () banked
  6038  000EF2  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6039                           
  6040                           ;app.c: 206: break;
  6041  000EF4  0012               	return	
  6042  000EF6                     
  6043                           ; BSR set to: 1
  6044                           ;app.c: 209: if (Mdm_IsSmsReceived())
  6045                           
  6046                           ; BSR set to: 1
  6047  000EF6  EC5D  F032         	call	_Mdm_IsSmsReceived	;wreg free
  6048  000EFA  0900               	iorlw	0
  6049  000EFC  A4D8               	btfss	status,2,c
  6050                           
  6051                           ;app.c: 210: {
  6052                           ;app.c: 211: Mdm_RequestSmsData();
  6053  000EFE  EC16  F034         	call	_Mdm_RequestSmsData	;wreg free
  6054                           
  6055                           ;app.c: 212: }
  6056                           ;app.c: 213: if (Mdm_GetSmsData(smsText) == SmsDataReady)
  6057  000F02  0E9D               	movlw	low _smsText
  6058  000F04  0100               	movlb	0	; () banked
  6059  000F06  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
  6060  000F08  0E04               	movlw	high _smsText
  6061  000F0A  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
  6062  000F0C  ECEE  F029         	call	_Mdm_GetSmsData	;wreg free
  6063  000F10  06E8               	decf	wreg,f,c
  6064  000F12  A4D8               	btfss	status,2,c
  6065  000F14  D022               	goto	l2625
  6066                           
  6067                           ;app.c: 214: {
  6068                           ;app.c: 215: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
  6069  000F16  0E2F               	movlw	low STR_29
  6070  000F18  0100               	movlb	0	; () banked
  6071  000F1A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
  6072  000F1C  0EFF               	movlw	high STR_29
  6073  000F1E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
  6074  000F20  0E01               	movlw	1
  6075  000F22  EC78  F02F         	call	_Uart_WriteConstString
  6076                           
  6077                           ;app.c: 216: currentState = parseCommand(smsText);
  6078  000F26  0E9D               	movlw	low _smsText
  6079  000F28  0100               	movlb	0	; () banked
  6080  000F2A  6F88               	movwf	parseCommand@text& (0+255),b
  6081  000F2C  0E04               	movlw	high _smsText
  6082  000F2E  6F89               	movwf	(parseCommand@text+1)& (0+255),b
  6083  000F30  EC1D  F022         	call	_parseCommand	;wreg free
  6084  000F34  0101               	movlb	1	; () banked
  6085  000F36  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;app.c: 217: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
  6089  000F38  EC42  F034         	call	_GetLastInteractionNumber	;wreg free
  6090  000F3C  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
  6091  000F40  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
  6092  000F44  0EE0               	movlw	low MyApp_Task@receivedNumber
  6093  000F46  0100               	movlb	0	; () banked
  6094  000F48  6F87               	movwf	StringCopy@DestStr& (0+255),b
  6095  000F4A  0E04               	movlw	high MyApp_Task@receivedNumber
  6096  000F4C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
  6097  000F4E  0E00               	movlw	0
  6098  000F50  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
  6099  000F52  0E0D               	movlw	13
  6100  000F54  6F89               	movwf	StringCopy@Len& (0+255),b
  6101  000F56  ECBB  F02A         	call	_StringCopy	;wreg free
  6102  000F5A                     l2625:
  6103                           
  6104                           ;app.c: 218: }
  6105                           ;app.c: 219: if (Mdm_IsRinging())
  6106  000F5A  EC4B  F032         	call	_Mdm_IsRinging	;wreg free
  6107  000F5E  0900               	iorlw	0
  6108  000F60  B4D8               	btfsc	status,2,c
  6109  000F62  0012               	return	
  6110                           
  6111                           ;app.c: 220: {
  6112                           ;app.c: 221: Mdm_HangPhoneCall();
  6113  000F64  ECF4  F033         	call	_Mdm_HangPhoneCall	;wreg free
  6114                           
  6115                           ;app.c: 222: currentState = GATE_TRIGGER_CMD;
  6116  000F68  0E07               	movlw	7
  6117  000F6A  0101               	movlb	1	; () banked
  6118  000F6C  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6119                           
  6120                           ; BSR set to: 1
  6121                           ;app.c: 223: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
  6122  000F6E  ECAF  F030         	call	_GetCallerNumber	;wreg free
  6123  000F72  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
  6124  000F76  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
  6125  000F7A  0EE0               	movlw	low MyApp_Task@receivedNumber
  6126  000F7C  0100               	movlb	0	; () banked
  6127  000F7E  6F87               	movwf	StringCopy@DestStr& (0+255),b
  6128  000F80  0E04               	movlw	high MyApp_Task@receivedNumber
  6129  000F82  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
  6130  000F84  0E00               	movlw	0
  6131  000F86  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
  6132  000F88  0E0D               	movlw	13
  6133  000F8A  6F89               	movwf	StringCopy@Len& (0+255),b
  6134  000F8C  ECBB  F02A         	call	_StringCopy	;wreg free
  6135                           
  6136                           ;app.c: 224: }
  6137                           ;app.c: 225: break;
  6138  000F90  0012               	return	
  6139  000F92                     
  6140                           ;app.c: 228: numberInMemory = isNumberInMemory(receivedNumber);
  6141  000F92  0EE0               	movlw	low MyApp_Task@receivedNumber
  6142  000F94  0101               	movlb	1	; () banked
  6143  000F96  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6144  000F98  0E04               	movlw	high MyApp_Task@receivedNumber
  6145  000F9A  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6146  000F9C  ECB7  F024         	call	_isNumberInMemory	;wreg free
  6147  000FA0  0101               	movlb	1	; () banked
  6148  000FA2  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6149                           
  6150                           ; BSR set to: 1
  6151                           ;app.c: 229: if (numberInMemory == 1)
  6152  000FA4  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6153  000FA6  A4D8               	btfss	status,2,c
  6154  000FA8  D003               	goto	l2628
  6155                           
  6156                           ; BSR set to: 1
  6157                           ;app.c: 230: {
  6158                           ;app.c: 231: currentState = GATE_WAIT_EVENT;
  6159  000FAA  0E03               	movlw	3
  6160  000FAC  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6161                           
  6162                           ;app.c: 232: }
  6163  000FAE  0012               	return	
  6164  000FB0                     l2628:
  6165                           
  6166                           ; BSR set to: 1
  6167                           ;app.c: 233: else if (numberInMemory != 0 && numberInMemory != 1)
  6168                           
  6169                           ; BSR set to: 1
  6170  000FB0  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6171  000FB2  B4D8               	btfsc	status,2,c
  6172  000FB4  0012               	return	
  6173                           
  6174                           ; BSR set to: 1
  6175  000FB6  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6176  000FB8  B4D8               	btfsc	status,2,c
  6177  000FBA  0012               	return	
  6178                           
  6179                           ; BSR set to: 1
  6180                           ;app.c: 234: {
  6181                           ;app.c: 235: currentState = GATE_SAVE_NEW;
  6182  000FBC  0E05               	movlw	5
  6183  000FBE  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6184                           
  6185                           ; BSR set to: 1
  6186                           ;app.c: 236: }
  6187                           ;app.c: 237: break;
  6188                           
  6189                           ; BSR set to: 1
  6190  000FC0  0012               	return	
  6191  000FC2                     
  6192                           ; BSR set to: 1
  6193                           ;app.c: 240: numberInMemory = findEmptySpot();
  6194                           
  6195                           ; BSR set to: 1
  6196  000FC2  ECBA  F029         	call	_findEmptySpot	;wreg free
  6197  000FC6  0101               	movlb	1	; () banked
  6198  000FC8  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6199                           
  6200                           ; BSR set to: 1
  6201                           ;app.c: 241: if (numberInMemory == 1)
  6202  000FCA  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6203  000FCC  A4D8               	btfss	status,2,c
  6204  000FCE  D003               	goto	l2632
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;app.c: 242: {
  6208                           ;app.c: 243: currentState = GATE_WAIT_EVENT;
  6209  000FD0  0E03               	movlw	3
  6210  000FD2  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6211                           
  6212                           ;app.c: 244: }
  6213  000FD4  0012               	return	
  6214  000FD6                     l2632:
  6215                           
  6216                           ; BSR set to: 1
  6217                           ;app.c: 245: else if (numberInMemory != 0 && numberInMemory != 1)
  6218                           
  6219                           ; BSR set to: 1
  6220  000FD6  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6221  000FD8  B4D8               	btfsc	status,2,c
  6222  000FDA  0012               	return	
  6223                           
  6224                           ; BSR set to: 1
  6225  000FDC  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6226  000FDE  B4D8               	btfsc	status,2,c
  6227  000FE0  0012               	return	
  6228                           
  6229                           ; BSR set to: 1
  6230                           ;app.c: 246: {
  6231                           ;app.c: 247: saveNumberInMemory(numberInMemory, smsText + 3);
  6232  000FE2  0EA0               	movlw	low (_smsText+3)
  6233  000FE4  0100               	movlb	0	; () banked
  6234  000FE6  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6235  000FE8  0E04               	movlw	high (_smsText+3)
  6236  000FEA  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6237  000FEC  0101               	movlb	1	; () banked
  6238  000FEE  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6239  000FF0  EC6B  F033         	call	_saveNumberInMemory
  6240                           
  6241                           ;app.c: 248: currentState = GATE_WAIT_EVENT;
  6242  000FF4  0E03               	movlw	3
  6243  000FF6  0101               	movlb	1	; () banked
  6244  000FF8  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6245                           
  6246                           ; BSR set to: 1
  6247                           ;app.c: 249: }
  6248                           ;app.c: 250: break;
  6249                           
  6250                           ; BSR set to: 1
  6251  000FFA  0012               	return	
  6252  000FFC                     
  6253                           ; BSR set to: 1
  6254                           ;app.c: 253: numberInMemory = isNumberInMemory(receivedNumber);
  6255                           
  6256                           ; BSR set to: 1
  6257  000FFC  0EE0               	movlw	low MyApp_Task@receivedNumber
  6258  000FFE  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6259  001000  0E04               	movlw	high MyApp_Task@receivedNumber
  6260  001002  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6261  001004  ECB7  F024         	call	_isNumberInMemory	;wreg free
  6262  001008  0101               	movlb	1	; () banked
  6263  00100A  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6264                           
  6265                           ; BSR set to: 1
  6266                           ;app.c: 254: if (numberInMemory == 1)
  6267  00100C  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6268  00100E  A4D8               	btfss	status,2,c
  6269  001010  D003               	goto	l2636
  6270                           
  6271                           ; BSR set to: 1
  6272                           ;app.c: 255: {
  6273                           ;app.c: 256: currentState = GATE_WAIT_EVENT;
  6274  001012  0E03               	movlw	3
  6275  001014  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6276                           
  6277                           ;app.c: 257: }
  6278  001016  0012               	return	
  6279  001018                     l2636:
  6280                           
  6281                           ; BSR set to: 1
  6282                           ;app.c: 258: else if (numberInMemory != 0 && numberInMemory != 1)
  6283                           
  6284                           ; BSR set to: 1
  6285  001018  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6286  00101A  B4D8               	btfsc	status,2,c
  6287  00101C  0012               	return	
  6288                           
  6289                           ; BSR set to: 1
  6290  00101E  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6291  001020  B4D8               	btfsc	status,2,c
  6292  001022  0012               	return	
  6293                           
  6294                           ; BSR set to: 1
  6295                           ;app.c: 259: {
  6296                           ;app.c: 260: saveNumberInMemory(numberInMemory, emptyNumber);
  6297  001024  0E13               	movlw	low MyApp_Task@emptyNumber
  6298  001026  0100               	movlb	0	; () banked
  6299  001028  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
  6300  00102A  0E01               	movlw	high MyApp_Task@emptyNumber
  6301  00102C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
  6302  00102E  0101               	movlb	1	; () banked
  6303  001030  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6304  001032  EC6B  F033         	call	_saveNumberInMemory
  6305                           
  6306                           ;app.c: 261: currentState = GATE_WAIT_EVENT;
  6307  001036  0E03               	movlw	3
  6308  001038  0101               	movlb	1	; () banked
  6309  00103A  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6310                           
  6311                           ; BSR set to: 1
  6312                           ;app.c: 262: }
  6313                           ;app.c: 263: break;
  6314                           
  6315                           ; BSR set to: 1
  6316  00103C  0012               	return	
  6317  00103E                     
  6318                           ; BSR set to: 1
  6319                           ;app.c: 266: numberInMemory = isNumberInMemory(receivedNumber);
  6320                           
  6321                           ; BSR set to: 1
  6322  00103E  0EE0               	movlw	low MyApp_Task@receivedNumber
  6323  001040  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
  6324  001042  0E04               	movlw	high MyApp_Task@receivedNumber
  6325  001044  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
  6326  001046  ECB7  F024         	call	_isNumberInMemory	;wreg free
  6327  00104A  0101               	movlb	1	; () banked
  6328  00104C  6F28               	movwf	MyApp_Task@numberInMemory& (0+255),b
  6329                           
  6330                           ; BSR set to: 1
  6331                           ;app.c: 267: if (numberInMemory == 1)
  6332  00104E  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6333  001050  A4D8               	btfss	status,2,c
  6334  001052  D003               	goto	l2640
  6335                           
  6336                           ; BSR set to: 1
  6337                           ;app.c: 268: {
  6338                           ;app.c: 269: currentState = GATE_WAIT_EVENT;
  6339  001054  0E03               	movlw	3
  6340  001056  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6341                           
  6342                           ;app.c: 270: }
  6343  001058  0012               	return	
  6344  00105A                     l2640:
  6345                           
  6346                           ; BSR set to: 1
  6347                           ;app.c: 271: else if (numberInMemory != 0 && numberInMemory != 1)
  6348                           
  6349                           ; BSR set to: 1
  6350  00105A  5128               	movf	MyApp_Task@numberInMemory& (0+255),w,b
  6351  00105C  B4D8               	btfsc	status,2,c
  6352  00105E  0012               	return	
  6353                           
  6354                           ; BSR set to: 1
  6355  001060  0528               	decf	MyApp_Task@numberInMemory& (0+255),w,b
  6356  001062  B4D8               	btfsc	status,2,c
  6357  001064  0012               	return	
  6358                           
  6359                           ; BSR set to: 1
  6360                           ;app.c: 272: {
  6361                           ;app.c: 273: currentState = GATE_ACTIVATE_RELAY;
  6362  001066  0E08               	movlw	8
  6363  001068  6FD6               	movwf	MyApp_Task@currentState& (0+255),b
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;app.c: 281: }
  6367                           
  6368                           ; BSR set to: 1
  6369                           ;app.c: 280: break;
  6370                           
  6371                           ;app.c: 279: default:
  6372                           
  6373                           ; BSR set to: 1
  6374                           ;app.c: 277: break;
  6375                           
  6376                           ;app.c: 274: }
  6377                           ;app.c: 276: case GATE_ACTIVATE_RELAY:
  6378                           
  6379                           ; BSR set to: 1
  6380                           
  6381                           ; BSR set to: 1
  6382  00106A  0012               	return	
  6383  00106C                     
  6384                           ; BSR set to: 1
  6385  00106C  0101               	movlb	1	; () banked
  6386  00106E  51D6               	movf	MyApp_Task@currentState& (0+255),w,b
  6387                           
  6388                           ; Switch size 1, requested type "space"
  6389                           ; Number of cases is 9, Range of values is 0 to 8
  6390                           ; switch strategies available:
  6391                           ; Name         Instructions Cycles
  6392                           ; simple_byte           28    15 (average)
  6393                           ;	Chosen strategy is simple_byte
  6394  001070  0A00               	xorlw	0	; case 0
  6395  001072  B4D8               	btfsc	status,2,c
  6396  001074  D6DE               	goto	l2612
  6397  001076  0A01               	xorlw	1	; case 1
  6398  001078  B4D8               	btfsc	status,2,c
  6399  00107A  D724               	goto	l2621
  6400  00107C  0A03               	xorlw	3	; case 2
  6401  00107E  B4D8               	btfsc	status,2,c
  6402  001080  D72E               	goto	l2622
  6403  001082  0A01               	xorlw	1	; case 3
  6404  001084  B4D8               	btfsc	status,2,c
  6405  001086  D737               	goto	l2623
  6406  001088  0A07               	xorlw	7	; case 4
  6407  00108A  B4D8               	btfsc	status,2,c
  6408  00108C  D782               	goto	l2627
  6409  00108E  0A01               	xorlw	1	; case 5
  6410  001090  B4D8               	btfsc	status,2,c
  6411  001092  D797               	goto	l2631
  6412  001094  0A03               	xorlw	3	; case 6
  6413  001096  B4D8               	btfsc	status,2,c
  6414  001098  D7B1               	goto	l2635
  6415  00109A  0A01               	xorlw	1	; case 7
  6416  00109C  B4D8               	btfsc	status,2,c
  6417  00109E  D7CF               	goto	l2639
  6418  0010A0  0A0F               	xorlw	15	; case 8
  6419                           
  6420                           ; BSR set to: 1
  6421                           ;app.c: 287: }
  6422                           
  6423                           ; BSR set to: 1
  6424                           ;app.c: 286: break;
  6425                           
  6426                           ;app.c: 285: default:
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;app.c: 282: break;
  6430  0010A2  0012               	return	
  6431  0010A4                     l2607:
  6432                           
  6433                           ; BSR set to: 1
  6434                           
  6435                           ; BSR set to: 1
  6436  0010A4  0100               	movlb	0	; () banked
  6437  0010A6  51D3               	movf	_SystemState& (0+255),w,b
  6438                           
  6439                           ; Switch size 1, requested type "space"
  6440                           ; Number of cases is 2, Range of values is 0 to 1
  6441                           ; switch strategies available:
  6442                           ; Name         Instructions Cycles
  6443                           ; simple_byte            7     4 (average)
  6444                           ;	Chosen strategy is simple_byte
  6445  0010A8  0A00               	xorlw	0	; case 0
  6446  0010AA  B4D8               	btfsc	status,2,c
  6447  0010AC  D6B5               	goto	l2608
  6448  0010AE  0A01               	xorlw	1	; case 1
  6449  0010B0  A4D8               	btfss	status,2,c
  6450  0010B2  0012               	return	
  6451  0010B4  D7DB               	goto	l2611
  6452  0010B6                     __end_of_MyApp_Task:
  6453                           	opt stack 0
  6454                           tosu	equ	0xFFF
  6455                           tosh	equ	0xFFE
  6456                           tosl	equ	0xFFD
  6457                           pclath	equ	0xFFA
  6458                           tblptru	equ	0xFF8
  6459                           tblptrh	equ	0xFF7
  6460                           tblptrl	equ	0xFF6
  6461                           tablat	equ	0xFF5
  6462                           prodh	equ	0xFF4
  6463                           prodl	equ	0xFF3
  6464                           intcon	equ	0xFF2
  6465                           intcon2	equ	0xFF1
  6466                           intcon3	equ	0xFF0
  6467                           postinc0	equ	0xFEE
  6468                           wreg	equ	0xFE8
  6469                           postinc1	equ	0xFE6
  6470                           postdec1	equ	0xFE5
  6471                           fsr1h	equ	0xFE2
  6472                           fsr1l	equ	0xFE1
  6473                           indf2	equ	0xFDF
  6474                           postinc2	equ	0xFDE
  6475                           postdec2	equ	0xFDD
  6476                           fsr2h	equ	0xFDA
  6477                           fsr2l	equ	0xFD9
  6478                           status	equ	0xFD8
  6479                           
  6480 ;; *************** function _Term_MainTask *****************
  6481 ;; Defined at:
  6482 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  Options         1    wreg     unsigned char 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  Options         1    0[COMRAM] unsigned char 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:   17
  6503 ;; This function calls:
  6504 ;;		_Term_MainSm
  6505 ;; This function is called by:
  6506 ;;		_InitializeTasks
  6507 ;;		_ScheduleTasks
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text17
  6512  0066BC                     __ptext17:
  6513                           	opt stack 0
  6514  0066BC                     _Term_MainTask:
  6515                           	opt stack 11
  6516                           
  6517                           ;term.c: 847: switch (SystemState)
  6518                           
  6519                           ;incstack = 0
  6520  0066BC  D003               	goto	l2481
  6521  0066BE                     
  6522                           ;term.c: 858: Term_MainSm();
  6523  0066BE  ECD2  F009         	call	_Term_MainSm	;wreg free
  6524                           
  6525                           ;term.c: 865: }
  6526                           
  6527                           ;term.c: 864: break;
  6528                           
  6529                           ;term.c: 863: default:
  6530                           
  6531                           ;term.c: 860: break;
  6532  0066C2  0012               	return	
  6533  0066C4                     l2481:
  6534  0066C4  0100               	movlb	0	; () banked
  6535  0066C6  51D3               	movf	_SystemState& (0+255),w,b
  6536                           
  6537                           ; Switch size 1, requested type "space"
  6538                           ; Number of cases is 2, Range of values is 0 to 1
  6539                           ; switch strategies available:
  6540                           ; Name         Instructions Cycles
  6541                           ; simple_byte            7     4 (average)
  6542                           ;	Chosen strategy is simple_byte
  6543  0066C8  0A00               	xorlw	0	; case 0
  6544  0066CA  B4D8               	btfsc	status,2,c
  6545  0066CC  0012               	return	
  6546  0066CE  0A01               	xorlw	1	; case 1
  6547  0066D0  A4D8               	btfss	status,2,c
  6548  0066D2  0012               	return	
  6549  0066D4  D7F4               	goto	l2484
  6550  0066D6                     __end_of_Term_MainTask:
  6551                           	opt stack 0
  6552                           tosu	equ	0xFFF
  6553                           tosh	equ	0xFFE
  6554                           tosl	equ	0xFFD
  6555                           pclath	equ	0xFFA
  6556                           tblptru	equ	0xFF8
  6557                           tblptrh	equ	0xFF7
  6558                           tblptrl	equ	0xFF6
  6559                           tablat	equ	0xFF5
  6560                           prodh	equ	0xFF4
  6561                           prodl	equ	0xFF3
  6562                           intcon	equ	0xFF2
  6563                           intcon2	equ	0xFF1
  6564                           intcon3	equ	0xFF0
  6565                           postinc0	equ	0xFEE
  6566                           wreg	equ	0xFE8
  6567                           postinc1	equ	0xFE6
  6568                           postdec1	equ	0xFE5
  6569                           fsr1h	equ	0xFE2
  6570                           fsr1l	equ	0xFE1
  6571                           indf2	equ	0xFDF
  6572                           postinc2	equ	0xFDE
  6573                           postdec2	equ	0xFDD
  6574                           fsr2h	equ	0xFDA
  6575                           fsr2l	equ	0xFD9
  6576                           status	equ	0xFD8
  6577                           
  6578 ;; *************** function _Rtcm_MainTask *****************
  6579 ;; Defined at:
  6580 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  Options         1    wreg     unsigned char 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  Options         1    0[COMRAM] unsigned char 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:   14
  6601 ;; This function calls:
  6602 ;;		_Rtcc_AlarmConfig
  6603 ;;		_Rtcc_LockRtc
  6604 ;;		_Rtcc_RtcConfig
  6605 ;;		_Rtcc_SetRtcStatus
  6606 ;;		_Rtcc_UnlockRtc
  6607 ;;		_Rtcm_GetRtccDate
  6608 ;;		_Rtcm_SetRtccDate
  6609 ;; This function is called by:
  6610 ;;		_InitializeTasks
  6611 ;;		_ScheduleTasks
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text18
  6616  004E18                     __ptext18:
  6617                           	opt stack 0
  6618  004E18                     _Rtcm_MainTask:
  6619                           	opt stack 14
  6620                           
  6621                           ;rtcm.c: 101: switch (SystemState)
  6622                           
  6623                           ;incstack = 0
  6624  004E18  D03D               	goto	l2211
  6625  004E1A                     l2212:
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6629  004E1A  86CD               	bsf	4045,3,c	;volatile
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6633  004E1C  0E00               	movlw	0
  6634  004E1E  0103               	movlb	3	; () banked
  6635  004E20  6FB4               	movwf	_RtcConfig& (0+255),b
  6636                           
  6637                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6638  004E22  0E00               	movlw	0
  6639  004E24  6FB5               	movwf	(_RtcConfig+1)& (0+255),b
  6640                           
  6641                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6642  004E26  0E01               	movlw	1
  6643  004E28  6FB6               	movwf	(_RtcConfig+2)& (0+255),b
  6644                           
  6645                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6646  004E2A  0E01               	movlw	1
  6647  004E2C  6FB7               	movwf	(_RtcConfig+3)& (0+255),b
  6648                           
  6649                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6650  004E2E  0E01               	movlw	1
  6651  004E30  6FB0               	movwf	_AlCfg& (0+255),b
  6652                           
  6653                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6654  004E32  0E01               	movlw	1
  6655  004E34  6FB1               	movwf	(_AlCfg+1)& (0+255),b
  6656                           
  6657                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6658  004E36  0E01               	movlw	1
  6659  004E38  6FB2               	movwf	(_AlCfg+2)& (0+255),b
  6660                           
  6661                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6662  004E3A  0E00               	movlw	0
  6663  004E3C  6FB3               	movwf	(_AlCfg+3)& (0+255),b
  6664                           
  6665                           ; BSR set to: 3
  6666                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6667  004E3E  EC06  F034         	call	_Rtcc_UnlockRtc	;wreg free
  6668                           
  6669                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6670  004E42  0EB4               	movlw	low _RtcConfig
  6671  004E44  0100               	movlb	0	; () banked
  6672  004E46  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6673  004E48  0E03               	movlw	high _RtcConfig
  6674  004E4A  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6675  004E4C  EC18  F024         	call	_Rtcc_RtcConfig	;wreg free
  6676                           
  6677                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6678  004E50  0EB0               	movlw	low _AlCfg
  6679  004E52  0100               	movlb	0	; () banked
  6680  004E54  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6681  004E56  0E03               	movlw	high _AlCfg
  6682  004E58  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6683  004E5A  EC84  F029         	call	_Rtcc_AlarmConfig	;wreg free
  6684                           
  6685                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6686  004E5E  0E01               	movlw	1
  6687  004E60  ECB5  F033         	call	_Rtcc_SetRtcStatus
  6688                           
  6689                           ;rtcm.c: 127: Rtcc_LockRtc();
  6690  004E64  EC0E  F034         	call	_Rtcc_LockRtc	;wreg free
  6691                           
  6692                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6693  004E68  EE24  F063         	lfsr	2,_Rtcm_SystemDate
  6694  004E6C  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6695  004E70  0E07               	movlw	7
  6696  004E72                     u15751:
  6697  004E72  CFDB FFEB          	movff	plusw2,plusw0
  6698  004E76  06E8               	decf	wreg,f,c
  6699  004E78  E2FC               	bc	u15751
  6700  004E7A  EC52  F02C         	call	_Rtcm_SetRtccDate	;wreg free
  6701                           
  6702                           ;rtcm.c: 154: break;
  6703  004E7E  0012               	return	
  6704  004E80                     
  6705                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6706  004E80  EC55  F02A         	call	_Rtcm_GetRtccDate	;wreg free
  6707  004E84  EE24  F063         	lfsr	2,_Rtcm_SystemDate
  6708  004E88  0E07               	movlw	7
  6709  004E8A                     u15761:
  6710  004E8A  CFEB FFDB          	movff	plusw0,plusw2
  6711  004E8E  06E8               	decf	wreg,f,c
  6712  004E90  E2FC               	bc	u15761
  6713                           
  6714                           ;rtcm.c: 165: }
  6715                           
  6716                           ;rtcm.c: 164: break;
  6717                           
  6718                           ;rtcm.c: 163: default:
  6719                           
  6720                           ;rtcm.c: 160: break;
  6721  004E92  0012               	return	
  6722  004E94                     l2211:
  6723  004E94  0100               	movlb	0	; () banked
  6724  004E96  51D3               	movf	_SystemState& (0+255),w,b
  6725                           
  6726                           ; Switch size 1, requested type "space"
  6727                           ; Number of cases is 2, Range of values is 0 to 1
  6728                           ; switch strategies available:
  6729                           ; Name         Instructions Cycles
  6730                           ; simple_byte            7     4 (average)
  6731                           ;	Chosen strategy is simple_byte
  6732  004E98  0A00               	xorlw	0	; case 0
  6733  004E9A  B4D8               	btfsc	status,2,c
  6734  004E9C  D7BE               	goto	l2212
  6735  004E9E  0A01               	xorlw	1	; case 1
  6736  004EA0  A4D8               	btfss	status,2,c
  6737  004EA2  0012               	return	
  6738  004EA4  D7ED               	goto	l2214
  6739  004EA6                     __end_of_Rtcm_MainTask:
  6740                           	opt stack 0
  6741                           tosu	equ	0xFFF
  6742                           tosh	equ	0xFFE
  6743                           tosl	equ	0xFFD
  6744                           pclath	equ	0xFFA
  6745                           tblptru	equ	0xFF8
  6746                           tblptrh	equ	0xFF7
  6747                           tblptrl	equ	0xFF6
  6748                           tablat	equ	0xFF5
  6749                           prodh	equ	0xFF4
  6750                           prodl	equ	0xFF3
  6751                           intcon	equ	0xFF2
  6752                           intcon2	equ	0xFF1
  6753                           intcon3	equ	0xFF0
  6754                           postinc0	equ	0xFEE
  6755                           plusw0	equ	0xFEB
  6756                           wreg	equ	0xFE8
  6757                           postinc1	equ	0xFE6
  6758                           postdec1	equ	0xFE5
  6759                           fsr1h	equ	0xFE2
  6760                           fsr1l	equ	0xFE1
  6761                           indf2	equ	0xFDF
  6762                           postinc2	equ	0xFDE
  6763                           postdec2	equ	0xFDD
  6764                           plusw2	equ	0xFDB
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8
  6768                           
  6769 ;; *************** function _Led_MainTask *****************
  6770 ;; Defined at:
  6771 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  Options         1    wreg     unsigned char 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  Options         1    0[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6789 ;;Total ram usage:        1 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:   14
  6792 ;; This function calls:
  6793 ;;		_LedStateMachine
  6794 ;; This function is called by:
  6795 ;;		_InitializeTasks
  6796 ;;		_ScheduleTasks
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text19
  6801  003BDA                     __ptext19:
  6802                           	opt stack 0
  6803  003BDA                     _Led_MainTask:
  6804                           	opt stack 14
  6805                           
  6806                           ;led.c: 300: switch (SystemState)
  6807                           
  6808                           ;incstack = 0
  6809  003BDA  D05C               	goto	l2125
  6810  003BDC                     l2126:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6814  003BDC  9895               	bcf	3989,4,c	;volatile
  6815                           
  6816                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6817  003BDE  9A95               	bcf	3989,5,c	;volatile
  6818                           
  6819                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6820  003BE0  9C95               	bcf	3989,6,c	;volatile
  6821                           
  6822                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6823  003BE2  9883               	bcf	3971,4,c	;volatile
  6824                           
  6825                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6826  003BE4  9A83               	bcf	3971,5,c	;volatile
  6827                           
  6828                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6829  003BE6  9C83               	bcf	3971,6,c	;volatile
  6830                           
  6831                           ;led.c: 311: break;
  6832  003BE8  0012               	return	
  6833  003BEA                     
  6834                           ; BSR set to: 0
  6835                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6836                           
  6837                           ; BSR set to: 0
  6838  003BEA  0EFB               	movlw	low _Led1Sts
  6839  003BEC  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6840  003BEE  0E01               	movlw	high _Led1Sts
  6841  003BF0  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6842  003BF2  0EFA               	movlw	low _Led1OutSts
  6843  003BF4  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6844  003BF6  0E01               	movlw	high _Led1OutSts
  6845  003BF8  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6846  003BFA  0E69               	movlw	low _Led1Blink
  6847  003BFC  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6848  003BFE  0E03               	movlw	high _Led1Blink
  6849  003C00  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6850  003C02  0E8D               	movlw	low _Led1Pulse
  6851  003C04  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6852  003C06  0E03               	movlw	high _Led1Pulse
  6853  003C08  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6854  003C0A  0E01               	movlw	1
  6855  003C0C  EC73  F023         	call	_LedStateMachine
  6856  003C10  0100               	movlb	0	; () banked
  6857  003C12  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6858  003C14  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6859  003C16  5083               	movf	3971,w,c	;volatile
  6860  003C18  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6861  003C1A  0BEF               	andlw	-17
  6862  003C1C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6863  003C1E  6E83               	movwf	3971,c	;volatile
  6864                           
  6865                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6866  003C20  0EF9               	movlw	low _Led2Sts
  6867  003C22  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6868  003C24  0E01               	movlw	high _Led2Sts
  6869  003C26  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6870  003C28  0EF8               	movlw	low _Led2OutSts
  6871  003C2A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6872  003C2C  0E01               	movlw	high _Led2OutSts
  6873  003C2E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6874  003C30  0E60               	movlw	low _Led2Blink
  6875  003C32  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6876  003C34  0E03               	movlw	high _Led2Blink
  6877  003C36  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6878  003C38  0E87               	movlw	low _Led2Pulse
  6879  003C3A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6880  003C3C  0E03               	movlw	high _Led2Pulse
  6881  003C3E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6882  003C40  0E02               	movlw	2
  6883  003C42  EC73  F023         	call	_LedStateMachine
  6884  003C46  0100               	movlb	0	; () banked
  6885  003C48  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6886  003C4A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6887  003C4C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6888  003C4E  5083               	movf	3971,w,c	;volatile
  6889  003C50  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6890  003C52  0BDF               	andlw	-33
  6891  003C54  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6892  003C56  6E83               	movwf	3971,c	;volatile
  6893                           
  6894                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6895  003C58  0EF7               	movlw	low _Led3Sts
  6896  003C5A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6897  003C5C  0E01               	movlw	high _Led3Sts
  6898  003C5E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6899  003C60  0EF6               	movlw	low _Led3OutSts
  6900  003C62  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6901  003C64  0E01               	movlw	high _Led3OutSts
  6902  003C66  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6903  003C68  0E57               	movlw	low _Led3Blink
  6904  003C6A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6905  003C6C  0E03               	movlw	high _Led3Blink
  6906  003C6E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6907  003C70  0E81               	movlw	low _Led3Pulse
  6908  003C72  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6909  003C74  0E03               	movlw	high _Led3Pulse
  6910  003C76  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6911  003C78  0E03               	movlw	3
  6912  003C7A  EC73  F023         	call	_LedStateMachine
  6913  003C7E  0100               	movlb	0	; () banked
  6914  003C80  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6915  003C82  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6916  003C84  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6917  003C86  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6918  003C88  5083               	movf	3971,w,c	;volatile
  6919  003C8A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6920  003C8C  0BBF               	andlw	-65
  6921  003C8E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6922  003C90  6E83               	movwf	3971,c	;volatile
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;led.c: 326: }
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;led.c: 325: break;
  6929                           
  6930                           ;led.c: 324: default:
  6931                           
  6932                           ;led.c: 321: break;
  6933  003C92  0012               	return	
  6934  003C94                     l2125:
  6935                           
  6936                           ; BSR set to: 0
  6937  003C94  0100               	movlb	0	; () banked
  6938  003C96  51D3               	movf	_SystemState& (0+255),w,b
  6939                           
  6940                           ; Switch size 1, requested type "space"
  6941                           ; Number of cases is 2, Range of values is 0 to 1
  6942                           ; switch strategies available:
  6943                           ; Name         Instructions Cycles
  6944                           ; simple_byte            7     4 (average)
  6945                           ;	Chosen strategy is simple_byte
  6946  003C98  0A00               	xorlw	0	; case 0
  6947  003C9A  B4D8               	btfsc	status,2,c
  6948  003C9C  D79F               	goto	l2126
  6949  003C9E  0A01               	xorlw	1	; case 1
  6950  003CA0  A4D8               	btfss	status,2,c
  6951  003CA2  0012               	return	
  6952  003CA4  D7A2               	goto	l2128
  6953  003CA6                     __end_of_Led_MainTask:
  6954                           	opt stack 0
  6955                           tosu	equ	0xFFF
  6956                           tosh	equ	0xFFE
  6957                           tosl	equ	0xFFD
  6958                           pclath	equ	0xFFA
  6959                           tblptru	equ	0xFF8
  6960                           tblptrh	equ	0xFF7
  6961                           tblptrl	equ	0xFF6
  6962                           tablat	equ	0xFF5
  6963                           prodh	equ	0xFF4
  6964                           prodl	equ	0xFF3
  6965                           intcon	equ	0xFF2
  6966                           intcon2	equ	0xFF1
  6967                           intcon3	equ	0xFF0
  6968                           postinc0	equ	0xFEE
  6969                           plusw0	equ	0xFEB
  6970                           wreg	equ	0xFE8
  6971                           postinc1	equ	0xFE6
  6972                           postdec1	equ	0xFE5
  6973                           fsr1h	equ	0xFE2
  6974                           fsr1l	equ	0xFE1
  6975                           indf2	equ	0xFDF
  6976                           postinc2	equ	0xFDE
  6977                           postdec2	equ	0xFDD
  6978                           plusw2	equ	0xFDB
  6979                           fsr2h	equ	0xFDA
  6980                           fsr2l	equ	0xFD9
  6981                           status	equ	0xFD8
  6982                           
  6983 ;; *************** function _UsbDevice_MainTask *****************
  6984 ;; Defined at:
  6985 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  Options         1    wreg     unsigned char 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;  Options         1    0[COMRAM] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7003 ;;Total ram usage:        0 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:   20
  7006 ;; This function calls:
  7007 ;;		_CDCTxService
  7008 ;;		_USBDeviceInit
  7009 ;;		_USBDeviceTasks
  7010 ;; This function is called by:
  7011 ;;		_InitializeTasks
  7012 ;;		_ScheduleTasks
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text20
  7017  006472                     __ptext20:
  7018                           	opt stack 0
  7019  006472                     _UsbDevice_MainTask:
  7020                           	opt stack 8
  7021                           
  7022                           ;usb_device_mgr.c: 74: switch (SystemState)
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;incstack = 0
  7026  006472  D008               	goto	l1992
  7027  006474                     
  7028                           ;usb_device_mgr.c: 79: USBDeviceInit();
  7029  006474  EC8D  F013         	call	_USBDeviceInit	;wreg free
  7030                           
  7031                           ;usb_device_mgr.c: 80: ;
  7032                           ;usb_device_mgr.c: 81: break;
  7033  006478  0012               	return	
  7034  00647A                     
  7035                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  7036  00647A  EC4C  F00F         	call	_USBDeviceTasks	;wreg free
  7037                           
  7038                           ;usb_device_mgr.c: 90: CDCTxService();
  7039  00647E  EC83  F015         	call	_CDCTxService	;wreg free
  7040                           
  7041                           ;usb_device_mgr.c: 101: }
  7042                           
  7043                           ;usb_device_mgr.c: 100: break;
  7044                           
  7045                           ;usb_device_mgr.c: 99: default:
  7046                           
  7047                           ;usb_device_mgr.c: 96: break;
  7048  006482  0012               	return	
  7049  006484                     l1992:
  7050  006484  0100               	movlb	0	; () banked
  7051  006486  51D3               	movf	_SystemState& (0+255),w,b
  7052                           
  7053                           ; Switch size 1, requested type "space"
  7054                           ; Number of cases is 2, Range of values is 0 to 1
  7055                           ; switch strategies available:
  7056                           ; Name         Instructions Cycles
  7057                           ; simple_byte            7     4 (average)
  7058                           ;	Chosen strategy is simple_byte
  7059  006488  0A00               	xorlw	0	; case 0
  7060  00648A  B4D8               	btfsc	status,2,c
  7061  00648C  D7F3               	goto	l1993
  7062  00648E  0A01               	xorlw	1	; case 1
  7063  006490  A4D8               	btfss	status,2,c
  7064  006492  0012               	return	
  7065  006494  D7F2               	goto	l1995
  7066  006496                     __end_of_UsbDevice_MainTask:
  7067                           	opt stack 0
  7068                           tosu	equ	0xFFF
  7069                           tosh	equ	0xFFE
  7070                           tosl	equ	0xFFD
  7071                           pclath	equ	0xFFA
  7072                           tblptru	equ	0xFF8
  7073                           tblptrh	equ	0xFF7
  7074                           tblptrl	equ	0xFF6
  7075                           tablat	equ	0xFF5
  7076                           prodh	equ	0xFF4
  7077                           prodl	equ	0xFF3
  7078                           intcon	equ	0xFF2
  7079                           intcon2	equ	0xFF1
  7080                           intcon3	equ	0xFF0
  7081                           postinc0	equ	0xFEE
  7082                           plusw0	equ	0xFEB
  7083                           wreg	equ	0xFE8
  7084                           postinc1	equ	0xFE6
  7085                           postdec1	equ	0xFE5
  7086                           fsr1h	equ	0xFE2
  7087                           fsr1l	equ	0xFE1
  7088                           indf2	equ	0xFDF
  7089                           postinc2	equ	0xFDE
  7090                           postdec2	equ	0xFDD
  7091                           plusw2	equ	0xFDB
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8
  7095                           
  7096 ;; *************** function _MdmHttp_MainTask *****************
  7097 ;; Defined at:
  7098 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  Options         1    wreg     unsigned char 
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;  Options         1    0[COMRAM] unsigned char 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  1    wreg      void 
  7105 ;; Registers used:
  7106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7116 ;;Total ram usage:        0 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:   15
  7119 ;; This function calls:
  7120 ;;		_HttpGetMethod
  7121 ;;		_InitGprsNetwork
  7122 ;; This function is called by:
  7123 ;;		_InitializeTasks
  7124 ;;		_ScheduleTasks
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text21
  7129  005D9A                     __ptext21:
  7130                           	opt stack 0
  7131  005D9A                     _MdmHttp_MainTask:
  7132                           	opt stack 13
  7133                           
  7134                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  7135                           
  7136                           ;incstack = 0
  7137  005D9A  D019               	goto	l1291
  7138  005D9C                     
  7139                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  7140  005D9C  0E03               	movlw	3
  7141  005D9E  0100               	movlb	0	; () banked
  7142  005DA0  19D0               	xorwf	_MdmStatus& (0+255),w,b
  7143  005DA2  A4D8               	btfss	status,2,c
  7144  005DA4  0012               	return	
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;mdm_gsm_gprs_http.c: 570: {
  7148                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  7149  005DA6  C31C  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  7150  005DAA  C31D  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  7151  005DAE  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  7152  005DB2  EC5B  F008         	call	_InitGprsNetwork	;wreg free
  7153  005DB6  0101               	movlb	1	; () banked
  7154  005DB8  6FED               	movwf	_GprsNetworkSts& (0+255),b
  7155                           
  7156                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  7157  005DBA  0EA3               	movlw	low _HttpGetDataLocal
  7158  005DBC  0100               	movlb	0	; () banked
  7159  005DBE  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  7160  005DC0  0E03               	movlw	high _HttpGetDataLocal
  7161  005DC2  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  7162  005DC4  ECF6  F002         	call	_HttpGetMethod	;wreg free
  7163  005DC8  0101               	movlb	1	; () banked
  7164  005DCA  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  7165                           
  7166                           ; BSR set to: 1
  7167                           ;mdm_gsm_gprs_http.c: 581: }
  7168                           
  7169                           ; BSR set to: 1
  7170                           ;mdm_gsm_gprs_http.c: 580: break;
  7171                           
  7172                           ;mdm_gsm_gprs_http.c: 579: default:
  7173                           
  7174                           ; BSR set to: 1
  7175                           ;mdm_gsm_gprs_http.c: 575: }
  7176                           ;mdm_gsm_gprs_http.c: 576: break;
  7177  005DCC  0012               	return	
  7178  005DCE                     l1291:
  7179                           
  7180                           ; BSR set to: 1
  7181  005DCE  0100               	movlb	0	; () banked
  7182  005DD0  51D3               	movf	_SystemState& (0+255),w,b
  7183                           
  7184                           ; Switch size 1, requested type "space"
  7185                           ; Number of cases is 2, Range of values is 0 to 1
  7186                           ; switch strategies available:
  7187                           ; Name         Instructions Cycles
  7188                           ; simple_byte            7     4 (average)
  7189                           ;	Chosen strategy is simple_byte
  7190  005DD2  0A00               	xorlw	0	; case 0
  7191  005DD4  B4D8               	btfsc	status,2,c
  7192  005DD6  0012               	return	
  7193  005DD8  0A01               	xorlw	1	; case 1
  7194  005DDA  A4D8               	btfss	status,2,c
  7195  005DDC  0012               	return	
  7196  005DDE  D7DE               	goto	l1294
  7197  005DE0                     __end_of_MdmHttp_MainTask:
  7198                           	opt stack 0
  7199                           tosu	equ	0xFFF
  7200                           tosh	equ	0xFFE
  7201                           tosl	equ	0xFFD
  7202                           pclath	equ	0xFFA
  7203                           tblptru	equ	0xFF8
  7204                           tblptrh	equ	0xFF7
  7205                           tblptrl	equ	0xFF6
  7206                           tablat	equ	0xFF5
  7207                           prodh	equ	0xFF4
  7208                           prodl	equ	0xFF3
  7209                           intcon	equ	0xFF2
  7210                           intcon2	equ	0xFF1
  7211                           intcon3	equ	0xFF0
  7212                           postinc0	equ	0xFEE
  7213                           plusw0	equ	0xFEB
  7214                           wreg	equ	0xFE8
  7215                           postinc1	equ	0xFE6
  7216                           postdec1	equ	0xFE5
  7217                           fsr1h	equ	0xFE2
  7218                           fsr1l	equ	0xFE1
  7219                           indf2	equ	0xFDF
  7220                           postinc2	equ	0xFDE
  7221                           postdec2	equ	0xFDD
  7222                           plusw2	equ	0xFDB
  7223                           fsr2h	equ	0xFDA
  7224                           fsr2l	equ	0xFD9
  7225                           status	equ	0xFD8
  7226                           
  7227 ;; *************** function _Mdm_MainTask *****************
  7228 ;; Defined at:
  7229 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  Options         1    wreg     unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  Options         1    0[COMRAM] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7247 ;;Total ram usage:        0 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:   15
  7250 ;; This function calls:
  7251 ;;		_CheckModem
  7252 ;;		_ConfigureModem
  7253 ;;		_GetSmsSm
  7254 ;;		_ModemEvtParser
  7255 ;;		_SendSmsSm
  7256 ;;		_TurnOnModem
  7257 ;;		_UartSetConfig
  7258 ;;		_Uart_InitUartModule
  7259 ;; This function is called by:
  7260 ;;		_InitializeTasks
  7261 ;;		_ScheduleTasks
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text22
  7266  005AE8                     __ptext22:
  7267                           	opt stack 0
  7268  005AE8                     _Mdm_MainTask:
  7269                           	opt stack 13
  7270                           
  7271                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  7272                           
  7273                           ;incstack = 0
  7274  005AE8  D01E               	goto	l1107
  7275  005AEA                     
  7276                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  7277  005AEA  EC78  F02B         	call	_UartSetConfig	;wreg free
  7278                           
  7279                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  7280  005AEE  0E20               	movlw	low _UartConfig
  7281  005AF0  0100               	movlb	0	; () banked
  7282  005AF2  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  7283  005AF4  0E03               	movlw	high _UartConfig
  7284  005AF6  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  7285  005AF8  0E01               	movlw	1
  7286  005AFA  EC5E  F005         	call	_Uart_InitUartModule
  7287                           
  7288                           ;mdm_gsm_gprs.c: 764: break;
  7289  005AFE  0012               	return	
  7290  005B00                     
  7291                           ;mdm_gsm_gprs.c: 769: CheckModem();
  7292  005B00  EC36  F014         	call	_CheckModem	;wreg free
  7293                           
  7294                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  7295  005B04  042A               	decf	_ComChecCompleted,w,c
  7296  005B06  A4D8               	btfss	status,2,c
  7297  005B08  D005               	goto	l1111
  7298  005B0A  0100               	movlb	0	; () banked
  7299  005B0C  51D0               	movf	_MdmStatus& (0+255),w,b
  7300  005B0E  B4D8               	btfsc	status,2,c
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;mdm_gsm_gprs.c: 772: {
  7304                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  7305  005B10  EC5F  F02E         	call	_TurnOnModem	;wreg free
  7306  005B14                     l1111:
  7307                           
  7308                           ;mdm_gsm_gprs.c: 775: }
  7309                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  7310  005B14  ECD7  F01B         	call	_ConfigureModem	;wreg free
  7311                           
  7312                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  7313  005B18  EC10  F010         	call	_ModemEvtParser	;wreg free
  7314                           
  7315                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  7316  005B1C  ECC2  F016         	call	_GetSmsSm	;wreg free
  7317                           
  7318                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  7319  005B20  EC70  F00E         	call	_SendSmsSm	;wreg free
  7320                           
  7321                           ;mdm_gsm_gprs.c: 789: }
  7322                           
  7323                           ;mdm_gsm_gprs.c: 788: break;
  7324                           
  7325                           ;mdm_gsm_gprs.c: 787: default:
  7326                           
  7327                           ;mdm_gsm_gprs.c: 784: break;
  7328  005B24  0012               	return	
  7329  005B26                     l1107:
  7330  005B26  0100               	movlb	0	; () banked
  7331  005B28  51D3               	movf	_SystemState& (0+255),w,b
  7332                           
  7333                           ; Switch size 1, requested type "space"
  7334                           ; Number of cases is 2, Range of values is 0 to 1
  7335                           ; switch strategies available:
  7336                           ; Name         Instructions Cycles
  7337                           ; simple_byte            7     4 (average)
  7338                           ;	Chosen strategy is simple_byte
  7339  005B2A  0A00               	xorlw	0	; case 0
  7340  005B2C  B4D8               	btfsc	status,2,c
  7341  005B2E  D7DD               	goto	l1108
  7342  005B30  0A01               	xorlw	1	; case 1
  7343  005B32  A4D8               	btfss	status,2,c
  7344  005B34  0012               	return	
  7345  005B36  D7E4               	goto	l1110
  7346  005B38                     __end_of_Mdm_MainTask:
  7347                           	opt stack 0
  7348                           tosu	equ	0xFFF
  7349                           tosh	equ	0xFFE
  7350                           tosl	equ	0xFFD
  7351                           pclath	equ	0xFFA
  7352                           tblptru	equ	0xFF8
  7353                           tblptrh	equ	0xFF7
  7354                           tblptrl	equ	0xFF6
  7355                           tablat	equ	0xFF5
  7356                           prodh	equ	0xFF4
  7357                           prodl	equ	0xFF3
  7358                           intcon	equ	0xFF2
  7359                           intcon2	equ	0xFF1
  7360                           intcon3	equ	0xFF0
  7361                           postinc0	equ	0xFEE
  7362                           plusw0	equ	0xFEB
  7363                           wreg	equ	0xFE8
  7364                           postinc1	equ	0xFE6
  7365                           postdec1	equ	0xFE5
  7366                           fsr1h	equ	0xFE2
  7367                           fsr1l	equ	0xFE1
  7368                           indf2	equ	0xFDF
  7369                           postinc2	equ	0xFDE
  7370                           postdec2	equ	0xFDD
  7371                           plusw2	equ	0xFDB
  7372                           fsr2h	equ	0xFDA
  7373                           fsr2l	equ	0xFD9
  7374                           status	equ	0xFD8
  7375                           
  7376 ;; *************** function _I2cSlv_MainTask *****************
  7377 ;; Defined at:
  7378 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  Options         1    wreg     unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  Options         1    0[COMRAM] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7396 ;;Total ram usage:        0 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:   14
  7399 ;; This function calls:
  7400 ;;		_I2cSendMsgSm
  7401 ;;		_I2cSetConfig
  7402 ;;		_I2c_InitI2cModule
  7403 ;;		_OsAlrm_SetOsAlarm
  7404 ;; This function is called by:
  7405 ;;		_InitializeTasks
  7406 ;;		_ScheduleTasks
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text23
  7411  005850                     __ptext23:
  7412                           	opt stack 0
  7413  005850                     _I2cSlv_MainTask:
  7414                           	opt stack 14
  7415                           
  7416                           ;i2c_slv.c: 217: switch (SystemState)
  7417                           
  7418                           ;incstack = 0
  7419  005850  D020               	goto	l1404
  7420  005852                     
  7421                           ;i2c_slv.c: 222: I2cSetConfig();
  7422  005852  ECBF  F031         	call	_I2cSetConfig	;wreg free
  7423                           
  7424                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7425  005856  0E4D               	movlw	low _I2cConfig
  7426  005858  0100               	movlb	0	; () banked
  7427  00585A  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7428  00585C  0E03               	movlw	high _I2cConfig
  7429  00585E  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7430  005860  ECDD  F028         	call	_I2c_InitI2cModule	;wreg free
  7431                           
  7432                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7433  005864  0E00               	movlw	0
  7434  005866  0100               	movlb	0	; () banked
  7435  005868  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7436  00586A  0E00               	movlw	0
  7437  00586C  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7438  00586E  0E32               	movlw	50
  7439  005870  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7440  005872  0E00               	movlw	0
  7441  005874  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7442  005876  0E00               	movlw	0
  7443  005878  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7444  00587A  0E00               	movlw	0
  7445  00587C  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7446  00587E  0E86               	movlw	low _I2cDummyTx
  7447  005880  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7448  005882  0E66               	movlw	high _I2cDummyTx
  7449  005884  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7450  005886  ECE6  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7451                           
  7452                           ;i2c_slv.c: 227: break;
  7453  00588A  0012               	return	
  7454  00588C                     
  7455                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7456  00588C  EC4A  F020         	call	_I2cSendMsgSm	;wreg free
  7457                           
  7458                           ;i2c_slv.c: 238: }
  7459                           
  7460                           ;i2c_slv.c: 237: break;
  7461                           
  7462                           ;i2c_slv.c: 236: default:
  7463                           
  7464                           ;i2c_slv.c: 233: break;
  7465  005890  0012               	return	
  7466  005892                     l1404:
  7467  005892  0100               	movlb	0	; () banked
  7468  005894  51D3               	movf	_SystemState& (0+255),w,b
  7469                           
  7470                           ; Switch size 1, requested type "space"
  7471                           ; Number of cases is 2, Range of values is 0 to 1
  7472                           ; switch strategies available:
  7473                           ; Name         Instructions Cycles
  7474                           ; simple_byte            7     4 (average)
  7475                           ;	Chosen strategy is simple_byte
  7476  005896  0A00               	xorlw	0	; case 0
  7477  005898  B4D8               	btfsc	status,2,c
  7478  00589A  D7DB               	goto	l1405
  7479  00589C  0A01               	xorlw	1	; case 1
  7480  00589E  A4D8               	btfss	status,2,c
  7481  0058A0  0012               	return	
  7482  0058A2  D7F4               	goto	l1407
  7483  0058A4                     __end_of_I2cSlv_MainTask:
  7484                           	opt stack 0
  7485                           tosu	equ	0xFFF
  7486                           tosh	equ	0xFFE
  7487                           tosl	equ	0xFFD
  7488                           pclath	equ	0xFFA
  7489                           tblptru	equ	0xFF8
  7490                           tblptrh	equ	0xFF7
  7491                           tblptrl	equ	0xFF6
  7492                           tablat	equ	0xFF5
  7493                           prodh	equ	0xFF4
  7494                           prodl	equ	0xFF3
  7495                           intcon	equ	0xFF2
  7496                           intcon2	equ	0xFF1
  7497                           intcon3	equ	0xFF0
  7498                           postinc0	equ	0xFEE
  7499                           plusw0	equ	0xFEB
  7500                           wreg	equ	0xFE8
  7501                           postinc1	equ	0xFE6
  7502                           postdec1	equ	0xFE5
  7503                           fsr1h	equ	0xFE2
  7504                           fsr1l	equ	0xFE1
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           plusw2	equ	0xFDB
  7509                           fsr2h	equ	0xFDA
  7510                           fsr2l	equ	0xFD9
  7511                           status	equ	0xFD8
  7512                           
  7513 ;; *************** function _Mdm_DrvMainFn *****************
  7514 ;; Defined at:
  7515 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  Options         1    wreg     unsigned char 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  Options         1    0[COMRAM] unsigned char 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7533 ;;Total ram usage:        0 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:   13
  7536 ;; This function calls:
  7537 ;;		_MdmCntSm
  7538 ;; This function is called by:
  7539 ;;		_InitializeTasks
  7540 ;;		_ScheduleTasks
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text24
  7545  0068D0                     __ptext24:
  7546                           	opt stack 0
  7547  0068D0                     _Mdm_DrvMainFn:
  7548                           	opt stack 15
  7549                           
  7550                           ;mdm_drv.c: 307: MdmCntSm();
  7551                           
  7552                           ;incstack = 0
  7553  0068D0  EC1F  F023         	call	_MdmCntSm	;wreg free
  7554  0068D4  0012               	return		;funcret
  7555  0068D6                     __end_of_Mdm_DrvMainFn:
  7556                           	opt stack 0
  7557                           tosu	equ	0xFFF
  7558                           tosh	equ	0xFFE
  7559                           tosl	equ	0xFFD
  7560                           pclath	equ	0xFFA
  7561                           tblptru	equ	0xFF8
  7562                           tblptrh	equ	0xFF7
  7563                           tblptrl	equ	0xFF6
  7564                           tablat	equ	0xFF5
  7565                           prodh	equ	0xFF4
  7566                           prodl	equ	0xFF3
  7567                           intcon	equ	0xFF2
  7568                           intcon2	equ	0xFF1
  7569                           intcon3	equ	0xFF0
  7570                           postinc0	equ	0xFEE
  7571                           plusw0	equ	0xFEB
  7572                           wreg	equ	0xFE8
  7573                           postinc1	equ	0xFE6
  7574                           postdec1	equ	0xFE5
  7575                           fsr1h	equ	0xFE2
  7576                           fsr1l	equ	0xFE1
  7577                           indf2	equ	0xFDF
  7578                           postinc2	equ	0xFDE
  7579                           postdec2	equ	0xFDD
  7580                           plusw2	equ	0xFDB
  7581                           fsr2h	equ	0xFDA
  7582                           fsr2l	equ	0xFD9
  7583                           status	equ	0xFD8
  7584                           
  7585 ;; *************** function _Wdg_MainTask *****************
  7586 ;; Defined at:
  7587 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  Options         1    wreg     unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  Options         1    0[COMRAM] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7605 ;;Total ram usage:        0 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:   12
  7608 ;; This function calls:
  7609 ;;		_Mcu_ClearWdg
  7610 ;;		_Mcu_SetWdgSts
  7611 ;; This function is called by:
  7612 ;;		_InitializeTasks
  7613 ;;		_ScheduleTasks
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text25
  7618  006502                     __ptext25:
  7619                           	opt stack 0
  7620  006502                     _Wdg_MainTask:
  7621                           	opt stack 16
  7622                           
  7623                           ;wdg.c: 75: switch (SystemState)
  7624                           
  7625                           ;incstack = 0
  7626  006502  D007               	goto	l2501
  7627  006504                     
  7628                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7629  006504  0E01               	movlw	1
  7630  006506  ECEB  F033         	call	_Mcu_SetWdgSts
  7631                           
  7632                           ;wdg.c: 81: break;
  7633  00650A  0012               	return	
  7634  00650C                     
  7635                           ;wdg.c: 86: Mcu_ClearWdg();
  7636  00650C  EC6B  F034         	call	_Mcu_ClearWdg	;wreg free
  7637                           
  7638                           ;wdg.c: 92: }
  7639                           
  7640                           ;wdg.c: 91: break;
  7641                           
  7642                           ;wdg.c: 90: default:
  7643                           
  7644                           ;wdg.c: 87: break;
  7645  006510  0012               	return	
  7646  006512                     l2501:
  7647  006512  0100               	movlb	0	; () banked
  7648  006514  51D3               	movf	_SystemState& (0+255),w,b
  7649                           
  7650                           ; Switch size 1, requested type "space"
  7651                           ; Number of cases is 2, Range of values is 0 to 1
  7652                           ; switch strategies available:
  7653                           ; Name         Instructions Cycles
  7654                           ; simple_byte            7     4 (average)
  7655                           ;	Chosen strategy is simple_byte
  7656  006516  0A00               	xorlw	0	; case 0
  7657  006518  B4D8               	btfsc	status,2,c
  7658  00651A  D7F4               	goto	l2502
  7659  00651C  0A01               	xorlw	1	; case 1
  7660  00651E  A4D8               	btfss	status,2,c
  7661  006520  0012               	return	
  7662  006522  D7F4               	goto	l2504
  7663  006524                     __end_of_Wdg_MainTask:
  7664                           	opt stack 0
  7665                           tosu	equ	0xFFF
  7666                           tosh	equ	0xFFE
  7667                           tosl	equ	0xFFD
  7668                           pclath	equ	0xFFA
  7669                           tblptru	equ	0xFF8
  7670                           tblptrh	equ	0xFF7
  7671                           tblptrl	equ	0xFF6
  7672                           tablat	equ	0xFF5
  7673                           prodh	equ	0xFF4
  7674                           prodl	equ	0xFF3
  7675                           intcon	equ	0xFF2
  7676                           intcon2	equ	0xFF1
  7677                           intcon3	equ	0xFF0
  7678                           postinc0	equ	0xFEE
  7679                           plusw0	equ	0xFEB
  7680                           wreg	equ	0xFE8
  7681                           postinc1	equ	0xFE6
  7682                           postdec1	equ	0xFE5
  7683                           fsr1h	equ	0xFE2
  7684                           fsr1l	equ	0xFE1
  7685                           indf2	equ	0xFDF
  7686                           postinc2	equ	0xFDE
  7687                           postdec2	equ	0xFDD
  7688                           plusw2	equ	0xFDB
  7689                           fsr2h	equ	0xFDA
  7690                           fsr2l	equ	0xFD9
  7691                           status	equ	0xFD8
  7692                           
  7693 ;; *************** function _Mcu_SetWdgSts *****************
  7694 ;; Defined at:
  7695 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  WdgSts          1    wreg     unsigned char 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  1    wreg      void 
  7702 ;; Registers used:
  7703 ;;		wreg
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7712 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7713 ;;Total ram usage:        1 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:   11
  7716 ;; This function calls:
  7717 ;;		Nothing
  7718 ;; This function is called by:
  7719 ;;		_Wdg_MainTask
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text26
  7724  0067D6                     __ptext26:
  7725                           	opt stack 0
  7726  0067D6                     _Mcu_SetWdgSts:
  7727                           	opt stack 16
  7728                           
  7729                           ;incstack = 0
  7730                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7731  0067D6  0100               	movlb	0	; () banked
  7732  0067D8  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7733                           
  7734                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7735  0067DA  0100               	movlb	0	; () banked
  7736  0067DC  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7737  0067DE  D002               	bra	u14245
  7738  0067E0  90C0               	bcf	4032,0,c	;volatile
  7739  0067E2  D001               	bra	u14246
  7740  0067E4                     u14245:
  7741  0067E4  80C0               	bsf	4032,0,c	;volatile
  7742  0067E6                     u14246:
  7743  0067E6  0012               	return		;funcret
  7744  0067E8                     __end_of_Mcu_SetWdgSts:
  7745                           	opt stack 0
  7746                           tosu	equ	0xFFF
  7747                           tosh	equ	0xFFE
  7748                           tosl	equ	0xFFD
  7749                           pclath	equ	0xFFA
  7750                           tblptru	equ	0xFF8
  7751                           tblptrh	equ	0xFF7
  7752                           tblptrl	equ	0xFF6
  7753                           tablat	equ	0xFF5
  7754                           prodh	equ	0xFF4
  7755                           prodl	equ	0xFF3
  7756                           intcon	equ	0xFF2
  7757                           intcon2	equ	0xFF1
  7758                           intcon3	equ	0xFF0
  7759                           postinc0	equ	0xFEE
  7760                           plusw0	equ	0xFEB
  7761                           wreg	equ	0xFE8
  7762                           postinc1	equ	0xFE6
  7763                           postdec1	equ	0xFE5
  7764                           fsr1h	equ	0xFE2
  7765                           fsr1l	equ	0xFE1
  7766                           indf2	equ	0xFDF
  7767                           postinc2	equ	0xFDE
  7768                           postdec2	equ	0xFDD
  7769                           plusw2	equ	0xFDB
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function _Mcu_ClearWdg *****************
  7775 ;; Defined at:
  7776 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;		None
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;		None
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1    wreg      void 
  7783 ;; Registers used:
  7784 ;;		None
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;Total ram usage:        0 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:   11
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_Wdg_MainTask
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text27
  7805  0068D6                     __ptext27:
  7806                           	opt stack 0
  7807  0068D6                     _Mcu_ClearWdg:
  7808                           	opt stack 16
  7809                           
  7810                           ;incstack = 0
  7811  0068D6  0004               	clrwdt		;# 
  7812  0068D8  0012               	return		;funcret
  7813  0068DA                     __end_of_Mcu_ClearWdg:
  7814                           	opt stack 0
  7815                           tosu	equ	0xFFF
  7816                           tosh	equ	0xFFE
  7817                           tosl	equ	0xFFD
  7818                           pclath	equ	0xFFA
  7819                           tblptru	equ	0xFF8
  7820                           tblptrh	equ	0xFF7
  7821                           tblptrl	equ	0xFF6
  7822                           tablat	equ	0xFF5
  7823                           prodh	equ	0xFF4
  7824                           prodl	equ	0xFF3
  7825                           intcon	equ	0xFF2
  7826                           intcon2	equ	0xFF1
  7827                           intcon3	equ	0xFF0
  7828                           postinc0	equ	0xFEE
  7829                           plusw0	equ	0xFEB
  7830                           wreg	equ	0xFE8
  7831                           postinc1	equ	0xFE6
  7832                           postdec1	equ	0xFE5
  7833                           fsr1h	equ	0xFE2
  7834                           fsr1l	equ	0xFE1
  7835                           indf2	equ	0xFDF
  7836                           postinc2	equ	0xFDE
  7837                           postdec2	equ	0xFDD
  7838                           plusw2	equ	0xFDB
  7839                           fsr2h	equ	0xFDA
  7840                           fsr2l	equ	0xFD9
  7841                           status	equ	0xFD8
  7842                           
  7843 ;; *************** function _USBDeviceTasks *****************
  7844 ;; Defined at:
  7845 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  i               1   56[BANK0 ] unsigned char 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7862 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7863 ;;Total ram usage:        1 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:   19
  7866 ;; This function calls:
  7867 ;;		_USBCtrlEPAllowStatusStage
  7868 ;;		_USBCtrlEPService
  7869 ;;		_USBDeviceInit
  7870 ;;		_USBIncrement1msInternalTimers
  7871 ;;		_USBStallHandler
  7872 ;;		_USBSuspend
  7873 ;;		_USBWakeFromSuspend
  7874 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7875 ;; This function is called by:
  7876 ;;		_UsbDevice_MainTask
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           	psect	text28
  7881  001E98                     __ptext28:
  7882                           	opt stack 0
  7883  001E98                     _USBDeviceTasks:
  7884                           	opt stack 8
  7885                           
  7886                           ;usb_device.c: 562: }
  7887                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7888                           
  7889                           ; BSR set to: 0
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;usb_device.c: 561: return;
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7896                           
  7897                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7898                           
  7899                           ;usb_device.c: 529: UIE = 0;
  7900                           
  7901                           ;usb_device.c: 524: {
  7902                           ;usb_device.c: 526: UCON = 0;
  7903                           
  7904                           ;usb_device.c: 497: uint8_t i;
  7905                           ;usb_device.c: 523: if (1 != 1)
  7906                           
  7907                           ;incstack = 0
  7908  001E98  0100               	movlb	0	; () banked
  7909  001E9A  51CC               	movf	_USBDeviceState& (0+255),w,b
  7910  001E9C  A4D8               	btfss	status,2,c
  7911  001E9E  D012               	goto	l1615
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;usb_device.c: 585: {
  7915                           ;usb_device.c: 587: UCON = 0;
  7916  001EA0  0E00               	movlw	0
  7917  001EA2  6E65               	movwf	3941,c	;volatile
  7918                           
  7919                           ;usb_device.c: 590: UIE = 0;
  7920  001EA4  0E00               	movlw	0
  7921  001EA6  010F               	movlb	15	; () banked
  7922  001EA8  6F36               	movwf	54,b	;volatile
  7923                           
  7924                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7925  001EAA  0E16               	movlw	22
  7926  001EAC  6F39               	movwf	57,b	;volatile
  7927  001EAE  0E9F               	movlw	159
  7928  001EB0  6F37               	movwf	55,b	;volatile
  7929  001EB2  0E7B               	movlw	123
  7930  001EB4  6F36               	movwf	54,b	;volatile
  7931                           
  7932                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7933  001EB6  D001               	goto	l1616
  7934  001EB8                     l1617:
  7935  001EB8  8665               	bsf	3941,3,c	;volatile
  7936  001EBA                     l1616:
  7937  001EBA  A665               	btfss	3941,3,c	;volatile
  7938  001EBC  D7FD               	goto	l1617
  7939                           
  7940                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7941  001EBE  0E01               	movlw	1
  7942  001EC0  0100               	movlb	0	; () banked
  7943  001EC2  6FCC               	movwf	_USBDeviceState& (0+255),b
  7944  001EC4                     l1615:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;usb_device.c: 605: }
  7948                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7949                           
  7950                           ; BSR set to: 0
  7951  001EC4  05CC               	decf	_USBDeviceState& (0+255),w,b
  7952  001EC6  B4D8               	btfsc	status,2,c
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;usb_device.c: 609: {
  7956                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7957  001EC8  BA65               	btfsc	3941,5,c	;volatile
  7958  001ECA  D00A               	goto	l1620
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;usb_device.c: 620: {
  7962                           ;usb_device.c: 626: {UIR = 0;};
  7963  001ECC  0E00               	movlw	0
  7964  001ECE  6E62               	movwf	3938,c	;volatile
  7965                           
  7966                           ;usb_device.c: 630: UIE=0;
  7967  001ED0  0E00               	movlw	0
  7968  001ED2  010F               	movlb	15	; () banked
  7969  001ED4  6F36               	movwf	54,b	;volatile
  7970                           
  7971                           ; BSR set to: 15
  7972                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7973  001ED6  8136               	bsf	54,0,b	;volatile
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7977  001ED8  8936               	bsf	54,4,b	;volatile
  7978                           
  7979                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7980  001EDA  0E02               	movlw	2
  7981  001EDC  0100               	movlb	0	; () banked
  7982  001EDE  6FCC               	movwf	_USBDeviceState& (0+255),b
  7983  001EE0                     l1620:
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;usb_device.c: 635: }
  7987                           ;usb_device.c: 636: }
  7988                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7989                           
  7990                           ; BSR set to: 0
  7991                           
  7992                           ; BSR set to: 0
  7993  001EE0  A462               	btfss	3938,2,c	;volatile
  7994  001EE2  D006               	goto	l1621
  7995                           
  7996                           ; BSR set to: 0
  7997  001EE4  010F               	movlb	15	; () banked
  7998  001EE6  A536               	btfss	54,2,b	;volatile
  7999  001EE8  D003               	goto	l1621
  8000                           
  8001                           ; BSR set to: 15
  8002                           ;usb_device.c: 653: {
  8003                           ;usb_device.c: 654: (UIR &= 0xFB);
  8004  001EEA  9462               	bcf	3938,2,c	;volatile
  8005                           
  8006                           ; BSR set to: 15
  8007                           ;usb_device.c: 658: USBWakeFromSuspend();
  8008  001EEC  EC75  F030         	call	_USBWakeFromSuspend	;wreg free
  8009  001EF0                     l1621:
  8010                           
  8011                           ;usb_device.c: 660: }
  8012                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  8013  001EF0  A265               	btfss	3941,1,c	;volatile
  8014  001EF2  D002               	goto	l1622
  8015                           
  8016                           ;usb_device.c: 666: {
  8017                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  8018  001EF4  98A1               	bcf	4001,4,c	;volatile
  8019                           
  8020                           ;usb_device.c: 668: return;
  8021  001EF6  0012               	return	
  8022  001EF8                     l1622:
  8023                           
  8024                           ;usb_device.c: 669: }
  8025                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8026  001EF8  A062               	btfss	3938,0,c	;volatile
  8027  001EFA  D009               	goto	l1623
  8028  001EFC  010F               	movlb	15	; () banked
  8029  001EFE  A136               	btfss	54,0,b	;volatile
  8030  001F00  D006               	goto	l1623
  8031                           
  8032                           ; BSR set to: 15
  8033                           ;usb_device.c: 682: {
  8034                           ;usb_device.c: 683: USBDeviceInit();
  8035  001F02  EC8D  F013         	call	_USBDeviceInit	;wreg free
  8036                           
  8037                           ;usb_device.c: 687: ;
  8038                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  8039  001F06  0E04               	movlw	4
  8040  001F08  0100               	movlb	0	; () banked
  8041  001F0A  6FCC               	movwf	_USBDeviceState& (0+255),b
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;usb_device.c: 699: (UIR &= 0xFE);
  8045  001F0C  9062               	bcf	3938,0,c	;volatile
  8046  001F0E                     l1623:
  8047                           
  8048                           ;usb_device.c: 700: }
  8049                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8050                           
  8051                           ; BSR set to: 0
  8052  001F0E  A862               	btfss	3938,4,c	;volatile
  8053  001F10  D004               	goto	l1624
  8054  001F12  010F               	movlb	15	; () banked
  8055  001F14  B936               	btfsc	54,4,b	;volatile
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;usb_device.c: 706: {
  8059                           ;usb_device.c: 712: USBSuspend();
  8060  001F16  ECFF  F030         	call	_USBSuspend	;wreg free
  8061  001F1A                     l1624:
  8062                           
  8063                           ;usb_device.c: 714: }
  8064                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  8065  001F1A  AC62               	btfss	3938,6,c	;volatile
  8066  001F1C  D01D               	goto	l1628
  8067                           
  8068                           ;usb_device.c: 727: {
  8069                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  8070  001F1E  010F               	movlb	15	; () banked
  8071  001F20  AD36               	btfss	54,6,b	;volatile
  8072  001F22  D00F               	goto	l1626
  8073                           
  8074                           ; BSR set to: 15
  8075                           ;usb_device.c: 730: {
  8076                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8077  001F24  0E00               	movlw	0
  8078  001F26  0100               	movlb	0	; () banked
  8079  001F28  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8080  001F2A  0E73               	movlw	115
  8081  001F2C  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8082  001F2E  0E00               	movlw	0
  8083  001F30  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8084  001F32  0E00               	movlw	0
  8085  001F34  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8086  001F36  0E00               	movlw	0
  8087  001F38  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8088  001F3A  0E01               	movlw	1
  8089  001F3C  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8090  001F3E  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8091  001F42                     l1626:
  8092                           
  8093                           ;usb_device.c: 732: }
  8094                           ;usb_device.c: 733: (UIR &= 0xBF);
  8095  001F42  9C62               	bcf	3938,6,c	;volatile
  8096                           
  8097                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  8098  001F44  EC92  F032         	call	_USBIncrement1msInternalTimers	;wreg free
  8099                           
  8100                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  8101  001F48  0100               	movlb	0	; () banked
  8102  001F4A  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8103  001F4C  A4D8               	btfss	status,2,c
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;usb_device.c: 754: {
  8107                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  8108  001F4E  07C8               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;usb_device.c: 756: }
  8112                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  8113                           
  8114                           ; BSR set to: 0
  8115  001F50  51C8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  8116  001F52  B4D8               	btfsc	status,2,c
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;usb_device.c: 763: {
  8120                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  8121  001F54  EC53  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8122  001F58                     l1628:
  8123                           
  8124                           ;usb_device.c: 765: }
  8125                           ;usb_device.c: 767: }
  8126                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  8127  001F58  AA62               	btfss	3938,5,c	;volatile
  8128  001F5A  D004               	goto	l1629
  8129  001F5C  010F               	movlb	15	; () banked
  8130  001F5E  BB36               	btfsc	54,5,b	;volatile
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;usb_device.c: 770: {
  8134                           ;usb_device.c: 771: USBStallHandler();
  8135  001F60  ECF0  F02E         	call	_USBStallHandler	;wreg free
  8136  001F64                     l1629:
  8137                           
  8138                           ;usb_device.c: 772: }
  8139                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8140  001F64  A262               	btfss	3938,1,c	;volatile
  8141  001F66  D013               	goto	l1630
  8142  001F68  010F               	movlb	15	; () banked
  8143  001F6A  A336               	btfss	54,1,b	;volatile
  8144  001F6C  D010               	goto	l1630
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;usb_device.c: 775: {
  8148                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  8149  001F6E  0E7F               	movlw	127
  8150  001F70  0100               	movlb	0	; () banked
  8151  001F72  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8152  001F74  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8153  001F76  0E00               	movlw	0
  8154  001F78  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8155  001F7A  0E00               	movlw	0
  8156  001F7C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8157  001F7E  0E00               	movlw	0
  8158  001F80  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8159  001F82  0E01               	movlw	1
  8160  001F84  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8161  001F86  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8162                           
  8163                           ;usb_device.c: 777: {UEIR = 0;};
  8164  001F8A  0E00               	movlw	0
  8165  001F8C  6E63               	movwf	3939,c	;volatile
  8166  001F8E                     l1630:
  8167                           
  8168                           ;usb_device.c: 785: }
  8169                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  8170  001F8E  0E04               	movlw	4
  8171  001F90  0100               	movlb	0	; () banked
  8172  001F92  61CC               	cpfslt	_USBDeviceState& (0+255),b
  8173  001F94  D002               	goto	l1631
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;usb_device.c: 793: {
  8177                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  8178  001F96  98A1               	bcf	4001,4,c	;volatile
  8179                           
  8180                           ;usb_device.c: 795: return;
  8181  001F98  0012               	return	
  8182  001F9A                     l1631:
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;usb_device.c: 796: }
  8186                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  8187  001F9A  010F               	movlb	15	; () banked
  8188  001F9C  A736               	btfss	54,3,b	;volatile
  8189  001F9E  D03E               	goto	u15230
  8190                           
  8191                           ; BSR set to: 15
  8192                           ;usb_device.c: 802: {
  8193                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  8194  001FA0  0E00               	movlw	0
  8195  001FA2  0100               	movlb	0	; () banked
  8196  001FA4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  8197  001FA6                     l15528:
  8198                           
  8199                           ; BSR set to: 0
  8200  001FA6  0E03               	movlw	3
  8201  001FA8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  8202  001FAA  D001               	goto	l1633
  8203  001FAC  D037               	goto	u15230
  8204  001FAE                     l1633:
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;usb_device.c: 804: {
  8208                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  8209  001FAE  A662               	btfss	3938,3,c	;volatile
  8210  001FB0  D035               	goto	u15230
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;usb_device.c: 806: {
  8214                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  8215  001FB2  CF64 F0D4          	movff	3940,_USTATcopy	;volatile
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  8219  001FB6  31D4               	rrcf	_USTATcopy& (0+255),w,b
  8220  001FB8  32E8               	rrcf	wreg,f,c
  8221  001FBA  32E8               	rrcf	wreg,f,c
  8222  001FBC  0B0F               	andlw	15
  8223  001FBE  6FC9               	movwf	_endpoint_number& (0+255),b
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;usb_device.c: 811: (UIR &= 0xF7);
  8227  001FC0  9662               	bcf	3938,3,c	;volatile
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  8231  001FC2  B5D4               	btfsc	_USTATcopy& (0+255),2,b
  8232  001FC4  D007               	goto	l1636
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;usb_device.c: 817: {
  8236                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  8237  001FC6  51C9               	movf	_endpoint_number& (0+255),w,b
  8238  001FC8  0D01               	mullw	1
  8239  001FCA  0ECE               	movlw	low _ep_data_out
  8240  001FCC  24F3               	addwf	prodl,w,c
  8241  001FCE  6ED9               	movwf	fsr2l,c
  8242  001FD0  0E02               	movlw	high _ep_data_out
  8243  001FD2  D007               	goto	L3
  8244  001FD4                     l1636:
  8245                           
  8246                           ;usb_device.c: 820: else
  8247                           ;usb_device.c: 821: {
  8248                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  8249                           
  8250                           ; BSR set to: 2
  8251  001FD4  0100               	movlb	0	; () banked
  8252  001FD6  51C9               	movf	_endpoint_number& (0+255),w,b
  8253  001FD8  0D01               	mullw	1
  8254  001FDA  0ED1               	movlw	low _ep_data_in
  8255  001FDC  24F3               	addwf	prodl,w,c
  8256  001FDE  6ED9               	movwf	fsr2l,c
  8257  001FE0  0E02               	movlw	high _ep_data_in
  8258  001FE2                     L3:
  8259  001FE2  20F4               	addwfc	prodh,w,c
  8260  001FE4  6EDA               	movwf	fsr2h,c
  8261  001FE6  0102               	movlb	2	; () banked
  8262  001FE8  70DF               	btg	indf2,0,c
  8263                           
  8264                           ; BSR set to: 2
  8265                           ;usb_device.c: 823: }
  8266                           ;usb_device.c: 828: if(endpoint_number == 0)
  8267                           
  8268                           ; BSR set to: 2
  8269  001FEA  0100               	movlb	0	; () banked
  8270  001FEC  51C9               	movf	_endpoint_number& (0+255),w,b
  8271  001FEE  A4D8               	btfss	status,2,c
  8272  001FF0  D003               	goto	l1638
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;usb_device.c: 829: {
  8276                           ;usb_device.c: 830: USBCtrlEPService();
  8277  001FF2  ECE8  F025         	call	_USBCtrlEPService	;wreg free
  8278                           
  8279                           ;usb_device.c: 831: }
  8280  001FF6  D00F               	goto	l1640
  8281  001FF8                     l1638:
  8282                           
  8283                           ;usb_device.c: 832: else
  8284                           ;usb_device.c: 833: {
  8285                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  8286  001FF8  0E00               	movlw	0
  8287  001FFA  0100               	movlb	0	; () banked
  8288  001FFC  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8289  001FFE  0E72               	movlw	114
  8290  002000  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8291  002002  0ED4               	movlw	low _USTATcopy
  8292  002004  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8293  002006  0E00               	movlw	high _USTATcopy
  8294  002008  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8295  00200A  0E00               	movlw	0
  8296  00200C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8297  00200E  0E00               	movlw	0
  8298  002010  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8299  002012  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8300  002016                     l1640:
  8301  002016  0100               	movlb	0	; () banked
  8302  002018  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  8303  00201A  D7C5               	goto	l15528
  8304  00201C                     u15230:
  8305                           
  8306                           ;usb_device.c: 840: }
  8307                           ;usb_device.c: 841: }
  8308                           ;usb_device.c: 842: }
  8309                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  8310                           
  8311                           ; BSR set to: 0
  8312  00201C  98A1               	bcf	4001,4,c	;volatile
  8313  00201E  0012               	return		;funcret
  8314  002020                     __end_of_USBDeviceTasks:
  8315                           	opt stack 0
  8316                           tosu	equ	0xFFF
  8317                           tosh	equ	0xFFE
  8318                           tosl	equ	0xFFD
  8319                           pclath	equ	0xFFA
  8320                           tblptru	equ	0xFF8
  8321                           tblptrh	equ	0xFF7
  8322                           tblptrl	equ	0xFF6
  8323                           tablat	equ	0xFF5
  8324                           prodh	equ	0xFF4
  8325                           prodl	equ	0xFF3
  8326                           intcon	equ	0xFF2
  8327                           intcon2	equ	0xFF1
  8328                           intcon3	equ	0xFF0
  8329                           postinc0	equ	0xFEE
  8330                           plusw0	equ	0xFEB
  8331                           wreg	equ	0xFE8
  8332                           postinc1	equ	0xFE6
  8333                           postdec1	equ	0xFE5
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           plusw2	equ	0xFDB
  8340                           fsr2h	equ	0xFDA
  8341                           fsr2l	equ	0xFD9
  8342                           status	equ	0xFD8
  8343                           
  8344 ;; *************** function _USBWakeFromSuspend *****************
  8345 ;; Defined at:
  8346 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:   15
  8367 ;; This function calls:
  8368 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8369 ;; This function is called by:
  8370 ;;		_USBDeviceTasks
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text29
  8375  0060EA                     __ptext29:
  8376                           	opt stack 0
  8377  0060EA                     _USBWakeFromSuspend:
  8378                           	opt stack 11
  8379                           
  8380                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  8381                           
  8382                           ;incstack = 0
  8383  0060EA  0E00               	movlw	0
  8384  0060EC  0101               	movlb	1	; () banked
  8385  0060EE  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8386                           
  8387                           ; BSR set to: 1
  8388                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  8389  0060F0  0E00               	movlw	0
  8390  0060F2  0100               	movlb	0	; () banked
  8391  0060F4  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8392  0060F6  0E74               	movlw	116
  8393  0060F8  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8394  0060FA  0E00               	movlw	0
  8395  0060FC  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8396  0060FE  0E00               	movlw	0
  8397  006100  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8398  006102  0E00               	movlw	0
  8399  006104  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8400  006106  0E00               	movlw	0
  8401  006108  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8402  00610A  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8403                           
  8404                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  8405  00610E  9265               	bcf	3941,1,c	;volatile
  8406                           
  8407                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  8408  006110  010F               	movlb	15	; () banked
  8409  006112  9536               	bcf	54,2,b	;volatile
  8410                           
  8411                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  8412  006114  D001               	goto	l1768
  8413  006116                     
  8414                           ;usb_device.c: 2361: {
  8415                           ;usb_device.c: 2362: (UIR &= 0xFB);
  8416                           
  8417                           ; BSR set to: 15
  8418  006116  9462               	bcf	3938,2,c	;volatile
  8419  006118                     l1768:
  8420  006118  B462               	btfsc	3938,2,c	;volatile
  8421  00611A  D7FD               	goto	l1769
  8422                           
  8423                           ;usb_device.c: 2363: }
  8424                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8425  00611C  0E00               	movlw	0
  8426  00611E  0101               	movlb	1	; () banked
  8427  006120  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8428                           
  8429                           ; BSR set to: 1
  8430  006122  0012               	return		;funcret
  8431  006124                     __end_of_USBWakeFromSuspend:
  8432                           	opt stack 0
  8433                           tosu	equ	0xFFF
  8434                           tosh	equ	0xFFE
  8435                           tosl	equ	0xFFD
  8436                           pclath	equ	0xFFA
  8437                           tblptru	equ	0xFF8
  8438                           tblptrh	equ	0xFF7
  8439                           tblptrl	equ	0xFF6
  8440                           tablat	equ	0xFF5
  8441                           prodh	equ	0xFF4
  8442                           prodl	equ	0xFF3
  8443                           intcon	equ	0xFF2
  8444                           intcon2	equ	0xFF1
  8445                           intcon3	equ	0xFF0
  8446                           postinc0	equ	0xFEE
  8447                           plusw0	equ	0xFEB
  8448                           wreg	equ	0xFE8
  8449                           postinc1	equ	0xFE6
  8450                           postdec1	equ	0xFE5
  8451                           fsr1h	equ	0xFE2
  8452                           fsr1l	equ	0xFE1
  8453                           indf2	equ	0xFDF
  8454                           postinc2	equ	0xFDE
  8455                           postdec2	equ	0xFDD
  8456                           plusw2	equ	0xFDB
  8457                           fsr2h	equ	0xFDA
  8458                           fsr2l	equ	0xFD9
  8459                           status	equ	0xFD8
  8460                           
  8461 ;; *************** function _USBSuspend *****************
  8462 ;; Defined at:
  8463 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8481 ;;Total ram usage:        0 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:   15
  8484 ;; This function calls:
  8485 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8486 ;; This function is called by:
  8487 ;;		_USBDeviceTasks
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text30
  8492  0061FE                     __ptext30:
  8493                           	opt stack 0
  8494  0061FE                     _USBSuspend:
  8495                           	opt stack 11
  8496                           
  8497                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8498                           
  8499                           ; BSR set to: 1
  8500                           ;incstack = 0
  8501  0061FE  010F               	movlb	15	; () banked
  8502  006200  8536               	bsf	54,2,b	;volatile
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8506  006202  9862               	bcf	3938,4,c	;volatile
  8507                           
  8508                           ; BSR set to: 15
  8509                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8510  006204  8265               	bsf	3941,1,c	;volatile
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8514  006206  0E01               	movlw	1
  8515  006208  0101               	movlb	1	; () banked
  8516  00620A  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8517                           
  8518                           ; BSR set to: 1
  8519                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8520  00620C  0E00               	movlw	0
  8521  00620E  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8522                           
  8523                           ; BSR set to: 1
  8524                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8525  006210  0E00               	movlw	0
  8526  006212  0100               	movlb	0	; () banked
  8527  006214  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8528  006216  0E75               	movlw	117
  8529  006218  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8530  00621A  0E00               	movlw	0
  8531  00621C  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8532  00621E  0E00               	movlw	0
  8533  006220  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8534  006222  0E00               	movlw	0
  8535  006224  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8536  006226  0E00               	movlw	0
  8537  006228  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8538  00622A  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8539  00622E  0012               	return		;funcret
  8540  006230                     __end_of_USBSuspend:
  8541                           	opt stack 0
  8542                           tosu	equ	0xFFF
  8543                           tosh	equ	0xFFE
  8544                           tosl	equ	0xFFD
  8545                           pclath	equ	0xFFA
  8546                           tblptru	equ	0xFF8
  8547                           tblptrh	equ	0xFF7
  8548                           tblptrl	equ	0xFF6
  8549                           tablat	equ	0xFF5
  8550                           prodh	equ	0xFF4
  8551                           prodl	equ	0xFF3
  8552                           intcon	equ	0xFF2
  8553                           intcon2	equ	0xFF1
  8554                           intcon3	equ	0xFF0
  8555                           postinc0	equ	0xFEE
  8556                           plusw0	equ	0xFEB
  8557                           wreg	equ	0xFE8
  8558                           postinc1	equ	0xFE6
  8559                           postdec1	equ	0xFE5
  8560                           fsr1h	equ	0xFE2
  8561                           fsr1l	equ	0xFE1
  8562                           indf2	equ	0xFDF
  8563                           postinc2	equ	0xFDE
  8564                           postdec2	equ	0xFDD
  8565                           plusw2	equ	0xFDB
  8566                           fsr2h	equ	0xFDA
  8567                           fsr2l	equ	0xFD9
  8568                           status	equ	0xFD8
  8569                           
  8570 ;; *************** function _USBStallHandler *****************
  8571 ;; Defined at:
  8572 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;		None
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      void 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;Total ram usage:        1 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:   11
  8593 ;; This function calls:
  8594 ;;		Nothing
  8595 ;; This function is called by:
  8596 ;;		_USBDeviceTasks
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text31
  8601  005DE0                     __ptext31:
  8602                           	opt stack 0
  8603  005DE0                     _USBStallHandler:
  8604                           	opt stack 15
  8605                           
  8606                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8607                           
  8608                           ;incstack = 0
  8609  005DE0  010F               	movlb	15	; () banked
  8610  005DE2  A126               	btfss	38,0,b	;volatile
  8611  005DE4  D01D               	goto	l1760
  8612                           
  8613                           ; BSR set to: 15
  8614                           ;usb_device.c: 2233: {
  8615                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8616  005DE6  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8617  005DEA  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8618  005DEE  0E80               	movlw	128
  8619  005DF0  18DE               	xorwf	postinc2,w,c
  8620  005DF2  A4D8               	btfss	status,2,c
  8621  005DF4  D014               	goto	l1761
  8622                           
  8623                           ; BSR set to: 15
  8624  005DF6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8625  005DFA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8626  005DFE  0E84               	movlw	132
  8627  005E00  18DE               	xorwf	postinc2,w,c
  8628  005E02  A4D8               	btfss	status,2,c
  8629  005E04  D00C               	goto	l1761
  8630                           
  8631                           ; BSR set to: 15
  8632                           ;usb_device.c: 2236: {
  8633                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8634  005E06  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8635  005E0A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8636  005E0E  0E0C               	movlw	12
  8637  005E10  6EDF               	movwf	indf2,c
  8638                           
  8639                           ; BSR set to: 15
  8640                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8641  005E12  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8642  005E16  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8643  005E1A  0E00               	movlw	0
  8644  005E1C  8EDB               	bsf	plusw2,7,c
  8645  005E1E                     l1761:
  8646                           
  8647                           ; BSR set to: 15
  8648                           ;usb_device.c: 2240: }
  8649                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8650                           
  8651                           ; BSR set to: 15
  8652  005E1E  9126               	bcf	38,0,b	;volatile
  8653  005E20                     l1760:
  8654                           
  8655                           ; BSR set to: 15
  8656                           ;usb_device.c: 2242: }
  8657                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8658  005E20  9A62               	bcf	3938,5,c	;volatile
  8659                           
  8660                           ; BSR set to: 15
  8661  005E22  0012               	return		;funcret
  8662  005E24                     __end_of_USBStallHandler:
  8663                           	opt stack 0
  8664                           tosu	equ	0xFFF
  8665                           tosh	equ	0xFFE
  8666                           tosl	equ	0xFFD
  8667                           pclath	equ	0xFFA
  8668                           tblptru	equ	0xFF8
  8669                           tblptrh	equ	0xFF7
  8670                           tblptrl	equ	0xFF6
  8671                           tablat	equ	0xFF5
  8672                           prodh	equ	0xFF4
  8673                           prodl	equ	0xFF3
  8674                           intcon	equ	0xFF2
  8675                           intcon2	equ	0xFF1
  8676                           intcon3	equ	0xFF0
  8677                           postinc0	equ	0xFEE
  8678                           plusw0	equ	0xFEB
  8679                           wreg	equ	0xFE8
  8680                           postinc1	equ	0xFE6
  8681                           postdec1	equ	0xFE5
  8682                           fsr1h	equ	0xFE2
  8683                           fsr1l	equ	0xFE1
  8684                           indf2	equ	0xFDF
  8685                           postinc2	equ	0xFDE
  8686                           postdec2	equ	0xFDD
  8687                           plusw2	equ	0xFDB
  8688                           fsr2h	equ	0xFDA
  8689                           fsr2l	equ	0xFD9
  8690                           status	equ	0xFD8
  8691                           
  8692 ;; *************** function _USBIncrement1msInternalTimers *****************
  8693 ;; Defined at:
  8694 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;Total ram usage:        0 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:   11
  8715 ;; This function calls:
  8716 ;;		Nothing
  8717 ;; This function is called by:
  8718 ;;		_USBDeviceTasks
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text32
  8723  006524                     __ptext32:
  8724                           	opt stack 0
  8725  006524                     _USBIncrement1msInternalTimers:
  8726                           	opt stack 15
  8727                           
  8728                           ;usb_device.c: 3050: USB1msTickCount++;
  8729                           
  8730                           ; BSR set to: 15
  8731                           ;incstack = 0
  8732  006524  0E01               	movlw	1
  8733  006526  0103               	movlb	3	; () banked
  8734  006528  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8735  00652A  0E00               	movlw	0
  8736  00652C  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8737  00652E  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8738  006530  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8739                           
  8740                           ; BSR set to: 3
  8741                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8742  006532  0101               	movlb	1	; () banked
  8743  006534  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8744  006536  A4D8               	btfss	status,2,c
  8745  006538  0012               	return	
  8746                           
  8747                           ; BSR set to: 1
  8748                           ;usb_device.c: 3052: {
  8749                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8750  00653A  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8751                           
  8752                           ; BSR set to: 1
  8753                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8754  00653C  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8755  00653E  A4D8               	btfss	status,2,c
  8756  006540  0012               	return	
  8757                           
  8758                           ; BSR set to: 1
  8759                           ;usb_device.c: 3056: {
  8760                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8761  006542  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8762                           
  8763                           ; BSR set to: 1
  8764  006544  0012               	return	
  8765  006546                     __end_of_USBIncrement1msInternalTimers:
  8766                           	opt stack 0
  8767                           tosu	equ	0xFFF
  8768                           tosh	equ	0xFFE
  8769                           tosl	equ	0xFFD
  8770                           pclath	equ	0xFFA
  8771                           tblptru	equ	0xFF8
  8772                           tblptrh	equ	0xFF7
  8773                           tblptrl	equ	0xFF6
  8774                           tablat	equ	0xFF5
  8775                           prodh	equ	0xFF4
  8776                           prodl	equ	0xFF3
  8777                           intcon	equ	0xFF2
  8778                           intcon2	equ	0xFF1
  8779                           intcon3	equ	0xFF0
  8780                           postinc0	equ	0xFEE
  8781                           plusw0	equ	0xFEB
  8782                           wreg	equ	0xFE8
  8783                           postinc1	equ	0xFE6
  8784                           postdec1	equ	0xFE5
  8785                           fsr1h	equ	0xFE2
  8786                           fsr1l	equ	0xFE1
  8787                           indf2	equ	0xFDF
  8788                           postinc2	equ	0xFDE
  8789                           postdec2	equ	0xFDD
  8790                           plusw2	equ	0xFDB
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function _USBDeviceInit *****************
  8796 ;; Defined at:
  8797 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  i               1   37[BANK0 ] unsigned char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;Total ram usage:        1 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:   12
  8818 ;; This function calls:
  8819 ;;		_memset
  8820 ;; This function is called by:
  8821 ;;		_USBDeviceTasks
  8822 ;;		_UsbDevice_MainTask
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text33
  8827  00271A                     __ptext33:
  8828                           	opt stack 0
  8829  00271A                     _USBDeviceInit:
  8830                           	opt stack 14
  8831                           
  8832                           ;usb_device.c: 297: uint8_t i;
  8833                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8834                           
  8835                           ; BSR set to: 1
  8836                           ;incstack = 0
  8837  00271A  98A0               	bcf	4000,4,c	;volatile
  8838                           
  8839                           ;usb_device.c: 303: ;
  8840                           ;usb_device.c: 306: {UEIR = 0;};
  8841  00271C  0E00               	movlw	0
  8842  00271E  6E63               	movwf	3939,c	;volatile
  8843                           
  8844                           ;usb_device.c: 309: {UIR = 0;};
  8845  002720  0E00               	movlw	0
  8846  002722  6E62               	movwf	3938,c	;volatile
  8847                           
  8848                           ;usb_device.c: 312: UEP0 = 0;
  8849  002724  0E00               	movlw	0
  8850  002726  010F               	movlb	15	; () banked
  8851  002728  6F26               	movwf	38,b	;volatile
  8852                           
  8853                           ; BSR set to: 15
  8854                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8855  00272A  0E27               	movlw	39
  8856  00272C  0100               	movlb	0	; () banked
  8857  00272E  6F7D               	movwf	memset@p1& (0+255),b
  8858  002730  0E0F               	movlw	15
  8859  002732  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8860  002734  0E00               	movlw	0
  8861  002736  6F80               	movwf	(memset@c+1)& (0+255),b
  8862  002738  0E00               	movlw	0
  8863  00273A  6F7F               	movwf	memset@c& (0+255),b
  8864  00273C  0E00               	movlw	0
  8865  00273E  6F82               	movwf	(memset@n+1)& (0+255),b
  8866  002740  0E02               	movlw	2
  8867  002742  6F81               	movwf	memset@n& (0+255),b
  8868  002744  EC49  F031         	call	_memset	;wreg free
  8869                           
  8870                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8871  002748  0E16               	movlw	22
  8872  00274A  010F               	movlb	15	; () banked
  8873  00274C  6F39               	movwf	57,b	;volatile
  8874                           
  8875                           ; BSR set to: 15
  8876  00274E  0E9F               	movlw	159
  8877  002750  6F37               	movwf	55,b	;volatile
  8878                           
  8879                           ; BSR set to: 15
  8880  002752  0E7B               	movlw	123
  8881  002754  6F36               	movwf	54,b	;volatile
  8882                           
  8883                           ; BSR set to: 15
  8884                           ;usb_device.c: 319: ;
  8885                           ;usb_device.c: 322: ;
  8886                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8887  002756  0E00               	movlw	0
  8888  002758  0100               	movlb	0	; () banked
  8889  00275A  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8890  00275C                     l14244:
  8891                           
  8892                           ; BSR set to: 0
  8893  00275C  0E0B               	movlw	11
  8894  00275E  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8895  002760  D001               	goto	l1604
  8896  002762  D00E               	goto	u13430
  8897  002764                     l1604:
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;usb_device.c: 326: {
  8901                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8902                           
  8903                           ; BSR set to: 0
  8904  002764  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8905  002766  0D04               	mullw	4
  8906  002768  0E00               	movlw	0
  8907  00276A  24F3               	addwf	prodl,w,c
  8908  00276C  6ED9               	movwf	fsr2l,c
  8909  00276E  0E04               	movlw	4
  8910  002770  20F4               	addwfc	prodh,w,c
  8911  002772  6EDA               	movwf	fsr2h,c
  8912  002774  6ADE               	clrf	postinc2,c
  8913  002776  6ADE               	clrf	postinc2,c
  8914  002778  6ADE               	clrf	postinc2,c
  8915  00277A  6ADD               	clrf	postdec2,c
  8916                           
  8917                           ; BSR set to: 0
  8918  00277C  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8919  00277E  D7EE               	goto	l14244
  8920  002780                     u13430:
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;usb_device.c: 328: }
  8924                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8925  002780  8C65               	bsf	3941,6,c	;volatile
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;usb_device.c: 334: UADDR = 0x00;
  8929  002782  0E00               	movlw	0
  8930  002784  010F               	movlb	15	; () banked
  8931  002786  6F38               	movwf	56,b	;volatile
  8932                           
  8933                           ; BSR set to: 15
  8934                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8935  002788  9865               	bcf	3941,4,c	;volatile
  8936                           
  8937                           ; BSR set to: 15
  8938                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8939  00278A  9C65               	bcf	3941,6,c	;volatile
  8940  00278C                     
  8941                           ;usb_device.c: 344: {
  8942                           ;usb_device.c: 345: (UIR &= 0xF7);
  8943                           
  8944                           ; BSR set to: 15
  8945  00278C  9662               	bcf	3938,3,c	;volatile
  8946                           
  8947                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8948  00278E  0E00               	movlw	0
  8949  002790  0100               	movlb	0	; () banked
  8950  002792  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8954  002794  0E00               	movlw	0
  8955  002796  0101               	movlb	1	; () banked
  8956  002798  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8957                           
  8958                           ; BSR set to: 1
  8959                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8960  00279A  0E00               	movlw	0
  8961  00279C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8962  00279E  0E00               	movlw	0
  8963  0027A0  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8964                           
  8965                           ; BSR set to: 1
  8966                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8967  0027A2  B662               	btfsc	3938,3,c	;volatile
  8968  0027A4  D7F3               	goto	l1606
  8969                           
  8970                           ; BSR set to: 1
  8971                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8972                           
  8973                           ; BSR set to: 1
  8974  0027A6  0E01               	movlw	1
  8975  0027A8  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8976                           
  8977                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8978  0027AA  0E01               	movlw	1
  8979  0027AC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8980                           
  8981                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8982  0027AE  0E00               	movlw	0
  8983  0027B0  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8984                           
  8985                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8986  0027B2  0E00               	movlw	0
  8987  0027B4  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8988                           
  8989                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8990  0027B6  0E00               	movlw	0
  8991  0027B8  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8992                           
  8993                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8994  0027BA  0E00               	movlw	0
  8995  0027BC  0100               	movlb	0	; () banked
  8996  0027BE  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8997  0027C0                     l14272:
  8998                           
  8999                           ; BSR set to: 0
  9000  0027C0  0E02               	movlw	2
  9001  0027C2  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  9002  0027C4  D001               	goto	l1608
  9003  0027C6  D02E               	goto	u13460
  9004  0027C8                     l1608:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;usb_device.c: 364: {
  9008                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  9009                           
  9010                           ; BSR set to: 0
  9011  0027C8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9012  0027CA  0D02               	mullw	2
  9013  0027CC  0EB6               	movlw	low _pBDTEntryIn
  9014  0027CE  24F3               	addwf	prodl,w,c
  9015  0027D0  6ED9               	movwf	fsr2l,c
  9016  0027D2  0E00               	movlw	high _pBDTEntryIn
  9017  0027D4  20F4               	addwfc	prodh,w,c
  9018  0027D6  6EDA               	movwf	fsr2h,c
  9019  0027D8  0E00               	movlw	0
  9020  0027DA  6EDE               	movwf	postinc2,c
  9021  0027DC  0E00               	movlw	0
  9022  0027DE  6EDD               	movwf	postdec2,c
  9023                           
  9024                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  9025  0027E0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9026  0027E2  0D02               	mullw	2
  9027  0027E4  0E06               	movlw	low _pBDTEntryOut
  9028  0027E6  24F3               	addwf	prodl,w,c
  9029  0027E8  6ED9               	movwf	fsr2l,c
  9030  0027EA  0E03               	movlw	high _pBDTEntryOut
  9031  0027EC  20F4               	addwfc	prodh,w,c
  9032  0027EE  6EDA               	movwf	fsr2h,c
  9033  0027F0  0E00               	movlw	0
  9034  0027F2  6EDE               	movwf	postinc2,c
  9035  0027F4  0E00               	movlw	0
  9036  0027F6  6EDD               	movwf	postdec2,c
  9037                           
  9038                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  9039  0027F8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9040  0027FA  0D01               	mullw	1
  9041  0027FC  0ED1               	movlw	low _ep_data_in
  9042  0027FE  24F3               	addwf	prodl,w,c
  9043  002800  6ED9               	movwf	fsr2l,c
  9044  002802  0E02               	movlw	high _ep_data_in
  9045  002804  20F4               	addwfc	prodh,w,c
  9046  002806  6EDA               	movwf	fsr2h,c
  9047  002808  0E00               	movlw	0
  9048  00280A  6EDF               	movwf	indf2,c
  9049                           
  9050                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  9051  00280C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  9052  00280E  0D01               	mullw	1
  9053  002810  0ECE               	movlw	low _ep_data_out
  9054  002812  24F3               	addwf	prodl,w,c
  9055  002814  6ED9               	movwf	fsr2l,c
  9056  002816  0E02               	movlw	high _ep_data_out
  9057  002818  20F4               	addwfc	prodh,w,c
  9058  00281A  6EDA               	movwf	fsr2h,c
  9059  00281C  0E00               	movlw	0
  9060  00281E  6EDF               	movwf	indf2,c
  9061                           
  9062                           ; BSR set to: 0
  9063  002820  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  9064  002822  D7CE               	goto	l14272
  9065  002824                     u13460:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;usb_device.c: 369: }
  9069                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9070                           
  9071                           ; BSR set to: 0
  9072  002824  0E08               	movlw	8
  9073  002826  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9074  002828  0E04               	movlw	4
  9075  00282A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  9079  00282C  0E16               	movlw	22
  9080  00282E  010F               	movlb	15	; () banked
  9081  002830  6F26               	movwf	38,b	;volatile
  9082                           
  9083                           ; BSR set to: 15
  9084                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  9085  002832  0E04               	movlw	4
  9086  002834  0104               	movlb	4	; () banked
  9087  002836  6F03               	movwf	3,b	;volatile
  9088  002838  0E30               	movlw	48
  9089  00283A  6F02               	movwf	2,b	;volatile
  9090                           
  9091                           ; BSR set to: 4
  9092                           ;usb_device.c: 377: BDT[0].CNT = 8;
  9093  00283C  0E08               	movlw	8
  9094  00283E  6F01               	movwf	1,b	;volatile
  9095                           
  9096                           ; BSR set to: 4
  9097                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  9098  002840  0E04               	movlw	4
  9099  002842  6F00               	movwf	0,b	;volatile
  9100                           
  9101                           ; BSR set to: 4
  9102                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  9103  002844  8F00               	bsf	0,7,b	;volatile
  9104                           
  9105                           ; BSR set to: 4
  9106                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  9107  002846  0E00               	movlw	0
  9108  002848  0100               	movlb	0	; () banked
  9109  00284A  6FD5               	movwf	_USBActiveConfiguration& (0+255),b
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;usb_device.c: 384: USB1msTickCount = 0;
  9113  00284C  0E00               	movlw	0
  9114  00284E  0103               	movlb	3	; () banked
  9115  002850  6F10               	movwf	_USB1msTickCount& (0+255),b
  9116  002852  0E00               	movlw	0
  9117  002854  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  9118  002856  0E00               	movlw	0
  9119  002858  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  9120  00285A  0E00               	movlw	0
  9121  00285C  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  9122                           
  9123                           ; BSR set to: 3
  9124                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  9125  00285E  0E00               	movlw	0
  9126  002860  0101               	movlb	1	; () banked
  9127  002862  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  9128                           
  9129                           ; BSR set to: 1
  9130                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  9131  002864  0E00               	movlw	0
  9132  002866  0100               	movlb	0	; () banked
  9133  002868  6FCC               	movwf	_USBDeviceState& (0+255),b
  9134                           
  9135                           ; BSR set to: 0
  9136  00286A  0012               	return		;funcret
  9137  00286C                     __end_of_USBDeviceInit:
  9138                           	opt stack 0
  9139                           tosu	equ	0xFFF
  9140                           tosh	equ	0xFFE
  9141                           tosl	equ	0xFFD
  9142                           pclath	equ	0xFFA
  9143                           tblptru	equ	0xFF8
  9144                           tblptrh	equ	0xFF7
  9145                           tblptrl	equ	0xFF6
  9146                           tablat	equ	0xFF5
  9147                           prodh	equ	0xFF4
  9148                           prodl	equ	0xFF3
  9149                           intcon	equ	0xFF2
  9150                           intcon2	equ	0xFF1
  9151                           intcon3	equ	0xFF0
  9152                           postinc0	equ	0xFEE
  9153                           plusw0	equ	0xFEB
  9154                           wreg	equ	0xFE8
  9155                           postinc1	equ	0xFE6
  9156                           postdec1	equ	0xFE5
  9157                           fsr1h	equ	0xFE2
  9158                           fsr1l	equ	0xFE1
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           plusw2	equ	0xFDB
  9163                           fsr2h	equ	0xFDA
  9164                           fsr2l	equ	0xFD9
  9165                           status	equ	0xFD8
  9166                           
  9167 ;; *************** function _USBCtrlEPService *****************
  9168 ;; Defined at:
  9169 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;		None
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9185 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9187 ;;Total ram usage:        1 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; Hardware stack levels required when called:   18
  9190 ;; This function calls:
  9191 ;;		_USBCtrlTrfInHandler
  9192 ;;		_USBCtrlTrfOutHandler
  9193 ;;		_USBCtrlTrfSetupHandler
  9194 ;;		_memcpy
  9195 ;; This function is called by:
  9196 ;;		_USBDeviceTasks
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text34
  9201  004BD0                     __ptext34:
  9202                           	opt stack 0
  9203  004BD0                     _USBCtrlEPService:
  9204                           	opt stack 8
  9205                           
  9206                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;incstack = 0
  9210  004BD0  0E2D               	movlw	45
  9211  004BD2  0100               	movlb	0	; () banked
  9212  004BD4  6FC8               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  9216  004BD6  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9217  004BDA  0EFD               	movlw	253
  9218  004BDC  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9219  004BDE  A4D8               	btfss	status,2,c
  9220  004BE0  D038               	goto	l1774
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 2401: {
  9224                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9225  004BE2  C0D4  F097         	movff	_USTATcopy,??_USBCtrlEPService
  9226  004BE6  90D8               	bcf	status,0,c
  9227  004BE8  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  9228  004BEA  0E3F               	movlw	63
  9229  004BEC  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  9230  004BEE  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  9231  004BF0  0D04               	mullw	4
  9232  004BF2  0E00               	movlw	0
  9233  004BF4  24F3               	addwf	prodl,w,c
  9234  004BF6  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9235  004BF8  0E04               	movlw	4
  9236  004BFA  20F4               	addwfc	prodh,w,c
  9237  004BFC  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9241  004BFE  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9242  004C02  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9246  004C06  0E04               	movlw	4
  9247  004C08  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9251  004C0A  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  9252  004C0E  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  9253  004C12  30DF               	rrcf	223,w,c
  9254  004C14  32E8               	rrcf	wreg,f,c
  9255  004C16  0B0F               	andlw	15
  9256  004C18  0A0D               	xorlw	13
  9257  004C1A  A4D8               	btfss	status,2,c
  9258  004C1C  D017               	goto	l1775
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;usb_device.c: 2418: {
  9262                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  9263  004C1E  0E30               	movlw	48
  9264  004C20  6F7D               	movwf	memcpy@d1& (0+255),b
  9265  004C22  0E04               	movlw	4
  9266  004C24  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  9267  004C26  EE20 F002          	lfsr	2,2
  9268  004C2A  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  9269  004C2C  26D9               	addwf	fsr2l,f,c
  9270  004C2E  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  9271  004C30  22DA               	addwfc	fsr2h,f,c
  9272  004C32  CFDE F07F          	movff	postinc2,memcpy@s1
  9273  004C36  CFDD F080          	movff	postdec2,memcpy@s1+1
  9274  004C3A  0E00               	movlw	0
  9275  004C3C  6F82               	movwf	(memcpy@n+1)& (0+255),b
  9276  004C3E  0E08               	movlw	8
  9277  004C40  6F81               	movwf	memcpy@n& (0+255),b
  9278  004C42  EC85  F02E         	call	_memcpy	;wreg free
  9279                           
  9280                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  9281  004C46  EC53  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
  9282                           
  9283                           ;usb_device.c: 2427: }
  9284  004C4A  0012               	return	
  9285  004C4C                     l1775:
  9286                           
  9287                           ;usb_device.c: 2428: else
  9288                           ;usb_device.c: 2429: {
  9289                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  9290  004C4C  EC22  F02A         	call	_USBCtrlTrfOutHandler	;wreg free
  9291                           
  9292                           ;usb_device.c: 2432: }
  9293                           ;usb_device.c: 2433: }
  9294  004C50  0012               	return	
  9295  004C52                     l1774:
  9296                           
  9297                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  9298  004C52  0100               	movlb	0	; () banked
  9299  004C54  51D4               	movf	_USTATcopy& (0+255),w,b
  9300  004C56  0BFD               	andlw	253
  9301  004C58  0A04               	xorlw	4
  9302  004C5A  A4D8               	btfss	status,2,c
  9303  004C5C  0012               	return	
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;usb_device.c: 2435: {
  9307                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  9308  004C5E  ECAC  F020         	call	_USBCtrlTrfInHandler	;wreg free
  9309  004C62  0012               	return	
  9310  004C64                     __end_of_USBCtrlEPService:
  9311                           	opt stack 0
  9312                           tosu	equ	0xFFF
  9313                           tosh	equ	0xFFE
  9314                           tosl	equ	0xFFD
  9315                           pclath	equ	0xFFA
  9316                           tblptru	equ	0xFF8
  9317                           tblptrh	equ	0xFF7
  9318                           tblptrl	equ	0xFF6
  9319                           tablat	equ	0xFF5
  9320                           prodh	equ	0xFF4
  9321                           prodl	equ	0xFF3
  9322                           intcon	equ	0xFF2
  9323                           intcon2	equ	0xFF1
  9324                           intcon3	equ	0xFF0
  9325                           postinc0	equ	0xFEE
  9326                           plusw0	equ	0xFEB
  9327                           wreg	equ	0xFE8
  9328                           postinc1	equ	0xFE6
  9329                           postdec1	equ	0xFE5
  9330                           fsr1h	equ	0xFE2
  9331                           fsr1l	equ	0xFE1
  9332                           indf2	equ	0xFDF
  9333                           postinc2	equ	0xFDE
  9334                           postdec2	equ	0xFDD
  9335                           plusw2	equ	0xFDB
  9336                           fsr2h	equ	0xFDA
  9337                           fsr2l	equ	0xFD9
  9338                           status	equ	0xFD8
  9339                           
  9340 ;; *************** function _memcpy *****************
  9341 ;; Defined at:
  9342 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  d1              2   29[BANK0 ] PTR void 
  9345 ;;		 -> SetupPkt(8), 
  9346 ;;  s1              2   31[BANK0 ] PTR const void 
  9347 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9348 ;;  n               2   33[BANK0 ] unsigned int 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  9351 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  9352 ;;  d               2   36[BANK0 ] PTR unsigned char 
  9353 ;;		 -> SetupPkt(8), 
  9354 ;;  tmp             1   35[BANK0 ] unsigned char 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2   29[BANK0 ] PTR void 
  9357 ;; Registers used:
  9358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9364 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9365 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9367 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9368 ;;Total ram usage:       11 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:   11
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_USBCtrlEPService
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text35
  9379  005D0A                     __ptext35:
  9380                           	opt stack 0
  9381  005D0A                     _memcpy:
  9382                           	opt stack 14
  9383                           
  9384                           ;incstack = 0
  9385  005D0A  C07F  F086         	movff	memcpy@s1,memcpy@s
  9386  005D0E  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  9387  005D12  C07D  F084         	movff	memcpy@d1,memcpy@d
  9388  005D16  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  9389  005D1A  D011               	goto	l3299
  9390  005D1C                     l13516:
  9391  005D1C  C086  FFD9         	movff	memcpy@s,fsr2l
  9392  005D20  C087  FFDA         	movff	memcpy@s+1,fsr2h
  9393  005D24  50DF               	movf	indf2,w,c
  9394  005D26  0100               	movlb	0	; () banked
  9395  005D28  6F83               	movwf	memcpy@tmp& (0+255),b
  9396                           
  9397                           ; BSR set to: 0
  9398  005D2A  4B86               	infsnz	memcpy@s& (0+255),f,b
  9399  005D2C  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  9400                           
  9401                           ; BSR set to: 0
  9402  005D2E  C084  FFD9         	movff	memcpy@d,fsr2l
  9403  005D32  C085  FFDA         	movff	memcpy@d+1,fsr2h
  9404  005D36  C083  FFDF         	movff	memcpy@tmp,indf2
  9405                           
  9406                           ; BSR set to: 0
  9407  005D3A  4B84               	infsnz	memcpy@d& (0+255),f,b
  9408  005D3C  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  9409  005D3E                     l3299:
  9410                           
  9411                           ; BSR set to: 0
  9412  005D3E  0100               	movlb	0	; () banked
  9413  005D40  0781               	decf	memcpy@n& (0+255),f,b
  9414  005D42  A0D8               	btfss	status,0,c
  9415  005D44  0782               	decf	(memcpy@n+1)& (0+255),f,b
  9416  005D46  2981               	incf	memcpy@n& (0+255),w,b
  9417  005D48  E1E9               	bnz	l13516
  9418  005D4A  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9419  005D4C  B4D8               	btfsc	status,2,c
  9420  005D4E  0012               	return	
  9421  005D50  D7E5               	goto	l3300
  9422  005D52                     __end_of_memcpy:
  9423                           	opt stack 0
  9424                           tosu	equ	0xFFF
  9425                           tosh	equ	0xFFE
  9426                           tosl	equ	0xFFD
  9427                           pclath	equ	0xFFA
  9428                           tblptru	equ	0xFF8
  9429                           tblptrh	equ	0xFF7
  9430                           tblptrl	equ	0xFF6
  9431                           tablat	equ	0xFF5
  9432                           prodh	equ	0xFF4
  9433                           prodl	equ	0xFF3
  9434                           intcon	equ	0xFF2
  9435                           intcon2	equ	0xFF1
  9436                           intcon3	equ	0xFF0
  9437                           postinc0	equ	0xFEE
  9438                           plusw0	equ	0xFEB
  9439                           wreg	equ	0xFE8
  9440                           postinc1	equ	0xFE6
  9441                           postdec1	equ	0xFE5
  9442                           fsr1h	equ	0xFE2
  9443                           fsr1l	equ	0xFE1
  9444                           indf2	equ	0xFDF
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           plusw2	equ	0xFDB
  9448                           fsr2h	equ	0xFDA
  9449                           fsr2l	equ	0xFD9
  9450                           status	equ	0xFD8
  9451                           
  9452 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9453 ;; Defined at:
  9454 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9472 ;;Total ram usage:        0 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:   17
  9475 ;; This function calls:
  9476 ;;		_USBCheckStdRequest
  9477 ;;		_USBCtrlEPServiceComplete
  9478 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9479 ;; This function is called by:
  9480 ;;		_USBCtrlEPService
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text36
  9485  004EA6                     __ptext36:
  9486                           	opt stack 0
  9487  004EA6                     _USBCtrlTrfSetupHandler:
  9488                           	opt stack 8
  9489                           
  9490                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;incstack = 0
  9494  004EA6  0E00               	movlw	0
  9495  004EA8  0100               	movlb	0	; () banked
  9496  004EAA  6FCB               	movwf	_shortPacketStatus& (0+255),b
  9497                           
  9498                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9499  004EAC  0E00               	movlw	0
  9500  004EAE  6FC7               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9501                           
  9502                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9503  004EB0  0E00               	movlw	0
  9504  004EB2  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9505                           
  9506                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9507  004EB4  0E00               	movlw	0
  9508  004EB6  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9509                           
  9510                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9511  004EB8  0E00               	movlw	0
  9512  004EBA  0101               	movlb	1	; () banked
  9513  004EBC  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9514                           
  9515                           ;usb_device.c: 2493: controlTransferState = 0;
  9516  004EBE  0E00               	movlw	0
  9517  004EC0  0100               	movlb	0	; () banked
  9518  004EC2  6FCA               	movwf	_controlTransferState& (0+255),b
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9522  004EC4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9523  004EC8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9524  004ECC  0E7F               	movlw	127
  9525  004ECE  16DF               	andwf	indf2,f,c
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9529  004ED0  0E04               	movlw	4
  9530  004ED2  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9534  004ED4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9535  004ED8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9536  004EDC  0E7F               	movlw	127
  9537  004EDE  16DF               	andwf	indf2,f,c
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9541  004EE0  0E04               	movlw	4
  9542  004EE2  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9546  004EE4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9547  004EE8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9548  004EEC  0E7F               	movlw	127
  9549  004EEE  16DF               	andwf	indf2,f,c
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9553  004EF0  0E00               	movlw	0
  9554  004EF2  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9558  004EF4  0E00               	movlw	0
  9559  004EF6  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9560  004EF8  0E00               	movlw	0
  9561  004EFA  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9565  004EFC  0E00               	movlw	0
  9566  004EFE  0101               	movlb	1	; () banked
  9567  004F00  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9568                           
  9569                           ; BSR set to: 1
  9570                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9571  004F02  0E00               	movlw	0
  9572  004F04  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9573  004F06  0E00               	movlw	0
  9574  004F08  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9575                           
  9576                           ; BSR set to: 1
  9577                           ;usb_device.c: 2517: USBCheckStdRequest();
  9578  004F0A  EC65  F01B         	call	_USBCheckStdRequest	;wreg free
  9579                           
  9580                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9581  004F0E  0E00               	movlw	0
  9582  004F10  0100               	movlb	0	; () banked
  9583  004F12  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9584  004F14  0E03               	movlw	3
  9585  004F16  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9586  004F18  0E00               	movlw	0
  9587  004F1A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9588  004F1C  0E00               	movlw	0
  9589  004F1E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9590  004F20  0E00               	movlw	0
  9591  004F22  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9592  004F24  0E00               	movlw	0
  9593  004F26  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9594  004F28  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9595                           
  9596                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9597  004F2C  EC15  F019         	call	_USBCtrlEPServiceComplete	;wreg free
  9598  004F30  0012               	return		;funcret
  9599  004F32                     __end_of_USBCtrlTrfSetupHandler:
  9600                           	opt stack 0
  9601                           tosu	equ	0xFFF
  9602                           tosh	equ	0xFFE
  9603                           tosl	equ	0xFFD
  9604                           pclath	equ	0xFFA
  9605                           tblptru	equ	0xFF8
  9606                           tblptrh	equ	0xFF7
  9607                           tblptrl	equ	0xFF6
  9608                           tablat	equ	0xFF5
  9609                           prodh	equ	0xFF4
  9610                           prodl	equ	0xFF3
  9611                           intcon	equ	0xFF2
  9612                           intcon2	equ	0xFF1
  9613                           intcon3	equ	0xFF0
  9614                           postinc0	equ	0xFEE
  9615                           plusw0	equ	0xFEB
  9616                           wreg	equ	0xFE8
  9617                           postinc1	equ	0xFE6
  9618                           postdec1	equ	0xFE5
  9619                           fsr1h	equ	0xFE2
  9620                           fsr1l	equ	0xFE1
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           postdec2	equ	0xFDD
  9624                           plusw2	equ	0xFDB
  9625                           fsr2h	equ	0xFDA
  9626                           fsr2l	equ	0xFD9
  9627                           status	equ	0xFD8
  9628                           
  9629 ;; *************** function _USBCtrlEPServiceComplete *****************
  9630 ;; Defined at:
  9631 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9649 ;;Total ram usage:        0 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:   13
  9652 ;; This function calls:
  9653 ;;		_USBCtrlEPAllowDataStage
  9654 ;;		_USBCtrlEPAllowStatusStage
  9655 ;; This function is called by:
  9656 ;;		_USBCtrlTrfSetupHandler
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text37
  9661  00322A                     __ptext37:
  9662                           	opt stack 0
  9663  00322A                     _USBCtrlEPServiceComplete:
  9664                           	opt stack 11
  9665                           
  9666                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9667                           
  9668                           ;incstack = 0
  9669  00322A  9865               	bcf	3941,4,c	;volatile
  9670                           
  9671                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9672  00322C  0100               	movlb	0	; () banked
  9673  00322E  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9674  003230  D03B               	goto	l1684
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;usb_device.c: 1647: {
  9678                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9679  003232  0101               	movlb	1	; () banked
  9680  003234  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9681  003236  D00C               	goto	l1685
  9682                           
  9683                           ; BSR set to: 1
  9684                           ;usb_device.c: 1649: {
  9685                           ;usb_device.c: 1650: controlTransferState = 2;
  9686  003238  0E02               	movlw	2
  9687  00323A  0100               	movlb	0	; () banked
  9688  00323C  6FCA               	movwf	_controlTransferState& (0+255),b
  9689                           
  9690                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9691  00323E  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9692  003240  B4D8               	btfsc	status,2,c
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;usb_device.c: 1662: {
  9696                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9697  003242  EC68  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9698                           
  9699                           ;usb_device.c: 1664: }
  9700                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9701  003246  0E00               	movlw	0
  9702  003248  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9703                           
  9704                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9705  00324A  0E00               	movlw	0
  9706  00324C  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9707                           
  9708                           ;usb_device.c: 1670: }
  9709  00324E  0012               	return	
  9710  003250                     l1685:
  9711                           
  9712                           ;usb_device.c: 1671: else
  9713                           ;usb_device.c: 1672: {
  9714                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9715  003250  0100               	movlb	0	; () banked
  9716  003252  EE20 F001          	lfsr	2,1
  9717  003256  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9718  003258  26D9               	addwf	fsr2l,f,c
  9719  00325A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9720  00325C  22DA               	addwfc	fsr2h,f,c
  9721  00325E  0E08               	movlw	8
  9722  003260  6EDF               	movwf	indf2,c
  9723                           
  9724                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9725  003262  EE20 F002          	lfsr	2,2
  9726  003266  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9727  003268  26D9               	addwf	fsr2l,f,c
  9728  00326A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9729  00326C  22DA               	addwfc	fsr2h,f,c
  9730  00326E  0E30               	movlw	48
  9731  003270  6EDE               	movwf	postinc2,c
  9732  003272  0E04               	movlw	4
  9733  003274  6EDD               	movwf	postdec2,c
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9737  003276  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9738  00327A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9739  00327E  0E0C               	movlw	12
  9740  003280  6EDF               	movwf	indf2,c
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9744  003282  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9745  003286  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9746  00328A  0E00               	movlw	0
  9747  00328C  8EDB               	bsf	plusw2,7,c
  9748                           
  9749                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9750  00328E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9751  003292  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9752  003296  0E04               	movlw	4
  9753  003298  6EDF               	movwf	indf2,c
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9757  00329A  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9758  00329E  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9759  0032A2  0E00               	movlw	0
  9760  0032A4  8EDB               	bsf	plusw2,7,c
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;usb_device.c: 1683: }
  9764                           ;usb_device.c: 1684: }
  9765  0032A6  0012               	return	
  9766  0032A8                     l1684:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;usb_device.c: 1685: else
  9770                           ;usb_device.c: 1686: {
  9771                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9772  0032A8  0104               	movlb	4	; () banked
  9773  0032AA  AF30               	btfss	48,7,b	;volatile
  9774  0032AC  D012               	goto	l1689
  9775                           
  9776                           ; BSR set to: 4
  9777                           ;usb_device.c: 1688: {
  9778                           ;usb_device.c: 1689: controlTransferState = 1;
  9779  0032AE  0E01               	movlw	1
  9780  0032B0  0100               	movlb	0	; () banked
  9781  0032B2  6FCA               	movwf	_controlTransferState& (0+255),b
  9782                           
  9783                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9784  0032B4  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9785  0032B6  B4D8               	btfsc	status,2,c
  9786                           
  9787                           ; BSR set to: 0
  9788                           ;usb_device.c: 1704: {
  9789                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9790  0032B8  EC68  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9791                           
  9792                           ;usb_device.c: 1706: }
  9793                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9794  0032BC  0E00               	movlw	0
  9795  0032BE  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9796                           
  9797                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9798  0032C0  0E00               	movlw	0
  9799  0032C2  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9800                           
  9801                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9802  0032C4  0100               	movlb	0	; () banked
  9803  0032C6  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9804  0032C8  A4D8               	btfss	status,2,c
  9805  0032CA  0012               	return	
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;usb_device.c: 1731: {
  9809                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9810  0032CC  EC53  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9811                           
  9812                           ;usb_device.c: 1733: }
  9813                           ;usb_device.c: 1734: }
  9814  0032D0  0012               	return	
  9815  0032D2                     l1689:
  9816                           
  9817                           ;usb_device.c: 1735: else
  9818                           ;usb_device.c: 1736: {
  9819                           ;usb_device.c: 1747: controlTransferState = 2;
  9820  0032D2  0E02               	movlw	2
  9821  0032D4  0100               	movlb	0	; () banked
  9822  0032D6  6FCA               	movwf	_controlTransferState& (0+255),b
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9826  0032D8  EE20 F001          	lfsr	2,1
  9827  0032DC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9828  0032DE  26D9               	addwf	fsr2l,f,c
  9829  0032E0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9830  0032E2  22DA               	addwfc	fsr2h,f,c
  9831  0032E4  0E08               	movlw	8
  9832  0032E6  6EDF               	movwf	indf2,c
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9836  0032E8  EE20 F002          	lfsr	2,2
  9837  0032EC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9838  0032EE  26D9               	addwf	fsr2l,f,c
  9839  0032F0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9840  0032F2  22DA               	addwfc	fsr2h,f,c
  9841  0032F4  0E30               	movlw	48
  9842  0032F6  6EDE               	movwf	postinc2,c
  9843  0032F8  0E04               	movlw	4
  9844  0032FA  6EDD               	movwf	postdec2,c
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9848  0032FC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9849  003300  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9850  003304  0E04               	movlw	4
  9851  003306  6EDF               	movwf	indf2,c
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9855  003308  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9856  00330C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9857  003310  0E00               	movlw	0
  9858  003312  8EDB               	bsf	plusw2,7,c
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9862  003314  0E00               	movlw	0
  9863  003316  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9867  003318  0E00               	movlw	0
  9868  00331A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9872  00331C  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9873  00331E  A4D8               	btfss	status,2,c
  9874  003320  0012               	return	
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;usb_device.c: 1759: {
  9878                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9879  003322  EC53  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9880  003326  0012               	return	
  9881  003328                     __end_of_USBCtrlEPServiceComplete:
  9882                           	opt stack 0
  9883                           tosu	equ	0xFFF
  9884                           tosh	equ	0xFFE
  9885                           tosl	equ	0xFFD
  9886                           pclath	equ	0xFFA
  9887                           tblptru	equ	0xFF8
  9888                           tblptrh	equ	0xFF7
  9889                           tblptrl	equ	0xFF6
  9890                           tablat	equ	0xFF5
  9891                           prodh	equ	0xFF4
  9892                           prodl	equ	0xFF3
  9893                           intcon	equ	0xFF2
  9894                           intcon2	equ	0xFF1
  9895                           intcon3	equ	0xFF0
  9896                           postinc0	equ	0xFEE
  9897                           plusw0	equ	0xFEB
  9898                           wreg	equ	0xFE8
  9899                           postinc1	equ	0xFE6
  9900                           postdec1	equ	0xFE5
  9901                           fsr1h	equ	0xFE2
  9902                           fsr1l	equ	0xFE1
  9903                           indf2	equ	0xFDF
  9904                           postinc2	equ	0xFDE
  9905                           postdec2	equ	0xFDD
  9906                           plusw2	equ	0xFDB
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           
  9911 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9912 ;; Defined at:
  9913 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:   12
  9934 ;; This function calls:
  9935 ;;		_USBCtrlTrfTxService
  9936 ;; This function is called by:
  9937 ;;		_USBCtrlEPServiceComplete
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text38
  9942  0048D0                     __ptext38:
  9943                           	opt stack 0
  9944  0048D0                     _USBCtrlEPAllowDataStage:
  9945                           	opt stack 11
  9946                           
  9947                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9948                           
  9949                           ;incstack = 0
  9950  0048D0  0E00               	movlw	0
  9951  0048D2  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9952                           
  9953                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9954  0048D4  0E00               	movlw	0
  9955  0048D6  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9956                           
  9957                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9958  0048D8  0E02               	movlw	2
  9959  0048DA  0100               	movlb	0	; () banked
  9960  0048DC  19CA               	xorwf	_controlTransferState& (0+255),w,b
  9961  0048DE  A4D8               	btfss	status,2,c
  9962  0048E0  D01F               	goto	l1673
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;usb_device.c: 1512: {
  9966                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9967  0048E2  EE20 F001          	lfsr	2,1
  9968  0048E6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9969  0048E8  26D9               	addwf	fsr2l,f,c
  9970  0048EA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9971  0048EC  22DA               	addwfc	fsr2h,f,c
  9972  0048EE  0E08               	movlw	8
  9973  0048F0  6EDF               	movwf	indf2,c
  9974                           
  9975                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9976  0048F2  EE20 F002          	lfsr	2,2
  9977  0048F6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9978  0048F8  26D9               	addwf	fsr2l,f,c
  9979  0048FA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9980  0048FC  22DA               	addwfc	fsr2h,f,c
  9981  0048FE  0E38               	movlw	56
  9982  004900  6EDE               	movwf	postinc2,c
  9983  004902  0E04               	movlw	4
  9984  004904  6EDD               	movwf	postdec2,c
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9988  004906  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9989  00490A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9990  00490E  0E48               	movlw	72
  9991  004910  6EDF               	movwf	indf2,c
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9995  004912  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9996  004916  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9997  00491A  0E00               	movlw	0
  9998  00491C  8EDB               	bsf	plusw2,7,c
  9999                           
 10000                           ;usb_device.c: 1518: }
 10001  00491E  0012               	return	
 10002  004920                     l1673:
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;usb_device.c: 1519: else
 10006                           ;usb_device.c: 1520: {
 10007                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 10008                           
 10009                           ; BSR set to: 0
 10010  004920  51B4               	movf	(_inPipes+4)& (0+255),w,b
 10011  004922  0104               	movlb	4	; () banked
 10012  004924  5D36               	subwf	54,w,b	;volatile
 10013  004926  0100               	movlb	0	; () banked
 10014  004928  51B5               	movf	(_inPipes+5)& (0+255),w,b
 10015  00492A  0104               	movlb	4	; () banked
 10016  00492C  5937               	subwfb	55,w,b	;volatile
 10017  00492E  B0D8               	btfsc	status,0,c
 10018  004930  D004               	goto	l1675
 10019                           
 10020                           ; BSR set to: 4
 10021                           ;usb_device.c: 1524: {
 10022                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
 10023  004932  C436 F0B4          	movff	1078,_inPipes+4	;volatile
 10024  004936  C437 F0B5          	movff	1079,_inPipes+5	;volatile
 10025  00493A                     l1675:
 10026                           
 10027                           ; BSR set to: 4
 10028                           ;usb_device.c: 1526: }
 10029                           ;usb_device.c: 1527: USBCtrlTrfTxService();
 10030                           
 10031                           ; BSR set to: 4
 10032  00493A  EC45  F01C         	call	_USBCtrlTrfTxService	;wreg free
 10033                           
 10034                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 10035  00493E  0100               	movlb	0	; () banked
 10036  004940  EE20 F002          	lfsr	2,2
 10037  004944  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 10038  004946  26D9               	addwf	fsr2l,f,c
 10039  004948  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10040  00494A  22DA               	addwfc	fsr2h,f,c
 10041  00494C  0E38               	movlw	56
 10042  00494E  6EDE               	movwf	postinc2,c
 10043  004950  0E04               	movlw	4
 10044  004952  6EDD               	movwf	postdec2,c
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10048  004954  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10049  004958  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10050  00495C  0E48               	movlw	72
 10051  00495E  6EDF               	movwf	indf2,c
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10055  004960  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 10056  004964  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10057  004968  0E00               	movlw	0
 10058  00496A  8EDB               	bsf	plusw2,7,c
 10059  00496C  0012               	return	
 10060  00496E                     __end_of_USBCtrlEPAllowDataStage:
 10061                           	opt stack 0
 10062                           tosu	equ	0xFFF
 10063                           tosh	equ	0xFFE
 10064                           tosl	equ	0xFFD
 10065                           pclath	equ	0xFFA
 10066                           tblptru	equ	0xFF8
 10067                           tblptrh	equ	0xFF7
 10068                           tblptrl	equ	0xFF6
 10069                           tablat	equ	0xFF5
 10070                           prodh	equ	0xFF4
 10071                           prodl	equ	0xFF3
 10072                           intcon	equ	0xFF2
 10073                           intcon2	equ	0xFF1
 10074                           intcon3	equ	0xFF0
 10075                           postinc0	equ	0xFEE
 10076                           plusw0	equ	0xFEB
 10077                           wreg	equ	0xFE8
 10078                           postinc1	equ	0xFE6
 10079                           postdec1	equ	0xFE5
 10080                           fsr1h	equ	0xFE2
 10081                           fsr1l	equ	0xFE1
 10082                           indf2	equ	0xFDF
 10083                           postinc2	equ	0xFDE
 10084                           postdec2	equ	0xFDD
 10085                           plusw2	equ	0xFDB
 10086                           fsr2h	equ	0xFDA
 10087                           fsr2l	equ	0xFD9
 10088                           status	equ	0xFD8
 10089                           
 10090 ;; *************** function _USBCheckStdRequest *****************
 10091 ;; Defined at:
 10092 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;		None
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;		None
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  1    wreg      void 
 10099 ;; Registers used:
 10100 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10110 ;;Total ram usage:        0 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:   16
 10113 ;; This function calls:
 10114 ;;		_USBStdFeatureReqHandler
 10115 ;;		_USBStdGetDscHandler
 10116 ;;		_USBStdGetStatusHandler
 10117 ;;		_USBStdSetCfgHandler
 10118 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10119 ;; This function is called by:
 10120 ;;		_USBCtrlTrfSetupHandler
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text39
 10125  0036CA                     __ptext39:
 10126                           	opt stack 0
 10127  0036CA                     _USBCheckStdRequest:
 10128                           	opt stack 8
 10129                           
 10130                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;incstack = 0
 10134  0036CA  0104               	movlb	4	; () banked
 10135  0036CC  3930               	swapf	48,w,b	;volatile
 10136  0036CE  32E8               	rrcf	wreg,f,c
 10137  0036D0  0B03               	andlw	3
 10138  0036D2  0900               	iorlw	0
 10139  0036D4  A4D8               	btfss	status,2,c
 10140  0036D6  0012               	return	
 10141  0036D8  D048               	goto	l1808
 10142  0036DA                     l1809:
 10143                           
 10144                           ; BSR set to: 4
 10145                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 10146  0036DA  0100               	movlb	0	; () banked
 10147  0036DC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
 10151  0036DE  0E08               	movlw	8
 10152  0036E0  6FCC               	movwf	_USBDeviceState& (0+255),b
 10153                           
 10154                           ;usb_device.c: 2713: break;
 10155  0036E2  0012               	return	
 10156  0036E4                     
 10157                           ;usb_device.c: 2715: USBStdGetDscHandler();
 10158                           
 10159                           ; BSR set to: 0
 10160  0036E4  EC5B  F017         	call	_USBStdGetDscHandler	;wreg free
 10161                           
 10162                           ;usb_device.c: 2716: break;
 10163  0036E8  0012               	return	
 10164  0036EA                     
 10165                           ;usb_device.c: 2718: USBStdSetCfgHandler();
 10166  0036EA  EC7F  F01A         	call	_USBStdSetCfgHandler	;wreg free
 10167                           
 10168                           ;usb_device.c: 2719: break;
 10169  0036EE  0012               	return	
 10170  0036F0                     
 10171                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10172  0036F0  0ED5               	movlw	low _USBActiveConfiguration
 10173  0036F2  0100               	movlb	0	; () banked
 10174  0036F4  6FB0               	movwf	_inPipes& (0+255),b
 10175  0036F6  0E00               	movlw	high _USBActiveConfiguration
 10176  0036F8  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10180  0036FA  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 10184  0036FC  0E01               	movlw	1
 10185  0036FE  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 10189  003700  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10190                           
 10191                           ;usb_device.c: 2725: break;
 10192  003702  0012               	return	
 10193  003704                     
 10194                           ;usb_device.c: 2727: USBStdGetStatusHandler();
 10195                           
 10196                           ; BSR set to: 0
 10197  003704  EC6C  F021         	call	_USBStdGetStatusHandler	;wreg free
 10198                           
 10199                           ;usb_device.c: 2728: break;
 10200  003708  0012               	return	
 10201  00370A                     
 10202                           ;usb_device.c: 2730: case 3:
 10203                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
 10204  00370A  EC24  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 10205                           
 10206                           ;usb_device.c: 2732: break;
 10207  00370E  0012               	return	
 10208  003710                     
 10209                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10210  003710  0104               	movlb	4	; () banked
 10211  003712  5134               	movf	52,w,b	;volatile
 10212  003714  0D01               	mullw	1
 10213  003716  0EF1               	movlw	low _USBAlternateInterface
 10214  003718  24F3               	addwf	prodl,w,c
 10215  00371A  0100               	movlb	0	; () banked
 10216  00371C  6FB0               	movwf	_inPipes& (0+255),b
 10217  00371E  0E02               	movlw	high _USBAlternateInterface
 10218  003720  20F4               	addwfc	prodh,w,c
 10219  003722  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10223  003724  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
 10227  003726  0E01               	movlw	1
 10228  003728  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
 10232  00372A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10233                           
 10234                           ;usb_device.c: 2738: break;
 10235  00372C  0012               	return	
 10236  00372E                     l1818:
 10237                           
 10238                           ; BSR set to: 4
 10239                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
 10240  00372E  0100               	movlb	0	; () banked
 10241  003730  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10245  003732  0104               	movlb	4	; () banked
 10246  003734  5134               	movf	52,w,b	;volatile
 10247  003736  0D01               	mullw	1
 10248  003738  0EF1               	movlw	low _USBAlternateInterface
 10249  00373A  24F3               	addwf	prodl,w,c
 10250  00373C  6ED9               	movwf	fsr2l,c
 10251  00373E  0E02               	movlw	high _USBAlternateInterface
 10252  003740  20F4               	addwfc	prodh,w,c
 10253  003742  6EDA               	movwf	fsr2h,c
 10254  003744  C432 FFDF          	movff	1074,indf2	;volatile
 10255                           
 10256                           ;usb_device.c: 2742: break;
 10257  003748  0012               	return	
 10258  00374A                     
 10259                           ; BSR set to: 4
 10260                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10261                           
 10262                           ; BSR set to: 4
 10263  00374A  0E00               	movlw	0
 10264  00374C  0100               	movlb	0	; () banked
 10265  00374E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10266  003750  0E02               	movlw	2
 10267  003752  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10268  003754  0E00               	movlw	0
 10269  003756  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10270  003758  0E00               	movlw	0
 10271  00375A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10272  00375C  0E00               	movlw	0
 10273  00375E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10274  003760  0E00               	movlw	0
 10275  003762  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10276  003764  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10277                           
 10278                           ;usb_device.c: 2749: }
 10279                           
 10280                           ;usb_device.c: 2748: break;
 10281                           
 10282                           ;usb_device.c: 2747: default:
 10283                           
 10284                           ;usb_device.c: 2746: case 12:
 10285                           
 10286                           ;usb_device.c: 2745: break;
 10287  003768  0012               	return	
 10288  00376A                     l1808:
 10289  00376A  0104               	movlb	4	; () banked
 10290  00376C  5131               	movf	49,w,b	;volatile
 10291                           
 10292                           ; Switch size 1, requested type "space"
 10293                           ; Number of cases is 11, Range of values is 0 to 12
 10294                           ; switch strategies available:
 10295                           ; Name         Instructions Cycles
 10296                           ; simple_byte           34    18 (average)
 10297                           ;	Chosen strategy is simple_byte
 10298  00376E  0A00               	xorlw	0	; case 0
 10299  003770  B4D8               	btfsc	status,2,c
 10300  003772  D7C8               	goto	l1814
 10301  003774  0A01               	xorlw	1	; case 1
 10302  003776  B4D8               	btfsc	status,2,c
 10303  003778  D7C8               	goto	l1815
 10304  00377A  0A02               	xorlw	2	; case 3
 10305  00377C  B4D8               	btfsc	status,2,c
 10306  00377E  D7C5               	goto	l1815
 10307  003780  0A06               	xorlw	6	; case 5
 10308  003782  B4D8               	btfsc	status,2,c
 10309  003784  D7AA               	goto	l1809
 10310  003786  0A03               	xorlw	3	; case 6
 10311  003788  B4D8               	btfsc	status,2,c
 10312  00378A  D7AC               	goto	l1811
 10313  00378C  0A01               	xorlw	1	; case 7
 10314  00378E  B4D8               	btfsc	status,2,c
 10315  003790  D7DC               	goto	l1819
 10316  003792  0A0F               	xorlw	15	; case 8
 10317  003794  B4D8               	btfsc	status,2,c
 10318  003796  D7AC               	goto	l1813
 10319  003798  0A01               	xorlw	1	; case 9
 10320  00379A  B4D8               	btfsc	status,2,c
 10321  00379C  D7A6               	goto	l1812
 10322  00379E  0A03               	xorlw	3	; case 10
 10323  0037A0  B4D8               	btfsc	status,2,c
 10324  0037A2  D7B6               	goto	l1817
 10325  0037A4  0A01               	xorlw	1	; case 11
 10326  0037A6  B4D8               	btfsc	status,2,c
 10327  0037A8  D7C2               	goto	l1818
 10328  0037AA  0A07               	xorlw	7	; case 12
 10329  0037AC  0012               	return	
 10330  0037AE                     __end_of_USBCheckStdRequest:
 10331                           	opt stack 0
 10332                           tosu	equ	0xFFF
 10333                           tosh	equ	0xFFE
 10334                           tosl	equ	0xFFD
 10335                           pclath	equ	0xFFA
 10336                           tblptru	equ	0xFF8
 10337                           tblptrh	equ	0xFF7
 10338                           tblptrl	equ	0xFF6
 10339                           tablat	equ	0xFF5
 10340                           prodh	equ	0xFF4
 10341                           prodl	equ	0xFF3
 10342                           intcon	equ	0xFF2
 10343                           intcon2	equ	0xFF1
 10344                           intcon3	equ	0xFF0
 10345                           postinc0	equ	0xFEE
 10346                           plusw0	equ	0xFEB
 10347                           wreg	equ	0xFE8
 10348                           postinc1	equ	0xFE6
 10349                           postdec1	equ	0xFE5
 10350                           fsr1h	equ	0xFE2
 10351                           fsr1l	equ	0xFE1
 10352                           indf2	equ	0xFDF
 10353                           postinc2	equ	0xFDE
 10354                           postdec2	equ	0xFDD
 10355                           plusw2	equ	0xFDB
 10356                           fsr2h	equ	0xFDA
 10357                           fsr2l	equ	0xFD9
 10358                           status	equ	0xFD8
 10359                           
 10360 ;; *************** function _USBStdSetCfgHandler *****************
 10361 ;; Defined at:
 10362 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;		None
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;  i               1   49[BANK0 ] unsigned char 
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10379 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10380 ;;Total ram usage:        1 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:   15
 10383 ;; This function calls:
 10384 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10385 ;;		_memset
 10386 ;; This function is called by:
 10387 ;;		_USBCheckStdRequest
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391                           	psect	text40
 10392  0034FE                     __ptext40:
 10393                           	opt stack 0
 10394  0034FE                     _USBStdSetCfgHandler:
 10395                           	opt stack 8
 10396                           
 10397                           ;usb_device.c: 1988: uint8_t i;
 10398                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
 10399                           
 10400                           ;incstack = 0
 10401  0034FE  0100               	movlb	0	; () banked
 10402  003500  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
 10406  003502  0E27               	movlw	39
 10407  003504  6F7D               	movwf	memset@p1& (0+255),b
 10408  003506  0E0F               	movlw	15
 10409  003508  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10410  00350A  0E00               	movlw	0
 10411  00350C  6F80               	movwf	(memset@c+1)& (0+255),b
 10412  00350E  0E00               	movlw	0
 10413  003510  6F7F               	movwf	memset@c& (0+255),b
 10414  003512  0E00               	movlw	0
 10415  003514  6F82               	movwf	(memset@n+1)& (0+255),b
 10416  003516  0E02               	movlw	2
 10417  003518  6F81               	movwf	memset@n& (0+255),b
 10418  00351A  EC49  F031         	call	_memset	;wreg free
 10419                           
 10420                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10421  00351E  0E00               	movlw	0
 10422  003520  0100               	movlb	0	; () banked
 10423  003522  6F7D               	movwf	memset@p1& (0+255),b
 10424  003524  0E04               	movlw	4
 10425  003526  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10426  003528  0E00               	movlw	0
 10427  00352A  6F80               	movwf	(memset@c+1)& (0+255),b
 10428  00352C  0E00               	movlw	0
 10429  00352E  6F7F               	movwf	memset@c& (0+255),b
 10430  003530  0E00               	movlw	0
 10431  003532  6F82               	movwf	(memset@n+1)& (0+255),b
 10432  003534  0E30               	movlw	48
 10433  003536  6F81               	movwf	memset@n& (0+255),b
 10434  003538  EC49  F031         	call	_memset	;wreg free
 10435                           
 10436                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10437  00353C  8C65               	bsf	3941,6,c	;volatile
 10438                           
 10439                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10440  00353E  0E00               	movlw	0
 10441  003540  0100               	movlb	0	; () banked
 10442  003542  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10443  003544                     l12864:
 10444                           
 10445                           ; BSR set to: 0
 10446  003544  0E02               	movlw	2
 10447  003546  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10448  003548  D001               	goto	l1725
 10449  00354A  D016               	goto	u11540
 10450  00354C                     l1725:
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;usb_device.c: 2006: {
 10454                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10455                           
 10456                           ; BSR set to: 0
 10457  00354C  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10458  00354E  0D01               	mullw	1
 10459  003550  0ED1               	movlw	low _ep_data_in
 10460  003552  24F3               	addwf	prodl,w,c
 10461  003554  6ED9               	movwf	fsr2l,c
 10462  003556  0E02               	movlw	high _ep_data_in
 10463  003558  20F4               	addwfc	prodh,w,c
 10464  00355A  6EDA               	movwf	fsr2h,c
 10465  00355C  0E00               	movlw	0
 10466  00355E  6EDF               	movwf	indf2,c
 10467                           
 10468                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10469  003560  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10470  003562  0D01               	mullw	1
 10471  003564  0ECE               	movlw	low _ep_data_out
 10472  003566  24F3               	addwf	prodl,w,c
 10473  003568  6ED9               	movwf	fsr2l,c
 10474  00356A  0E02               	movlw	high _ep_data_out
 10475  00356C  20F4               	addwfc	prodh,w,c
 10476  00356E  6EDA               	movwf	fsr2h,c
 10477  003570  0E00               	movlw	0
 10478  003572  6EDF               	movwf	indf2,c
 10479                           
 10480                           ; BSR set to: 0
 10481  003574  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10482  003576  D7E6               	goto	l12864
 10483  003578                     u11540:
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;usb_device.c: 2009: }
 10487                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10488                           
 10489                           ; BSR set to: 0
 10490  003578  0EF1               	movlw	low _USBAlternateInterface
 10491  00357A  6F7D               	movwf	memset@p1& (0+255),b
 10492  00357C  0E02               	movlw	high _USBAlternateInterface
 10493  00357E  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10494  003580  0E00               	movlw	0
 10495  003582  6F80               	movwf	(memset@c+1)& (0+255),b
 10496  003584  0E00               	movlw	0
 10497  003586  6F7F               	movwf	memset@c& (0+255),b
 10498  003588  0E00               	movlw	0
 10499  00358A  6F82               	movwf	(memset@n+1)& (0+255),b
 10500  00358C  0E02               	movlw	2
 10501  00358E  6F81               	movwf	memset@n& (0+255),b
 10502  003590  EC49  F031         	call	_memset	;wreg free
 10503                           
 10504                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10505  003594  9C65               	bcf	3941,6,c	;volatile
 10506                           
 10507                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10508  003596  0E08               	movlw	8
 10509  003598  0100               	movlb	0	; () banked
 10510  00359A  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10511  00359C  0E04               	movlw	4
 10512  00359E  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10516  0035A0  0E00               	movlw	0
 10517  0035A2  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10518  0035A4  0E04               	movlw	4
 10519  0035A6  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10520                           
 10521                           ; BSR set to: 0
 10522                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10523  0035A8  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10524  0035AC  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10528  0035B0  C432 F0D5          	movff	1074,_USBActiveConfiguration	;volatile
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10532  0035B4  51D5               	movf	_USBActiveConfiguration& (0+255),w,b
 10533  0035B6  A4D8               	btfss	status,2,c
 10534  0035B8  D003               	goto	l1727
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;usb_device.c: 2028: {
 10538                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10539  0035BA  0E10               	movlw	16
 10540  0035BC  6FCC               	movwf	_USBDeviceState& (0+255),b
 10541                           
 10542                           ;usb_device.c: 2031: }
 10543  0035BE  0012               	return	
 10544  0035C0                     l1727:
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;usb_device.c: 2032: else
 10548                           ;usb_device.c: 2033: {
 10549                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10550                           
 10551                           ; BSR set to: 0
 10552  0035C0  0E00               	movlw	0
 10553  0035C2  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10554  0035C4  0E01               	movlw	1
 10555  0035C6  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10556  0035C8  0ED5               	movlw	low _USBActiveConfiguration
 10557  0035CA  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10558  0035CC  0E00               	movlw	high _USBActiveConfiguration
 10559  0035CE  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10560  0035D0  0E00               	movlw	0
 10561  0035D2  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10562  0035D4  0E01               	movlw	1
 10563  0035D6  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10564  0035D8  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10565                           
 10566                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10567  0035DC  0E20               	movlw	32
 10568  0035DE  0100               	movlb	0	; () banked
 10569  0035E0  6FCC               	movwf	_USBDeviceState& (0+255),b
 10570  0035E2  0012               	return	
 10571  0035E4                     __end_of_USBStdSetCfgHandler:
 10572                           	opt stack 0
 10573                           tosu	equ	0xFFF
 10574                           tosh	equ	0xFFE
 10575                           tosl	equ	0xFFD
 10576                           pclath	equ	0xFFA
 10577                           tblptru	equ	0xFF8
 10578                           tblptrh	equ	0xFF7
 10579                           tblptrl	equ	0xFF6
 10580                           tablat	equ	0xFF5
 10581                           prodh	equ	0xFF4
 10582                           prodl	equ	0xFF3
 10583                           intcon	equ	0xFF2
 10584                           intcon2	equ	0xFF1
 10585                           intcon3	equ	0xFF0
 10586                           postinc0	equ	0xFEE
 10587                           plusw0	equ	0xFEB
 10588                           wreg	equ	0xFE8
 10589                           postinc1	equ	0xFE6
 10590                           postdec1	equ	0xFE5
 10591                           fsr1h	equ	0xFE2
 10592                           fsr1l	equ	0xFE1
 10593                           indf2	equ	0xFDF
 10594                           postinc2	equ	0xFDE
 10595                           postdec2	equ	0xFDD
 10596                           plusw2	equ	0xFDB
 10597                           fsr2h	equ	0xFDA
 10598                           fsr2l	equ	0xFD9
 10599                           status	equ	0xFD8
 10600                           
 10601 ;; *************** function _USBStdGetStatusHandler *****************
 10602 ;; Defined at:
 10603 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10608 ;;		 -> NULL(0), BDT(48), 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  1    wreg      void 
 10611 ;; Registers used:
 10612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10619 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10621 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10622 ;;Total ram usage:        3 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; Hardware stack levels required when called:   11
 10625 ;; This function calls:
 10626 ;;		Nothing
 10627 ;; This function is called by:
 10628 ;;		_USBCheckStdRequest
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text41
 10633  0042D8                     __ptext41:
 10634                           	opt stack 0
 10635  0042D8                     _USBStdGetStatusHandler:
 10636                           	opt stack 12
 10637                           
 10638                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;incstack = 0
 10642  0042D8  0E00               	movlw	0
 10643  0042DA  0104               	movlb	4	; () banked
 10644  0042DC  6F38               	movwf	56,b	;volatile
 10645                           
 10646                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10647  0042DE  0E00               	movlw	0
 10648  0042E0  6F39               	movwf	57,b	;volatile
 10649                           
 10650                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10651  0042E2  D03D               	goto	l1746
 10652  0042E4                     l1747:
 10653                           
 10654                           ; BSR set to: 4
 10655                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10656  0042E4  0100               	movlb	0	; () banked
 10657  0042E6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10658                           
 10659                           ;usb_device.c: 2163: }
 10660                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10661                           
 10662                           ; BSR set to: 4
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;usb_device.c: 2161: {
 10666                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10667                           
 10668                           ;usb_device.c: 2160: if(0 == 1)
 10669  0042E8  0101               	movlb	1	; () banked
 10670  0042EA  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10671  0042EC  A4D8               	btfss	status,2,c
 10672  0042EE  D042               	goto	l1750
 10673                           
 10674                           ; BSR set to: 1
 10675                           ;usb_device.c: 2166: {
 10676                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10677  0042F0  0104               	movlb	4	; () banked
 10678  0042F2  8338               	bsf	56,1,b	;volatile
 10679                           
 10680                           ; BSR set to: 4
 10681                           ;usb_device.c: 2168: }
 10682                           ;usb_device.c: 2169: break;
 10683  0042F4  D03F               	goto	l1750
 10684  0042F6                     l1751:
 10685                           
 10686                           ; BSR set to: 4
 10687                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10688  0042F6  0100               	movlb	0	; () banked
 10689  0042F8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10690                           
 10691                           ;usb_device.c: 2172: break;
 10692  0042FA  D03C               	goto	l1750
 10693  0042FC                     l1752:
 10694                           
 10695                           ; BSR set to: 4
 10696                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10697  0042FC  0100               	movlb	0	; () banked
 10698  0042FE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10699                           
 10700                           ;usb_device.c: 2178: {
 10701                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10702                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10703  004300  0104               	movlb	4	; () banked
 10704  004302  BF34               	btfsc	52,7,b	;volatile
 10705  004304  D00B               	goto	l1753
 10706                           
 10707                           ; BSR set to: 4
 10708                           ;usb_device.c: 2182: {
 10709                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10710  004306  5134               	movf	52,w,b	;volatile
 10711  004308  0B0F               	andlw	15
 10712  00430A  0100               	movlb	0	; () banked
 10713  00430C  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10714  00430E  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10715  004310  0D02               	mullw	2
 10716  004312  0E06               	movlw	low _pBDTEntryOut
 10717  004314  24F3               	addwf	prodl,w,c
 10718  004316  6ED9               	movwf	fsr2l,c
 10719  004318  0E03               	movlw	high _pBDTEntryOut
 10720  00431A  D00B               	goto	L4
 10721  00431C                     l1753:
 10722                           
 10723                           ;usb_device.c: 2185: else
 10724                           ;usb_device.c: 2186: {
 10725                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10726                           
 10727                           ; BSR set to: 0
 10728  00431C  0104               	movlb	4	; () banked
 10729  00431E  5134               	movf	52,w,b	;volatile
 10730  004320  0B0F               	andlw	15
 10731  004322  0100               	movlb	0	; () banked
 10732  004324  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10733  004326  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10734  004328  0D02               	mullw	2
 10735  00432A  0EB6               	movlw	low _pBDTEntryIn
 10736  00432C  24F3               	addwf	prodl,w,c
 10737  00432E  6ED9               	movwf	fsr2l,c
 10738  004330  0E00               	movlw	high _pBDTEntryIn
 10739  004332                     L4:
 10740  004332  20F4               	addwfc	prodh,w,c
 10741  004334  6EDA               	movwf	fsr2h,c
 10742  004336  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10743  00433A  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;usb_device.c: 2188: }
 10747                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10748                           
 10749                           ; BSR set to: 0
 10750  00433E  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10751  004342  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10752  004346  AEDF               	btfss	indf2,7,c
 10753  004348  D015               	goto	l1750
 10754                           
 10755                           ; BSR set to: 0
 10756  00434A  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10757  00434E  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10758  004352  A4DF               	btfss	indf2,2,c
 10759  004354  D00F               	goto	l1750
 10760                           
 10761                           ; BSR set to: 0
 10762                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10763  004356  0E01               	movlw	1
 10764  004358  0104               	movlb	4	; () banked
 10765  00435A  6F38               	movwf	56,b	;volatile
 10766                           
 10767                           ; BSR set to: 4
 10768                           ;usb_device.c: 2193: }
 10769                           ;usb_device.c: 2194: }
 10770                           
 10771                           ; BSR set to: 4
 10772                           ;usb_device.c: 2192: break;
 10773  00435C  D00B               	goto	l1750
 10774  00435E                     l1746:
 10775                           
 10776                           ; BSR set to: 4
 10777                           
 10778                           ; BSR set to: 4
 10779  00435E  5130               	movf	48,w,b	;volatile
 10780  004360  0B1F               	andlw	31
 10781                           
 10782                           ; Switch size 1, requested type "space"
 10783                           ; Number of cases is 3, Range of values is 0 to 2
 10784                           ; switch strategies available:
 10785                           ; Name         Instructions Cycles
 10786                           ; simple_byte           10     6 (average)
 10787                           ;	Chosen strategy is simple_byte
 10788  004362  0A00               	xorlw	0	; case 0
 10789  004364  B4D8               	btfsc	status,2,c
 10790  004366  D7BE               	goto	l1747
 10791  004368  0A01               	xorlw	1	; case 1
 10792  00436A  B4D8               	btfsc	status,2,c
 10793  00436C  D7C4               	goto	l1751
 10794  00436E  0A03               	xorlw	3	; case 2
 10795  004370  B4D8               	btfsc	status,2,c
 10796  004372  D7C4               	goto	l1752
 10797  004374                     l1750:
 10798                           
 10799                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10800  004374  0100               	movlb	0	; () banked
 10801  004376  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10802  004378  0012               	return	
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;usb_device.c: 2197: {
 10806                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10807  00437A  0E38               	movlw	56
 10808  00437C  6FB0               	movwf	_inPipes& (0+255),b
 10809  00437E  0E04               	movlw	4
 10810  004380  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10814  004382  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10818  004384  0E02               	movlw	2
 10819  004386  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10820  004388  0012               	return	
 10821  00438A                     __end_of_USBStdGetStatusHandler:
 10822                           	opt stack 0
 10823                           tosu	equ	0xFFF
 10824                           tosh	equ	0xFFE
 10825                           tosl	equ	0xFFD
 10826                           pclath	equ	0xFFA
 10827                           tblptru	equ	0xFF8
 10828                           tblptrh	equ	0xFF7
 10829                           tblptrl	equ	0xFF6
 10830                           tablat	equ	0xFF5
 10831                           prodh	equ	0xFF4
 10832                           prodl	equ	0xFF3
 10833                           intcon	equ	0xFF2
 10834                           intcon2	equ	0xFF1
 10835                           intcon3	equ	0xFF0
 10836                           postinc0	equ	0xFEE
 10837                           plusw0	equ	0xFEB
 10838                           wreg	equ	0xFE8
 10839                           postinc1	equ	0xFE6
 10840                           postdec1	equ	0xFE5
 10841                           fsr1h	equ	0xFE2
 10842                           fsr1l	equ	0xFE1
 10843                           indf2	equ	0xFDF
 10844                           postinc2	equ	0xFDE
 10845                           postdec2	equ	0xFDD
 10846                           plusw2	equ	0xFDB
 10847                           fsr2h	equ	0xFDA
 10848                           fsr2l	equ	0xFD9
 10849                           status	equ	0xFD8
 10850                           
 10851 ;; *************** function _USBStdGetDscHandler *****************
 10852 ;; Defined at:
 10853 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;		None
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;		None
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  1    wreg      void 
 10860 ;; Registers used:
 10861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10869 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10871 ;;Total ram usage:        2 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:   11
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_USBCheckStdRequest
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text42
 10882  002EB6                     __ptext42:
 10883                           	opt stack 0
 10884  002EB6                     _USBStdGetDscHandler:
 10885                           	opt stack 12
 10886                           
 10887                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;incstack = 0
 10891  002EB6  0E80               	movlw	128
 10892  002EB8  0104               	movlb	4	; () banked
 10893  002EBA  1930               	xorwf	48,w,b	;volatile
 10894  002EBC  A4D8               	btfss	status,2,c
 10895  002EBE  0012               	return	
 10896                           
 10897                           ; BSR set to: 4
 10898                           ;usb_device.c: 2064: {
 10899                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10900  002EC0  0EC0               	movlw	192
 10901  002EC2  0100               	movlb	0	; () banked
 10902  002EC4  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10903                           
 10904                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10905  002EC6  D082               	goto	l1733
 10906  002EC8                     
 10907                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10908                           
 10909                           ; BSR set to: 0
 10910  002EC8  0E49               	movlw	low _device_dsc
 10911  002ECA  0100               	movlb	0	; () banked
 10912  002ECC  6FB0               	movwf	_inPipes& (0+255),b
 10913  002ECE  0EFE               	movlw	high _device_dsc
 10914  002ED0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10918  002ED2  0E00               	movlw	0
 10919  002ED4  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10920  002ED6  0E12               	movlw	18
 10921  002ED8  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10922                           
 10923                           ;usb_device.c: 2076: break;
 10924  002EDA  0012               	return	
 10925  002EDC                     
 10926                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10927                           
 10928                           ; BSR set to: 0
 10929  002EDC  0104               	movlb	4	; () banked
 10930  002EDE  5132               	movf	50,w,b	;volatile
 10931  002EE0  A4D8               	btfss	status,2,c
 10932  002EE2  D040               	goto	l1737
 10933                           
 10934                           ; BSR set to: 4
 10935                           ;usb_device.c: 2082: {
 10936                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10937  002EE4  5132               	movf	50,w,b	;volatile
 10938  002EE6  0D02               	mullw	2
 10939  002EE8  0E2E               	movlw	low _USB_CD_Ptr
 10940  002EEA  24F3               	addwf	prodl,w,c
 10941  002EEC  6EF6               	movwf	tblptrl,c
 10942  002EEE  0EFC               	movlw	high _USB_CD_Ptr
 10943  002EF0  20F4               	addwfc	prodh,w,c
 10944  002EF2  6EF7               	movwf	tblptrh,c
 10945  002EF4                     	if	0	;There are less than 3 active tblptr bytes
 10946  002EF4                     	endif
 10947  002EF4  0009               	tblrd		*+
 10948  002EF6  CFF5 F0B0          	movff	tablat,_inPipes
 10949  002EFA  000A               	tblrd		*-
 10950  002EFC  CFF5 F0B1          	movff	tablat,_inPipes+1
 10951                           
 10952                           ; BSR set to: 4
 10953                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10954  002F00  0E02               	movlw	2
 10955  002F02  0100               	movlb	0	; () banked
 10956  002F04  25B0               	addwf	_inPipes& (0+255),w,b
 10957  002F06  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10958  002F08  0E00               	movlw	0
 10959  002F0A  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10960  002F0C  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10961  002F0E  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10962  002F12  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10963  002F16  6AF8               	clrf	tblptru,c
 10964  002F18  0E0E               	movlw	(high __ramtop+-1)
 10965  002F1A  64F7               	cpfsgt	tblptrh,c
 10966  002F1C  D003               	bra	u11587
 10967  002F1E  0008               	tblrd		*
 10968  002F20  50F5               	movf	tablat,w,c
 10969  002F22  D005               	bra	u11580
 10970  002F24                     u11587:
 10971  002F24  CFF6 FFE9          	movff	tblptrl,fsr0l
 10972  002F28  CFF7 FFEA          	movff	tblptrh,fsr0h
 10973  002F2C  50EF               	movf	indf0,w,c
 10974  002F2E                     u11580:
 10975  002F2E  0100               	movlb	0	; () banked
 10976  002F30  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10980  002F32  0E03               	movlw	3
 10981  002F34  25B0               	addwf	_inPipes& (0+255),w,b
 10982  002F36  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10983  002F38  0E00               	movlw	0
 10984  002F3A  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10985  002F3C  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10986  002F3E  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10987  002F42  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10988  002F46  6AF8               	clrf	tblptru,c
 10989  002F48  0E0E               	movlw	(high __ramtop+-1)
 10990  002F4A  64F7               	cpfsgt	tblptrh,c
 10991  002F4C  D003               	bra	u11597
 10992  002F4E  0008               	tblrd		*
 10993  002F50  50F5               	movf	tablat,w,c
 10994  002F52  D005               	bra	u11590
 10995  002F54                     u11597:
 10996  002F54  CFF6 FFE9          	movff	tblptrl,fsr0l
 10997  002F58  CFF7 FFEA          	movff	tblptrh,fsr0h
 10998  002F5C  50EF               	movf	indf0,w,c
 10999  002F5E                     u11590:
 11000  002F5E  0100               	movlb	0	; () banked
 11001  002F60  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11002                           
 11003                           ;usb_device.c: 2094: }
 11004  002F62  0012               	return	
 11005  002F64                     l1737:
 11006                           
 11007                           ;usb_device.c: 2095: else
 11008                           ;usb_device.c: 2096: {
 11009                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 11010                           
 11011                           ; BSR set to: 0
 11012  002F64  0E00               	movlw	0
 11013  002F66  0100               	movlb	0	; () banked
 11014  002F68  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;usb_device.c: 2098: }
 11018                           ;usb_device.c: 2099: break;
 11019  002F6A  0012               	return	
 11020  002F6C                     
 11021                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 11022                           
 11023                           ; BSR set to: 0
 11024  002F6C  0E03               	movlw	3
 11025  002F6E  0104               	movlb	4	; () banked
 11026  002F70  6132               	cpfslt	50,b	;volatile
 11027  002F72  D024               	goto	l1740
 11028                           
 11029                           ; BSR set to: 4
 11030                           ;usb_device.c: 2105: {
 11031                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11032  002F74  5132               	movf	50,w,b	;volatile
 11033  002F76  0D02               	mullw	2
 11034  002F78  0E1E               	movlw	low _USB_SD_Ptr
 11035  002F7A  24F3               	addwf	prodl,w,c
 11036  002F7C  6EF6               	movwf	tblptrl,c
 11037  002F7E  0EFC               	movlw	high _USB_SD_Ptr
 11038  002F80  20F4               	addwfc	prodh,w,c
 11039  002F82  6EF7               	movwf	tblptrh,c
 11040  002F84                     	if	0	;There are less than 3 active tblptr bytes
 11041  002F84                     	endif
 11042  002F84  0009               	tblrd		*+
 11043  002F86  CFF5 F0B0          	movff	tablat,_inPipes
 11044  002F8A  000A               	tblrd		*-
 11045  002F8C  CFF5 F0B1          	movff	tablat,_inPipes+1
 11046                           
 11047                           ; BSR set to: 4
 11048                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11049  002F90  C0B0  FFF6         	movff	_inPipes,tblptrl
 11050  002F94  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 11051  002F98  6AF8               	clrf	tblptru,c
 11052  002F9A  0E0E               	movlw	(high __ramtop+-1)
 11053  002F9C  64F7               	cpfsgt	tblptrh,c
 11054  002F9E  D003               	bra	u11617
 11055  002FA0  0008               	tblrd		*
 11056  002FA2  50F5               	movf	tablat,w,c
 11057  002FA4  D005               	bra	u11610
 11058  002FA6                     u11617:
 11059  002FA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 11060  002FAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 11061  002FAE  50EF               	movf	indf0,w,c
 11062  002FB0                     u11610:
 11063  002FB0  0100               	movlb	0	; () banked
 11064  002FB2  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 11065  002FB4  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 11066  002FB6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11067  002FB8  6BB5               	clrf	(_inPipes+5)& (0+255),b
 11068                           
 11069                           ;usb_device.c: 2110: }
 11070  002FBA  0012               	return	
 11071  002FBC                     l1740:
 11072                           
 11073                           ;usb_device.c: 2120: else
 11074                           ;usb_device.c: 2121: {
 11075                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 11076                           
 11077                           ; BSR set to: 0
 11078  002FBC  0E00               	movlw	0
 11079  002FBE  0100               	movlb	0	; () banked
 11080  002FC0  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;usb_device.c: 2123: }
 11084                           ;usb_device.c: 2124: break;
 11085  002FC2  0012               	return	
 11086  002FC4                     
 11087                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 11088                           
 11089                           ; BSR set to: 0
 11090  002FC4  0E00               	movlw	0
 11091  002FC6  0100               	movlb	0	; () banked
 11092  002FC8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;usb_device.c: 2128: }
 11096                           
 11097                           ;usb_device.c: 2127: break;
 11098  002FCA  0012               	return	
 11099  002FCC                     l1733:
 11100                           
 11101                           ; BSR set to: 0
 11102                           
 11103                           ; BSR set to: 0
 11104  002FCC  0104               	movlb	4	; () banked
 11105  002FCE  5133               	movf	51,w,b	;volatile
 11106                           
 11107                           ; Switch size 1, requested type "space"
 11108                           ; Number of cases is 3, Range of values is 1 to 3
 11109                           ; switch strategies available:
 11110                           ; Name         Instructions Cycles
 11111                           ; simple_byte           10     6 (average)
 11112                           ;	Chosen strategy is simple_byte
 11113  002FD0  0A01               	xorlw	1	; case 1
 11114  002FD2  B4D8               	btfsc	status,2,c
 11115  002FD4  D779               	goto	l1734
 11116  002FD6  0A03               	xorlw	3	; case 2
 11117  002FD8  B4D8               	btfsc	status,2,c
 11118  002FDA  D780               	goto	l1736
 11119  002FDC  0A01               	xorlw	1	; case 3
 11120  002FDE  B4D8               	btfsc	status,2,c
 11121  002FE0  D7C5               	goto	l1739
 11122  002FE2  D7F0               	goto	l1742
 11123  002FE4                     __end_of_USBStdGetDscHandler:
 11124                           	opt stack 0
 11125                           tosu	equ	0xFFF
 11126                           tosh	equ	0xFFE
 11127                           tosl	equ	0xFFD
 11128                           pclath	equ	0xFFA
 11129                           tblptru	equ	0xFF8
 11130                           tblptrh	equ	0xFF7
 11131                           tblptrl	equ	0xFF6
 11132                           tablat	equ	0xFF5
 11133                           prodh	equ	0xFF4
 11134                           prodl	equ	0xFF3
 11135                           intcon	equ	0xFF2
 11136                           intcon2	equ	0xFF1
 11137                           intcon3	equ	0xFF0
 11138                           indf0	equ	0xFEF
 11139                           postinc0	equ	0xFEE
 11140                           plusw0	equ	0xFEB
 11141                           fsr0h	equ	0xFEA
 11142                           fsr0l	equ	0xFE9
 11143                           wreg	equ	0xFE8
 11144                           postinc1	equ	0xFE6
 11145                           postdec1	equ	0xFE5
 11146                           fsr1h	equ	0xFE2
 11147                           fsr1l	equ	0xFE1
 11148                           indf2	equ	0xFDF
 11149                           postinc2	equ	0xFDE
 11150                           postdec2	equ	0xFDD
 11151                           plusw2	equ	0xFDB
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _USBStdFeatureReqHandler *****************
 11157 ;; Defined at:
 11158 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  p               2   53[BANK0 ] PTR struct __BDT
 11163 ;;		 -> NULL(0), BDT(48), 
 11164 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 11165 ;;		 -> UEP0(1), 
 11166 ;;  current_ep_d    1   52[BANK0 ] struct .
 11167 ;; Return value:  Size  Location     Type
 11168 ;;                  1    wreg      void 
 11169 ;; Registers used:
 11170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11177 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11179 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11180 ;;Total ram usage:        6 bytes
 11181 ;; Hardware stack levels used:    1
 11182 ;; Hardware stack levels required when called:   15
 11183 ;; This function calls:
 11184 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11185 ;; This function is called by:
 11186 ;;		_USBCheckStdRequest
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           	psect	text43
 11191  001648                     __ptext43:
 11192                           	opt stack 0
 11193  001648                     _USBStdFeatureReqHandler:
 11194                           	opt stack 8
 11195                           
 11196                           ;usb_device.c: 2773: BDT_ENTRY *p;
 11197                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 11198                           ;usb_device.c: 2778: unsigned char* pUEP;
 11199                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 11200                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 11201                           
 11202                           ;incstack = 0
 11203  001648  0104               	movlb	4	; () banked
 11204  00164A  0532               	decf	50,w,b	;volatile
 11205  00164C  A4D8               	btfss	status,2,c
 11206  00164E  D011               	goto	l1826
 11207                           
 11208                           ; BSR set to: 4
 11209  001650  5130               	movf	48,w,b	;volatile
 11210  001652  0B1F               	andlw	31
 11211  001654  0900               	iorlw	0
 11212  001656  A4D8               	btfss	status,2,c
 11213  001658  D00C               	goto	l1826
 11214                           
 11215                           ; BSR set to: 4
 11216                           ;usb_device.c: 2818: {
 11217                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 11218  00165A  0100               	movlb	0	; () banked
 11219  00165C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 11223  00165E  0E03               	movlw	3
 11224  001660  0104               	movlb	4	; () banked
 11225  001662  1931               	xorwf	49,w,b	;volatile
 11226  001664  A4D8               	btfss	status,2,c
 11227  001666  D002               	goto	l1825
 11228                           
 11229                           ; BSR set to: 4
 11230                           ;usb_device.c: 2821: RemoteWakeup = 1;
 11231  001668  0E01               	movlw	1
 11232  00166A  D001               	goto	L5
 11233  00166C                     l1825:
 11234                           
 11235                           ;usb_device.c: 2822: else
 11236                           ;usb_device.c: 2823: RemoteWakeup = 0;
 11237                           
 11238                           ; BSR set to: 1
 11239  00166C  0E00               	movlw	0
 11240  00166E                     L5:
 11241  00166E  0101               	movlb	1	; () banked
 11242  001670  6FE3               	movwf	_RemoteWakeup& (0+255),b
 11243  001672                     l1826:
 11244                           
 11245                           ;usb_device.c: 2824: }
 11246                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 11247                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 11248                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11249                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 11250                           
 11251                           ; BSR set to: 1
 11252  001672  0104               	movlb	4	; () banked
 11253  001674  5132               	movf	50,w,b	;volatile
 11254  001676  A4D8               	btfss	status,2,c
 11255  001678  0012               	return	
 11256                           
 11257                           ; BSR set to: 4
 11258  00167A  5130               	movf	48,w,b	;volatile
 11259  00167C  0B1F               	andlw	31
 11260  00167E  0A02               	xorlw	2
 11261  001680  A4D8               	btfss	status,2,c
 11262  001682  0012               	return	
 11263                           
 11264                           ; BSR set to: 4
 11265  001684  5134               	movf	52,w,b	;volatile
 11266  001686  0B0F               	andlw	15
 11267  001688  0900               	iorlw	0
 11268  00168A  B4D8               	btfsc	status,2,c
 11269  00168C  0012               	return	
 11270                           
 11271                           ; BSR set to: 4
 11272  00168E  5134               	movf	52,w,b	;volatile
 11273  001690  0B0F               	andlw	15
 11274  001692  0100               	movlb	0	; () banked
 11275  001694  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11276  001696  0E03               	movlw	3
 11277  001698  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 11278  00169A  0012               	return	
 11279                           
 11280                           ; BSR set to: 0
 11281  00169C  0E20               	movlw	32
 11282  00169E  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 11283  0016A0  A4D8               	btfss	status,2,c
 11284  0016A2  0012               	return	
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;usb_device.c: 2831: {
 11288                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 11289  0016A4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11290                           
 11291                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 11292  0016A6  0104               	movlb	4	; () banked
 11293  0016A8  BF34               	btfsc	52,7,b	;volatile
 11294  0016AA  D01C               	goto	l1828
 11295                           
 11296                           ; BSR set to: 4
 11297                           ;usb_device.c: 2838: {
 11298                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11299  0016AC  5134               	movf	52,w,b	;volatile
 11300  0016AE  0B0F               	andlw	15
 11301  0016B0  0100               	movlb	0	; () banked
 11302  0016B2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11303  0016B4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11304  0016B6  0D02               	mullw	2
 11305  0016B8  0E06               	movlw	low _pBDTEntryOut
 11306  0016BA  24F3               	addwf	prodl,w,c
 11307  0016BC  6ED9               	movwf	fsr2l,c
 11308  0016BE  0E03               	movlw	high _pBDTEntryOut
 11309  0016C0  20F4               	addwfc	prodh,w,c
 11310  0016C2  6EDA               	movwf	fsr2h,c
 11311  0016C4  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11312  0016C8  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11313                           
 11314                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 11315  0016CC  0104               	movlb	4	; () banked
 11316  0016CE  5134               	movf	52,w,b	;volatile
 11317  0016D0  0B0F               	andlw	15
 11318  0016D2  0100               	movlb	0	; () banked
 11319  0016D4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11320  0016D6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11321  0016D8  0D01               	mullw	1
 11322  0016DA  0ECE               	movlw	low _ep_data_out
 11323  0016DC  24F3               	addwf	prodl,w,c
 11324  0016DE  6ED9               	movwf	fsr2l,c
 11325  0016E0  0E02               	movlw	high _ep_data_out
 11326  0016E2  D01C               	goto	L6
 11327  0016E4                     l1828:
 11328                           
 11329                           ;usb_device.c: 2842: else
 11330                           ;usb_device.c: 2843: {
 11331                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11332                           
 11333                           ; BSR set to: 0
 11334  0016E4  0104               	movlb	4	; () banked
 11335  0016E6  5134               	movf	52,w,b	;volatile
 11336  0016E8  0B0F               	andlw	15
 11337  0016EA  0100               	movlb	0	; () banked
 11338  0016EC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11339  0016EE  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11340  0016F0  0D02               	mullw	2
 11341  0016F2  0EB6               	movlw	low _pBDTEntryIn
 11342  0016F4  24F3               	addwf	prodl,w,c
 11343  0016F6  6ED9               	movwf	fsr2l,c
 11344  0016F8  0E00               	movlw	high _pBDTEntryIn
 11345  0016FA  20F4               	addwfc	prodh,w,c
 11346  0016FC  6EDA               	movwf	fsr2h,c
 11347  0016FE  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 11348  001702  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 11349                           
 11350                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 11351  001706  0104               	movlb	4	; () banked
 11352  001708  5134               	movf	52,w,b	;volatile
 11353  00170A  0B0F               	andlw	15
 11354  00170C  0100               	movlb	0	; () banked
 11355  00170E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11356  001710  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11357  001712  0D01               	mullw	1
 11358  001714  0ED1               	movlw	low _ep_data_in
 11359  001716  24F3               	addwf	prodl,w,c
 11360  001718  6ED9               	movwf	fsr2l,c
 11361  00171A  0E02               	movlw	high _ep_data_in
 11362  00171C                     L6:
 11363  00171C  20F4               	addwfc	prodh,w,c
 11364  00171E  6EDA               	movwf	fsr2h,c
 11365  001720  50DF               	movf	indf2,w,c
 11366  001722  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;usb_device.c: 2846: }
 11370                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 11371                           
 11372                           ; BSR set to: 0
 11373  001724  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 11374  001726  D002               	goto	l1830
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;usb_device.c: 2853: {
 11378                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 11379  001728  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 11380                           
 11381                           ;usb_device.c: 2855: }
 11382  00172A  D001               	goto	l1831
 11383  00172C                     l1830:
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;usb_device.c: 2856: else
 11387                           ;usb_device.c: 2857: {
 11388                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 11389                           
 11390                           ; BSR set to: 0
 11391  00172C  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 11392  00172E                     l1831:
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;usb_device.c: 2859: }
 11396                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 11397                           
 11398                           ; BSR set to: 0
 11399  00172E  0104               	movlb	4	; () banked
 11400  001730  BF34               	btfsc	52,7,b	;volatile
 11401  001732  D00B               	goto	l1832
 11402                           
 11403                           ; BSR set to: 4
 11404                           ;usb_device.c: 2865: {
 11405                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11406  001734  5134               	movf	52,w,b	;volatile
 11407  001736  0B0F               	andlw	15
 11408  001738  0100               	movlb	0	; () banked
 11409  00173A  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11410  00173C  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11411  00173E  0D02               	mullw	2
 11412  001740  0E06               	movlw	low _pBDTEntryOut
 11413  001742  24F3               	addwf	prodl,w,c
 11414  001744  6ED9               	movwf	fsr2l,c
 11415  001746  0E03               	movlw	high _pBDTEntryOut
 11416  001748  D00B               	goto	L7
 11417  00174A                     l1832:
 11418                           
 11419                           ;usb_device.c: 2868: else
 11420                           ;usb_device.c: 2869: {
 11421                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11422                           
 11423                           ; BSR set to: 0
 11424  00174A  0104               	movlb	4	; () banked
 11425  00174C  5134               	movf	52,w,b	;volatile
 11426  00174E  0B0F               	andlw	15
 11427  001750  0100               	movlb	0	; () banked
 11428  001752  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11429  001754  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11430  001756  0D02               	mullw	2
 11431  001758  0EB6               	movlw	low _pBDTEntryIn
 11432  00175A  24F3               	addwf	prodl,w,c
 11433  00175C  6ED9               	movwf	fsr2l,c
 11434  00175E  0E00               	movlw	high _pBDTEntryIn
 11435  001760                     L7:
 11436  001760  20F4               	addwfc	prodh,w,c
 11437  001762  6EDA               	movwf	fsr2h,c
 11438  001764  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11439  001768  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;usb_device.c: 2871: }
 11443                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11444                           
 11445                           ; BSR set to: 0
 11446  00176C  0E03               	movlw	3
 11447  00176E  0104               	movlb	4	; () banked
 11448  001770  1931               	xorwf	49,w,b	;volatile
 11449  001772  A4D8               	btfss	status,2,c
 11450  001774  D031               	goto	l1834
 11451                           
 11452                           ; BSR set to: 4
 11453                           ;usb_device.c: 2875: {
 11454                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11455  001776  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11456  00177A  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11457  00177E  0100               	movlb	0	; () banked
 11458  001780  AEDF               	btfss	indf2,7,c
 11459  001782  D01D               	goto	l1837
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;usb_device.c: 2877: {
 11463                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11464  001784  0104               	movlb	4	; () banked
 11465  001786  BF34               	btfsc	52,7,b	;volatile
 11466  001788  D00B               	goto	l1836
 11467                           
 11468                           ; BSR set to: 4
 11469                           ;usb_device.c: 2881: {
 11470                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11471  00178A  5134               	movf	52,w,b	;volatile
 11472  00178C  0B0F               	andlw	15
 11473  00178E  0100               	movlb	0	; () banked
 11474  001790  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11475  001792  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11476  001794  0D01               	mullw	1
 11477  001796  0ECE               	movlw	low _ep_data_out
 11478  001798  24F3               	addwf	prodl,w,c
 11479  00179A  6ED9               	movwf	fsr2l,c
 11480  00179C  0E02               	movlw	high _ep_data_out
 11481  00179E  D00B               	goto	L8
 11482  0017A0                     l1836:
 11483                           
 11484                           ;usb_device.c: 2884: else
 11485                           ;usb_device.c: 2885: {
 11486                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11487                           
 11488                           ; BSR set to: 2
 11489  0017A0  0104               	movlb	4	; () banked
 11490  0017A2  5134               	movf	52,w,b	;volatile
 11491  0017A4  0B0F               	andlw	15
 11492  0017A6  0100               	movlb	0	; () banked
 11493  0017A8  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11494  0017AA  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11495  0017AC  0D01               	mullw	1
 11496  0017AE  0ED1               	movlw	low _ep_data_in
 11497  0017B0  24F3               	addwf	prodl,w,c
 11498  0017B2  6ED9               	movwf	fsr2l,c
 11499  0017B4  0E02               	movlw	high _ep_data_in
 11500  0017B6                     L8:
 11501  0017B6  20F4               	addwfc	prodh,w,c
 11502  0017B8  6EDA               	movwf	fsr2h,c
 11503  0017BA  0102               	movlb	2	; () banked
 11504  0017BC  82DF               	bsf	indf2,1,c
 11505  0017BE                     l1837:
 11506                           
 11507                           ;usb_device.c: 2887: }
 11508                           ;usb_device.c: 2888: }
 11509                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11510                           
 11511                           ; BSR set to: 2
 11512                           
 11513                           ; BSR set to: 2
 11514  0017BE  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11515  0017C2  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11516  0017C6  0E00               	movlw	0
 11517  0017C8  84DB               	bsf	plusw2,2,c
 11518                           
 11519                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11520  0017CA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11521  0017CE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11522  0017D2  0E00               	movlw	0
 11523  0017D4  8EDB               	bsf	plusw2,7,c
 11524                           
 11525                           ;usb_device.c: 2893: }
 11526  0017D6  0012               	return	
 11527  0017D8                     l1834:
 11528                           
 11529                           ;usb_device.c: 2894: else
 11530                           ;usb_device.c: 2895: {
 11531                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11532  0017D8  0E04               	movlw	4
 11533  0017DA  0100               	movlb	0	; () banked
 11534  0017DC  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11538  0017DE  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11539  0017E2  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11540  0017E6  AEDF               	btfss	indf2,7,c
 11541  0017E8  D01B               	goto	l1839
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;usb_device.c: 2902: {
 11545                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11546  0017EA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11547  0017EE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11548  0017F2  0E7F               	movlw	127
 11549  0017F4  16DF               	andwf	indf2,f,c
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11553  0017F6  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11554  0017FA  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11555  0017FE  0E00               	movlw	0
 11556  001800  8CDB               	bsf	plusw2,6,c
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11560  001802  0E00               	movlw	0
 11561  001804  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11562  001806  0E05               	movlw	5
 11563  001808  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11564  00180A  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11565  00180E  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11566  001812  0E00               	movlw	0
 11567  001814  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11568  001816  0E02               	movlw	2
 11569  001818  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11570  00181A  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11571                           
 11572                           ;usb_device.c: 2908: }
 11573  00181E  D006               	goto	l1840
 11574  001820                     l1839:
 11575                           
 11576                           ;usb_device.c: 2909: else
 11577                           ;usb_device.c: 2910: {
 11578                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11579  001820  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11580  001824  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11581  001828  0E00               	movlw	0
 11582  00182A  8CDB               	bsf	plusw2,6,c
 11583  00182C                     l1840:
 11584                           
 11585                           ;usb_device.c: 2913: }
 11586                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11587  00182C  0E04               	movlw	4
 11588  00182E  0100               	movlb	0	; () banked
 11589  001830  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11593  001832  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11594  001834  D006               	goto	u11830
 11595                           
 11596                           ; BSR set to: 0
 11597  001836  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11598  00183A  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11599  00183E  AEDF               	btfss	indf2,7,c
 11600  001840  D033               	goto	l1841
 11601  001842                     u11830:
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;usb_device.c: 2924: {
 11605                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11606  001842  0104               	movlb	4	; () banked
 11607  001844  BF34               	btfsc	52,7,b	;volatile
 11608  001846  D00B               	goto	l1844
 11609                           
 11610                           ; BSR set to: 4
 11611                           ;usb_device.c: 2926: {
 11612                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11613  001848  5134               	movf	52,w,b	;volatile
 11614  00184A  0B0F               	andlw	15
 11615  00184C  0100               	movlb	0	; () banked
 11616  00184E  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11617  001850  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11618  001852  0D01               	mullw	1
 11619  001854  0ECE               	movlw	low _ep_data_out
 11620  001856  24F3               	addwf	prodl,w,c
 11621  001858  6ED9               	movwf	fsr2l,c
 11622  00185A  0E02               	movlw	high _ep_data_out
 11623  00185C  D00B               	goto	L9
 11624  00185E                     l1844:
 11625                           
 11626                           ;usb_device.c: 2929: else
 11627                           ;usb_device.c: 2930: {
 11628                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11629                           
 11630                           ; BSR set to: 2
 11631  00185E  0104               	movlb	4	; () banked
 11632  001860  5134               	movf	52,w,b	;volatile
 11633  001862  0B0F               	andlw	15
 11634  001864  0100               	movlb	0	; () banked
 11635  001866  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11636  001868  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11637  00186A  0D01               	mullw	1
 11638  00186C  0ED1               	movlw	low _ep_data_in
 11639  00186E  24F3               	addwf	prodl,w,c
 11640  001870  6ED9               	movwf	fsr2l,c
 11641  001872  0E02               	movlw	high _ep_data_in
 11642  001874                     L9:
 11643  001874  20F4               	addwfc	prodh,w,c
 11644  001876  6EDA               	movwf	fsr2h,c
 11645  001878  0102               	movlb	2	; () banked
 11646  00187A  92DF               	bcf	indf2,1,c
 11647                           
 11648                           ; BSR set to: 2
 11649                           ;usb_device.c: 2932: }
 11650                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11651                           
 11652                           ; BSR set to: 2
 11653  00187C  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11654  001880  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11655  001884  0E3B               	movlw	59
 11656  001886  16DF               	andwf	indf2,f,c
 11657                           
 11658                           ; BSR set to: 2
 11659                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11660  001888  0E00               	movlw	0
 11661  00188A  0100               	movlb	0	; () banked
 11662  00188C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11663  00188E  0E05               	movlw	5
 11664  001890  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11665  001892  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11666  001896  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11667  00189A  0E00               	movlw	0
 11668  00189C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11669  00189E  0E02               	movlw	2
 11670  0018A0  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11671  0018A2  ECEC  F02A         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11672                           
 11673                           ;usb_device.c: 2938: }
 11674  0018A6  D006               	goto	l1846
 11675  0018A8                     l1841:
 11676                           
 11677                           ;usb_device.c: 2939: else
 11678                           ;usb_device.c: 2940: {
 11679                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11680  0018A8  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11681  0018AC  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11682  0018B0  0E3B               	movlw	59
 11683  0018B2  16DF               	andwf	indf2,f,c
 11684  0018B4                     l1846:
 11685                           
 11686                           ;usb_device.c: 2943: }
 11687                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11688  0018B4  0104               	movlb	4	; () banked
 11689  0018B6  5134               	movf	52,w,b	;volatile
 11690  0018B8  0B0F               	andlw	15
 11691  0018BA  0100               	movlb	0	; () banked
 11692  0018BC  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11693  0018BE  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11694  0018C0  0D01               	mullw	1
 11695  0018C2  0E26               	movlw	38
 11696  0018C4  24F3               	addwf	prodl,w,c
 11697  0018C6  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11698  0018C8  0E0F               	movlw	15
 11699  0018CA  20F4               	addwfc	prodh,w,c
 11700  0018CC  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11701                           
 11702                           ; BSR set to: 0
 11703                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11704  0018CE  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11705  0018D2  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11706  0018D6  0EFE               	movlw	254
 11707  0018D8  16DF               	andwf	indf2,f,c
 11708                           
 11709                           ; BSR set to: 0
 11710  0018DA  0012               	return	
 11711  0018DC                     __end_of_USBStdFeatureReqHandler:
 11712                           	opt stack 0
 11713                           tosu	equ	0xFFF
 11714                           tosh	equ	0xFFE
 11715                           tosl	equ	0xFFD
 11716                           pclath	equ	0xFFA
 11717                           tblptru	equ	0xFF8
 11718                           tblptrh	equ	0xFF7
 11719                           tblptrl	equ	0xFF6
 11720                           tablat	equ	0xFF5
 11721                           prodh	equ	0xFF4
 11722                           prodl	equ	0xFF3
 11723                           intcon	equ	0xFF2
 11724                           intcon2	equ	0xFF1
 11725                           intcon3	equ	0xFF0
 11726                           indf0	equ	0xFEF
 11727                           postinc0	equ	0xFEE
 11728                           plusw0	equ	0xFEB
 11729                           fsr0h	equ	0xFEA
 11730                           fsr0l	equ	0xFE9
 11731                           wreg	equ	0xFE8
 11732                           postinc1	equ	0xFE6
 11733                           postdec1	equ	0xFE5
 11734                           fsr1h	equ	0xFE2
 11735                           fsr1l	equ	0xFE1
 11736                           indf2	equ	0xFDF
 11737                           postinc2	equ	0xFDE
 11738                           postdec2	equ	0xFDD
 11739                           plusw2	equ	0xFDB
 11740                           fsr2h	equ	0xFDA
 11741                           fsr2l	equ	0xFD9
 11742                           status	equ	0xFD8
 11743                           
 11744 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11745 ;; Defined at:
 11746 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;  event           2   41[BANK0 ] enum E8364
 11749 ;;  pdata           2   43[BANK0 ] PTR void 
 11750 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11751 ;;  size            2   45[BANK0 ] unsigned int 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      unsigned char 
 11756 ;; Registers used:
 11757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11763 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11765 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11766 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11767 ;;Total ram usage:        8 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:   14
 11770 ;; This function calls:
 11771 ;;		_CDCInitEP
 11772 ;;		_USBCheckCDCRequest
 11773 ;; This function is called by:
 11774 ;;		_USBDeviceTasks
 11775 ;;		_USBStdSetCfgHandler
 11776 ;;		_USBSuspend
 11777 ;;		_USBWakeFromSuspend
 11778 ;;		_USBCtrlTrfSetupHandler
 11779 ;;		_USBCheckStdRequest
 11780 ;;		_USBStdFeatureReqHandler
 11781 ;; This function uses a non-reentrant model
 11782 ;;
 11783                           
 11784                           	psect	text44
 11785  0055D8                     __ptext44:
 11786                           	opt stack 0
 11787  0055D8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11788                           	opt stack 12
 11789                           
 11790                           ;usb_device_mgr.c: 106: switch( (int) event )
 11791                           
 11792                           ;incstack = 0
 11793  0055D8  D006               	goto	l2000
 11794  0055DA                     
 11795                           ;usb_device_mgr.c: 134: CDCInitEP();
 11796  0055DA  EC4E  F029         	call	_CDCInitEP	;wreg free
 11797                           
 11798                           ;usb_device_mgr.c: 142: break;
 11799                           
 11800                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11801                           
 11802                           ;usb_device_mgr.c: 139: break;
 11803  0055DE  0012               	return	
 11804  0055E0                     
 11805                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11806  0055E0  ECC5  F021         	call	_USBCheckCDCRequest	;wreg free
 11807                           
 11808                           ;usb_device_mgr.c: 163: }
 11809                           
 11810                           ;usb_device_mgr.c: 162: break;
 11811                           
 11812                           ;usb_device_mgr.c: 161: default:
 11813                           
 11814                           ;usb_device_mgr.c: 159: break;
 11815                           
 11816                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11817                           
 11818                           ;usb_device_mgr.c: 156: break;
 11819                           
 11820                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11821                           
 11822                           ;usb_device_mgr.c: 153: break;
 11823  0055E4  0012               	return	
 11824  0055E6                     l2000:
 11825  0055E6  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11826  0055EA  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11827                           
 11828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11829                           ; Switch size 1, requested type "space"
 11830                           ; Number of cases is 2, Range of values is 0 to 127
 11831                           ; switch strategies available:
 11832                           ; Name         Instructions Cycles
 11833                           ; simple_byte            7     4 (average)
 11834                           ;	Chosen strategy is simple_byte
 11835  0055EE  0100               	movlb	0	; () banked
 11836  0055F0  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11837  0055F2  0A00               	xorlw	0	; case 0
 11838  0055F4  B4D8               	btfsc	status,2,c
 11839  0055F6  D004               	goto	l16500
 11840  0055F8  0A7F               	xorlw	127	; case 127
 11841  0055FA  A4D8               	btfss	status,2,c
 11842  0055FC  0012               	return	
 11843  0055FE  D018               	goto	l16502
 11844  005600                     l16500:
 11845                           
 11846                           ; BSR set to: 0
 11847                           ; Switch size 1, requested type "space"
 11848                           ; Number of cases is 8, Range of values is 1 to 117
 11849                           ; switch strategies available:
 11850                           ; Name         Instructions Cycles
 11851                           ; simple_byte           25    13 (average)
 11852                           ;	Chosen strategy is simple_byte
 11853  005600  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11854  005602  0A01               	xorlw	1	; case 1
 11855  005604  B4D8               	btfsc	status,2,c
 11856  005606  D7E9               	goto	l2006
 11857  005608  0A03               	xorlw	3	; case 2
 11858  00560A  B4D8               	btfsc	status,2,c
 11859  00560C  0012               	return	
 11860  00560E  0A01               	xorlw	1	; case 3
 11861  005610  B4D8               	btfsc	status,2,c
 11862  005612  D7E6               	goto	l2008
 11863  005614  0A06               	xorlw	6	; case 5
 11864  005616  B4D8               	btfsc	status,2,c
 11865  005618  0012               	return	
 11866  00561A  0A77               	xorlw	119	; case 114
 11867  00561C  B4D8               	btfsc	status,2,c
 11868  00561E  0012               	return	
 11869  005620  0A01               	xorlw	1	; case 115
 11870  005622  B4D8               	btfsc	status,2,c
 11871  005624  0012               	return	
 11872  005626  0A07               	xorlw	7	; case 116
 11873  005628  B4D8               	btfsc	status,2,c
 11874  00562A  0012               	return	
 11875  00562C  0A01               	xorlw	1	; case 117
 11876  00562E  0012               	return	
 11877  005630                     l16502:
 11878                           
 11879                           ; BSR set to: 0
 11880                           ; Switch size 1, requested type "space"
 11881                           ; Number of cases is 1, Range of values is 255 to 255
 11882                           ; switch strategies available:
 11883                           ; Name         Instructions Cycles
 11884                           ; simple_byte            4     3 (average)
 11885                           ;	Chosen strategy is simple_byte
 11886  005630  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11887  005632  0AFF               	xorlw	255	; case 255
 11888  005634  0012               	return	
 11889  005636                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11890                           	opt stack 0
 11891                           tosu	equ	0xFFF
 11892                           tosh	equ	0xFFE
 11893                           tosl	equ	0xFFD
 11894                           pclath	equ	0xFFA
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodh	equ	0xFF4
 11900                           prodl	equ	0xFF3
 11901                           intcon	equ	0xFF2
 11902                           intcon2	equ	0xFF1
 11903                           intcon3	equ	0xFF0
 11904                           indf0	equ	0xFEF
 11905                           postinc0	equ	0xFEE
 11906                           plusw0	equ	0xFEB
 11907                           fsr0h	equ	0xFEA
 11908                           fsr0l	equ	0xFE9
 11909                           wreg	equ	0xFE8
 11910                           postinc1	equ	0xFE6
 11911                           postdec1	equ	0xFE5
 11912                           fsr1h	equ	0xFE2
 11913                           fsr1l	equ	0xFE1
 11914                           indf2	equ	0xFDF
 11915                           postinc2	equ	0xFDE
 11916                           postdec2	equ	0xFDD
 11917                           plusw2	equ	0xFDB
 11918                           fsr2h	equ	0xFDA
 11919                           fsr2l	equ	0xFD9
 11920                           status	equ	0xFD8
 11921                           
 11922 ;; *************** function _USBCheckCDCRequest *****************
 11923 ;; Defined at:
 11924 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;		None
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;		None
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      void 
 11931 ;; Registers used:
 11932 ;;		wreg, status,2, status,0
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/0
 11935 ;;		On exit  : 0/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11942 ;;Total ram usage:        0 bytes
 11943 ;; Hardware stack levels used:    1
 11944 ;; Hardware stack levels required when called:   11
 11945 ;; This function calls:
 11946 ;;		Nothing
 11947 ;; This function is called by:
 11948 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           	psect	text45
 11953  00438A                     __ptext45:
 11954                           	opt stack 0
 11955  00438A                     _USBCheckCDCRequest:
 11956                           	opt stack 14
 11957                           
 11958                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11959                           
 11960                           ;incstack = 0
 11961  00438A  0104               	movlb	4	; () banked
 11962  00438C  5130               	movf	48,w,b	;volatile
 11963  00438E  0B1F               	andlw	31
 11964  004390  06E8               	decf	wreg,f,c
 11965  004392  A4D8               	btfss	status,2,c
 11966  004394  0012               	return	
 11967                           
 11968                           ; BSR set to: 4
 11969                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11970                           
 11971                           ; BSR set to: 4
 11972                           
 11973                           ; BSR set to: 4
 11974  004396  3930               	swapf	48,w,b	;volatile
 11975  004398  32E8               	rrcf	wreg,f,c
 11976  00439A  0B03               	andlw	3
 11977  00439C  06E8               	decf	wreg,f,c
 11978  00439E  A4D8               	btfss	status,2,c
 11979  0043A0  0012               	return	
 11980                           
 11981                           ; BSR set to: 4
 11982                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11983                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11984                           
 11985                           ; BSR set to: 4
 11986                           
 11987                           ; BSR set to: 4
 11988  0043A2  5134               	movf	52,w,b	;volatile
 11989  0043A4  B4D8               	btfsc	status,2,c
 11990  0043A6  D037               	goto	l1902
 11991                           
 11992                           ; BSR set to: 4
 11993  0043A8  0534               	decf	52,w,b	;volatile
 11994  0043AA  A4D8               	btfss	status,2,c
 11995  0043AC  0012               	return	
 11996  0043AE  D033               	goto	l1902
 11997  0043B0                     
 11998                           ; BSR set to: 4
 11999                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12000                           
 12001                           ; BSR set to: 4
 12002  0043B0  0E72               	movlw	low _dummy_encapsulated_cmd_response
 12003  0043B2  0100               	movlb	0	; () banked
 12004  0043B4  6FB0               	movwf	_inPipes& (0+255),b
 12005  0043B6  0E03               	movlw	high _dummy_encapsulated_cmd_response
 12006  0043B8  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 12010  0043BA  0E00               	movlw	0
 12011  0043BC  6FB5               	movwf	(_inPipes+5)& (0+255),b
 12012  0043BE  0E08               	movlw	8
 12013  0043C0  6FB4               	movwf	(_inPipes+4)& (0+255),b
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12017  0043C2  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 12021  0043C4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12022                           
 12023                           ;usb_device_cdc.c: 178: break;
 12024  0043C6  0012               	return	
 12025  0043C8                     
 12026                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12027                           
 12028                           ; BSR set to: 0
 12029  0043C8  0E72               	movlw	low _dummy_encapsulated_cmd_response
 12030  0043CA  0100               	movlb	0	; () banked
 12031  0043CC  6FB0               	movwf	_inPipes& (0+255),b
 12032  0043CE  0E03               	movlw	high _dummy_encapsulated_cmd_response
 12033  0043D0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 12037  0043D2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12038                           
 12039                           ;usb_device_cdc.c: 183: break;
 12040  0043D4  0012               	return	
 12041  0043D6                     l1906:
 12042                           
 12043                           ; BSR set to: 4
 12044                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 12045  0043D6  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 12046  0043DA  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 12047                           
 12048                           ; BSR set to: 4
 12049                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12050  0043DE  0E7A               	movlw	low _line_coding
 12051  0043E0  0101               	movlb	1	; () banked
 12052  0043E2  6FC9               	movwf	_outPipes& (0+255),b
 12053  0043E4  0E03               	movlw	high _line_coding
 12054  0043E6  6FCA               	movwf	(_outPipes+1)& (0+255),b
 12055                           
 12056                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 12057  0043E8  0E00               	movlw	0
 12058  0043EA  6FCF               	movwf	(_outPipes+6)& (0+255),b
 12059  0043EC  0E00               	movlw	0
 12060  0043EE  6FD0               	movwf	(_outPipes+7)& (0+255),b
 12061                           
 12062                           ; BSR set to: 1
 12063                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 12064  0043F0  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 12065                           
 12066                           ;usb_device_cdc.c: 192: break;
 12067  0043F2  0012               	return	
 12068  0043F4                     
 12069                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12070                           
 12071                           ; BSR set to: 1
 12072  0043F4  0E7A               	movlw	low _line_coding
 12073  0043F6  0100               	movlb	0	; () banked
 12074  0043F8  6FB0               	movwf	_inPipes& (0+255),b
 12075  0043FA  0E03               	movlw	high _line_coding
 12076  0043FC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 12077                           
 12078                           ; BSR set to: 0
 12079  0043FE  0E00               	movlw	0
 12080  004400  6FB5               	movwf	(_inPipes+5)& (0+255),b
 12081  004402  0E07               	movlw	7
 12082  004404  6FB4               	movwf	(_inPipes+4)& (0+255),b
 12083                           
 12084                           ; BSR set to: 0
 12085  004406  0EC1               	movlw	193
 12086  004408  6FB3               	movwf	(_inPipes+3)& (0+255),b
 12087                           
 12088                           ;usb_device_cdc.c: 199: break;
 12089  00440A  0012               	return	
 12090  00440C                     l1908:
 12091                           
 12092                           ; BSR set to: 4
 12093                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12094  00440C  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 12095                           
 12096                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 12097  004410  0100               	movlb	0	; () banked
 12098  004412  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;usb_device_cdc.c: 261: }
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;usb_device_cdc.c: 260: break;
 12105                           
 12106                           ;usb_device_cdc.c: 259: default:
 12107                           
 12108                           ;usb_device_cdc.c: 235: break;
 12109  004414  0012               	return	
 12110  004416                     l1902:
 12111                           
 12112                           ; BSR set to: 0
 12113  004416  0104               	movlb	4	; () banked
 12114  004418  5131               	movf	49,w,b	;volatile
 12115                           
 12116                           ; Switch size 1, requested type "space"
 12117                           ; Number of cases is 5, Range of values is 0 to 34
 12118                           ; switch strategies available:
 12119                           ; Name         Instructions Cycles
 12120                           ; simple_byte           16     9 (average)
 12121                           ;	Chosen strategy is simple_byte
 12122  00441A  0A00               	xorlw	0	; case 0
 12123  00441C  B4D8               	btfsc	status,2,c
 12124  00441E  D7C8               	goto	l1903
 12125  004420  0A01               	xorlw	1	; case 1
 12126  004422  B4D8               	btfsc	status,2,c
 12127  004424  D7D1               	goto	l1905
 12128  004426  0A21               	xorlw	33	; case 32
 12129  004428  B4D8               	btfsc	status,2,c
 12130  00442A  D7D5               	goto	l1906
 12131  00442C  0A01               	xorlw	1	; case 33
 12132  00442E  B4D8               	btfsc	status,2,c
 12133  004430  D7E1               	goto	l1907
 12134  004432  0A03               	xorlw	3	; case 34
 12135  004434  A4D8               	btfss	status,2,c
 12136  004436  0012               	return	
 12137  004438  D7E9               	goto	l1908
 12138  00443A                     __end_of_USBCheckCDCRequest:
 12139                           	opt stack 0
 12140                           tosu	equ	0xFFF
 12141                           tosh	equ	0xFFE
 12142                           tosl	equ	0xFFD
 12143                           pclath	equ	0xFFA
 12144                           tblptru	equ	0xFF8
 12145                           tblptrh	equ	0xFF7
 12146                           tblptrl	equ	0xFF6
 12147                           tablat	equ	0xFF5
 12148                           prodh	equ	0xFF4
 12149                           prodl	equ	0xFF3
 12150                           intcon	equ	0xFF2
 12151                           intcon2	equ	0xFF1
 12152                           intcon3	equ	0xFF0
 12153                           indf0	equ	0xFEF
 12154                           postinc0	equ	0xFEE
 12155                           plusw0	equ	0xFEB
 12156                           fsr0h	equ	0xFEA
 12157                           fsr0l	equ	0xFE9
 12158                           wreg	equ	0xFE8
 12159                           postinc1	equ	0xFE6
 12160                           postdec1	equ	0xFE5
 12161                           fsr1h	equ	0xFE2
 12162                           fsr1l	equ	0xFE1
 12163                           indf2	equ	0xFDF
 12164                           postinc2	equ	0xFDE
 12165                           postdec2	equ	0xFDD
 12166                           plusw2	equ	0xFDB
 12167                           fsr2h	equ	0xFDA
 12168                           fsr2l	equ	0xFD9
 12169                           status	equ	0xFD8
 12170                           
 12171 ;; *************** function _CDCInitEP *****************
 12172 ;; Defined at:
 12173 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;		None
 12176 ;; Auto vars:     Size  Location     Type
 12177 ;;		None
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12191 ;;Total ram usage:        0 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:   13
 12194 ;; This function calls:
 12195 ;;		_USBEnableEndpoint
 12196 ;;		_USBTransferOnePacket
 12197 ;; This function is called by:
 12198 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12199 ;; This function uses a non-reentrant model
 12200 ;;
 12201                           
 12202                           	psect	text46
 12203  00529C                     __ptext46:
 12204                           	opt stack 0
 12205  00529C                     _CDCInitEP:
 12206                           	opt stack 12
 12207                           
 12208                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 12209                           
 12210                           ;incstack = 0
 12211  00529C  0E80               	movlw	128
 12212  00529E  0103               	movlb	3	; () banked
 12213  0052A0  6F7A               	movwf	_line_coding& (0+255),b
 12214  0052A2  0E25               	movlw	37
 12215  0052A4  6F7B               	movwf	(_line_coding+1)& (0+255),b
 12216  0052A6  0E00               	movlw	0
 12217  0052A8  6F7C               	movwf	(_line_coding+2)& (0+255),b
 12218  0052AA  0E00               	movlw	0
 12219  0052AC  6F7D               	movwf	(_line_coding+3)& (0+255),b
 12220                           
 12221                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 12222  0052AE  0E00               	movlw	0
 12223  0052B0  6F7E               	movwf	(_line_coding+4)& (0+255),b
 12224                           
 12225                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 12226  0052B2  0E00               	movlw	0
 12227  0052B4  6F7F               	movwf	(_line_coding+5)& (0+255),b
 12228                           
 12229                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 12230  0052B6  0E08               	movlw	8
 12231  0052B8  6F80               	movwf	(_line_coding+6)& (0+255),b
 12232                           
 12233                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 12234  0052BA  0E00               	movlw	0
 12235  0052BC  0100               	movlb	0	; () banked
 12236  0052BE  6FC6               	movwf	_cdc_rx_len& (0+255),b
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 12240  0052C0  0E1A               	movlw	26
 12241  0052C2  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12242  0052C4  0E01               	movlw	1
 12243  0052C6  EC12  F02F         	call	_USBEnableEndpoint
 12244                           
 12245                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12246  0052CA  0E1E               	movlw	30
 12247  0052CC  0100               	movlb	0	; () banked
 12248  0052CE  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 12249  0052D0  0E02               	movlw	2
 12250  0052D2  EC12  F02F         	call	_USBEnableEndpoint
 12251                           
 12252                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12253  0052D6  0E00               	movlw	0
 12254  0052D8  0100               	movlb	0	; () banked
 12255  0052DA  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 12256  0052DC  0E00               	movlw	low _cdc_data_rx
 12257  0052DE  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 12258  0052E0  0E05               	movlw	high _cdc_data_rx
 12259  0052E2  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12260  0052E4  0E40               	movlw	64
 12261  0052E6  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 12262  0052E8  0E02               	movlw	2
 12263  0052EA  EC0D  F021         	call	_USBTransferOnePacket
 12264  0052EE  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12265  0052F2  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12266                           
 12267                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 12268  0052F6  0E00               	movlw	0
 12269  0052F8  0101               	movlb	1	; () banked
 12270  0052FA  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 12271  0052FC  0E00               	movlw	0
 12272  0052FE  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 12276  005300  0E00               	movlw	0
 12277  005302  0100               	movlb	0	; () banked
 12278  005304  6FC5               	movwf	_cdc_trf_state& (0+255),b
 12279                           
 12280                           ; BSR set to: 0
 12281  005306  0012               	return		;funcret
 12282  005308                     __end_of_CDCInitEP:
 12283                           	opt stack 0
 12284                           tosu	equ	0xFFF
 12285                           tosh	equ	0xFFE
 12286                           tosl	equ	0xFFD
 12287                           pclath	equ	0xFFA
 12288                           tblptru	equ	0xFF8
 12289                           tblptrh	equ	0xFF7
 12290                           tblptrl	equ	0xFF6
 12291                           tablat	equ	0xFF5
 12292                           prodh	equ	0xFF4
 12293                           prodl	equ	0xFF3
 12294                           intcon	equ	0xFF2
 12295                           intcon2	equ	0xFF1
 12296                           intcon3	equ	0xFF0
 12297                           indf0	equ	0xFEF
 12298                           postinc0	equ	0xFEE
 12299                           plusw0	equ	0xFEB
 12300                           fsr0h	equ	0xFEA
 12301                           fsr0l	equ	0xFE9
 12302                           wreg	equ	0xFE8
 12303                           postinc1	equ	0xFE6
 12304                           postdec1	equ	0xFE5
 12305                           fsr1h	equ	0xFE2
 12306                           fsr1l	equ	0xFE1
 12307                           indf2	equ	0xFDF
 12308                           postinc2	equ	0xFDE
 12309                           postdec2	equ	0xFDD
 12310                           plusw2	equ	0xFDB
 12311                           fsr2h	equ	0xFDA
 12312                           fsr2l	equ	0xFD9
 12313                           status	equ	0xFD8
 12314                           
 12315 ;; *************** function _USBEnableEndpoint *****************
 12316 ;; Defined at:
 12317 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  ep              1    wreg     unsigned char 
 12320 ;;  options         1   37[BANK0 ] unsigned char 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  ep              1   40[BANK0 ] unsigned char 
 12323 ;;  p               2   38[BANK0 ] PTR unsigned char 
 12324 ;;		 -> UEP0(1), 
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1    wreg      void 
 12327 ;; Registers used:
 12328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12334 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12335 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12337 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12338 ;;Total ram usage:        4 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:   12
 12341 ;; This function calls:
 12342 ;;		_USBConfigureEndpoint
 12343 ;; This function is called by:
 12344 ;;		_CDCInitEP
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text47
 12349  005E24                     __ptext47:
 12350                           	opt stack 0
 12351  005E24                     _USBEnableEndpoint:
 12352                           	opt stack 12
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;incstack = 0
 12356                           ;USBEnableEndpoint@ep stored from wreg
 12357  005E24  0100               	movlb	0	; () banked
 12358  005E26  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 12359                           
 12360                           ;usb_device.c: 898: unsigned char* p;
 12361                           ;usb_device.c: 902: if(options & 0x04)
 12362  005E28  0100               	movlb	0	; () banked
 12363  005E2A  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 12364  005E2C  D005               	goto	l1643
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;usb_device.c: 903: {
 12368                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 12369  005E2E  0E00               	movlw	0
 12370  005E30  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12371  005E32  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12372  005E34  EC06  F025         	call	_USBConfigureEndpoint
 12373  005E38                     l1643:
 12374                           
 12375                           ;usb_device.c: 905: }
 12376                           ;usb_device.c: 906: if(options & 0x02)
 12377  005E38  0100               	movlb	0	; () banked
 12378  005E3A  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 12379  005E3C  D005               	goto	l1644
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;usb_device.c: 907: {
 12383                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 12384  005E3E  0E01               	movlw	1
 12385  005E40  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 12386  005E42  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12387  005E44  EC06  F025         	call	_USBConfigureEndpoint
 12388  005E48                     l1644:
 12389                           
 12390                           ;usb_device.c: 909: }
 12391                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 12392  005E48  0100               	movlb	0	; () banked
 12393  005E4A  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 12394  005E4C  0D01               	mullw	1
 12395  005E4E  0E26               	movlw	38
 12396  005E50  24F3               	addwf	prodl,w,c
 12397  005E52  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 12398  005E54  0E0F               	movlw	15
 12399  005E56  20F4               	addwfc	prodh,w,c
 12400  005E58  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;usb_device.c: 919: *p = options;
 12404  005E5A  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 12405  005E5E  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 12406  005E62  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 12407                           
 12408                           ; BSR set to: 0
 12409  005E66  0012               	return		;funcret
 12410  005E68                     __end_of_USBEnableEndpoint:
 12411                           	opt stack 0
 12412                           tosu	equ	0xFFF
 12413                           tosh	equ	0xFFE
 12414                           tosl	equ	0xFFD
 12415                           pclath	equ	0xFFA
 12416                           tblptru	equ	0xFF8
 12417                           tblptrh	equ	0xFF7
 12418                           tblptrl	equ	0xFF6
 12419                           tablat	equ	0xFF5
 12420                           prodh	equ	0xFF4
 12421                           prodl	equ	0xFF3
 12422                           intcon	equ	0xFF2
 12423                           intcon2	equ	0xFF1
 12424                           intcon3	equ	0xFF0
 12425                           indf0	equ	0xFEF
 12426                           postinc0	equ	0xFEE
 12427                           plusw0	equ	0xFEB
 12428                           fsr0h	equ	0xFEA
 12429                           fsr0l	equ	0xFE9
 12430                           wreg	equ	0xFE8
 12431                           postinc1	equ	0xFE6
 12432                           postdec1	equ	0xFE5
 12433                           fsr1h	equ	0xFE2
 12434                           fsr1l	equ	0xFE1
 12435                           indf2	equ	0xFDF
 12436                           postinc2	equ	0xFDE
 12437                           postdec2	equ	0xFDD
 12438                           plusw2	equ	0xFDB
 12439                           fsr2h	equ	0xFDA
 12440                           fsr2l	equ	0xFD9
 12441                           status	equ	0xFD8
 12442                           
 12443 ;; *************** function _USBConfigureEndpoint *****************
 12444 ;; Defined at:
 12445 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12446 ;; Parameters:    Size  Location     Type
 12447 ;;  EPNum           1    wreg     unsigned char 
 12448 ;;  direction       1   29[BANK0 ] unsigned char 
 12449 ;; Auto vars:     Size  Location     Type
 12450 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12451 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12452 ;;		 -> BDT(48), 
 12453 ;; Return value:  Size  Location     Type
 12454 ;;                  1    wreg      void 
 12455 ;; Registers used:
 12456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12457 ;; Tracked objects:
 12458 ;;		On entry : 0/0
 12459 ;;		On exit  : 0/0
 12460 ;;		Unchanged: 0/0
 12461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12462 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12463 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12464 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12465 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12466 ;;Total ram usage:        8 bytes
 12467 ;; Hardware stack levels used:    1
 12468 ;; Hardware stack levels required when called:   11
 12469 ;; This function calls:
 12470 ;;		Nothing
 12471 ;; This function is called by:
 12472 ;;		_USBEnableEndpoint
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476                           	psect	text48
 12477  004A0C                     __ptext48:
 12478                           	opt stack 0
 12479  004A0C                     _USBConfigureEndpoint:
 12480                           	opt stack 12
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;incstack = 0
 12484                           ;USBConfigureEndpoint@EPNum stored from wreg
 12485  004A0C  0100               	movlb	0	; () banked
 12486  004A0E  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12487                           
 12488                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12489                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12490  004A10  0E00               	movlw	0
 12491  004A12  0100               	movlb	0	; () banked
 12492  004A14  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12493  004A16  0E04               	movlw	4
 12494  004A18  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12498  004A1A  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12499  004A1C  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12500  004A1E  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12501  004A20  90D8               	bcf	status,0,c
 12502  004A22  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12503  004A24  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12504  004A26  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12505  004A28  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12506  004A2A  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12507  004A2C  90D8               	bcf	status,0,c
 12508  004A2E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12509  004A30  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12510  004A32  90D8               	bcf	status,0,c
 12511  004A34  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12512  004A36  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12513  004A38  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12514  004A3A  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12515  004A3C  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12516  004A3E  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12517  004A40  90D8               	bcf	status,0,c
 12518  004A42  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12519  004A44  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12520  004A46  90D8               	bcf	status,0,c
 12521  004A48  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12522  004A4A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12523  004A4C  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12524  004A4E  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12525  004A50  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12526  004A52  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12530  004A54  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12531  004A58  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12532  004A5C  9EDF               	bcf	indf2,7,c
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;usb_device.c: 1575: if(direction == 0)
 12536  004A5E  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12537  004A60  A4D8               	btfss	status,2,c
 12538  004A62  D007               	goto	l1679
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;usb_device.c: 1576: {
 12542                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12543  004A64  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12544  004A66  0D02               	mullw	2
 12545  004A68  0E06               	movlw	low _pBDTEntryOut
 12546  004A6A  24F3               	addwf	prodl,w,c
 12547  004A6C  6ED9               	movwf	fsr2l,c
 12548  004A6E  0E03               	movlw	high _pBDTEntryOut
 12549  004A70  D006               	goto	L10
 12550  004A72                     l1679:
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;usb_device.c: 1579: else
 12554                           ;usb_device.c: 1580: {
 12555                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12556                           
 12557                           ; BSR set to: 0
 12558  004A72  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12559  004A74  0D02               	mullw	2
 12560  004A76  0EB6               	movlw	low _pBDTEntryIn
 12561  004A78  24F3               	addwf	prodl,w,c
 12562  004A7A  6ED9               	movwf	fsr2l,c
 12563  004A7C  0E00               	movlw	high _pBDTEntryIn
 12564  004A7E                     L10:
 12565  004A7E  20F4               	addwfc	prodh,w,c
 12566  004A80  6EDA               	movwf	fsr2h,c
 12567  004A82  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12568  004A86  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;usb_device.c: 1582: }
 12572                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12573                           
 12574                           ; BSR set to: 0
 12575  004A8A  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12576  004A8E  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12577  004A92  9CDF               	bcf	indf2,6,c
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12581  004A94  EE20 F004          	lfsr	2,4
 12582  004A98  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12583  004A9A  26D9               	addwf	fsr2l,f,c
 12584  004A9C  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12585  004A9E  22DA               	addwfc	fsr2h,f,c
 12586  004AA0  8CDF               	bsf	indf2,6,c
 12587                           
 12588                           ; BSR set to: 0
 12589  004AA2  0012               	return		;funcret
 12590  004AA4                     __end_of_USBConfigureEndpoint:
 12591                           	opt stack 0
 12592                           tosu	equ	0xFFF
 12593                           tosh	equ	0xFFE
 12594                           tosl	equ	0xFFD
 12595                           pclath	equ	0xFFA
 12596                           tblptru	equ	0xFF8
 12597                           tblptrh	equ	0xFF7
 12598                           tblptrl	equ	0xFF6
 12599                           tablat	equ	0xFF5
 12600                           prodh	equ	0xFF4
 12601                           prodl	equ	0xFF3
 12602                           intcon	equ	0xFF2
 12603                           intcon2	equ	0xFF1
 12604                           intcon3	equ	0xFF0
 12605                           indf0	equ	0xFEF
 12606                           postinc0	equ	0xFEE
 12607                           plusw0	equ	0xFEB
 12608                           fsr0h	equ	0xFEA
 12609                           fsr0l	equ	0xFE9
 12610                           wreg	equ	0xFE8
 12611                           postinc1	equ	0xFE6
 12612                           postdec1	equ	0xFE5
 12613                           fsr1h	equ	0xFE2
 12614                           fsr1l	equ	0xFE1
 12615                           indf2	equ	0xFDF
 12616                           postinc2	equ	0xFDE
 12617                           postdec2	equ	0xFDD
 12618                           plusw2	equ	0xFDB
 12619                           fsr2h	equ	0xFDA
 12620                           fsr2l	equ	0xFD9
 12621                           status	equ	0xFD8
 12622                           
 12623 ;; *************** function _USBCtrlTrfOutHandler *****************
 12624 ;; Defined at:
 12625 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12626 ;; Parameters:    Size  Location     Type
 12627 ;;		None
 12628 ;; Auto vars:     Size  Location     Type
 12629 ;;		None
 12630 ;; Return value:  Size  Location     Type
 12631 ;;                  1    wreg      void 
 12632 ;; Registers used:
 12633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12634 ;; Tracked objects:
 12635 ;;		On entry : 0/0
 12636 ;;		On exit  : 0/0
 12637 ;;		Unchanged: 0/0
 12638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12643 ;;Total ram usage:        0 bytes
 12644 ;; Hardware stack levels used:    1
 12645 ;; Hardware stack levels required when called:   13
 12646 ;; This function calls:
 12647 ;;		_USBCtrlTrfRxService
 12648 ;; This function is called by:
 12649 ;;		_USBCtrlEPService
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           	psect	text49
 12654  005444                     __ptext49:
 12655                           	opt stack 0
 12656  005444                     _USBCtrlTrfOutHandler:
 12657                           	opt stack 12
 12658                           
 12659                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;incstack = 0
 12663  005444  0E02               	movlw	2
 12664  005446  0100               	movlb	0	; () banked
 12665  005448  19CA               	xorwf	_controlTransferState& (0+255),w,b
 12666  00544A  A4D8               	btfss	status,2,c
 12667  00544C  D003               	goto	l1785
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;usb_device.c: 2558: {
 12671                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12672  00544E  ECF2  F017         	call	_USBCtrlTrfRxService	;wreg free
 12673                           
 12674                           ;usb_device.c: 2560: }
 12675  005452  0012               	return	
 12676  005454                     l1785:
 12677                           
 12678                           ;usb_device.c: 2561: else
 12679                           ;usb_device.c: 2562: {
 12680                           ;usb_device.c: 2565: controlTransferState = 0;
 12681  005454  0E00               	movlw	0
 12682  005456  0100               	movlb	0	; () banked
 12683  005458  6FCA               	movwf	_controlTransferState& (0+255),b
 12684                           
 12685                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12686  00545A  0101               	movlb	1	; () banked
 12687  00545C  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12688  00545E  A4D8               	btfss	status,2,c
 12689  005460  D020               	goto	l1787
 12690                           
 12691                           ; BSR set to: 1
 12692                           ;usb_device.c: 2573: {
 12693                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12694  005462  0100               	movlb	0	; () banked
 12695  005464  EE20 F001          	lfsr	2,1
 12696  005468  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12697  00546A  26D9               	addwf	fsr2l,f,c
 12698  00546C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12699  00546E  22DA               	addwfc	fsr2h,f,c
 12700  005470  0E08               	movlw	8
 12701  005472  6EDF               	movwf	indf2,c
 12702                           
 12703                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12704  005474  EE20 F002          	lfsr	2,2
 12705  005478  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12706  00547A  26D9               	addwf	fsr2l,f,c
 12707  00547C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12708  00547E  22DA               	addwfc	fsr2h,f,c
 12709  005480  0E30               	movlw	48
 12710  005482  6EDE               	movwf	postinc2,c
 12711  005484  0E04               	movlw	4
 12712  005486  6EDD               	movwf	postdec2,c
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12716  005488  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12717  00548C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12718  005490  0E0C               	movlw	12
 12719  005492  6EDF               	movwf	indf2,c
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12723  005494  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12724  005498  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12725  00549C  0E00               	movlw	0
 12726  00549E  8EDB               	bsf	plusw2,7,c
 12727                           
 12728                           ;usb_device.c: 2578: }
 12729  0054A0  0012               	return	
 12730  0054A2                     l1787:
 12731                           
 12732                           ;usb_device.c: 2579: else
 12733                           ;usb_device.c: 2580: {
 12734                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12735                           
 12736                           ; BSR set to: 0
 12737  0054A2  0E00               	movlw	0
 12738  0054A4  0101               	movlb	1	; () banked
 12739  0054A6  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12740                           
 12741                           ; BSR set to: 1
 12742  0054A8  0012               	return	
 12743  0054AA                     __end_of_USBCtrlTrfOutHandler:
 12744                           	opt stack 0
 12745                           tosu	equ	0xFFF
 12746                           tosh	equ	0xFFE
 12747                           tosl	equ	0xFFD
 12748                           pclath	equ	0xFFA
 12749                           tblptru	equ	0xFF8
 12750                           tblptrh	equ	0xFF7
 12751                           tblptrl	equ	0xFF6
 12752                           tablat	equ	0xFF5
 12753                           prodh	equ	0xFF4
 12754                           prodl	equ	0xFF3
 12755                           intcon	equ	0xFF2
 12756                           intcon2	equ	0xFF1
 12757                           intcon3	equ	0xFF0
 12758                           indf0	equ	0xFEF
 12759                           postinc0	equ	0xFEE
 12760                           plusw0	equ	0xFEB
 12761                           fsr0h	equ	0xFEA
 12762                           fsr0l	equ	0xFE9
 12763                           wreg	equ	0xFE8
 12764                           postinc1	equ	0xFE6
 12765                           postdec1	equ	0xFE5
 12766                           fsr1h	equ	0xFE2
 12767                           fsr1l	equ	0xFE1
 12768                           indf2	equ	0xFDF
 12769                           postinc2	equ	0xFDE
 12770                           postdec2	equ	0xFDD
 12771                           plusw2	equ	0xFDB
 12772                           fsr2h	equ	0xFDA
 12773                           fsr2l	equ	0xFD9
 12774                           status	equ	0xFD8
 12775                           
 12776 ;; *************** function _USBCtrlTrfRxService *****************
 12777 ;; Defined at:
 12778 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;		None
 12781 ;; Auto vars:     Size  Location     Type
 12782 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12783 ;;  i               1   29[BANK0 ] unsigned char 
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      void 
 12786 ;; Registers used:
 12787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12796 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12797 ;;Total ram usage:        2 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:   12
 12800 ;; This function calls:
 12801 ;;		_USBCtrlEPAllowStatusStage
 12802 ;; This function is called by:
 12803 ;;		_USBCtrlTrfOutHandler
 12804 ;; This function uses a non-reentrant model
 12805 ;;
 12806                           
 12807                           	psect	text50
 12808  002FE4                     __ptext50:
 12809                           	opt stack 0
 12810  002FE4                     _USBCtrlTrfRxService:
 12811                           	opt stack 12
 12812                           
 12813                           ;usb_device.c: 1872: uint8_t byteToRead;
 12814                           ;usb_device.c: 1873: uint8_t i;
 12815                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12816                           
 12817                           ;incstack = 0
 12818  002FE4  0100               	movlb	0	; () banked
 12819  002FE6  EE20 F001          	lfsr	2,1
 12820  002FEA  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12821  002FEC  26D9               	addwf	fsr2l,f,c
 12822  002FEE  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12823  002FF0  22DA               	addwfc	fsr2h,f,c
 12824  002FF2  50DF               	movf	indf2,w,c
 12825  002FF4  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12829  002FF6  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12830  002FF8  0101               	movlb	1	; () banked
 12831  002FFA  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12832  002FFC  0E00               	movlw	0
 12833  002FFE  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12834  003000  A0D8               	btfss	status,0,c
 12835                           
 12836                           ; BSR set to: 1
 12837                           ;usb_device.c: 1884: {
 12838                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12839  003002  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12840                           
 12841                           ; BSR set to: 1
 12842                           ;usb_device.c: 1886: }
 12843                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12844                           
 12845                           ; BSR set to: 1
 12846  003006  0100               	movlb	0	; () banked
 12847  003008  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12848  00300A  0101               	movlb	1	; () banked
 12849  00300C  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12850  00300E  0E00               	movlw	0
 12851  003010  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12852                           
 12853                           ; BSR set to: 1
 12854                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12855  003012  0E00               	movlw	0
 12856  003014  0100               	movlb	0	; () banked
 12857  003016  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12858  003018  D013               	goto	l1713
 12859  00301A                     
 12860                           ; BSR set to: 0
 12861                           ;usb_device.c: 1893: {
 12862                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12863                           
 12864                           ; BSR set to: 0
 12865  00301A  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12866  00301C  0D01               	mullw	1
 12867  00301E  0E38               	movlw	56
 12868  003020  24F3               	addwf	prodl,w,c
 12869  003022  6ED9               	movwf	fsr2l,c
 12870  003024  0E04               	movlw	4
 12871  003026  20F4               	addwfc	prodh,w,c
 12872  003028  6EDA               	movwf	fsr2h,c
 12873  00302A  C1C9  FFE1         	movff	_outPipes,fsr1l
 12874  00302E  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12875  003032  CFDF FFE7          	movff	indf2,indf1
 12876                           
 12877                           ; BSR set to: 0
 12878  003036  0101               	movlb	1	; () banked
 12879  003038  4BC9               	infsnz	_outPipes& (0+255),f,b
 12880  00303A  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12881                           
 12882                           ; BSR set to: 1
 12883  00303C  0100               	movlb	0	; () banked
 12884  00303E  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12885  003040                     l1713:
 12886                           
 12887                           ; BSR set to: 0
 12888                           
 12889                           ; BSR set to: 0
 12890  003040  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12891  003042  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12892  003044  A0D8               	btfss	status,0,c
 12893  003046  D7E9               	goto	l1714
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;usb_device.c: 1895: }
 12897                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12898                           
 12899                           ; BSR set to: 0
 12900  003048  0101               	movlb	1	; () banked
 12901  00304A  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12902  00304C  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12903  00304E  B4D8               	btfsc	status,2,c
 12904  003050  D033               	goto	l1716
 12905                           
 12906                           ; BSR set to: 1
 12907                           ;usb_device.c: 1900: {
 12908                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12909  003052  0100               	movlb	0	; () banked
 12910  003054  EE20 F001          	lfsr	2,1
 12911  003058  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12912  00305A  26D9               	addwf	fsr2l,f,c
 12913  00305C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12914  00305E  22DA               	addwfc	fsr2h,f,c
 12915  003060  0E08               	movlw	8
 12916  003062  6EDF               	movwf	indf2,c
 12917                           
 12918                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12919  003064  EE20 F002          	lfsr	2,2
 12920  003068  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12921  00306A  26D9               	addwf	fsr2l,f,c
 12922  00306C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12923  00306E  22DA               	addwfc	fsr2h,f,c
 12924  003070  0E38               	movlw	56
 12925  003072  6EDE               	movwf	postinc2,c
 12926  003074  0E04               	movlw	4
 12927  003076  6EDD               	movwf	postdec2,c
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12931  003078  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12932  00307C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12933  003080  BCDF               	btfsc	indf2,6,c
 12934  003082  D00D               	goto	l1717
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;usb_device.c: 1904: {
 12938                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12939  003084  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12940  003088  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12941  00308C  0E48               	movlw	72
 12942  00308E  6EDF               	movwf	indf2,c
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12946  003090  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12947  003094  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12948  003098  0E00               	movlw	0
 12949  00309A  8EDB               	bsf	plusw2,7,c
 12950                           
 12951                           ;usb_device.c: 1907: }
 12952  00309C  0012               	return	
 12953  00309E                     l1717:
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;usb_device.c: 1908: else
 12957                           ;usb_device.c: 1909: {
 12958                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12959                           
 12960                           ; BSR set to: 0
 12961  00309E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12962  0030A2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12963  0030A6  0E08               	movlw	8
 12964  0030A8  6EDF               	movwf	indf2,c
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12968  0030AA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12969  0030AE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12970  0030B2  0E00               	movlw	0
 12971  0030B4  8EDB               	bsf	plusw2,7,c
 12972                           
 12973                           ; BSR set to: 0
 12974                           ;usb_device.c: 1912: }
 12975                           ;usb_device.c: 1913: }
 12976  0030B6  0012               	return	
 12977  0030B8                     l1716:
 12978                           
 12979                           ;usb_device.c: 1914: else
 12980                           ;usb_device.c: 1915: {
 12981                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12982                           
 12983                           ; BSR set to: 0
 12984  0030B8  0100               	movlb	0	; () banked
 12985  0030BA  EE20 F001          	lfsr	2,1
 12986  0030BE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12987  0030C0  26D9               	addwf	fsr2l,f,c
 12988  0030C2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12989  0030C4  22DA               	addwfc	fsr2h,f,c
 12990  0030C6  0E08               	movlw	8
 12991  0030C8  6EDF               	movwf	indf2,c
 12992                           
 12993                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12994  0030CA  EE20 F002          	lfsr	2,2
 12995  0030CE  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12996  0030D0  26D9               	addwf	fsr2l,f,c
 12997  0030D2  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12998  0030D4  22DA               	addwfc	fsr2h,f,c
 12999  0030D6  0E30               	movlw	48
 13000  0030D8  6EDE               	movwf	postinc2,c
 13001  0030DA  0E04               	movlw	4
 13002  0030DC  6EDD               	movwf	postdec2,c
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13006  0030DE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13007  0030E2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13008  0030E6  0E04               	movlw	4
 13009  0030E8  6EDF               	movwf	indf2,c
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13013  0030EA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13014  0030EE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13015  0030F2  0E00               	movlw	0
 13016  0030F4  8EDB               	bsf	plusw2,7,c
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;usb_device.c: 1944: }
 13020                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 13021                           
 13022                           ; BSR set to: 0
 13023  0030F6  0101               	movlb	1	; () banked
 13024  0030F8  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13025                           
 13026                           ; BSR set to: 1
 13027                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 13028  0030FA  0100               	movlb	0	; () banked
 13029  0030FC  51C7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13030  0030FE  A4D8               	btfss	status,2,c
 13031  003100  0012               	return	
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;usb_device.c: 1960: {
 13035                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 13036  003102  EC53  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13037  003106  0012               	return	
 13038  003108                     __end_of_USBCtrlTrfRxService:
 13039                           	opt stack 0
 13040                           tosu	equ	0xFFF
 13041                           tosh	equ	0xFFE
 13042                           tosl	equ	0xFFD
 13043                           pclath	equ	0xFFA
 13044                           tblptru	equ	0xFF8
 13045                           tblptrh	equ	0xFF7
 13046                           tblptrl	equ	0xFF6
 13047                           tablat	equ	0xFF5
 13048                           prodh	equ	0xFF4
 13049                           prodl	equ	0xFF3
 13050                           intcon	equ	0xFF2
 13051                           intcon2	equ	0xFF1
 13052                           intcon3	equ	0xFF0
 13053                           indf0	equ	0xFEF
 13054                           postinc0	equ	0xFEE
 13055                           plusw0	equ	0xFEB
 13056                           fsr0h	equ	0xFEA
 13057                           fsr0l	equ	0xFE9
 13058                           wreg	equ	0xFE8
 13059                           indf1	equ	0xFE7
 13060                           postinc1	equ	0xFE6
 13061                           postdec1	equ	0xFE5
 13062                           fsr1h	equ	0xFE2
 13063                           fsr1l	equ	0xFE1
 13064                           indf2	equ	0xFDF
 13065                           postinc2	equ	0xFDE
 13066                           postdec2	equ	0xFDD
 13067                           plusw2	equ	0xFDB
 13068                           fsr2h	equ	0xFDA
 13069                           fsr2l	equ	0xFD9
 13070                           status	equ	0xFD8
 13071                           
 13072 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 13073 ;; Defined at:
 13074 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;		None
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;		None
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  1    wreg      void 
 13081 ;; Registers used:
 13082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13092 ;;Total ram usage:        0 bytes
 13093 ;; Hardware stack levels used:    1
 13094 ;; Hardware stack levels required when called:   11
 13095 ;; This function calls:
 13096 ;;		Nothing
 13097 ;; This function is called by:
 13098 ;;		_USBDeviceTasks
 13099 ;;		_USBCtrlEPServiceComplete
 13100 ;;		_USBCtrlTrfRxService
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104                           	psect	text51
 13105  003CA6                     __ptext51:
 13106                           	opt stack 0
 13107  003CA6                     _USBCtrlEPAllowStatusStage:
 13108                           	opt stack 12
 13109                           
 13110                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 13111                           
 13112                           ;incstack = 0
 13113  003CA6  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 13114  003CA8  A4D8               	btfss	status,2,c
 13115  003CAA  0012               	return	
 13116                           
 13117                           ;usb_device.c: 1442: {
 13118                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 13119  003CAC  0E01               	movlw	1
 13120  003CAE  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13121                           
 13122                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 13123  003CB0  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 13124  003CB2  A4D8               	btfss	status,2,c
 13125  003CB4  0012               	return	
 13126                           
 13127                           ;usb_device.c: 1445: {
 13128                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 13129  003CB6  0E01               	movlw	1
 13130  003CB8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13131                           
 13132                           ;usb_device.c: 1450: if(controlTransferState == 2)
 13133  003CBA  0E02               	movlw	2
 13134  003CBC  0100               	movlb	0	; () banked
 13135  003CBE  19CA               	xorwf	_controlTransferState& (0+255),w,b
 13136  003CC0  A4D8               	btfss	status,2,c
 13137  003CC2  D015               	goto	l1667
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;usb_device.c: 1451: {
 13141                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 13142  003CC4  EE20 F001          	lfsr	2,1
 13143  003CC8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13144  003CCA  26D9               	addwf	fsr2l,f,c
 13145  003CCC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13146  003CCE  22DA               	addwfc	fsr2h,f,c
 13147  003CD0  0E00               	movlw	0
 13148  003CD2  6EDF               	movwf	indf2,c
 13149                           
 13150                           ; BSR set to: 0
 13151                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13152  003CD4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13153  003CD8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13154  003CDC  0E48               	movlw	72
 13155  003CDE  6EDF               	movwf	indf2,c
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13159  003CE0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13160  003CE4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13161  003CE8  0E00               	movlw	0
 13162  003CEA  8EDB               	bsf	plusw2,7,c
 13163                           
 13164                           ;usb_device.c: 1455: }
 13165  003CEC  0012               	return	
 13166  003CEE                     l1667:
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 13170                           
 13171                           ; BSR set to: 0
 13172  003CEE  05CA               	decf	_controlTransferState& (0+255),w,b
 13173  003CF0  A4D8               	btfss	status,2,c
 13174  003CF2  0012               	return	
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;usb_device.c: 1457: {
 13178                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 13179  003CF4  0E00               	movlw	0
 13180  003CF6  0101               	movlb	1	; () banked
 13181  003CF8  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13182                           
 13183                           ; BSR set to: 1
 13184                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 13185  003CFA  0100               	movlb	0	; () banked
 13186  003CFC  EE20 F001          	lfsr	2,1
 13187  003D00  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13188  003D02  26D9               	addwf	fsr2l,f,c
 13189  003D04  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13190  003D06  22DA               	addwfc	fsr2h,f,c
 13191  003D08  0E08               	movlw	8
 13192  003D0A  6EDF               	movwf	indf2,c
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 13196  003D0C  EE20 F002          	lfsr	2,2
 13197  003D10  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13198  003D12  26D9               	addwf	fsr2l,f,c
 13199  003D14  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13200  003D16  22DA               	addwfc	fsr2h,f,c
 13201  003D18  0E30               	movlw	48
 13202  003D1A  6EDE               	movwf	postinc2,c
 13203  003D1C  0E04               	movlw	4
 13204  003D1E  6EDD               	movwf	postdec2,c
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13208  003D20  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13209  003D24  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13210  003D28  0E04               	movlw	4
 13211  003D2A  6EDF               	movwf	indf2,c
 13212                           
 13213                           ; BSR set to: 0
 13214                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13215  003D2C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13216  003D30  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13217  003D34  0E00               	movlw	0
 13218  003D36  8EDB               	bsf	plusw2,7,c
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 13222  003D38  0E01               	movlw	1
 13223  003D3A  0101               	movlb	1	; () banked
 13224  003D3C  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13225                           
 13226                           ; BSR set to: 1
 13227                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 13228  003D3E  0100               	movlb	0	; () banked
 13229  003D40  EE20 F001          	lfsr	2,1
 13230  003D44  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13231  003D46  26D9               	addwf	fsr2l,f,c
 13232  003D48  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13233  003D4A  22DA               	addwfc	fsr2h,f,c
 13234  003D4C  0E08               	movlw	8
 13235  003D4E  6EDF               	movwf	indf2,c
 13236                           
 13237                           ; BSR set to: 0
 13238                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13239  003D50  EE20 F002          	lfsr	2,2
 13240  003D54  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13241  003D56  26D9               	addwf	fsr2l,f,c
 13242  003D58  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13243  003D5A  22DA               	addwfc	fsr2h,f,c
 13244  003D5C  0E30               	movlw	48
 13245  003D5E  6EDE               	movwf	postinc2,c
 13246  003D60  0E04               	movlw	4
 13247  003D62  6EDD               	movwf	postdec2,c
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13251  003D64  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13252  003D68  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13253  003D6C  0E80               	movlw	128
 13254  003D6E  6EDF               	movwf	indf2,c
 13255                           
 13256                           ; BSR set to: 0
 13257                           
 13258                           ; BSR set to: 0
 13259                           
 13260                           ; BSR set to: 0
 13261  003D70  0012               	return	
 13262  003D72                     __end_of_USBCtrlEPAllowStatusStage:
 13263                           	opt stack 0
 13264                           tosu	equ	0xFFF
 13265                           tosh	equ	0xFFE
 13266                           tosl	equ	0xFFD
 13267                           pclath	equ	0xFFA
 13268                           tblptru	equ	0xFF8
 13269                           tblptrh	equ	0xFF7
 13270                           tblptrl	equ	0xFF6
 13271                           tablat	equ	0xFF5
 13272                           prodh	equ	0xFF4
 13273                           prodl	equ	0xFF3
 13274                           intcon	equ	0xFF2
 13275                           intcon2	equ	0xFF1
 13276                           intcon3	equ	0xFF0
 13277                           indf0	equ	0xFEF
 13278                           postinc0	equ	0xFEE
 13279                           plusw0	equ	0xFEB
 13280                           fsr0h	equ	0xFEA
 13281                           fsr0l	equ	0xFE9
 13282                           wreg	equ	0xFE8
 13283                           indf1	equ	0xFE7
 13284                           postinc1	equ	0xFE6
 13285                           postdec1	equ	0xFE5
 13286                           fsr1h	equ	0xFE2
 13287                           fsr1l	equ	0xFE1
 13288                           indf2	equ	0xFDF
 13289                           postinc2	equ	0xFDE
 13290                           postdec2	equ	0xFDD
 13291                           plusw2	equ	0xFDB
 13292                           fsr2h	equ	0xFDA
 13293                           fsr2l	equ	0xFD9
 13294                           status	equ	0xFD8
 13295                           
 13296 ;; *************** function _USBCtrlTrfInHandler *****************
 13297 ;; Defined at:
 13298 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;		None
 13301 ;; Auto vars:     Size  Location     Type
 13302 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 13303 ;; Return value:  Size  Location     Type
 13304 ;;                  1    wreg      void 
 13305 ;; Registers used:
 13306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13307 ;; Tracked objects:
 13308 ;;		On entry : 0/0
 13309 ;;		On exit  : 0/0
 13310 ;;		Unchanged: 0/0
 13311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13316 ;;Total ram usage:        1 bytes
 13317 ;; Hardware stack levels used:    1
 13318 ;; Hardware stack levels required when called:   12
 13319 ;; This function calls:
 13320 ;;		_USBCtrlTrfTxService
 13321 ;; This function is called by:
 13322 ;;		_USBCtrlEPService
 13323 ;; This function uses a non-reentrant model
 13324 ;;
 13325                           
 13326                           	psect	text52
 13327  004158                     __ptext52:
 13328                           	opt stack 0
 13329  004158                     _USBCtrlTrfInHandler:
 13330                           	opt stack 13
 13331                           
 13332                           ;usb_device.c: 2611: uint8_t lastDTS;
 13333                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13334                           
 13335                           ;incstack = 0
 13336  004158  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13337  00415C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13338  004160  0100               	movlb	0	; () banked
 13339  004162  0E00               	movlw	0
 13340  004164  BCDF               	btfsc	indf2,6,c
 13341  004166  0E01               	movlw	1
 13342  004168  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 13346  00416A  0E04               	movlw	4
 13347  00416C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 13351  00416E  0E08               	movlw	8
 13352  004170  19CC               	xorwf	_USBDeviceState& (0+255),w,b
 13353  004172  A4D8               	btfss	status,2,c
 13354  004174  D00D               	goto	l1794
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;usb_device.c: 2622: {
 13358                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 13359  004176  0104               	movlb	4	; () banked
 13360  004178  5132               	movf	50,w,b	;volatile
 13361  00417A  0B7F               	andlw	127
 13362  00417C  010F               	movlb	15	; () banked
 13363  00417E  6F38               	movwf	56,b	;volatile
 13364                           
 13365                           ; BSR set to: 15
 13366                           ;usb_device.c: 2624: if(UADDR != 0u)
 13367  004180  5138               	movf	56,w,b	;volatile
 13368  004182  B4D8               	btfsc	status,2,c
 13369  004184  D002               	goto	l1793
 13370                           
 13371                           ; BSR set to: 15
 13372                           ;usb_device.c: 2625: {
 13373                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 13374  004186  0E10               	movlw	16
 13375  004188  D001               	goto	L11
 13376  00418A                     l1793:
 13377                           
 13378                           ;usb_device.c: 2628: else
 13379                           ;usb_device.c: 2629: {
 13380                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 13381                           
 13382                           ; BSR set to: 0
 13383  00418A  0E04               	movlw	4
 13384  00418C                     L11:
 13385  00418C  0100               	movlb	0	; () banked
 13386  00418E  6FCC               	movwf	_USBDeviceState& (0+255),b
 13387  004190                     l1794:
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;usb_device.c: 2631: }
 13391                           ;usb_device.c: 2632: }
 13392                           ;usb_device.c: 2635: if(controlTransferState == 1)
 13393                           
 13394                           ; BSR set to: 0
 13395                           
 13396                           ; BSR set to: 0
 13397  004190  05CA               	decf	_controlTransferState& (0+255),w,b
 13398  004192  A4D8               	btfss	status,2,c
 13399  004194  D03B               	goto	l1795
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;usb_device.c: 2636: {
 13403                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 13404  004196  EE20 F002          	lfsr	2,2
 13405  00419A  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13406  00419C  26D9               	addwf	fsr2l,f,c
 13407  00419E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13408  0041A0  22DA               	addwfc	fsr2h,f,c
 13409  0041A2  0E38               	movlw	56
 13410  0041A4  6EDE               	movwf	postinc2,c
 13411  0041A6  0E04               	movlw	4
 13412  0041A8  6EDD               	movwf	postdec2,c
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13416  0041AA  EC45  F01C         	call	_USBCtrlTrfTxService	;wreg free
 13417                           
 13418                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13419  0041AE  0E02               	movlw	2
 13420  0041B0  0100               	movlb	0	; () banked
 13421  0041B2  19CB               	xorwf	_shortPacketStatus& (0+255),w,b
 13422  0041B4  A4D8               	btfss	status,2,c
 13423  0041B6  D00D               	goto	l1796
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;usb_device.c: 2645: {
 13427                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13428  0041B8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13429  0041BC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13430  0041C0  0E04               	movlw	4
 13431  0041C2  6EDF               	movwf	indf2,c
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13435  0041C4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13436  0041C8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13437  0041CC  0E00               	movlw	0
 13438  0041CE  8EDB               	bsf	plusw2,7,c
 13439                           
 13440                           ;usb_device.c: 2650: }
 13441  0041D0  0012               	return	
 13442  0041D2                     l1796:
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;usb_device.c: 2651: else
 13446                           ;usb_device.c: 2652: {
 13447                           ;usb_device.c: 2653: if(lastDTS == 0)
 13448                           
 13449                           ; BSR set to: 0
 13450  0041D2  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13451  0041D4  A4D8               	btfss	status,2,c
 13452  0041D6  D00D               	goto	l1798
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;usb_device.c: 2654: {
 13456                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13457  0041D8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13458  0041DC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13459  0041E0  0E48               	movlw	72
 13460  0041E2  6EDF               	movwf	indf2,c
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13464  0041E4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13465  0041E8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13466  0041EC  0E00               	movlw	0
 13467  0041EE  8EDB               	bsf	plusw2,7,c
 13468                           
 13469                           ;usb_device.c: 2657: }
 13470  0041F0  0012               	return	
 13471  0041F2                     l1798:
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;usb_device.c: 2658: else
 13475                           ;usb_device.c: 2659: {
 13476                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13477                           
 13478                           ; BSR set to: 0
 13479  0041F2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13480  0041F6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13481  0041FA  0E08               	movlw	8
 13482  0041FC  6EDF               	movwf	indf2,c
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13486  0041FE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13487  004202  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13488  004206  0E00               	movlw	0
 13489  004208  8EDB               	bsf	plusw2,7,c
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;usb_device.c: 2662: }
 13493                           ;usb_device.c: 2663: }
 13494                           ;usb_device.c: 2664: }
 13495                           
 13496                           ; BSR set to: 0
 13497  00420A  0012               	return	
 13498  00420C                     l1795:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;usb_device.c: 2665: else
 13502                           ;usb_device.c: 2666: {
 13503                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13504  00420C  0101               	movlb	1	; () banked
 13505  00420E  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13506                           
 13507                           ; BSR set to: 1
 13508                           ;usb_device.c: 2675: }
 13509                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13510                           
 13511                           ; BSR set to: 1
 13512  004210  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13513                           
 13514                           ; BSR set to: 1
 13515                           ;usb_device.c: 2677: }
 13516                           ;usb_device.c: 2679: controlTransferState = 0;
 13517                           
 13518                           ; BSR set to: 1
 13519  004212  0E00               	movlw	0
 13520  004214  0100               	movlb	0	; () banked
 13521  004216  6FCA               	movwf	_controlTransferState& (0+255),b
 13522  004218  0012               	return	
 13523  00421A                     __end_of_USBCtrlTrfInHandler:
 13524                           	opt stack 0
 13525                           tosu	equ	0xFFF
 13526                           tosh	equ	0xFFE
 13527                           tosl	equ	0xFFD
 13528                           pclath	equ	0xFFA
 13529                           tblptru	equ	0xFF8
 13530                           tblptrh	equ	0xFF7
 13531                           tblptrl	equ	0xFF6
 13532                           tablat	equ	0xFF5
 13533                           prodh	equ	0xFF4
 13534                           prodl	equ	0xFF3
 13535                           intcon	equ	0xFF2
 13536                           intcon2	equ	0xFF1
 13537                           intcon3	equ	0xFF0
 13538                           indf0	equ	0xFEF
 13539                           postinc0	equ	0xFEE
 13540                           plusw0	equ	0xFEB
 13541                           fsr0h	equ	0xFEA
 13542                           fsr0l	equ	0xFE9
 13543                           wreg	equ	0xFE8
 13544                           indf1	equ	0xFE7
 13545                           postinc1	equ	0xFE6
 13546                           postdec1	equ	0xFE5
 13547                           fsr1h	equ	0xFE2
 13548                           fsr1l	equ	0xFE1
 13549                           indf2	equ	0xFDF
 13550                           postinc2	equ	0xFDE
 13551                           postdec2	equ	0xFDD
 13552                           plusw2	equ	0xFDB
 13553                           fsr2h	equ	0xFDA
 13554                           fsr2l	equ	0xFD9
 13555                           status	equ	0xFD8
 13556                           
 13557 ;; *************** function _USBCtrlTrfTxService *****************
 13558 ;; Defined at:
 13559 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;		None
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13564 ;; Return value:  Size  Location     Type
 13565 ;;                  1    wreg      void 
 13566 ;; Registers used:
 13567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13568 ;; Tracked objects:
 13569 ;;		On entry : 0/0
 13570 ;;		On exit  : 0/0
 13571 ;;		Unchanged: 0/0
 13572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13577 ;;Total ram usage:        1 bytes
 13578 ;; Hardware stack levels used:    1
 13579 ;; Hardware stack levels required when called:   11
 13580 ;; This function calls:
 13581 ;;		Nothing
 13582 ;; This function is called by:
 13583 ;;		_USBCtrlEPAllowDataStage
 13584 ;;		_USBCtrlTrfInHandler
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           	psect	text53
 13589  00388A                     __ptext53:
 13590                           	opt stack 0
 13591  00388A                     _USBCtrlTrfTxService:
 13592                           	opt stack 11
 13593                           
 13594                           ;usb_device.c: 1791: uint8_t byteToSend;
 13595                           ;usb_device.c: 1795: byteToSend = 8;
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;incstack = 0
 13599  00388A  0E08               	movlw	8
 13600  00388C  0100               	movlb	0	; () banked
 13601  00388E  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13605  003890  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13606  003892  E110               	bnz	l12668
 13607  003894  0E08               	movlw	8
 13608  003896  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13609  003898  B0D8               	btfsc	status,0,c
 13610  00389A  D00C               	goto	l1700
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;usb_device.c: 1797: {
 13614                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13615  00389C  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13619  0038A0  51CB               	movf	_shortPacketStatus& (0+255),w,b
 13620  0038A2  A4D8               	btfss	status,2,c
 13621  0038A4  D002               	goto	l1698
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;usb_device.c: 1806: {
 13625                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13626  0038A6  0E01               	movlw	1
 13627  0038A8  D004               	goto	L12
 13628  0038AA                     l1698:
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13632                           
 13633                           ; BSR set to: 0
 13634  0038AA  05CB               	decf	_shortPacketStatus& (0+255),w,b
 13635  0038AC  A4D8               	btfss	status,2,c
 13636  0038AE  D002               	goto	l1700
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;usb_device.c: 1810: {
 13640                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13641  0038B0  0E02               	movlw	2
 13642  0038B2                     L12:
 13643  0038B2  6FCB               	movwf	_shortPacketStatus& (0+255),b
 13644  0038B4                     l1700:
 13645  0038B4                     l12668:
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;usb_device.c: 1812: }
 13649                           ;usb_device.c: 1813: }
 13650                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13651  0038B4  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13652  0038B6  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13653  0038B8  0E00               	movlw	0
 13654  0038BA  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13658  0038BC  EE20 F001          	lfsr	2,1
 13659  0038C0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13660  0038C2  26D9               	addwf	fsr2l,f,c
 13661  0038C4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13662  0038C6  22DA               	addwfc	fsr2h,f,c
 13663  0038C8  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13667  0038CC  0E38               	movlw	56
 13668  0038CE  0102               	movlb	2	; () banked
 13669  0038D0  6FD4               	movwf	_pDst& (0+255),b
 13670  0038D2  0E04               	movlw	4
 13671  0038D4  6FD5               	movwf	(_pDst+1)& (0+255),b
 13672                           
 13673                           ; BSR set to: 2
 13674                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13675  0038D6  0100               	movlb	0	; () banked
 13676  0038D8  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13677  0038DA  D01E               	goto	l1702
 13678  0038DC  D03E               	goto	l1706
 13679  0038DE                     
 13680                           ; BSR set to: 0
 13681                           ;usb_device.c: 1830: {
 13682                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13683                           
 13684                           ; BSR set to: 0
 13685  0038DE  C0B0  FFF6         	movff	_inPipes,tblptrl
 13686  0038E2  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13687  0038E6  6AF8               	clrf	tblptru,c
 13688  0038E8  C2D4  FFD9         	movff	_pDst,fsr2l
 13689  0038EC  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13690  0038F0  0E0E               	movlw	(high __ramtop+-1)
 13691  0038F2  64F7               	cpfsgt	tblptrh,c
 13692  0038F4  D003               	bra	u11317
 13693  0038F6  0008               	tblrd		*
 13694  0038F8  50F5               	movf	tablat,w,c
 13695  0038FA  D005               	bra	u11310
 13696  0038FC                     u11317:
 13697  0038FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13698  003900  CFF7 FFEA          	movff	tblptrh,fsr0h
 13699  003904  50EF               	movf	indf0,w,c
 13700  003906                     u11310:
 13701  003906  6EDF               	movwf	indf2,c
 13702  003908  0100               	movlb	0	; () banked
 13703  00390A  4BB0               	infsnz	_inPipes& (0+255),f,b
 13704  00390C  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13705                           
 13706                           ; BSR set to: 0
 13707  00390E  0102               	movlb	2	; () banked
 13708  003910  4BD4               	infsnz	_pDst& (0+255),f,b
 13709  003912  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13710                           
 13711                           ; BSR set to: 2
 13712                           ;usb_device.c: 1832: byteToSend--;
 13713  003914  0100               	movlb	0	; () banked
 13714  003916  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13715  003918                     l1702:
 13716                           
 13717                           ; BSR set to: 0
 13718                           
 13719                           ; BSR set to: 0
 13720  003918  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13721  00391A  B4D8               	btfsc	status,2,c
 13722  00391C  0012               	return	
 13723  00391E  D7DF               	goto	l1703
 13724  003920                     
 13725                           ; BSR set to: 0
 13726                           ;usb_device.c: 1838: {
 13727                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13728                           
 13729                           ; BSR set to: 0
 13730  003920  C0B0  FFF6         	movff	_inPipes,tblptrl
 13731  003924  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13732  003928  6AF8               	clrf	tblptru,c
 13733  00392A  C2D4  FFD9         	movff	_pDst,fsr2l
 13734  00392E  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13735  003932  0E0E               	movlw	(high __ramtop+-1)
 13736  003934  64F7               	cpfsgt	tblptrh,c
 13737  003936  D003               	bra	u11337
 13738  003938  0008               	tblrd		*
 13739  00393A  50F5               	movf	tablat,w,c
 13740  00393C  D005               	bra	u11330
 13741  00393E                     u11337:
 13742  00393E  CFF6 FFE9          	movff	tblptrl,fsr0l
 13743  003942  CFF7 FFEA          	movff	tblptrh,fsr0h
 13744  003946  50EF               	movf	indf0,w,c
 13745  003948                     u11330:
 13746  003948  6EDF               	movwf	indf2,c
 13747  00394A  0100               	movlb	0	; () banked
 13748  00394C  4BB0               	infsnz	_inPipes& (0+255),f,b
 13749  00394E  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13750                           
 13751                           ; BSR set to: 0
 13752  003950  0102               	movlb	2	; () banked
 13753  003952  4BD4               	infsnz	_pDst& (0+255),f,b
 13754  003954  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13755                           
 13756                           ; BSR set to: 2
 13757                           ;usb_device.c: 1840: byteToSend--;
 13758  003956  0100               	movlb	0	; () banked
 13759  003958  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13760  00395A                     l1706:
 13761                           
 13762                           ; BSR set to: 0
 13763                           
 13764                           ; BSR set to: 0
 13765  00395A  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13766  00395C  B4D8               	btfsc	status,2,c
 13767  00395E  0012               	return	
 13768  003960  D7DF               	goto	l1707
 13769  003962                     __end_of_USBCtrlTrfTxService:
 13770                           	opt stack 0
 13771                           tosu	equ	0xFFF
 13772                           tosh	equ	0xFFE
 13773                           tosl	equ	0xFFD
 13774                           pclath	equ	0xFFA
 13775                           tblptru	equ	0xFF8
 13776                           tblptrh	equ	0xFF7
 13777                           tblptrl	equ	0xFF6
 13778                           tablat	equ	0xFF5
 13779                           prodh	equ	0xFF4
 13780                           prodl	equ	0xFF3
 13781                           intcon	equ	0xFF2
 13782                           intcon2	equ	0xFF1
 13783                           intcon3	equ	0xFF0
 13784                           indf0	equ	0xFEF
 13785                           postinc0	equ	0xFEE
 13786                           plusw0	equ	0xFEB
 13787                           fsr0h	equ	0xFEA
 13788                           fsr0l	equ	0xFE9
 13789                           wreg	equ	0xFE8
 13790                           indf1	equ	0xFE7
 13791                           postinc1	equ	0xFE6
 13792                           postdec1	equ	0xFE5
 13793                           fsr1h	equ	0xFE2
 13794                           fsr1l	equ	0xFE1
 13795                           indf2	equ	0xFDF
 13796                           postinc2	equ	0xFDE
 13797                           postdec2	equ	0xFDD
 13798                           plusw2	equ	0xFDB
 13799                           fsr2h	equ	0xFDA
 13800                           fsr2l	equ	0xFD9
 13801                           status	equ	0xFD8
 13802                           
 13803 ;; *************** function _CDCTxService *****************
 13804 ;; Defined at:
 13805 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13806 ;; Parameters:    Size  Location     Type
 13807 ;;		None
 13808 ;; Auto vars:     Size  Location     Type
 13809 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13810 ;;  i               1   36[BANK0 ] unsigned char 
 13811 ;; Return value:  Size  Location     Type
 13812 ;;                  1    wreg      void 
 13813 ;; Registers used:
 13814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13815 ;; Tracked objects:
 13816 ;;		On entry : 0/0
 13817 ;;		On exit  : 0/0
 13818 ;;		Unchanged: 0/0
 13819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13824 ;;Total ram usage:        2 bytes
 13825 ;; Hardware stack levels used:    1
 13826 ;; Hardware stack levels required when called:   12
 13827 ;; This function calls:
 13828 ;;		_USBTransferOnePacket
 13829 ;; This function is called by:
 13830 ;;		_UsbDevice_MainTask
 13831 ;; This function uses a non-reentrant model
 13832 ;;
 13833                           
 13834                           	psect	text54
 13835  002B06                     __ptext54:
 13836                           	opt stack 0
 13837  002B06                     _CDCTxService:
 13838                           	opt stack 15
 13839                           
 13840                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13841                           ;usb_device_cdc.c: 842: uint8_t i;
 13842                           ;usb_device_cdc.c: 844: ;
 13843                           ;usb_device_cdc.c: 846: {};
 13844                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;incstack = 0
 13848  002B06  0101               	movlb	1	; () banked
 13849  002B08  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13850  002B0A  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13851  002B0C  B4D8               	btfsc	status,2,c
 13852  002B0E  D006               	goto	l1952
 13853                           
 13854                           ; BSR set to: 1
 13855  002B10  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13856  002B14  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13857  002B18  BEDF               	btfsc	indf2,7,c
 13858  002B1A  0012               	return	
 13859  002B1C                     l1952:
 13860                           
 13861                           ; BSR set to: 1
 13862                           ;usb_device_cdc.c: 852: }
 13863                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13864                           
 13865                           ; BSR set to: 1
 13866  002B1C  0E03               	movlw	3
 13867  002B1E  0100               	movlb	0	; () banked
 13868  002B20  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13869  002B22  A4D8               	btfss	status,2,c
 13870  002B24  D002               	goto	l1954
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13874  002B26  0E00               	movlw	0
 13875  002B28  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13876  002B2A                     l1954:
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13880  002B2A  51C5               	movf	_cdc_trf_state& (0+255),w,b
 13881  002B2C  B4D8               	btfsc	status,2,c
 13882  002B2E  0012               	return	
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;usb_device_cdc.c: 869: }
 13886                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13887                           
 13888                           ; BSR set to: 0
 13889                           
 13890                           ; BSR set to: 0
 13891                           ;usb_device_cdc.c: 866: {
 13892                           ;usb_device_cdc.c: 867: ;
 13893                           ;usb_device_cdc.c: 868: return;
 13894  002B30  0E02               	movlw	2
 13895  002B32  19C5               	xorwf	_cdc_trf_state& (0+255),w,b
 13896  002B34  A4D8               	btfss	status,2,c
 13897  002B36  D013               	goto	l1956
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;usb_device_cdc.c: 875: {
 13901                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13902  002B38  0E01               	movlw	1
 13903  002B3A  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13904  002B3C  0E00               	movlw	0
 13905  002B3E  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13906  002B40  0E00               	movlw	0
 13907  002B42  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13908  002B44  0E00               	movlw	0
 13909  002B46  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13910  002B48  0E02               	movlw	2
 13911  002B4A  EC0D  F021         	call	_USBTransferOnePacket
 13912  002B4E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13913  002B52  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13914                           
 13915                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13916  002B56  0E03               	movlw	3
 13917  002B58  0100               	movlb	0	; () banked
 13918  002B5A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 13919                           
 13920                           ;usb_device_cdc.c: 879: }
 13921  002B5C  0012               	return	
 13922  002B5E                     l1956:
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13926                           
 13927                           ; BSR set to: 0
 13928  002B5E  05C5               	decf	_cdc_trf_state& (0+255),w,b
 13929  002B60  A4D8               	btfss	status,2,c
 13930  002B62  0012               	return	
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;usb_device_cdc.c: 881: {
 13934                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13935  002B64  0E40               	movlw	64
 13936  002B66  65C4               	cpfsgt	_cdc_tx_len& (0+255),b
 13937  002B68  D003               	goto	l1959
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13941  002B6A  0E40               	movlw	64
 13942  002B6C  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13943  002B6E  D002               	goto	l1960
 13944  002B70                     l1959:
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;usb_device_cdc.c: 887: else
 13948                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13949  002B70  C0C4  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13950  002B74                     l1960:
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13954                           
 13955                           ; BSR set to: 0
 13956  002B74  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13957  002B76  0800               	sublw	0
 13958  002B78  25C4               	addwf	_cdc_tx_len& (0+255),w,b
 13959  002B7A  6FC4               	movwf	_cdc_tx_len& (0+255),b
 13960                           
 13961                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13962  002B7C  0EB6               	movlw	low _cdc_data_tx
 13963  002B7E  0102               	movlb	2	; () banked
 13964  002B80  6FC8               	movwf	_pCDCDst& (0+255),b
 13965  002B82  0E07               	movlw	high _cdc_data_tx
 13966  002B84  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13970  002B86  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13971                           
 13972                           ; BSR set to: 2
 13973                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13974  002B8A  0101               	movlb	1	; () banked
 13975  002B8C  51DF               	movf	_cdc_mem_type& (0+255),w,b
 13976  002B8E  B4D8               	btfsc	status,2,c
 13977  002B90  D01D               	goto	l1962
 13978  002B92  D03D               	goto	l1966
 13979  002B94                     
 13980                           ;usb_device_cdc.c: 901: {
 13981                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13982                           
 13983                           ; BSR set to: 1
 13984  002B94  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13985  002B98  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13986  002B9C  6AF8               	clrf	tblptru,c
 13987  002B9E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13988  002BA2  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13989  002BA6  0E0E               	movlw	(high __ramtop+-1)
 13990  002BA8  64F7               	cpfsgt	tblptrh,c
 13991  002BAA  D003               	bra	u15327
 13992  002BAC  0008               	tblrd		*
 13993  002BAE  50F5               	movf	tablat,w,c
 13994  002BB0  D005               	bra	u15320
 13995  002BB2                     u15327:
 13996  002BB2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13997  002BB6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13998  002BBA  50EF               	movf	indf0,w,c
 13999  002BBC                     u15320:
 14000  002BBC  6EDF               	movwf	indf2,c
 14001                           
 14002                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 14003  002BBE  0102               	movlb	2	; () banked
 14004  002BC0  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 14005  002BC2  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 14006                           
 14007                           ; BSR set to: 2
 14008                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 14009  002BC4  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 14010  002BC6  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 14011                           
 14012                           ; BSR set to: 2
 14013                           ;usb_device_cdc.c: 905: i--;
 14014  002BC8  0100               	movlb	0	; () banked
 14015  002BCA  0784               	decf	CDCTxService@i& (0+255),f,b
 14016  002BCC                     l1962:
 14017                           
 14018                           ; BSR set to: 0
 14019  002BCC  0100               	movlb	0	; () banked
 14020  002BCE  5184               	movf	CDCTxService@i& (0+255),w,b
 14021  002BD0  B4D8               	btfsc	status,2,c
 14022  002BD2  D021               	goto	u15350
 14023  002BD4  D7DF               	goto	l1963
 14024  002BD6                     
 14025                           ; BSR set to: 0
 14026                           ;usb_device_cdc.c: 911: {
 14027                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 14028                           
 14029                           ; BSR set to: 0
 14030  002BD6  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 14031  002BDA  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 14032  002BDE  6AF8               	clrf	tblptru,c
 14033  002BE0  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 14034  002BE4  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 14035  002BE8  0E0E               	movlw	(high __ramtop+-1)
 14036  002BEA  64F7               	cpfsgt	tblptrh,c
 14037  002BEC  D003               	bra	u15347
 14038  002BEE  0008               	tblrd		*
 14039  002BF0  50F5               	movf	tablat,w,c
 14040  002BF2  D005               	bra	u15340
 14041  002BF4                     u15347:
 14042  002BF4  CFF6 FFE9          	movff	tblptrl,fsr0l
 14043  002BF8  CFF7 FFEA          	movff	tblptrh,fsr0h
 14044  002BFC  50EF               	movf	indf0,w,c
 14045  002BFE                     u15340:
 14046  002BFE  6EDF               	movwf	indf2,c
 14047                           
 14048                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 14049  002C00  0102               	movlb	2	; () banked
 14050  002C02  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 14051  002C04  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 14052                           
 14053                           ; BSR set to: 2
 14054                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 14055  002C06  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 14056  002C08  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 14057                           
 14058                           ; BSR set to: 2
 14059                           ;usb_device_cdc.c: 915: i--;
 14060  002C0A  0100               	movlb	0	; () banked
 14061  002C0C  0784               	decf	CDCTxService@i& (0+255),f,b
 14062  002C0E                     l1966:
 14063                           
 14064                           ; BSR set to: 0
 14065  002C0E  0100               	movlb	0	; () banked
 14066  002C10  5184               	movf	CDCTxService@i& (0+255),w,b
 14067  002C12  A4D8               	btfss	status,2,c
 14068  002C14  D7E0               	goto	l1967
 14069  002C16                     u15350:
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;usb_device_cdc.c: 916: }
 14073                           ;usb_device_cdc.c: 917: }
 14074                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 14075                           
 14076                           ; BSR set to: 0
 14077                           
 14078                           ; BSR set to: 0
 14079  002C16  51C4               	movf	_cdc_tx_len& (0+255),w,b
 14080  002C18  A4D8               	btfss	status,2,c
 14081  002C1A  D008               	goto	l1971
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;usb_device_cdc.c: 924: {
 14085                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 14086  002C1C  0E40               	movlw	64
 14087  002C1E  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 14088  002C20  A4D8               	btfss	status,2,c
 14089  002C22  D002               	goto	l1970
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 14093  002C24  0E02               	movlw	2
 14094  002C26  D001               	goto	L13
 14095  002C28                     l1970:
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;usb_device_cdc.c: 927: else
 14099                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 14100                           
 14101                           ; BSR set to: 0
 14102  002C28  0E03               	movlw	3
 14103  002C2A                     L13:
 14104  002C2A  6FC5               	movwf	_cdc_trf_state& (0+255),b
 14105  002C2C                     l1971:
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;usb_device_cdc.c: 929: }
 14109                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 14110                           
 14111                           ; BSR set to: 0
 14112                           
 14113                           ; BSR set to: 0
 14114  002C2C  0E01               	movlw	1
 14115  002C2E  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 14116  002C30  0EB6               	movlw	low _cdc_data_tx
 14117  002C32  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 14118  002C34  0E07               	movlw	high _cdc_data_tx
 14119  002C36  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 14120  002C38  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 14121  002C3C  0E02               	movlw	2
 14122  002C3E  EC0D  F021         	call	_USBTransferOnePacket
 14123  002C42  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 14124  002C46  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 14125  002C4A  0012               	return	
 14126  002C4C                     __end_of_CDCTxService:
 14127                           	opt stack 0
 14128                           tosu	equ	0xFFF
 14129                           tosh	equ	0xFFE
 14130                           tosl	equ	0xFFD
 14131                           pclath	equ	0xFFA
 14132                           tblptru	equ	0xFF8
 14133                           tblptrh	equ	0xFF7
 14134                           tblptrl	equ	0xFF6
 14135                           tablat	equ	0xFF5
 14136                           prodh	equ	0xFF4
 14137                           prodl	equ	0xFF3
 14138                           intcon	equ	0xFF2
 14139                           intcon2	equ	0xFF1
 14140                           intcon3	equ	0xFF0
 14141                           indf0	equ	0xFEF
 14142                           postinc0	equ	0xFEE
 14143                           plusw0	equ	0xFEB
 14144                           fsr0h	equ	0xFEA
 14145                           fsr0l	equ	0xFE9
 14146                           wreg	equ	0xFE8
 14147                           indf1	equ	0xFE7
 14148                           postinc1	equ	0xFE6
 14149                           postdec1	equ	0xFE5
 14150                           fsr1h	equ	0xFE2
 14151                           fsr1l	equ	0xFE1
 14152                           indf2	equ	0xFDF
 14153                           postinc2	equ	0xFDE
 14154                           postdec2	equ	0xFDD
 14155                           plusw2	equ	0xFDB
 14156                           fsr2h	equ	0xFDA
 14157                           fsr2l	equ	0xFD9
 14158                           status	equ	0xFD8
 14159                           
 14160 ;; *************** function _Term_MainSm *****************
 14161 ;; Defined at:
 14162 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;		None
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 14167 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 14168 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 14169 ;;  FwkBuildYear    4    0        unsigned char [4]
 14170 ;;  FwkBuildMont    4    0        unsigned char [4]
 14171 ;;  FwkBuildDayS    4    0        unsigned char [4]
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  1    wreg      void 
 14174 ;; Registers used:
 14175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14182 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14184 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14185 ;;Total ram usage:       12 bytes
 14186 ;; Hardware stack levels used:    1
 14187 ;; Hardware stack levels required when called:   16
 14188 ;; This function calls:
 14189 ;;		_OsTmr_GetTimerStatus
 14190 ;;		_OsTmr_StartTimer
 14191 ;;		_Terminal
 14192 ;;		_memset
 14193 ;;		_putUSBUSART
 14194 ;;		_sprintf
 14195 ;;		_strcat
 14196 ;;		_strcpy
 14197 ;;		_strlen
 14198 ;;		_utoa
 14199 ;; This function is called by:
 14200 ;;		_Term_MainTask
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           	psect	text55
 14205  0013A4                     __ptext55:
 14206                           	opt stack 0
 14207  0013A4                     _Term_MainSm:
 14208                           	opt stack 11
 14209                           
 14210                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 14211                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 14212                           ;term.c: 711: static UINT8 Data[50];
 14213                           ;term.c: 712: UINT8 FwkMajorStr[4];
 14214                           ;term.c: 713: UINT8 FwkMinorStr[4];
 14215                           ;term.c: 714: UINT8 FwkBuildStr[4];
 14216                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 14217                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 14218                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 14219                           ;term.c: 719: switch (TermMainSmState)
 14220                           
 14221                           ;incstack = 0
 14222  0013A4  D133               	goto	l2456
 14223  0013A6                     
 14224                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 14225  0013A6  0ECF               	movlw	low Term_MainSm@TermDelay
 14226  0013A8  0100               	movlb	0	; () banked
 14227  0013AA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 14228  0013AC  0E03               	movlw	high Term_MainSm@TermDelay
 14229  0013AE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 14230  0013B0  0ED0               	movlw	208
 14231  0013B2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 14232  0013B4  0E07               	movlw	7
 14233  0013B6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 14234  0013B8  0E00               	movlw	0
 14235  0013BA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 14236  0013BC  0E00               	movlw	0
 14237  0013BE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 14238  0013C0  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 14239                           
 14240                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 14241  0013C4  0E01               	movlw	1
 14242  0013C6  0102               	movlb	2	; () banked
 14243  0013C8  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14244                           
 14245                           ;term.c: 726: break;
 14246  0013CA  0012               	return	
 14247  0013CC                     
 14248                           ; BSR set to: 2
 14249                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 14250                           
 14251                           ; BSR set to: 2
 14252  0013CC  0ECF               	movlw	low Term_MainSm@TermDelay
 14253  0013CE  0100               	movlb	0	; () banked
 14254  0013D0  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 14255  0013D2  0E03               	movlw	high Term_MainSm@TermDelay
 14256  0013D4  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 14257  0013D6  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 14258  0013DA  06E8               	decf	wreg,f,c
 14259  0013DC  A4D8               	btfss	status,2,c
 14260  0013DE  0012               	return	
 14261                           
 14262                           ;term.c: 731: {
 14263                           ;term.c: 733: TermMainSmState = Term_InitState;
 14264  0013E0  0E02               	movlw	2
 14265  0013E2  0102               	movlb	2	; () banked
 14266  0013E4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14267                           
 14268                           ; BSR set to: 2
 14269                           ;term.c: 734: }
 14270                           ;term.c: 735: break;
 14271  0013E6  0012               	return	
 14272  0013E8                     
 14273                           ; BSR set to: 2
 14274                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 14275                           
 14276                           ; BSR set to: 2
 14277  0013E8  0E1F               	movlw	31
 14278  0013EA  0100               	movlb	0	; () banked
 14279  0013EC  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 14280  0013EE  0012               	return	
 14281                           
 14282                           ; BSR set to: 0
 14283  0013F0  B265               	btfsc	3941,1,c	;volatile
 14284  0013F2  0012               	return	
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;term.c: 743: else
 14288                           ;term.c: 744: {
 14289                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 14290                           
 14291                           ; BSR set to: 0
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;term.c: 740: {
 14295                           ;term.c: 742: }
 14296  0013F4  0E03               	movlw	3
 14297  0013F6  0102               	movlb	2	; () banked
 14298  0013F8  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14299                           
 14300                           ; BSR set to: 2
 14301                           ;term.c: 747: }
 14302                           ;term.c: 748: break;
 14303  0013FA  0012               	return	
 14304  0013FC                     
 14305                           ; BSR set to: 2
 14306                           ;term.c: 752: if((cdc_trf_state == 0))
 14307                           
 14308                           ; BSR set to: 2
 14309  0013FC  0100               	movlb	0	; () banked
 14310  0013FE  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14311  001400  A4D8               	btfss	status,2,c
 14312  001402  0012               	return	
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;term.c: 753: {
 14316                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 14317  001404  0E22               	movlw	low _Welcome
 14318  001406  6F83               	movwf	putUSBUSART@data& (0+255),b
 14319  001408  0EFD               	movlw	high _Welcome
 14320  00140A  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14321  00140C  0E88               	movlw	136
 14322  00140E  6F85               	movwf	putUSBUSART@length& (0+255),b
 14323  001410  ECB4  F032         	call	_putUSBUSART	;wreg free
 14324                           
 14325                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 14326  001414  0E04               	movlw	4
 14327  001416  0102               	movlb	2	; () banked
 14328  001418  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14329                           
 14330                           ; BSR set to: 2
 14331                           ;term.c: 758: }
 14332                           ;term.c: 759: break;
 14333  00141A  0012               	return	
 14334  00141C                     
 14335                           ; BSR set to: 2
 14336                           ;term.c: 763: if((cdc_trf_state == 0))
 14337                           
 14338                           ; BSR set to: 2
 14339  00141C  0100               	movlb	0	; () banked
 14340  00141E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14341  001420  A4D8               	btfss	status,2,c
 14342  001422  0012               	return	
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;term.c: 764: {
 14346                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 14347  001424  0E32               	movlw	low _MsgFormat
 14348  001426  6F83               	movwf	putUSBUSART@data& (0+255),b
 14349  001428  0EFC               	movlw	high _MsgFormat
 14350  00142A  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14351  00142C  0EEF               	movlw	239
 14352  00142E  6F85               	movwf	putUSBUSART@length& (0+255),b
 14353  001430  ECB4  F032         	call	_putUSBUSART	;wreg free
 14354                           
 14355                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 14356  001434  0E05               	movlw	5
 14357  001436  0102               	movlb	2	; () banked
 14358  001438  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14359                           
 14360                           ; BSR set to: 2
 14361                           ;term.c: 769: }
 14362                           ;term.c: 770: break;
 14363  00143A  0012               	return	
 14364  00143C                     
 14365                           ; BSR set to: 2
 14366                           ;term.c: 774: if((cdc_trf_state == 0))
 14367                           
 14368                           ; BSR set to: 2
 14369  00143C  0100               	movlb	0	; () banked
 14370  00143E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14371  001440  A4D8               	btfss	status,2,c
 14372  001442  0012               	return	
 14373                           
 14374                           ; BSR set to: 0
 14375                           ;term.c: 775: {
 14376                           ;term.c: 777: memset(Data,0,50);
 14377  001444  0E6B               	movlw	low Term_MainSm@Data
 14378  001446  6F7D               	movwf	memset@p1& (0+255),b
 14379  001448  0E04               	movlw	high Term_MainSm@Data
 14380  00144A  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14381  00144C  0E00               	movlw	0
 14382  00144E  6F80               	movwf	(memset@c+1)& (0+255),b
 14383  001450  0E00               	movlw	0
 14384  001452  6F7F               	movwf	memset@c& (0+255),b
 14385  001454  0E00               	movlw	0
 14386  001456  6F82               	movwf	(memset@n+1)& (0+255),b
 14387  001458  0E32               	movlw	50
 14388  00145A  6F81               	movwf	memset@n& (0+255),b
 14389  00145C  EC49  F031         	call	_memset	;wreg free
 14390                           
 14391                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 14392  001460  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14393  001462  0100               	movlb	0	; () banked
 14394  001464  6F8A               	movwf	utoa@buf& (0+255),b
 14395  001466  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14396  001468  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14397  00146A  0E00               	movlw	0
 14398  00146C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14399  00146E  0E01               	movlw	1
 14400  001470  6F8C               	movwf	utoa@val& (0+255),b
 14401  001472  0E00               	movlw	0
 14402  001474  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14403  001476  0E0A               	movlw	10
 14404  001478  6F8E               	movwf	utoa@base& (0+255),b
 14405  00147A  ECCA  F022         	call	_utoa	;wreg free
 14406                           
 14407                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 14408  00147E  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14409  001480  0100               	movlb	0	; () banked
 14410  001482  6F8A               	movwf	utoa@buf& (0+255),b
 14411  001484  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14412  001486  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14413  001488  0E00               	movlw	0
 14414  00148A  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14415  00148C  0E02               	movlw	2
 14416  00148E  6F8C               	movwf	utoa@val& (0+255),b
 14417  001490  0E00               	movlw	0
 14418  001492  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14419  001494  0E0A               	movlw	10
 14420  001496  6F8E               	movwf	utoa@base& (0+255),b
 14421  001498  ECCA  F022         	call	_utoa	;wreg free
 14422                           
 14423                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14424  00149C  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14425  00149E  0100               	movlb	0	; () banked
 14426  0014A0  6F8A               	movwf	utoa@buf& (0+255),b
 14427  0014A2  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14428  0014A4  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14429  0014A6  0E00               	movlw	0
 14430  0014A8  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14431  0014AA  0E00               	movlw	0
 14432  0014AC  6F8C               	movwf	utoa@val& (0+255),b
 14433  0014AE  0E00               	movlw	0
 14434  0014B0  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14435  0014B2  0E0A               	movlw	10
 14436  0014B4  6F8E               	movwf	utoa@base& (0+255),b
 14437  0014B6  ECCA  F022         	call	_utoa	;wreg free
 14438                           
 14439                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14440  0014BA  0E6B               	movlw	low Term_MainSm@Data
 14441  0014BC  0100               	movlb	0	; () banked
 14442  0014BE  6F7D               	movwf	strcpy@to& (0+255),b
 14443  0014C0  0E04               	movlw	high Term_MainSm@Data
 14444  0014C2  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14445  0014C4  0ED2               	movlw	low STR_23
 14446  0014C6  6F7F               	movwf	strcpy@from& (0+255),b
 14447  0014C8  0EFE               	movlw	high STR_23
 14448  0014CA  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14449  0014CC  EC18  F031         	call	_strcpy	;wreg free
 14450                           
 14451                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14452  0014D0  0E6B               	movlw	low Term_MainSm@Data
 14453  0014D2  0100               	movlb	0	; () banked
 14454  0014D4  6F7D               	movwf	strcat@to& (0+255),b
 14455  0014D6  0E04               	movlw	high Term_MainSm@Data
 14456  0014D8  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14457  0014DA  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14458  0014DC  6F7F               	movwf	strcat@from& (0+255),b
 14459  0014DE  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14460  0014E0  6F80               	movwf	(strcat@from+1)& (0+255),b
 14461  0014E2  EC4A  F02B         	call	_strcat	;wreg free
 14462                           
 14463                           ;term.c: 784: strcat(Data,".");
 14464  0014E6  0E6B               	movlw	low Term_MainSm@Data
 14465  0014E8  0100               	movlb	0	; () banked
 14466  0014EA  6F7D               	movwf	strcat@to& (0+255),b
 14467  0014EC  0E04               	movlw	high Term_MainSm@Data
 14468  0014EE  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14469  0014F0  0EF5               	movlw	low STR_24
 14470  0014F2  6F7F               	movwf	strcat@from& (0+255),b
 14471  0014F4  0EFF               	movlw	high STR_24
 14472  0014F6  6F80               	movwf	(strcat@from+1)& (0+255),b
 14473  0014F8  EC4A  F02B         	call	_strcat	;wreg free
 14474                           
 14475                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14476  0014FC  0E6B               	movlw	low Term_MainSm@Data
 14477  0014FE  0100               	movlb	0	; () banked
 14478  001500  6F7D               	movwf	strcat@to& (0+255),b
 14479  001502  0E04               	movlw	high Term_MainSm@Data
 14480  001504  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14481  001506  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14482  001508  6F7F               	movwf	strcat@from& (0+255),b
 14483  00150A  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14484  00150C  6F80               	movwf	(strcat@from+1)& (0+255),b
 14485  00150E  EC4A  F02B         	call	_strcat	;wreg free
 14486                           
 14487                           ;term.c: 786: strcat(Data,".");
 14488  001512  0E6B               	movlw	low Term_MainSm@Data
 14489  001514  0100               	movlb	0	; () banked
 14490  001516  6F7D               	movwf	strcat@to& (0+255),b
 14491  001518  0E04               	movlw	high Term_MainSm@Data
 14492  00151A  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14493  00151C  0EF5               	movlw	low STR_24
 14494  00151E  6F7F               	movwf	strcat@from& (0+255),b
 14495  001520  0EFF               	movlw	high STR_24
 14496  001522  6F80               	movwf	(strcat@from+1)& (0+255),b
 14497  001524  EC4A  F02B         	call	_strcat	;wreg free
 14498                           
 14499                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14500  001528  0E6B               	movlw	low Term_MainSm@Data
 14501  00152A  0100               	movlb	0	; () banked
 14502  00152C  6F7D               	movwf	strcat@to& (0+255),b
 14503  00152E  0E04               	movlw	high Term_MainSm@Data
 14504  001530  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14505  001532  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14506  001534  6F7F               	movwf	strcat@from& (0+255),b
 14507  001536  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14508  001538  6F80               	movwf	(strcat@from+1)& (0+255),b
 14509  00153A  EC4A  F02B         	call	_strcat	;wreg free
 14510                           
 14511                           ;term.c: 788: strcat(Data,"\r\n");
 14512  00153E  0E6B               	movlw	low Term_MainSm@Data
 14513  001540  0100               	movlb	0	; () banked
 14514  001542  6F7D               	movwf	strcat@to& (0+255),b
 14515  001544  0E04               	movlw	high Term_MainSm@Data
 14516  001546  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14517  001548  0E86               	movlw	low (STR_21+39)
 14518  00154A  6F7F               	movwf	strcat@from& (0+255),b
 14519  00154C  0EFE               	movlw	high (STR_21+39)
 14520  00154E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14521  001550  EC4A  F02B         	call	_strcat	;wreg free
 14522                           
 14523                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14524  001554  0E6B               	movlw	low Term_MainSm@Data
 14525  001556  0100               	movlb	0	; () banked
 14526  001558  6F83               	movwf	putUSBUSART@data& (0+255),b
 14527  00155A  0E04               	movlw	high Term_MainSm@Data
 14528  00155C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14529  00155E  0E6B               	movlw	low Term_MainSm@Data
 14530  001560  6F7D               	movwf	strlen@s& (0+255),b
 14531  001562  0E04               	movlw	high Term_MainSm@Data
 14532  001564  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14533  001566  ECFA  F02F         	call	_strlen	;wreg free
 14534  00156A  0100               	movlb	0	; () banked
 14535  00156C  517D               	movf	?_strlen& (0+255),w,b
 14536  00156E  6F85               	movwf	putUSBUSART@length& (0+255),b
 14537  001570  ECB4  F032         	call	_putUSBUSART	;wreg free
 14538                           
 14539                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14540  001574  0E06               	movlw	6
 14541  001576  0102               	movlb	2	; () banked
 14542  001578  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14543                           
 14544                           ; BSR set to: 2
 14545                           ;term.c: 793: }
 14546                           ;term.c: 794: break;
 14547  00157A  0012               	return	
 14548  00157C                     
 14549                           ; BSR set to: 2
 14550                           ;term.c: 798: if((cdc_trf_state == 0))
 14551                           
 14552                           ; BSR set to: 2
 14553  00157C  0100               	movlb	0	; () banked
 14554  00157E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14555  001580  A4D8               	btfss	status,2,c
 14556  001582  0012               	return	
 14557                           
 14558                           ; BSR set to: 0
 14559                           ;term.c: 799: {
 14560                           ;term.c: 801: memset(Data,0,50);
 14561  001584  0E6B               	movlw	low Term_MainSm@Data
 14562  001586  6F7D               	movwf	memset@p1& (0+255),b
 14563  001588  0E04               	movlw	high Term_MainSm@Data
 14564  00158A  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14565  00158C  0E00               	movlw	0
 14566  00158E  6F80               	movwf	(memset@c+1)& (0+255),b
 14567  001590  0E00               	movlw	0
 14568  001592  6F7F               	movwf	memset@c& (0+255),b
 14569  001594  0E00               	movlw	0
 14570  001596  6F82               	movwf	(memset@n+1)& (0+255),b
 14571  001598  0E32               	movlw	50
 14572  00159A  6F81               	movwf	memset@n& (0+255),b
 14573  00159C  EC49  F031         	call	_memset	;wreg free
 14574                           
 14575                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14576  0015A0  0E6B               	movlw	low Term_MainSm@Data
 14577  0015A2  0100               	movlb	0	; () banked
 14578  0015A4  6F7D               	movwf	sprintf@sp& (0+255),b
 14579  0015A6  0E04               	movlw	high Term_MainSm@Data
 14580  0015A8  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14581  0015AA  0E0D               	movlw	low STR_27
 14582  0015AC  6F7F               	movwf	sprintf@f& (0+255),b
 14583  0015AE  0EFF               	movlw	high STR_27
 14584  0015B0  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14585  0015B2  0EB6               	movlw	low STR_28
 14586  0015B4  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14587  0015B6  0EFF               	movlw	high STR_28
 14588  0015B8  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14589  0015BA  EC86  F01D         	call	_sprintf	;wreg free
 14590                           
 14591                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14592  0015BE  0E6B               	movlw	low Term_MainSm@Data
 14593  0015C0  0100               	movlb	0	; () banked
 14594  0015C2  6F83               	movwf	putUSBUSART@data& (0+255),b
 14595  0015C4  0E04               	movlw	high Term_MainSm@Data
 14596  0015C6  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14597  0015C8  0E6B               	movlw	low Term_MainSm@Data
 14598  0015CA  6F7D               	movwf	strlen@s& (0+255),b
 14599  0015CC  0E04               	movlw	high Term_MainSm@Data
 14600  0015CE  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14601  0015D0  ECFA  F02F         	call	_strlen	;wreg free
 14602  0015D4  0100               	movlb	0	; () banked
 14603  0015D6  517D               	movf	?_strlen& (0+255),w,b
 14604  0015D8  6F85               	movwf	putUSBUSART@length& (0+255),b
 14605  0015DA  ECB4  F032         	call	_putUSBUSART	;wreg free
 14606                           
 14607                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14608  0015DE  0E07               	movlw	7
 14609  0015E0  0102               	movlb	2	; () banked
 14610  0015E2  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14611                           
 14612                           ; BSR set to: 2
 14613                           ;term.c: 808: }
 14614                           ;term.c: 809: break;
 14615  0015E4  0012               	return	
 14616  0015E6                     
 14617                           ; BSR set to: 2
 14618                           ;term.c: 813: if((cdc_trf_state == 0))
 14619                           
 14620                           ; BSR set to: 2
 14621  0015E6  0100               	movlb	0	; () banked
 14622  0015E8  51C5               	movf	_cdc_trf_state& (0+255),w,b
 14623  0015EA  A4D8               	btfss	status,2,c
 14624  0015EC  0012               	return	
 14625                           
 14626                           ; BSR set to: 0
 14627                           ;term.c: 814: {
 14628                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14629  0015EE  0E32               	movlw	low _MsgReady
 14630  0015F0  6F83               	movwf	putUSBUSART@data& (0+255),b
 14631  0015F2  0EFE               	movlw	high _MsgReady
 14632  0015F4  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14633  0015F6  0E16               	movlw	22
 14634  0015F8  6F85               	movwf	putUSBUSART@length& (0+255),b
 14635  0015FA  ECB4  F032         	call	_putUSBUSART	;wreg free
 14636                           
 14637                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14638  0015FE  0E08               	movlw	8
 14639  001600  0102               	movlb	2	; () banked
 14640  001602  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14641                           
 14642                           ; BSR set to: 2
 14643                           ;term.c: 819: }
 14644                           ;term.c: 820: break;
 14645  001604  0012               	return	
 14646  001606                     
 14647                           ; BSR set to: 2
 14648                           ;term.c: 824: Terminal();
 14649                           
 14650                           ; BSR set to: 2
 14651  001606  EC68  F000         	call	_Terminal	;wreg free
 14652                           
 14653                           ;term.c: 829: }
 14654                           
 14655                           ;term.c: 828: break;
 14656                           
 14657                           ;term.c: 827: default:
 14658                           
 14659                           ;term.c: 825: break;
 14660  00160A  0012               	return	
 14661  00160C                     l2456:
 14662  00160C  0102               	movlb	2	; () banked
 14663  00160E  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14664                           
 14665                           ; Switch size 1, requested type "space"
 14666                           ; Number of cases is 9, Range of values is 0 to 8
 14667                           ; switch strategies available:
 14668                           ; Name         Instructions Cycles
 14669                           ; simple_byte           28    15 (average)
 14670                           ;	Chosen strategy is simple_byte
 14671  001610  0A00               	xorlw	0	; case 0
 14672  001612  B4D8               	btfsc	status,2,c
 14673  001614  D6C8               	goto	l2457
 14674  001616  0A01               	xorlw	1	; case 1
 14675  001618  B4D8               	btfsc	status,2,c
 14676  00161A  D6D8               	goto	l2459
 14677  00161C  0A03               	xorlw	3	; case 2
 14678  00161E  B4D8               	btfsc	status,2,c
 14679  001620  D6E3               	goto	l2461
 14680  001622  0A01               	xorlw	1	; case 3
 14681  001624  B4D8               	btfsc	status,2,c
 14682  001626  D6EA               	goto	l2466
 14683  001628  0A07               	xorlw	7	; case 4
 14684  00162A  B4D8               	btfsc	status,2,c
 14685  00162C  D6F7               	goto	l2468
 14686  00162E  0A01               	xorlw	1	; case 5
 14687  001630  B4D8               	btfsc	status,2,c
 14688  001632  D704               	goto	l2470
 14689  001634  0A03               	xorlw	3	; case 6
 14690  001636  B4D8               	btfsc	status,2,c
 14691  001638  D7A1               	goto	l2472
 14692  00163A  0A01               	xorlw	1	; case 7
 14693  00163C  B4D8               	btfsc	status,2,c
 14694  00163E  D7D3               	goto	l2474
 14695  001640  0A0F               	xorlw	15	; case 8
 14696  001642  A4D8               	btfss	status,2,c
 14697  001644  0012               	return	
 14698  001646  D7DF               	goto	l2476
 14699  001648                     __end_of_Term_MainSm:
 14700                           	opt stack 0
 14701                           tosu	equ	0xFFF
 14702                           tosh	equ	0xFFE
 14703                           tosl	equ	0xFFD
 14704                           pclath	equ	0xFFA
 14705                           tblptru	equ	0xFF8
 14706                           tblptrh	equ	0xFF7
 14707                           tblptrl	equ	0xFF6
 14708                           tablat	equ	0xFF5
 14709                           prodh	equ	0xFF4
 14710                           prodl	equ	0xFF3
 14711                           intcon	equ	0xFF2
 14712                           intcon2	equ	0xFF1
 14713                           intcon3	equ	0xFF0
 14714                           indf0	equ	0xFEF
 14715                           postinc0	equ	0xFEE
 14716                           plusw0	equ	0xFEB
 14717                           fsr0h	equ	0xFEA
 14718                           fsr0l	equ	0xFE9
 14719                           wreg	equ	0xFE8
 14720                           indf1	equ	0xFE7
 14721                           postinc1	equ	0xFE6
 14722                           postdec1	equ	0xFE5
 14723                           fsr1h	equ	0xFE2
 14724                           fsr1l	equ	0xFE1
 14725                           indf2	equ	0xFDF
 14726                           postinc2	equ	0xFDE
 14727                           postdec2	equ	0xFDD
 14728                           plusw2	equ	0xFDB
 14729                           fsr2h	equ	0xFDA
 14730                           fsr2l	equ	0xFD9
 14731                           status	equ	0xFD8
 14732                           
 14733 ;; *************** function _strlen *****************
 14734 ;; Defined at:
 14735 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14738 ;;		 -> Term_MainSm@Data(50), 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14741 ;;		 -> Term_MainSm@Data(50), 
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  2   29[BANK0 ] unsigned int 
 14744 ;; Registers used:
 14745 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14751 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14754 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14755 ;;Total ram usage:        6 bytes
 14756 ;; Hardware stack levels used:    1
 14757 ;; Hardware stack levels required when called:   11
 14758 ;; This function calls:
 14759 ;;		Nothing
 14760 ;; This function is called by:
 14761 ;;		_Term_MainSm
 14762 ;; This function uses a non-reentrant model
 14763 ;;
 14764                           
 14765                           	psect	text56
 14766  005FF4                     __ptext56:
 14767                           	opt stack 0
 14768  005FF4                     _strlen:
 14769                           	opt stack 15
 14770                           
 14771                           ;incstack = 0
 14772  005FF4  C07D  F081         	movff	strlen@s,strlen@cp
 14773  005FF8  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14774  005FFC  D003               	goto	l3446
 14775  005FFE  0100               	movlb	0	; () banked
 14776  006000  4B81               	infsnz	strlen@cp& (0+255),f,b
 14777  006002  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14778  006004                     l3446:
 14779                           
 14780                           ; BSR set to: 0
 14781  006004  C081  FFD9         	movff	strlen@cp,fsr2l
 14782  006008  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14783  00600C  50DF               	movf	indf2,w,c
 14784  00600E  A4D8               	btfss	status,2,c
 14785  006010  D7F6               	goto	l3447
 14786  006012  C07D  F07F         	movff	strlen@s,??_strlen
 14787  006016  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14788  00601A  0100               	movlb	0	; () banked
 14789  00601C  1F7F               	comf	??_strlen& (0+255),f,b
 14790  00601E  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14791  006020  4B7F               	infsnz	??_strlen& (0+255),f,b
 14792  006022  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14793  006024  5181               	movf	strlen@cp& (0+255),w,b
 14794  006026  257F               	addwf	??_strlen& (0+255),w,b
 14795  006028  6F7D               	movwf	?_strlen& (0+255),b
 14796  00602A  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14797  00602C  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14798  00602E  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14799  006030  0012               	return	
 14800  006032                     __end_of_strlen:
 14801                           	opt stack 0
 14802                           tosu	equ	0xFFF
 14803                           tosh	equ	0xFFE
 14804                           tosl	equ	0xFFD
 14805                           pclath	equ	0xFFA
 14806                           tblptru	equ	0xFF8
 14807                           tblptrh	equ	0xFF7
 14808                           tblptrl	equ	0xFF6
 14809                           tablat	equ	0xFF5
 14810                           prodh	equ	0xFF4
 14811                           prodl	equ	0xFF3
 14812                           intcon	equ	0xFF2
 14813                           intcon2	equ	0xFF1
 14814                           intcon3	equ	0xFF0
 14815                           indf0	equ	0xFEF
 14816                           postinc0	equ	0xFEE
 14817                           plusw0	equ	0xFEB
 14818                           fsr0h	equ	0xFEA
 14819                           fsr0l	equ	0xFE9
 14820                           wreg	equ	0xFE8
 14821                           indf1	equ	0xFE7
 14822                           postinc1	equ	0xFE6
 14823                           postdec1	equ	0xFE5
 14824                           fsr1h	equ	0xFE2
 14825                           fsr1l	equ	0xFE1
 14826                           indf2	equ	0xFDF
 14827                           postinc2	equ	0xFDE
 14828                           postdec2	equ	0xFDD
 14829                           plusw2	equ	0xFDB
 14830                           fsr2h	equ	0xFDA
 14831                           fsr2l	equ	0xFD9
 14832                           status	equ	0xFD8
 14833                           
 14834 ;; *************** function _strcat *****************
 14835 ;; Defined at:
 14836 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14837 ;; Parameters:    Size  Location     Type
 14838 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14839 ;;		 -> Term_MainSm@Data(50), 
 14840 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14841 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14842 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14845 ;;		 -> Term_MainSm@Data(50), 
 14846 ;; Return value:  Size  Location     Type
 14847 ;;                  2   29[BANK0 ] PTR unsigned char 
 14848 ;; Registers used:
 14849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/0
 14852 ;;		On exit  : 0/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14855 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14858 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14859 ;;Total ram usage:        6 bytes
 14860 ;; Hardware stack levels used:    1
 14861 ;; Hardware stack levels required when called:   11
 14862 ;; This function calls:
 14863 ;;		Nothing
 14864 ;; This function is called by:
 14865 ;;		_Term_MainSm
 14866 ;; This function uses a non-reentrant model
 14867 ;;
 14868                           
 14869                           	psect	text57
 14870  005694                     __ptext57:
 14871                           	opt stack 0
 14872  005694                     _strcat:
 14873                           	opt stack 15
 14874                           
 14875                           ; BSR set to: 0
 14876                           ;incstack = 0
 14877  005694  C07D  F081         	movff	strcat@to,strcat@cp
 14878  005698  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14879  00569C  D003               	goto	l3431
 14880  00569E  0100               	movlb	0	; () banked
 14881  0056A0  4B81               	infsnz	strcat@cp& (0+255),f,b
 14882  0056A2  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14883  0056A4                     l3431:
 14884                           
 14885                           ; BSR set to: 0
 14886  0056A4  C081  FFD9         	movff	strcat@cp,fsr2l
 14887  0056A8  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14888  0056AC  50DF               	movf	indf2,w,c
 14889  0056AE  B4D8               	btfsc	status,2,c
 14890  0056B0  D006               	goto	l3434
 14891  0056B2  D7F5               	goto	l3432
 14892  0056B4  0100               	movlb	0	; () banked
 14893  0056B6  4B81               	infsnz	strcat@cp& (0+255),f,b
 14894  0056B8  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14895  0056BA  4B7F               	infsnz	strcat@from& (0+255),f,b
 14896  0056BC  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14897  0056BE                     l3434:
 14898                           
 14899                           ; BSR set to: 0
 14900  0056BE  C07F  FFF6         	movff	strcat@from,tblptrl
 14901  0056C2  C080  FFF7         	movff	strcat@from+1,tblptrh
 14902  0056C6  6AF8               	clrf	tblptru,c
 14903  0056C8  C081  FFD9         	movff	strcat@cp,fsr2l
 14904  0056CC  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14905  0056D0  0E0E               	movlw	(high __ramtop+-1)
 14906  0056D2  64F7               	cpfsgt	tblptrh,c
 14907  0056D4  D003               	bra	u14027
 14908  0056D6  0008               	tblrd		*
 14909  0056D8  50F5               	movf	tablat,w,c
 14910  0056DA  D005               	bra	u14020
 14911  0056DC                     u14027:
 14912  0056DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14913  0056E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 14914  0056E4  50EF               	movf	indf0,w,c
 14915  0056E6                     u14020:
 14916  0056E6  6EDF               	movwf	indf2,c
 14917  0056E8  50DF               	movf	indf2,w,c
 14918  0056EA  B4D8               	btfsc	status,2,c
 14919  0056EC  0012               	return	
 14920  0056EE  D7E2               	goto	l3435
 14921  0056F0                     __end_of_strcat:
 14922                           	opt stack 0
 14923                           tosu	equ	0xFFF
 14924                           tosh	equ	0xFFE
 14925                           tosl	equ	0xFFD
 14926                           pclath	equ	0xFFA
 14927                           tblptru	equ	0xFF8
 14928                           tblptrh	equ	0xFF7
 14929                           tblptrl	equ	0xFF6
 14930                           tablat	equ	0xFF5
 14931                           prodh	equ	0xFF4
 14932                           prodl	equ	0xFF3
 14933                           intcon	equ	0xFF2
 14934                           intcon2	equ	0xFF1
 14935                           intcon3	equ	0xFF0
 14936                           indf0	equ	0xFEF
 14937                           postinc0	equ	0xFEE
 14938                           plusw0	equ	0xFEB
 14939                           fsr0h	equ	0xFEA
 14940                           fsr0l	equ	0xFE9
 14941                           wreg	equ	0xFE8
 14942                           indf1	equ	0xFE7
 14943                           postinc1	equ	0xFE6
 14944                           postdec1	equ	0xFE5
 14945                           fsr1h	equ	0xFE2
 14946                           fsr1l	equ	0xFE1
 14947                           indf2	equ	0xFDF
 14948                           postinc2	equ	0xFDE
 14949                           postdec2	equ	0xFDD
 14950                           plusw2	equ	0xFDB
 14951                           fsr2h	equ	0xFDA
 14952                           fsr2l	equ	0xFD9
 14953                           status	equ	0xFD8
 14954                           
 14955 ;; *************** function _sprintf *****************
 14956 ;; Defined at:
 14957 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14960 ;;		 -> Term_MainSm@Data(50), 
 14961 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14962 ;;		 -> STR_27(17), 
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  tmpval          4    0        struct .
 14965 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14966 ;;		 -> STR_33(7), STR_28(12), 
 14967 ;;  ap              2   36[BANK0 ] PTR void [1]
 14968 ;;		 -> ?_sprintf(2), 
 14969 ;;  len             2    0        unsigned int 
 14970 ;;  val             2    0        unsigned int 
 14971 ;;  c               1   38[BANK0 ] char 
 14972 ;;  flag            1   35[BANK0 ] unsigned char 
 14973 ;;  prec            1    0        char 
 14974 ;; Return value:  Size  Location     Type
 14975 ;;                  2   29[BANK0 ] int 
 14976 ;; Registers used:
 14977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14978 ;; Tracked objects:
 14979 ;;		On entry : 0/0
 14980 ;;		On exit  : 0/0
 14981 ;;		Unchanged: 0/0
 14982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14983 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14984 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14986 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14987 ;;Total ram usage:       12 bytes
 14988 ;; Hardware stack levels used:    1
 14989 ;; Hardware stack levels required when called:   11
 14990 ;; This function calls:
 14991 ;;		Nothing
 14992 ;; This function is called by:
 14993 ;;		_Term_MainSm
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           	psect	text58
 14998  003B0C                     __ptext58:
 14999                           	opt stack 0
 15000  003B0C                     _sprintf:
 15001                           	opt stack 15
 15002                           
 15003                           ;doprnt.c: 494: va_list ap;
 15004                           ;doprnt.c: 499: signed char c;
 15005                           ;doprnt.c: 506: signed char prec;
 15006                           ;doprnt.c: 508: unsigned char flag;
 15007                           ;doprnt.c: 523: union {
 15008                           ;doprnt.c: 524: unsigned long vd;
 15009                           ;doprnt.c: 525: double integ;
 15010                           ;doprnt.c: 526: } tmpval;
 15011                           ;doprnt.c: 528: unsigned int val;
 15012                           ;doprnt.c: 529: unsigned len;
 15013                           ;doprnt.c: 530: const char * cp;
 15014                           ;doprnt.c: 533: *ap = __va_start();
 15015                           
 15016                           ;incstack = 0
 15017  003B0C  0E81               	movlw	low (?_sprintf+4)
 15018  003B0E  0100               	movlb	0	; () banked
 15019  003B10  6F84               	movwf	sprintf@ap& (0+255),b
 15020  003B12  0E00               	movlw	high (?_sprintf+4)
 15021  003B14  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 15022                           
 15023                           ;doprnt.c: 536: while(c = *f++) {
 15024  003B16  D04E               	goto	l2835
 15025  003B18                     
 15026                           ; BSR set to: 0
 15027                           ;doprnt.c: 538: if(c != '%')
 15028                           
 15029                           ; BSR set to: 0
 15030  003B18  0E25               	movlw	37
 15031  003B1A  1986               	xorwf	sprintf@c& (0+255),w,b
 15032  003B1C  B4D8               	btfsc	status,2,c
 15033  003B1E  D009               	goto	l2825
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;doprnt.c: 540: {
 15037                           ;doprnt.c: 541: ((*sp++ = (c)));
 15038  003B20  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15039  003B24  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15040  003B28  C086  FFDF         	movff	sprintf@c,indf2
 15041                           
 15042                           ; BSR set to: 0
 15043  003B2C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15044  003B2E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15045                           
 15046                           ;doprnt.c: 542: continue;
 15047  003B30  D041               	goto	l2835
 15048  003B32                     l2825:
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;doprnt.c: 543: }
 15052                           ;doprnt.c: 548: flag = 0;
 15053                           
 15054                           ; BSR set to: 0
 15055  003B32  0E00               	movlw	0
 15056  003B34  6F83               	movwf	sprintf@flag& (0+255),b
 15057                           
 15058                           ;doprnt.c: 635: switch(c = *f++) {
 15059  003B36  D02E               	goto	l2826
 15060  003B38                     
 15061                           ; BSR set to: 0
 15062                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15063                           
 15064                           ; BSR set to: 0
 15065  003B38  C084  FFD9         	movff	sprintf@ap,fsr2l
 15066  003B3C  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 15067  003B40  CFDE F087          	movff	postinc2,sprintf@cp
 15068  003B44  CFDD F088          	movff	postdec2,sprintf@cp+1
 15069                           
 15070                           ; BSR set to: 0
 15071  003B48  0E02               	movlw	2
 15072  003B4A  2784               	addwf	sprintf@ap& (0+255),f,b
 15073  003B4C  0E00               	movlw	0
 15074  003B4E  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 15075                           
 15076                           ; BSR set to: 0
 15077                           ;doprnt.c: 740: if(!cp)
 15078  003B50  5187               	movf	sprintf@cp& (0+255),w,b
 15079  003B52  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 15080  003B54  A4D8               	btfss	status,2,c
 15081  003B56  D014               	goto	l2831
 15082                           
 15083                           ; BSR set to: 0
 15084                           ;doprnt.c: 741: cp = "(null)";
 15085  003B58  0ED8               	movlw	low STR_33
 15086  003B5A  6F87               	movwf	sprintf@cp& (0+255),b
 15087  003B5C  0EFF               	movlw	high STR_33
 15088  003B5E  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;doprnt.c: 777: while(*cp)
 15092  003B60  D00F               	goto	l2831
 15093  003B62                     
 15094                           ; BSR set to: 0
 15095                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 15096                           
 15097                           ; BSR set to: 0
 15098  003B62  C087  FFF6         	movff	sprintf@cp,tblptrl
 15099  003B66  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15100  003B6A                     	if	0	;tblptru may be non-zero
 15101  003B6A                     	endif
 15102  003B6A                     	if	0	;tblptru may be non-zero
 15103  003B6A                     	endif
 15104  003B6A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15105  003B6E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15106  003B72  0008               	tblrd		*
 15107  003B74  CFF5 FFDF          	movff	tablat,indf2
 15108                           
 15109                           ; BSR set to: 0
 15110  003B78  4B87               	infsnz	sprintf@cp& (0+255),f,b
 15111  003B7A  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 15112                           
 15113                           ; BSR set to: 0
 15114  003B7C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 15115  003B7E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 15116  003B80                     l2831:
 15117                           
 15118                           ; BSR set to: 0
 15119                           
 15120                           ; BSR set to: 0
 15121  003B80  C087  FFF6         	movff	sprintf@cp,tblptrl
 15122  003B84  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 15123  003B88                     	if	0	;tblptru may be non-zero
 15124  003B88                     	endif
 15125  003B88                     	if	0	;tblptru may be non-zero
 15126  003B88                     	endif
 15127  003B88  0008               	tblrd		*
 15128  003B8A  50F5               	movf	tablat,w,c
 15129  003B8C  0900               	iorlw	0
 15130  003B8E  B4D8               	btfsc	status,2,c
 15131  003B90  D011               	goto	l2835
 15132  003B92  D7E7               	goto	l2832
 15133  003B94                     l2826:
 15134                           
 15135                           ; BSR set to: 0
 15136                           
 15137                           ; BSR set to: 0
 15138  003B94  C07F  FFF6         	movff	sprintf@f,tblptrl
 15139  003B98  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15140  003B9C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15141  003B9E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15142  003BA0                     	if	0	;tblptru may be non-zero
 15143  003BA0                     	endif
 15144  003BA0                     	if	0	;tblptru may be non-zero
 15145  003BA0                     	endif
 15146  003BA0  0008               	tblrd		*
 15147  003BA2  CFF5 F086          	movff	tablat,sprintf@c
 15148  003BA6  5186               	movf	sprintf@c& (0+255),w,b
 15149                           
 15150                           ; Switch size 1, requested type "space"
 15151                           ; Number of cases is 2, Range of values is 0 to 115
 15152                           ; switch strategies available:
 15153                           ; Name         Instructions Cycles
 15154                           ; simple_byte            7     4 (average)
 15155                           ;	Chosen strategy is simple_byte
 15156  003BA8  0A00               	xorlw	0	; case 0
 15157  003BAA  B4D8               	btfsc	status,2,c
 15158  003BAC  D00F               	goto	u14080
 15159  003BAE  0A73               	xorlw	115	; case 115
 15160  003BB0  B4D8               	btfsc	status,2,c
 15161  003BB2  D7C2               	goto	l2829
 15162  003BB4                     l2835:
 15163                           
 15164                           ; BSR set to: 0
 15165                           
 15166                           ; BSR set to: 0
 15167                           
 15168                           ;doprnt.c: 1422: {
 15169                           
 15170                           ; BSR set to: 0
 15171  003BB4  C07F  FFF6         	movff	sprintf@f,tblptrl
 15172  003BB8  C080  FFF7         	movff	sprintf@f+1,tblptrh
 15173  003BBC  4B7F               	infsnz	sprintf@f& (0+255),f,b
 15174  003BBE  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 15175  003BC0                     	if	0	;tblptru may be non-zero
 15176  003BC0                     	endif
 15177  003BC0                     	if	0	;tblptru may be non-zero
 15178  003BC0                     	endif
 15179  003BC0  0008               	tblrd		*
 15180  003BC2  CFF5 F086          	movff	tablat,sprintf@c
 15181  003BC6  5186               	movf	sprintf@c& (0+255),w,b
 15182  003BC8  A4D8               	btfss	status,2,c
 15183  003BCA  D7A6               	goto	l2824
 15184  003BCC                     u14080:
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;doprnt.c: 1538: *sp = 0;
 15188                           
 15189                           ; BSR set to: 0
 15190                           
 15191                           ;doprnt.c: 1469: }
 15192                           ;doprnt.c: 1533: }
 15193                           ;doprnt.c: 1535: alldone:
 15194                           
 15195                           ; BSR set to: 0
 15196  003BCC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 15197  003BD0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 15198  003BD4  0E00               	movlw	0
 15199  003BD6  6EDF               	movwf	indf2,c
 15200  003BD8  0012               	return	
 15201  003BDA                     __end_of_sprintf:
 15202                           	opt stack 0
 15203                           tosu	equ	0xFFF
 15204                           tosh	equ	0xFFE
 15205                           tosl	equ	0xFFD
 15206                           pclath	equ	0xFFA
 15207                           tblptru	equ	0xFF8
 15208                           tblptrh	equ	0xFF7
 15209                           tblptrl	equ	0xFF6
 15210                           tablat	equ	0xFF5
 15211                           prodh	equ	0xFF4
 15212                           prodl	equ	0xFF3
 15213                           intcon	equ	0xFF2
 15214                           intcon2	equ	0xFF1
 15215                           intcon3	equ	0xFF0
 15216                           indf0	equ	0xFEF
 15217                           postinc0	equ	0xFEE
 15218                           plusw0	equ	0xFEB
 15219                           fsr0h	equ	0xFEA
 15220                           fsr0l	equ	0xFE9
 15221                           wreg	equ	0xFE8
 15222                           indf1	equ	0xFE7
 15223                           postinc1	equ	0xFE6
 15224                           postdec1	equ	0xFE5
 15225                           fsr1h	equ	0xFE2
 15226                           fsr1l	equ	0xFE1
 15227                           indf2	equ	0xFDF
 15228                           postinc2	equ	0xFDE
 15229                           postdec2	equ	0xFDD
 15230                           plusw2	equ	0xFDB
 15231                           fsr2h	equ	0xFDA
 15232                           fsr2l	equ	0xFD9
 15233                           status	equ	0xFD8
 15234                           
 15235 ;; *************** function _memset *****************
 15236 ;; Defined at:
 15237 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;  p1              2   29[BANK0 ] PTR void 
 15240 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15241 ;;  c               2   31[BANK0 ] int 
 15242 ;;  n               2   33[BANK0 ] unsigned int 
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;  p               2   35[BANK0 ] PTR unsigned char 
 15245 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  2   29[BANK0 ] PTR void 
 15248 ;; Registers used:
 15249 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15255 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15258 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15259 ;;Total ram usage:        8 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:   11
 15262 ;; This function calls:
 15263 ;;		Nothing
 15264 ;; This function is called by:
 15265 ;;		_USBDeviceInit
 15266 ;;		_USBStdSetCfgHandler
 15267 ;;		_Term_MainSm
 15268 ;; This function uses a non-reentrant model
 15269 ;;
 15270                           
 15271                           	psect	text59
 15272  006292                     __ptext59:
 15273                           	opt stack 0
 15274  006292                     _memset:
 15275                           	opt stack 14
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;incstack = 0
 15279  006292  C07D  F083         	movff	memset@p1,memset@p
 15280  006296  C07E  F084         	movff	memset@p1+1,memset@p+1
 15281  00629A  D009               	goto	l3305
 15282  00629C                     l12630:
 15283  00629C  C083  FFD9         	movff	memset@p,fsr2l
 15284  0062A0  C084  FFDA         	movff	memset@p+1,fsr2h
 15285  0062A4  C07F  FFDF         	movff	memset@c,indf2
 15286  0062A8  0100               	movlb	0	; () banked
 15287  0062AA  4B83               	infsnz	memset@p& (0+255),f,b
 15288  0062AC  2B84               	incf	(memset@p+1)& (0+255),f,b
 15289  0062AE                     l3305:
 15290                           
 15291                           ; BSR set to: 0
 15292  0062AE  0100               	movlb	0	; () banked
 15293  0062B0  0781               	decf	memset@n& (0+255),f,b
 15294  0062B2  A0D8               	btfss	status,0,c
 15295  0062B4  0782               	decf	(memset@n+1)& (0+255),f,b
 15296  0062B6  2981               	incf	memset@n& (0+255),w,b
 15297  0062B8  E1F1               	bnz	l12630
 15298  0062BA  2982               	incf	(memset@n+1)& (0+255),w,b
 15299  0062BC  B4D8               	btfsc	status,2,c
 15300  0062BE  0012               	return	
 15301  0062C0  D7ED               	goto	l3306
 15302  0062C2                     __end_of_memset:
 15303                           	opt stack 0
 15304                           tosu	equ	0xFFF
 15305                           tosh	equ	0xFFE
 15306                           tosl	equ	0xFFD
 15307                           pclath	equ	0xFFA
 15308                           tblptru	equ	0xFF8
 15309                           tblptrh	equ	0xFF7
 15310                           tblptrl	equ	0xFF6
 15311                           tablat	equ	0xFF5
 15312                           prodh	equ	0xFF4
 15313                           prodl	equ	0xFF3
 15314                           intcon	equ	0xFF2
 15315                           intcon2	equ	0xFF1
 15316                           intcon3	equ	0xFF0
 15317                           indf0	equ	0xFEF
 15318                           postinc0	equ	0xFEE
 15319                           plusw0	equ	0xFEB
 15320                           fsr0h	equ	0xFEA
 15321                           fsr0l	equ	0xFE9
 15322                           wreg	equ	0xFE8
 15323                           indf1	equ	0xFE7
 15324                           postinc1	equ	0xFE6
 15325                           postdec1	equ	0xFE5
 15326                           fsr1h	equ	0xFE2
 15327                           fsr1l	equ	0xFE1
 15328                           indf2	equ	0xFDF
 15329                           postinc2	equ	0xFDE
 15330                           postdec2	equ	0xFDD
 15331                           plusw2	equ	0xFDB
 15332                           fsr2h	equ	0xFDA
 15333                           fsr2l	equ	0xFD9
 15334                           status	equ	0xFD8
 15335                           
 15336 ;; *************** function _Terminal *****************
 15337 ;; Defined at:
 15338 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 15339 ;; Parameters:    Size  Location     Type
 15340 ;;		None
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;  i               1   68[BANK0 ] unsigned char 
 15343 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 15344 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 15345 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 15346 ;;  Index           1   70[BANK0 ] unsigned char 
 15347 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 15348 ;; Return value:  Size  Location     Type
 15349 ;;                  1    wreg      void 
 15350 ;; Registers used:
 15351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15352 ;; Tracked objects:
 15353 ;;		On entry : 0/0
 15354 ;;		On exit  : 0/0
 15355 ;;		Unchanged: 0/0
 15356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15358 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15359 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15360 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 15361 ;;Total ram usage:      455 bytes
 15362 ;; Hardware stack levels used:    1
 15363 ;; Hardware stack levels required when called:   15
 15364 ;; This function calls:
 15365 ;;		_I2cSlv_I2cReadMsgSts
 15366 ;;		_I2cSlv_ReceiveI2cMsg
 15367 ;;		_I2cSlv_SendI2cMsg
 15368 ;;		_OsTmr_Wait
 15369 ;;		_atoi
 15370 ;;		_getsUSBUSART
 15371 ;;		_itoa
 15372 ;;		_putUSBUSART
 15373 ;;		_strcpy
 15374 ;;		_strtol
 15375 ;;		_xtoi
 15376 ;; This function is called by:
 15377 ;;		_Term_MainSm
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           	psect	text60
 15382  0000D0                     __ptext60:
 15383                           	opt stack 0
 15384  0000D0                     _Terminal:
 15385                           	opt stack 11
 15386                           
 15387                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 15388                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 15389                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 15390                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 15391                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 15392                           ;term.c: 435: UINT8 Index;
 15393                           ;term.c: 436: static UINT8 Len[4];
 15394                           ;term.c: 437: static UINT8 PackageLen;
 15395                           ;term.c: 438: static UINT8 Addr[4];
 15396                           ;term.c: 439: static UINT8 SlaveAddr;
 15397                           ;term.c: 440: static PayloadType Payload[20u];
 15398                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 15399                           
 15400                           ; BSR set to: 0
 15401                           ;incstack = 0
 15402  0000D0  0E00               	movlw	0
 15403  0000D2  0100               	movlb	0	; () banked
 15404  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;term.c: 443: static UINT8 FormatOption = 0u;
 15408                           ;term.c: 444: static UINT8 EchoOption = 1u;
 15409                           ;term.c: 445: static SwTimerType SwTimer;
 15410                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15411  0000D6  0E1F               	movlw	31
 15412  0000D8  65CC               	cpfsgt	_USBDeviceState& (0+255),b
 15413  0000DA  0012               	return	
 15414                           
 15415                           ; BSR set to: 0
 15416  0000DC  B265               	btfsc	3941,1,c	;volatile
 15417  0000DE  0012               	return	
 15418  0000E0  D278               	goto	l2396
 15419  0000E2                     
 15420                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15421                           
 15422                           ; BSR set to: 0
 15423  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15424  0000E4  0100               	movlb	0	; () banked
 15425  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15426  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15427  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15428  0000EC  0EC8               	movlw	200
 15429  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15430  0000F0  EC9D  F025         	call	_getsUSBUSART	;wreg free
 15431  0000F4  0100               	movlb	0	; () banked
 15432  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15433                           
 15434                           ; BSR set to: 0
 15435                           ;term.c: 458: if (ReceivedBytes > 0)
 15436  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15437  0000FA  B4D8               	btfsc	status,2,c
 15438  0000FC  0012               	return	
 15439                           
 15440                           ; BSR set to: 0
 15441                           ;term.c: 459: {
 15442                           ;term.c: 461: if (EchoOption == 1u)
 15443  0000FE  0102               	movlb	2	; () banked
 15444  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15445  000102  A4D8               	btfss	status,2,c
 15446  000104  D026               	goto	l2400
 15447                           
 15448                           ; BSR set to: 2
 15449                           ;term.c: 462: {
 15450                           ;term.c: 464: if((cdc_trf_state == 0))
 15451  000106  0100               	movlb	0	; () banked
 15452  000108  51C5               	movf	_cdc_trf_state& (0+255),w,b
 15453  00010A  A4D8               	btfss	status,2,c
 15454  00010C  D022               	goto	l2400
 15455                           
 15456                           ; BSR set to: 0
 15457                           ;term.c: 465: {
 15458                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15459  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15460  000110  0D01               	mullw	1
 15461  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15462  000114  24F3               	addwf	prodl,w,c
 15463  000116  6ED9               	movwf	fsr2l,c
 15464  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15465  00011A  20F4               	addwfc	prodh,w,c
 15466  00011C  6EDA               	movwf	fsr2h,c
 15467  00011E  0E0D               	movlw	13
 15468  000120  6EDF               	movwf	indf2,c
 15469                           
 15470                           ; BSR set to: 0
 15471                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15472  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15473  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15474  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15475  000128  0E01               	movlw	1
 15476  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15477  00012C  0E00               	movlw	0
 15478  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15479  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15480  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15481  000134  6ED9               	movwf	fsr2l,c
 15482  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15483  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15484  00013A  6EDA               	movwf	fsr2h,c
 15485  00013C  0E0A               	movlw	10
 15486  00013E  6EDF               	movwf	indf2,c
 15487                           
 15488                           ; BSR set to: 0
 15489                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15490  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15491  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15492  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15493  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15494  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15495  00014A  0F02               	addlw	2
 15496  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15497  00014E  ECB4  F032         	call	_putUSBUSART	;wreg free
 15498  000152                     l2400:
 15499                           
 15500                           ;term.c: 469: }
 15501                           ;term.c: 470: }
 15502                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15503                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15504                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15505  000152  0E53               	movlw	83
 15506  000154  010A               	movlb	10	; () banked
 15507  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15508  000158  A4D8               	btfss	status,2,c
 15509  00015A  D043               	goto	l2401
 15510                           
 15511                           ; BSR set to: 10
 15512  00015C  0E4F               	movlw	79
 15513  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15514  000160  A4D8               	btfss	status,2,c
 15515  000162  D03F               	goto	l2401
 15516                           
 15517                           ; BSR set to: 10
 15518  000164  0E3A               	movlw	58
 15519  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15520  000168  A4D8               	btfss	status,2,c
 15521  00016A  D03B               	goto	l2401
 15522                           
 15523                           ; BSR set to: 10
 15524                           ;term.c: 476: {
 15525                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15526  00016C  0E47               	movlw	71
 15527  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15528  000170  A4D8               	btfss	status,2,c
 15529  000172  0012               	return	
 15530                           
 15531                           ; BSR set to: 10
 15532  000174  0E3A               	movlw	58
 15533  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15534  000178  A4D8               	btfss	status,2,c
 15535  00017A  0012               	return	
 15536                           
 15537                           ; BSR set to: 10
 15538                           ;term.c: 479: {
 15539                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15540  00017C  0E44               	movlw	68
 15541  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15542  000180  A4D8               	btfss	status,2,c
 15543  000182  D015               	goto	l2403
 15544                           
 15545                           ; BSR set to: 10
 15546  000184  0E46               	movlw	70
 15547  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15548  000188  A4D8               	btfss	status,2,c
 15549  00018A  D011               	goto	l2403
 15550                           
 15551                           ; BSR set to: 10
 15552                           ;term.c: 482: {
 15553                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15554  00018C  0E41               	movlw	65
 15555  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15556  000190  A4D8               	btfss	status,2,c
 15557  000192  D004               	goto	l2404
 15558                           
 15559                           ; BSR set to: 10
 15560                           ;term.c: 484: {
 15561                           ;term.c: 485: FormatOption = 1u;
 15562  000194  0E01               	movlw	1
 15563  000196  0102               	movlb	2	; () banked
 15564  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15565                           
 15566                           ;term.c: 486: }
 15567  00019A  0012               	return	
 15568  00019C                     l2404:
 15569                           
 15570                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15571                           
 15572                           ; BSR set to: 2
 15573  00019C  0E42               	movlw	66
 15574  00019E  010A               	movlb	10	; () banked
 15575  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15576  0001A2  A4D8               	btfss	status,2,c
 15577  0001A4  0012               	return	
 15578                           
 15579                           ; BSR set to: 10
 15580                           ;term.c: 488: {
 15581                           ;term.c: 489: FormatOption = 0u;
 15582  0001A6  0E00               	movlw	0
 15583  0001A8  0102               	movlb	2	; () banked
 15584  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15585                           
 15586                           ; BSR set to: 2
 15587                           ;term.c: 490: }
 15588                           ;term.c: 491: }
 15589                           
 15590                           ; BSR set to: 2
 15591  0001AC  0012               	return	
 15592  0001AE                     l2403:
 15593                           
 15594                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15595                           
 15596                           ; BSR set to: 2
 15597  0001AE  0E45               	movlw	69
 15598  0001B0  010A               	movlb	10	; () banked
 15599  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15600  0001B4  A4D8               	btfss	status,2,c
 15601  0001B6  0012               	return	
 15602                           
 15603                           ; BSR set to: 10
 15604  0001B8  0E4D               	movlw	77
 15605  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15606  0001BC  A4D8               	btfss	status,2,c
 15607  0001BE  0012               	return	
 15608                           
 15609                           ; BSR set to: 10
 15610                           ;term.c: 494: {
 15611                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15612  0001C0  0E31               	movlw	49
 15613  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15614  0001C4  A4D8               	btfss	status,2,c
 15615  0001C6  D004               	goto	l2409
 15616                           
 15617                           ; BSR set to: 10
 15618                           ;term.c: 496: {
 15619                           ;term.c: 497: EchoOption = 1u;
 15620  0001C8  0E01               	movlw	1
 15621  0001CA  0102               	movlb	2	; () banked
 15622  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15623                           
 15624                           ;term.c: 498: }
 15625  0001CE  0012               	return	
 15626  0001D0                     l2409:
 15627                           
 15628                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15629                           
 15630                           ; BSR set to: 2
 15631  0001D0  0E30               	movlw	48
 15632  0001D2  010A               	movlb	10	; () banked
 15633  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15634  0001D6  A4D8               	btfss	status,2,c
 15635  0001D8  0012               	return	
 15636                           
 15637                           ; BSR set to: 10
 15638                           ;term.c: 500: {
 15639                           ;term.c: 501: EchoOption = 0u;
 15640  0001DA  0E00               	movlw	0
 15641  0001DC  0102               	movlb	2	; () banked
 15642  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15643                           
 15644                           ; BSR set to: 2
 15645                           ;term.c: 507: }
 15646                           ;term.c: 508: }
 15647                           ;term.c: 509: }
 15648                           
 15649                           ; BSR set to: 2
 15650                           
 15651                           ; BSR set to: 2
 15652                           
 15653                           ;term.c: 504: else
 15654                           ;term.c: 505: {
 15655                           
 15656                           ; BSR set to: 2
 15657                           
 15658                           ; BSR set to: 2
 15659                           ;term.c: 502: }
 15660                           ;term.c: 503: }
 15661                           
 15662                           ; BSR set to: 2
 15663  0001E0  0012               	return	
 15664  0001E2                     l2401:
 15665                           
 15666                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15667                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15668                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15669                           
 15670                           ; BSR set to: 2
 15671  0001E2  0E53               	movlw	83
 15672  0001E4  010A               	movlb	10	; () banked
 15673  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15674  0001E8  A4D8               	btfss	status,2,c
 15675  0001EA  D0D3               	goto	l2414
 15676                           
 15677                           ; BSR set to: 10
 15678  0001EC  0E42               	movlw	66
 15679  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15680  0001F0  A4D8               	btfss	status,2,c
 15681  0001F2  D0CF               	goto	l2414
 15682                           
 15683                           ; BSR set to: 10
 15684  0001F4  0E3A               	movlw	58
 15685  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15686  0001F8  A4D8               	btfss	status,2,c
 15687  0001FA  D0CB               	goto	l2414
 15688                           
 15689                           ; BSR set to: 10
 15690                           ;term.c: 513: {
 15691                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15692  0001FC  0E57               	movlw	87
 15693  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15694  000200  A4D8               	btfss	status,2,c
 15695  000202  D091               	goto	l2415
 15696                           
 15697                           ; BSR set to: 10
 15698  000204  0E3A               	movlw	58
 15699  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15700  000208  A4D8               	btfss	status,2,c
 15701  00020A  D08D               	goto	l2415
 15702                           
 15703                           ; BSR set to: 10
 15704                           ;term.c: 515: {
 15705                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15706  00020C  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15707                           
 15708                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15709  000210  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15710                           
 15711                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15712  000214  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15713                           
 15714                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15715  000218  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15716                           
 15717                           ; BSR set to: 10
 15718                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15719  00021C  0EAC               	movlw	low Terminal@Len
 15720  00021E  0100               	movlb	0	; () banked
 15721  000220  6F83               	movwf	atoi@s& (0+255),b
 15722  000222  0E03               	movlw	high Terminal@Len
 15723  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15724  000226  ECB1  F01C         	call	_atoi	;wreg free
 15725  00022A  0100               	movlb	0	; () banked
 15726  00022C  5183               	movf	?_atoi& (0+255),w,b
 15727  00022E  0102               	movlb	2	; () banked
 15728  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15729                           
 15730                           ; BSR set to: 2
 15731                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15732  000232  0EA8               	movlw	low Terminal@Addr
 15733  000234  0100               	movlb	0	; () banked
 15734  000236  6F83               	movwf	xtoi@s& (0+255),b
 15735  000238  0E03               	movlw	high Terminal@Addr
 15736  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15737  00023C  ECF2  F01A         	call	_xtoi	;wreg free
 15738  000240  0100               	movlb	0	; () banked
 15739  000242  5183               	movf	?_xtoi& (0+255),w,b
 15740  000244  0102               	movlb	2	; () banked
 15741  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15742                           
 15743                           ; BSR set to: 2
 15744                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15745  000248  0E00               	movlw	0
 15746  00024A  0100               	movlb	0	; () banked
 15747  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15748  00024E  D032               	goto	l2416
 15749  000250                     
 15750                           ;term.c: 527: {
 15751                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15752                           
 15753                           ; BSR set to: 0
 15754  000250  0100               	movlb	0	; () banked
 15755  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15756  000254  0D02               	mullw	2
 15757  000256  0E0B               	movlw	11
 15758  000258  26F3               	addwf	prodl,f,c
 15759  00025A  0E00               	movlw	0
 15760  00025C  22F4               	addwfc	prodh,f,c
 15761  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15762  000260  24F3               	addwf	prodl,w,c
 15763  000262  6ED9               	movwf	fsr2l,c
 15764  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15765  000266  20F4               	addwfc	prodh,w,c
 15766  000268  6EDA               	movwf	fsr2h,c
 15767  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15768  00026C  0D04               	mullw	4
 15769  00026E  0E66               	movlw	low Terminal@Payload
 15770  000270  24F3               	addwf	prodl,w,c
 15771  000272  6EE1               	movwf	fsr1l,c
 15772  000274  0E07               	movlw	high Terminal@Payload
 15773  000276  20F4               	addwfc	prodh,w,c
 15774  000278  6EE2               	movwf	fsr1h,c
 15775  00027A  CFDF FFE7          	movff	indf2,indf1
 15776                           
 15777                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15778  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15779  000280  0D02               	mullw	2
 15780  000282  0E0C               	movlw	12
 15781  000284  26F3               	addwf	prodl,f,c
 15782  000286  0E00               	movlw	0
 15783  000288  22F4               	addwfc	prodh,f,c
 15784  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15785  00028C  24F3               	addwf	prodl,w,c
 15786  00028E  6ED9               	movwf	fsr2l,c
 15787  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15788  000292  20F4               	addwfc	prodh,w,c
 15789  000294  6EDA               	movwf	fsr2h,c
 15790  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15791  000298  0D04               	mullw	4
 15792  00029A  0E01               	movlw	1
 15793  00029C  26F3               	addwf	prodl,f,c
 15794  00029E  0E00               	movlw	0
 15795  0002A0  22F4               	addwfc	prodh,f,c
 15796  0002A2  0E66               	movlw	low Terminal@Payload
 15797  0002A4  24F3               	addwf	prodl,w,c
 15798  0002A6  6EE1               	movwf	fsr1l,c
 15799  0002A8  0E07               	movlw	high Terminal@Payload
 15800  0002AA  20F4               	addwfc	prodh,w,c
 15801  0002AC  6EE2               	movwf	fsr1h,c
 15802  0002AE  CFDF FFE7          	movff	indf2,indf1
 15803                           
 15804                           ; BSR set to: 0
 15805  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15806  0002B4                     l2416:
 15807                           
 15808                           ; BSR set to: 0
 15809                           
 15810                           ; BSR set to: 0
 15811  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15812  0002B6  0102               	movlb	2	; () banked
 15813  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15814  0002BA  B0D8               	btfsc	status,0,c
 15815  0002BC  D7C9               	goto	l2417
 15816                           
 15817                           ; BSR set to: 2
 15818                           ;term.c: 530: }
 15819                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15820                           
 15821                           ; BSR set to: 2
 15822  0002BE  0E00               	movlw	0
 15823  0002C0  0100               	movlb	0	; () banked
 15824  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15825  0002C4  D01F               	goto	l2419
 15826  0002C6                     
 15827                           ;term.c: 533: {
 15828                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15829                           
 15830                           ; BSR set to: 0
 15831  0002C6  0100               	movlb	0	; () banked
 15832  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15833  0002CA  0D04               	mullw	4
 15834  0002CC  0E66               	movlw	low Terminal@Payload
 15835  0002CE  24F3               	addwf	prodl,w,c
 15836  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15837  0002D2  0E07               	movlw	high Terminal@Payload
 15838  0002D4  20F4               	addwfc	prodh,w,c
 15839  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15840  0002D8  0E00               	movlw	0
 15841  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15842  0002DC  0E00               	movlw	0
 15843  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15844  0002E0  0E00               	movlw	0
 15845  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15846  0002E4  0E10               	movlw	16
 15847  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15848  0002E8  EC85  F00D         	call	_strtol	;wreg free
 15849  0002EC  0100               	movlb	0	; () banked
 15850  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15851  0002F0  0D01               	mullw	1
 15852  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15853  0002F4  24F3               	addwf	prodl,w,c
 15854  0002F6  6ED9               	movwf	fsr2l,c
 15855  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15856  0002FA  20F4               	addwfc	prodh,w,c
 15857  0002FC  6EDA               	movwf	fsr2h,c
 15858  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15859                           
 15860                           ; BSR set to: 0
 15861  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15862  000304                     l2419:
 15863                           
 15864                           ; BSR set to: 0
 15865                           
 15866                           ; BSR set to: 0
 15867  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15868  000306  0102               	movlb	2	; () banked
 15869  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15870  00030A  B0D8               	btfsc	status,0,c
 15871  00030C  D7DC               	goto	l2420
 15872                           
 15873                           ; BSR set to: 2
 15874                           ;term.c: 539: }
 15875                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15876                           
 15877                           ; BSR set to: 2
 15878  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15879  000310  0100               	movlb	0	; () banked
 15880  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15881  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15882  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15883  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15884  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15885  000320  EC19  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 15886                           
 15887                           ;term.c: 543: }
 15888  000324  0012               	return	
 15889  000326                     l2415:
 15890                           
 15891                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15892  000326  0E52               	movlw	82
 15893  000328  010A               	movlb	10	; () banked
 15894  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15895  00032C  A4D8               	btfss	status,2,c
 15896  00032E  0012               	return	
 15897                           
 15898                           ; BSR set to: 10
 15899  000330  0E3A               	movlw	58
 15900  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15901  000334  A4D8               	btfss	status,2,c
 15902  000336  0012               	return	
 15903                           
 15904                           ; BSR set to: 10
 15905                           ;term.c: 545: {
 15906                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15907  000338  CA05  F3AC         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15908                           
 15909                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15910  00033C  CA06  F3AD         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15911                           
 15912                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15913  000340  CA08  F3A8         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15914                           
 15915                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15916  000344  CA09  F3A9         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15917                           
 15918                           ; BSR set to: 10
 15919                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15920  000348  0EAC               	movlw	low Terminal@Len
 15921  00034A  0100               	movlb	0	; () banked
 15922  00034C  6F83               	movwf	atoi@s& (0+255),b
 15923  00034E  0E03               	movlw	high Terminal@Len
 15924  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15925  000352  ECB1  F01C         	call	_atoi	;wreg free
 15926  000356  0100               	movlb	0	; () banked
 15927  000358  5183               	movf	?_atoi& (0+255),w,b
 15928  00035A  0102               	movlb	2	; () banked
 15929  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15930                           
 15931                           ; BSR set to: 2
 15932                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15933  00035E  0EA8               	movlw	low Terminal@Addr
 15934  000360  0100               	movlb	0	; () banked
 15935  000362  6F83               	movwf	xtoi@s& (0+255),b
 15936  000364  0E03               	movlw	high Terminal@Addr
 15937  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15938  000368  ECF2  F01A         	call	_xtoi	;wreg free
 15939  00036C  0100               	movlb	0	; () banked
 15940  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15941  000370  0102               	movlb	2	; () banked
 15942  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15943                           
 15944                           ; BSR set to: 2
 15945                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15946  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15947  000376  0100               	movlb	0	; () banked
 15948  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15949  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15950  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15951  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15952  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15953  000386  EC9A  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15954                           
 15955                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15956  00038A  0E01               	movlw	1
 15957  00038C  0102               	movlb	2	; () banked
 15958  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15959                           
 15960                           ; BSR set to: 2
 15961                           ;term.c: 561: }
 15962                           ;term.c: 562: }
 15963                           
 15964                           ; BSR set to: 2
 15965  000390  0012               	return	
 15966  000392                     l2414:
 15967                           
 15968                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15969                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15970                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15971                           
 15972                           ; BSR set to: 2
 15973  000392  0E54               	movlw	84
 15974  000394  010A               	movlb	10	; () banked
 15975  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15976  000398  A4D8               	btfss	status,2,c
 15977  00039A  0012               	return	
 15978                           
 15979                           ; BSR set to: 10
 15980  00039C  0E45               	movlw	69
 15981  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15982  0003A0  A4D8               	btfss	status,2,c
 15983  0003A2  0012               	return	
 15984                           
 15985                           ; BSR set to: 10
 15986  0003A4  0E4C               	movlw	76
 15987  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15988  0003A8  A4D8               	btfss	status,2,c
 15989  0003AA  0012               	return	
 15990                           
 15991                           ; BSR set to: 10
 15992                           ;term.c: 566: {
 15993                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15994  0003AC  CA03  F3AC         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15995                           
 15996                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15997  0003B0  CA04  F3AD         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15998                           
 15999                           ; BSR set to: 10
 16000                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 16001  0003B4  0EAC               	movlw	low Terminal@Len
 16002  0003B6  0100               	movlb	0	; () banked
 16003  0003B8  6F83               	movwf	atoi@s& (0+255),b
 16004  0003BA  0E03               	movlw	high Terminal@Len
 16005  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 16006  0003BE  ECB1  F01C         	call	_atoi	;wreg free
 16007  0003C2  C083  F31A         	movff	?_atoi,_UsbMasterPhoneNumberLen
 16008  0003C6  C084  F31B         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 16009                           
 16010                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 16011  0003CA  0E00               	movlw	0
 16012  0003CC  0100               	movlb	0	; () banked
 16013  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 16014  0003D0  D018               	goto	l2426
 16015  0003D2                     
 16016                           ; BSR set to: 0
 16017                           ;term.c: 573: {
 16018                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 16019                           
 16020                           ; BSR set to: 0
 16021  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 16022  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 16023  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16024  0003D8  0E05               	movlw	5
 16025  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 16026  0003DC  0E00               	movlw	0
 16027  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16028  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 16029  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 16030  0003E4  6ED9               	movwf	fsr2l,c
 16031  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 16032  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16033  0003EA  6EDA               	movwf	fsr2h,c
 16034  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 16035  0003EE  0D01               	mullw	1
 16036  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 16037  0003F2  24F3               	addwf	prodl,w,c
 16038  0003F4  6EE1               	movwf	fsr1l,c
 16039  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 16040  0003F8  20F4               	addwfc	prodh,w,c
 16041  0003FA  6EE2               	movwf	fsr1h,c
 16042  0003FC  CFDF FFE7          	movff	indf2,indf1
 16043                           
 16044                           ; BSR set to: 0
 16045  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 16046  000402                     l2426:
 16047                           
 16048                           ; BSR set to: 0
 16049                           
 16050                           ; BSR set to: 0
 16051  000402  51A4               	movf	Terminal@i& (0+255),w,b
 16052  000404  6FA2               	movwf	??_Terminal& (0+255),b
 16053  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16054  000408  0103               	movlb	3	; () banked
 16055  00040A  511A               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 16056  00040C  0100               	movlb	0	; () banked
 16057  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 16058  000410  0103               	movlb	3	; () banked
 16059  000412  511B               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 16060  000414  0100               	movlb	0	; () banked
 16061  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 16062  000418  B0D8               	btfsc	status,0,c
 16063  00041A  0012               	return	
 16064  00041C  D7DA               	goto	l2427
 16065  00041E                     
 16066                           ;term.c: 619: if((cdc_trf_state == 0))
 16067                           
 16068                           ; BSR set to: 0
 16069  00041E  0100               	movlb	0	; () banked
 16070  000420  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16071  000422  A4D8               	btfss	status,2,c
 16072  000424  0012               	return	
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;term.c: 620: {
 16076                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 16077  000426  0E53               	movlw	83
 16078  000428  0102               	movlb	2	; () banked
 16079  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 16080                           
 16081                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 16082  00042C  0E42               	movlw	66
 16083  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 16084                           
 16085                           ;term.c: 623: UsbTxBuffer[2] = '[';
 16086  000430  0E5B               	movlw	91
 16087  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 16088                           
 16089                           ; BSR set to: 2
 16090                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 16091  000434  C3A8  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 16092                           
 16093                           ; BSR set to: 2
 16094                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 16095  000438  C3A9  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 16096                           
 16097                           ;term.c: 626: UsbTxBuffer[5] = ']';
 16098  00043C  0E5D               	movlw	93
 16099  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 16100                           
 16101                           ;term.c: 627: UsbTxBuffer[6] = ':';
 16102  000440  0E3A               	movlw	58
 16103  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 16104                           
 16105                           ; BSR set to: 2
 16106                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 16107  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 16108  000446  0100               	movlb	0	; () banked
 16109  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 16110  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 16111  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16112  00044E  0E07               	movlw	7
 16113  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 16114  000452  ECB4  F032         	call	_putUSBUSART	;wreg free
 16115                           
 16116                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 16117  000456  0E02               	movlw	2
 16118  000458  0102               	movlb	2	; () banked
 16119  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 16120                           
 16121                           ; BSR set to: 2
 16122                           ;term.c: 632: }
 16123                           ;term.c: 633: break;
 16124  00045C  0012               	return	
 16125  00045E                     
 16126                           ; BSR set to: 2
 16127                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 16128                           
 16129                           ; BSR set to: 2
 16130  00045E  ECD6  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 16131  000462  06E8               	decf	wreg,f,c
 16132  000464  A4D8               	btfss	status,2,c
 16133  000466  D088               	goto	l2435
 16134                           
 16135                           ;term.c: 638: {
 16136                           ;term.c: 640: if (FormatOption == 1u)
 16137  000468  0102               	movlb	2	; () banked
 16138  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16139  00046C  A4D8               	btfss	status,2,c
 16140  00046E  D027               	goto	u13960
 16141                           
 16142                           ; BSR set to: 2
 16143                           ;term.c: 641: {
 16144                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 16145  000470  0E00               	movlw	0
 16146  000472  0100               	movlb	0	; () banked
 16147  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 16148  000476  D01E               	goto	l2437
 16149  000478                     
 16150                           ;term.c: 644: {
 16151                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 16152                           
 16153                           ; BSR set to: 0
 16154  000478  0100               	movlb	0	; () banked
 16155  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 16156  00047C  0D04               	mullw	4
 16157  00047E  0E66               	movlw	low Terminal@Payload
 16158  000480  24F3               	addwf	prodl,w,c
 16159  000482  6F93               	movwf	itoa@buf& (0+255),b
 16160  000484  0E07               	movlw	high Terminal@Payload
 16161  000486  20F4               	addwfc	prodh,w,c
 16162  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 16163  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 16164  00048C  0D01               	mullw	1
 16165  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 16166  000490  24F3               	addwf	prodl,w,c
 16167  000492  6ED9               	movwf	fsr2l,c
 16168  000494  0E05               	movlw	high Terminal@TermRxBuffer
 16169  000496  20F4               	addwfc	prodh,w,c
 16170  000498  6EDA               	movwf	fsr2h,c
 16171  00049A  50DF               	movf	indf2,w,c
 16172  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 16173  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 16174  0004A0  6F95               	movwf	itoa@val& (0+255),b
 16175  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 16176  0004A4  0E00               	movlw	0
 16177  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 16178  0004A8  0E0A               	movlw	10
 16179  0004AA  6F97               	movwf	itoa@base& (0+255),b
 16180  0004AC  EC34  F02F         	call	_itoa	;wreg free
 16181  0004B0  0100               	movlb	0	; () banked
 16182  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 16183  0004B4                     l2437:
 16184                           
 16185                           ; BSR set to: 0
 16186                           
 16187                           ; BSR set to: 0
 16188  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 16189  0004B6  0102               	movlb	2	; () banked
 16190  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 16191  0004BA  B0D8               	btfsc	status,0,c
 16192  0004BC  D7DD               	goto	l2438
 16193  0004BE                     u13960:
 16194                           
 16195                           ; BSR set to: 2
 16196                           ;term.c: 646: }
 16197                           ;term.c: 647: }
 16198                           ;term.c: 650: if((cdc_trf_state == 0))
 16199                           
 16200                           ; BSR set to: 2
 16201                           
 16202                           ; BSR set to: 2
 16203  0004BE  0100               	movlb	0	; () banked
 16204  0004C0  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16205  0004C2  A4D8               	btfss	status,2,c
 16206  0004C4  0012               	return	
 16207                           
 16208                           ; BSR set to: 0
 16209                           ;term.c: 651: {
 16210                           ;term.c: 653: if (FormatOption == 1u)
 16211  0004C6  0102               	movlb	2	; () banked
 16212  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 16213  0004CA  A4D8               	btfss	status,2,c
 16214  0004CC  D02B               	goto	l2441
 16215                           
 16216                           ; BSR set to: 2
 16217                           ;term.c: 654: {
 16218                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 16219  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16220  0004D0  0D08               	mullw	8
 16221  0004D2  0E03               	movlw	3
 16222  0004D4  26F3               	addwf	prodl,f,c
 16223  0004D6  0E00               	movlw	0
 16224  0004D8  22F4               	addwfc	prodh,f,c
 16225  0004DA  0E66               	movlw	low Terminal@Payload
 16226  0004DC  24F3               	addwf	prodl,w,c
 16227  0004DE  6ED9               	movwf	fsr2l,c
 16228  0004E0  0E07               	movlw	high Terminal@Payload
 16229  0004E2  20F4               	addwfc	prodh,w,c
 16230  0004E4  6EDA               	movwf	fsr2h,c
 16231  0004E6  0E0D               	movlw	13
 16232  0004E8  6EDF               	movwf	indf2,c
 16233                           
 16234                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 16235  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16236  0004EC  0D08               	mullw	8
 16237  0004EE  0E02               	movlw	2
 16238  0004F0  26F3               	addwf	prodl,f,c
 16239  0004F2  0E00               	movlw	0
 16240  0004F4  22F4               	addwfc	prodh,f,c
 16241  0004F6  0E66               	movlw	low Terminal@Payload
 16242  0004F8  24F3               	addwf	prodl,w,c
 16243  0004FA  6ED9               	movwf	fsr2l,c
 16244  0004FC  0E07               	movlw	high Terminal@Payload
 16245  0004FE  20F4               	addwfc	prodh,w,c
 16246  000500  6EDA               	movwf	fsr2h,c
 16247  000502  0E0A               	movlw	10
 16248  000504  6EDF               	movwf	indf2,c
 16249                           
 16250                           ; BSR set to: 2
 16251                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 16252  000506  0E66               	movlw	low Terminal@Payload
 16253  000508  0100               	movlb	0	; () banked
 16254  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 16255  00050C  0E07               	movlw	high Terminal@Payload
 16256  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16257  000510  0102               	movlb	2	; () banked
 16258  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16259  000514  0D02               	mullw	2
 16260  000516  50F3               	movf	prodl,w,c
 16261  000518  0F04               	addlw	4
 16262  00051A  0100               	movlb	0	; () banked
 16263  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 16264  00051E  ECB4  F032         	call	_putUSBUSART	;wreg free
 16265                           
 16266                           ;term.c: 659: }
 16267  000522  D026               	goto	l2442
 16268  000524                     l2441:
 16269                           
 16270                           ;term.c: 660: else
 16271                           ;term.c: 661: {
 16272                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 16273  000524  0102               	movlb	2	; () banked
 16274  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16275  000528  0D01               	mullw	1
 16276  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 16277  00052C  24F3               	addwf	prodl,w,c
 16278  00052E  6ED9               	movwf	fsr2l,c
 16279  000530  0E05               	movlw	high Terminal@TermRxBuffer
 16280  000532  20F4               	addwfc	prodh,w,c
 16281  000534  6EDA               	movwf	fsr2h,c
 16282  000536  0E0D               	movlw	13
 16283  000538  6EDF               	movwf	indf2,c
 16284                           
 16285                           ; BSR set to: 2
 16286                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 16287  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16288  00053C  0100               	movlb	0	; () banked
 16289  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 16290  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 16291  000542  0E01               	movlw	1
 16292  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 16293  000546  0E00               	movlw	0
 16294  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 16295  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 16296  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 16297  00054E  6ED9               	movwf	fsr2l,c
 16298  000550  0E05               	movlw	high Terminal@TermRxBuffer
 16299  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 16300  000554  6EDA               	movwf	fsr2h,c
 16301  000556  0E0A               	movlw	10
 16302  000558  6EDF               	movwf	indf2,c
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 16306  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 16307  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 16308  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 16309  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16310  000562  0102               	movlb	2	; () banked
 16311  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 16312  000566  0F02               	addlw	2
 16313  000568  0100               	movlb	0	; () banked
 16314  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 16315  00056C  ECB4  F032         	call	_putUSBUSART	;wreg free
 16316  000570                     l2442:
 16317                           
 16318                           ;term.c: 666: }
 16319                           ;term.c: 668: TermState = Term_GetData;
 16320  000570  0E00               	movlw	0
 16321  000572  0102               	movlb	2	; () banked
 16322  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 16323                           
 16324                           ; BSR set to: 2
 16325                           ;term.c: 669: }
 16326                           ;term.c: 670: }
 16327  000576  0012               	return	
 16328  000578                     l2435:
 16329                           
 16330                           ;term.c: 671: else
 16331                           ;term.c: 672: {
 16332                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 16333                           
 16334                           ; BSR set to: 2
 16335  000578  0EC0               	movlw	low Terminal@SwTimer
 16336  00057A  0100               	movlb	0	; () banked
 16337  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 16338  00057E  0E04               	movlw	high Terminal@SwTimer
 16339  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 16340  000582  0EB8               	movlw	184
 16341  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 16342  000586  0E0B               	movlw	11
 16343  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 16344  00058A  0E00               	movlw	0
 16345  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 16346  00058E  0E00               	movlw	0
 16347  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 16348  000592  EC63  F028         	call	_OsTmr_Wait	;wreg free
 16349  000596  06E8               	decf	wreg,f,c
 16350  000598  A4D8               	btfss	status,2,c
 16351  00059A  0012               	return	
 16352                           
 16353                           ;term.c: 675: {
 16354                           ;term.c: 677: if((cdc_trf_state == 0))
 16355  00059C  0100               	movlb	0	; () banked
 16356  00059E  51C5               	movf	_cdc_trf_state& (0+255),w,b
 16357  0005A0  A4D8               	btfss	status,2,c
 16358  0005A2  0012               	return	
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;term.c: 678: {
 16362                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 16363  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 16364  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 16365  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 16366  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 16367  0005AC  0E5F               	movlw	low STR_21
 16368  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 16369  0005B0  0EFE               	movlw	high STR_21
 16370  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 16371  0005B4  EC18  F031         	call	_strcpy	;wreg free
 16372                           
 16373                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 16374  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 16375  0005BA  0100               	movlb	0	; () banked
 16376  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 16377  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 16378  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 16379  0005C2  0E29               	movlw	41
 16380  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 16381  0005C6  ECB4  F032         	call	_putUSBUSART	;wreg free
 16382                           
 16383                           ;term.c: 682: TermState = Term_GetData;
 16384  0005CA  0E00               	movlw	0
 16385  0005CC  0102               	movlb	2	; () banked
 16386  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 16387                           
 16388                           ; BSR set to: 2
 16389                           ;term.c: 693: }
 16390                           
 16391                           ; BSR set to: 2
 16392                           ;term.c: 692: break;
 16393                           
 16394                           ;term.c: 691: default:
 16395                           
 16396                           ; BSR set to: 2
 16397                           ;term.c: 689: break;
 16398                           
 16399                           ;term.c: 688: case Term_ReadSlvUartData:
 16400                           
 16401                           ; BSR set to: 2
 16402                           ;term.c: 683: }
 16403                           ;term.c: 684: }
 16404                           ;term.c: 685: }
 16405                           ;term.c: 686: break;
 16406                           
 16407                           ; BSR set to: 2
 16408                           
 16409                           ; BSR set to: 2
 16410  0005D0  0012               	return	
 16411  0005D2                     l2396:
 16412                           
 16413                           ; BSR set to: 2
 16414  0005D2  0102               	movlb	2	; () banked
 16415  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16416                           
 16417                           ; Switch size 1, requested type "space"
 16418                           ; Number of cases is 4, Range of values is 0 to 3
 16419                           ; switch strategies available:
 16420                           ; Name         Instructions Cycles
 16421                           ; simple_byte           13     7 (average)
 16422                           ;	Chosen strategy is simple_byte
 16423  0005D6  0A00               	xorlw	0	; case 0
 16424  0005D8  B4D8               	btfsc	status,2,c
 16425  0005DA  D583               	goto	l2397
 16426  0005DC  0A01               	xorlw	1	; case 1
 16427  0005DE  B4D8               	btfsc	status,2,c
 16428  0005E0  D71E               	goto	l2432
 16429  0005E2  0A03               	xorlw	3	; case 2
 16430  0005E4  B4D8               	btfsc	status,2,c
 16431  0005E6  D73B               	goto	l2434
 16432  0005E8  0A01               	xorlw	1	; case 3
 16433  0005EA  0012               	return	
 16434  0005EC                     __end_of_Terminal:
 16435                           	opt stack 0
 16436                           tosu	equ	0xFFF
 16437                           tosh	equ	0xFFE
 16438                           tosl	equ	0xFFD
 16439                           pclath	equ	0xFFA
 16440                           tblptru	equ	0xFF8
 16441                           tblptrh	equ	0xFF7
 16442                           tblptrl	equ	0xFF6
 16443                           tablat	equ	0xFF5
 16444                           prodh	equ	0xFF4
 16445                           prodl	equ	0xFF3
 16446                           intcon	equ	0xFF2
 16447                           intcon2	equ	0xFF1
 16448                           intcon3	equ	0xFF0
 16449                           indf0	equ	0xFEF
 16450                           postinc0	equ	0xFEE
 16451                           plusw0	equ	0xFEB
 16452                           fsr0h	equ	0xFEA
 16453                           fsr0l	equ	0xFE9
 16454                           wreg	equ	0xFE8
 16455                           indf1	equ	0xFE7
 16456                           postinc1	equ	0xFE6
 16457                           postdec1	equ	0xFE5
 16458                           fsr1h	equ	0xFE2
 16459                           fsr1l	equ	0xFE1
 16460                           indf2	equ	0xFDF
 16461                           postinc2	equ	0xFDE
 16462                           postdec2	equ	0xFDD
 16463                           plusw2	equ	0xFDB
 16464                           fsr2h	equ	0xFDA
 16465                           fsr2l	equ	0xFD9
 16466                           status	equ	0xFD8
 16467                           
 16468 ;; *************** function _xtoi *****************
 16469 ;; Defined at:
 16470 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16473 ;;		 -> Terminal@Addr(4), 
 16474 ;; Auto vars:     Size  Location     Type
 16475 ;;  val             2   40[BANK0 ] unsigned int 
 16476 ;;  c               1   42[BANK0 ] unsigned char 
 16477 ;;  sign            1   39[BANK0 ] unsigned char 
 16478 ;; Return value:  Size  Location     Type
 16479 ;;                  2   35[BANK0 ] unsigned int 
 16480 ;; Registers used:
 16481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16482 ;; Tracked objects:
 16483 ;;		On entry : 0/0
 16484 ;;		On exit  : 0/0
 16485 ;;		Unchanged: 0/0
 16486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16491 ;;Total ram usage:        8 bytes
 16492 ;; Hardware stack levels used:    1
 16493 ;; Hardware stack levels required when called:   13
 16494 ;; This function calls:
 16495 ;;		_isdigit
 16496 ;;		_isspace
 16497 ;;		_isupper
 16498 ;;		_isxdigit
 16499 ;;		_tolower
 16500 ;; This function is called by:
 16501 ;;		_Terminal
 16502 ;; This function uses a non-reentrant model
 16503 ;;
 16504                           
 16505                           	psect	text61
 16506  0035E4                     __ptext61:
 16507                           	opt stack 0
 16508  0035E4                     _xtoi:
 16509                           	opt stack 12
 16510                           
 16511                           ;incstack = 0
 16512  0035E4  0E00               	movlw	0
 16513  0035E6  0100               	movlb	0	; () banked
 16514  0035E8  6F87               	movwf	xtoi@sign& (0+255),b
 16515  0035EA  0E00               	movlw	0
 16516  0035EC  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16517  0035EE  0E00               	movlw	0
 16518  0035F0  6F88               	movwf	xtoi@val& (0+255),b
 16519  0035F2  D003               	goto	l3500
 16520  0035F4                     
 16521                           ; BSR set to: 0
 16522  0035F4  0100               	movlb	0	; () banked
 16523  0035F6  4B83               	infsnz	xtoi@s& (0+255),f,b
 16524  0035F8  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16525  0035FA                     l3500:
 16526                           
 16527                           ; BSR set to: 0
 16528                           
 16529                           ; BSR set to: 0
 16530  0035FA  C083  FFD9         	movff	xtoi@s,fsr2l
 16531  0035FE  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16532  003602  50DF               	movf	indf2,w,c
 16533  003604  ECEA  F031         	call	_isspace
 16534  003608  B0D8               	btfsc	status,0,c
 16535  00360A  D7F4               	goto	l3501
 16536  00360C  C083  FFD9         	movff	xtoi@s,fsr2l
 16537  003610  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16538  003614  0E2D               	movlw	45
 16539  003616  18DE               	xorwf	postinc2,w,c
 16540  003618  A4D8               	btfss	status,2,c
 16541  00361A  D003               	goto	l3503
 16542  00361C  0100               	movlb	0	; () banked
 16543  00361E  2B87               	incf	xtoi@sign& (0+255),f,b
 16544  003620  D009               	goto	L15
 16545  003622                     l3503:
 16546                           
 16547                           ; BSR set to: 0
 16548  003622  C083  FFD9         	movff	xtoi@s,fsr2l
 16549  003626  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16550  00362A  0E2B               	movlw	43
 16551  00362C  18DE               	xorwf	postinc2,w,c
 16552  00362E  A4D8               	btfss	status,2,c
 16553  003630  D028               	goto	l3506
 16554  003632  0100               	movlb	0	; () banked
 16555  003634                     L15:
 16556  003634  4B83               	infsnz	xtoi@s& (0+255),f,b
 16557  003636  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16558                           
 16559                           ; BSR set to: 0
 16560                           
 16561                           ; BSR set to: 0
 16562  003638  D024               	goto	l3506
 16563  00363A                     
 16564                           ; BSR set to: 0
 16565  00363A  0100               	movlb	0	; () banked
 16566  00363C  518A               	movf	xtoi@c& (0+255),w,b
 16567  00363E  ECA3  F032         	call	_isupper
 16568  003642  A0D8               	btfss	status,0,c
 16569  003644  D006               	goto	l3508
 16570  003646  0100               	movlb	0	; () banked
 16571  003648  518A               	movf	xtoi@c& (0+255),w,b
 16572  00364A  EC85  F033         	call	_tolower
 16573  00364E  0100               	movlb	0	; () banked
 16574  003650  6F8A               	movwf	xtoi@c& (0+255),b
 16575  003652                     l3508:
 16576  003652  0100               	movlb	0	; () banked
 16577  003654  518A               	movf	xtoi@c& (0+255),w,b
 16578  003656  ECC5  F032         	call	_isdigit
 16579  00365A  A0D8               	btfss	status,0,c
 16580  00365C  D002               	goto	l3509
 16581  00365E  0E30               	movlw	48
 16582  003660  D001               	goto	L14
 16583  003662                     l3509:
 16584                           
 16585                           ; BSR set to: 0
 16586  003662  0E57               	movlw	87
 16587  003664                     L14:
 16588  003664  0100               	movlb	0	; () banked
 16589  003666  5F8A               	subwf	xtoi@c& (0+255),f,b
 16590                           
 16591                           ; BSR set to: 0
 16592  003668  3B88               	swapf	xtoi@val& (0+255),f,b
 16593  00366A  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16594  00366C  0EF0               	movlw	240
 16595  00366E  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16596  003670  5188               	movf	xtoi@val& (0+255),w,b
 16597  003672  0B0F               	andlw	15
 16598  003674  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16599  003676  0EF0               	movlw	240
 16600  003678  1788               	andwf	xtoi@val& (0+255),f,b
 16601  00367A  518A               	movf	xtoi@c& (0+255),w,b
 16602  00367C  2788               	addwf	xtoi@val& (0+255),f,b
 16603  00367E  0E00               	movlw	0
 16604  003680  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16605  003682                     l3506:
 16606                           
 16607                           ; BSR set to: 0
 16608  003682  C083  FFD9         	movff	xtoi@s,fsr2l
 16609  003686  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16610  00368A  0100               	movlb	0	; () banked
 16611  00368C  4B83               	infsnz	xtoi@s& (0+255),f,b
 16612  00368E  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16613  003690  50DF               	movf	indf2,w,c
 16614  003692  6F8A               	movwf	xtoi@c& (0+255),b
 16615  003694  518A               	movf	xtoi@c& (0+255),w,b
 16616  003696  EC57  F030         	call	_isxdigit
 16617  00369A  B0D8               	btfsc	status,0,c
 16618  00369C  D7CE               	goto	l3507
 16619  00369E  0100               	movlb	0	; () banked
 16620  0036A0  5187               	movf	xtoi@sign& (0+255),w,b
 16621  0036A2  B4D8               	btfsc	status,2,c
 16622  0036A4  D00D               	goto	l3512
 16623                           
 16624                           ; BSR set to: 0
 16625  0036A6  C088  F085         	movff	xtoi@val,??_xtoi
 16626  0036AA  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16627  0036AE  1F85               	comf	??_xtoi& (0+255),f,b
 16628  0036B0  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16629  0036B2  4B85               	infsnz	??_xtoi& (0+255),f,b
 16630  0036B4  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16631  0036B6  C085  F083         	movff	??_xtoi,?_xtoi
 16632  0036BA  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16633  0036BE  0012               	return	
 16634  0036C0                     l3512:
 16635                           
 16636                           ; BSR set to: 0
 16637  0036C0  C088  F083         	movff	xtoi@val,?_xtoi
 16638  0036C4  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16639                           
 16640                           ; BSR set to: 0
 16641  0036C8  0012               	return		;funcret
 16642  0036CA                     __end_of_xtoi:
 16643                           	opt stack 0
 16644                           tosu	equ	0xFFF
 16645                           tosh	equ	0xFFE
 16646                           tosl	equ	0xFFD
 16647                           pclath	equ	0xFFA
 16648                           tblptru	equ	0xFF8
 16649                           tblptrh	equ	0xFF7
 16650                           tblptrl	equ	0xFF6
 16651                           tablat	equ	0xFF5
 16652                           prodh	equ	0xFF4
 16653                           prodl	equ	0xFF3
 16654                           intcon	equ	0xFF2
 16655                           intcon2	equ	0xFF1
 16656                           intcon3	equ	0xFF0
 16657                           indf0	equ	0xFEF
 16658                           postinc0	equ	0xFEE
 16659                           plusw0	equ	0xFEB
 16660                           fsr0h	equ	0xFEA
 16661                           fsr0l	equ	0xFE9
 16662                           wreg	equ	0xFE8
 16663                           indf1	equ	0xFE7
 16664                           postinc1	equ	0xFE6
 16665                           postdec1	equ	0xFE5
 16666                           fsr1h	equ	0xFE2
 16667                           fsr1l	equ	0xFE1
 16668                           indf2	equ	0xFDF
 16669                           postinc2	equ	0xFDE
 16670                           postdec2	equ	0xFDD
 16671                           plusw2	equ	0xFDB
 16672                           fsr2h	equ	0xFDA
 16673                           fsr2l	equ	0xFD9
 16674                           status	equ	0xFD8
 16675                           
 16676 ;; *************** function _tolower *****************
 16677 ;; Defined at:
 16678 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;  c               1    wreg     unsigned char 
 16681 ;; Auto vars:     Size  Location     Type
 16682 ;;  c               1   29[BANK0 ] unsigned char 
 16683 ;; Return value:  Size  Location     Type
 16684 ;;                  1    wreg      unsigned char 
 16685 ;; Registers used:
 16686 ;;		wreg, status,2, status,0
 16687 ;; Tracked objects:
 16688 ;;		On entry : 0/0
 16689 ;;		On exit  : 0/0
 16690 ;;		Unchanged: 0/0
 16691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16693 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16695 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16696 ;;Total ram usage:        1 bytes
 16697 ;; Hardware stack levels used:    1
 16698 ;; Hardware stack levels required when called:   11
 16699 ;; This function calls:
 16700 ;;		Nothing
 16701 ;; This function is called by:
 16702 ;;		_xtoi
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           	psect	text62
 16707  00670A                     __ptext62:
 16708                           	opt stack 0
 16709  00670A                     _tolower:
 16710                           	opt stack 13
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;incstack = 0
 16714                           ;tolower@c stored from wreg
 16715  00670A  0100               	movlb	0	; () banked
 16716  00670C  6F7D               	movwf	tolower@c& (0+255),b
 16717  00670E  0E5B               	movlw	91
 16718  006710  0100               	movlb	0	; () banked
 16719  006712  617D               	cpfslt	tolower@c& (0+255),b
 16720  006714  D004               	goto	l3559
 16721                           
 16722                           ; BSR set to: 0
 16723  006716  0E40               	movlw	64
 16724  006718  657D               	cpfsgt	tolower@c& (0+255),b
 16725  00671A  D001               	goto	l3559
 16726                           
 16727                           ; BSR set to: 0
 16728  00671C  8B7D               	bsf	tolower@c& (0+255),5,b
 16729  00671E                     l3559:
 16730                           
 16731                           ; BSR set to: 0
 16732                           
 16733                           ; BSR set to: 0
 16734  00671E  517D               	movf	tolower@c& (0+255),w,b
 16735  006720  0012               	return	
 16736  006722                     __end_of_tolower:
 16737                           	opt stack 0
 16738                           tosu	equ	0xFFF
 16739                           tosh	equ	0xFFE
 16740                           tosl	equ	0xFFD
 16741                           pclath	equ	0xFFA
 16742                           tblptru	equ	0xFF8
 16743                           tblptrh	equ	0xFF7
 16744                           tblptrl	equ	0xFF6
 16745                           tablat	equ	0xFF5
 16746                           prodh	equ	0xFF4
 16747                           prodl	equ	0xFF3
 16748                           intcon	equ	0xFF2
 16749                           intcon2	equ	0xFF1
 16750                           intcon3	equ	0xFF0
 16751                           indf0	equ	0xFEF
 16752                           postinc0	equ	0xFEE
 16753                           plusw0	equ	0xFEB
 16754                           fsr0h	equ	0xFEA
 16755                           fsr0l	equ	0xFE9
 16756                           wreg	equ	0xFE8
 16757                           indf1	equ	0xFE7
 16758                           postinc1	equ	0xFE6
 16759                           postdec1	equ	0xFE5
 16760                           fsr1h	equ	0xFE2
 16761                           fsr1l	equ	0xFE1
 16762                           indf2	equ	0xFDF
 16763                           postinc2	equ	0xFDE
 16764                           postdec2	equ	0xFDD
 16765                           plusw2	equ	0xFDB
 16766                           fsr2h	equ	0xFDA
 16767                           fsr2l	equ	0xFD9
 16768                           status	equ	0xFD8
 16769                           
 16770 ;; *************** function _isxdigit *****************
 16771 ;; Defined at:
 16772 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;  c               1    wreg     unsigned char 
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;  c               1   34[BANK0 ] unsigned char 
 16777 ;; Return value:  Size  Location     Type
 16778 ;;		None               void
 16779 ;; Registers used:
 16780 ;;		wreg, status,2, status,0, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16789 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16790 ;;Total ram usage:        3 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; Hardware stack levels required when called:   12
 16793 ;; This function calls:
 16794 ;;		_isdigit
 16795 ;; This function is called by:
 16796 ;;		_xtoi
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text63
 16801  0060AE                     __ptext63:
 16802                           	opt stack 0
 16803  0060AE                     _isxdigit:
 16804                           	opt stack 12
 16805                           
 16806                           ; BSR set to: 0
 16807                           ;incstack = 0
 16808                           ;isxdigit@c stored from wreg
 16809  0060AE  0100               	movlb	0	; () banked
 16810  0060B0  6F82               	movwf	isxdigit@c& (0+255),b
 16811  0060B2  0E01               	movlw	1
 16812  0060B4  0100               	movlb	0	; () banked
 16813  0060B6  6F81               	movwf	_isxdigit$6642& (0+255),b
 16814                           
 16815                           ; BSR set to: 0
 16816  0060B8  0E67               	movlw	103
 16817  0060BA  6182               	cpfslt	isxdigit@c& (0+255),b
 16818  0060BC  D003               	goto	u12340
 16819                           
 16820                           ; BSR set to: 0
 16821  0060BE  0E61               	movlw	97
 16822  0060C0  6182               	cpfslt	isxdigit@c& (0+255),b
 16823  0060C2  D00E               	goto	l3555
 16824  0060C4                     u12340:
 16825                           
 16826                           ; BSR set to: 0
 16827                           
 16828                           ; BSR set to: 0
 16829  0060C4  0E47               	movlw	71
 16830  0060C6  6182               	cpfslt	isxdigit@c& (0+255),b
 16831  0060C8  D003               	goto	u12360
 16832                           
 16833                           ; BSR set to: 0
 16834  0060CA  0E41               	movlw	65
 16835  0060CC  6182               	cpfslt	isxdigit@c& (0+255),b
 16836  0060CE  D008               	goto	l3555
 16837  0060D0                     u12360:
 16838                           
 16839                           ; BSR set to: 0
 16840                           
 16841                           ; BSR set to: 0
 16842  0060D0  5182               	movf	isxdigit@c& (0+255),w,b
 16843  0060D2  ECC5  F032         	call	_isdigit
 16844  0060D6  B0D8               	btfsc	status,0,c
 16845  0060D8  D003               	goto	l3555
 16846  0060DA  0E00               	movlw	0
 16847  0060DC  0100               	movlb	0	; () banked
 16848  0060DE  6F81               	movwf	_isxdigit$6642& (0+255),b
 16849  0060E0                     l3555:
 16850                           
 16851                           ; BSR set to: 0
 16852  0060E0  C081  F080         	movff	_isxdigit$6642,??_isxdigit
 16853  0060E4  0100               	movlb	0	; () banked
 16854  0060E6  3180               	rrcf	??_isxdigit& (0+255),w,b
 16855  0060E8  0012               	return	
 16856  0060EA                     __end_of_isxdigit:
 16857                           	opt stack 0
 16858                           tosu	equ	0xFFF
 16859                           tosh	equ	0xFFE
 16860                           tosl	equ	0xFFD
 16861                           pclath	equ	0xFFA
 16862                           tblptru	equ	0xFF8
 16863                           tblptrh	equ	0xFF7
 16864                           tblptrl	equ	0xFF6
 16865                           tablat	equ	0xFF5
 16866                           prodh	equ	0xFF4
 16867                           prodl	equ	0xFF3
 16868                           intcon	equ	0xFF2
 16869                           intcon2	equ	0xFF1
 16870                           intcon3	equ	0xFF0
 16871                           indf0	equ	0xFEF
 16872                           postinc0	equ	0xFEE
 16873                           plusw0	equ	0xFEB
 16874                           fsr0h	equ	0xFEA
 16875                           fsr0l	equ	0xFE9
 16876                           wreg	equ	0xFE8
 16877                           indf1	equ	0xFE7
 16878                           postinc1	equ	0xFE6
 16879                           postdec1	equ	0xFE5
 16880                           fsr1h	equ	0xFE2
 16881                           fsr1l	equ	0xFE1
 16882                           indf2	equ	0xFDF
 16883                           postinc2	equ	0xFDE
 16884                           postdec2	equ	0xFDD
 16885                           plusw2	equ	0xFDB
 16886                           fsr2h	equ	0xFDA
 16887                           fsr2l	equ	0xFD9
 16888                           status	equ	0xFD8
 16889                           
 16890 ;; *************** function _strtol *****************
 16891 ;; Defined at:
 16892 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16895 ;;		 -> Terminal@Payload(80), 
 16896 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16897 ;;		 -> NULL(0), 
 16898 ;;  base            2   45[BANK0 ] int 
 16899 ;; Auto vars:     Size  Location     Type
 16900 ;;  a               4   52[BANK0 ] long 
 16901 ;;  c               1   56[BANK0 ] unsigned char 
 16902 ;;  sign            1   51[BANK0 ] unsigned char 
 16903 ;; Return value:  Size  Location     Type
 16904 ;;                  4   41[BANK0 ] long 
 16905 ;; Registers used:
 16906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16907 ;; Tracked objects:
 16908 ;;		On entry : 0/0
 16909 ;;		On exit  : 0/0
 16910 ;;		Unchanged: 0/0
 16911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16912 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16915 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16916 ;;Total ram usage:       16 bytes
 16917 ;; Hardware stack levels used:    1
 16918 ;; Hardware stack levels required when called:   13
 16919 ;; This function calls:
 16920 ;;		___lmul
 16921 ;;		_isalpha
 16922 ;;		_isdigit
 16923 ;;		_isspace
 16924 ;;		_toupper
 16925 ;; This function is called by:
 16926 ;;		_Terminal
 16927 ;; This function uses a non-reentrant model
 16928 ;;
 16929                           
 16930                           	psect	text64
 16931  001B0A                     __ptext64:
 16932                           	opt stack 0
 16933  001B0A                     _strtol:
 16934                           	opt stack 12
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;incstack = 0
 16938  001B0A  C089  FFD9         	movff	strtol@s,fsr2l
 16939  001B0E  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16940  001B12  50DF               	movf	indf2,w,c
 16941  001B14  0100               	movlb	0	; () banked
 16942  001B16  6F98               	movwf	strtol@c& (0+255),b
 16943                           
 16944                           ; BSR set to: 0
 16945  001B18  4B89               	infsnz	strtol@s& (0+255),f,b
 16946  001B1A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16947                           
 16948                           ; BSR set to: 0
 16949  001B1C  5198               	movf	strtol@c& (0+255),w,b
 16950  001B1E  ECEA  F031         	call	_isspace
 16951  001B22  B0D8               	btfsc	status,0,c
 16952  001B24  D7F2               	goto	_strtol
 16953  001B26  0E00               	movlw	0
 16954  001B28  0100               	movlb	0	; () banked
 16955  001B2A  6F94               	movwf	strtol@a& (0+255),b
 16956  001B2C  0E00               	movlw	0
 16957  001B2E  6F95               	movwf	(strtol@a+1)& (0+255),b
 16958  001B30  0E00               	movlw	0
 16959  001B32  6F96               	movwf	(strtol@a+2)& (0+255),b
 16960  001B34  0E00               	movlw	0
 16961  001B36  6F97               	movwf	(strtol@a+3)& (0+255),b
 16962  001B38  0E00               	movlw	0
 16963  001B3A  6F93               	movwf	strtol@sign& (0+255),b
 16964                           
 16965                           ; BSR set to: 0
 16966  001B3C  0E2D               	movlw	45
 16967  001B3E  1998               	xorwf	strtol@c& (0+255),w,b
 16968  001B40  A4D8               	btfss	status,2,c
 16969  001B42  D003               	goto	l3462
 16970                           
 16971                           ; BSR set to: 0
 16972  001B44  0E01               	movlw	1
 16973  001B46  6F93               	movwf	strtol@sign& (0+255),b
 16974  001B48  D004               	goto	u12840
 16975  001B4A                     l3462:
 16976                           
 16977                           ; BSR set to: 0
 16978                           
 16979                           ; BSR set to: 0
 16980  001B4A  0E2B               	movlw	43
 16981  001B4C  1998               	xorwf	strtol@c& (0+255),w,b
 16982  001B4E  A4D8               	btfss	status,2,c
 16983  001B50  D008               	goto	l3464
 16984  001B52                     u12840:
 16985                           
 16986                           ; BSR set to: 0
 16987  001B52  C089  FFD9         	movff	strtol@s,fsr2l
 16988  001B56  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16989  001B5A  50DF               	movf	indf2,w,c
 16990  001B5C  6F98               	movwf	strtol@c& (0+255),b
 16991                           
 16992                           ; BSR set to: 0
 16993  001B5E  4B89               	infsnz	strtol@s& (0+255),f,b
 16994  001B60  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16995  001B62                     l3464:
 16996                           
 16997                           ; BSR set to: 0
 16998                           
 16999                           ; BSR set to: 0
 17000                           
 17001                           ; BSR set to: 0
 17002  001B62  0E30               	movlw	48
 17003  001B64  1998               	xorwf	strtol@c& (0+255),w,b
 17004  001B66  A4D8               	btfss	status,2,c
 17005  001B68  D02E               	goto	l3472
 17006                           
 17007                           ; BSR set to: 0
 17008  001B6A  C089  FFD9         	movff	strtol@s,fsr2l
 17009  001B6E  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17010  001B72  50DF               	movf	indf2,w,c
 17011  001B74  6F98               	movwf	strtol@c& (0+255),b
 17012                           
 17013                           ; BSR set to: 0
 17014  001B76  4B89               	infsnz	strtol@s& (0+255),f,b
 17015  001B78  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17016                           
 17017                           ; BSR set to: 0
 17018  001B7A  518D               	movf	strtol@base& (0+255),w,b
 17019  001B7C  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17020  001B7E  B4D8               	btfsc	status,2,c
 17021  001B80  D005               	goto	u12870
 17022                           
 17023                           ; BSR set to: 0
 17024  001B82  0E10               	movlw	16
 17025  001B84  198D               	xorwf	strtol@base& (0+255),w,b
 17026  001B86  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17027  001B88  A4D8               	btfss	status,2,c
 17028  001B8A  D015               	goto	l3466
 17029  001B8C                     u12870:
 17030                           
 17031                           ; BSR set to: 0
 17032                           
 17033                           ; BSR set to: 0
 17034  001B8C  0E78               	movlw	120
 17035  001B8E  1998               	xorwf	strtol@c& (0+255),w,b
 17036  001B90  B4D8               	btfsc	status,2,c
 17037  001B92  D004               	goto	u12890
 17038                           
 17039                           ; BSR set to: 0
 17040  001B94  0E58               	movlw	88
 17041  001B96  1998               	xorwf	strtol@c& (0+255),w,b
 17042  001B98  A4D8               	btfss	status,2,c
 17043  001B9A  D00D               	goto	l3466
 17044  001B9C                     u12890:
 17045                           
 17046                           ; BSR set to: 0
 17047                           
 17048                           ; BSR set to: 0
 17049  001B9C  0E00               	movlw	0
 17050  001B9E  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17051  001BA0  0E10               	movlw	16
 17052  001BA2  6F8D               	movwf	strtol@base& (0+255),b
 17053                           
 17054                           ; BSR set to: 0
 17055  001BA4  C089  FFD9         	movff	strtol@s,fsr2l
 17056  001BA8  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17057  001BAC  50DF               	movf	indf2,w,c
 17058  001BAE  6F98               	movwf	strtol@c& (0+255),b
 17059                           
 17060                           ; BSR set to: 0
 17061  001BB0  4B89               	infsnz	strtol@s& (0+255),f,b
 17062  001BB2  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17063  001BB4  D008               	goto	l3472
 17064  001BB6                     l3466:
 17065                           
 17066                           ; BSR set to: 0
 17067                           
 17068                           ; BSR set to: 0
 17069  001BB6  518D               	movf	strtol@base& (0+255),w,b
 17070  001BB8  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17071  001BBA  A4D8               	btfss	status,2,c
 17072  001BBC  D004               	goto	l3472
 17073                           
 17074                           ; BSR set to: 0
 17075  001BBE  0E00               	movlw	0
 17076  001BC0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17077  001BC2  0E08               	movlw	8
 17078  001BC4  6F8D               	movwf	strtol@base& (0+255),b
 17079  001BC6                     l3472:
 17080                           
 17081                           ; BSR set to: 0
 17082                           
 17083                           ; BSR set to: 0
 17084                           
 17085                           ; BSR set to: 0
 17086                           
 17087                           ; BSR set to: 0
 17088  001BC6  518D               	movf	strtol@base& (0+255),w,b
 17089  001BC8  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 17090  001BCA  A4D8               	btfss	status,2,c
 17091  001BCC  D004               	goto	l3473
 17092                           
 17093                           ; BSR set to: 0
 17094  001BCE  0E00               	movlw	0
 17095  001BD0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 17096  001BD2  0E0A               	movlw	10
 17097  001BD4  6F8D               	movwf	strtol@base& (0+255),b
 17098  001BD6                     l3473:
 17099                           
 17100                           ; BSR set to: 0
 17101                           
 17102                           ; BSR set to: 0
 17103                           
 17104                           ; BSR set to: 0
 17105  001BD6  5198               	movf	strtol@c& (0+255),w,b
 17106  001BD8  EC61  F031         	call	_isalpha
 17107  001BDC  A0D8               	btfss	status,0,c
 17108  001BDE  D008               	goto	l3475
 17109  001BE0  0100               	movlb	0	; () banked
 17110  001BE2  5198               	movf	strtol@c& (0+255),w,b
 17111  001BE4  EC91  F033         	call	_toupper
 17112  001BE8  0FC9               	addlw	201
 17113  001BEA  0100               	movlb	0	; () banked
 17114  001BEC  6F98               	movwf	strtol@c& (0+255),b
 17115  001BEE  D009               	goto	l3478
 17116  001BF0                     l3475:
 17117                           
 17118                           ; BSR set to: 0
 17119  001BF0  0100               	movlb	0	; () banked
 17120  001BF2  5198               	movf	strtol@c& (0+255),w,b
 17121  001BF4  ECC5  F032         	call	_isdigit
 17122  001BF8  A0D8               	btfss	status,0,c
 17123  001BFA  D039               	goto	l3479
 17124  001BFC  0E30               	movlw	48
 17125  001BFE  0100               	movlb	0	; () banked
 17126  001C00  5F98               	subwf	strtol@c& (0+255),f,b
 17127  001C02                     l3478:
 17128                           
 17129                           ; BSR set to: 0
 17130                           
 17131                           ; BSR set to: 0
 17132                           
 17133                           ; BSR set to: 0
 17134  001C02  5198               	movf	strtol@c& (0+255),w,b
 17135  001C04  6F8F               	movwf	??_strtol& (0+255),b
 17136  001C06  6B90               	clrf	(??_strtol+1)& (0+255),b
 17137  001C08  518D               	movf	strtol@base& (0+255),w,b
 17138  001C0A  5D8F               	subwf	??_strtol& (0+255),w,b
 17139  001C0C  5190               	movf	(??_strtol+1)& (0+255),w,b
 17140  001C0E  0A80               	xorlw	128
 17141  001C10  6F91               	movwf	(??_strtol+2)& (0+255),b
 17142  001C12  518E               	movf	(strtol@base+1)& (0+255),w,b
 17143  001C14  0A80               	xorlw	128
 17144  001C16  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 17145  001C18  B0D8               	btfsc	status,0,c
 17146  001C1A  D029               	goto	l3479
 17147                           
 17148                           ; BSR set to: 0
 17149                           
 17150                           ; BSR set to: 0
 17151                           
 17152                           ; BSR set to: 0
 17153  001C1C  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 17154  001C20  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 17155  001C24  0E00               	movlw	0
 17156  001C26  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 17157  001C28  0EFF               	movlw	-1
 17158  001C2A  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 17159  001C2C  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 17160  001C2E  C094  F081         	movff	strtol@a,___lmul@multiplicand
 17161  001C32  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 17162  001C36  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 17163  001C3A  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 17164  001C3E  ECA4  F02B         	call	___lmul	;wreg free
 17165  001C42  0100               	movlb	0	; () banked
 17166  001C44  5198               	movf	strtol@c& (0+255),w,b
 17167  001C46  257D               	addwf	?___lmul& (0+255),w,b
 17168  001C48  6F94               	movwf	strtol@a& (0+255),b
 17169  001C4A  0E00               	movlw	0
 17170  001C4C  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 17171  001C4E  6F95               	movwf	(strtol@a+1)& (0+255),b
 17172  001C50  0E00               	movlw	0
 17173  001C52  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 17174  001C54  6F96               	movwf	(strtol@a+2)& (0+255),b
 17175  001C56  0E00               	movlw	0
 17176  001C58  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 17177  001C5A  6F97               	movwf	(strtol@a+3)& (0+255),b
 17178                           
 17179                           ; BSR set to: 0
 17180  001C5C  C089  FFD9         	movff	strtol@s,fsr2l
 17181  001C60  C08A  FFDA         	movff	strtol@s+1,fsr2h
 17182  001C64  50DF               	movf	indf2,w,c
 17183  001C66  6F98               	movwf	strtol@c& (0+255),b
 17184                           
 17185                           ; BSR set to: 0
 17186  001C68  4B89               	infsnz	strtol@s& (0+255),f,b
 17187  001C6A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 17188  001C6C  D7B4               	goto	l3473
 17189  001C6E                     l3479:
 17190                           
 17191                           ; BSR set to: 0
 17192  001C6E  0100               	movlb	0	; () banked
 17193  001C70  518B               	movf	strtol@endptr& (0+255),w,b
 17194  001C72  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 17195  001C74  B4D8               	btfsc	status,2,c
 17196  001C76  D00E               	goto	l3481
 17197                           
 17198                           ; BSR set to: 0
 17199  001C78  0EFF               	movlw	255
 17200  001C7A  2589               	addwf	strtol@s& (0+255),w,b
 17201  001C7C  6F8F               	movwf	??_strtol& (0+255),b
 17202  001C7E  0EFF               	movlw	255
 17203  001C80  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 17204  001C82  6F90               	movwf	(??_strtol+1)& (0+255),b
 17205  001C84  C08B  FFD9         	movff	strtol@endptr,fsr2l
 17206  001C88  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 17207  001C8C  C08F  FFDE         	movff	??_strtol,postinc2
 17208  001C90  C090  FFDD         	movff	??_strtol+1,postdec2
 17209  001C94                     l3481:
 17210                           
 17211                           ; BSR set to: 0
 17212                           
 17213                           ; BSR set to: 0
 17214  001C94  5193               	movf	strtol@sign& (0+255),w,b
 17215  001C96  B4D8               	btfsc	status,2,c
 17216  001C98  D01A               	goto	l3482
 17217                           
 17218                           ; BSR set to: 0
 17219  001C9A  C094  F08F         	movff	strtol@a,??_strtol
 17220  001C9E  C095  F090         	movff	strtol@a+1,??_strtol+1
 17221  001CA2  C096  F091         	movff	strtol@a+2,??_strtol+2
 17222  001CA6  C097  F092         	movff	strtol@a+3,??_strtol+3
 17223  001CAA  1F8F               	comf	??_strtol& (0+255),f,b
 17224  001CAC  1F90               	comf	(??_strtol+1)& (0+255),f,b
 17225  001CAE  1F91               	comf	(??_strtol+2)& (0+255),f,b
 17226  001CB0  1F92               	comf	(??_strtol+3)& (0+255),f,b
 17227  001CB2  2B8F               	incf	??_strtol& (0+255),f,b
 17228  001CB4  0E00               	movlw	0
 17229  001CB6  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 17230  001CB8  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 17231  001CBA  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 17232  001CBC  C08F  F089         	movff	??_strtol,?_strtol
 17233  001CC0  C090  F08A         	movff	??_strtol+1,?_strtol+1
 17234  001CC4  C091  F08B         	movff	??_strtol+2,?_strtol+2
 17235  001CC8  C092  F08C         	movff	??_strtol+3,?_strtol+3
 17236                           
 17237                           ; BSR set to: 0
 17238  001CCC  0012               	return	
 17239  001CCE                     l3482:
 17240                           
 17241                           ; BSR set to: 0
 17242  001CCE  C094  F089         	movff	strtol@a,?_strtol
 17243  001CD2  C095  F08A         	movff	strtol@a+1,?_strtol+1
 17244  001CD6  C096  F08B         	movff	strtol@a+2,?_strtol+2
 17245  001CDA  C097  F08C         	movff	strtol@a+3,?_strtol+3
 17246                           
 17247                           ; BSR set to: 0
 17248  001CDE  0012               	return		;funcret
 17249  001CE0                     __end_of_strtol:
 17250                           	opt stack 0
 17251                           tosu	equ	0xFFF
 17252                           tosh	equ	0xFFE
 17253                           tosl	equ	0xFFD
 17254                           pclath	equ	0xFFA
 17255                           tblptru	equ	0xFF8
 17256                           tblptrh	equ	0xFF7
 17257                           tblptrl	equ	0xFF6
 17258                           tablat	equ	0xFF5
 17259                           prodh	equ	0xFF4
 17260                           prodl	equ	0xFF3
 17261                           intcon	equ	0xFF2
 17262                           intcon2	equ	0xFF1
 17263                           intcon3	equ	0xFF0
 17264                           indf0	equ	0xFEF
 17265                           postinc0	equ	0xFEE
 17266                           plusw0	equ	0xFEB
 17267                           fsr0h	equ	0xFEA
 17268                           fsr0l	equ	0xFE9
 17269                           wreg	equ	0xFE8
 17270                           indf1	equ	0xFE7
 17271                           postinc1	equ	0xFE6
 17272                           postdec1	equ	0xFE5
 17273                           fsr1h	equ	0xFE2
 17274                           fsr1l	equ	0xFE1
 17275                           indf2	equ	0xFDF
 17276                           postinc2	equ	0xFDE
 17277                           postdec2	equ	0xFDD
 17278                           plusw2	equ	0xFDB
 17279                           fsr2h	equ	0xFDA
 17280                           fsr2l	equ	0xFD9
 17281                           status	equ	0xFD8
 17282                           
 17283 ;; *************** function _toupper *****************
 17284 ;; Defined at:
 17285 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 17286 ;; Parameters:    Size  Location     Type
 17287 ;;  c               1    wreg     unsigned char 
 17288 ;; Auto vars:     Size  Location     Type
 17289 ;;  c               1   29[BANK0 ] unsigned char 
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  1    wreg      unsigned char 
 17292 ;; Registers used:
 17293 ;;		wreg, status,2, status,0
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17302 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17303 ;;Total ram usage:        1 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; Hardware stack levels required when called:   11
 17306 ;; This function calls:
 17307 ;;		Nothing
 17308 ;; This function is called by:
 17309 ;;		_strtol
 17310 ;; This function uses a non-reentrant model
 17311 ;;
 17312                           
 17313                           	psect	text65
 17314  006722                     __ptext65:
 17315                           	opt stack 0
 17316  006722                     _toupper:
 17317                           	opt stack 13
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;incstack = 0
 17321                           ;toupper@c stored from wreg
 17322  006722  0100               	movlb	0	; () banked
 17323  006724  6F7D               	movwf	toupper@c& (0+255),b
 17324  006726  0E7B               	movlw	123
 17325  006728  0100               	movlb	0	; () banked
 17326  00672A  617D               	cpfslt	toupper@c& (0+255),b
 17327  00672C  D004               	goto	l3486
 17328                           
 17329                           ; BSR set to: 0
 17330  00672E  0E60               	movlw	96
 17331  006730  657D               	cpfsgt	toupper@c& (0+255),b
 17332  006732  D001               	goto	l3486
 17333                           
 17334                           ; BSR set to: 0
 17335  006734  9B7D               	bcf	toupper@c& (0+255),5,b
 17336  006736                     l3486:
 17337                           
 17338                           ; BSR set to: 0
 17339                           
 17340                           ; BSR set to: 0
 17341  006736  517D               	movf	toupper@c& (0+255),w,b
 17342  006738  0012               	return	
 17343  00673A                     __end_of_toupper:
 17344                           	opt stack 0
 17345                           tosu	equ	0xFFF
 17346                           tosh	equ	0xFFE
 17347                           tosl	equ	0xFFD
 17348                           pclath	equ	0xFFA
 17349                           tblptru	equ	0xFF8
 17350                           tblptrh	equ	0xFF7
 17351                           tblptrl	equ	0xFF6
 17352                           tablat	equ	0xFF5
 17353                           prodh	equ	0xFF4
 17354                           prodl	equ	0xFF3
 17355                           intcon	equ	0xFF2
 17356                           intcon2	equ	0xFF1
 17357                           intcon3	equ	0xFF0
 17358                           indf0	equ	0xFEF
 17359                           postinc0	equ	0xFEE
 17360                           plusw0	equ	0xFEB
 17361                           fsr0h	equ	0xFEA
 17362                           fsr0l	equ	0xFE9
 17363                           wreg	equ	0xFE8
 17364                           indf1	equ	0xFE7
 17365                           postinc1	equ	0xFE6
 17366                           postdec1	equ	0xFE5
 17367                           fsr1h	equ	0xFE2
 17368                           fsr1l	equ	0xFE1
 17369                           indf2	equ	0xFDF
 17370                           postinc2	equ	0xFDE
 17371                           postdec2	equ	0xFDD
 17372                           plusw2	equ	0xFDB
 17373                           fsr2h	equ	0xFDA
 17374                           fsr2l	equ	0xFD9
 17375                           status	equ	0xFD8
 17376                           
 17377 ;; *************** function _isspace *****************
 17378 ;; Defined at:
 17379 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;  c               1    wreg     unsigned char 
 17382 ;; Auto vars:     Size  Location     Type
 17383 ;;  c               1   31[BANK0 ] unsigned char 
 17384 ;; Return value:  Size  Location     Type
 17385 ;;		None               void
 17386 ;; Registers used:
 17387 ;;		wreg, status,2, status,0
 17388 ;; Tracked objects:
 17389 ;;		On entry : 0/0
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17394 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17396 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17397 ;;Total ram usage:        3 bytes
 17398 ;; Hardware stack levels used:    1
 17399 ;; Hardware stack levels required when called:   11
 17400 ;; This function calls:
 17401 ;;		Nothing
 17402 ;; This function is called by:
 17403 ;;		_strtol
 17404 ;;		_xtoi
 17405 ;; This function uses a non-reentrant model
 17406 ;;
 17407                           
 17408                           	psect	text66
 17409  0063D4                     __ptext66:
 17410                           	opt stack 0
 17411  0063D4                     _isspace:
 17412                           	opt stack 13
 17413                           
 17414                           ; BSR set to: 0
 17415                           ;incstack = 0
 17416                           ;isspace@c stored from wreg
 17417  0063D4  0100               	movlb	0	; () banked
 17418  0063D6  6F7F               	movwf	isspace@c& (0+255),b
 17419  0063D8  0E01               	movlw	1
 17420  0063DA  0100               	movlb	0	; () banked
 17421  0063DC  6F7E               	movwf	_isspace$6635& (0+255),b
 17422                           
 17423                           ; BSR set to: 0
 17424  0063DE  0E20               	movlw	32
 17425  0063E0  197F               	xorwf	isspace@c& (0+255),w,b
 17426  0063E2  B4D8               	btfsc	status,2,c
 17427  0063E4  D008               	goto	l3543
 17428                           
 17429                           ; BSR set to: 0
 17430  0063E6  0E0E               	movlw	14
 17431  0063E8  617F               	cpfslt	isspace@c& (0+255),b
 17432  0063EA  D003               	goto	u12250
 17433                           
 17434                           ; BSR set to: 0
 17435  0063EC  0E09               	movlw	9
 17436  0063EE  617F               	cpfslt	isspace@c& (0+255),b
 17437  0063F0  D002               	goto	l3543
 17438  0063F2                     u12250:
 17439                           
 17440                           ; BSR set to: 0
 17441                           
 17442                           ; BSR set to: 0
 17443  0063F2  0E00               	movlw	0
 17444  0063F4  6F7E               	movwf	_isspace$6635& (0+255),b
 17445  0063F6                     l3543:
 17446                           
 17447                           ; BSR set to: 0
 17448                           
 17449                           ; BSR set to: 0
 17450  0063F6  C07E  F07D         	movff	_isspace$6635,??_isspace
 17451  0063FA  317D               	rrcf	??_isspace& (0+255),w,b
 17452  0063FC  0012               	return	
 17453  0063FE                     __end_of_isspace:
 17454                           	opt stack 0
 17455                           tosu	equ	0xFFF
 17456                           tosh	equ	0xFFE
 17457                           tosl	equ	0xFFD
 17458                           pclath	equ	0xFFA
 17459                           tblptru	equ	0xFF8
 17460                           tblptrh	equ	0xFF7
 17461                           tblptrl	equ	0xFF6
 17462                           tablat	equ	0xFF5
 17463                           prodh	equ	0xFF4
 17464                           prodl	equ	0xFF3
 17465                           intcon	equ	0xFF2
 17466                           intcon2	equ	0xFF1
 17467                           intcon3	equ	0xFF0
 17468                           indf0	equ	0xFEF
 17469                           postinc0	equ	0xFEE
 17470                           plusw0	equ	0xFEB
 17471                           fsr0h	equ	0xFEA
 17472                           fsr0l	equ	0xFE9
 17473                           wreg	equ	0xFE8
 17474                           indf1	equ	0xFE7
 17475                           postinc1	equ	0xFE6
 17476                           postdec1	equ	0xFE5
 17477                           fsr1h	equ	0xFE2
 17478                           fsr1l	equ	0xFE1
 17479                           indf2	equ	0xFDF
 17480                           postinc2	equ	0xFDE
 17481                           postdec2	equ	0xFDD
 17482                           plusw2	equ	0xFDB
 17483                           fsr2h	equ	0xFDA
 17484                           fsr2l	equ	0xFD9
 17485                           status	equ	0xFD8
 17486                           
 17487 ;; *************** function _isalpha *****************
 17488 ;; Defined at:
 17489 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17490 ;; Parameters:    Size  Location     Type
 17491 ;;  c               1    wreg     unsigned char 
 17492 ;; Auto vars:     Size  Location     Type
 17493 ;;  c               1   34[BANK0 ] unsigned char 
 17494 ;; Return value:  Size  Location     Type
 17495 ;;		None               void
 17496 ;; Registers used:
 17497 ;;		wreg, status,2, status,0, cstack
 17498 ;; Tracked objects:
 17499 ;;		On entry : 0/0
 17500 ;;		On exit  : 0/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17504 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17506 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17507 ;;Total ram usage:        3 bytes
 17508 ;; Hardware stack levels used:    1
 17509 ;; Hardware stack levels required when called:   12
 17510 ;; This function calls:
 17511 ;;		_isupper
 17512 ;; This function is called by:
 17513 ;;		_strtol
 17514 ;; This function uses a non-reentrant model
 17515 ;;
 17516                           
 17517                           	psect	text67
 17518  0062C2                     __ptext67:
 17519                           	opt stack 0
 17520  0062C2                     _isalpha:
 17521                           	opt stack 12
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;incstack = 0
 17525                           ;isalpha@c stored from wreg
 17526  0062C2  0100               	movlb	0	; () banked
 17527  0062C4  6F82               	movwf	isalpha@c& (0+255),b
 17528  0062C6  0E01               	movlw	1
 17529  0062C8  0100               	movlb	0	; () banked
 17530  0062CA  6F81               	movwf	_isalpha$6632& (0+255),b
 17531                           
 17532                           ; BSR set to: 0
 17533  0062CC  0E7B               	movlw	123
 17534  0062CE  6182               	cpfslt	isalpha@c& (0+255),b
 17535  0062D0  D003               	goto	u12270
 17536                           
 17537                           ; BSR set to: 0
 17538  0062D2  0E61               	movlw	97
 17539  0062D4  6182               	cpfslt	isalpha@c& (0+255),b
 17540  0062D6  D008               	goto	l3538
 17541  0062D8                     u12270:
 17542                           
 17543                           ; BSR set to: 0
 17544                           
 17545                           ; BSR set to: 0
 17546  0062D8  5182               	movf	isalpha@c& (0+255),w,b
 17547  0062DA  ECA3  F032         	call	_isupper
 17548  0062DE  B0D8               	btfsc	status,0,c
 17549  0062E0  D003               	goto	l3538
 17550  0062E2  0E00               	movlw	0
 17551  0062E4  0100               	movlb	0	; () banked
 17552  0062E6  6F81               	movwf	_isalpha$6632& (0+255),b
 17553  0062E8                     l3538:
 17554                           
 17555                           ; BSR set to: 0
 17556  0062E8  C081  F080         	movff	_isalpha$6632,??_isalpha
 17557  0062EC  0100               	movlb	0	; () banked
 17558  0062EE  3180               	rrcf	??_isalpha& (0+255),w,b
 17559  0062F0  0012               	return	
 17560  0062F2                     __end_of_isalpha:
 17561                           	opt stack 0
 17562                           tosu	equ	0xFFF
 17563                           tosh	equ	0xFFE
 17564                           tosl	equ	0xFFD
 17565                           pclath	equ	0xFFA
 17566                           tblptru	equ	0xFF8
 17567                           tblptrh	equ	0xFF7
 17568                           tblptrl	equ	0xFF6
 17569                           tablat	equ	0xFF5
 17570                           prodh	equ	0xFF4
 17571                           prodl	equ	0xFF3
 17572                           intcon	equ	0xFF2
 17573                           intcon2	equ	0xFF1
 17574                           intcon3	equ	0xFF0
 17575                           indf0	equ	0xFEF
 17576                           postinc0	equ	0xFEE
 17577                           plusw0	equ	0xFEB
 17578                           fsr0h	equ	0xFEA
 17579                           fsr0l	equ	0xFE9
 17580                           wreg	equ	0xFE8
 17581                           indf1	equ	0xFE7
 17582                           postinc1	equ	0xFE6
 17583                           postdec1	equ	0xFE5
 17584                           fsr1h	equ	0xFE2
 17585                           fsr1l	equ	0xFE1
 17586                           indf2	equ	0xFDF
 17587                           postinc2	equ	0xFDE
 17588                           postdec2	equ	0xFDD
 17589                           plusw2	equ	0xFDB
 17590                           fsr2h	equ	0xFDA
 17591                           fsr2l	equ	0xFD9
 17592                           status	equ	0xFD8
 17593                           
 17594 ;; *************** function _isupper *****************
 17595 ;; Defined at:
 17596 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17597 ;; Parameters:    Size  Location     Type
 17598 ;;  c               1    wreg     unsigned char 
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;  c               1   31[BANK0 ] unsigned char 
 17601 ;; Return value:  Size  Location     Type
 17602 ;;		None               void
 17603 ;; Registers used:
 17604 ;;		wreg, status,2, status,0
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17613 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17614 ;;Total ram usage:        3 bytes
 17615 ;; Hardware stack levels used:    1
 17616 ;; Hardware stack levels required when called:   11
 17617 ;; This function calls:
 17618 ;;		Nothing
 17619 ;; This function is called by:
 17620 ;;		_xtoi
 17621 ;;		_isalpha
 17622 ;; This function uses a non-reentrant model
 17623 ;;
 17624                           
 17625                           	psect	text68
 17626  006546                     __ptext68:
 17627                           	opt stack 0
 17628  006546                     _isupper:
 17629                           	opt stack 13
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;incstack = 0
 17633                           ;isupper@c stored from wreg
 17634  006546  0100               	movlb	0	; () banked
 17635  006548  6F7F               	movwf	isupper@c& (0+255),b
 17636  00654A  0E00               	movlw	0
 17637  00654C  0100               	movlb	0	; () banked
 17638  00654E  6F7E               	movwf	_isupper$6638& (0+255),b
 17639                           
 17640                           ; BSR set to: 0
 17641  006550  0E5B               	movlw	91
 17642  006552  617F               	cpfslt	isupper@c& (0+255),b
 17643  006554  D005               	goto	l3548
 17644                           
 17645                           ; BSR set to: 0
 17646  006556  0E40               	movlw	64
 17647  006558  657F               	cpfsgt	isupper@c& (0+255),b
 17648  00655A  D002               	goto	l3548
 17649                           
 17650                           ; BSR set to: 0
 17651  00655C  0E01               	movlw	1
 17652  00655E  6F7E               	movwf	_isupper$6638& (0+255),b
 17653  006560                     l3548:
 17654                           
 17655                           ; BSR set to: 0
 17656                           
 17657                           ; BSR set to: 0
 17658  006560  C07E  F07D         	movff	_isupper$6638,??_isupper
 17659  006564  317D               	rrcf	??_isupper& (0+255),w,b
 17660  006566  0012               	return	
 17661  006568                     __end_of_isupper:
 17662                           	opt stack 0
 17663                           tosu	equ	0xFFF
 17664                           tosh	equ	0xFFE
 17665                           tosl	equ	0xFFD
 17666                           pclath	equ	0xFFA
 17667                           tblptru	equ	0xFF8
 17668                           tblptrh	equ	0xFF7
 17669                           tblptrl	equ	0xFF6
 17670                           tablat	equ	0xFF5
 17671                           prodh	equ	0xFF4
 17672                           prodl	equ	0xFF3
 17673                           intcon	equ	0xFF2
 17674                           intcon2	equ	0xFF1
 17675                           intcon3	equ	0xFF0
 17676                           indf0	equ	0xFEF
 17677                           postinc0	equ	0xFEE
 17678                           plusw0	equ	0xFEB
 17679                           fsr0h	equ	0xFEA
 17680                           fsr0l	equ	0xFE9
 17681                           wreg	equ	0xFE8
 17682                           indf1	equ	0xFE7
 17683                           postinc1	equ	0xFE6
 17684                           postdec1	equ	0xFE5
 17685                           fsr1h	equ	0xFE2
 17686                           fsr1l	equ	0xFE1
 17687                           indf2	equ	0xFDF
 17688                           postinc2	equ	0xFDE
 17689                           postdec2	equ	0xFDD
 17690                           plusw2	equ	0xFDB
 17691                           fsr2h	equ	0xFDA
 17692                           fsr2l	equ	0xFD9
 17693                           status	equ	0xFD8
 17694                           
 17695 ;; *************** function _strcpy *****************
 17696 ;; Defined at:
 17697 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17698 ;; Parameters:    Size  Location     Type
 17699 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17700 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17701 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17702 ;;		 -> STR_23(20), STR_21(42), 
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17705 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  2   29[BANK0 ] PTR unsigned char 
 17708 ;; Registers used:
 17709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17718 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17719 ;;Total ram usage:        6 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:   11
 17722 ;; This function calls:
 17723 ;;		Nothing
 17724 ;; This function is called by:
 17725 ;;		_Terminal
 17726 ;;		_Term_MainSm
 17727 ;; This function uses a non-reentrant model
 17728 ;;
 17729                           
 17730                           	psect	text69
 17731  006230                     __ptext69:
 17732                           	opt stack 0
 17733  006230                     _strcpy:
 17734                           	opt stack 15
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;incstack = 0
 17738  006230  C07D  F081         	movff	strcpy@to,strcpy@cp
 17739  006234  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17740  006238  D005               	goto	l3440
 17741  00623A  0100               	movlb	0	; () banked
 17742  00623C  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17743  00623E  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17744  006240  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17745  006242  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17746  006244                     l3440:
 17747                           
 17748                           ; BSR set to: 0
 17749  006244  C07F  FFF6         	movff	strcpy@from,tblptrl
 17750  006248  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17751  00624C                     	if	0	;tblptru may be non-zero
 17752  00624C                     	endif
 17753  00624C                     	if	0	;tblptru may be non-zero
 17754  00624C                     	endif
 17755  00624C  C081  FFD9         	movff	strcpy@cp,fsr2l
 17756  006250  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17757  006254  0008               	tblrd		*
 17758  006256  CFF5 FFDF          	movff	tablat,indf2
 17759  00625A  50DF               	movf	indf2,w,c
 17760  00625C  B4D8               	btfsc	status,2,c
 17761  00625E  0012               	return	
 17762  006260  D7EC               	goto	l3441
 17763  006262                     __end_of_strcpy:
 17764                           	opt stack 0
 17765                           tosu	equ	0xFFF
 17766                           tosh	equ	0xFFE
 17767                           tosl	equ	0xFFD
 17768                           pclath	equ	0xFFA
 17769                           tblptru	equ	0xFF8
 17770                           tblptrh	equ	0xFF7
 17771                           tblptrl	equ	0xFF6
 17772                           tablat	equ	0xFF5
 17773                           prodh	equ	0xFF4
 17774                           prodl	equ	0xFF3
 17775                           intcon	equ	0xFF2
 17776                           intcon2	equ	0xFF1
 17777                           intcon3	equ	0xFF0
 17778                           indf0	equ	0xFEF
 17779                           postinc0	equ	0xFEE
 17780                           plusw0	equ	0xFEB
 17781                           fsr0h	equ	0xFEA
 17782                           fsr0l	equ	0xFE9
 17783                           wreg	equ	0xFE8
 17784                           indf1	equ	0xFE7
 17785                           postinc1	equ	0xFE6
 17786                           postdec1	equ	0xFE5
 17787                           fsr1h	equ	0xFE2
 17788                           fsr1l	equ	0xFE1
 17789                           indf2	equ	0xFDF
 17790                           postinc2	equ	0xFDE
 17791                           postdec2	equ	0xFDD
 17792                           plusw2	equ	0xFDB
 17793                           fsr2h	equ	0xFDA
 17794                           fsr2l	equ	0xFD9
 17795                           status	equ	0xFD8
 17796                           
 17797 ;; *************** function _putUSBUSART *****************
 17798 ;; Defined at:
 17799 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17800 ;; Parameters:    Size  Location     Type
 17801 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17802 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17803 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17804 ;;		 -> RxBuffer(400), 
 17805 ;;  length          1   37[BANK0 ] unsigned char 
 17806 ;; Auto vars:     Size  Location     Type
 17807 ;;		None
 17808 ;; Return value:  Size  Location     Type
 17809 ;;                  1    wreg      void 
 17810 ;; Registers used:
 17811 ;;		wreg, status,2, status,0
 17812 ;; Tracked objects:
 17813 ;;		On entry : 0/0
 17814 ;;		On exit  : 0/0
 17815 ;;		Unchanged: 0/0
 17816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17817 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17821 ;;Total ram usage:        3 bytes
 17822 ;; Hardware stack levels used:    1
 17823 ;; Hardware stack levels required when called:   11
 17824 ;; This function calls:
 17825 ;;		Nothing
 17826 ;; This function is called by:
 17827 ;;		_Terminal
 17828 ;;		_Term_MainSm
 17829 ;;		_GsmGprsTerminal
 17830 ;; This function uses a non-reentrant model
 17831 ;;
 17832                           
 17833                           	psect	text70
 17834  006568                     __ptext70:
 17835                           	opt stack 0
 17836  006568                     _putUSBUSART:
 17837                           	opt stack 15
 17838                           
 17839                           ;usb_device_cdc.c: 584: ;
 17840                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17841                           
 17842                           ;incstack = 0
 17843  006568  0100               	movlb	0	; () banked
 17844  00656A  51C5               	movf	_cdc_trf_state& (0+255),w,b
 17845  00656C  A4D8               	btfss	status,2,c
 17846  00656E  0012               	return	
 17847                           
 17848                           ; BSR set to: 0
 17849                           ;usb_device_cdc.c: 586: {
 17850                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17851  006570  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17852  006574  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17853                           
 17854                           ; BSR set to: 0
 17855  006578  C085  F0C4         	movff	putUSBUSART@length,_cdc_tx_len
 17856                           
 17857                           ; BSR set to: 0
 17858  00657C  0E01               	movlw	1
 17859  00657E  0101               	movlb	1	; () banked
 17860  006580  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17861                           
 17862                           ; BSR set to: 1
 17863  006582  0E01               	movlw	1
 17864  006584  0100               	movlb	0	; () banked
 17865  006586  6FC5               	movwf	_cdc_trf_state& (0+255),b
 17866  006588  0012               	return	
 17867  00658A                     __end_of_putUSBUSART:
 17868                           	opt stack 0
 17869                           tosu	equ	0xFFF
 17870                           tosh	equ	0xFFE
 17871                           tosl	equ	0xFFD
 17872                           pclath	equ	0xFFA
 17873                           tblptru	equ	0xFF8
 17874                           tblptrh	equ	0xFF7
 17875                           tblptrl	equ	0xFF6
 17876                           tablat	equ	0xFF5
 17877                           prodh	equ	0xFF4
 17878                           prodl	equ	0xFF3
 17879                           intcon	equ	0xFF2
 17880                           intcon2	equ	0xFF1
 17881                           intcon3	equ	0xFF0
 17882                           indf0	equ	0xFEF
 17883                           postinc0	equ	0xFEE
 17884                           plusw0	equ	0xFEB
 17885                           fsr0h	equ	0xFEA
 17886                           fsr0l	equ	0xFE9
 17887                           wreg	equ	0xFE8
 17888                           indf1	equ	0xFE7
 17889                           postinc1	equ	0xFE6
 17890                           postdec1	equ	0xFE5
 17891                           fsr1h	equ	0xFE2
 17892                           fsr1l	equ	0xFE1
 17893                           indf2	equ	0xFDF
 17894                           postinc2	equ	0xFDE
 17895                           postdec2	equ	0xFDD
 17896                           plusw2	equ	0xFDB
 17897                           fsr2h	equ	0xFDA
 17898                           fsr2l	equ	0xFD9
 17899                           status	equ	0xFD8
 17900                           
 17901 ;; *************** function _itoa *****************
 17902 ;; Defined at:
 17903 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17904 ;; Parameters:    Size  Location     Type
 17905 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17906 ;;		 -> Terminal@Payload(80), 
 17907 ;;  val             2   53[BANK0 ] int 
 17908 ;;  base            2   55[BANK0 ] int 
 17909 ;; Auto vars:     Size  Location     Type
 17910 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17911 ;;		 -> Terminal@Payload(80), 
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  2   51[BANK0 ] PTR unsigned char 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17916 ;; Tracked objects:
 17917 ;;		On entry : 0/0
 17918 ;;		On exit  : 0/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17921 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17922 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17924 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17925 ;;Total ram usage:        8 bytes
 17926 ;; Hardware stack levels used:    1
 17927 ;; Hardware stack levels required when called:   13
 17928 ;; This function calls:
 17929 ;;		_utoa
 17930 ;; This function is called by:
 17931 ;;		_Terminal
 17932 ;; This function uses a non-reentrant model
 17933 ;;
 17934                           
 17935                           	psect	text71
 17936  005E68                     __ptext71:
 17937                           	opt stack 0
 17938  005E68                     _itoa:
 17939                           	opt stack 12
 17940                           
 17941                           ; BSR set to: 0
 17942                           ;incstack = 0
 17943  005E68  C093  F099         	movff	itoa@buf,itoa@cp
 17944  005E6C  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17945  005E70  0100               	movlb	0	; () banked
 17946  005E72  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17947  005E74  D00C               	goto	l3188
 17948                           
 17949                           ; BSR set to: 0
 17950  005E76  C093  FFD9         	movff	itoa@buf,fsr2l
 17951  005E7A  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17952  005E7E  0E2D               	movlw	45
 17953  005E80  6EDF               	movwf	indf2,c
 17954                           
 17955                           ; BSR set to: 0
 17956  005E82  4B93               	infsnz	itoa@buf& (0+255),f,b
 17957  005E84  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17958                           
 17959                           ; BSR set to: 0
 17960  005E86  6D95               	negf	itoa@val& (0+255),b
 17961  005E88  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17962  005E8A  B0D8               	btfsc	status,0,c
 17963  005E8C  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17964  005E8E                     l3188:
 17965                           
 17966                           ; BSR set to: 0
 17967                           
 17968                           ; BSR set to: 0
 17969  005E8E  C093  F08A         	movff	itoa@buf,utoa@buf
 17970  005E92  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17971  005E96  C095  F08C         	movff	itoa@val,utoa@val
 17972  005E9A  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17973  005E9E  C097  F08E         	movff	itoa@base,utoa@base
 17974  005EA2  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17975  005EA6  ECCA  F022         	call	_utoa	;wreg free
 17976  005EAA  0012               	return	
 17977  005EAC                     __end_of_itoa:
 17978                           	opt stack 0
 17979                           tosu	equ	0xFFF
 17980                           tosh	equ	0xFFE
 17981                           tosl	equ	0xFFD
 17982                           pclath	equ	0xFFA
 17983                           tblptru	equ	0xFF8
 17984                           tblptrh	equ	0xFF7
 17985                           tblptrl	equ	0xFF6
 17986                           tablat	equ	0xFF5
 17987                           prodh	equ	0xFF4
 17988                           prodl	equ	0xFF3
 17989                           intcon	equ	0xFF2
 17990                           intcon2	equ	0xFF1
 17991                           intcon3	equ	0xFF0
 17992                           indf0	equ	0xFEF
 17993                           postinc0	equ	0xFEE
 17994                           plusw0	equ	0xFEB
 17995                           fsr0h	equ	0xFEA
 17996                           fsr0l	equ	0xFE9
 17997                           wreg	equ	0xFE8
 17998                           indf1	equ	0xFE7
 17999                           postinc1	equ	0xFE6
 18000                           postdec1	equ	0xFE5
 18001                           fsr1h	equ	0xFE2
 18002                           fsr1l	equ	0xFE1
 18003                           indf2	equ	0xFDF
 18004                           postinc2	equ	0xFDE
 18005                           postdec2	equ	0xFDD
 18006                           plusw2	equ	0xFDB
 18007                           fsr2h	equ	0xFDA
 18008                           fsr2l	equ	0xFD9
 18009                           status	equ	0xFD8
 18010                           
 18011 ;; *************** function _utoa *****************
 18012 ;; Defined at:
 18013 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 18016 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 18017 ;;  val             2   44[BANK0 ] unsigned int 
 18018 ;;  base            2   46[BANK0 ] int 
 18019 ;; Auto vars:     Size  Location     Type
 18020 ;;  v               2   48[BANK0 ] unsigned int 
 18021 ;;  c               1   50[BANK0 ] unsigned char 
 18022 ;; Return value:  Size  Location     Type
 18023 ;;                  2   42[BANK0 ] PTR unsigned char 
 18024 ;; Registers used:
 18025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18026 ;; Tracked objects:
 18027 ;;		On entry : 0/0
 18028 ;;		On exit  : 0/0
 18029 ;;		Unchanged: 0/0
 18030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18031 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18034 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18035 ;;Total ram usage:        9 bytes
 18036 ;; Hardware stack levels used:    1
 18037 ;; Hardware stack levels required when called:   12
 18038 ;; This function calls:
 18039 ;;		___lwdiv
 18040 ;;		___lwmod
 18041 ;; This function is called by:
 18042 ;;		_Term_MainSm
 18043 ;;		_itoa
 18044 ;; This function uses a non-reentrant model
 18045 ;;
 18046                           
 18047                           	psect	text72
 18048  004594                     __ptext72:
 18049                           	opt stack 0
 18050  004594                     _utoa:
 18051                           	opt stack 14
 18052                           
 18053                           ;incstack = 0
 18054  004594  C08C  F090         	movff	utoa@val,utoa@v
 18055  004598  C08D  F091         	movff	utoa@val+1,utoa@v+1
 18056  00459C  C090  F083         	movff	utoa@v,___lwdiv@dividend
 18057  0045A0  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 18058  0045A4  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18059  0045A8  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18060  0045AC  ECD0  F02C         	call	___lwdiv	;wreg free
 18061  0045B0  C083  F090         	movff	?___lwdiv,utoa@v
 18062  0045B4  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 18063  0045B8  0100               	movlb	0	; () banked
 18064  0045BA  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18065  0045BC  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18066                           
 18067                           ; BSR set to: 0
 18068  0045BE  5190               	movf	utoa@v& (0+255),w,b
 18069  0045C0  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 18070  0045C2  A4D8               	btfss	status,2,c
 18071  0045C4  D7EB               	goto	l3192
 18072                           
 18073                           ; BSR set to: 0
 18074                           
 18075                           ; BSR set to: 0
 18076  0045C6  C08A  FFD9         	movff	utoa@buf,fsr2l
 18077  0045CA  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18078  0045CE  0E00               	movlw	0
 18079  0045D0  6EDF               	movwf	indf2,c
 18080                           
 18081                           ; BSR set to: 0
 18082  0045D2  078A               	decf	utoa@buf& (0+255),f,b
 18083  0045D4  A0D8               	btfss	status,0,c
 18084  0045D6  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18085  0045D8                     
 18086                           ; BSR set to: 0
 18087                           
 18088                           ; BSR set to: 0
 18089  0045D8  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 18090  0045DC  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 18091  0045E0  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 18092  0045E4  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 18093  0045E8  EC56  F02F         	call	___lwmod	;wreg free
 18094  0045EC  0100               	movlb	0	; () banked
 18095  0045EE  517D               	movf	?___lwmod& (0+255),w,b
 18096  0045F0  6F92               	movwf	utoa@c& (0+255),b
 18097                           
 18098                           ; BSR set to: 0
 18099  0045F2  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 18100  0045F6  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 18101  0045FA  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 18102  0045FE  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 18103  004602  ECD0  F02C         	call	___lwdiv	;wreg free
 18104  004606  C083  F08C         	movff	?___lwdiv,utoa@val
 18105  00460A  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 18106  00460E  0E09               	movlw	9
 18107  004610  0100               	movlb	0	; () banked
 18108  004612  6592               	cpfsgt	utoa@c& (0+255),b
 18109  004614  D002               	goto	l3195
 18110                           
 18111                           ; BSR set to: 0
 18112  004616  0E07               	movlw	7
 18113  004618  2792               	addwf	utoa@c& (0+255),f,b
 18114  00461A                     l3195:
 18115                           
 18116                           ; BSR set to: 0
 18117  00461A  0E30               	movlw	48
 18118  00461C  2792               	addwf	utoa@c& (0+255),f,b
 18119                           
 18120                           ; BSR set to: 0
 18121  00461E  C08A  FFD9         	movff	utoa@buf,fsr2l
 18122  004622  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 18123  004626  C092  FFDF         	movff	utoa@c,indf2
 18124                           
 18125                           ; BSR set to: 0
 18126  00462A  078A               	decf	utoa@buf& (0+255),f,b
 18127  00462C  A0D8               	btfss	status,0,c
 18128  00462E  078B               	decf	(utoa@buf+1)& (0+255),f,b
 18129                           
 18130                           ; BSR set to: 0
 18131  004630  518C               	movf	utoa@val& (0+255),w,b
 18132  004632  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 18133  004634  A4D8               	btfss	status,2,c
 18134  004636  D7D0               	goto	l3194
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;	Return value of _utoa is never used
 18138                           
 18139                           ; BSR set to: 0
 18140  004638  4B8A               	infsnz	utoa@buf& (0+255),f,b
 18141  00463A  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 18142  00463C  0012               	return	
 18143  00463E                     __end_of_utoa:
 18144                           	opt stack 0
 18145                           tosu	equ	0xFFF
 18146                           tosh	equ	0xFFE
 18147                           tosl	equ	0xFFD
 18148                           pclath	equ	0xFFA
 18149                           tblptru	equ	0xFF8
 18150                           tblptrh	equ	0xFF7
 18151                           tblptrl	equ	0xFF6
 18152                           tablat	equ	0xFF5
 18153                           prodh	equ	0xFF4
 18154                           prodl	equ	0xFF3
 18155                           intcon	equ	0xFF2
 18156                           intcon2	equ	0xFF1
 18157                           intcon3	equ	0xFF0
 18158                           indf0	equ	0xFEF
 18159                           postinc0	equ	0xFEE
 18160                           plusw0	equ	0xFEB
 18161                           fsr0h	equ	0xFEA
 18162                           fsr0l	equ	0xFE9
 18163                           wreg	equ	0xFE8
 18164                           indf1	equ	0xFE7
 18165                           postinc1	equ	0xFE6
 18166                           postdec1	equ	0xFE5
 18167                           fsr1h	equ	0xFE2
 18168                           fsr1l	equ	0xFE1
 18169                           indf2	equ	0xFDF
 18170                           postinc2	equ	0xFDE
 18171                           postdec2	equ	0xFDD
 18172                           plusw2	equ	0xFDB
 18173                           fsr2h	equ	0xFDA
 18174                           fsr2l	equ	0xFD9
 18175                           status	equ	0xFD8
 18176                           
 18177 ;; *************** function ___lwmod *****************
 18178 ;; Defined at:
 18179 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 18180 ;; Parameters:    Size  Location     Type
 18181 ;;  dividend        2   29[BANK0 ] unsigned int 
 18182 ;;  divisor         2   31[BANK0 ] unsigned int 
 18183 ;; Auto vars:     Size  Location     Type
 18184 ;;  counter         1   33[BANK0 ] unsigned char 
 18185 ;; Return value:  Size  Location     Type
 18186 ;;                  2   29[BANK0 ] unsigned int 
 18187 ;; Registers used:
 18188 ;;		wreg, status,2, status,0
 18189 ;; Tracked objects:
 18190 ;;		On entry : 0/0
 18191 ;;		On exit  : 0/0
 18192 ;;		Unchanged: 0/0
 18193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18194 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18197 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18198 ;;Total ram usage:        5 bytes
 18199 ;; Hardware stack levels used:    1
 18200 ;; Hardware stack levels required when called:   11
 18201 ;; This function calls:
 18202 ;;		Nothing
 18203 ;; This function is called by:
 18204 ;;		_utoa
 18205 ;; This function uses a non-reentrant model
 18206 ;;
 18207                           
 18208                           	psect	text73
 18209  005EAC                     __ptext73:
 18210                           	opt stack 0
 18211  005EAC                     ___lwmod:
 18212                           	opt stack 14
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;incstack = 0
 18216  005EAC  0100               	movlb	0	; () banked
 18217  005EAE  517F               	movf	___lwmod@divisor& (0+255),w,b
 18218  005EB0  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18219  005EB2  B4D8               	btfsc	status,2,c
 18220  005EB4  D018               	goto	l3290
 18221                           
 18222                           ; BSR set to: 0
 18223  005EB6  0E01               	movlw	1
 18224  005EB8  6F81               	movwf	___lwmod@counter& (0+255),b
 18225  005EBA  D004               	goto	l3285
 18226  005EBC                     
 18227                           ; BSR set to: 0
 18228                           
 18229                           ; BSR set to: 0
 18230  005EBC  90D8               	bcf	status,0,c
 18231  005EBE  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 18232  005EC0  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18233  005EC2  2B81               	incf	___lwmod@counter& (0+255),f,b
 18234  005EC4                     l3285:
 18235                           
 18236                           ; BSR set to: 0
 18237                           
 18238                           ; BSR set to: 0
 18239  005EC4  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18240  005EC6  D7FA               	goto	l3286
 18241  005EC8                     u11910:
 18242                           
 18243                           ; BSR set to: 0
 18244                           
 18245                           ; BSR set to: 0
 18246                           
 18247                           ; BSR set to: 0
 18248  005EC8  517F               	movf	___lwmod@divisor& (0+255),w,b
 18249  005ECA  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 18250  005ECC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18251  005ECE  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18252  005ED0  A0D8               	btfss	status,0,c
 18253  005ED2  D004               	goto	l3289
 18254                           
 18255                           ; BSR set to: 0
 18256  005ED4  517F               	movf	___lwmod@divisor& (0+255),w,b
 18257  005ED6  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 18258  005ED8  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18259  005EDA  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18260  005EDC                     l3289:
 18261                           
 18262                           ; BSR set to: 0
 18263                           
 18264                           ; BSR set to: 0
 18265  005EDC  90D8               	bcf	status,0,c
 18266  005EDE  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18267  005EE0  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 18268                           
 18269                           ; BSR set to: 0
 18270  005EE2  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 18271  005EE4  D7F1               	goto	u11910
 18272  005EE6                     l3290:
 18273                           
 18274                           ; BSR set to: 0
 18275                           
 18276                           ; BSR set to: 0
 18277  005EE6  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 18278  005EEA  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 18279                           
 18280                           ; BSR set to: 0
 18281  005EEE  0012               	return		;funcret
 18282  005EF0                     __end_of___lwmod:
 18283                           	opt stack 0
 18284                           tosu	equ	0xFFF
 18285                           tosh	equ	0xFFE
 18286                           tosl	equ	0xFFD
 18287                           pclath	equ	0xFFA
 18288                           tblptru	equ	0xFF8
 18289                           tblptrh	equ	0xFF7
 18290                           tblptrl	equ	0xFF6
 18291                           tablat	equ	0xFF5
 18292                           prodh	equ	0xFF4
 18293                           prodl	equ	0xFF3
 18294                           intcon	equ	0xFF2
 18295                           intcon2	equ	0xFF1
 18296                           intcon3	equ	0xFF0
 18297                           indf0	equ	0xFEF
 18298                           postinc0	equ	0xFEE
 18299                           plusw0	equ	0xFEB
 18300                           fsr0h	equ	0xFEA
 18301                           fsr0l	equ	0xFE9
 18302                           wreg	equ	0xFE8
 18303                           indf1	equ	0xFE7
 18304                           postinc1	equ	0xFE6
 18305                           postdec1	equ	0xFE5
 18306                           fsr1h	equ	0xFE2
 18307                           fsr1l	equ	0xFE1
 18308                           indf2	equ	0xFDF
 18309                           postinc2	equ	0xFDE
 18310                           postdec2	equ	0xFDD
 18311                           plusw2	equ	0xFDB
 18312                           fsr2h	equ	0xFDA
 18313                           fsr2l	equ	0xFD9
 18314                           status	equ	0xFD8
 18315                           
 18316 ;; *************** function _getsUSBUSART *****************
 18317 ;; Defined at:
 18318 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 18321 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 18322 ;;  len             1   38[BANK0 ] unsigned char 
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;		None
 18325 ;; Return value:  Size  Location     Type
 18326 ;;                  1    wreg      unsigned char 
 18327 ;; Registers used:
 18328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18329 ;; Tracked objects:
 18330 ;;		On entry : 0/0
 18331 ;;		On exit  : 0/0
 18332 ;;		Unchanged: 0/0
 18333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18334 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18337 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18338 ;;Total ram usage:        4 bytes
 18339 ;; Hardware stack levels used:    1
 18340 ;; Hardware stack levels required when called:   12
 18341 ;; This function calls:
 18342 ;;		_USBTransferOnePacket
 18343 ;; This function is called by:
 18344 ;;		_Terminal
 18345 ;;		_GsmGprsTerminal
 18346 ;; This function uses a non-reentrant model
 18347 ;;
 18348                           
 18349                           	psect	text74
 18350  004B3A                     __ptext74:
 18351                           	opt stack 0
 18352  004B3A                     _getsUSBUSART:
 18353                           	opt stack 13
 18354                           
 18355                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;incstack = 0
 18359  004B3A  0E00               	movlw	0
 18360  004B3C  0100               	movlb	0	; () banked
 18361  004B3E  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 18365  004B40  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18366  004B42  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18367  004B44  B4D8               	btfsc	status,2,c
 18368  004B46  D006               	goto	u12630
 18369                           
 18370                           ; BSR set to: 0
 18371  004B48  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18372  004B4C  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18373  004B50  BEDF               	btfsc	indf2,7,c
 18374  004B52  D03B               	goto	l1924
 18375  004B54                     u12630:
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;usb_device_cdc.c: 493: {
 18379                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18380                           
 18381                           ; BSR set to: 0
 18382  004B54  EE20 F001          	lfsr	2,1
 18383  004B58  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18384  004B5A  26D9               	addwf	fsr2l,f,c
 18385  004B5C  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18386  004B5E  22DA               	addwfc	fsr2h,f,c
 18387  004B60  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18388  004B62  5CDE               	subwf	postinc2,w,c
 18389  004B64  B0D8               	btfsc	status,0,c
 18390  004B66  D008               	goto	l1927
 18391                           
 18392                           ; BSR set to: 0
 18393                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18394  004B68  EE20 F001          	lfsr	2,1
 18395  004B6C  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 18396  004B6E  26D9               	addwf	fsr2l,f,c
 18397  004B70  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18398  004B72  22DA               	addwfc	fsr2h,f,c
 18399  004B74  50DF               	movf	indf2,w,c
 18400  004B76  6F86               	movwf	getsUSBUSART@len& (0+255),b
 18401  004B78                     l1927:
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18405                           
 18406                           ; BSR set to: 0
 18407  004B78  0E00               	movlw	0
 18408  004B7A  6FC6               	movwf	_cdc_rx_len& (0+255),b
 18409  004B7C  D013               	goto	l1928
 18410  004B7E                     
 18411                           ; BSR set to: 0
 18412                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18413                           
 18414                           ; BSR set to: 0
 18415  004B7E  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18416  004B80  0D01               	mullw	1
 18417  004B82  0E00               	movlw	low _cdc_data_rx
 18418  004B84  24F3               	addwf	prodl,w,c
 18419  004B86  6ED9               	movwf	fsr2l,c
 18420  004B88  0E05               	movlw	high _cdc_data_rx
 18421  004B8A  20F4               	addwfc	prodh,w,c
 18422  004B8C  6EDA               	movwf	fsr2h,c
 18423  004B8E  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18424  004B90  0D01               	mullw	1
 18425  004B92  50F3               	movf	prodl,w,c
 18426  004B94  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18427  004B96  6EE1               	movwf	fsr1l,c
 18428  004B98  50F4               	movf	prodh,w,c
 18429  004B9A  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18430  004B9C  6EE2               	movwf	fsr1h,c
 18431  004B9E  CFDF FFE7          	movff	indf2,indf1
 18432                           
 18433                           ; BSR set to: 0
 18434  004BA2  2BC6               	incf	_cdc_rx_len& (0+255),f,b
 18435  004BA4                     l1928:
 18436                           
 18437                           ; BSR set to: 0
 18438                           
 18439                           ; BSR set to: 0
 18440  004BA4  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18441  004BA6  5DC6               	subwf	_cdc_rx_len& (0+255),w,b
 18442  004BA8  A0D8               	btfss	status,0,c
 18443  004BAA  D7E9               	goto	l1929
 18444                           
 18445                           ; BSR set to: 0
 18446                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18447                           
 18448                           ; BSR set to: 0
 18449  004BAC  0E00               	movlw	0
 18450  004BAE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18451  004BB0  0E00               	movlw	low _cdc_data_rx
 18452  004BB2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18453  004BB4  0E05               	movlw	high _cdc_data_rx
 18454  004BB6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18455  004BB8  0E40               	movlw	64
 18456  004BBA  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18457  004BBC  0E02               	movlw	2
 18458  004BBE  EC0D  F021         	call	_USBTransferOnePacket
 18459  004BC2  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18460  004BC6  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18461  004BCA                     l1924:
 18462                           
 18463                           ;usb_device_cdc.c: 513: }
 18464                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18465  004BCA  0100               	movlb	0	; () banked
 18466  004BCC  51C6               	movf	_cdc_rx_len& (0+255),w,b
 18467  004BCE  0012               	return	
 18468  004BD0                     __end_of_getsUSBUSART:
 18469                           	opt stack 0
 18470                           tosu	equ	0xFFF
 18471                           tosh	equ	0xFFE
 18472                           tosl	equ	0xFFD
 18473                           pclath	equ	0xFFA
 18474                           tblptru	equ	0xFF8
 18475                           tblptrh	equ	0xFF7
 18476                           tblptrl	equ	0xFF6
 18477                           tablat	equ	0xFF5
 18478                           prodh	equ	0xFF4
 18479                           prodl	equ	0xFF3
 18480                           intcon	equ	0xFF2
 18481                           intcon2	equ	0xFF1
 18482                           intcon3	equ	0xFF0
 18483                           indf0	equ	0xFEF
 18484                           postinc0	equ	0xFEE
 18485                           plusw0	equ	0xFEB
 18486                           fsr0h	equ	0xFEA
 18487                           fsr0l	equ	0xFE9
 18488                           wreg	equ	0xFE8
 18489                           indf1	equ	0xFE7
 18490                           postinc1	equ	0xFE6
 18491                           postdec1	equ	0xFE5
 18492                           fsr1h	equ	0xFE2
 18493                           fsr1l	equ	0xFE1
 18494                           indf2	equ	0xFDF
 18495                           postinc2	equ	0xFDE
 18496                           postdec2	equ	0xFDD
 18497                           plusw2	equ	0xFDB
 18498                           fsr2h	equ	0xFDA
 18499                           fsr2l	equ	0xFD9
 18500                           status	equ	0xFD8
 18501                           
 18502 ;; *************** function _USBTransferOnePacket *****************
 18503 ;; Defined at:
 18504 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18505 ;; Parameters:    Size  Location     Type
 18506 ;;  ep              1    wreg     unsigned char 
 18507 ;;  dir             1   29[BANK0 ] unsigned char 
 18508 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18509 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18510 ;;  len             1   32[BANK0 ] unsigned char 
 18511 ;; Auto vars:     Size  Location     Type
 18512 ;;  ep              1   33[BANK0 ] unsigned char 
 18513 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18514 ;;		 -> NULL(0), BDT(48), 
 18515 ;; Return value:  Size  Location     Type
 18516 ;;                  2   29[BANK0 ] PTR void 
 18517 ;; Registers used:
 18518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18519 ;; Tracked objects:
 18520 ;;		On entry : 0/0
 18521 ;;		On exit  : 0/0
 18522 ;;		Unchanged: 0/0
 18523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18525 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;Total ram usage:        7 bytes
 18529 ;; Hardware stack levels used:    1
 18530 ;; Hardware stack levels required when called:   11
 18531 ;; This function calls:
 18532 ;;		Nothing
 18533 ;; This function is called by:
 18534 ;;		_CDCInitEP
 18535 ;;		_getsUSBUSART
 18536 ;;		_CDCTxService
 18537 ;;		_USBCDCEventHandler
 18538 ;; This function uses a non-reentrant model
 18539 ;;
 18540                           
 18541                           	psect	text75
 18542  00421A                     __ptext75:
 18543                           	opt stack 0
 18544  00421A                     _USBTransferOnePacket:
 18545                           	opt stack 13
 18546                           
 18547                           ; BSR set to: 0
 18548                           ;incstack = 0
 18549                           ;USBTransferOnePacket@ep stored from wreg
 18550  00421A  0100               	movlb	0	; () banked
 18551  00421C  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18552                           
 18553                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18554                           ;usb_device.c: 1018: if(dir != 0)
 18555  00421E  0100               	movlb	0	; () banked
 18556  004220  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18557  004222  B4D8               	btfsc	status,2,c
 18558  004224  D007               	goto	l1648
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;usb_device.c: 1019: {
 18562                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18563  004226  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18564  004228  0D02               	mullw	2
 18565  00422A  0EB6               	movlw	low _pBDTEntryIn
 18566  00422C  24F3               	addwf	prodl,w,c
 18567  00422E  6ED9               	movwf	fsr2l,c
 18568  004230  0E00               	movlw	high _pBDTEntryIn
 18569  004232  D006               	goto	L16
 18570  004234                     l1648:
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;usb_device.c: 1023: else
 18574                           ;usb_device.c: 1024: {
 18575                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18576                           
 18577                           ; BSR set to: 0
 18578  004234  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18579  004236  0D02               	mullw	2
 18580  004238  0E06               	movlw	low _pBDTEntryOut
 18581  00423A  24F3               	addwf	prodl,w,c
 18582  00423C  6ED9               	movwf	fsr2l,c
 18583  00423E  0E03               	movlw	high _pBDTEntryOut
 18584  004240                     L16:
 18585  004240  20F4               	addwfc	prodh,w,c
 18586  004242  6EDA               	movwf	fsr2h,c
 18587  004244  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18588  004248  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;usb_device.c: 1027: }
 18592                           ;usb_device.c: 1031: if(handle == 0)
 18593                           
 18594                           ; BSR set to: 0
 18595  00424C  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18596  00424E  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18597  004250  A4D8               	btfss	status,2,c
 18598  004252  D005               	goto	l1650
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;usb_device.c: 1032: {
 18602                           ;usb_device.c: 1033: return 0;
 18603  004254  0E00               	movlw	0
 18604  004256  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18605  004258  0E00               	movlw	0
 18606  00425A  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18607                           
 18608                           ; BSR set to: 0
 18609  00425C  0012               	return	
 18610  00425E                     l1650:
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;usb_device.c: 1034: }
 18614                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18615                           
 18616                           ; BSR set to: 0
 18617  00425E  EE20 F002          	lfsr	2,2
 18618  004262  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18619  004264  26D9               	addwf	fsr2l,f,c
 18620  004266  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18621  004268  22DA               	addwfc	fsr2h,f,c
 18622  00426A  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18623  00426E  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18624                           
 18625                           ;usb_device.c: 1048: handle->CNT = len;
 18626  004272  EE20 F001          	lfsr	2,1
 18627  004276  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18628  004278  26D9               	addwf	fsr2l,f,c
 18629  00427A  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18630  00427C  22DA               	addwfc	fsr2h,f,c
 18631  00427E  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18632                           
 18633                           ; BSR set to: 0
 18634                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18635  004282  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18636  004286  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18637  00428A  0E40               	movlw	64
 18638  00428C  16DF               	andwf	indf2,f,c
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18642  00428E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18643  004292  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18644  004296  0E00               	movlw	0
 18645  004298  86DB               	bsf	plusw2,3,c
 18646                           
 18647                           ; BSR set to: 0
 18648                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18649  00429A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18650  00429E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18651  0042A2  0E00               	movlw	0
 18652  0042A4  8EDB               	bsf	plusw2,7,c
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;usb_device.c: 1054: if(dir != 0)
 18656  0042A6  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18657  0042A8  B4D8               	btfsc	status,2,c
 18658  0042AA  D007               	goto	l1652
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;usb_device.c: 1055: {
 18662                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18663  0042AC  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18664  0042AE  0D02               	mullw	2
 18665  0042B0  0EB6               	movlw	low _pBDTEntryIn
 18666  0042B2  24F3               	addwf	prodl,w,c
 18667  0042B4  6ED9               	movwf	fsr2l,c
 18668  0042B6  0E00               	movlw	high _pBDTEntryIn
 18669  0042B8  D006               	goto	L17
 18670  0042BA                     l1652:
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;usb_device.c: 1059: else
 18674                           ;usb_device.c: 1060: {
 18675                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18676                           
 18677                           ; BSR set to: 0
 18678  0042BA  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18679  0042BC  0D02               	mullw	2
 18680  0042BE  0E06               	movlw	low _pBDTEntryOut
 18681  0042C0  24F3               	addwf	prodl,w,c
 18682  0042C2  6ED9               	movwf	fsr2l,c
 18683  0042C4  0E03               	movlw	high _pBDTEntryOut
 18684  0042C6                     L17:
 18685  0042C6  20F4               	addwfc	prodh,w,c
 18686  0042C8  6EDA               	movwf	fsr2h,c
 18687  0042CA  0E04               	movlw	4
 18688  0042CC  1ADF               	xorwf	indf2,f,c
 18689                           
 18690                           ; BSR set to: 0
 18691                           ;usb_device.c: 1063: }
 18692                           ;usb_device.c: 1064: return (void*)handle;
 18693                           
 18694                           ; BSR set to: 0
 18695  0042CE  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18696  0042D2  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18697  0042D6  0012               	return	
 18698  0042D8                     __end_of_USBTransferOnePacket:
 18699                           	opt stack 0
 18700                           tosu	equ	0xFFF
 18701                           tosh	equ	0xFFE
 18702                           tosl	equ	0xFFD
 18703                           pclath	equ	0xFFA
 18704                           tblptru	equ	0xFF8
 18705                           tblptrh	equ	0xFF7
 18706                           tblptrl	equ	0xFF6
 18707                           tablat	equ	0xFF5
 18708                           prodh	equ	0xFF4
 18709                           prodl	equ	0xFF3
 18710                           intcon	equ	0xFF2
 18711                           intcon2	equ	0xFF1
 18712                           intcon3	equ	0xFF0
 18713                           indf0	equ	0xFEF
 18714                           postinc0	equ	0xFEE
 18715                           plusw0	equ	0xFEB
 18716                           fsr0h	equ	0xFEA
 18717                           fsr0l	equ	0xFE9
 18718                           wreg	equ	0xFE8
 18719                           indf1	equ	0xFE7
 18720                           postinc1	equ	0xFE6
 18721                           postdec1	equ	0xFE5
 18722                           fsr1h	equ	0xFE2
 18723                           fsr1l	equ	0xFE1
 18724                           indf2	equ	0xFDF
 18725                           postinc2	equ	0xFDE
 18726                           postdec2	equ	0xFDD
 18727                           plusw2	equ	0xFDB
 18728                           fsr2h	equ	0xFDA
 18729                           fsr2l	equ	0xFD9
 18730                           status	equ	0xFD8
 18731                           
 18732 ;; *************** function _atoi *****************
 18733 ;; Defined at:
 18734 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18735 ;; Parameters:    Size  Location     Type
 18736 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18737 ;;		 -> Terminal@Len(4), 
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;  a               2   40[BANK0 ] int 
 18740 ;;  sign            1   39[BANK0 ] unsigned char 
 18741 ;; Return value:  Size  Location     Type
 18742 ;;                  2   35[BANK0 ] int 
 18743 ;; Registers used:
 18744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18745 ;; Tracked objects:
 18746 ;;		On entry : 0/0
 18747 ;;		On exit  : 0/0
 18748 ;;		Unchanged: 0/0
 18749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18751 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18752 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18753 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18754 ;;Total ram usage:        7 bytes
 18755 ;; Hardware stack levels used:    1
 18756 ;; Hardware stack levels required when called:   12
 18757 ;; This function calls:
 18758 ;;		___wmul
 18759 ;;		_isdigit
 18760 ;; This function is called by:
 18761 ;;		_Terminal
 18762 ;; This function uses a non-reentrant model
 18763 ;;
 18764                           
 18765                           	psect	text76
 18766  003962                     __ptext76:
 18767                           	opt stack 0
 18768  003962                     _atoi:
 18769                           	opt stack 13
 18770                           
 18771                           ; BSR set to: 0
 18772                           ;incstack = 0
 18773  003962  D003               	goto	l3001
 18774  003964  0100               	movlb	0	; () banked
 18775  003966  4B83               	infsnz	atoi@s& (0+255),f,b
 18776  003968  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18777  00396A                     l3001:
 18778                           
 18779                           ; BSR set to: 0
 18780  00396A  C083  FFD9         	movff	atoi@s,fsr2l
 18781  00396E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18782  003972  0E20               	movlw	32
 18783  003974  18DE               	xorwf	postinc2,w,c
 18784  003976  B4D8               	btfsc	status,2,c
 18785  003978  D7F5               	goto	l3002
 18786  00397A  C083  FFD9         	movff	atoi@s,fsr2l
 18787  00397E  C084  FFDA         	movff	atoi@s+1,fsr2h
 18788  003982  0E09               	movlw	9
 18789  003984  18DE               	xorwf	postinc2,w,c
 18790  003986  B4D8               	btfsc	status,2,c
 18791  003988  D7ED               	goto	l3002
 18792  00398A  0E00               	movlw	0
 18793  00398C  0100               	movlb	0	; () banked
 18794  00398E  6F89               	movwf	(atoi@a+1)& (0+255),b
 18795  003990  0E00               	movlw	0
 18796  003992  6F88               	movwf	atoi@a& (0+255),b
 18797  003994  0E00               	movlw	0
 18798  003996  6F87               	movwf	atoi@sign& (0+255),b
 18799                           
 18800                           ; BSR set to: 0
 18801  003998  C083  FFD9         	movff	atoi@s,fsr2l
 18802  00399C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18803  0039A0  0E2D               	movlw	45
 18804  0039A2  18DE               	xorwf	postinc2,w,c
 18805  0039A4  A4D8               	btfss	status,2,c
 18806  0039A6  D002               	goto	l3004
 18807                           
 18808                           ; BSR set to: 0
 18809  0039A8  2B87               	incf	atoi@sign& (0+255),f,b
 18810  0039AA  D026               	goto	l13682
 18811  0039AC                     l3004:
 18812                           
 18813                           ; BSR set to: 0
 18814                           
 18815                           ; BSR set to: 0
 18816  0039AC  C083  FFD9         	movff	atoi@s,fsr2l
 18817  0039B0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18818  0039B4  0E2B               	movlw	43
 18819  0039B6  18DE               	xorwf	postinc2,w,c
 18820  0039B8  A4D8               	btfss	status,2,c
 18821  0039BA  D020               	goto	l3007
 18822  0039BC  D01D               	goto	l13682
 18823  0039BE                     
 18824                           ; BSR set to: 0
 18825  0039BE  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18826  0039C2  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18827  0039C6  0E00               	movlw	0
 18828  0039C8  0100               	movlb	0	; () banked
 18829  0039CA  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18830  0039CC  0E0A               	movlw	10
 18831  0039CE  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18832  0039D0  ECFF  F031         	call	___wmul	;wreg free
 18833  0039D4  C083  FFD9         	movff	atoi@s,fsr2l
 18834  0039D8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18835  0039DC  50DF               	movf	indf2,w,c
 18836  0039DE  0100               	movlb	0	; () banked
 18837  0039E0  6F85               	movwf	??_atoi& (0+255),b
 18838  0039E2  6B86               	clrf	(??_atoi+1)& (0+255),b
 18839  0039E4  517D               	movf	?___wmul& (0+255),w,b
 18840  0039E6  2785               	addwf	??_atoi& (0+255),f,b
 18841  0039E8  517E               	movf	(?___wmul+1)& (0+255),w,b
 18842  0039EA  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18843  0039EC  0ED0               	movlw	208
 18844  0039EE  2585               	addwf	??_atoi& (0+255),w,b
 18845  0039F0  6F88               	movwf	atoi@a& (0+255),b
 18846  0039F2  0EFF               	movlw	255
 18847  0039F4  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18848  0039F6  6F89               	movwf	(atoi@a+1)& (0+255),b
 18849  0039F8                     l13682:
 18850                           
 18851                           ; BSR set to: 0
 18852  0039F8  4B83               	infsnz	atoi@s& (0+255),f,b
 18853  0039FA  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18854  0039FC                     l3007:
 18855                           
 18856                           ; BSR set to: 0
 18857                           
 18858                           ; BSR set to: 0
 18859  0039FC  C083  FFD9         	movff	atoi@s,fsr2l
 18860  003A00  C084  FFDA         	movff	atoi@s+1,fsr2h
 18861  003A04  50DF               	movf	indf2,w,c
 18862  003A06  ECC5  F032         	call	_isdigit
 18863  003A0A  B0D8               	btfsc	status,0,c
 18864  003A0C  D7D8               	goto	l3008
 18865  003A0E  0100               	movlb	0	; () banked
 18866  003A10  5187               	movf	atoi@sign& (0+255),w,b
 18867  003A12  B4D8               	btfsc	status,2,c
 18868  003A14  D00D               	goto	l3010
 18869                           
 18870                           ; BSR set to: 0
 18871  003A16  C088  F085         	movff	atoi@a,??_atoi
 18872  003A1A  C089  F086         	movff	atoi@a+1,??_atoi+1
 18873  003A1E  1F85               	comf	??_atoi& (0+255),f,b
 18874  003A20  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18875  003A22  4B85               	infsnz	??_atoi& (0+255),f,b
 18876  003A24  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18877  003A26  C085  F083         	movff	??_atoi,?_atoi
 18878  003A2A  C086  F084         	movff	??_atoi+1,?_atoi+1
 18879  003A2E  0012               	return	
 18880  003A30                     l3010:
 18881                           
 18882                           ; BSR set to: 0
 18883  003A30  C088  F083         	movff	atoi@a,?_atoi
 18884  003A34  C089  F084         	movff	atoi@a+1,?_atoi+1
 18885                           
 18886                           ; BSR set to: 0
 18887  003A38  0012               	return		;funcret
 18888  003A3A                     __end_of_atoi:
 18889                           	opt stack 0
 18890                           tosu	equ	0xFFF
 18891                           tosh	equ	0xFFE
 18892                           tosl	equ	0xFFD
 18893                           pclath	equ	0xFFA
 18894                           tblptru	equ	0xFF8
 18895                           tblptrh	equ	0xFF7
 18896                           tblptrl	equ	0xFF6
 18897                           tablat	equ	0xFF5
 18898                           prodh	equ	0xFF4
 18899                           prodl	equ	0xFF3
 18900                           intcon	equ	0xFF2
 18901                           intcon2	equ	0xFF1
 18902                           intcon3	equ	0xFF0
 18903                           indf0	equ	0xFEF
 18904                           postinc0	equ	0xFEE
 18905                           plusw0	equ	0xFEB
 18906                           fsr0h	equ	0xFEA
 18907                           fsr0l	equ	0xFE9
 18908                           wreg	equ	0xFE8
 18909                           indf1	equ	0xFE7
 18910                           postinc1	equ	0xFE6
 18911                           postdec1	equ	0xFE5
 18912                           fsr1h	equ	0xFE2
 18913                           fsr1l	equ	0xFE1
 18914                           indf2	equ	0xFDF
 18915                           postinc2	equ	0xFDE
 18916                           postdec2	equ	0xFDD
 18917                           plusw2	equ	0xFDB
 18918                           fsr2h	equ	0xFDA
 18919                           fsr2l	equ	0xFD9
 18920                           status	equ	0xFD8
 18921                           
 18922 ;; *************** function _isdigit *****************
 18923 ;; Defined at:
 18924 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18925 ;; Parameters:    Size  Location     Type
 18926 ;;  c               1    wreg     unsigned char 
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;  c               1   31[BANK0 ] unsigned char 
 18929 ;; Return value:  Size  Location     Type
 18930 ;;		None               void
 18931 ;; Registers used:
 18932 ;;		wreg, status,2, status,0
 18933 ;; Tracked objects:
 18934 ;;		On entry : 0/0
 18935 ;;		On exit  : 0/0
 18936 ;;		Unchanged: 0/0
 18937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18939 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18941 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18942 ;;Total ram usage:        3 bytes
 18943 ;; Hardware stack levels used:    1
 18944 ;; Hardware stack levels required when called:   11
 18945 ;; This function calls:
 18946 ;;		Nothing
 18947 ;; This function is called by:
 18948 ;;		_atoi
 18949 ;;		_strtol
 18950 ;;		_xtoi
 18951 ;;		_isxdigit
 18952 ;; This function uses a non-reentrant model
 18953 ;;
 18954                           
 18955                           	psect	text77
 18956  00658A                     __ptext77:
 18957                           	opt stack 0
 18958  00658A                     _isdigit:
 18959                           	opt stack 12
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;incstack = 0
 18963                           ;isdigit@c stored from wreg
 18964  00658A  0100               	movlb	0	; () banked
 18965  00658C  6F7F               	movwf	isdigit@c& (0+255),b
 18966  00658E  0E00               	movlw	0
 18967  006590  0100               	movlb	0	; () banked
 18968  006592  6F7E               	movwf	_isdigit$6366& (0+255),b
 18969                           
 18970                           ; BSR set to: 0
 18971  006594  0E3A               	movlw	58
 18972  006596  617F               	cpfslt	isdigit@c& (0+255),b
 18973  006598  D005               	goto	l3182
 18974                           
 18975                           ; BSR set to: 0
 18976  00659A  0E2F               	movlw	47
 18977  00659C  657F               	cpfsgt	isdigit@c& (0+255),b
 18978  00659E  D002               	goto	l3182
 18979                           
 18980                           ; BSR set to: 0
 18981  0065A0  0E01               	movlw	1
 18982  0065A2  6F7E               	movwf	_isdigit$6366& (0+255),b
 18983  0065A4                     l3182:
 18984                           
 18985                           ; BSR set to: 0
 18986                           
 18987                           ; BSR set to: 0
 18988  0065A4  C07E  F07D         	movff	_isdigit$6366,??_isdigit
 18989  0065A8  317D               	rrcf	??_isdigit& (0+255),w,b
 18990  0065AA  0012               	return	
 18991  0065AC                     __end_of_isdigit:
 18992                           	opt stack 0
 18993                           tosu	equ	0xFFF
 18994                           tosh	equ	0xFFE
 18995                           tosl	equ	0xFFD
 18996                           pclath	equ	0xFFA
 18997                           tblptru	equ	0xFF8
 18998                           tblptrh	equ	0xFF7
 18999                           tblptrl	equ	0xFF6
 19000                           tablat	equ	0xFF5
 19001                           prodh	equ	0xFF4
 19002                           prodl	equ	0xFF3
 19003                           intcon	equ	0xFF2
 19004                           intcon2	equ	0xFF1
 19005                           intcon3	equ	0xFF0
 19006                           indf0	equ	0xFEF
 19007                           postinc0	equ	0xFEE
 19008                           plusw0	equ	0xFEB
 19009                           fsr0h	equ	0xFEA
 19010                           fsr0l	equ	0xFE9
 19011                           wreg	equ	0xFE8
 19012                           indf1	equ	0xFE7
 19013                           postinc1	equ	0xFE6
 19014                           postdec1	equ	0xFE5
 19015                           fsr1h	equ	0xFE2
 19016                           fsr1l	equ	0xFE1
 19017                           indf2	equ	0xFDF
 19018                           postinc2	equ	0xFDE
 19019                           postdec2	equ	0xFDD
 19020                           plusw2	equ	0xFDB
 19021                           fsr2h	equ	0xFDA
 19022                           fsr2l	equ	0xFD9
 19023                           status	equ	0xFD8
 19024                           
 19025 ;; *************** function _Rtcm_SetRtccDate *****************
 19026 ;; Defined at:
 19027 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19028 ;; Parameters:    Size  Location     Type
 19029 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;		None
 19032 ;; Return value:  Size  Location     Type
 19033 ;;                  1    wreg      void 
 19034 ;; Registers used:
 19035 ;;		wreg, status,2, status,0, cstack
 19036 ;; Tracked objects:
 19037 ;;		On entry : 0/0
 19038 ;;		On exit  : 0/0
 19039 ;;		Unchanged: 0/0
 19040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19041 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19044 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19045 ;;Total ram usage:        8 bytes
 19046 ;; Hardware stack levels used:    1
 19047 ;; Hardware stack levels required when called:   13
 19048 ;; This function calls:
 19049 ;;		_Rtcc_LockRtc
 19050 ;;		_Rtcc_SetRtccValue
 19051 ;;		_Rtcc_UnlockRtc
 19052 ;; This function is called by:
 19053 ;;		_Rtcm_MainTask
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text78
 19058  0058A4                     __ptext78:
 19059                           	opt stack 0
 19060  0058A4                     _Rtcm_SetRtccDate:
 19061                           	opt stack 14
 19062                           
 19063                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;incstack = 0
 19067  0058A4  EC06  F034         	call	_Rtcc_UnlockRtc	;wreg free
 19068                           
 19069                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 19070  0058A8  0100               	movlb	0	; () banked
 19071  0058AA  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 19072  0058AC  0F30               	addlw	48
 19073  0058AE  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 19074  0058B0  0E00               	movlw	0
 19075  0058B2  EC6E  F00C         	call	_Rtcc_SetRtccValue
 19076                           
 19077                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 19078  0058B6  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 19079  0058BA  0E01               	movlw	1
 19080  0058BC  EC6E  F00C         	call	_Rtcc_SetRtccValue
 19081                           
 19082                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 19083  0058C0  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 19084  0058C4  0E02               	movlw	2
 19085  0058C6  EC6E  F00C         	call	_Rtcc_SetRtccValue
 19086                           
 19087                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 19088  0058CA  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 19089  0058CE  0E03               	movlw	3
 19090  0058D0  EC6E  F00C         	call	_Rtcc_SetRtccValue
 19091                           
 19092                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 19093  0058D4  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 19094  0058D8  0E04               	movlw	4
 19095  0058DA  EC6E  F00C         	call	_Rtcc_SetRtccValue
 19096                           
 19097                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 19098  0058DE  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 19099  0058E2  0E05               	movlw	5
 19100  0058E4  EC6E  F00C         	call	_Rtcc_SetRtccValue
 19101                           
 19102                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 19103  0058E8  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 19104  0058EC  0E06               	movlw	6
 19105  0058EE  EC6E  F00C         	call	_Rtcc_SetRtccValue
 19106                           
 19107                           ;rtcm.c: 191: Rtcc_LockRtc();
 19108  0058F2  EC0E  F034         	call	_Rtcc_LockRtc	;wreg free
 19109  0058F6  0012               	return		;funcret
 19110  0058F8                     __end_of_Rtcm_SetRtccDate:
 19111                           	opt stack 0
 19112                           tosu	equ	0xFFF
 19113                           tosh	equ	0xFFE
 19114                           tosl	equ	0xFFD
 19115                           pclath	equ	0xFFA
 19116                           tblptru	equ	0xFF8
 19117                           tblptrh	equ	0xFF7
 19118                           tblptrl	equ	0xFF6
 19119                           tablat	equ	0xFF5
 19120                           prodh	equ	0xFF4
 19121                           prodl	equ	0xFF3
 19122                           intcon	equ	0xFF2
 19123                           intcon2	equ	0xFF1
 19124                           intcon3	equ	0xFF0
 19125                           indf0	equ	0xFEF
 19126                           postinc0	equ	0xFEE
 19127                           plusw0	equ	0xFEB
 19128                           fsr0h	equ	0xFEA
 19129                           fsr0l	equ	0xFE9
 19130                           wreg	equ	0xFE8
 19131                           indf1	equ	0xFE7
 19132                           postinc1	equ	0xFE6
 19133                           postdec1	equ	0xFE5
 19134                           fsr1h	equ	0xFE2
 19135                           fsr1l	equ	0xFE1
 19136                           indf2	equ	0xFDF
 19137                           postinc2	equ	0xFDE
 19138                           postdec2	equ	0xFDD
 19139                           plusw2	equ	0xFDB
 19140                           fsr2h	equ	0xFDA
 19141                           fsr2l	equ	0xFD9
 19142                           status	equ	0xFD8
 19143                           
 19144 ;; *************** function _Rtcc_UnlockRtc *****************
 19145 ;; Defined at:
 19146 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19147 ;; Parameters:    Size  Location     Type
 19148 ;;		None
 19149 ;; Auto vars:     Size  Location     Type
 19150 ;;		None
 19151 ;; Return value:  Size  Location     Type
 19152 ;;                  1    wreg      void 
 19153 ;; Registers used:
 19154 ;;		None
 19155 ;; Tracked objects:
 19156 ;;		On entry : 0/0
 19157 ;;		On exit  : 0/0
 19158 ;;		Unchanged: 0/0
 19159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19164 ;;Total ram usage:        0 bytes
 19165 ;; Hardware stack levels used:    1
 19166 ;; Hardware stack levels required when called:   11
 19167 ;; This function calls:
 19168 ;;		Nothing
 19169 ;; This function is called by:
 19170 ;;		_Rtcm_MainTask
 19171 ;;		_Rtcm_SetRtccDate
 19172 ;;		_Rtcm_SetRtccAlarm
 19173 ;; This function uses a non-reentrant model
 19174 ;;
 19175                           
 19176                           	psect	text79
 19177  00680C                     __ptext79:
 19178                           	opt stack 0
 19179  00680C                     _Rtcc_UnlockRtc:
 19180                           	opt stack 15
 19181                           
 19182                           ;incstack = 0
 19183  00680C  010F               	movlb	15	;# 
 19184  00680E  0E55               	movlw	85	;# 
 19185  006810  6EA7               	movwf	4007,c	;# 
 19186  006812  0EAA               	movlw	170	;# 
 19187  006814  6EA7               	movwf	4007,c	;# 
 19188                           
 19189                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 19190  006816  010F               	movlb	15	; () banked
 19191  006818  8B3F               	bsf	63,5,b	;volatile
 19192                           
 19193                           ; BSR set to: 15
 19194  00681A  0012               	return		;funcret
 19195  00681C                     __end_of_Rtcc_UnlockRtc:
 19196                           	opt stack 0
 19197                           tosu	equ	0xFFF
 19198                           tosh	equ	0xFFE
 19199                           tosl	equ	0xFFD
 19200                           pclath	equ	0xFFA
 19201                           tblptru	equ	0xFF8
 19202                           tblptrh	equ	0xFF7
 19203                           tblptrl	equ	0xFF6
 19204                           tablat	equ	0xFF5
 19205                           prodh	equ	0xFF4
 19206                           prodl	equ	0xFF3
 19207                           intcon	equ	0xFF2
 19208                           intcon2	equ	0xFF1
 19209                           intcon3	equ	0xFF0
 19210                           indf0	equ	0xFEF
 19211                           postinc0	equ	0xFEE
 19212                           plusw0	equ	0xFEB
 19213                           fsr0h	equ	0xFEA
 19214                           fsr0l	equ	0xFE9
 19215                           wreg	equ	0xFE8
 19216                           indf1	equ	0xFE7
 19217                           postinc1	equ	0xFE6
 19218                           postdec1	equ	0xFE5
 19219                           fsr1h	equ	0xFE2
 19220                           fsr1l	equ	0xFE1
 19221                           indf2	equ	0xFDF
 19222                           postinc2	equ	0xFDE
 19223                           postdec2	equ	0xFDD
 19224                           plusw2	equ	0xFDB
 19225                           fsr2h	equ	0xFDA
 19226                           fsr2l	equ	0xFD9
 19227                           status	equ	0xFD8
 19228                           
 19229 ;; *************** function _Rtcc_SetRtccValue *****************
 19230 ;; Defined at:
 19231 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19232 ;; Parameters:    Size  Location     Type
 19233 ;;  RtccPtrVal      1    wreg     enum E7757
 19234 ;;  Value           1   37[BANK0 ] unsigned char 
 19235 ;; Auto vars:     Size  Location     Type
 19236 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 19237 ;; Return value:  Size  Location     Type
 19238 ;;                  1    wreg      void 
 19239 ;; Registers used:
 19240 ;;		wreg, status,2, status,0, cstack
 19241 ;; Tracked objects:
 19242 ;;		On entry : 0/0
 19243 ;;		On exit  : 0/0
 19244 ;;		Unchanged: 0/0
 19245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19246 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;Total ram usage:        4 bytes
 19251 ;; Hardware stack levels used:    1
 19252 ;; Hardware stack levels required when called:   12
 19253 ;; This function calls:
 19254 ;;		___awdiv
 19255 ;;		___awmod
 19256 ;; This function is called by:
 19257 ;;		_Rtcm_SetRtccDate
 19258 ;; This function uses a non-reentrant model
 19259 ;;
 19260                           
 19261                           	psect	text80
 19262  0018DC                     __ptext80:
 19263                           	opt stack 0
 19264  0018DC                     _Rtcc_SetRtccValue:
 19265                           	opt stack 14
 19266                           
 19267                           ; BSR set to: 15
 19268                           ;incstack = 0
 19269                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 19270  0018DC  0100               	movlb	0	; () banked
 19271  0018DE  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 19272                           
 19273                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 19274  0018E0  D0FC               	goto	l441
 19275  0018E2                     l442:
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 19279  0018E2  010F               	movlb	15	; () banked
 19280  0018E4  833F               	bsf	63,1,b	;volatile
 19281                           
 19282                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 19283  0018E6  813F               	bsf	63,0,b	;volatile
 19284                           
 19285                           ; BSR set to: 15
 19286                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19287  0018E8  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19288  0018EC  0100               	movlb	0	; () banked
 19289  0018EE  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19290  0018F0  0E00               	movlw	0
 19291  0018F2  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19292  0018F4  0E0A               	movlw	10
 19293  0018F6  6F7F               	movwf	___awmod@divisor& (0+255),b
 19294  0018F8  ECA4  F028         	call	___awmod	;wreg free
 19295  0018FC  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19296  001900  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19297  001904  0E0F               	movlw	15
 19298  001906  0100               	movlb	0	; () banked
 19299  001908  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19300  00190A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19301  00190E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19302  001910  0E00               	movlw	0
 19303  001912  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19304  001914  0E0A               	movlw	10
 19305  001916  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19306  001918  ECDE  F027         	call	___awdiv	;wreg free
 19307  00191C  0100               	movlb	0	; () banked
 19308  00191E  397D               	swapf	?___awdiv& (0+255),w,b
 19309  001920  0BF0               	andlw	240
 19310  001922  0BF0               	andlw	240
 19311  001924  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19312  001926  6E98               	movwf	3992,c	;volatile
 19313                           
 19314                           ;rtcc_drv.c: 393: break;
 19315  001928  0012               	return	
 19316  00192A                     l444:
 19317                           
 19318                           ; BSR set to: 0
 19319                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 19320  00192A  010F               	movlb	15	; () banked
 19321  00192C  833F               	bsf	63,1,b	;volatile
 19322                           
 19323                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 19324  00192E  913F               	bcf	63,0,b	;volatile
 19325                           
 19326                           ; BSR set to: 15
 19327                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19328  001930  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19329  001934  0100               	movlb	0	; () banked
 19330  001936  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19331  001938  0E00               	movlw	0
 19332  00193A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19333  00193C  0E0A               	movlw	10
 19334  00193E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19335  001940  ECA4  F028         	call	___awmod	;wreg free
 19336  001944  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19337  001948  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19338  00194C  0E0F               	movlw	15
 19339  00194E  0100               	movlb	0	; () banked
 19340  001950  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19341  001952  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19342  001956  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19343  001958  0E00               	movlw	0
 19344  00195A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19345  00195C  0E0A               	movlw	10
 19346  00195E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19347  001960  ECDE  F027         	call	___awdiv	;wreg free
 19348  001964  0100               	movlb	0	; () banked
 19349  001966  397D               	swapf	?___awdiv& (0+255),w,b
 19350  001968  0BF0               	andlw	240
 19351  00196A  0BF0               	andlw	240
 19352  00196C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19353  00196E  6E99               	movwf	3993,c	;volatile
 19354                           
 19355                           ;rtcc_drv.c: 401: break;
 19356  001970  0012               	return	
 19357  001972                     l445:
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 19361  001972  010F               	movlb	15	; () banked
 19362  001974  833F               	bsf	63,1,b	;volatile
 19363                           
 19364                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 19365  001976  913F               	bcf	63,0,b	;volatile
 19366                           
 19367                           ; BSR set to: 15
 19368                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19369  001978  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19370  00197C  0100               	movlb	0	; () banked
 19371  00197E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19372  001980  0E00               	movlw	0
 19373  001982  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19374  001984  0E0A               	movlw	10
 19375  001986  6F7F               	movwf	___awmod@divisor& (0+255),b
 19376  001988  ECA4  F028         	call	___awmod	;wreg free
 19377  00198C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19378  001990  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19379  001994  0E0F               	movlw	15
 19380  001996  0100               	movlb	0	; () banked
 19381  001998  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19382  00199A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19383  00199E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19384  0019A0  0E00               	movlw	0
 19385  0019A2  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19386  0019A4  0E0A               	movlw	10
 19387  0019A6  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19388  0019A8  ECDE  F027         	call	___awdiv	;wreg free
 19389  0019AC  0100               	movlb	0	; () banked
 19390  0019AE  397D               	swapf	?___awdiv& (0+255),w,b
 19391  0019B0  0BF0               	andlw	240
 19392  0019B2  0BF0               	andlw	240
 19393  0019B4  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19394  0019B6  6E98               	movwf	3992,c	;volatile
 19395                           
 19396                           ;rtcc_drv.c: 409: break;
 19397  0019B8  0012               	return	
 19398  0019BA                     l446:
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 19402  0019BA  010F               	movlb	15	; () banked
 19403  0019BC  933F               	bcf	63,1,b	;volatile
 19404                           
 19405                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 19406  0019BE  813F               	bsf	63,0,b	;volatile
 19407                           
 19408                           ; BSR set to: 15
 19409                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19410  0019C0  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19411  0019C4  0100               	movlb	0	; () banked
 19412  0019C6  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19413  0019C8  0E00               	movlw	0
 19414  0019CA  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19415  0019CC  0E0A               	movlw	10
 19416  0019CE  6F7F               	movwf	___awmod@divisor& (0+255),b
 19417  0019D0  ECA4  F028         	call	___awmod	;wreg free
 19418  0019D4  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19419  0019D8  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19420  0019DC  0E0F               	movlw	15
 19421  0019DE  0100               	movlb	0	; () banked
 19422  0019E0  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19423  0019E2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19424  0019E6  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19425  0019E8  0E00               	movlw	0
 19426  0019EA  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19427  0019EC  0E0A               	movlw	10
 19428  0019EE  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19429  0019F0  ECDE  F027         	call	___awdiv	;wreg free
 19430  0019F4  0100               	movlb	0	; () banked
 19431  0019F6  397D               	swapf	?___awdiv& (0+255),w,b
 19432  0019F8  0BF0               	andlw	240
 19433  0019FA  0BF0               	andlw	240
 19434  0019FC  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19435  0019FE  6E99               	movwf	3993,c	;volatile
 19436                           
 19437                           ;rtcc_drv.c: 417: break;
 19438  001A00  0012               	return	
 19439  001A02                     l447:
 19440                           
 19441                           ; BSR set to: 0
 19442                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19443  001A02  010F               	movlb	15	; () banked
 19444  001A04  933F               	bcf	63,1,b	;volatile
 19445                           
 19446                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19447  001A06  813F               	bsf	63,0,b	;volatile
 19448                           
 19449                           ; BSR set to: 15
 19450                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19451  001A08  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19452  001A0C  0100               	movlb	0	; () banked
 19453  001A0E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19454  001A10  0E00               	movlw	0
 19455  001A12  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19456  001A14  0E0A               	movlw	10
 19457  001A16  6F7F               	movwf	___awmod@divisor& (0+255),b
 19458  001A18  ECA4  F028         	call	___awmod	;wreg free
 19459  001A1C  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19460  001A20  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19461  001A24  0E0F               	movlw	15
 19462  001A26  0100               	movlb	0	; () banked
 19463  001A28  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19464  001A2A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19465  001A2E  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19466  001A30  0E00               	movlw	0
 19467  001A32  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19468  001A34  0E0A               	movlw	10
 19469  001A36  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19470  001A38  ECDE  F027         	call	___awdiv	;wreg free
 19471  001A3C  0100               	movlb	0	; () banked
 19472  001A3E  397D               	swapf	?___awdiv& (0+255),w,b
 19473  001A40  0BF0               	andlw	240
 19474  001A42  0BF0               	andlw	240
 19475  001A44  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19476  001A46  6E98               	movwf	3992,c	;volatile
 19477                           
 19478                           ;rtcc_drv.c: 425: break;
 19479  001A48  0012               	return	
 19480  001A4A                     l448:
 19481                           
 19482                           ; BSR set to: 0
 19483                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19484  001A4A  010F               	movlb	15	; () banked
 19485  001A4C  933F               	bcf	63,1,b	;volatile
 19486                           
 19487                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19488  001A4E  913F               	bcf	63,0,b	;volatile
 19489                           
 19490                           ; BSR set to: 15
 19491                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19492  001A50  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19493  001A54  0100               	movlb	0	; () banked
 19494  001A56  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19495  001A58  0E00               	movlw	0
 19496  001A5A  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19497  001A5C  0E0A               	movlw	10
 19498  001A5E  6F7F               	movwf	___awmod@divisor& (0+255),b
 19499  001A60  ECA4  F028         	call	___awmod	;wreg free
 19500  001A64  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19501  001A68  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19502  001A6C  0E0F               	movlw	15
 19503  001A6E  0100               	movlb	0	; () banked
 19504  001A70  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19505  001A72  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19506  001A76  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19507  001A78  0E00               	movlw	0
 19508  001A7A  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19509  001A7C  0E0A               	movlw	10
 19510  001A7E  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19511  001A80  ECDE  F027         	call	___awdiv	;wreg free
 19512  001A84  0100               	movlb	0	; () banked
 19513  001A86  397D               	swapf	?___awdiv& (0+255),w,b
 19514  001A88  0BF0               	andlw	240
 19515  001A8A  0BF0               	andlw	240
 19516  001A8C  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19517  001A8E  6E99               	movwf	3993,c	;volatile
 19518                           
 19519                           ;rtcc_drv.c: 433: break;
 19520  001A90  0012               	return	
 19521  001A92                     l449:
 19522                           
 19523                           ; BSR set to: 0
 19524                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19525  001A92  010F               	movlb	15	; () banked
 19526  001A94  933F               	bcf	63,1,b	;volatile
 19527                           
 19528                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19529  001A96  913F               	bcf	63,0,b	;volatile
 19530                           
 19531                           ; BSR set to: 15
 19532                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19533  001A98  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19534  001A9C  0100               	movlb	0	; () banked
 19535  001A9E  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19536  001AA0  0E00               	movlw	0
 19537  001AA2  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19538  001AA4  0E0A               	movlw	10
 19539  001AA6  6F7F               	movwf	___awmod@divisor& (0+255),b
 19540  001AA8  ECA4  F028         	call	___awmod	;wreg free
 19541  001AAC  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19542  001AB0  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19543  001AB4  0E0F               	movlw	15
 19544  001AB6  0100               	movlb	0	; () banked
 19545  001AB8  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19546  001ABA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19547  001ABE  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19548  001AC0  0E00               	movlw	0
 19549  001AC2  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19550  001AC4  0E0A               	movlw	10
 19551  001AC6  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19552  001AC8  ECDE  F027         	call	___awdiv	;wreg free
 19553  001ACC  0100               	movlb	0	; () banked
 19554  001ACE  397D               	swapf	?___awdiv& (0+255),w,b
 19555  001AD0  0BF0               	andlw	240
 19556  001AD2  0BF0               	andlw	240
 19557  001AD4  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19558  001AD6  6E98               	movwf	3992,c	;volatile
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;rtcc_drv.c: 445: }
 19562                           
 19563                           ; BSR set to: 0
 19564                           ;rtcc_drv.c: 444: break;
 19565                           
 19566                           ;rtcc_drv.c: 443: default:
 19567                           
 19568                           ;rtcc_drv.c: 441: break;
 19569  001AD8  0012               	return	
 19570  001ADA                     l441:
 19571                           
 19572                           ; BSR set to: 0
 19573  001ADA  0100               	movlb	0	; () banked
 19574  001ADC  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19575                           
 19576                           ; Switch size 1, requested type "space"
 19577                           ; Number of cases is 7, Range of values is 0 to 6
 19578                           ; switch strategies available:
 19579                           ; Name         Instructions Cycles
 19580                           ; simple_byte           22    12 (average)
 19581                           ;	Chosen strategy is simple_byte
 19582  001ADE  0A00               	xorlw	0	; case 0
 19583  001AE0  B4D8               	btfsc	status,2,c
 19584  001AE2  D6FF               	goto	l442
 19585  001AE4  0A01               	xorlw	1	; case 1
 19586  001AE6  B4D8               	btfsc	status,2,c
 19587  001AE8  D720               	goto	l444
 19588  001AEA  0A03               	xorlw	3	; case 2
 19589  001AEC  B4D8               	btfsc	status,2,c
 19590  001AEE  D741               	goto	l445
 19591  001AF0  0A01               	xorlw	1	; case 3
 19592  001AF2  B4D8               	btfsc	status,2,c
 19593  001AF4  D762               	goto	l446
 19594  001AF6  0A07               	xorlw	7	; case 4
 19595  001AF8  B4D8               	btfsc	status,2,c
 19596  001AFA  D783               	goto	l447
 19597  001AFC  0A01               	xorlw	1	; case 5
 19598  001AFE  B4D8               	btfsc	status,2,c
 19599  001B00  D7A4               	goto	l448
 19600  001B02  0A03               	xorlw	3	; case 6
 19601  001B04  A4D8               	btfss	status,2,c
 19602  001B06  0012               	return	
 19603  001B08  D7C4               	goto	l449
 19604  001B0A                     __end_of_Rtcc_SetRtccValue:
 19605                           	opt stack 0
 19606                           tosu	equ	0xFFF
 19607                           tosh	equ	0xFFE
 19608                           tosl	equ	0xFFD
 19609                           pclath	equ	0xFFA
 19610                           tblptru	equ	0xFF8
 19611                           tblptrh	equ	0xFF7
 19612                           tblptrl	equ	0xFF6
 19613                           tablat	equ	0xFF5
 19614                           prodh	equ	0xFF4
 19615                           prodl	equ	0xFF3
 19616                           intcon	equ	0xFF2
 19617                           intcon2	equ	0xFF1
 19618                           intcon3	equ	0xFF0
 19619                           indf0	equ	0xFEF
 19620                           postinc0	equ	0xFEE
 19621                           plusw0	equ	0xFEB
 19622                           fsr0h	equ	0xFEA
 19623                           fsr0l	equ	0xFE9
 19624                           wreg	equ	0xFE8
 19625                           indf1	equ	0xFE7
 19626                           postinc1	equ	0xFE6
 19627                           postdec1	equ	0xFE5
 19628                           fsr1h	equ	0xFE2
 19629                           fsr1l	equ	0xFE1
 19630                           indf2	equ	0xFDF
 19631                           postinc2	equ	0xFDE
 19632                           postdec2	equ	0xFDD
 19633                           plusw2	equ	0xFDB
 19634                           fsr2h	equ	0xFDA
 19635                           fsr2l	equ	0xFD9
 19636                           status	equ	0xFD8
 19637                           
 19638 ;; *************** function ___awmod *****************
 19639 ;; Defined at:
 19640 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19641 ;; Parameters:    Size  Location     Type
 19642 ;;  dividend        2   29[BANK0 ] int 
 19643 ;;  divisor         2   31[BANK0 ] int 
 19644 ;; Auto vars:     Size  Location     Type
 19645 ;;  sign            1   34[BANK0 ] unsigned char 
 19646 ;;  counter         1   33[BANK0 ] unsigned char 
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  2   29[BANK0 ] int 
 19649 ;; Registers used:
 19650 ;;		wreg, status,2, status,0
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19659 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19660 ;;Total ram usage:        6 bytes
 19661 ;; Hardware stack levels used:    1
 19662 ;; Hardware stack levels required when called:   11
 19663 ;; This function calls:
 19664 ;;		Nothing
 19665 ;; This function is called by:
 19666 ;;		_Rtcc_SetRtccValue
 19667 ;;		_Rtcc_SetRtccAlarm
 19668 ;; This function uses a non-reentrant model
 19669 ;;
 19670                           
 19671                           	psect	text81
 19672  005148                     __ptext81:
 19673                           	opt stack 0
 19674  005148                     ___awmod:
 19675                           	opt stack 14
 19676                           
 19677                           ; BSR set to: 0
 19678                           ;incstack = 0
 19679  005148  0E00               	movlw	0
 19680  00514A  0100               	movlb	0	; () banked
 19681  00514C  6F82               	movwf	___awmod@sign& (0+255),b
 19682                           
 19683                           ; BSR set to: 0
 19684  00514E  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19685  005150  D006               	goto	l3033
 19686                           
 19687                           ; BSR set to: 0
 19688  005152  6D7D               	negf	___awmod@dividend& (0+255),b
 19689  005154  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19690  005156  B0D8               	btfsc	status,0,c
 19691  005158  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19692                           
 19693                           ; BSR set to: 0
 19694  00515A  0E01               	movlw	1
 19695  00515C  6F82               	movwf	___awmod@sign& (0+255),b
 19696  00515E                     l3033:
 19697                           
 19698                           ; BSR set to: 0
 19699                           
 19700                           ; BSR set to: 0
 19701  00515E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19702  005160  D004               	goto	l3034
 19703                           
 19704                           ; BSR set to: 0
 19705  005162  6D7F               	negf	___awmod@divisor& (0+255),b
 19706  005164  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19707  005166  B0D8               	btfsc	status,0,c
 19708  005168  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19709  00516A                     l3034:
 19710                           
 19711                           ; BSR set to: 0
 19712                           
 19713                           ; BSR set to: 0
 19714  00516A  517F               	movf	___awmod@divisor& (0+255),w,b
 19715  00516C  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19716  00516E  B4D8               	btfsc	status,2,c
 19717  005170  D018               	goto	l3041
 19718                           
 19719                           ; BSR set to: 0
 19720  005172  0E01               	movlw	1
 19721  005174  6F81               	movwf	___awmod@counter& (0+255),b
 19722  005176  D004               	goto	l3036
 19723  005178                     
 19724                           ; BSR set to: 0
 19725                           
 19726                           ; BSR set to: 0
 19727  005178  90D8               	bcf	status,0,c
 19728  00517A  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19729  00517C  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19730  00517E  2B81               	incf	___awmod@counter& (0+255),f,b
 19731  005180                     l3036:
 19732                           
 19733                           ; BSR set to: 0
 19734                           
 19735                           ; BSR set to: 0
 19736  005180  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19737  005182  D7FA               	goto	l3037
 19738  005184                     u13110:
 19739                           
 19740                           ; BSR set to: 0
 19741                           
 19742                           ; BSR set to: 0
 19743                           
 19744                           ; BSR set to: 0
 19745  005184  517F               	movf	___awmod@divisor& (0+255),w,b
 19746  005186  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19747  005188  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19748  00518A  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19749  00518C  A0D8               	btfss	status,0,c
 19750  00518E  D004               	goto	l3040
 19751                           
 19752                           ; BSR set to: 0
 19753  005190  517F               	movf	___awmod@divisor& (0+255),w,b
 19754  005192  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19755  005194  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19756  005196  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19757  005198                     l3040:
 19758                           
 19759                           ; BSR set to: 0
 19760                           
 19761                           ; BSR set to: 0
 19762  005198  90D8               	bcf	status,0,c
 19763  00519A  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19764  00519C  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19765                           
 19766                           ; BSR set to: 0
 19767  00519E  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19768  0051A0  D7F1               	goto	u13110
 19769  0051A2                     l3041:
 19770                           
 19771                           ; BSR set to: 0
 19772                           
 19773                           ; BSR set to: 0
 19774                           
 19775                           ; BSR set to: 0
 19776  0051A2  5182               	movf	___awmod@sign& (0+255),w,b
 19777  0051A4  B4D8               	btfsc	status,2,c
 19778  0051A6  D004               	goto	l3042
 19779                           
 19780                           ; BSR set to: 0
 19781  0051A8  6D7D               	negf	___awmod@dividend& (0+255),b
 19782  0051AA  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19783  0051AC  B0D8               	btfsc	status,0,c
 19784  0051AE  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19785  0051B0                     l3042:
 19786                           
 19787                           ; BSR set to: 0
 19788                           
 19789                           ; BSR set to: 0
 19790  0051B0  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19791  0051B4  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19792  0051B8  0012               	return	
 19793  0051BA                     __end_of___awmod:
 19794                           	opt stack 0
 19795                           tosu	equ	0xFFF
 19796                           tosh	equ	0xFFE
 19797                           tosl	equ	0xFFD
 19798                           pclath	equ	0xFFA
 19799                           tblptru	equ	0xFF8
 19800                           tblptrh	equ	0xFF7
 19801                           tblptrl	equ	0xFF6
 19802                           tablat	equ	0xFF5
 19803                           prodh	equ	0xFF4
 19804                           prodl	equ	0xFF3
 19805                           intcon	equ	0xFF2
 19806                           intcon2	equ	0xFF1
 19807                           intcon3	equ	0xFF0
 19808                           indf0	equ	0xFEF
 19809                           postinc0	equ	0xFEE
 19810                           plusw0	equ	0xFEB
 19811                           fsr0h	equ	0xFEA
 19812                           fsr0l	equ	0xFE9
 19813                           wreg	equ	0xFE8
 19814                           indf1	equ	0xFE7
 19815                           postinc1	equ	0xFE6
 19816                           postdec1	equ	0xFE5
 19817                           fsr1h	equ	0xFE2
 19818                           fsr1l	equ	0xFE1
 19819                           indf2	equ	0xFDF
 19820                           postinc2	equ	0xFDE
 19821                           postdec2	equ	0xFDD
 19822                           plusw2	equ	0xFDB
 19823                           fsr2h	equ	0xFDA
 19824                           fsr2l	equ	0xFD9
 19825                           status	equ	0xFD8
 19826                           
 19827 ;; *************** function ___awdiv *****************
 19828 ;; Defined at:
 19829 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19830 ;; Parameters:    Size  Location     Type
 19831 ;;  dividend        2   29[BANK0 ] int 
 19832 ;;  divisor         2   31[BANK0 ] int 
 19833 ;; Auto vars:     Size  Location     Type
 19834 ;;  quotient        2   35[BANK0 ] int 
 19835 ;;  sign            1   34[BANK0 ] unsigned char 
 19836 ;;  counter         1   33[BANK0 ] unsigned char 
 19837 ;; Return value:  Size  Location     Type
 19838 ;;                  2   29[BANK0 ] int 
 19839 ;; Registers used:
 19840 ;;		wreg, status,2, status,0
 19841 ;; Tracked objects:
 19842 ;;		On entry : 0/0
 19843 ;;		On exit  : 0/0
 19844 ;;		Unchanged: 0/0
 19845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19847 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19849 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19850 ;;Total ram usage:        8 bytes
 19851 ;; Hardware stack levels used:    1
 19852 ;; Hardware stack levels required when called:   11
 19853 ;; This function calls:
 19854 ;;		Nothing
 19855 ;; This function is called by:
 19856 ;;		_Rtcc_SetRtccValue
 19857 ;;		_Rtcc_SetRtccAlarm
 19858 ;; This function uses a non-reentrant model
 19859 ;;
 19860                           
 19861                           	psect	text82
 19862  004FBC                     __ptext82:
 19863                           	opt stack 0
 19864  004FBC                     ___awdiv:
 19865                           	opt stack 14
 19866                           
 19867                           ; BSR set to: 0
 19868                           ;incstack = 0
 19869  004FBC  0E00               	movlw	0
 19870  004FBE  0100               	movlb	0	; () banked
 19871  004FC0  6F82               	movwf	___awdiv@sign& (0+255),b
 19872                           
 19873                           ; BSR set to: 0
 19874  004FC2  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19875  004FC4  D006               	goto	l3020
 19876                           
 19877                           ; BSR set to: 0
 19878  004FC6  6D7F               	negf	___awdiv@divisor& (0+255),b
 19879  004FC8  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19880  004FCA  B0D8               	btfsc	status,0,c
 19881  004FCC  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19882                           
 19883                           ; BSR set to: 0
 19884  004FCE  0E01               	movlw	1
 19885  004FD0  6F82               	movwf	___awdiv@sign& (0+255),b
 19886  004FD2                     l3020:
 19887                           
 19888                           ; BSR set to: 0
 19889                           
 19890                           ; BSR set to: 0
 19891  004FD2  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19892  004FD4  D006               	goto	l3021
 19893                           
 19894                           ; BSR set to: 0
 19895  004FD6  6D7D               	negf	___awdiv@dividend& (0+255),b
 19896  004FD8  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19897  004FDA  B0D8               	btfsc	status,0,c
 19898  004FDC  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19899                           
 19900                           ; BSR set to: 0
 19901  004FDE  0E01               	movlw	1
 19902  004FE0  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19903  004FE2                     l3021:
 19904                           
 19905                           ; BSR set to: 0
 19906                           
 19907                           ; BSR set to: 0
 19908  004FE2  0E00               	movlw	0
 19909  004FE4  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19910  004FE6  0E00               	movlw	0
 19911  004FE8  6F83               	movwf	___awdiv@quotient& (0+255),b
 19912                           
 19913                           ; BSR set to: 0
 19914  004FEA  517F               	movf	___awdiv@divisor& (0+255),w,b
 19915  004FEC  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19916  004FEE  B4D8               	btfsc	status,2,c
 19917  004FF0  D01C               	goto	l3028
 19918                           
 19919                           ; BSR set to: 0
 19920  004FF2  0E01               	movlw	1
 19921  004FF4  6F81               	movwf	___awdiv@counter& (0+255),b
 19922  004FF6  D004               	goto	l3023
 19923  004FF8                     
 19924                           ; BSR set to: 0
 19925                           
 19926                           ; BSR set to: 0
 19927  004FF8  90D8               	bcf	status,0,c
 19928  004FFA  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19929  004FFC  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19930  004FFE  2B81               	incf	___awdiv@counter& (0+255),f,b
 19931  005000                     l3023:
 19932                           
 19933                           ; BSR set to: 0
 19934                           
 19935                           ; BSR set to: 0
 19936  005000  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19937  005002  D7FA               	goto	l3024
 19938  005004                     u13050:
 19939                           
 19940                           ; BSR set to: 0
 19941                           
 19942                           ; BSR set to: 0
 19943                           
 19944                           ; BSR set to: 0
 19945  005004  90D8               	bcf	status,0,c
 19946  005006  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19947  005008  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19948                           
 19949                           ; BSR set to: 0
 19950  00500A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19951  00500C  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19952  00500E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19953  005010  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19954  005012  A0D8               	btfss	status,0,c
 19955  005014  D005               	goto	l3027
 19956                           
 19957                           ; BSR set to: 0
 19958  005016  517F               	movf	___awdiv@divisor& (0+255),w,b
 19959  005018  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19960  00501A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19961  00501C  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19962                           
 19963                           ; BSR set to: 0
 19964  00501E  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19965  005020                     l3027:
 19966                           
 19967                           ; BSR set to: 0
 19968                           
 19969                           ; BSR set to: 0
 19970  005020  90D8               	bcf	status,0,c
 19971  005022  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19972  005024  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19973                           
 19974                           ; BSR set to: 0
 19975  005026  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19976  005028  D7ED               	goto	u13050
 19977  00502A                     l3028:
 19978                           
 19979                           ; BSR set to: 0
 19980                           
 19981                           ; BSR set to: 0
 19982                           
 19983                           ; BSR set to: 0
 19984  00502A  5182               	movf	___awdiv@sign& (0+255),w,b
 19985  00502C  B4D8               	btfsc	status,2,c
 19986  00502E  D004               	goto	l3029
 19987                           
 19988                           ; BSR set to: 0
 19989  005030  6D83               	negf	___awdiv@quotient& (0+255),b
 19990  005032  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19991  005034  B0D8               	btfsc	status,0,c
 19992  005036  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19993  005038                     l3029:
 19994                           
 19995                           ; BSR set to: 0
 19996                           
 19997                           ; BSR set to: 0
 19998  005038  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19999  00503C  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 20000  005040  0012               	return	
 20001  005042                     __end_of___awdiv:
 20002                           	opt stack 0
 20003                           tosu	equ	0xFFF
 20004                           tosh	equ	0xFFE
 20005                           tosl	equ	0xFFD
 20006                           pclath	equ	0xFFA
 20007                           tblptru	equ	0xFF8
 20008                           tblptrh	equ	0xFF7
 20009                           tblptrl	equ	0xFF6
 20010                           tablat	equ	0xFF5
 20011                           prodh	equ	0xFF4
 20012                           prodl	equ	0xFF3
 20013                           intcon	equ	0xFF2
 20014                           intcon2	equ	0xFF1
 20015                           intcon3	equ	0xFF0
 20016                           indf0	equ	0xFEF
 20017                           postinc0	equ	0xFEE
 20018                           plusw0	equ	0xFEB
 20019                           fsr0h	equ	0xFEA
 20020                           fsr0l	equ	0xFE9
 20021                           wreg	equ	0xFE8
 20022                           indf1	equ	0xFE7
 20023                           postinc1	equ	0xFE6
 20024                           postdec1	equ	0xFE5
 20025                           fsr1h	equ	0xFE2
 20026                           fsr1l	equ	0xFE1
 20027                           indf2	equ	0xFDF
 20028                           postinc2	equ	0xFDE
 20029                           postdec2	equ	0xFDD
 20030                           plusw2	equ	0xFDB
 20031                           fsr2h	equ	0xFDA
 20032                           fsr2l	equ	0xFD9
 20033                           status	equ	0xFD8
 20034                           
 20035 ;; *************** function _Rtcc_LockRtc *****************
 20036 ;; Defined at:
 20037 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20038 ;; Parameters:    Size  Location     Type
 20039 ;;		None
 20040 ;; Auto vars:     Size  Location     Type
 20041 ;;		None
 20042 ;; Return value:  Size  Location     Type
 20043 ;;                  1    wreg      void 
 20044 ;; Registers used:
 20045 ;;		None
 20046 ;; Tracked objects:
 20047 ;;		On entry : 0/0
 20048 ;;		On exit  : 0/0
 20049 ;;		Unchanged: 0/0
 20050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20055 ;;Total ram usage:        0 bytes
 20056 ;; Hardware stack levels used:    1
 20057 ;; Hardware stack levels required when called:   11
 20058 ;; This function calls:
 20059 ;;		Nothing
 20060 ;; This function is called by:
 20061 ;;		_Rtcm_MainTask
 20062 ;;		_Rtcm_SetRtccDate
 20063 ;;		_Rtcm_SetRtccAlarm
 20064 ;; This function uses a non-reentrant model
 20065 ;;
 20066                           
 20067                           	psect	text83
 20068  00681C                     __ptext83:
 20069                           	opt stack 0
 20070  00681C                     _Rtcc_LockRtc:
 20071                           	opt stack 15
 20072                           
 20073                           ; BSR set to: 0
 20074                           ;incstack = 0
 20075  00681C  010F               	movlb	15	;# 
 20076  00681E  0E55               	movlw	85	;# 
 20077  006820  6EA7               	movwf	4007,c	;# 
 20078  006822  0EAA               	movlw	170	;# 
 20079  006824  6EA7               	movwf	4007,c	;# 
 20080                           
 20081                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 20082  006826  010F               	movlb	15	; () banked
 20083  006828  9B3F               	bcf	63,5,b	;volatile
 20084                           
 20085                           ; BSR set to: 15
 20086  00682A  0012               	return		;funcret
 20087  00682C                     __end_of_Rtcc_LockRtc:
 20088                           	opt stack 0
 20089                           tosu	equ	0xFFF
 20090                           tosh	equ	0xFFE
 20091                           tosl	equ	0xFFD
 20092                           pclath	equ	0xFFA
 20093                           tblptru	equ	0xFF8
 20094                           tblptrh	equ	0xFF7
 20095                           tblptrl	equ	0xFF6
 20096                           tablat	equ	0xFF5
 20097                           prodh	equ	0xFF4
 20098                           prodl	equ	0xFF3
 20099                           intcon	equ	0xFF2
 20100                           intcon2	equ	0xFF1
 20101                           intcon3	equ	0xFF0
 20102                           indf0	equ	0xFEF
 20103                           postinc0	equ	0xFEE
 20104                           plusw0	equ	0xFEB
 20105                           fsr0h	equ	0xFEA
 20106                           fsr0l	equ	0xFE9
 20107                           wreg	equ	0xFE8
 20108                           indf1	equ	0xFE7
 20109                           postinc1	equ	0xFE6
 20110                           postdec1	equ	0xFE5
 20111                           fsr1h	equ	0xFE2
 20112                           fsr1l	equ	0xFE1
 20113                           indf2	equ	0xFDF
 20114                           postinc2	equ	0xFDE
 20115                           postdec2	equ	0xFDD
 20116                           plusw2	equ	0xFDB
 20117                           fsr2h	equ	0xFDA
 20118                           fsr2l	equ	0xFD9
 20119                           status	equ	0xFD8
 20120                           
 20121 ;; *************** function _Rtcm_GetRtccDate *****************
 20122 ;; Defined at:
 20123 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 20124 ;; Parameters:    Size  Location     Type
 20125 ;;		None
 20126 ;; Auto vars:     Size  Location     Type
 20127 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 20128 ;; Return value:  Size  Location     Type
 20129 ;;                  8   33[BANK0 ] struct _RtccDateType
 20130 ;; Registers used:
 20131 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20132 ;; Tracked objects:
 20133 ;;		On entry : 0/0
 20134 ;;		On exit  : 0/0
 20135 ;;		Unchanged: 0/0
 20136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20138 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20140 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20141 ;;Total ram usage:       17 bytes
 20142 ;; Hardware stack levels used:    1
 20143 ;; Hardware stack levels required when called:   12
 20144 ;; This function calls:
 20145 ;;		_Rtcc_GetRtccValue
 20146 ;; This function is called by:
 20147 ;;		_Rtcm_MainTask
 20148 ;; This function uses a non-reentrant model
 20149 ;;
 20150                           
 20151                           	psect	text84
 20152  0054AA                     __ptext84:
 20153                           	opt stack 0
 20154  0054AA                     _Rtcm_GetRtccDate:
 20155                           	opt stack 15
 20156                           
 20157                           ;rtcm.c: 204: RtccDateType LocalDate;
 20158                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 20159                           
 20160                           ; BSR set to: 15
 20161                           ;incstack = 0
 20162  0054AA  0E00               	movlw	0
 20163  0054AC  EC32  F026         	call	_Rtcc_GetRtccValue
 20164  0054B0  0100               	movlb	0	; () banked
 20165  0054B2  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 20166  0054B4  0ED0               	movlw	208
 20167  0054B6  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 20168  0054B8  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 20169  0054BA  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 20170  0054BC  0E07               	movlw	7
 20171  0054BE  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 20172                           
 20173                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 20174  0054C0  0E01               	movlw	1
 20175  0054C2  EC32  F026         	call	_Rtcc_GetRtccValue
 20176  0054C6  0100               	movlb	0	; () banked
 20177  0054C8  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 20178                           
 20179                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 20180  0054CA  0E02               	movlw	2
 20181  0054CC  EC32  F026         	call	_Rtcc_GetRtccValue
 20182  0054D0  0100               	movlb	0	; () banked
 20183  0054D2  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 20184                           
 20185                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 20186  0054D4  0E03               	movlw	3
 20187  0054D6  EC32  F026         	call	_Rtcc_GetRtccValue
 20188  0054DA  0100               	movlb	0	; () banked
 20189  0054DC  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 20190                           
 20191                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 20192  0054DE  0E04               	movlw	4
 20193  0054E0  EC32  F026         	call	_Rtcc_GetRtccValue
 20194  0054E4  0100               	movlb	0	; () banked
 20195  0054E6  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 20196                           
 20197                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 20198  0054E8  0E05               	movlw	5
 20199  0054EA  EC32  F026         	call	_Rtcc_GetRtccValue
 20200  0054EE  0100               	movlb	0	; () banked
 20201  0054F0  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 20202                           
 20203                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 20204  0054F2  0E06               	movlw	6
 20205  0054F4  EC32  F026         	call	_Rtcc_GetRtccValue
 20206  0054F8  0100               	movlb	0	; () banked
 20207  0054FA  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;rtcm.c: 216: return LocalDate;
 20211  0054FC  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 20212  005500  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 20213  005504  0E07               	movlw	7
 20214  005506                     u15391:
 20215  005506  CFDB FFEB          	movff	plusw2,plusw0
 20216  00550A  06E8               	decf	wreg,f,c
 20217  00550C  E2FC               	bc	u15391
 20218  00550E  0012               	return	
 20219  005510                     __end_of_Rtcm_GetRtccDate:
 20220                           	opt stack 0
 20221                           tosu	equ	0xFFF
 20222                           tosh	equ	0xFFE
 20223                           tosl	equ	0xFFD
 20224                           pclath	equ	0xFFA
 20225                           tblptru	equ	0xFF8
 20226                           tblptrh	equ	0xFF7
 20227                           tblptrl	equ	0xFF6
 20228                           tablat	equ	0xFF5
 20229                           prodh	equ	0xFF4
 20230                           prodl	equ	0xFF3
 20231                           intcon	equ	0xFF2
 20232                           intcon2	equ	0xFF1
 20233                           intcon3	equ	0xFF0
 20234                           indf0	equ	0xFEF
 20235                           postinc0	equ	0xFEE
 20236                           plusw0	equ	0xFEB
 20237                           fsr0h	equ	0xFEA
 20238                           fsr0l	equ	0xFE9
 20239                           wreg	equ	0xFE8
 20240                           indf1	equ	0xFE7
 20241                           postinc1	equ	0xFE6
 20242                           postdec1	equ	0xFE5
 20243                           fsr1h	equ	0xFE2
 20244                           fsr1l	equ	0xFE1
 20245                           indf2	equ	0xFDF
 20246                           postinc2	equ	0xFDE
 20247                           postdec2	equ	0xFDD
 20248                           plusw2	equ	0xFDB
 20249                           fsr2h	equ	0xFDA
 20250                           fsr2l	equ	0xFD9
 20251                           status	equ	0xFD8
 20252                           
 20253 ;; *************** function _Rtcc_GetRtccValue *****************
 20254 ;; Defined at:
 20255 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20256 ;; Parameters:    Size  Location     Type
 20257 ;;  RtccPtrVal      1    wreg     enum E7757
 20258 ;; Auto vars:     Size  Location     Type
 20259 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 20260 ;;  RegValue        1   32[BANK0 ] unsigned char 
 20261 ;;  RetValue        1   31[BANK0 ] unsigned char 
 20262 ;; Return value:  Size  Location     Type
 20263 ;;                  1    wreg      unsigned char 
 20264 ;; Registers used:
 20265 ;;		wreg, status,2, status,0, prodl, prodh
 20266 ;; Tracked objects:
 20267 ;;		On entry : 0/0
 20268 ;;		On exit  : 0/0
 20269 ;;		Unchanged: 0/0
 20270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20272 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20275 ;;Total ram usage:        4 bytes
 20276 ;; Hardware stack levels used:    1
 20277 ;; Hardware stack levels required when called:   11
 20278 ;; This function calls:
 20279 ;;		Nothing
 20280 ;; This function is called by:
 20281 ;;		_Rtcm_GetRtccDate
 20282 ;; This function uses a non-reentrant model
 20283 ;;
 20284                           
 20285                           	psect	text85
 20286  004C64                     __ptext85:
 20287                           	opt stack 0
 20288  004C64                     _Rtcc_GetRtccValue:
 20289                           	opt stack 15
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;incstack = 0
 20293                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 20294  004C64  0100               	movlb	0	; () banked
 20295  004C66  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 20296                           
 20297                           ;rtcc_drv.c: 208: UINT8 RegValue;
 20298                           ;rtcc_drv.c: 209: UINT8 RetValue;
 20299                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 20300  004C68  D02D               	goto	l416
 20301  004C6A                     l417:
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 20305  004C6A  010F               	movlb	15	; () banked
 20306  004C6C  833F               	bsf	63,1,b	;volatile
 20307  004C6E                     
 20308                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 20309  004C6E  813F               	bsf	63,0,b	;volatile
 20310  004C70  D01C               	goto	L18
 20311  004C72                     l419:
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 20315  004C72  010F               	movlb	15	; () banked
 20316  004C74  833F               	bsf	63,1,b	;volatile
 20317  004C76  D01E               	goto	L19
 20318  004C78                     l420:
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 20322  004C78  010F               	movlb	15	; () banked
 20323  004C7A  833F               	bsf	63,1,b	;volatile
 20324  004C7C  D021               	goto	L22
 20325  004C7E                     l14070:
 20326                           
 20327                           ; BSR set to: 15
 20328                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 20329  004C7E  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 20330  004C82  0E0F               	movlw	15
 20331  004C84  0100               	movlb	0	; () banked
 20332  004C86  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 20333  004C88  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 20334  004C8A  0B0F               	andlw	15
 20335  004C8C  0B0F               	andlw	15
 20336  004C8E  0D0A               	mullw	10
 20337  004C90  50F3               	movf	prodl,w,c
 20338  004C92  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 20339  004C94  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 20340                           
 20341                           ;rtcc_drv.c: 241: break;
 20342  004C96  D02D               	goto	l418
 20343  004C98                     l421:
 20344                           
 20345                           ; BSR set to: 0
 20346                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 20347  004C98  010F               	movlb	15	; () banked
 20348  004C9A  933F               	bcf	63,1,b	;volatile
 20349                           
 20350                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 20351  004C9C  813F               	bsf	63,0,b	;volatile
 20352                           
 20353                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 20354  004C9E  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 20355                           
 20356                           ;rtcc_drv.c: 249: break;
 20357  004CA2  D027               	goto	l418
 20358  004CA4                     l422:
 20359                           
 20360                           ; BSR set to: 0
 20361                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 20362  004CA4  010F               	movlb	15	; () banked
 20363  004CA6  933F               	bcf	63,1,b	;volatile
 20364  004CA8  D7E2               	goto	L20
 20365  004CAA                     L18:
 20366                           
 20367                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 20368  004CAA  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 20369  004CAE  D7E7               	goto	l14070
 20370  004CB0                     l423:
 20371                           
 20372                           ; BSR set to: 0
 20373                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 20374  004CB0  010F               	movlb	15	; () banked
 20375  004CB2  933F               	bcf	63,1,b	;volatile
 20376  004CB4                     L19:
 20377                           
 20378                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 20379  004CB4  913F               	bcf	63,0,b	;volatile
 20380                           
 20381                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 20382  004CB6  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 20383  004CBA  D7E1               	goto	l14070
 20384  004CBC                     l424:
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 20388  004CBC  010F               	movlb	15	; () banked
 20389  004CBE  933F               	bcf	63,1,b	;volatile
 20390  004CC0                     L22:
 20391                           
 20392                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 20393  004CC0  913F               	bcf	63,0,b	;volatile
 20394  004CC2  D7F3               	goto	L18
 20395  004CC4                     l416:
 20396                           
 20397                           ; BSR set to: 0
 20398  004CC4  0100               	movlb	0	; () banked
 20399  004CC6  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 20400                           
 20401                           ; Switch size 1, requested type "space"
 20402                           ; Number of cases is 7, Range of values is 0 to 6
 20403                           ; switch strategies available:
 20404                           ; Name         Instructions Cycles
 20405                           ; simple_byte           22    12 (average)
 20406                           ;	Chosen strategy is simple_byte
 20407  004CC8  0A00               	xorlw	0	; case 0
 20408  004CCA  B4D8               	btfsc	status,2,c
 20409  004CCC  D7CE               	goto	l417
 20410  004CCE  0A01               	xorlw	1	; case 1
 20411  004CD0  B4D8               	btfsc	status,2,c
 20412  004CD2  D7CF               	goto	l419
 20413  004CD4  0A03               	xorlw	3	; case 2
 20414  004CD6  B4D8               	btfsc	status,2,c
 20415  004CD8  D7CF               	goto	l420
 20416  004CDA  0A01               	xorlw	1	; case 3
 20417  004CDC  B4D8               	btfsc	status,2,c
 20418  004CDE  D7DC               	goto	l421
 20419  004CE0  0A07               	xorlw	7	; case 4
 20420  004CE2  B4D8               	btfsc	status,2,c
 20421  004CE4  D7DF               	goto	l422
 20422  004CE6  0A01               	xorlw	1	; case 5
 20423  004CE8  B4D8               	btfsc	status,2,c
 20424  004CEA  D7E2               	goto	l423
 20425  004CEC  0A03               	xorlw	3	; case 6
 20426  004CEE  B4D8               	btfsc	status,2,c
 20427  004CF0  D7E5               	goto	l424
 20428  004CF2                     l418:
 20429                           
 20430                           ;rtcc_drv.c: 286: return RetValue;
 20431                           
 20432                           ; BSR set to: 0
 20433  004CF2  0100               	movlb	0	; () banked
 20434  004CF4  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20435  004CF6  0012               	return	
 20436  004CF8                     __end_of_Rtcc_GetRtccValue:
 20437                           	opt stack 0
 20438                           tosu	equ	0xFFF
 20439                           tosh	equ	0xFFE
 20440                           tosl	equ	0xFFD
 20441                           pclath	equ	0xFFA
 20442                           tblptru	equ	0xFF8
 20443                           tblptrh	equ	0xFF7
 20444                           tblptrl	equ	0xFF6
 20445                           tablat	equ	0xFF5
 20446                           prodh	equ	0xFF4
 20447                           prodl	equ	0xFF3
 20448                           intcon	equ	0xFF2
 20449                           intcon2	equ	0xFF1
 20450                           intcon3	equ	0xFF0
 20451                           indf0	equ	0xFEF
 20452                           postinc0	equ	0xFEE
 20453                           plusw0	equ	0xFEB
 20454                           fsr0h	equ	0xFEA
 20455                           fsr0l	equ	0xFE9
 20456                           wreg	equ	0xFE8
 20457                           indf1	equ	0xFE7
 20458                           postinc1	equ	0xFE6
 20459                           postdec1	equ	0xFE5
 20460                           fsr1h	equ	0xFE2
 20461                           fsr1l	equ	0xFE1
 20462                           indf2	equ	0xFDF
 20463                           postinc2	equ	0xFDE
 20464                           postdec2	equ	0xFDD
 20465                           plusw2	equ	0xFDB
 20466                           fsr2h	equ	0xFDA
 20467                           fsr2l	equ	0xFD9
 20468                           status	equ	0xFD8
 20469                           
 20470 ;; *************** function _Rtcc_SetRtcStatus *****************
 20471 ;; Defined at:
 20472 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20473 ;; Parameters:    Size  Location     Type
 20474 ;;  Status          1    wreg     unsigned char 
 20475 ;; Auto vars:     Size  Location     Type
 20476 ;;  Status          1   29[BANK0 ] unsigned char 
 20477 ;; Return value:  Size  Location     Type
 20478 ;;                  1    wreg      void 
 20479 ;; Registers used:
 20480 ;;		wreg
 20481 ;; Tracked objects:
 20482 ;;		On entry : 0/0
 20483 ;;		On exit  : 0/0
 20484 ;;		Unchanged: 0/0
 20485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20489 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20490 ;;Total ram usage:        1 bytes
 20491 ;; Hardware stack levels used:    1
 20492 ;; Hardware stack levels required when called:   11
 20493 ;; This function calls:
 20494 ;;		Nothing
 20495 ;; This function is called by:
 20496 ;;		_Rtcm_MainTask
 20497 ;; This function uses a non-reentrant model
 20498 ;;
 20499                           
 20500                           	psect	text86
 20501  00676A                     __ptext86:
 20502                           	opt stack 0
 20503  00676A                     _Rtcc_SetRtcStatus:
 20504                           	opt stack 16
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;incstack = 0
 20508                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20509  00676A  0100               	movlb	0	; () banked
 20510  00676C  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20511                           
 20512                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20513  00676E  0100               	movlb	0	; () banked
 20514  006770  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20515  006772  D003               	bra	u14305
 20516  006774  010F               	movlb	15	; () banked
 20517  006776  9F3F               	bcf	63,7,b	;volatile
 20518  006778  D002               	bra	u14306
 20519  00677A                     u14305:
 20520  00677A  010F               	movlb	15	; () banked
 20521  00677C  8F3F               	bsf	63,7,b	;volatile
 20522  00677E                     u14306:
 20523                           
 20524                           ; BSR set to: 15
 20525  00677E  0012               	return		;funcret
 20526  006780                     __end_of_Rtcc_SetRtcStatus:
 20527                           	opt stack 0
 20528                           tosu	equ	0xFFF
 20529                           tosh	equ	0xFFE
 20530                           tosl	equ	0xFFD
 20531                           pclath	equ	0xFFA
 20532                           tblptru	equ	0xFF8
 20533                           tblptrh	equ	0xFF7
 20534                           tblptrl	equ	0xFF6
 20535                           tablat	equ	0xFF5
 20536                           prodh	equ	0xFF4
 20537                           prodl	equ	0xFF3
 20538                           intcon	equ	0xFF2
 20539                           intcon2	equ	0xFF1
 20540                           intcon3	equ	0xFF0
 20541                           indf0	equ	0xFEF
 20542                           postinc0	equ	0xFEE
 20543                           plusw0	equ	0xFEB
 20544                           fsr0h	equ	0xFEA
 20545                           fsr0l	equ	0xFE9
 20546                           wreg	equ	0xFE8
 20547                           indf1	equ	0xFE7
 20548                           postinc1	equ	0xFE6
 20549                           postdec1	equ	0xFE5
 20550                           fsr1h	equ	0xFE2
 20551                           fsr1l	equ	0xFE1
 20552                           indf2	equ	0xFDF
 20553                           postinc2	equ	0xFDE
 20554                           postdec2	equ	0xFDD
 20555                           plusw2	equ	0xFDB
 20556                           fsr2h	equ	0xFDA
 20557                           fsr2l	equ	0xFD9
 20558                           status	equ	0xFD8
 20559                           
 20560 ;; *************** function _Rtcc_RtcConfig *****************
 20561 ;; Defined at:
 20562 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20565 ;;		 -> RtcConfig(4), 
 20566 ;; Auto vars:     Size  Location     Type
 20567 ;;		None
 20568 ;; Return value:  Size  Location     Type
 20569 ;;                  1    wreg      void 
 20570 ;; Registers used:
 20571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20572 ;; Tracked objects:
 20573 ;;		On entry : 0/0
 20574 ;;		On exit  : 0/0
 20575 ;;		Unchanged: 0/0
 20576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20580 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20581 ;;Total ram usage:        3 bytes
 20582 ;; Hardware stack levels used:    1
 20583 ;; Hardware stack levels required when called:   12
 20584 ;; This function calls:
 20585 ;;		_RtccIrqInit
 20586 ;; This function is called by:
 20587 ;;		_Rtcm_MainTask
 20588 ;; This function uses a non-reentrant model
 20589 ;;
 20590                           
 20591                           	psect	text87
 20592  004830                     __ptext87:
 20593                           	opt stack 0
 20594  004830                     _Rtcc_RtcConfig:
 20595                           	opt stack 15
 20596                           
 20597                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20598                           
 20599                           ; BSR set to: 15
 20600                           ;incstack = 0
 20601  004830  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20602  004834  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20603  004838  50DF               	movf	indf2,w,c
 20604  00483A  0100               	movlb	0	; () banked
 20605  00483C  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20606  00483E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20607  004840  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20608  004842  010F               	movlb	15	; () banked
 20609  004844  513F               	movf	63,w,b	;volatile
 20610  004846  0100               	movlb	0	; () banked
 20611  004848  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20612  00484A  0BFB               	andlw	-5
 20613  00484C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20614  00484E  010F               	movlb	15	; () banked
 20615  004850  6F3F               	movwf	63,b	;volatile
 20616                           
 20617                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20618  004852  0100               	movlb	0	; () banked
 20619  004854  EE20 F001          	lfsr	2,1
 20620  004858  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20621  00485A  26D9               	addwf	fsr2l,f,c
 20622  00485C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20623  00485E  22DA               	addwfc	fsr2h,f,c
 20624  004860  50DF               	movf	indf2,w,c
 20625  004862  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20626  004864  0E01               	movlw	1
 20627  004866  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20628  004868  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20629  00486A  010F               	movlb	15	; () banked
 20630  00486C  513C               	movf	60,w,b	;volatile
 20631  00486E  0100               	movlb	0	; () banked
 20632  004870  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20633  004872  0BFD               	andlw	-3
 20634  004874  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20635  004876  010F               	movlb	15	; () banked
 20636  004878  6F3C               	movwf	60,b	;volatile
 20637                           
 20638                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20639  00487A  0100               	movlb	0	; () banked
 20640  00487C  EE20 F001          	lfsr	2,1
 20641  004880  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20642  004882  26D9               	addwf	fsr2l,f,c
 20643  004884  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20644  004886  22DA               	addwfc	fsr2h,f,c
 20645  004888  50DF               	movf	indf2,w,c
 20646  00488A  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20647  00488C  90D8               	bcf	status,0,c
 20648  00488E  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20649  004890  0E01               	movlw	1
 20650  004892  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20651  004894  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20652  004896  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20653  004898  010F               	movlb	15	; () banked
 20654  00489A  513C               	movf	60,w,b	;volatile
 20655  00489C  0100               	movlb	0	; () banked
 20656  00489E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20657  0048A0  0BFB               	andlw	-5
 20658  0048A2  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20659  0048A4  010F               	movlb	15	; () banked
 20660  0048A6  6F3C               	movwf	60,b	;volatile
 20661                           
 20662                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20663  0048A8  0100               	movlb	0	; () banked
 20664  0048AA  EE20 F002          	lfsr	2,2
 20665  0048AE  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20666  0048B0  26D9               	addwf	fsr2l,f,c
 20667  0048B2  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20668  0048B4  22DA               	addwfc	fsr2h,f,c
 20669  0048B6  04DE               	decf	postinc2,w,c
 20670  0048B8  A4D8               	btfss	status,2,c
 20671  0048BA  0012               	return	
 20672                           
 20673                           ; BSR set to: 0
 20674                           ;rtcc_drv.c: 115: {
 20675                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20676  0048BC  EE20 F003          	lfsr	2,3
 20677  0048C0  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20678  0048C2  26D9               	addwf	fsr2l,f,c
 20679  0048C4  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20680  0048C6  22DA               	addwfc	fsr2h,f,c
 20681  0048C8  50DF               	movf	indf2,w,c
 20682  0048CA  ECC0  F033         	call	_RtccIrqInit
 20683  0048CE  0012               	return	
 20684  0048D0                     __end_of_Rtcc_RtcConfig:
 20685                           	opt stack 0
 20686                           tosu	equ	0xFFF
 20687                           tosh	equ	0xFFE
 20688                           tosl	equ	0xFFD
 20689                           pclath	equ	0xFFA
 20690                           tblptru	equ	0xFF8
 20691                           tblptrh	equ	0xFF7
 20692                           tblptrl	equ	0xFF6
 20693                           tablat	equ	0xFF5
 20694                           prodh	equ	0xFF4
 20695                           prodl	equ	0xFF3
 20696                           intcon	equ	0xFF2
 20697                           intcon2	equ	0xFF1
 20698                           intcon3	equ	0xFF0
 20699                           indf0	equ	0xFEF
 20700                           postinc0	equ	0xFEE
 20701                           plusw0	equ	0xFEB
 20702                           fsr0h	equ	0xFEA
 20703                           fsr0l	equ	0xFE9
 20704                           wreg	equ	0xFE8
 20705                           indf1	equ	0xFE7
 20706                           postinc1	equ	0xFE6
 20707                           postdec1	equ	0xFE5
 20708                           fsr1h	equ	0xFE2
 20709                           fsr1l	equ	0xFE1
 20710                           indf2	equ	0xFDF
 20711                           postinc2	equ	0xFDE
 20712                           postdec2	equ	0xFDD
 20713                           plusw2	equ	0xFDB
 20714                           fsr2h	equ	0xFDA
 20715                           fsr2l	equ	0xFD9
 20716                           status	equ	0xFD8
 20717                           
 20718 ;; *************** function _RtccIrqInit *****************
 20719 ;; Defined at:
 20720 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20721 ;; Parameters:    Size  Location     Type
 20722 ;;  Priority        1    wreg     enum E7716
 20723 ;; Auto vars:     Size  Location     Type
 20724 ;;  Priority        1   29[BANK0 ] enum E7716
 20725 ;; Return value:  Size  Location     Type
 20726 ;;                  1    wreg      void 
 20727 ;; Registers used:
 20728 ;;		wreg
 20729 ;; Tracked objects:
 20730 ;;		On entry : 0/0
 20731 ;;		On exit  : 0/0
 20732 ;;		Unchanged: 0/0
 20733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20738 ;;Total ram usage:        1 bytes
 20739 ;; Hardware stack levels used:    1
 20740 ;; Hardware stack levels required when called:   11
 20741 ;; This function calls:
 20742 ;;		Nothing
 20743 ;; This function is called by:
 20744 ;;		_Rtcc_RtcConfig
 20745 ;; This function uses a non-reentrant model
 20746 ;;
 20747                           
 20748                           	psect	text88
 20749  006780                     __ptext88:
 20750                           	opt stack 0
 20751  006780                     _RtccIrqInit:
 20752                           	opt stack 15
 20753                           
 20754                           ;incstack = 0
 20755                           ;RtccIrqInit@Priority stored from wreg
 20756  006780  0100               	movlb	0	; () banked
 20757  006782  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20758                           
 20759                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20760  006784  90A4               	bcf	4004,0,c	;volatile
 20761                           
 20762                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20763  006786  0100               	movlb	0	; () banked
 20764  006788  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20765  00678A  D002               	bra	u13265
 20766  00678C  90A5               	bcf	4005,0,c	;volatile
 20767  00678E  D001               	bra	u13266
 20768  006790                     u13265:
 20769  006790  80A5               	bsf	4005,0,c	;volatile
 20770  006792                     u13266:
 20771                           
 20772                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20773  006792  80A3               	bsf	4003,0,c	;volatile
 20774  006794  0012               	return		;funcret
 20775  006796                     __end_of_RtccIrqInit:
 20776                           	opt stack 0
 20777                           tosu	equ	0xFFF
 20778                           tosh	equ	0xFFE
 20779                           tosl	equ	0xFFD
 20780                           pclath	equ	0xFFA
 20781                           tblptru	equ	0xFF8
 20782                           tblptrh	equ	0xFF7
 20783                           tblptrl	equ	0xFF6
 20784                           tablat	equ	0xFF5
 20785                           prodh	equ	0xFF4
 20786                           prodl	equ	0xFF3
 20787                           intcon	equ	0xFF2
 20788                           intcon2	equ	0xFF1
 20789                           intcon3	equ	0xFF0
 20790                           indf0	equ	0xFEF
 20791                           postinc0	equ	0xFEE
 20792                           plusw0	equ	0xFEB
 20793                           fsr0h	equ	0xFEA
 20794                           fsr0l	equ	0xFE9
 20795                           wreg	equ	0xFE8
 20796                           indf1	equ	0xFE7
 20797                           postinc1	equ	0xFE6
 20798                           postdec1	equ	0xFE5
 20799                           fsr1h	equ	0xFE2
 20800                           fsr1l	equ	0xFE1
 20801                           indf2	equ	0xFDF
 20802                           postinc2	equ	0xFDE
 20803                           postdec2	equ	0xFDD
 20804                           plusw2	equ	0xFDB
 20805                           fsr2h	equ	0xFDA
 20806                           fsr2l	equ	0xFD9
 20807                           status	equ	0xFD8
 20808                           
 20809 ;; *************** function _Rtcc_AlarmConfig *****************
 20810 ;; Defined at:
 20811 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20814 ;;		 -> AlCfg(4), 
 20815 ;; Auto vars:     Size  Location     Type
 20816 ;;		None
 20817 ;; Return value:  Size  Location     Type
 20818 ;;                  1    wreg      void 
 20819 ;; Registers used:
 20820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20821 ;; Tracked objects:
 20822 ;;		On entry : 0/0
 20823 ;;		On exit  : 0/0
 20824 ;;		Unchanged: 0/0
 20825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20829 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20830 ;;Total ram usage:        3 bytes
 20831 ;; Hardware stack levels used:    1
 20832 ;; Hardware stack levels required when called:   11
 20833 ;; This function calls:
 20834 ;;		Nothing
 20835 ;; This function is called by:
 20836 ;;		_Rtcm_MainTask
 20837 ;; This function uses a non-reentrant model
 20838 ;;
 20839                           
 20840                           	psect	text89
 20841  005308                     __ptext89:
 20842                           	opt stack 0
 20843  005308                     _Rtcc_AlarmConfig:
 20844                           	opt stack 16
 20845                           
 20846                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20847                           
 20848                           ;incstack = 0
 20849  005308  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20850  00530C  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20851  005310  50DF               	movf	indf2,w,c
 20852  005312  0100               	movlb	0	; () banked
 20853  005314  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20854  005316  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20855  005318  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20856  00531A  5091               	movf	3985,w,c	;volatile
 20857  00531C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20858  00531E  0B7F               	andlw	-129
 20859  005320  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20860  005322  6E91               	movwf	3985,c	;volatile
 20861                           
 20862                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20863  005324  EE20 F001          	lfsr	2,1
 20864  005328  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20865  00532A  26D9               	addwf	fsr2l,f,c
 20866  00532C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20867  00532E  22DA               	addwfc	fsr2h,f,c
 20868  005330  50DF               	movf	indf2,w,c
 20869  005332  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20870  005334  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20871  005336  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20872  005338  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20873  00533A  5091               	movf	3985,w,c	;volatile
 20874  00533C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20875  00533E  0BBF               	andlw	-65
 20876  005340  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20877  005342  6E91               	movwf	3985,c	;volatile
 20878                           
 20879                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20880  005344  EE20 F002          	lfsr	2,2
 20881  005348  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20882  00534A  26D9               	addwf	fsr2l,f,c
 20883  00534C  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20884  00534E  22DA               	addwfc	fsr2h,f,c
 20885  005350  50DF               	movf	indf2,w,c
 20886  005352  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20887  005354  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20888  005356  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20889  005358  5091               	movf	3985,w,c	;volatile
 20890  00535A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20891  00535C  0BC3               	andlw	-61
 20892  00535E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20893  005360  6E91               	movwf	3985,c	;volatile
 20894                           
 20895                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20896  005362  EE20 F003          	lfsr	2,3
 20897  005366  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20898  005368  26D9               	addwf	fsr2l,f,c
 20899  00536A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20900  00536C  22DA               	addwfc	fsr2h,f,c
 20901  00536E  50DF               	movf	indf2,w,c
 20902  005370  6E90               	movwf	3984,c	;volatile
 20903                           
 20904                           ; BSR set to: 0
 20905  005372  0012               	return		;funcret
 20906  005374                     __end_of_Rtcc_AlarmConfig:
 20907                           	opt stack 0
 20908                           tosu	equ	0xFFF
 20909                           tosh	equ	0xFFE
 20910                           tosl	equ	0xFFD
 20911                           pclath	equ	0xFFA
 20912                           tblptru	equ	0xFF8
 20913                           tblptrh	equ	0xFF7
 20914                           tblptrl	equ	0xFF6
 20915                           tablat	equ	0xFF5
 20916                           prodh	equ	0xFF4
 20917                           prodl	equ	0xFF3
 20918                           intcon	equ	0xFF2
 20919                           intcon2	equ	0xFF1
 20920                           intcon3	equ	0xFF0
 20921                           indf0	equ	0xFEF
 20922                           postinc0	equ	0xFEE
 20923                           plusw0	equ	0xFEB
 20924                           fsr0h	equ	0xFEA
 20925                           fsr0l	equ	0xFE9
 20926                           wreg	equ	0xFE8
 20927                           indf1	equ	0xFE7
 20928                           postinc1	equ	0xFE6
 20929                           postdec1	equ	0xFE5
 20930                           fsr1h	equ	0xFE2
 20931                           fsr1l	equ	0xFE1
 20932                           indf2	equ	0xFDF
 20933                           postinc2	equ	0xFDE
 20934                           postdec2	equ	0xFDD
 20935                           plusw2	equ	0xFDB
 20936                           fsr2h	equ	0xFDA
 20937                           fsr2l	equ	0xFD9
 20938                           status	equ	0xFD8
 20939                           
 20940 ;; *************** function _waitSetupCall *****************
 20941 ;; Defined at:
 20942 ;;		line 84 in file "../Source/c/04_App/app_gate.c"
 20943 ;; Parameters:    Size  Location     Type
 20944 ;;		None
 20945 ;; Auto vars:     Size  Location     Type
 20946 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 20947 ;; Return value:  Size  Location     Type
 20948 ;;                  1    wreg      unsigned char 
 20949 ;; Registers used:
 20950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20951 ;; Tracked objects:
 20952 ;;		On entry : 0/0
 20953 ;;		On exit  : 0/0
 20954 ;;		Unchanged: 0/0
 20955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;Total ram usage:        1 bytes
 20961 ;; Hardware stack levels used:    1
 20962 ;; Hardware stack levels required when called:   15
 20963 ;; This function calls:
 20964 ;;		_Led_SetLedStatus
 20965 ;;		_getSetupCall
 20966 ;;		_secondsAppTimer
 20967 ;; This function is called by:
 20968 ;;		_MyApp_Task
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           	psect	text90
 20973  005B88                     __ptext90:
 20974                           	opt stack 0
 20975  005B88                     _waitSetupCall:
 20976                           	opt stack 12
 20977                           
 20978                           ;app_gate.c: 86: bool isCallArrived = 0;
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;incstack = 0
 20982  005B88  0E00               	movlw	0
 20983  005B8A  0100               	movlb	0	; () banked
 20984  005B8C  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;app_gate.c: 87: if (!secondsAppTimer(30, &setupCallTicks, 0))
 20988  005B8E  0EB8               	movlw	low _setupCallTicks
 20989  005B90  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20990  005B92  0E03               	movlw	high _setupCallTicks
 20991  005B94  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20992  005B96  0E00               	movlw	0
 20993  005B98  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20994  005B9A  0E1E               	movlw	30
 20995  005B9C  ECC7  F023         	call	_secondsAppTimer
 20996  005BA0  0900               	iorlw	0
 20997  005BA2  A4D8               	btfss	status,2,c
 20998  005BA4  D00F               	goto	l2769
 20999                           
 21000                           ;app_gate.c: 88: {
 21001                           ;app_gate.c: 89: Led_SetLedStatus(1u, LED_STS_BLINK);
 21002  005BA6  0E03               	movlw	3
 21003  005BA8  0100               	movlb	0	; () banked
 21004  005BAA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21005  005BAC  0E01               	movlw	1
 21006  005BAE  EC79  F031         	call	_Led_SetLedStatus
 21007                           
 21008                           ;app_gate.c: 90: if (getSetupCall())
 21009  005BB2  ECF7  F032         	call	_getSetupCall	;wreg free
 21010  005BB6  0900               	iorlw	0
 21011  005BB8  B4D8               	btfsc	status,2,c
 21012  005BBA  D00A               	goto	l2771
 21013                           
 21014                           ;app_gate.c: 91: {
 21015                           ;app_gate.c: 92: isCallArrived = 1;
 21016  005BBC  0E01               	movlw	1
 21017  005BBE  0100               	movlb	0	; () banked
 21018  005BC0  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21019                           
 21020                           ; BSR set to: 0
 21021                           ;app_gate.c: 93: }
 21022                           ;app_gate.c: 94: }
 21023  005BC2  D006               	goto	l2771
 21024  005BC4                     l2769:
 21025                           
 21026                           ;app_gate.c: 95: else
 21027                           ;app_gate.c: 96: {
 21028                           ;app_gate.c: 97: Led_SetLedStatus(1u, LED_STS_ON);
 21029                           
 21030                           ; BSR set to: 0
 21031  005BC4  0E01               	movlw	1
 21032  005BC6  0100               	movlb	0	; () banked
 21033  005BC8  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21034  005BCA  0E01               	movlw	1
 21035  005BCC  EC79  F031         	call	_Led_SetLedStatus
 21036  005BD0                     l2771:
 21037                           
 21038                           ;app_gate.c: 98: }
 21039                           ;app_gate.c: 99: return isCallArrived;
 21040  005BD0  0100               	movlb	0	; () banked
 21041  005BD2  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21042  005BD4  0012               	return	
 21043  005BD6                     __end_of_waitSetupCall:
 21044                           	opt stack 0
 21045                           tosu	equ	0xFFF
 21046                           tosh	equ	0xFFE
 21047                           tosl	equ	0xFFD
 21048                           pclath	equ	0xFFA
 21049                           tblptru	equ	0xFF8
 21050                           tblptrh	equ	0xFF7
 21051                           tblptrl	equ	0xFF6
 21052                           tablat	equ	0xFF5
 21053                           prodh	equ	0xFF4
 21054                           prodl	equ	0xFF3
 21055                           intcon	equ	0xFF2
 21056                           intcon2	equ	0xFF1
 21057                           intcon3	equ	0xFF0
 21058                           indf0	equ	0xFEF
 21059                           postinc0	equ	0xFEE
 21060                           plusw0	equ	0xFEB
 21061                           fsr0h	equ	0xFEA
 21062                           fsr0l	equ	0xFE9
 21063                           wreg	equ	0xFE8
 21064                           indf1	equ	0xFE7
 21065                           postinc1	equ	0xFE6
 21066                           postdec1	equ	0xFE5
 21067                           fsr1h	equ	0xFE2
 21068                           fsr1l	equ	0xFE1
 21069                           indf2	equ	0xFDF
 21070                           postinc2	equ	0xFDE
 21071                           postdec2	equ	0xFDD
 21072                           plusw2	equ	0xFDB
 21073                           fsr2h	equ	0xFDA
 21074                           fsr2l	equ	0xFD9
 21075                           status	equ	0xFD8
 21076                           
 21077 ;; *************** function _getSetupCall *****************
 21078 ;; Defined at:
 21079 ;;		line 65 in file "../Source/c/04_App/app_gate.c"
 21080 ;; Parameters:    Size  Location     Type
 21081 ;;		None
 21082 ;; Auto vars:     Size  Location     Type
 21083 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21084 ;; Return value:  Size  Location     Type
 21085 ;;                  1    wreg      unsigned char 
 21086 ;; Registers used:
 21087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21088 ;; Tracked objects:
 21089 ;;		On entry : 0/0
 21090 ;;		On exit  : 0/0
 21091 ;;		Unchanged: 0/0
 21092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21097 ;;Total ram usage:        1 bytes
 21098 ;; Hardware stack levels used:    1
 21099 ;; Hardware stack levels required when called:   14
 21100 ;; This function calls:
 21101 ;;		_Mdm_HangPhoneCall
 21102 ;;		_Mdm_IsRinging
 21103 ;; This function is called by:
 21104 ;;		_waitSetupCall
 21105 ;; This function uses a non-reentrant model
 21106 ;;
 21107                           
 21108                           	psect	text91
 21109  0065EE                     __ptext91:
 21110                           	opt stack 0
 21111  0065EE                     _getSetupCall:
 21112                           	opt stack 12
 21113                           
 21114                           ;app_gate.c: 67: bool isCalledReceived = 0;
 21115                           
 21116                           ; BSR set to: 0
 21117                           ;incstack = 0
 21118  0065EE  0E00               	movlw	0
 21119  0065F0  0100               	movlb	0	; () banked
 21120  0065F2  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21121                           
 21122                           ; BSR set to: 0
 21123                           ;app_gate.c: 69: if (Mdm_IsRinging())
 21124  0065F4  EC4B  F032         	call	_Mdm_IsRinging	;wreg free
 21125  0065F8  0900               	iorlw	0
 21126  0065FA  B4D8               	btfsc	status,2,c
 21127  0065FC  D005               	goto	l2765
 21128                           
 21129                           ;app_gate.c: 70: {
 21130                           ;app_gate.c: 71: Mdm_HangPhoneCall();
 21131  0065FE  ECF4  F033         	call	_Mdm_HangPhoneCall	;wreg free
 21132                           
 21133                           ;app_gate.c: 72: isCalledReceived = 1;
 21134  006602  0E01               	movlw	1
 21135  006604  0100               	movlb	0	; () banked
 21136  006606  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21137  006608                     l2765:
 21138                           
 21139                           ;app_gate.c: 73: }
 21140                           ;app_gate.c: 74: return isCalledReceived;
 21141                           
 21142                           ; BSR set to: 0
 21143  006608  0100               	movlb	0	; () banked
 21144  00660A  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21145  00660C  0012               	return	
 21146  00660E                     __end_of_getSetupCall:
 21147                           	opt stack 0
 21148                           tosu	equ	0xFFF
 21149                           tosh	equ	0xFFE
 21150                           tosl	equ	0xFFD
 21151                           pclath	equ	0xFFA
 21152                           tblptru	equ	0xFF8
 21153                           tblptrh	equ	0xFF7
 21154                           tblptrl	equ	0xFF6
 21155                           tablat	equ	0xFF5
 21156                           prodh	equ	0xFF4
 21157                           prodl	equ	0xFF3
 21158                           intcon	equ	0xFF2
 21159                           intcon2	equ	0xFF1
 21160                           intcon3	equ	0xFF0
 21161                           indf0	equ	0xFEF
 21162                           postinc0	equ	0xFEE
 21163                           plusw0	equ	0xFEB
 21164                           fsr0h	equ	0xFEA
 21165                           fsr0l	equ	0xFE9
 21166                           wreg	equ	0xFE8
 21167                           indf1	equ	0xFE7
 21168                           postinc1	equ	0xFE6
 21169                           postdec1	equ	0xFE5
 21170                           fsr1h	equ	0xFE2
 21171                           fsr1l	equ	0xFE1
 21172                           indf2	equ	0xFDF
 21173                           postinc2	equ	0xFDE
 21174                           postdec2	equ	0xFDD
 21175                           plusw2	equ	0xFDB
 21176                           fsr2h	equ	0xFDA
 21177                           fsr2l	equ	0xFD9
 21178                           status	equ	0xFD8
 21179                           
 21180 ;; *************** function _Mdm_IsRinging *****************
 21181 ;; Defined at:
 21182 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21183 ;; Parameters:    Size  Location     Type
 21184 ;;		None
 21185 ;; Auto vars:     Size  Location     Type
 21186 ;;  Ret             1   33[BANK0 ] enum E8924
 21187 ;; Return value:  Size  Location     Type
 21188 ;;                  1    wreg      enum E8924
 21189 ;; Registers used:
 21190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21191 ;; Tracked objects:
 21192 ;;		On entry : 0/0
 21193 ;;		On exit  : 0/0
 21194 ;;		Unchanged: 0/0
 21195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21200 ;;Total ram usage:        1 bytes
 21201 ;; Hardware stack levels used:    1
 21202 ;; Hardware stack levels required when called:   12
 21203 ;; This function calls:
 21204 ;;		_ReceiveEvt
 21205 ;; This function is called by:
 21206 ;;		_MyApp_Task
 21207 ;;		_getSetupCall
 21208 ;; This function uses a non-reentrant model
 21209 ;;
 21210                           
 21211                           	psect	text92
 21212  006496                     __ptext92:
 21213                           	opt stack 0
 21214  006496                     _Mdm_IsRinging:
 21215                           	opt stack 13
 21216                           
 21217                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 21218                           
 21219                           ; BSR set to: 0
 21220                           ;incstack = 0
 21221  006496  0E00               	movlw	0
 21222  006498  0100               	movlb	0	; () banked
 21223  00649A  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21224                           
 21225                           ; BSR set to: 0
 21226                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 21227  00649C  0EDE               	movlw	low _RingEvent
 21228  00649E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21229  0064A0  0E00               	movlw	high _RingEvent
 21230  0064A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21231  0064A4  ECA8  F031         	call	_ReceiveEvt	;wreg free
 21232  0064A8  0900               	iorlw	0
 21233  0064AA  B4D8               	btfsc	status,2,c
 21234  0064AC  D003               	goto	l1152
 21235                           
 21236                           ;mdm_gsm_gprs.c: 1030: {
 21237                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 21238  0064AE  0E01               	movlw	1
 21239  0064B0  0100               	movlb	0	; () banked
 21240  0064B2  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21241  0064B4                     l1152:
 21242                           
 21243                           ;mdm_gsm_gprs.c: 1032: }
 21244                           ;mdm_gsm_gprs.c: 1034: return Ret;
 21245  0064B4  0100               	movlb	0	; () banked
 21246  0064B6  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21247  0064B8  0012               	return	
 21248  0064BA                     __end_of_Mdm_IsRinging:
 21249                           	opt stack 0
 21250                           tosu	equ	0xFFF
 21251                           tosh	equ	0xFFE
 21252                           tosl	equ	0xFFD
 21253                           pclath	equ	0xFFA
 21254                           tblptru	equ	0xFF8
 21255                           tblptrh	equ	0xFF7
 21256                           tblptrl	equ	0xFF6
 21257                           tablat	equ	0xFF5
 21258                           prodh	equ	0xFF4
 21259                           prodl	equ	0xFF3
 21260                           intcon	equ	0xFF2
 21261                           intcon2	equ	0xFF1
 21262                           intcon3	equ	0xFF0
 21263                           indf0	equ	0xFEF
 21264                           postinc0	equ	0xFEE
 21265                           plusw0	equ	0xFEB
 21266                           fsr0h	equ	0xFEA
 21267                           fsr0l	equ	0xFE9
 21268                           wreg	equ	0xFE8
 21269                           indf1	equ	0xFE7
 21270                           postinc1	equ	0xFE6
 21271                           postdec1	equ	0xFE5
 21272                           fsr1h	equ	0xFE2
 21273                           fsr1l	equ	0xFE1
 21274                           indf2	equ	0xFDF
 21275                           postinc2	equ	0xFDE
 21276                           postdec2	equ	0xFDD
 21277                           plusw2	equ	0xFDB
 21278                           fsr2h	equ	0xFDA
 21279                           fsr2l	equ	0xFD9
 21280                           status	equ	0xFD8
 21281                           
 21282 ;; *************** function _Mdm_HangPhoneCall *****************
 21283 ;; Defined at:
 21284 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21285 ;; Parameters:    Size  Location     Type
 21286 ;;		None
 21287 ;; Auto vars:     Size  Location     Type
 21288 ;;		None
 21289 ;; Return value:  Size  Location     Type
 21290 ;;                  1    wreg      void 
 21291 ;; Registers used:
 21292 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21293 ;; Tracked objects:
 21294 ;;		On entry : 0/0
 21295 ;;		On exit  : 0/0
 21296 ;;		Unchanged: 0/0
 21297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;Total ram usage:        0 bytes
 21303 ;; Hardware stack levels used:    1
 21304 ;; Hardware stack levels required when called:   13
 21305 ;; This function calls:
 21306 ;;		_Uart_WriteConstString
 21307 ;; This function is called by:
 21308 ;;		_MyApp_Task
 21309 ;;		_getSetupCall
 21310 ;; This function uses a non-reentrant model
 21311 ;;
 21312                           
 21313                           	psect	text93
 21314  0067E8                     __ptext93:
 21315                           	opt stack 0
 21316  0067E8                     _Mdm_HangPhoneCall:
 21317                           	opt stack 12
 21318                           
 21319                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 21320                           
 21321                           ; BSR set to: 0
 21322                           ;incstack = 0
 21323  0067E8  0EF0               	movlw	low STR_6
 21324  0067EA  0100               	movlb	0	; () banked
 21325  0067EC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21326  0067EE  0EFF               	movlw	high STR_6
 21327  0067F0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21328  0067F2  0E01               	movlw	1
 21329  0067F4  EC78  F02F         	call	_Uart_WriteConstString
 21330  0067F8  0012               	return		;funcret
 21331  0067FA                     __end_of_Mdm_HangPhoneCall:
 21332                           	opt stack 0
 21333                           tosu	equ	0xFFF
 21334                           tosh	equ	0xFFE
 21335                           tosl	equ	0xFFD
 21336                           pclath	equ	0xFFA
 21337                           tblptru	equ	0xFF8
 21338                           tblptrh	equ	0xFF7
 21339                           tblptrl	equ	0xFF6
 21340                           tablat	equ	0xFF5
 21341                           prodh	equ	0xFF4
 21342                           prodl	equ	0xFF3
 21343                           intcon	equ	0xFF2
 21344                           intcon2	equ	0xFF1
 21345                           intcon3	equ	0xFF0
 21346                           indf0	equ	0xFEF
 21347                           postinc0	equ	0xFEE
 21348                           plusw0	equ	0xFEB
 21349                           fsr0h	equ	0xFEA
 21350                           fsr0l	equ	0xFE9
 21351                           wreg	equ	0xFE8
 21352                           indf1	equ	0xFE7
 21353                           postinc1	equ	0xFE6
 21354                           postdec1	equ	0xFE5
 21355                           fsr1h	equ	0xFE2
 21356                           fsr1l	equ	0xFE1
 21357                           indf2	equ	0xFDF
 21358                           postinc2	equ	0xFDE
 21359                           postdec2	equ	0xFDD
 21360                           plusw2	equ	0xFDB
 21361                           fsr2h	equ	0xFDA
 21362                           fsr2l	equ	0xFD9
 21363                           status	equ	0xFD8
 21364                           
 21365 ;; *************** function _saveNumberInMemory *****************
 21366 ;; Defined at:
 21367 ;;		line 108 in file "../Source/c/04_App/app_gate.c"
 21368 ;; Parameters:    Size  Location     Type
 21369 ;;  address         1    wreg     unsigned char 
 21370 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 21371 ;;		 -> smsText(20), MyApp_Task@emptyNumber(13), callerNumber(13), 
 21372 ;; Auto vars:     Size  Location     Type
 21373 ;;  address         1   56[BANK0 ] unsigned char 
 21374 ;; Return value:  Size  Location     Type
 21375 ;;                  1    wreg      void 
 21376 ;; Registers used:
 21377 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21378 ;; Tracked objects:
 21379 ;;		On entry : 0/0
 21380 ;;		On exit  : 0/0
 21381 ;;		Unchanged: 0/0
 21382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21387 ;;Total ram usage:        3 bytes
 21388 ;; Hardware stack levels used:    1
 21389 ;; Hardware stack levels required when called:   14
 21390 ;; This function calls:
 21391 ;;		_Eeprom_Write
 21392 ;; This function is called by:
 21393 ;;		_MyApp_Task
 21394 ;; This function uses a non-reentrant model
 21395 ;;
 21396                           
 21397                           	psect	text94
 21398  0066D6                     __ptext94:
 21399                           	opt stack 0
 21400  0066D6                     _saveNumberInMemory:
 21401                           	opt stack 13
 21402                           
 21403                           ;incstack = 0
 21404                           ;saveNumberInMemory@address stored from wreg
 21405  0066D6  0100               	movlb	0	; () banked
 21406  0066D8  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 21407                           
 21408                           ;app_gate.c: 110: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 21409  0066DA  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 21410  0066DE  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 21411  0066E2  0E0D               	movlw	13
 21412  0066E4  0100               	movlb	0	; () banked
 21413  0066E6  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21414  0066E8  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 21415  0066EA  ECFA  F02C         	call	_Eeprom_Write
 21416  0066EE  0012               	return		;funcret
 21417  0066F0                     __end_of_saveNumberInMemory:
 21418                           	opt stack 0
 21419                           tosu	equ	0xFFF
 21420                           tosh	equ	0xFFE
 21421                           tosl	equ	0xFFD
 21422                           pclath	equ	0xFFA
 21423                           tblptru	equ	0xFF8
 21424                           tblptrh	equ	0xFF7
 21425                           tblptrl	equ	0xFF6
 21426                           tablat	equ	0xFF5
 21427                           prodh	equ	0xFF4
 21428                           prodl	equ	0xFF3
 21429                           intcon	equ	0xFF2
 21430                           intcon2	equ	0xFF1
 21431                           intcon3	equ	0xFF0
 21432                           indf0	equ	0xFEF
 21433                           postinc0	equ	0xFEE
 21434                           plusw0	equ	0xFEB
 21435                           fsr0h	equ	0xFEA
 21436                           fsr0l	equ	0xFE9
 21437                           wreg	equ	0xFE8
 21438                           indf1	equ	0xFE7
 21439                           postinc1	equ	0xFE6
 21440                           postdec1	equ	0xFE5
 21441                           fsr1h	equ	0xFE2
 21442                           fsr1l	equ	0xFE1
 21443                           indf2	equ	0xFDF
 21444                           postinc2	equ	0xFDE
 21445                           postdec2	equ	0xFDD
 21446                           plusw2	equ	0xFDB
 21447                           fsr2h	equ	0xFDA
 21448                           fsr2l	equ	0xFD9
 21449                           status	equ	0xFD8
 21450                           
 21451 ;; *************** function _parseCommand *****************
 21452 ;; Defined at:
 21453 ;;		line 90 in file "../Source/c/04_App/app.c"
 21454 ;; Parameters:    Size  Location     Type
 21455 ;;  text            2   40[BANK0 ] PTR unsigned char 
 21456 ;;		 -> smsText(20), 
 21457 ;; Auto vars:     Size  Location     Type
 21458 ;;  deleteNumber    3   45[BANK0 ] const unsigned char [3]
 21459 ;;  addNumberCmd    3   42[BANK0 ] const unsigned char [3]
 21460 ;;  state           1   48[BANK0 ] enum E8994
 21461 ;; Return value:  Size  Location     Type
 21462 ;;                  1    wreg      enum E8994
 21463 ;; Registers used:
 21464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21465 ;; Tracked objects:
 21466 ;;		On entry : 0/0
 21467 ;;		On exit  : 0/0
 21468 ;;		Unchanged: 0/0
 21469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21471 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21473 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21474 ;;Total ram usage:        9 bytes
 21475 ;; Hardware stack levels used:    1
 21476 ;; Hardware stack levels required when called:   12
 21477 ;; This function calls:
 21478 ;;		_StringCompare
 21479 ;;		_isNumberValid
 21480 ;; This function is called by:
 21481 ;;		_MyApp_Task
 21482 ;; This function uses a non-reentrant model
 21483 ;;
 21484                           
 21485                           	psect	text95
 21486  00443A                     __ptext95:
 21487                           	opt stack 0
 21488  00443A                     _parseCommand:
 21489                           	opt stack 15
 21490                           
 21491                           ;app.c: 92: const uint8_t addNumberCmd[] = {'A', 'D', 'D'};
 21492                           
 21493                           ;incstack = 0
 21494  00443A  0E2B               	movlw	low parseCommand@F9019
 21495  00443C  6EF6               	movwf	tblptrl,c
 21496  00443E                     	if	1	;There is more than 1 active tblptr byte
 21497  00443E  0EFC               	movlw	high parseCommand@F9019
 21498  004440  6EF7               	movwf	tblptrh,c
 21499  004442                     	endif
 21500  004442                     	if	0	;There are less than 3 active tblptr bytes
 21501  004442                     	endif
 21502  004442  0009               	tblrd		*+
 21503  004444  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd
 21504  004448  0009               	tblrd		*+
 21505  00444A  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+1
 21506  00444E  000A               	tblrd		*-
 21507  004450  CFF5 F08C          	movff	tablat,parseCommand@addNumberCmd+2
 21508                           
 21509                           ;app.c: 93: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L'};
 21510  004454  0E28               	movlw	low parseCommand@F9021
 21511  004456  6EF6               	movwf	tblptrl,c
 21512  004458                     	if	1	;There is more than 1 active tblptr byte
 21513  004458  0EFC               	movlw	high parseCommand@F9021
 21514  00445A  6EF7               	movwf	tblptrh,c
 21515  00445C                     	endif
 21516  00445C                     	if	0	;There are less than 3 active tblptr bytes
 21517  00445C                     	endif
 21518  00445C  0009               	tblrd		*+
 21519  00445E  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd
 21520  004462  0009               	tblrd		*+
 21521  004464  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+1
 21522  004468  000A               	tblrd		*-
 21523  00446A  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+2
 21524                           
 21525                           ;app.c: 94: gateFsmStates state = GATE_WAIT_EVENT;
 21526  00446E  0E03               	movlw	3
 21527  004470  0100               	movlb	0	; () banked
 21528  004472  6F90               	movwf	parseCommand@state& (0+255),b
 21529                           
 21530                           ; BSR set to: 0
 21531                           ;app.c: 96: if (StringCompare(text, addNumberCmd, sizeof(addNumberCmd)))
 21532  004474  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21533  004478  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21534  00447C  0E8A               	movlw	low parseCommand@addNumberCmd
 21535  00447E  6F7F               	movwf	StringCompare@String2& (0+255),b
 21536  004480  0E00               	movlw	high parseCommand@addNumberCmd
 21537  004482  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21538  004484  0E00               	movlw	0
 21539  004486  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21540  004488  0E03               	movlw	3
 21541  00448A  6F81               	movwf	StringCompare@Len& (0+255),b
 21542  00448C  EC23  F02D         	call	_StringCompare	;wreg free
 21543  004490  0900               	iorlw	0
 21544  004492  B4D8               	btfsc	status,2,c
 21545  004494  D002               	goto	l2583
 21546                           
 21547                           ;app.c: 97: {
 21548                           ;app.c: 98: state = GATE_ADD_CMD;
 21549  004496  0E04               	movlw	4
 21550  004498  D013               	goto	L23
 21551  00449A                     l2583:
 21552                           
 21553                           ;app.c: 100: else if (StringCompare(text, deleteNumberCmd, sizeof(deleteNumberCmd)))
 21554                           
 21555                           ; BSR set to: 0
 21556  00449A  C088  F07D         	movff	parseCommand@text,StringCompare@String1
 21557  00449E  C089  F07E         	movff	parseCommand@text+1,StringCompare@String1+1
 21558  0044A2  0E8D               	movlw	low parseCommand@deleteNumberCmd
 21559  0044A4  0100               	movlb	0	; () banked
 21560  0044A6  6F7F               	movwf	StringCompare@String2& (0+255),b
 21561  0044A8  0E00               	movlw	high parseCommand@deleteNumberCmd
 21562  0044AA  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21563  0044AC  0E00               	movlw	0
 21564  0044AE  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21565  0044B0  0E03               	movlw	3
 21566  0044B2  6F81               	movwf	StringCompare@Len& (0+255),b
 21567  0044B4  EC23  F02D         	call	_StringCompare	;wreg free
 21568  0044B8  0900               	iorlw	0
 21569  0044BA  B4D8               	btfsc	status,2,c
 21570  0044BC  D003               	goto	l2585
 21571                           
 21572                           ;app.c: 101: {
 21573                           ;app.c: 102: state = GATE_DEL_CMD;
 21574  0044BE  0E06               	movlw	6
 21575  0044C0                     L23:
 21576  0044C0  0100               	movlb	0	; () banked
 21577  0044C2  6F90               	movwf	parseCommand@state& (0+255),b
 21578  0044C4                     l2585:
 21579                           
 21580                           ;app.c: 107: }
 21581                           ;app.c: 109: if (!isNumberValid(text + 3))
 21582                           
 21583                           ; BSR set to: 0
 21584                           
 21585                           ; BSR set to: 0
 21586                           
 21587                           ;app.c: 104: else
 21588                           ;app.c: 105: {
 21589                           
 21590                           ; BSR set to: 0
 21591  0044C4  0E03               	movlw	3
 21592  0044C6  0100               	movlb	0	; () banked
 21593  0044C8  2588               	addwf	parseCommand@text& (0+255),w,b
 21594  0044CA  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21595  0044CC  0E00               	movlw	0
 21596  0044CE  2189               	addwfc	(parseCommand@text+1)& (0+255),w,b
 21597  0044D0  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21598  0044D2  EC88  F02A         	call	_isNumberValid	;wreg free
 21599  0044D6  0900               	iorlw	0
 21600  0044D8  A4D8               	btfss	status,2,c
 21601  0044DA  D003               	goto	l2587
 21602                           
 21603                           ;app.c: 110: {
 21604                           ;app.c: 111: state = GATE_WAIT_EVENT;
 21605  0044DC  0E03               	movlw	3
 21606  0044DE  0100               	movlb	0	; () banked
 21607  0044E0  6F90               	movwf	parseCommand@state& (0+255),b
 21608  0044E2                     l2587:
 21609                           
 21610                           ;app.c: 112: }
 21611                           ;app.c: 113: return state;
 21612  0044E2  0100               	movlb	0	; () banked
 21613  0044E4  5190               	movf	parseCommand@state& (0+255),w,b
 21614  0044E6  0012               	return	
 21615  0044E8                     __end_of_parseCommand:
 21616                           	opt stack 0
 21617                           tosu	equ	0xFFF
 21618                           tosh	equ	0xFFE
 21619                           tosl	equ	0xFFD
 21620                           pclath	equ	0xFFA
 21621                           tblptru	equ	0xFF8
 21622                           tblptrh	equ	0xFF7
 21623                           tblptrl	equ	0xFF6
 21624                           tablat	equ	0xFF5
 21625                           prodh	equ	0xFF4
 21626                           prodl	equ	0xFF3
 21627                           intcon	equ	0xFF2
 21628                           intcon2	equ	0xFF1
 21629                           intcon3	equ	0xFF0
 21630                           indf0	equ	0xFEF
 21631                           postinc0	equ	0xFEE
 21632                           plusw0	equ	0xFEB
 21633                           fsr0h	equ	0xFEA
 21634                           fsr0l	equ	0xFE9
 21635                           wreg	equ	0xFE8
 21636                           indf1	equ	0xFE7
 21637                           postinc1	equ	0xFE6
 21638                           postdec1	equ	0xFE5
 21639                           fsr1h	equ	0xFE2
 21640                           fsr1l	equ	0xFE1
 21641                           indf2	equ	0xFDF
 21642                           postinc2	equ	0xFDE
 21643                           postdec2	equ	0xFDD
 21644                           plusw2	equ	0xFDB
 21645                           fsr2h	equ	0xFDA
 21646                           fsr2l	equ	0xFD9
 21647                           status	equ	0xFD8
 21648                           
 21649 ;; *************** function _isNumberInMemory *****************
 21650 ;; Defined at:
 21651 ;;		line 174 in file "../Source/c/04_App/app_gate.c"
 21652 ;; Parameters:    Size  Location     Type
 21653 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 21654 ;;		 -> MyApp_Task@receivedNumber(13), 
 21655 ;; Auto vars:     Size  Location     Type
 21656 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 21657 ;;  positionInMe    1   18[BANK1 ] unsigned char 
 21658 ;;  memoryOpResu    1   17[BANK1 ] enum E8246
 21659 ;;  searchFailed    1   16[BANK1 ] const unsigned char 
 21660 ;;  searchInProg    1   15[BANK1 ] const unsigned char 
 21661 ;; Return value:  Size  Location     Type
 21662 ;;                  1    wreg      unsigned char 
 21663 ;; Registers used:
 21664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21665 ;; Tracked objects:
 21666 ;;		On entry : 0/0
 21667 ;;		On exit  : 0/0
 21668 ;;		Unchanged: 0/0
 21669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21670 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21671 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21673 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21674 ;;Total ram usage:       19 bytes
 21675 ;; Hardware stack levels used:    1
 21676 ;; Hardware stack levels required when called:   17
 21677 ;; This function calls:
 21678 ;;		_Eeprom_Read
 21679 ;;		_StringCompare
 21680 ;;		_isNumberValid
 21681 ;; This function is called by:
 21682 ;;		_MyApp_Task
 21683 ;; This function uses a non-reentrant model
 21684 ;;
 21685                           
 21686                           	psect	text96
 21687  00496E                     __ptext96:
 21688                           	opt stack 0
 21689  00496E                     _isNumberInMemory:
 21690                           	opt stack 10
 21691                           
 21692                           ;app_gate.c: 176: const uint8_t searchInProgress = 0;
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;incstack = 0
 21696  00496E  0E00               	movlw	0
 21697  004970  0101               	movlb	1	; () banked
 21698  004972  6F0F               	movwf	isNumberInMemory@searchInProgress& (0+255),b
 21699                           
 21700                           ;app_gate.c: 177: const uint8_t searchFailed = 1;
 21701  004974  0E01               	movlw	1
 21702  004976  6F10               	movwf	isNumberInMemory@searchFailed& (0+255),b
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;app_gate.c: 178: static uint8_t currentPosition = 16;
 21706                           ;app_gate.c: 179: uint8_t positionInMemory = searchInProgress;
 21707  004978  C10F  F112         	movff	isNumberInMemory@searchInProgress,isNumberInMemory@positionInMemory
 21708                           
 21709                           ;app_gate.c: 180: uint8_t readBuffer[((UINT8)(13))];
 21710                           ;app_gate.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 21711  00497C  0E02               	movlw	2
 21712  00497E  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21713                           
 21714                           ; BSR set to: 1
 21715                           ;app_gate.c: 183: if (currentPosition >= 16 * 10)
 21716  004980  0E9F               	movlw	159
 21717  004982  0100               	movlb	0	; () banked
 21718  004984  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21719  004986  D002               	goto	l2801
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;app_gate.c: 184: {
 21723                           ;app_gate.c: 185: currentPosition = 16;
 21724  004988  0E10               	movlw	16
 21725  00498A  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21726  00498C                     l2801:
 21727                           
 21728                           ; BSR set to: 0
 21729                           ;app_gate.c: 186: }
 21730                           ;app_gate.c: 187: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 21731                           
 21732                           ; BSR set to: 0
 21733  00498C  0E02               	movlw	low isNumberInMemory@readBuffer
 21734  00498E  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 21735  004990  0E01               	movlw	high isNumberInMemory@readBuffer
 21736  004992  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 21737  004994  0E0D               	movlw	13
 21738  004996  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 21739  004998  51E2               	movf	isNumberInMemory@currentPosition& (0+255),w,b
 21740  00499A  EC7C  F02C         	call	_Eeprom_Read
 21741  00499E  0101               	movlb	1	; () banked
 21742  0049A0  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 21743                           
 21744                           ; BSR set to: 1
 21745                           ;app_gate.c: 188: if (memoryOpResult != OP_PENDING)
 21746  0049A2  0E02               	movlw	2
 21747  0049A4  1911               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 21748  0049A6  B4D8               	btfsc	status,2,c
 21749  0049A8  D024               	goto	l2802
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;app_gate.c: 189: {
 21753                           ;app_gate.c: 190: if (isNumberValid(readBuffer))
 21754  0049AA  0E02               	movlw	low isNumberInMemory@readBuffer
 21755  0049AC  0100               	movlb	0	; () banked
 21756  0049AE  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 21757  0049B0  0E01               	movlw	high isNumberInMemory@readBuffer
 21758  0049B2  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 21759  0049B4  EC88  F02A         	call	_isNumberValid	;wreg free
 21760  0049B8  0900               	iorlw	0
 21761  0049BA  B4D8               	btfsc	status,2,c
 21762  0049BC  D017               	goto	l2804
 21763                           
 21764                           ;app_gate.c: 191: {
 21765                           ;app_gate.c: 192: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 21766  0049BE  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 21767  0049C2  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 21768  0049C6  0E02               	movlw	low isNumberInMemory@readBuffer
 21769  0049C8  0100               	movlb	0	; () banked
 21770  0049CA  6F7F               	movwf	StringCompare@String2& (0+255),b
 21771  0049CC  0E01               	movlw	high isNumberInMemory@readBuffer
 21772  0049CE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 21773  0049D0  0E00               	movlw	0
 21774  0049D2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 21775  0049D4  0E0D               	movlw	13
 21776  0049D6  6F81               	movwf	StringCompare@Len& (0+255),b
 21777  0049D8  EC23  F02D         	call	_StringCompare	;wreg free
 21778  0049DC  0900               	iorlw	0
 21779  0049DE  B4D8               	btfsc	status,2,c
 21780  0049E0  D005               	goto	l2804
 21781                           
 21782                           ;app_gate.c: 193: {
 21783                           ;app_gate.c: 194: positionInMemory = currentPosition;
 21784  0049E2  C0E2  F112         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 21785                           
 21786                           ;app_gate.c: 195: currentPosition = 16 * 10;
 21787  0049E6  0EA0               	movlw	160
 21788  0049E8  0100               	movlb	0	; () banked
 21789  0049EA  6FE2               	movwf	isNumberInMemory@currentPosition& (0+255),b
 21790  0049EC                     l2804:
 21791                           
 21792                           ;app_gate.c: 200: }
 21793                           ;app_gate.c: 201: }
 21794                           ;app_gate.c: 202: currentPosition += 16;
 21795                           
 21796                           ; BSR set to: 0
 21797                           
 21798                           ; BSR set to: 0
 21799                           
 21800                           ;app_gate.c: 197: else
 21801                           ;app_gate.c: 198: {
 21802                           
 21803                           ; BSR set to: 0
 21804  0049EC  0E10               	movlw	16
 21805  0049EE  0100               	movlb	0	; () banked
 21806  0049F0  27E2               	addwf	isNumberInMemory@currentPosition& (0+255),f,b
 21807  0049F2                     l2802:
 21808                           
 21809                           ;app_gate.c: 203: }
 21810                           ;app_gate.c: 204: if (positionInMemory == 0 && currentPosition >= 16 * 10)
 21811                           
 21812                           ; BSR set to: 0
 21813  0049F2  0101               	movlb	1	; () banked
 21814  0049F4  5112               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21815  0049F6  A4D8               	btfss	status,2,c
 21816  0049F8  D006               	goto	l2806
 21817                           
 21818                           ; BSR set to: 1
 21819  0049FA  0E9F               	movlw	159
 21820  0049FC  0100               	movlb	0	; () banked
 21821  0049FE  65E2               	cpfsgt	isNumberInMemory@currentPosition& (0+255),b
 21822  004A00  D002               	goto	l2806
 21823                           
 21824                           ; BSR set to: 0
 21825                           ;app_gate.c: 205: {
 21826                           ;app_gate.c: 206: positionInMemory = searchFailed;
 21827  004A02  C110  F112         	movff	isNumberInMemory@searchFailed,isNumberInMemory@positionInMemory
 21828  004A06                     l2806:
 21829                           
 21830                           ;app_gate.c: 207: }
 21831                           ;app_gate.c: 208: return positionInMemory;
 21832                           
 21833                           ; BSR set to: 0
 21834  004A06  0101               	movlb	1	; () banked
 21835  004A08  5112               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 21836  004A0A  0012               	return	
 21837  004A0C                     __end_of_isNumberInMemory:
 21838                           	opt stack 0
 21839                           tosu	equ	0xFFF
 21840                           tosh	equ	0xFFE
 21841                           tosl	equ	0xFFD
 21842                           pclath	equ	0xFFA
 21843                           tblptru	equ	0xFF8
 21844                           tblptrh	equ	0xFF7
 21845                           tblptrl	equ	0xFF6
 21846                           tablat	equ	0xFF5
 21847                           prodh	equ	0xFF4
 21848                           prodl	equ	0xFF3
 21849                           intcon	equ	0xFF2
 21850                           intcon2	equ	0xFF1
 21851                           intcon3	equ	0xFF0
 21852                           indf0	equ	0xFEF
 21853                           postinc0	equ	0xFEE
 21854                           plusw0	equ	0xFEB
 21855                           fsr0h	equ	0xFEA
 21856                           fsr0l	equ	0xFE9
 21857                           wreg	equ	0xFE8
 21858                           indf1	equ	0xFE7
 21859                           postinc1	equ	0xFE6
 21860                           postdec1	equ	0xFE5
 21861                           fsr1h	equ	0xFE2
 21862                           fsr1l	equ	0xFE1
 21863                           indf2	equ	0xFDF
 21864                           postinc2	equ	0xFDE
 21865                           postdec2	equ	0xFDD
 21866                           plusw2	equ	0xFDB
 21867                           fsr2h	equ	0xFDA
 21868                           fsr2l	equ	0xFD9
 21869                           status	equ	0xFD8
 21870                           
 21871 ;; *************** function _initMemorizedNumbersCount *****************
 21872 ;; Defined at:
 21873 ;;		line 117 in file "../Source/c/04_App/app_gate.c"
 21874 ;; Parameters:    Size  Location     Type
 21875 ;;		None
 21876 ;; Auto vars:     Size  Location     Type
 21877 ;;		None
 21878 ;; Return value:  Size  Location     Type
 21879 ;;                  1    wreg      void 
 21880 ;; Registers used:
 21881 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21882 ;; Tracked objects:
 21883 ;;		On entry : 0/0
 21884 ;;		On exit  : 0/0
 21885 ;;		Unchanged: 0/0
 21886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21891 ;;Total ram usage:        0 bytes
 21892 ;; Hardware stack levels used:    1
 21893 ;; Hardware stack levels required when called:   14
 21894 ;; This function calls:
 21895 ;;		_Eeprom_Write
 21896 ;;		_initPreamble
 21897 ;; This function is called by:
 21898 ;;		_MyApp_Task
 21899 ;; This function uses a non-reentrant model
 21900 ;;
 21901                           
 21902                           	psect	text97
 21903  0066F0                     __ptext97:
 21904                           	opt stack 0
 21905  0066F0                     _initMemorizedNumbersCount:
 21906                           	opt stack 13
 21907                           
 21908                           ;app_gate.c: 119: Eeprom_Write(0, initPreamble(), 5);
 21909                           
 21910                           ; BSR set to: 1
 21911                           ;incstack = 0
 21912  0066F0  EC13  F032         	call	_initPreamble	;wreg free
 21913  0066F4  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21914  0066F8  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21915  0066FC  0E05               	movlw	5
 21916  0066FE  0100               	movlb	0	; () banked
 21917  006700  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21918  006702  0E00               	movlw	0
 21919  006704  ECFA  F02C         	call	_Eeprom_Write
 21920  006708  0012               	return		;funcret
 21921  00670A                     __end_of_initMemorizedNumbersCount:
 21922                           	opt stack 0
 21923                           tosu	equ	0xFFF
 21924                           tosh	equ	0xFFE
 21925                           tosl	equ	0xFFD
 21926                           pclath	equ	0xFFA
 21927                           tblptru	equ	0xFF8
 21928                           tblptrh	equ	0xFF7
 21929                           tblptrl	equ	0xFF6
 21930                           tablat	equ	0xFF5
 21931                           prodh	equ	0xFF4
 21932                           prodl	equ	0xFF3
 21933                           intcon	equ	0xFF2
 21934                           intcon2	equ	0xFF1
 21935                           intcon3	equ	0xFF0
 21936                           indf0	equ	0xFEF
 21937                           postinc0	equ	0xFEE
 21938                           plusw0	equ	0xFEB
 21939                           fsr0h	equ	0xFEA
 21940                           fsr0l	equ	0xFE9
 21941                           wreg	equ	0xFE8
 21942                           indf1	equ	0xFE7
 21943                           postinc1	equ	0xFE6
 21944                           postdec1	equ	0xFE5
 21945                           fsr1h	equ	0xFE2
 21946                           fsr1l	equ	0xFE1
 21947                           indf2	equ	0xFDF
 21948                           postinc2	equ	0xFDE
 21949                           postdec2	equ	0xFDD
 21950                           plusw2	equ	0xFDB
 21951                           fsr2h	equ	0xFDA
 21952                           fsr2l	equ	0xFD9
 21953                           status	equ	0xFD8
 21954                           
 21955 ;; *************** function _initPreamble *****************
 21956 ;; Defined at:
 21957 ;;		line 213 in file "../Source/c/04_App/app_init.c"
 21958 ;; Parameters:    Size  Location     Type
 21959 ;;		None
 21960 ;; Auto vars:     Size  Location     Type
 21961 ;;		None
 21962 ;; Return value:  Size  Location     Type
 21963 ;;                  2   29[BANK0 ] PTR unsigned char 
 21964 ;; Registers used:
 21965 ;;		wreg, status,2, status,0
 21966 ;; Tracked objects:
 21967 ;;		On entry : 0/0
 21968 ;;		On exit  : 0/0
 21969 ;;		Unchanged: 0/0
 21970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21974 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21975 ;;Total ram usage:        2 bytes
 21976 ;; Hardware stack levels used:    1
 21977 ;; Hardware stack levels required when called:   11
 21978 ;; This function calls:
 21979 ;;		Nothing
 21980 ;; This function is called by:
 21981 ;;		_initMemorizedNumbersCount
 21982 ;; This function uses a non-reentrant model
 21983 ;;
 21984                           
 21985                           	psect	text98
 21986  006426                     __ptext98:
 21987                           	opt stack 0
 21988  006426                     _initPreamble:
 21989                           	opt stack 15
 21990                           
 21991                           ;app_init.c: 215: memoryPreamble[0] = 'U';
 21992                           
 21993                           ;incstack = 0
 21994  006426  0E55               	movlw	85
 21995  006428  0103               	movlb	3	; () banked
 21996  00642A  6F99               	movwf	_memoryPreamble& (0+255),b
 21997                           
 21998                           ;app_init.c: 216: memoryPreamble[1] = 'S';
 21999  00642C  0E53               	movlw	83
 22000  00642E  6F9A               	movwf	(_memoryPreamble+1)& (0+255),b
 22001                           
 22002                           ;app_init.c: 217: memoryPreamble[2] = 'I';
 22003  006430  0E49               	movlw	73
 22004  006432  6F9B               	movwf	(_memoryPreamble+2)& (0+255),b
 22005                           
 22006                           ;app_init.c: 218: memoryPreamble[3] = 'M';
 22007  006434  0E4D               	movlw	77
 22008  006436  6F9C               	movwf	(_memoryPreamble+3)& (0+255),b
 22009                           
 22010                           ;app_init.c: 219: memoryPreamble[4] = 1;
 22011  006438  0E01               	movlw	1
 22012  00643A  6F9D               	movwf	(_memoryPreamble+4)& (0+255),b
 22013                           
 22014                           ;app_init.c: 220: memorizedNumbersCount[0] = 1;
 22015  00643C  0E01               	movlw	1
 22016  00643E  6E38               	movwf	_memorizedNumbersCount,c
 22017                           
 22018                           ; BSR set to: 3
 22019                           ;app_init.c: 221: return memoryPreamble;
 22020  006440  0E99               	movlw	low _memoryPreamble
 22021  006442  0100               	movlb	0	; () banked
 22022  006444  6F7D               	movwf	?_initPreamble& (0+255),b
 22023  006446  0E03               	movlw	high _memoryPreamble
 22024  006448  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 22025  00644A  0012               	return	
 22026  00644C                     __end_of_initPreamble:
 22027                           	opt stack 0
 22028                           tosu	equ	0xFFF
 22029                           tosh	equ	0xFFE
 22030                           tosl	equ	0xFFD
 22031                           pclath	equ	0xFFA
 22032                           tblptru	equ	0xFF8
 22033                           tblptrh	equ	0xFF7
 22034                           tblptrl	equ	0xFF6
 22035                           tablat	equ	0xFF5
 22036                           prodh	equ	0xFF4
 22037                           prodl	equ	0xFF3
 22038                           intcon	equ	0xFF2
 22039                           intcon2	equ	0xFF1
 22040                           intcon3	equ	0xFF0
 22041                           indf0	equ	0xFEF
 22042                           postinc0	equ	0xFEE
 22043                           plusw0	equ	0xFEB
 22044                           fsr0h	equ	0xFEA
 22045                           fsr0l	equ	0xFE9
 22046                           wreg	equ	0xFE8
 22047                           indf1	equ	0xFE7
 22048                           postinc1	equ	0xFE6
 22049                           postdec1	equ	0xFE5
 22050                           fsr1h	equ	0xFE2
 22051                           fsr1l	equ	0xFE1
 22052                           indf2	equ	0xFDF
 22053                           postinc2	equ	0xFDE
 22054                           postdec2	equ	0xFDD
 22055                           plusw2	equ	0xFDB
 22056                           fsr2h	equ	0xFDA
 22057                           fsr2l	equ	0xFD9
 22058                           status	equ	0xFD8
 22059                           
 22060 ;; *************** function _Eeprom_Write *****************
 22061 ;; Defined at:
 22062 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 22063 ;; Parameters:    Size  Location     Type
 22064 ;;  MemoryAddres    1    wreg     unsigned char 
 22065 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 22066 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), smsText(20), MyApp_Task@emptyNumber(13), 
 22067 ;;		 -> callerNumber(13), 
 22068 ;;  DataLength      1   49[BANK0 ] unsigned char 
 22069 ;; Auto vars:     Size  Location     Type
 22070 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 22071 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 22072 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 22073 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 22074 ;; Return value:  Size  Location     Type
 22075 ;;                  1    wreg      unsigned char 
 22076 ;; Registers used:
 22077 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22078 ;; Tracked objects:
 22079 ;;		On entry : 0/0
 22080 ;;		On exit  : 0/0
 22081 ;;		Unchanged: 0/0
 22082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22083 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22086 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22087 ;;Total ram usage:        7 bytes
 22088 ;; Hardware stack levels used:    1
 22089 ;; Hardware stack levels required when called:   13
 22090 ;; This function calls:
 22091 ;;		_I2cSlv_SendI2cMsg
 22092 ;;		_StringCopy
 22093 ;; This function is called by:
 22094 ;;		_saveNumberInMemory
 22095 ;;		_initMemorizedNumbersCount
 22096 ;;		_incrementMemorizedNumbersCount
 22097 ;;		_decrementMemorizedNumbersCount
 22098 ;; This function uses a non-reentrant model
 22099 ;;
 22100                           
 22101                           	psect	text99
 22102  0059F4                     __ptext99:
 22103                           	opt stack 0
 22104  0059F4                     _Eeprom_Write:
 22105                           	opt stack 13
 22106                           
 22107                           ; BSR set to: 0
 22108                           ;incstack = 0
 22109                           ;Eeprom_Write@MemoryAddress stored from wreg
 22110  0059F4  0100               	movlb	0	; () banked
 22111  0059F6  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 22112                           
 22113                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 22114  0059F8  0E50               	movlw	80
 22115  0059FA  0100               	movlb	0	; () banked
 22116  0059FC  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 22117                           
 22118                           ; BSR set to: 0
 22119                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 22120  0059FE  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 22121  005A00  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 22122                           
 22123                           ; BSR set to: 0
 22124                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 22125  005A02  0E00               	movlw	0
 22126  005A04  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22127                           
 22128                           ; BSR set to: 0
 22129                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 22130  005A06  0E10               	movlw	16
 22131  005A08  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 22132  005A0A  0012               	return	
 22133                           
 22134                           ; BSR set to: 0
 22135                           ;eeprom_if.c: 85: {
 22136                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 22137  005A0C  C093  F4B1         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 22138                           
 22139                           ; BSR set to: 0
 22140                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 22141  005A10  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 22142  005A14  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 22143  005A18  0EB2               	movlw	low (_EepromBuffer+1)
 22144  005A1A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22145  005A1C  0E04               	movlw	high (_EepromBuffer+1)
 22146  005A1E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22147  005A20  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 22148  005A24  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 22149  005A26  ECBB  F02A         	call	_StringCopy	;wreg free
 22150                           
 22151                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 22152  005A2A  0EB1               	movlw	low _EepromBuffer
 22153  005A2C  0100               	movlb	0	; () banked
 22154  005A2E  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 22155  005A30  0E04               	movlw	high _EepromBuffer
 22156  005A32  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 22157  005A34  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 22158  005A38  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 22159  005A3C  EC19  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 22160  005A40  0100               	movlb	0	; () banked
 22161  005A42  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 22162                           
 22163                           ; BSR set to: 0
 22164  005A44  0012               	return	
 22165  005A46                     __end_of_Eeprom_Write:
 22166                           	opt stack 0
 22167                           tosu	equ	0xFFF
 22168                           tosh	equ	0xFFE
 22169                           tosl	equ	0xFFD
 22170                           pclath	equ	0xFFA
 22171                           tblptru	equ	0xFF8
 22172                           tblptrh	equ	0xFF7
 22173                           tblptrl	equ	0xFF6
 22174                           tablat	equ	0xFF5
 22175                           prodh	equ	0xFF4
 22176                           prodl	equ	0xFF3
 22177                           intcon	equ	0xFF2
 22178                           intcon2	equ	0xFF1
 22179                           intcon3	equ	0xFF0
 22180                           indf0	equ	0xFEF
 22181                           postinc0	equ	0xFEE
 22182                           plusw0	equ	0xFEB
 22183                           fsr0h	equ	0xFEA
 22184                           fsr0l	equ	0xFE9
 22185                           wreg	equ	0xFE8
 22186                           indf1	equ	0xFE7
 22187                           postinc1	equ	0xFE6
 22188                           postdec1	equ	0xFE5
 22189                           fsr1h	equ	0xFE2
 22190                           fsr1l	equ	0xFE1
 22191                           indf2	equ	0xFDF
 22192                           postinc2	equ	0xFDE
 22193                           postdec2	equ	0xFDD
 22194                           plusw2	equ	0xFDB
 22195                           fsr2h	equ	0xFDA
 22196                           fsr2l	equ	0xFD9
 22197                           status	equ	0xFD8
 22198                           
 22199 ;; *************** function _initFsm *****************
 22200 ;; Defined at:
 22201 ;;		line 177 in file "../Source/c/04_App/app_init.c"
 22202 ;; Parameters:    Size  Location     Type
 22203 ;;		None
 22204 ;; Auto vars:     Size  Location     Type
 22205 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 22206 ;; Return value:  Size  Location     Type
 22207 ;;                  1    wreg      unsigned char 
 22208 ;; Registers used:
 22209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22210 ;; Tracked objects:
 22211 ;;		On entry : 0/0
 22212 ;;		On exit  : 0/0
 22213 ;;		Unchanged: 0/0
 22214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22216 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22218 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22219 ;;Total ram usage:        1 bytes
 22220 ;; Hardware stack levels used:    1
 22221 ;; Hardware stack levels required when called:   18
 22222 ;; This function calls:
 22223 ;;		_initEeprom
 22224 ;;		_initGprsModem
 22225 ;; This function is called by:
 22226 ;;		_MyApp_Task
 22227 ;; This function uses a non-reentrant model
 22228 ;;
 22229                           
 22230                           	psect	text100
 22231  005D52                     __ptext100:
 22232                           	opt stack 0
 22233  005D52                     _initFsm:
 22234                           	opt stack 9
 22235                           
 22236                           ;app_init.c: 179: static initFsmStates currentState = INIT_FSM_MODEM;
 22237                           ;app_init.c: 180: bool isInitialized = 0;
 22238                           
 22239                           ; BSR set to: 0
 22240                           ;incstack = 0
 22241  005D52  0E00               	movlw	0
 22242  005D54  0101               	movlb	1	; () banked
 22243  005D56  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22244                           
 22245                           ;app_init.c: 182: switch (currentState)
 22246  005D58  D013               	goto	l2705
 22247  005D5A                     
 22248                           ; BSR set to: 1
 22249                           ;app_init.c: 185: if (initGprsModem())
 22250                           
 22251                           ; BSR set to: 1
 22252  005D5A  EC7C  F026         	call	_initGprsModem	;wreg free
 22253  005D5E  0900               	iorlw	0
 22254  005D60  B4D8               	btfsc	status,2,c
 22255  005D62  D018               	goto	l2708
 22256                           
 22257                           ;app_init.c: 186: {
 22258                           ;app_init.c: 187: currentState = INIT_FSM_EEPROM;
 22259  005D64  0E01               	movlw	1
 22260  005D66  D006               	goto	L24
 22261  005D68                     
 22262                           ; BSR set to: 1
 22263                           ;app_init.c: 192: if (initEeprom())
 22264                           
 22265                           ; BSR set to: 1
 22266  005D68  EC99  F027         	call	_initEeprom	;wreg free
 22267  005D6C  0900               	iorlw	0
 22268  005D6E  B4D8               	btfsc	status,2,c
 22269  005D70  D011               	goto	l2708
 22270                           
 22271                           ;app_init.c: 193: {
 22272                           ;app_init.c: 194: currentState = INIT_FSM_COMPLETE;
 22273  005D72  0E02               	movlw	2
 22274  005D74                     L24:
 22275  005D74  0101               	movlb	1	; () banked
 22276  005D76  6FD3               	movwf	initFsm@currentState& (0+255),b
 22277                           
 22278                           ; BSR set to: 1
 22279                           ;app_init.c: 195: }
 22280                           ;app_init.c: 196: break;
 22281  005D78  D00D               	goto	l2708
 22282  005D7A                     
 22283                           ; BSR set to: 1
 22284                           ;app_init.c: 199: isInitialized = 1;
 22285                           
 22286                           ; BSR set to: 1
 22287  005D7A  0E01               	movlw	1
 22288  005D7C  6F03               	movwf	initFsm@isInitialized& (0+255),b
 22289                           
 22290                           ; BSR set to: 1
 22291                           ;app_init.c: 204: }
 22292                           
 22293                           ; BSR set to: 1
 22294                           ;app_init.c: 203: break;
 22295                           
 22296                           ;app_init.c: 202: default:
 22297                           
 22298                           ;app_init.c: 200: break;
 22299  005D7E  D00A               	goto	l2708
 22300  005D80                     l2705:
 22301                           
 22302                           ; BSR set to: 1
 22303                           
 22304                           ; BSR set to: 1
 22305  005D80  51D3               	movf	initFsm@currentState& (0+255),w,b
 22306                           
 22307                           ; Switch size 1, requested type "space"
 22308                           ; Number of cases is 3, Range of values is 0 to 2
 22309                           ; switch strategies available:
 22310                           ; Name         Instructions Cycles
 22311                           ; simple_byte           10     6 (average)
 22312                           ;	Chosen strategy is simple_byte
 22313  005D82  0A00               	xorlw	0	; case 0
 22314  005D84  B4D8               	btfsc	status,2,c
 22315  005D86  D7E9               	goto	l2706
 22316  005D88  0A01               	xorlw	1	; case 1
 22317  005D8A  B4D8               	btfsc	status,2,c
 22318  005D8C  D7ED               	goto	l2709
 22319  005D8E  0A03               	xorlw	3	; case 2
 22320  005D90  B4D8               	btfsc	status,2,c
 22321  005D92  D7F3               	goto	l2711
 22322  005D94                     l2708:
 22323                           
 22324                           ;app_init.c: 205: return isInitialized;
 22325                           
 22326                           ; BSR set to: 1
 22327  005D94  0101               	movlb	1	; () banked
 22328  005D96  5103               	movf	initFsm@isInitialized& (0+255),w,b
 22329  005D98  0012               	return	
 22330  005D9A                     __end_of_initFsm:
 22331                           	opt stack 0
 22332                           tosu	equ	0xFFF
 22333                           tosh	equ	0xFFE
 22334                           tosl	equ	0xFFD
 22335                           pclath	equ	0xFFA
 22336                           tblptru	equ	0xFF8
 22337                           tblptrh	equ	0xFF7
 22338                           tblptrl	equ	0xFF6
 22339                           tablat	equ	0xFF5
 22340                           prodh	equ	0xFF4
 22341                           prodl	equ	0xFF3
 22342                           intcon	equ	0xFF2
 22343                           intcon2	equ	0xFF1
 22344                           intcon3	equ	0xFF0
 22345                           indf0	equ	0xFEF
 22346                           postinc0	equ	0xFEE
 22347                           plusw0	equ	0xFEB
 22348                           fsr0h	equ	0xFEA
 22349                           fsr0l	equ	0xFE9
 22350                           wreg	equ	0xFE8
 22351                           indf1	equ	0xFE7
 22352                           postinc1	equ	0xFE6
 22353                           postdec1	equ	0xFE5
 22354                           fsr1h	equ	0xFE2
 22355                           fsr1l	equ	0xFE1
 22356                           indf2	equ	0xFDF
 22357                           postinc2	equ	0xFDE
 22358                           postdec2	equ	0xFDD
 22359                           plusw2	equ	0xFDB
 22360                           fsr2h	equ	0xFDA
 22361                           fsr2l	equ	0xFD9
 22362                           status	equ	0xFD8
 22363                           
 22364 ;; *************** function _initGprsModem *****************
 22365 ;; Defined at:
 22366 ;;		line 84 in file "../Source/c/04_App/app_init.c"
 22367 ;; Parameters:    Size  Location     Type
 22368 ;;		None
 22369 ;; Auto vars:     Size  Location     Type
 22370 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 22371 ;; Return value:  Size  Location     Type
 22372 ;;                  1    wreg      unsigned char 
 22373 ;; Registers used:
 22374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22375 ;; Tracked objects:
 22376 ;;		On entry : 0/0
 22377 ;;		On exit  : 0/0
 22378 ;;		Unchanged: 0/0
 22379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22384 ;;Total ram usage:        1 bytes
 22385 ;; Hardware stack levels used:    1
 22386 ;; Hardware stack levels required when called:   14
 22387 ;; This function calls:
 22388 ;;		_Mdm_SetSmsFormat
 22389 ;;		_Uart_WriteConstString
 22390 ;;		_secondsAppTimer
 22391 ;; This function is called by:
 22392 ;;		_initFsm
 22393 ;; This function uses a non-reentrant model
 22394 ;;
 22395                           
 22396                           	psect	text101
 22397  004CF8                     __ptext101:
 22398                           	opt stack 0
 22399  004CF8                     _initGprsModem:
 22400                           	opt stack 12
 22401                           
 22402                           ;app_init.c: 86: static uint16_t modemCounter = 0;
 22403                           ;app_init.c: 87: static modemStates currentState = MODEM_INIT;
 22404                           ;app_init.c: 88: bool isInitialized = 0;
 22405                           
 22406                           ; BSR set to: 1
 22407                           ;incstack = 0
 22408  004CF8  0E00               	movlw	0
 22409  004CFA  0100               	movlb	0	; () banked
 22410  004CFC  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22411                           
 22412                           ;app_init.c: 90: switch(currentState)
 22413  004CFE  D033               	goto	l2675
 22414  004D00                     
 22415                           ;app_init.c: 93: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 22416                           
 22417                           ; BSR set to: 0
 22418  004D00  0E03               	movlw	3
 22419  004D02  0100               	movlb	0	; () banked
 22420  004D04  19D0               	xorwf	_MdmStatus& (0+255),w,b
 22421  004D06  B4D8               	btfsc	status,2,c
 22422  004D08  D003               	goto	u14150
 22423                           
 22424                           ; BSR set to: 0
 22425  004D0A  05D0               	decf	_MdmStatus& (0+255),w,b
 22426  004D0C  A4D8               	btfss	status,2,c
 22427  004D0E  D039               	goto	l2681
 22428  004D10                     u14150:
 22429                           
 22430                           ; BSR set to: 0
 22431                           ;app_init.c: 94: {
 22432                           ;app_init.c: 95: if (secondsAppTimer(5, &modemCounter, 0))
 22433                           
 22434                           ; BSR set to: 0
 22435  004D10  0EBA               	movlw	low initGprsModem@modemCounter
 22436  004D12  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 22437  004D14  0E03               	movlw	high initGprsModem@modemCounter
 22438  004D16  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 22439  004D18  0E00               	movlw	0
 22440  004D1A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 22441  004D1C  0E05               	movlw	5
 22442  004D1E  ECC7  F023         	call	_secondsAppTimer
 22443  004D22  0900               	iorlw	0
 22444  004D24  B4D8               	btfsc	status,2,c
 22445  004D26  D02D               	goto	l2681
 22446                           
 22447                           ;app_init.c: 96: {
 22448                           ;app_init.c: 97: Mdm_SetSmsFormat(1);
 22449  004D28  0E01               	movlw	1
 22450  004D2A  EC9C  F02D         	call	_Mdm_SetSmsFormat
 22451                           
 22452                           ;app_init.c: 98: currentState = MODEM_DELETE_SMS;
 22453  004D2E  0E01               	movlw	1
 22454  004D30  D013               	goto	L26
 22455  004D32                     
 22456                           ; BSR set to: 1
 22457                           ;app_init.c: 104: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 22458                           
 22459                           ; BSR set to: 1
 22460  004D32  0EFA               	movlw	low STR_31
 22461  004D34  0100               	movlb	0	; () banked
 22462  004D36  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22463  004D38  0EFE               	movlw	high STR_31
 22464  004D3A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22465  004D3C  0E01               	movlw	1
 22466  004D3E  EC78  F02F         	call	_Uart_WriteConstString
 22467                           
 22468                           ;app_init.c: 105: currentState = MODEM_SET_CALLER_ID;
 22469  004D42  0E02               	movlw	2
 22470  004D44  D009               	goto	L26
 22471  004D46                     
 22472                           ; BSR set to: 1
 22473                           ;app_init.c: 109: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 22474                           
 22475                           ; BSR set to: 1
 22476  004D46  0EAA               	movlw	low STR_32
 22477  004D48  0100               	movlb	0	; () banked
 22478  004D4A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22479  004D4C  0EFF               	movlw	high STR_32
 22480  004D4E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22481  004D50  0E01               	movlw	1
 22482  004D52  EC78  F02F         	call	_Uart_WriteConstString
 22483                           
 22484                           ;app_init.c: 110: currentState = MODEM_INIT_COMPLETE;
 22485  004D56  0E03               	movlw	3
 22486  004D58                     L26:
 22487  004D58  0101               	movlb	1	; () banked
 22488  004D5A  6FD5               	movwf	initGprsModem@currentState& (0+255),b
 22489                           
 22490                           ;app_init.c: 111: break;
 22491  004D5C  D012               	goto	l2681
 22492  004D5E                     
 22493                           ; BSR set to: 1
 22494                           ;app_init.c: 114: isInitialized = 1;
 22495                           
 22496                           ; BSR set to: 1
 22497  004D5E  0E01               	movlw	1
 22498  004D60  0100               	movlb	0	; () banked
 22499  004D62  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 22500                           
 22501                           ; BSR set to: 0
 22502                           ;app_init.c: 119: }
 22503                           
 22504                           ; BSR set to: 0
 22505                           ;app_init.c: 118: break;
 22506                           
 22507                           ;app_init.c: 117: default:
 22508                           
 22509                           ;app_init.c: 115: break;
 22510  004D64  D00E               	goto	l2681
 22511  004D66                     l2675:
 22512                           
 22513                           ; BSR set to: 0
 22514                           
 22515                           ; BSR set to: 0
 22516  004D66  0101               	movlb	1	; () banked
 22517  004D68  51D5               	movf	initGprsModem@currentState& (0+255),w,b
 22518                           
 22519                           ; Switch size 1, requested type "space"
 22520                           ; Number of cases is 4, Range of values is 0 to 3
 22521                           ; switch strategies available:
 22522                           ; Name         Instructions Cycles
 22523                           ; simple_byte           13     7 (average)
 22524                           ;	Chosen strategy is simple_byte
 22525  004D6A  0A00               	xorlw	0	; case 0
 22526  004D6C  B4D8               	btfsc	status,2,c
 22527  004D6E  D7C8               	goto	l2676
 22528  004D70  0A01               	xorlw	1	; case 1
 22529  004D72  B4D8               	btfsc	status,2,c
 22530  004D74  D7DE               	goto	l2682
 22531  004D76  0A03               	xorlw	3	; case 2
 22532  004D78  B4D8               	btfsc	status,2,c
 22533  004D7A  D7E5               	goto	l2683
 22534  004D7C  0A01               	xorlw	1	; case 3
 22535  004D7E  B4D8               	btfsc	status,2,c
 22536  004D80  D7EE               	goto	l2684
 22537  004D82                     l2681:
 22538                           
 22539                           ;app_init.c: 120: return isInitialized;
 22540                           
 22541                           ; BSR set to: 1
 22542  004D82  0100               	movlb	0	; () banked
 22543  004D84  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 22544  004D86  0012               	return	
 22545  004D88                     __end_of_initGprsModem:
 22546                           	opt stack 0
 22547                           tosu	equ	0xFFF
 22548                           tosh	equ	0xFFE
 22549                           tosl	equ	0xFFD
 22550                           pclath	equ	0xFFA
 22551                           tblptru	equ	0xFF8
 22552                           tblptrh	equ	0xFF7
 22553                           tblptrl	equ	0xFF6
 22554                           tablat	equ	0xFF5
 22555                           prodh	equ	0xFF4
 22556                           prodl	equ	0xFF3
 22557                           intcon	equ	0xFF2
 22558                           intcon2	equ	0xFF1
 22559                           intcon3	equ	0xFF0
 22560                           indf0	equ	0xFEF
 22561                           postinc0	equ	0xFEE
 22562                           plusw0	equ	0xFEB
 22563                           fsr0h	equ	0xFEA
 22564                           fsr0l	equ	0xFE9
 22565                           wreg	equ	0xFE8
 22566                           indf1	equ	0xFE7
 22567                           postinc1	equ	0xFE6
 22568                           postdec1	equ	0xFE5
 22569                           fsr1h	equ	0xFE2
 22570                           fsr1l	equ	0xFE1
 22571                           indf2	equ	0xFDF
 22572                           postinc2	equ	0xFDE
 22573                           postdec2	equ	0xFDD
 22574                           plusw2	equ	0xFDB
 22575                           fsr2h	equ	0xFDA
 22576                           fsr2l	equ	0xFD9
 22577                           status	equ	0xFD8
 22578                           
 22579 ;; *************** function _secondsAppTimer *****************
 22580 ;; Defined at:
 22581 ;;		line 66 in file "../Source/c/04_App/app_utils.c"
 22582 ;; Parameters:    Size  Location     Type
 22583 ;;  seconds         1    wreg     unsigned char 
 22584 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 22585 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 22586 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 22587 ;; Auto vars:     Size  Location     Type
 22588 ;;  seconds         1   47[BANK0 ] unsigned char 
 22589 ;;  destinationT    2   49[BANK0 ] unsigned int 
 22590 ;;  isExpired       1   48[BANK0 ] unsigned char 
 22591 ;; Return value:  Size  Location     Type
 22592 ;;                  1    wreg      unsigned char 
 22593 ;; Registers used:
 22594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22595 ;; Tracked objects:
 22596 ;;		On entry : 0/0
 22597 ;;		On exit  : 0/0
 22598 ;;		Unchanged: 0/0
 22599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22600 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22601 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22602 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22603 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22604 ;;Total ram usage:        9 bytes
 22605 ;; Hardware stack levels used:    1
 22606 ;; Hardware stack levels required when called:   12
 22607 ;; This function calls:
 22608 ;;		___lwdiv
 22609 ;;		___wmul
 22610 ;; This function is called by:
 22611 ;;		_initGprsModem
 22612 ;;		_waitSetupCall
 22613 ;;		_blinkForSeconds
 22614 ;; This function uses a non-reentrant model
 22615 ;;
 22616                           
 22617                           	psect	text102
 22618  00478E                     __ptext102:
 22619                           	opt stack 0
 22620  00478E                     _secondsAppTimer:
 22621                           	opt stack 14
 22622                           
 22623                           ; BSR set to: 0
 22624                           ;incstack = 0
 22625                           ;secondsAppTimer@seconds stored from wreg
 22626  00478E  0100               	movlb	0	; () banked
 22627  004790  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 22628                           
 22629                           ;app_utils.c: 68: bool isExpired = 1;
 22630  004792  0E01               	movlw	1
 22631  004794  0100               	movlb	0	; () banked
 22632  004796  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22633                           
 22634                           ; BSR set to: 0
 22635                           ;app_utils.c: 69: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 22636  004798  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 22637  00479C  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 22638  00479E  0E03               	movlw	3
 22639  0047A0  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22640  0047A2  0EE8               	movlw	232
 22641  0047A4  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 22642  0047A6  ECFF  F031         	call	___wmul	;wreg free
 22643  0047AA  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 22644  0047AE  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 22645  0047B2  0E00               	movlw	0
 22646  0047B4  0100               	movlb	0	; () banked
 22647  0047B6  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 22648  0047B8  0E64               	movlw	100
 22649  0047BA  6F85               	movwf	___lwdiv@divisor& (0+255),b
 22650  0047BC  ECD0  F02C         	call	___lwdiv	;wreg free
 22651  0047C0  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 22652  0047C4  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 22653                           
 22654                           ;app_utils.c: 71: if (*counter < destinationTicks)
 22655  0047C8  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22656  0047CC  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22657  0047D0  0100               	movlb	0	; () banked
 22658  0047D2  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22659  0047D4  5CDE               	subwf	postinc2,w,c
 22660  0047D6  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22661  0047D8  58DE               	subwfb	postinc2,w,c
 22662  0047DA  B0D8               	btfsc	status,0,c
 22663  0047DC  D009               	goto	l2727
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;app_utils.c: 72: {
 22667                           ;app_utils.c: 73: *counter += 1;
 22668  0047DE  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22669  0047E2  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22670  0047E6  2ADE               	incf	postinc2,f,c
 22671  0047E8  0E00               	movlw	0
 22672  0047EA  22DD               	addwfc	postdec2,f,c
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;app_utils.c: 74: isExpired = 0;
 22676  0047EC  0E00               	movlw	0
 22677  0047EE  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 22678  0047F0                     l2727:
 22679                           
 22680                           ; BSR set to: 0
 22681                           ;app_utils.c: 75: }
 22682                           ;app_utils.c: 76: if (*counter == destinationTicks)
 22683                           
 22684                           ; BSR set to: 0
 22685  0047F0  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22686  0047F4  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22687  0047F8  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 22688  0047FA  18DE               	xorwf	postinc2,w,c
 22689  0047FC  E117               	bnz	l13832
 22690  0047FE  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 22691  004800  18DE               	xorwf	postinc2,w,c
 22692  004802  A4D8               	btfss	status,2,c
 22693  004804  D013               	goto	l2730
 22694                           
 22695                           ; BSR set to: 0
 22696                           ;app_utils.c: 77: {
 22697                           ;app_utils.c: 78: if (isCyclic)
 22698  004806  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 22699  004808  B4D8               	btfsc	status,2,c
 22700  00480A  D008               	goto	l2729
 22701                           
 22702                           ; BSR set to: 0
 22703                           ;app_utils.c: 79: {
 22704                           ;app_utils.c: 80: *counter = 0;
 22705  00480C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22706  004810  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22707  004814  0E00               	movlw	0
 22708  004816  6EDE               	movwf	postinc2,c
 22709  004818  0E00               	movlw	0
 22710  00481A  D007               	goto	L27
 22711  00481C                     l2729:
 22712                           
 22713                           ; BSR set to: 0
 22714                           ;app_utils.c: 82: else
 22715                           ;app_utils.c: 83: {
 22716                           ;app_utils.c: 84: *counter = 0xFFFF;
 22717                           
 22718                           ; BSR set to: 0
 22719  00481C  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 22720  004820  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 22721  004824  0EFF               	movlw	255
 22722  004826  6EDE               	movwf	postinc2,c
 22723  004828  0EFF               	movlw	255
 22724  00482A                     L27:
 22725  00482A  6EDD               	movwf	postdec2,c
 22726  00482C                     l2730:
 22727  00482C                     l13832:
 22728                           
 22729                           ; BSR set to: 0
 22730                           ;app_utils.c: 85: }
 22731                           ;app_utils.c: 86: }
 22732                           ;app_utils.c: 87: return isExpired;
 22733  00482C  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 22734  00482E  0012               	return	
 22735  004830                     __end_of_secondsAppTimer:
 22736                           	opt stack 0
 22737                           tosu	equ	0xFFF
 22738                           tosh	equ	0xFFE
 22739                           tosl	equ	0xFFD
 22740                           pclath	equ	0xFFA
 22741                           tblptru	equ	0xFF8
 22742                           tblptrh	equ	0xFF7
 22743                           tblptrl	equ	0xFF6
 22744                           tablat	equ	0xFF5
 22745                           prodh	equ	0xFF4
 22746                           prodl	equ	0xFF3
 22747                           intcon	equ	0xFF2
 22748                           intcon2	equ	0xFF1
 22749                           intcon3	equ	0xFF0
 22750                           indf0	equ	0xFEF
 22751                           postinc0	equ	0xFEE
 22752                           plusw0	equ	0xFEB
 22753                           fsr0h	equ	0xFEA
 22754                           fsr0l	equ	0xFE9
 22755                           wreg	equ	0xFE8
 22756                           indf1	equ	0xFE7
 22757                           postinc1	equ	0xFE6
 22758                           postdec1	equ	0xFE5
 22759                           fsr1h	equ	0xFE2
 22760                           fsr1l	equ	0xFE1
 22761                           indf2	equ	0xFDF
 22762                           postinc2	equ	0xFDE
 22763                           postdec2	equ	0xFDD
 22764                           plusw2	equ	0xFDB
 22765                           fsr2h	equ	0xFDA
 22766                           fsr2l	equ	0xFD9
 22767                           status	equ	0xFD8
 22768                           
 22769 ;; *************** function _Mdm_SetSmsFormat *****************
 22770 ;; Defined at:
 22771 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22772 ;; Parameters:    Size  Location     Type
 22773 ;;  TextFormat      1    wreg     unsigned char 
 22774 ;; Auto vars:     Size  Location     Type
 22775 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 22776 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 22777 ;;  Index           1   35[BANK0 ] unsigned char 
 22778 ;; Return value:  Size  Location     Type
 22779 ;;                  1    wreg      void 
 22780 ;; Registers used:
 22781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22782 ;; Tracked objects:
 22783 ;;		On entry : 0/0
 22784 ;;		On exit  : 0/0
 22785 ;;		Unchanged: 0/0
 22786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22788 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22790 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22791 ;;Total ram usage:       22 bytes
 22792 ;; Hardware stack levels used:    1
 22793 ;; Hardware stack levels required when called:   13
 22794 ;; This function calls:
 22795 ;;		_Uart_WriteString
 22796 ;; This function is called by:
 22797 ;;		_initGprsModem
 22798 ;; This function uses a non-reentrant model
 22799 ;;
 22800                           
 22801                           	psect	text103
 22802  005B38                     __ptext103:
 22803                           	opt stack 0
 22804  005B38                     _Mdm_SetSmsFormat:
 22805                           	opt stack 12
 22806                           
 22807                           ; BSR set to: 0
 22808                           ;incstack = 0
 22809                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 22810  005B38  0100               	movlb	0	; () banked
 22811  005B3A  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 22812                           
 22813                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 22814                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 22815  005B3C  0E00               	movlw	0
 22816  005B3E  0100               	movlb	0	; () banked
 22817  005B40  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 22818                           
 22819                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 22820  005B42  0E41               	movlw	65
 22821  005B44  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 22822                           
 22823                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 22824  005B46  0E54               	movlw	84
 22825  005B48  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 22826                           
 22827                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 22828  005B4A  0E2B               	movlw	43
 22829  005B4C  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 22830                           
 22831                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 22832  005B4E  0E43               	movlw	67
 22833  005B50  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 22834                           
 22835                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 22836  005B52  0E4D               	movlw	77
 22837  005B54  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 22838                           
 22839                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 22840  005B56  0E47               	movlw	71
 22841  005B58  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22842                           
 22843                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22844  005B5A  0E46               	movlw	70
 22845  005B5C  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22846                           
 22847                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22848  005B5E  0E3D               	movlw	61
 22849  005B60  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22850                           
 22851                           ; BSR set to: 0
 22852                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22853  005B62  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22854  005B64  A4D8               	btfss	status,2,c
 22855  005B66  D002               	goto	l1121
 22856                           
 22857                           ; BSR set to: 0
 22858                           ;mdm_gsm_gprs.c: 854: {
 22859                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22860  005B68  0E31               	movlw	49
 22861  005B6A  D001               	goto	L28
 22862  005B6C                     l1121:
 22863                           
 22864                           ; BSR set to: 0
 22865                           ;mdm_gsm_gprs.c: 857: else
 22866                           ;mdm_gsm_gprs.c: 858: {
 22867                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22868                           
 22869                           ; BSR set to: 0
 22870  005B6C  0E30               	movlw	48
 22871  005B6E                     L28:
 22872  005B6E  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22873                           
 22874                           ; BSR set to: 0
 22875                           ;mdm_gsm_gprs.c: 860: }
 22876                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22877  005B70  0E0D               	movlw	13
 22878  005B72  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22879                           
 22880                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22881  005B74  0E00               	movlw	0
 22882  005B76  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22883                           
 22884                           ; BSR set to: 0
 22885                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22886  005B78  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22887  005B7A  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22888  005B7C  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22889  005B7E  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22890  005B80  0E01               	movlw	1
 22891  005B82  EC38  F030         	call	_Uart_WriteString
 22892  005B86  0012               	return		;funcret
 22893  005B88                     __end_of_Mdm_SetSmsFormat:
 22894                           	opt stack 0
 22895                           tosu	equ	0xFFF
 22896                           tosh	equ	0xFFE
 22897                           tosl	equ	0xFFD
 22898                           pclath	equ	0xFFA
 22899                           tblptru	equ	0xFF8
 22900                           tblptrh	equ	0xFF7
 22901                           tblptrl	equ	0xFF6
 22902                           tablat	equ	0xFF5
 22903                           prodh	equ	0xFF4
 22904                           prodl	equ	0xFF3
 22905                           intcon	equ	0xFF2
 22906                           intcon2	equ	0xFF1
 22907                           intcon3	equ	0xFF0
 22908                           indf0	equ	0xFEF
 22909                           postinc0	equ	0xFEE
 22910                           plusw0	equ	0xFEB
 22911                           fsr0h	equ	0xFEA
 22912                           fsr0l	equ	0xFE9
 22913                           wreg	equ	0xFE8
 22914                           indf1	equ	0xFE7
 22915                           postinc1	equ	0xFE6
 22916                           postdec1	equ	0xFE5
 22917                           fsr1h	equ	0xFE2
 22918                           fsr1l	equ	0xFE1
 22919                           indf2	equ	0xFDF
 22920                           postinc2	equ	0xFDE
 22921                           postdec2	equ	0xFDD
 22922                           plusw2	equ	0xFDB
 22923                           fsr2h	equ	0xFDA
 22924                           fsr2l	equ	0xFD9
 22925                           status	equ	0xFD8
 22926                           
 22927 ;; *************** function _initEeprom *****************
 22928 ;; Defined at:
 22929 ;;		line 127 in file "../Source/c/04_App/app_init.c"
 22930 ;; Parameters:    Size  Location     Type
 22931 ;;		None
 22932 ;; Auto vars:     Size  Location     Type
 22933 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22934 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22935 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22936 ;; Return value:  Size  Location     Type
 22937 ;;                  1    wreg      unsigned char 
 22938 ;; Registers used:
 22939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22940 ;; Tracked objects:
 22941 ;;		On entry : 0/0
 22942 ;;		On exit  : 0/0
 22943 ;;		Unchanged: 0/0
 22944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22946 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22948 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22949 ;;Total ram usage:        3 bytes
 22950 ;; Hardware stack levels used:    1
 22951 ;; Hardware stack levels required when called:   17
 22952 ;; This function calls:
 22953 ;;		_Eeprom_Read
 22954 ;; This function is called by:
 22955 ;;		_initFsm
 22956 ;; This function uses a non-reentrant model
 22957 ;;
 22958                           
 22959                           	psect	text104
 22960  004F32                     __ptext104:
 22961                           	opt stack 0
 22962  004F32                     _initEeprom:
 22963                           	opt stack 9
 22964                           
 22965                           ;app_init.c: 129: const uint8_t addressToRead = 0;
 22966                           
 22967                           ;incstack = 0
 22968  004F32  0E00               	movlw	0
 22969  004F34  0101               	movlb	1	; () banked
 22970  004F36  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22971                           
 22972                           ;app_init.c: 130: static eepromStates currentState = EEPROM_INIT;
 22973                           ;app_init.c: 131: EepromStsType memoryOpResult = OP_PENDING;
 22974  004F38  0E02               	movlw	2
 22975  004F3A  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22976                           
 22977                           ;app_init.c: 132: bool isInitialized = 0;
 22978  004F3C  0E00               	movlw	0
 22979  004F3E  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22980                           
 22981                           ;app_init.c: 134: switch (currentState)
 22982  004F40  D031               	goto	l2691
 22983  004F42                     
 22984                           ; BSR set to: 1
 22985                           ;app_init.c: 137: memoryOpResult = Eeprom_Read(0, memoryPreamble, 5);
 22986                           
 22987                           ; BSR set to: 1
 22988  004F42  0E99               	movlw	low _memoryPreamble
 22989  004F44  0100               	movlb	0	; () banked
 22990  004F46  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22991  004F48  0E03               	movlw	high _memoryPreamble
 22992  004F4A  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22993  004F4C  0E05               	movlw	5
 22994  004F4E  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22995  004F50  0E00               	movlw	0
 22996  004F52  EC7C  F02C         	call	_Eeprom_Read
 22997  004F56  0101               	movlb	1	; () banked
 22998  004F58  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22999                           
 23000                           ; BSR set to: 1
 23001                           ;app_init.c: 138: if (memoryOpResult != OP_PENDING)
 23002  004F5A  0E02               	movlw	2
 23003  004F5C  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 23004  004F5E  B4D8               	btfsc	status,2,c
 23005  004F60  D02B               	goto	l2696
 23006                           
 23007                           ; BSR set to: 1
 23008                           ;app_init.c: 139: {
 23009                           ;app_init.c: 140: if (memoryPreamble[0] == 'U' &&
 23010                           ;app_init.c: 141: memoryPreamble[1] == 'S' &&
 23011                           ;app_init.c: 142: memoryPreamble[2] == 'I' &&
 23012                           ;app_init.c: 143: memoryPreamble[3] == 'M')
 23013  004F62  0E55               	movlw	85
 23014  004F64  0103               	movlb	3	; () banked
 23015  004F66  1999               	xorwf	_memoryPreamble& (0+255),w,b
 23016  004F68  A4D8               	btfss	status,2,c
 23017  004F6A  D00E               	goto	l2694
 23018                           
 23019                           ; BSR set to: 3
 23020  004F6C  0E53               	movlw	83
 23021  004F6E  199A               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 23022  004F70  A4D8               	btfss	status,2,c
 23023  004F72  D00A               	goto	l2694
 23024                           
 23025                           ; BSR set to: 3
 23026  004F74  0E49               	movlw	73
 23027  004F76  199B               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 23028  004F78  A4D8               	btfss	status,2,c
 23029  004F7A  D006               	goto	l2694
 23030                           
 23031                           ; BSR set to: 3
 23032  004F7C  0E4D               	movlw	77
 23033  004F7E  199C               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 23034  004F80  A4D8               	btfss	status,2,c
 23035  004F82  D002               	goto	l2694
 23036                           
 23037                           ; BSR set to: 3
 23038                           ;app_init.c: 144: {
 23039                           ;app_init.c: 145: currentState = EEPROM_NOT_EMPTY;
 23040  004F84  0E02               	movlw	2
 23041  004F86  D003               	goto	L29
 23042  004F88                     l2694:
 23043                           
 23044                           ; BSR set to: 3
 23045                           ;app_init.c: 147: else
 23046                           ;app_init.c: 148: {
 23047                           ;app_init.c: 149: memorizedNumbersCount[0] = memoryPreamble[4];
 23048  004F88  C39D  F038         	movff	_memoryPreamble+4,_memorizedNumbersCount
 23049                           
 23050                           ; BSR set to: 3
 23051                           ;app_init.c: 150: currentState = EEPROM_EMPTY;
 23052  004F8C  0E01               	movlw	1
 23053  004F8E                     L29:
 23054  004F8E  0101               	movlb	1	; () banked
 23055  004F90  6FD4               	movwf	initEeprom@currentState& (0+255),b
 23056                           
 23057                           ; BSR set to: 1
 23058                           ;app_init.c: 151: }
 23059                           ;app_init.c: 152: }
 23060                           ;app_init.c: 153: break;
 23061                           
 23062                           ; BSR set to: 1
 23063  004F92  D012               	goto	l2696
 23064  004F94                     
 23065                           ; BSR set to: 1
 23066                           ;app_init.c: 156: isInitialized = 1;
 23067                           
 23068                           ; BSR set to: 1
 23069  004F94  0E01               	movlw	1
 23070  004F96  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23071                           
 23072                           ;app_init.c: 157: break;
 23073  004F98  D00F               	goto	l2696
 23074  004F9A                     
 23075                           ; BSR set to: 1
 23076                           ;app_init.c: 160: isInitialized = 1;
 23077                           
 23078                           ; BSR set to: 1
 23079  004F9A  0E01               	movlw	1
 23080  004F9C  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 23081                           
 23082                           ;app_init.c: 161: isMemoryEmpty = 0;
 23083  004F9E  0E00               	movlw	0
 23084  004FA0  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 23085                           
 23086                           ; BSR set to: 1
 23087                           ;app_init.c: 166: }
 23088                           
 23089                           ; BSR set to: 1
 23090                           ;app_init.c: 165: break;
 23091                           
 23092                           ;app_init.c: 164: default:
 23093                           
 23094                           ;app_init.c: 162: break;
 23095  004FA2  D00A               	goto	l2696
 23096  004FA4                     l2691:
 23097                           
 23098                           ; BSR set to: 1
 23099                           
 23100                           ; BSR set to: 1
 23101  004FA4  51D4               	movf	initEeprom@currentState& (0+255),w,b
 23102                           
 23103                           ; Switch size 1, requested type "space"
 23104                           ; Number of cases is 3, Range of values is 0 to 2
 23105                           ; switch strategies available:
 23106                           ; Name         Instructions Cycles
 23107                           ; simple_byte           10     6 (average)
 23108                           ;	Chosen strategy is simple_byte
 23109  004FA6  0A00               	xorlw	0	; case 0
 23110  004FA8  B4D8               	btfsc	status,2,c
 23111  004FAA  D7CB               	goto	l2692
 23112  004FAC  0A01               	xorlw	1	; case 1
 23113  004FAE  B4D8               	btfsc	status,2,c
 23114  004FB0  D7F1               	goto	l2697
 23115  004FB2  0A03               	xorlw	3	; case 2
 23116  004FB4  B4D8               	btfsc	status,2,c
 23117  004FB6  D7F1               	goto	l2698
 23118  004FB8                     l2696:
 23119                           
 23120                           ; BSR set to: 1
 23121                           ;app_init.c: 167: return isInitialized;
 23122                           
 23123                           ; BSR set to: 1
 23124  004FB8  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 23125  004FBA  0012               	return	
 23126  004FBC                     __end_of_initEeprom:
 23127                           	opt stack 0
 23128                           tosu	equ	0xFFF
 23129                           tosh	equ	0xFFE
 23130                           tosl	equ	0xFFD
 23131                           pclath	equ	0xFFA
 23132                           tblptru	equ	0xFF8
 23133                           tblptrh	equ	0xFF7
 23134                           tblptrl	equ	0xFF6
 23135                           tablat	equ	0xFF5
 23136                           prodh	equ	0xFF4
 23137                           prodl	equ	0xFF3
 23138                           intcon	equ	0xFF2
 23139                           intcon2	equ	0xFF1
 23140                           intcon3	equ	0xFF0
 23141                           indf0	equ	0xFEF
 23142                           postinc0	equ	0xFEE
 23143                           plusw0	equ	0xFEB
 23144                           fsr0h	equ	0xFEA
 23145                           fsr0l	equ	0xFE9
 23146                           wreg	equ	0xFE8
 23147                           indf1	equ	0xFE7
 23148                           postinc1	equ	0xFE6
 23149                           postdec1	equ	0xFE5
 23150                           fsr1h	equ	0xFE2
 23151                           fsr1l	equ	0xFE1
 23152                           indf2	equ	0xFDF
 23153                           postinc2	equ	0xFDE
 23154                           postdec2	equ	0xFDD
 23155                           plusw2	equ	0xFDB
 23156                           fsr2h	equ	0xFDA
 23157                           fsr2l	equ	0xFD9
 23158                           status	equ	0xFD8
 23159                           
 23160 ;; *************** function _findEmptySpot *****************
 23161 ;; Defined at:
 23162 ;;		line 211 in file "../Source/c/04_App/app_gate.c"
 23163 ;; Parameters:    Size  Location     Type
 23164 ;;		None
 23165 ;; Auto vars:     Size  Location     Type
 23166 ;;  readBuffer     13    0[BANK1 ] unsigned char [13]
 23167 ;;  memoryOpResu    1   16[BANK1 ] enum E8246
 23168 ;;  positionInMe    1   15[BANK1 ] unsigned char 
 23169 ;;  searchInProg    1   14[BANK1 ] const unsigned char 
 23170 ;;  searchFailed    1   13[BANK1 ] const unsigned char 
 23171 ;; Return value:  Size  Location     Type
 23172 ;;                  1    wreg      unsigned char 
 23173 ;; Registers used:
 23174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23175 ;; Tracked objects:
 23176 ;;		On entry : 0/0
 23177 ;;		On exit  : 0/0
 23178 ;;		Unchanged: 0/0
 23179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23181 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23183 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23184 ;;Total ram usage:       17 bytes
 23185 ;; Hardware stack levels used:    1
 23186 ;; Hardware stack levels required when called:   17
 23187 ;; This function calls:
 23188 ;;		_Eeprom_Read
 23189 ;;		_isNumberValid
 23190 ;; This function is called by:
 23191 ;;		_MyApp_Task
 23192 ;; This function uses a non-reentrant model
 23193 ;;
 23194                           
 23195                           	psect	text105
 23196  005374                     __ptext105:
 23197                           	opt stack 0
 23198  005374                     _findEmptySpot:
 23199                           	opt stack 10
 23200                           
 23201                           ;app_gate.c: 213: const uint8_t searchInProgress = 0;
 23202                           
 23203                           ; BSR set to: 1
 23204                           ;incstack = 0
 23205  005374  0E00               	movlw	0
 23206  005376  0101               	movlb	1	; () banked
 23207  005378  6F0E               	movwf	findEmptySpot@searchInProgress& (0+255),b
 23208                           
 23209                           ;app_gate.c: 214: const uint8_t searchFailed = 1;
 23210  00537A  0E01               	movlw	1
 23211  00537C  6F0D               	movwf	findEmptySpot@searchFailed& (0+255),b
 23212                           
 23213                           ; BSR set to: 1
 23214                           ;app_gate.c: 215: static uint8_t currentPosition = 16;
 23215                           ;app_gate.c: 216: uint8_t positionInMemory = searchInProgress;
 23216  00537E  C10E  F10F         	movff	findEmptySpot@searchInProgress,findEmptySpot@positionInMemory
 23217                           
 23218                           ;app_gate.c: 217: uint8_t readBuffer[((UINT8)(13))];
 23219                           ;app_gate.c: 218: EepromStsType memoryOpResult = OP_PENDING;
 23220  005382  0E02               	movlw	2
 23221  005384  6F10               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23222                           
 23223                           ; BSR set to: 1
 23224                           ;app_gate.c: 220: if (currentPosition >= 16 * 10)
 23225  005386  0E9F               	movlw	159
 23226  005388  0100               	movlb	0	; () banked
 23227  00538A  65E1               	cpfsgt	findEmptySpot@currentPosition& (0+255),b
 23228  00538C  D002               	goto	l2812
 23229                           
 23230                           ; BSR set to: 0
 23231                           ;app_gate.c: 221: {
 23232                           ;app_gate.c: 222: currentPosition = 16;
 23233  00538E  0E10               	movlw	16
 23234  005390  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23235  005392                     l2812:
 23236                           
 23237                           ; BSR set to: 0
 23238                           ;app_gate.c: 223: }
 23239                           ;app_gate.c: 224: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13)
      +                          ));
 23240                           
 23241                           ; BSR set to: 0
 23242  005392  0E00               	movlw	low findEmptySpot@readBuffer
 23243  005394  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 23244  005396  0E01               	movlw	high findEmptySpot@readBuffer
 23245  005398  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 23246  00539A  0E0D               	movlw	13
 23247  00539C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 23248  00539E  51E1               	movf	findEmptySpot@currentPosition& (0+255),w,b
 23249  0053A0  EC7C  F02C         	call	_Eeprom_Read
 23250  0053A4  0101               	movlb	1	; () banked
 23251  0053A6  6F10               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 23252                           
 23253                           ; BSR set to: 1
 23254                           ;app_gate.c: 225: if (memoryOpResult != OP_PENDING)
 23255  0053A8  0E02               	movlw	2
 23256  0053AA  1910               	xorwf	findEmptySpot@memoryOpResult& (0+255),w,b
 23257  0053AC  B4D8               	btfsc	status,2,c
 23258  0053AE  D013               	goto	l2815
 23259                           
 23260                           ; BSR set to: 1
 23261                           ;app_gate.c: 226: {
 23262                           ;app_gate.c: 227: if (isNumberValid(readBuffer))
 23263  0053B0  0E00               	movlw	low findEmptySpot@readBuffer
 23264  0053B2  0100               	movlb	0	; () banked
 23265  0053B4  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 23266  0053B6  0E01               	movlw	high findEmptySpot@readBuffer
 23267  0053B8  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 23268  0053BA  EC88  F02A         	call	_isNumberValid	;wreg free
 23269  0053BE  0900               	iorlw	0
 23270  0053C0  B4D8               	btfsc	status,2,c
 23271  0053C2  D004               	goto	l2814
 23272                           
 23273                           ;app_gate.c: 228: {
 23274                           ;app_gate.c: 229: currentPosition += 16;
 23275  0053C4  0E10               	movlw	16
 23276  0053C6  0100               	movlb	0	; () banked
 23277  0053C8  27E1               	addwf	findEmptySpot@currentPosition& (0+255),f,b
 23278                           
 23279                           ;app_gate.c: 230: }
 23280  0053CA  D005               	goto	l2815
 23281  0053CC                     l2814:
 23282                           
 23283                           ;app_gate.c: 231: else
 23284                           ;app_gate.c: 232: {
 23285                           ;app_gate.c: 233: positionInMemory = currentPosition;
 23286  0053CC  C0E1  F10F         	movff	findEmptySpot@currentPosition,findEmptySpot@positionInMemory
 23287                           
 23288                           ;app_gate.c: 234: currentPosition = 16 * 10;
 23289  0053D0  0EA0               	movlw	160
 23290  0053D2  0100               	movlb	0	; () banked
 23291  0053D4  6FE1               	movwf	findEmptySpot@currentPosition& (0+255),b
 23292  0053D6                     l2815:
 23293                           
 23294                           ;app_gate.c: 235: }
 23295                           ;app_gate.c: 236: }
 23296                           ;app_gate.c: 237: return positionInMemory;
 23297                           
 23298                           ; BSR set to: 0
 23299  0053D6  0101               	movlb	1	; () banked
 23300  0053D8  510F               	movf	findEmptySpot@positionInMemory& (0+255),w,b
 23301  0053DA  0012               	return	
 23302  0053DC                     __end_of_findEmptySpot:
 23303                           	opt stack 0
 23304                           tosu	equ	0xFFF
 23305                           tosh	equ	0xFFE
 23306                           tosl	equ	0xFFD
 23307                           pclath	equ	0xFFA
 23308                           tblptru	equ	0xFF8
 23309                           tblptrh	equ	0xFF7
 23310                           tblptrl	equ	0xFF6
 23311                           tablat	equ	0xFF5
 23312                           prodh	equ	0xFF4
 23313                           prodl	equ	0xFF3
 23314                           intcon	equ	0xFF2
 23315                           intcon2	equ	0xFF1
 23316                           intcon3	equ	0xFF0
 23317                           indf0	equ	0xFEF
 23318                           postinc0	equ	0xFEE
 23319                           plusw0	equ	0xFEB
 23320                           fsr0h	equ	0xFEA
 23321                           fsr0l	equ	0xFE9
 23322                           wreg	equ	0xFE8
 23323                           indf1	equ	0xFE7
 23324                           postinc1	equ	0xFE6
 23325                           postdec1	equ	0xFE5
 23326                           fsr1h	equ	0xFE2
 23327                           fsr1l	equ	0xFE1
 23328                           indf2	equ	0xFDF
 23329                           postinc2	equ	0xFDE
 23330                           postdec2	equ	0xFDD
 23331                           plusw2	equ	0xFDB
 23332                           fsr2h	equ	0xFDA
 23333                           fsr2l	equ	0xFD9
 23334                           status	equ	0xFD8
 23335                           
 23336 ;; *************** function _isNumberValid *****************
 23337 ;; Defined at:
 23338 ;;		line 152 in file "../Source/c/04_App/app_gate.c"
 23339 ;; Parameters:    Size  Location     Type
 23340 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 23341 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), smsText(20), 
 23342 ;; Auto vars:     Size  Location     Type
 23343 ;;  i               1   33[BANK0 ] unsigned char 
 23344 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 23345 ;; Return value:  Size  Location     Type
 23346 ;;                  1    wreg      unsigned char 
 23347 ;; Registers used:
 23348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23349 ;; Tracked objects:
 23350 ;;		On entry : 0/0
 23351 ;;		On exit  : 0/0
 23352 ;;		Unchanged: 0/0
 23353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23357 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23358 ;;Total ram usage:        5 bytes
 23359 ;; Hardware stack levels used:    1
 23360 ;; Hardware stack levels required when called:   11
 23361 ;; This function calls:
 23362 ;;		Nothing
 23363 ;; This function is called by:
 23364 ;;		_parseCommand
 23365 ;;		_isNumberInMemory
 23366 ;;		_findEmptySpot
 23367 ;; This function uses a non-reentrant model
 23368 ;;
 23369                           
 23370                           	psect	text106
 23371  005510                     __ptext106:
 23372                           	opt stack 0
 23373  005510                     _isNumberValid:
 23374                           	opt stack 15
 23375                           
 23376                           ;app_gate.c: 154: bool isNumberOk = 0;
 23377                           
 23378                           ; BSR set to: 1
 23379                           ;incstack = 0
 23380  005510  0E00               	movlw	0
 23381  005512  0100               	movlb	0	; () banked
 23382  005514  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23383                           
 23384                           ;app_gate.c: 155: uint8_t i = 0;
 23385  005516  0E00               	movlw	0
 23386  005518  6F81               	movwf	isNumberValid@i& (0+255),b
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;app_gate.c: 156: if (phoneNumber[0] == '+')
 23390  00551A  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 23391  00551E  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 23392  005522  0E2B               	movlw	43
 23393  005524  18DE               	xorwf	postinc2,w,c
 23394  005526  A4D8               	btfss	status,2,c
 23395  005528  D024               	goto	u14130
 23396                           
 23397                           ; BSR set to: 0
 23398                           ;app_gate.c: 157: {
 23399                           ;app_gate.c: 158: for (i = 1; i < ((UINT8)(13)); i++)
 23400  00552A  0E01               	movlw	1
 23401  00552C  6F81               	movwf	isNumberValid@i& (0+255),b
 23402  00552E                     l14684:
 23403                           
 23404                           ; BSR set to: 0
 23405  00552E  0E0C               	movlw	12
 23406  005530  6581               	cpfsgt	isNumberValid@i& (0+255),b
 23407  005532  D001               	goto	l2792
 23408  005534  D01E               	goto	u14130
 23409  005536                     l2792:
 23410                           
 23411                           ; BSR set to: 0
 23412                           ;app_gate.c: 159: {
 23413                           ;app_gate.c: 160: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 23414                           
 23415                           ; BSR set to: 0
 23416  005536  5181               	movf	isNumberValid@i& (0+255),w,b
 23417  005538  0D01               	mullw	1
 23418  00553A  50F3               	movf	prodl,w,c
 23419  00553C  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23420  00553E  6ED9               	movwf	fsr2l,c
 23421  005540  50F4               	movf	prodh,w,c
 23422  005542  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23423  005544  6EDA               	movwf	fsr2h,c
 23424  005546  0E2F               	movlw	47
 23425  005548  64DF               	cpfsgt	indf2,c
 23426  00554A  D00E               	goto	l2794
 23427                           
 23428                           ; BSR set to: 0
 23429  00554C  5181               	movf	isNumberValid@i& (0+255),w,b
 23430  00554E  0D01               	mullw	1
 23431  005550  50F3               	movf	prodl,w,c
 23432  005552  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 23433  005554  6ED9               	movwf	fsr2l,c
 23434  005556  50F4               	movf	prodh,w,c
 23435  005558  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 23436  00555A  6EDA               	movwf	fsr2h,c
 23437  00555C  0E3A               	movlw	58
 23438  00555E  60DF               	cpfslt	indf2,c
 23439  005560  D003               	goto	l2794
 23440                           
 23441                           ; BSR set to: 0
 23442                           ;app_gate.c: 161: {
 23443                           ;app_gate.c: 162: isNumberOk = 1;
 23444  005562  0E01               	movlw	1
 23445  005564  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23446                           
 23447                           ;app_gate.c: 163: }
 23448  005566  D003               	goto	l2795
 23449  005568                     l2794:
 23450                           
 23451                           ; BSR set to: 0
 23452                           ;app_gate.c: 164: else
 23453                           ;app_gate.c: 165: {
 23454                           ;app_gate.c: 166: isNumberOk = 0;
 23455                           
 23456                           ; BSR set to: 0
 23457  005568  0E00               	movlw	0
 23458  00556A  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 23459                           
 23460                           ;app_gate.c: 167: break;
 23461  00556C  D002               	goto	u14130
 23462  00556E                     l2795:
 23463                           
 23464                           ; BSR set to: 0
 23465                           
 23466                           ; BSR set to: 0
 23467  00556E  2B81               	incf	isNumberValid@i& (0+255),f,b
 23468  005570  D7DE               	goto	l14684
 23469  005572                     u14130:
 23470                           
 23471                           ; BSR set to: 0
 23472                           ;app_gate.c: 168: }
 23473                           ;app_gate.c: 169: }
 23474                           ;app_gate.c: 170: }
 23475                           ;app_gate.c: 171: return isNumberOk;
 23476                           
 23477                           ; BSR set to: 0
 23478                           
 23479                           ; BSR set to: 0
 23480  005572  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 23481  005574  0012               	return	
 23482  005576                     __end_of_isNumberValid:
 23483                           	opt stack 0
 23484                           tosu	equ	0xFFF
 23485                           tosh	equ	0xFFE
 23486                           tosl	equ	0xFFD
 23487                           pclath	equ	0xFFA
 23488                           tblptru	equ	0xFF8
 23489                           tblptrh	equ	0xFF7
 23490                           tblptrl	equ	0xFF6
 23491                           tablat	equ	0xFF5
 23492                           prodh	equ	0xFF4
 23493                           prodl	equ	0xFF3
 23494                           intcon	equ	0xFF2
 23495                           intcon2	equ	0xFF1
 23496                           intcon3	equ	0xFF0
 23497                           indf0	equ	0xFEF
 23498                           postinc0	equ	0xFEE
 23499                           plusw0	equ	0xFEB
 23500                           fsr0h	equ	0xFEA
 23501                           fsr0l	equ	0xFE9
 23502                           wreg	equ	0xFE8
 23503                           indf1	equ	0xFE7
 23504                           postinc1	equ	0xFE6
 23505                           postdec1	equ	0xFE5
 23506                           fsr1h	equ	0xFE2
 23507                           fsr1l	equ	0xFE1
 23508                           indf2	equ	0xFDF
 23509                           postinc2	equ	0xFDE
 23510                           postdec2	equ	0xFDD
 23511                           plusw2	equ	0xFDB
 23512                           fsr2h	equ	0xFDA
 23513                           fsr2l	equ	0xFD9
 23514                           status	equ	0xFD8
 23515                           
 23516 ;; *************** function _Eeprom_Read *****************
 23517 ;; Defined at:
 23518 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 23519 ;; Parameters:    Size  Location     Type
 23520 ;;  MemoryAddres    1    wreg     unsigned char 
 23521 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 23522 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23523 ;;  DataLength      1   75[BANK0 ] unsigned char 
 23524 ;; Auto vars:     Size  Location     Type
 23525 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 23526 ;;  QuerySts        1   79[BANK0 ] enum E8932
 23527 ;;  ReadSts         1   78[BANK0 ] enum E8958
 23528 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 23529 ;; Return value:  Size  Location     Type
 23530 ;;                  1    wreg      enum E8958
 23531 ;; Registers used:
 23532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23533 ;; Tracked objects:
 23534 ;;		On entry : 0/0
 23535 ;;		On exit  : 0/0
 23536 ;;		Unchanged: 0/0
 23537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23538 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23539 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23541 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23542 ;;Total ram usage:        7 bytes
 23543 ;; Hardware stack levels used:    1
 23544 ;; Hardware stack levels required when called:   16
 23545 ;; This function calls:
 23546 ;;		_I2cSlv_QueryI2cData
 23547 ;; This function is called by:
 23548 ;;		_initEeprom
 23549 ;;		_isNumberInMemory
 23550 ;;		_findEmptySpot
 23551 ;; This function uses a non-reentrant model
 23552 ;;
 23553                           
 23554                           	psect	text107
 23555  0058F8                     __ptext107:
 23556                           	opt stack 0
 23557  0058F8                     _Eeprom_Read:
 23558                           	opt stack 10
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;incstack = 0
 23562                           ;Eeprom_Read@MemoryAddress stored from wreg
 23563  0058F8  0100               	movlb	0	; () banked
 23564  0058FA  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 23565                           
 23566                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 23567  0058FC  0E50               	movlw	80
 23568  0058FE  0100               	movlb	0	; () banked
 23569  005900  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 23570                           
 23571                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 23572  005902  0E00               	movlw	0
 23573  005904  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23574                           
 23575                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 23576  005906  0E02               	movlw	2
 23577  005908  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23578                           
 23579                           ; BSR set to: 0
 23580                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 23581  00590A  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 23585  00590E  0EFC               	movlw	low _ReadAddress
 23586  005910  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 23587  005912  0E01               	movlw	high _ReadAddress
 23588  005914  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 23589  005916  0E01               	movlw	1
 23590  005918  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 23591  00591A  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 23592  00591E  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 23593  005922  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 23594  005926  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 23595  00592A  EC1D  F01D         	call	_I2cSlv_QueryI2cData	;wreg free
 23596  00592E  0100               	movlb	0	; () banked
 23597  005930  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 23598                           
 23599                           ; BSR set to: 0
 23600                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 23601  005932  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 23602  005934  A4D8               	btfss	status,2,c
 23603  005936  D002               	goto	l2035
 23604                           
 23605                           ; BSR set to: 0
 23606                           ;eeprom_if.c: 114: {
 23607                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 23608  005938  0E00               	movlw	0
 23609  00593A  D005               	goto	L30
 23610  00593C                     l2035:
 23611                           
 23612                           ; BSR set to: 0
 23613                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 23614                           
 23615                           ; BSR set to: 0
 23616  00593C  0E02               	movlw	2
 23617  00593E  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 23618  005940  A4D8               	btfss	status,2,c
 23619  005942  D002               	goto	l2037
 23620                           
 23621                           ; BSR set to: 0
 23622                           ;eeprom_if.c: 118: {
 23623                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 23624  005944  0E01               	movlw	1
 23625  005946                     L30:
 23626  005946  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 23627  005948                     l2037:
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;eeprom_if.c: 120: }
 23631                           ;eeprom_if.c: 121: return ReadSts;
 23632                           
 23633                           ; BSR set to: 0
 23634  005948  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 23635  00594A  0012               	return	
 23636  00594C                     __end_of_Eeprom_Read:
 23637                           	opt stack 0
 23638                           tosu	equ	0xFFF
 23639                           tosh	equ	0xFFE
 23640                           tosl	equ	0xFFD
 23641                           pclath	equ	0xFFA
 23642                           tblptru	equ	0xFF8
 23643                           tblptrh	equ	0xFF7
 23644                           tblptrl	equ	0xFF6
 23645                           tablat	equ	0xFF5
 23646                           prodh	equ	0xFF4
 23647                           prodl	equ	0xFF3
 23648                           intcon	equ	0xFF2
 23649                           intcon2	equ	0xFF1
 23650                           intcon3	equ	0xFF0
 23651                           indf0	equ	0xFEF
 23652                           postinc0	equ	0xFEE
 23653                           plusw0	equ	0xFEB
 23654                           fsr0h	equ	0xFEA
 23655                           fsr0l	equ	0xFE9
 23656                           wreg	equ	0xFE8
 23657                           indf1	equ	0xFE7
 23658                           postinc1	equ	0xFE6
 23659                           postdec1	equ	0xFE5
 23660                           fsr1h	equ	0xFE2
 23661                           fsr1l	equ	0xFE1
 23662                           indf2	equ	0xFDF
 23663                           postinc2	equ	0xFDE
 23664                           postdec2	equ	0xFDD
 23665                           plusw2	equ	0xFDB
 23666                           fsr2h	equ	0xFDA
 23667                           fsr2l	equ	0xFD9
 23668                           status	equ	0xFD8
 23669                           
 23670 ;; *************** function _I2cSlv_QueryI2cData *****************
 23671 ;; Defined at:
 23672 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 23673 ;; Parameters:    Size  Location     Type
 23674 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 23675 ;;		 -> ReadAddress(1), 
 23676 ;;  TxLen           1   68[BANK0 ] unsigned char 
 23677 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 23678 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), 
 23679 ;;  RxLen           1   71[BANK0 ] unsigned char 
 23680 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 23681 ;; Auto vars:     Size  Location     Type
 23682 ;;		None
 23683 ;; Return value:  Size  Location     Type
 23684 ;;                  1    wreg      enum E8945
 23685 ;; Registers used:
 23686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23687 ;; Tracked objects:
 23688 ;;		On entry : 0/0
 23689 ;;		On exit  : 0/0
 23690 ;;		Unchanged: 0/0
 23691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23692 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23695 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23696 ;;Total ram usage:        7 bytes
 23697 ;; Hardware stack levels used:    1
 23698 ;; Hardware stack levels required when called:   15
 23699 ;; This function calls:
 23700 ;;		_I2cSlv_I2cReadMsgSts
 23701 ;;		_I2cSlv_ReceiveI2cMsg
 23702 ;;		_I2cSlv_SendI2cMsg
 23703 ;;		_OsTmr_GetTimerStatus
 23704 ;;		_OsTmr_StartTimer
 23705 ;;		_OsTmr_Wait
 23706 ;; This function is called by:
 23707 ;;		_Eeprom_Read
 23708 ;; This function uses a non-reentrant model
 23709 ;;
 23710                           
 23711                           	psect	text108
 23712  003A3A                     __ptext108:
 23713                           	opt stack 0
 23714  003A3A                     _I2cSlv_QueryI2cData:
 23715                           	opt stack 10
 23716                           
 23717                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 23718                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 23719                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 23720                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 23721                           ;i2c_slv.c: 388: switch(I2cOpState)
 23722                           
 23723                           ; BSR set to: 0
 23724                           ;incstack = 0
 23725  003A3A  D05B               	goto	l1440
 23726  003A3C                     
 23727                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 23728  003A3C  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 23729  003A40  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 23730  003A44  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 23731  003A48  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 23732  003A4C  EC19  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 23733                           
 23734                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 23735  003A50  0E01               	movlw	1
 23736  003A52  0101               	movlb	1	; () banked
 23737  003A54  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23738                           
 23739                           ; BSR set to: 1
 23740                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 23741  003A56  0E00               	movlw	0
 23742  003A58  D04A               	goto	L34
 23743  003A5A                     
 23744                           ; BSR set to: 1
 23745                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 23746                           
 23747                           ; BSR set to: 1
 23748  003A5A  0ECB               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 23749  003A5C  0100               	movlb	0	; () banked
 23750  003A5E  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 23751  003A60  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 23752  003A62  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 23753  003A64  0EF4               	movlw	244
 23754  003A66  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 23755  003A68  0E01               	movlw	1
 23756  003A6A  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 23757  003A6C  0E00               	movlw	0
 23758  003A6E  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 23759  003A70  0E00               	movlw	0
 23760  003A72  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 23761  003A74  EC63  F028         	call	_OsTmr_Wait	;wreg free
 23762  003A78  06E8               	decf	wreg,f,c
 23763  003A7A  A4D8               	btfss	status,2,c
 23764  003A7C  D036               	goto	l1448
 23765                           
 23766                           ;i2c_slv.c: 402: {
 23767                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 23768  003A7E  0E42               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23769  003A80  0100               	movlb	0	; () banked
 23770  003A82  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23771  003A84  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23772  003A86  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23773  003A88  0EC4               	movlw	196
 23774  003A8A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23775  003A8C  0E09               	movlw	9
 23776  003A8E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23777  003A90  0E00               	movlw	0
 23778  003A92  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23779  003A94  0E00               	movlw	0
 23780  003A96  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23781  003A98  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 23782                           
 23783                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 23784  003A9C  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 23785  003AA0  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 23786  003AA4  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 23787  003AA8  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 23788  003AAC  EC9A  F02F         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 23789                           
 23790                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 23791  003AB0  0E02               	movlw	2
 23792  003AB2  0101               	movlb	1	; () banked
 23793  003AB4  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23794  003AB6  D019               	goto	l1448
 23795  003AB8                     
 23796                           ; BSR set to: 1
 23797                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 23798                           
 23799                           ; BSR set to: 1
 23800  003AB8  ECD6  F032         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 23801  003ABC  06E8               	decf	wreg,f,c
 23802  003ABE  A4D8               	btfss	status,2,c
 23803  003AC0  D005               	goto	l1446
 23804                           
 23805                           ;i2c_slv.c: 414: {
 23806                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 23807  003AC2  0E00               	movlw	0
 23808  003AC4  0101               	movlb	1	; () banked
 23809  003AC6  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23810                           
 23811                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 23812  003AC8  0E01               	movlw	1
 23813  003ACA  D011               	goto	L34
 23814  003ACC                     l1446:
 23815                           
 23816                           ;i2c_slv.c: 420: else
 23817                           ;i2c_slv.c: 421: {
 23818                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 23819                           
 23820                           ; BSR set to: 1
 23821  003ACC  0E42               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 23822  003ACE  0100               	movlb	0	; () banked
 23823  003AD0  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23824  003AD2  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 23825  003AD4  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23826  003AD6  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 23827  003ADA  06E8               	decf	wreg,f,c
 23828  003ADC  A4D8               	btfss	status,2,c
 23829  003ADE  D005               	goto	l1448
 23830                           
 23831                           ;i2c_slv.c: 423: {
 23832                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 23833  003AE0  0E00               	movlw	0
 23834  003AE2  0101               	movlb	1	; () banked
 23835  003AE4  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 23836                           
 23837                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 23838  003AE6  0E02               	movlw	2
 23839  003AE8  D002               	goto	L34
 23840  003AEA                     l1448:
 23841                           
 23842                           ;i2c_slv.c: 429: else
 23843                           ;i2c_slv.c: 430: {
 23844                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 23845                           
 23846                           ; BSR set to: 1
 23847  003AEA  0E00               	movlw	0
 23848  003AEC  0101               	movlb	1	; () banked
 23849  003AEE                     L34:
 23850  003AEE  6FE4               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 23851                           
 23852                           ; BSR set to: 1
 23853                           ;i2c_slv.c: 439: }
 23854                           
 23855                           ; BSR set to: 1
 23856                           ;i2c_slv.c: 438: break;
 23857                           
 23858                           ;i2c_slv.c: 437: default:
 23859                           
 23860                           ; BSR set to: 1
 23861                           ;i2c_slv.c: 433: }
 23862                           ;i2c_slv.c: 434: }
 23863                           ;i2c_slv.c: 435: break;
 23864                           
 23865                           ; BSR set to: 1
 23866  003AF0  D00B               	goto	l1442
 23867  003AF2                     l1440:
 23868                           
 23869                           ; BSR set to: 1
 23870  003AF2  0101               	movlb	1	; () banked
 23871  003AF4  51E5               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 23872                           
 23873                           ; Switch size 1, requested type "space"
 23874                           ; Number of cases is 3, Range of values is 0 to 2
 23875                           ; switch strategies available:
 23876                           ; Name         Instructions Cycles
 23877                           ; simple_byte           10     6 (average)
 23878                           ;	Chosen strategy is simple_byte
 23879  003AF6  0A00               	xorlw	0	; case 0
 23880  003AF8  B4D8               	btfsc	status,2,c
 23881  003AFA  D7A0               	goto	l1441
 23882  003AFC  0A01               	xorlw	1	; case 1
 23883  003AFE  B4D8               	btfsc	status,2,c
 23884  003B00  D7AC               	goto	l1443
 23885  003B02  0A03               	xorlw	3	; case 2
 23886  003B04  B4D8               	btfsc	status,2,c
 23887  003B06  D7D8               	goto	l1445
 23888  003B08                     l1442:
 23889                           
 23890                           ; BSR set to: 1
 23891                           ;i2c_slv.c: 441: return Ret;
 23892                           
 23893                           ; BSR set to: 1
 23894  003B08  51E4               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 23895  003B0A  0012               	return	
 23896  003B0C                     __end_of_I2cSlv_QueryI2cData:
 23897                           	opt stack 0
 23898                           tosu	equ	0xFFF
 23899                           tosh	equ	0xFFE
 23900                           tosl	equ	0xFFD
 23901                           pclath	equ	0xFFA
 23902                           tblptru	equ	0xFF8
 23903                           tblptrh	equ	0xFF7
 23904                           tblptrl	equ	0xFF6
 23905                           tablat	equ	0xFF5
 23906                           prodh	equ	0xFF4
 23907                           prodl	equ	0xFF3
 23908                           intcon	equ	0xFF2
 23909                           intcon2	equ	0xFF1
 23910                           intcon3	equ	0xFF0
 23911                           indf0	equ	0xFEF
 23912                           postinc0	equ	0xFEE
 23913                           plusw0	equ	0xFEB
 23914                           fsr0h	equ	0xFEA
 23915                           fsr0l	equ	0xFE9
 23916                           wreg	equ	0xFE8
 23917                           indf1	equ	0xFE7
 23918                           postinc1	equ	0xFE6
 23919                           postdec1	equ	0xFE5
 23920                           fsr1h	equ	0xFE2
 23921                           fsr1l	equ	0xFE1
 23922                           indf2	equ	0xFDF
 23923                           postinc2	equ	0xFDE
 23924                           postdec2	equ	0xFDD
 23925                           plusw2	equ	0xFDB
 23926                           fsr2h	equ	0xFDA
 23927                           fsr2l	equ	0xFD9
 23928                           status	equ	0xFD8
 23929                           
 23930 ;; *************** function _OsTmr_Wait *****************
 23931 ;; Defined at:
 23932 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 23935 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 23936 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 23937 ;; Auto vars:     Size  Location     Type
 23938 ;;  Ret             1   65[BANK0 ] enum E7749
 23939 ;; Return value:  Size  Location     Type
 23940 ;;                  1    wreg      enum E7749
 23941 ;; Registers used:
 23942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23943 ;; Tracked objects:
 23944 ;;		On entry : 0/0
 23945 ;;		On exit  : 0/0
 23946 ;;		Unchanged: 0/0
 23947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23948 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23951 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23952 ;;Total ram usage:        7 bytes
 23953 ;; Hardware stack levels used:    1
 23954 ;; Hardware stack levels required when called:   14
 23955 ;; This function calls:
 23956 ;;		_OsTmr_GetTimerStatus
 23957 ;;		_OsTmr_StartTimer
 23958 ;; This function is called by:
 23959 ;;		_I2cSlv_QueryI2cData
 23960 ;;		_Terminal
 23961 ;; This function uses a non-reentrant model
 23962 ;;
 23963                           
 23964                           	psect	text109
 23965  0050C6                     __ptext109:
 23966                           	opt stack 0
 23967  0050C6                     _OsTmr_Wait:
 23968                           	opt stack 11
 23969                           
 23970                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 23971                           
 23972                           ; BSR set to: 1
 23973                           ;incstack = 0
 23974  0050C6  0E00               	movlw	0
 23975  0050C8  0100               	movlb	0	; () banked
 23976  0050CA  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 23977                           
 23978                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 23979  0050CC  D02D               	goto	l855
 23980  0050CE                     
 23981                           ; BSR set to: 0
 23982                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 23983                           
 23984                           ; BSR set to: 0
 23985  0050CE  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 23986  0050D2  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 23987  0050D6  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 23988  0050DA  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 23989  0050DE  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 23990  0050E2  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 23991  0050E6  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 23992                           
 23993                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 23994  0050EA  0100               	movlb	0	; () banked
 23995  0050EC  EE20 F00A          	lfsr	2,10
 23996  0050F0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 23997  0050F2  26D9               	addwf	fsr2l,f,c
 23998  0050F4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 23999  0050F6  22DA               	addwfc	fsr2h,f,c
 24000  0050F8  0E01               	movlw	1
 24001  0050FA  6EDF               	movwf	indf2,c
 24002                           
 24003                           ;os_timers.c: 165: break;
 24004  0050FC  D022               	goto	l857
 24005  0050FE                     
 24006                           ; BSR set to: 0
 24007                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 24008                           
 24009                           ; BSR set to: 0
 24010  0050FE  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 24011  005102  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 24012  005106  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 24013  00510A  06E8               	decf	wreg,f,c
 24014  00510C  A4D8               	btfss	status,2,c
 24015  00510E  D019               	goto	l857
 24016                           
 24017                           ;os_timers.c: 170: {
 24018                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 24019  005110  0100               	movlb	0	; () banked
 24020  005112  EE20 F00A          	lfsr	2,10
 24021  005116  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24022  005118  26D9               	addwf	fsr2l,f,c
 24023  00511A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24024  00511C  22DA               	addwfc	fsr2h,f,c
 24025  00511E  0E00               	movlw	0
 24026  005120  6EDF               	movwf	indf2,c
 24027                           
 24028                           ; BSR set to: 0
 24029                           ;os_timers.c: 174: Ret = DelayExpired;
 24030  005122  0E01               	movlw	1
 24031  005124  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 24032                           
 24033                           ; BSR set to: 0
 24034                           ;os_timers.c: 180: }
 24035                           
 24036                           ; BSR set to: 0
 24037                           ;os_timers.c: 179: break;
 24038                           
 24039                           ;os_timers.c: 178: default:
 24040                           
 24041                           ; BSR set to: 0
 24042                           ;os_timers.c: 175: }
 24043                           ;os_timers.c: 176: break;
 24044  005126  D00D               	goto	l857
 24045  005128                     l855:
 24046                           
 24047                           ; BSR set to: 0
 24048                           
 24049                           ; BSR set to: 0
 24050  005128  EE20 F00A          	lfsr	2,10
 24051  00512C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 24052  00512E  26D9               	addwf	fsr2l,f,c
 24053  005130  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 24054  005132  22DA               	addwfc	fsr2h,f,c
 24055  005134  50DF               	movf	indf2,w,c
 24056                           
 24057                           ; Switch size 1, requested type "space"
 24058                           ; Number of cases is 2, Range of values is 0 to 1
 24059                           ; switch strategies available:
 24060                           ; Name         Instructions Cycles
 24061                           ; simple_byte            7     4 (average)
 24062                           ;	Chosen strategy is simple_byte
 24063  005136  0A00               	xorlw	0	; case 0
 24064  005138  B4D8               	btfsc	status,2,c
 24065  00513A  D7C9               	goto	l856
 24066  00513C  0A01               	xorlw	1	; case 1
 24067  00513E  B4D8               	btfsc	status,2,c
 24068  005140  D7DE               	goto	l858
 24069  005142                     l857:
 24070                           
 24071                           ;os_timers.c: 182: return Ret;
 24072                           
 24073                           ; BSR set to: 0
 24074  005142  0100               	movlb	0	; () banked
 24075  005144  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 24076  005146  0012               	return	
 24077  005148                     __end_of_OsTmr_Wait:
 24078                           	opt stack 0
 24079                           tosu	equ	0xFFF
 24080                           tosh	equ	0xFFE
 24081                           tosl	equ	0xFFD
 24082                           pclath	equ	0xFFA
 24083                           tblptru	equ	0xFF8
 24084                           tblptrh	equ	0xFF7
 24085                           tblptrl	equ	0xFF6
 24086                           tablat	equ	0xFF5
 24087                           prodh	equ	0xFF4
 24088                           prodl	equ	0xFF3
 24089                           intcon	equ	0xFF2
 24090                           intcon2	equ	0xFF1
 24091                           intcon3	equ	0xFF0
 24092                           indf0	equ	0xFEF
 24093                           postinc0	equ	0xFEE
 24094                           plusw0	equ	0xFEB
 24095                           fsr0h	equ	0xFEA
 24096                           fsr0l	equ	0xFE9
 24097                           wreg	equ	0xFE8
 24098                           indf1	equ	0xFE7
 24099                           postinc1	equ	0xFE6
 24100                           postdec1	equ	0xFE5
 24101                           fsr1h	equ	0xFE2
 24102                           fsr1l	equ	0xFE1
 24103                           indf2	equ	0xFDF
 24104                           postinc2	equ	0xFDE
 24105                           postdec2	equ	0xFDD
 24106                           plusw2	equ	0xFDB
 24107                           fsr2h	equ	0xFDA
 24108                           fsr2l	equ	0xFD9
 24109                           status	equ	0xFD8
 24110                           
 24111 ;; *************** function _I2cSlv_SendI2cMsg *****************
 24112 ;; Defined at:
 24113 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24114 ;; Parameters:    Size  Location     Type
 24115 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 24116 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 24117 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 24118 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24119 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24120 ;; Auto vars:     Size  Location     Type
 24121 ;;  TxSts           1   36[BANK0 ] unsigned char 
 24122 ;; Return value:  Size  Location     Type
 24123 ;;                  1    wreg      unsigned char 
 24124 ;; Registers used:
 24125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24126 ;; Tracked objects:
 24127 ;;		On entry : 0/0
 24128 ;;		On exit  : 0/0
 24129 ;;		Unchanged: 0/0
 24130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24134 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24135 ;;Total ram usage:        5 bytes
 24136 ;; Hardware stack levels used:    1
 24137 ;; Hardware stack levels required when called:   12
 24138 ;; This function calls:
 24139 ;;		_GenerateEvt
 24140 ;; This function is called by:
 24141 ;;		_I2cSlv_QueryI2cData
 24142 ;;		_Eeprom_Write
 24143 ;;		_Terminal
 24144 ;;		_triggerRelay
 24145 ;; This function uses a non-reentrant model
 24146 ;;
 24147                           
 24148                           	psect	text110
 24149  006032                     __ptext110:
 24150                           	opt stack 0
 24151  006032                     _I2cSlv_SendI2cMsg:
 24152                           	opt stack 13
 24153                           
 24154                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 24155                           
 24156                           ; BSR set to: 0
 24157                           ;incstack = 0
 24158  006032  0E00               	movlw	0
 24159  006034  0100               	movlb	0	; () banked
 24160  006036  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24161                           
 24162                           ; BSR set to: 0
 24163                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 24164  006038  05CD               	decf	_I2cComSts& (0+255),w,b
 24165  00603A  B4D8               	btfsc	status,2,c
 24166  00603C  D015               	goto	l1412
 24167                           
 24168                           ; BSR set to: 0
 24169                           ;i2c_slv.c: 257: {
 24170                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 24171  00603E  C082  F39E         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 24172                           
 24173                           ; BSR set to: 0
 24174                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 24175  006042  0E00               	movlw	0
 24176  006044  0103               	movlb	3	; () banked
 24177  006046  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 24178                           
 24179                           ; BSR set to: 3
 24180                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 24181  006048  C083  F3A2         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 24182                           
 24183                           ; BSR set to: 3
 24184                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 24185  00604C  C080  F3A0         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 24186  006050  C081  F3A1         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 24187                           
 24188                           ; BSR set to: 3
 24189                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 24190  006054  0ED7               	movlw	low _I2cWriteDataEvt
 24191  006056  0100               	movlb	0	; () banked
 24192  006058  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24193  00605A  0E00               	movlw	high _I2cWriteDataEvt
 24194  00605C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24195  00605E  EC9D  F033         	call	_GenerateEvt	;wreg free
 24196                           
 24197                           ;i2c_slv.c: 267: TxSts = 1u;
 24198  006062  0E01               	movlw	1
 24199  006064  0100               	movlb	0	; () banked
 24200  006066  D001               	goto	L35
 24201  006068                     l1412:
 24202                           
 24203                           ; BSR set to: 0
 24204                           ;i2c_slv.c: 269: else
 24205                           ;i2c_slv.c: 270: {
 24206                           ;i2c_slv.c: 272: TxSts = 0u;
 24207                           
 24208                           ; BSR set to: 0
 24209  006068  0E00               	movlw	0
 24210  00606A                     L35:
 24211  00606A  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 24212                           
 24213                           ; BSR set to: 0
 24214                           ;i2c_slv.c: 273: }
 24215                           ;i2c_slv.c: 275: return TxSts;
 24216  00606C  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 24217  00606E  0012               	return	
 24218  006070                     __end_of_I2cSlv_SendI2cMsg:
 24219                           	opt stack 0
 24220                           tosu	equ	0xFFF
 24221                           tosh	equ	0xFFE
 24222                           tosl	equ	0xFFD
 24223                           pclath	equ	0xFFA
 24224                           tblptru	equ	0xFF8
 24225                           tblptrh	equ	0xFF7
 24226                           tblptrl	equ	0xFF6
 24227                           tablat	equ	0xFF5
 24228                           prodh	equ	0xFF4
 24229                           prodl	equ	0xFF3
 24230                           intcon	equ	0xFF2
 24231                           intcon2	equ	0xFF1
 24232                           intcon3	equ	0xFF0
 24233                           indf0	equ	0xFEF
 24234                           postinc0	equ	0xFEE
 24235                           plusw0	equ	0xFEB
 24236                           fsr0h	equ	0xFEA
 24237                           fsr0l	equ	0xFE9
 24238                           wreg	equ	0xFE8
 24239                           indf1	equ	0xFE7
 24240                           postinc1	equ	0xFE6
 24241                           postdec1	equ	0xFE5
 24242                           fsr1h	equ	0xFE2
 24243                           fsr1l	equ	0xFE1
 24244                           indf2	equ	0xFDF
 24245                           postinc2	equ	0xFDE
 24246                           postdec2	equ	0xFDD
 24247                           plusw2	equ	0xFDB
 24248                           fsr2h	equ	0xFDA
 24249                           fsr2l	equ	0xFD9
 24250                           status	equ	0xFD8
 24251                           
 24252 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 24253 ;; Defined at:
 24254 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24255 ;; Parameters:    Size  Location     Type
 24256 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 24257 ;;		 -> findEmptySpot@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(5), Terminal@TermRxBuffer(50), 
 24258 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 24259 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 24260 ;; Auto vars:     Size  Location     Type
 24261 ;;  RxSts           1   36[BANK0 ] unsigned char 
 24262 ;; Return value:  Size  Location     Type
 24263 ;;                  1    wreg      unsigned char 
 24264 ;; Registers used:
 24265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24266 ;; Tracked objects:
 24267 ;;		On entry : 0/0
 24268 ;;		On exit  : 0/0
 24269 ;;		Unchanged: 0/0
 24270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24274 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24275 ;;Total ram usage:        5 bytes
 24276 ;; Hardware stack levels used:    1
 24277 ;; Hardware stack levels required when called:   12
 24278 ;; This function calls:
 24279 ;;		_GenerateEvt
 24280 ;; This function is called by:
 24281 ;;		_I2cSlv_QueryI2cData
 24282 ;;		_Terminal
 24283 ;; This function uses a non-reentrant model
 24284 ;;
 24285                           
 24286                           	psect	text111
 24287  005F34                     __ptext111:
 24288                           	opt stack 0
 24289  005F34                     _I2cSlv_ReceiveI2cMsg:
 24290                           	opt stack 13
 24291                           
 24292                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 24293                           
 24294                           ; BSR set to: 0
 24295                           ;incstack = 0
 24296  005F34  0E00               	movlw	0
 24297  005F36  0100               	movlb	0	; () banked
 24298  005F38  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24299                           
 24300                           ; BSR set to: 0
 24301                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 24302  005F3A  0E02               	movlw	2
 24303  005F3C  19CD               	xorwf	_I2cComSts& (0+255),w,b
 24304  005F3E  B4D8               	btfsc	status,2,c
 24305  005F40  D016               	goto	l1417
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;i2c_slv.c: 294: {
 24309                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 24310  005F42  C082  F393         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 24311                           
 24312                           ; BSR set to: 0
 24313                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 24314  005F46  0E01               	movlw	1
 24315  005F48  0103               	movlb	3	; () banked
 24316  005F4A  6F94               	movwf	(_I2cRxPacket+1)& (0+255),b
 24317                           
 24318                           ; BSR set to: 3
 24319                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 24320  005F4C  C083  F397         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 24321                           
 24322                           ; BSR set to: 3
 24323                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 24324  005F50  C080  F395         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 24325  005F54  C081  F396         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 24326                           
 24327                           ; BSR set to: 3
 24328                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 24329  005F58  0ED6               	movlw	low _I2cReadDataEvt
 24330  005F5A  0100               	movlb	0	; () banked
 24331  005F5C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24332  005F5E  0E00               	movlw	high _I2cReadDataEvt
 24333  005F60  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24334  005F62  EC9D  F033         	call	_GenerateEvt	;wreg free
 24335                           
 24336                           ;i2c_slv.c: 304: RxSts = 1u;
 24337  005F66  0E01               	movlw	1
 24338  005F68  0100               	movlb	0	; () banked
 24339  005F6A  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24340                           
 24341                           ;i2c_slv.c: 305: }
 24342  005F6C  0012               	return	
 24343  005F6E                     l1417:
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;i2c_slv.c: 306: else
 24347                           ;i2c_slv.c: 307: {
 24348                           ;i2c_slv.c: 309: RxSts = 0u;
 24349                           
 24350                           ; BSR set to: 0
 24351  005F6E  0E00               	movlw	0
 24352  005F70  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 24353                           
 24354                           ; BSR set to: 0
 24355  005F72  0012               	return	
 24356  005F74                     __end_of_I2cSlv_ReceiveI2cMsg:
 24357                           	opt stack 0
 24358                           tosu	equ	0xFFF
 24359                           tosh	equ	0xFFE
 24360                           tosl	equ	0xFFD
 24361                           pclath	equ	0xFFA
 24362                           tblptru	equ	0xFF8
 24363                           tblptrh	equ	0xFF7
 24364                           tblptrl	equ	0xFF6
 24365                           tablat	equ	0xFF5
 24366                           prodh	equ	0xFF4
 24367                           prodl	equ	0xFF3
 24368                           intcon	equ	0xFF2
 24369                           intcon2	equ	0xFF1
 24370                           intcon3	equ	0xFF0
 24371                           indf0	equ	0xFEF
 24372                           postinc0	equ	0xFEE
 24373                           plusw0	equ	0xFEB
 24374                           fsr0h	equ	0xFEA
 24375                           fsr0l	equ	0xFE9
 24376                           wreg	equ	0xFE8
 24377                           indf1	equ	0xFE7
 24378                           postinc1	equ	0xFE6
 24379                           postdec1	equ	0xFE5
 24380                           fsr1h	equ	0xFE2
 24381                           fsr1l	equ	0xFE1
 24382                           indf2	equ	0xFDF
 24383                           postinc2	equ	0xFDE
 24384                           postdec2	equ	0xFDD
 24385                           plusw2	equ	0xFDB
 24386                           fsr2h	equ	0xFDA
 24387                           fsr2l	equ	0xFD9
 24388                           status	equ	0xFD8
 24389                           
 24390 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 24391 ;; Defined at:
 24392 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24393 ;; Parameters:    Size  Location     Type
 24394 ;;		None
 24395 ;; Auto vars:     Size  Location     Type
 24396 ;;  Result          1   33[BANK0 ] enum E8933
 24397 ;; Return value:  Size  Location     Type
 24398 ;;                  1    wreg      enum E8933
 24399 ;; Registers used:
 24400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24401 ;; Tracked objects:
 24402 ;;		On entry : 0/0
 24403 ;;		On exit  : 0/0
 24404 ;;		Unchanged: 0/0
 24405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24410 ;;Total ram usage:        1 bytes
 24411 ;; Hardware stack levels used:    1
 24412 ;; Hardware stack levels required when called:   12
 24413 ;; This function calls:
 24414 ;;		_ReceiveEvt
 24415 ;; This function is called by:
 24416 ;;		_I2cSlv_QueryI2cData
 24417 ;;		_Terminal
 24418 ;; This function uses a non-reentrant model
 24419 ;;
 24420                           
 24421                           	psect	text112
 24422  0065AC                     __ptext112:
 24423                           	opt stack 0
 24424  0065AC                     _I2cSlv_I2cReadMsgSts:
 24425                           	opt stack 13
 24426                           
 24427                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 24428                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;incstack = 0
 24432  0065AC  0E98               	movlw	low (_I2cRxPacket+5)
 24433  0065AE  0100               	movlb	0	; () banked
 24434  0065B0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24435  0065B2  0E03               	movlw	high (_I2cRxPacket+5)
 24436  0065B4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24437  0065B6  ECA8  F031         	call	_ReceiveEvt	;wreg free
 24438  0065BA  0900               	iorlw	0
 24439  0065BC  B4D8               	btfsc	status,2,c
 24440  0065BE  D002               	goto	l1422
 24441                           
 24442                           ;i2c_slv.c: 331: {
 24443                           ;i2c_slv.c: 332: Result = MessageReceived;
 24444  0065C0  0E01               	movlw	1
 24445  0065C2  D001               	goto	L36
 24446  0065C4                     l1422:
 24447                           
 24448                           ;i2c_slv.c: 334: else
 24449                           ;i2c_slv.c: 335: {
 24450                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 24451                           
 24452                           ; BSR set to: 0
 24453  0065C4  0E00               	movlw	0
 24454  0065C6                     L36:
 24455  0065C6  0100               	movlb	0	; () banked
 24456  0065C8  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 24457                           
 24458                           ; BSR set to: 0
 24459                           ;i2c_slv.c: 337: }
 24460                           ;i2c_slv.c: 339: return Result;
 24461  0065CA  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 24462  0065CC  0012               	return	
 24463  0065CE                     __end_of_I2cSlv_I2cReadMsgSts:
 24464                           	opt stack 0
 24465                           tosu	equ	0xFFF
 24466                           tosh	equ	0xFFE
 24467                           tosl	equ	0xFFD
 24468                           pclath	equ	0xFFA
 24469                           tblptru	equ	0xFF8
 24470                           tblptrh	equ	0xFF7
 24471                           tblptrl	equ	0xFF6
 24472                           tablat	equ	0xFF5
 24473                           prodh	equ	0xFF4
 24474                           prodl	equ	0xFF3
 24475                           intcon	equ	0xFF2
 24476                           intcon2	equ	0xFF1
 24477                           intcon3	equ	0xFF0
 24478                           indf0	equ	0xFEF
 24479                           postinc0	equ	0xFEE
 24480                           plusw0	equ	0xFEB
 24481                           fsr0h	equ	0xFEA
 24482                           fsr0l	equ	0xFE9
 24483                           wreg	equ	0xFE8
 24484                           indf1	equ	0xFE7
 24485                           postinc1	equ	0xFE6
 24486                           postdec1	equ	0xFE5
 24487                           fsr1h	equ	0xFE2
 24488                           fsr1l	equ	0xFE1
 24489                           indf2	equ	0xFDF
 24490                           postinc2	equ	0xFDE
 24491                           postdec2	equ	0xFDD
 24492                           plusw2	equ	0xFDB
 24493                           fsr2h	equ	0xFDA
 24494                           fsr2l	equ	0xFD9
 24495                           status	equ	0xFD8
 24496                           
 24497 ;; *************** function _Mdm_RequestSmsData *****************
 24498 ;; Defined at:
 24499 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24500 ;; Parameters:    Size  Location     Type
 24501 ;;		None
 24502 ;; Auto vars:     Size  Location     Type
 24503 ;;		None
 24504 ;; Return value:  Size  Location     Type
 24505 ;;                  1    wreg      void 
 24506 ;; Registers used:
 24507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24508 ;; Tracked objects:
 24509 ;;		On entry : 0/0
 24510 ;;		On exit  : 0/0
 24511 ;;		Unchanged: 0/0
 24512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24517 ;;Total ram usage:        0 bytes
 24518 ;; Hardware stack levels used:    1
 24519 ;; Hardware stack levels required when called:   12
 24520 ;; This function calls:
 24521 ;;		_GenerateEvt
 24522 ;; This function is called by:
 24523 ;;		_MyApp_Task
 24524 ;; This function uses a non-reentrant model
 24525 ;;
 24526                           
 24527                           	psect	text113
 24528  00682C                     __ptext113:
 24529                           	opt stack 0
 24530  00682C                     _Mdm_RequestSmsData:
 24531                           	opt stack 15
 24532                           
 24533                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 24534                           
 24535                           ; BSR set to: 0
 24536                           ;incstack = 0
 24537  00682C  0EDB               	movlw	low _GetSmsText
 24538  00682E  0100               	movlb	0	; () banked
 24539  006830  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24540  006832  0E00               	movlw	high _GetSmsText
 24541  006834  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24542  006836  EC9D  F033         	call	_GenerateEvt	;wreg free
 24543  00683A  0012               	return		;funcret
 24544  00683C                     __end_of_Mdm_RequestSmsData:
 24545                           	opt stack 0
 24546                           tosu	equ	0xFFF
 24547                           tosh	equ	0xFFE
 24548                           tosl	equ	0xFFD
 24549                           pclath	equ	0xFFA
 24550                           tblptru	equ	0xFF8
 24551                           tblptrh	equ	0xFF7
 24552                           tblptrl	equ	0xFF6
 24553                           tablat	equ	0xFF5
 24554                           prodh	equ	0xFF4
 24555                           prodl	equ	0xFF3
 24556                           intcon	equ	0xFF2
 24557                           intcon2	equ	0xFF1
 24558                           intcon3	equ	0xFF0
 24559                           indf0	equ	0xFEF
 24560                           postinc0	equ	0xFEE
 24561                           plusw0	equ	0xFEB
 24562                           fsr0h	equ	0xFEA
 24563                           fsr0l	equ	0xFE9
 24564                           wreg	equ	0xFE8
 24565                           indf1	equ	0xFE7
 24566                           postinc1	equ	0xFE6
 24567                           postdec1	equ	0xFE5
 24568                           fsr1h	equ	0xFE2
 24569                           fsr1l	equ	0xFE1
 24570                           indf2	equ	0xFDF
 24571                           postinc2	equ	0xFDE
 24572                           postdec2	equ	0xFDD
 24573                           plusw2	equ	0xFDB
 24574                           fsr2h	equ	0xFDA
 24575                           fsr2l	equ	0xFD9
 24576                           status	equ	0xFD8
 24577                           
 24578 ;; *************** function _Mdm_IsSmsReceived *****************
 24579 ;; Defined at:
 24580 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24581 ;; Parameters:    Size  Location     Type
 24582 ;;		None
 24583 ;; Auto vars:     Size  Location     Type
 24584 ;;  Ret             1   33[BANK0 ] enum E8928
 24585 ;; Return value:  Size  Location     Type
 24586 ;;                  1    wreg      enum E8928
 24587 ;; Registers used:
 24588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24589 ;; Tracked objects:
 24590 ;;		On entry : 0/0
 24591 ;;		On exit  : 0/0
 24592 ;;		Unchanged: 0/0
 24593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24597 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24598 ;;Total ram usage:        1 bytes
 24599 ;; Hardware stack levels used:    1
 24600 ;; Hardware stack levels required when called:   12
 24601 ;; This function calls:
 24602 ;;		_ReceiveEvt
 24603 ;; This function is called by:
 24604 ;;		_MyApp_Task
 24605 ;; This function uses a non-reentrant model
 24606 ;;
 24607                           
 24608                           	psect	text114
 24609  0064BA                     __ptext114:
 24610                           	opt stack 0
 24611  0064BA                     _Mdm_IsSmsReceived:
 24612                           	opt stack 15
 24613                           
 24614                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 24615                           
 24616                           ;incstack = 0
 24617  0064BA  0E00               	movlw	0
 24618  0064BC  0100               	movlb	0	; () banked
 24619  0064BE  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24620                           
 24621                           ; BSR set to: 0
 24622                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 24623  0064C0  0EDC               	movlw	low _SmsEvent
 24624  0064C2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24625  0064C4  0E00               	movlw	high _SmsEvent
 24626  0064C6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24627  0064C8  ECA8  F031         	call	_ReceiveEvt	;wreg free
 24628  0064CC  0900               	iorlw	0
 24629  0064CE  B4D8               	btfsc	status,2,c
 24630  0064D0  D003               	goto	l1136
 24631                           
 24632                           ;mdm_gsm_gprs.c: 947: {
 24633                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 24634  0064D2  0E01               	movlw	1
 24635  0064D4  0100               	movlb	0	; () banked
 24636  0064D6  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 24637  0064D8                     l1136:
 24638                           
 24639                           ;mdm_gsm_gprs.c: 949: }
 24640                           ;mdm_gsm_gprs.c: 951: return Ret;
 24641  0064D8  0100               	movlb	0	; () banked
 24642  0064DA  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 24643  0064DC  0012               	return	
 24644  0064DE                     __end_of_Mdm_IsSmsReceived:
 24645                           	opt stack 0
 24646                           tosu	equ	0xFFF
 24647                           tosh	equ	0xFFE
 24648                           tosl	equ	0xFFD
 24649                           pclath	equ	0xFFA
 24650                           tblptru	equ	0xFF8
 24651                           tblptrh	equ	0xFF7
 24652                           tblptrl	equ	0xFF6
 24653                           tablat	equ	0xFF5
 24654                           prodh	equ	0xFF4
 24655                           prodl	equ	0xFF3
 24656                           intcon	equ	0xFF2
 24657                           intcon2	equ	0xFF1
 24658                           intcon3	equ	0xFF0
 24659                           indf0	equ	0xFEF
 24660                           postinc0	equ	0xFEE
 24661                           plusw0	equ	0xFEB
 24662                           fsr0h	equ	0xFEA
 24663                           fsr0l	equ	0xFE9
 24664                           wreg	equ	0xFE8
 24665                           indf1	equ	0xFE7
 24666                           postinc1	equ	0xFE6
 24667                           postdec1	equ	0xFE5
 24668                           fsr1h	equ	0xFE2
 24669                           fsr1l	equ	0xFE1
 24670                           indf2	equ	0xFDF
 24671                           postinc2	equ	0xFDE
 24672                           postdec2	equ	0xFDD
 24673                           plusw2	equ	0xFDB
 24674                           fsr2h	equ	0xFDA
 24675                           fsr2l	equ	0xFD9
 24676                           status	equ	0xFD8
 24677                           
 24678 ;; *************** function _Mdm_GetSmsData *****************
 24679 ;; Defined at:
 24680 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24681 ;; Parameters:    Size  Location     Type
 24682 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 24683 ;;		 -> smsText(20), 
 24684 ;; Auto vars:     Size  Location     Type
 24685 ;;  GetSmsStatus    1   49[BANK0 ] enum E8920
 24686 ;; Return value:  Size  Location     Type
 24687 ;;                  1    wreg      enum E8920
 24688 ;; Registers used:
 24689 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24690 ;; Tracked objects:
 24691 ;;		On entry : 0/0
 24692 ;;		On exit  : 0/0
 24693 ;;		Unchanged: 0/0
 24694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24698 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24699 ;;Total ram usage:        3 bytes
 24700 ;; Hardware stack levels used:    1
 24701 ;; Hardware stack levels required when called:   12
 24702 ;; This function calls:
 24703 ;;		_ReceiveEvt
 24704 ;;		_StringCopy
 24705 ;; This function is called by:
 24706 ;;		_MyApp_Task
 24707 ;; This function uses a non-reentrant model
 24708 ;;
 24709                           
 24710                           	psect	text115
 24711  0053DC                     __ptext115:
 24712                           	opt stack 0
 24713  0053DC                     _Mdm_GetSmsData:
 24714                           	opt stack 15
 24715                           
 24716                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;incstack = 0
 24720  0053DC  0E00               	movlw	0
 24721  0053DE  0100               	movlb	0	; () banked
 24722  0053E0  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24723                           
 24724                           ; BSR set to: 0
 24725                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 24726  0053E2  0EDA               	movlw	low _SmsTxtReady
 24727  0053E4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24728  0053E6  0E00               	movlw	high _SmsTxtReady
 24729  0053E8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24730  0053EA  ECA8  F031         	call	_ReceiveEvt	;wreg free
 24731  0053EE  0900               	iorlw	0
 24732  0053F0  B4D8               	btfsc	status,2,c
 24733  0053F2  D025               	goto	l1129
 24734                           
 24735                           ;mdm_gsm_gprs.c: 898: {
 24736                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 24737  0053F4  0E50               	movlw	low (_Mdm_SmsRx+80)
 24738  0053F6  0100               	movlb	0	; () banked
 24739  0053F8  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 24740  0053FA  0E07               	movlw	high (_Mdm_SmsRx+80)
 24741  0053FC  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24742  0053FE  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 24743  005402  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 24744  005406  0E01               	movlw	1
 24745  005408  0107               	movlb	7	; () banked
 24746  00540A  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 24747  00540C  0100               	movlb	0	; () banked
 24748  00540E  6F89               	movwf	StringCopy@Len& (0+255),b
 24749  005410  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24750  005412  0E00               	movlw	0
 24751  005414  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 24752  005416  ECBB  F02A         	call	_StringCopy	;wreg free
 24753                           
 24754                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 24755  00541A  0E15               	movlw	low (_Mdm_SmsRx+21)
 24756  00541C  0100               	movlb	0	; () banked
 24757  00541E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 24758  005420  0E07               	movlw	high (_Mdm_SmsRx+21)
 24759  005422  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24760  005424  0E35               	movlw	low _callerNumber
 24761  005426  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24762  005428  0E03               	movlw	high _callerNumber
 24763  00542A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24764  00542C  0E00               	movlw	0
 24765  00542E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 24766  005430  0E0D               	movlw	13
 24767  005432  6F89               	movwf	StringCopy@Len& (0+255),b
 24768  005434  ECBB  F02A         	call	_StringCopy	;wreg free
 24769                           
 24770                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 24771  005438  0E01               	movlw	1
 24772  00543A  0100               	movlb	0	; () banked
 24773  00543C  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 24774  00543E                     l1129:
 24775                           
 24776                           ;mdm_gsm_gprs.c: 904: }
 24777                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 24778                           
 24779                           ; BSR set to: 0
 24780  00543E  0100               	movlb	0	; () banked
 24781  005440  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 24782  005442  0012               	return	
 24783  005444                     __end_of_Mdm_GetSmsData:
 24784                           	opt stack 0
 24785                           tosu	equ	0xFFF
 24786                           tosh	equ	0xFFE
 24787                           tosl	equ	0xFFD
 24788                           pclath	equ	0xFFA
 24789                           tblptru	equ	0xFF8
 24790                           tblptrh	equ	0xFF7
 24791                           tblptrl	equ	0xFF6
 24792                           tablat	equ	0xFF5
 24793                           prodh	equ	0xFF4
 24794                           prodl	equ	0xFF3
 24795                           intcon	equ	0xFF2
 24796                           intcon2	equ	0xFF1
 24797                           intcon3	equ	0xFF0
 24798                           indf0	equ	0xFEF
 24799                           postinc0	equ	0xFEE
 24800                           plusw0	equ	0xFEB
 24801                           fsr0h	equ	0xFEA
 24802                           fsr0l	equ	0xFE9
 24803                           wreg	equ	0xFE8
 24804                           indf1	equ	0xFE7
 24805                           postinc1	equ	0xFE6
 24806                           postdec1	equ	0xFE5
 24807                           fsr1h	equ	0xFE2
 24808                           fsr1l	equ	0xFE1
 24809                           indf2	equ	0xFDF
 24810                           postinc2	equ	0xFDE
 24811                           postdec2	equ	0xFDD
 24812                           plusw2	equ	0xFDB
 24813                           fsr2h	equ	0xFDA
 24814                           fsr2l	equ	0xFD9
 24815                           status	equ	0xFD8
 24816                           
 24817 ;; *************** function _Led_SetLedBlinkTime *****************
 24818 ;; Defined at:
 24819 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 24820 ;; Parameters:    Size  Location     Type
 24821 ;;  Led             1    wreg     unsigned char 
 24822 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 24823 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 24824 ;; Auto vars:     Size  Location     Type
 24825 ;;  Led             1   33[BANK0 ] unsigned char 
 24826 ;; Return value:  Size  Location     Type
 24827 ;;                  1    wreg      void 
 24828 ;; Registers used:
 24829 ;;		wreg, status,2, status,0
 24830 ;; Tracked objects:
 24831 ;;		On entry : 0/0
 24832 ;;		On exit  : 0/0
 24833 ;;		Unchanged: 0/0
 24834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24835 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24838 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24839 ;;Total ram usage:        5 bytes
 24840 ;; Hardware stack levels used:    1
 24841 ;; Hardware stack levels required when called:   11
 24842 ;; This function calls:
 24843 ;;		Nothing
 24844 ;; This function is called by:
 24845 ;;		_MyApp_Task
 24846 ;; This function uses a non-reentrant model
 24847 ;;
 24848                           
 24849                           	psect	text116
 24850  00594C                     __ptext116:
 24851                           	opt stack 0
 24852  00594C                     _Led_SetLedBlinkTime:
 24853                           	opt stack 16
 24854                           
 24855                           ; BSR set to: 0
 24856                           ;incstack = 0
 24857                           ;Led_SetLedBlinkTime@Led stored from wreg
 24858  00594C  0100               	movlb	0	; () banked
 24859  00594E  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 24860                           
 24861                           ;led.c: 374: switch (Led)
 24862  005950  D01B               	goto	l2142
 24863  005952                     l2143:
 24864                           
 24865                           ; BSR set to: 0
 24866                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 24867  005952  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 24868  005956  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 24869                           
 24870                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 24871  00595A  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 24872  00595E  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 24873                           
 24874                           ;led.c: 379: break;
 24875  005962  0012               	return	
 24876  005964                     l2145:
 24877                           
 24878                           ; BSR set to: 0
 24879                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 24880  005964  C07D  F364         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24881  005968  C07E  F365         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24882                           
 24883                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 24884  00596C  C07F  F366         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24885  005970  C080  F367         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24886                           
 24887                           ;led.c: 384: break;
 24888  005974  0012               	return	
 24889  005976                     l2146:
 24890                           
 24891                           ; BSR set to: 0
 24892                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 24893  005976  C07D  F364         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 24894  00597A  C07E  F365         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 24895                           
 24896                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 24897  00597E  C07F  F366         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 24898  005982  C080  F367         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 24899                           
 24900                           ; BSR set to: 0
 24901                           ;led.c: 393: }
 24902                           
 24903                           ; BSR set to: 0
 24904                           ;led.c: 392: break;
 24905                           
 24906                           ;led.c: 391: default:
 24907                           
 24908                           ;led.c: 389: break;
 24909  005986  0012               	return	
 24910  005988                     l2142:
 24911                           
 24912                           ; BSR set to: 0
 24913  005988  0100               	movlb	0	; () banked
 24914  00598A  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 24915                           
 24916                           ; Switch size 1, requested type "space"
 24917                           ; Number of cases is 3, Range of values is 1 to 3
 24918                           ; switch strategies available:
 24919                           ; Name         Instructions Cycles
 24920                           ; simple_byte           10     6 (average)
 24921                           ;	Chosen strategy is simple_byte
 24922  00598C  0A01               	xorlw	1	; case 1
 24923  00598E  B4D8               	btfsc	status,2,c
 24924  005990  D7E0               	goto	l2143
 24925  005992  0A03               	xorlw	3	; case 2
 24926  005994  B4D8               	btfsc	status,2,c
 24927  005996  D7E6               	goto	l2145
 24928  005998  0A01               	xorlw	1	; case 3
 24929  00599A  A4D8               	btfss	status,2,c
 24930  00599C  0012               	return	
 24931  00599E  D7EB               	goto	l2146
 24932  0059A0                     __end_of_Led_SetLedBlinkTime:
 24933                           	opt stack 0
 24934                           tosu	equ	0xFFF
 24935                           tosh	equ	0xFFE
 24936                           tosl	equ	0xFFD
 24937                           pclath	equ	0xFFA
 24938                           tblptru	equ	0xFF8
 24939                           tblptrh	equ	0xFF7
 24940                           tblptrl	equ	0xFF6
 24941                           tablat	equ	0xFF5
 24942                           prodh	equ	0xFF4
 24943                           prodl	equ	0xFF3
 24944                           intcon	equ	0xFF2
 24945                           intcon2	equ	0xFF1
 24946                           intcon3	equ	0xFF0
 24947                           indf0	equ	0xFEF
 24948                           postinc0	equ	0xFEE
 24949                           plusw0	equ	0xFEB
 24950                           fsr0h	equ	0xFEA
 24951                           fsr0l	equ	0xFE9
 24952                           wreg	equ	0xFE8
 24953                           indf1	equ	0xFE7
 24954                           postinc1	equ	0xFE6
 24955                           postdec1	equ	0xFE5
 24956                           fsr1h	equ	0xFE2
 24957                           fsr1l	equ	0xFE1
 24958                           indf2	equ	0xFDF
 24959                           postinc2	equ	0xFDE
 24960                           postdec2	equ	0xFDD
 24961                           plusw2	equ	0xFDB
 24962                           fsr2h	equ	0xFDA
 24963                           fsr2l	equ	0xFD9
 24964                           status	equ	0xFD8
 24965                           
 24966 ;; *************** function _GetLastInteractionNumber *****************
 24967 ;; Defined at:
 24968 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24969 ;; Parameters:    Size  Location     Type
 24970 ;;		None
 24971 ;; Auto vars:     Size  Location     Type
 24972 ;;		None
 24973 ;; Return value:  Size  Location     Type
 24974 ;;                  2   29[BANK0 ] PTR unsigned char 
 24975 ;; Registers used:
 24976 ;;		wreg, status,2, status,0
 24977 ;; Tracked objects:
 24978 ;;		On entry : 0/0
 24979 ;;		On exit  : 0/0
 24980 ;;		Unchanged: 0/0
 24981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24986 ;;Total ram usage:        2 bytes
 24987 ;; Hardware stack levels used:    1
 24988 ;; Hardware stack levels required when called:   11
 24989 ;; This function calls:
 24990 ;;		Nothing
 24991 ;; This function is called by:
 24992 ;;		_MyApp_Task
 24993 ;; This function uses a non-reentrant model
 24994 ;;
 24995                           
 24996                           	psect	text117
 24997  006884                     __ptext117:
 24998                           	opt stack 0
 24999  006884                     _GetLastInteractionNumber:
 25000                           	opt stack 16
 25001                           
 25002                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 25003                           
 25004                           ; BSR set to: 0
 25005                           ;incstack = 0
 25006  006884  0E35               	movlw	low _callerNumber
 25007  006886  0100               	movlb	0	; () banked
 25008  006888  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 25009  00688A  0E03               	movlw	high _callerNumber
 25010  00688C  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 25011  00688E  0012               	return	
 25012  006890                     __end_of_GetLastInteractionNumber:
 25013                           	opt stack 0
 25014                           tosu	equ	0xFFF
 25015                           tosh	equ	0xFFE
 25016                           tosl	equ	0xFFD
 25017                           pclath	equ	0xFFA
 25018                           tblptru	equ	0xFF8
 25019                           tblptrh	equ	0xFF7
 25020                           tblptrl	equ	0xFF6
 25021                           tablat	equ	0xFF5
 25022                           prodh	equ	0xFF4
 25023                           prodl	equ	0xFF3
 25024                           intcon	equ	0xFF2
 25025                           intcon2	equ	0xFF1
 25026                           intcon3	equ	0xFF0
 25027                           indf0	equ	0xFEF
 25028                           postinc0	equ	0xFEE
 25029                           plusw0	equ	0xFEB
 25030                           fsr0h	equ	0xFEA
 25031                           fsr0l	equ	0xFE9
 25032                           wreg	equ	0xFE8
 25033                           indf1	equ	0xFE7
 25034                           postinc1	equ	0xFE6
 25035                           postdec1	equ	0xFE5
 25036                           fsr1h	equ	0xFE2
 25037                           fsr1l	equ	0xFE1
 25038                           indf2	equ	0xFDF
 25039                           postinc2	equ	0xFDE
 25040                           postdec2	equ	0xFDD
 25041                           plusw2	equ	0xFDB
 25042                           fsr2h	equ	0xFDA
 25043                           fsr2l	equ	0xFD9
 25044                           status	equ	0xFD8
 25045                           
 25046 ;; *************** function _GetCallerNumber *****************
 25047 ;; Defined at:
 25048 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25049 ;; Parameters:    Size  Location     Type
 25050 ;;		None
 25051 ;; Auto vars:     Size  Location     Type
 25052 ;;		None
 25053 ;; Return value:  Size  Location     Type
 25054 ;;                  2   35[BANK0 ] PTR unsigned char 
 25055 ;; Registers used:
 25056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25057 ;; Tracked objects:
 25058 ;;		On entry : 0/0
 25059 ;;		On exit  : 0/0
 25060 ;;		Unchanged: 0/0
 25061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25066 ;;Total ram usage:        2 bytes
 25067 ;; Hardware stack levels used:    1
 25068 ;; Hardware stack levels required when called:   12
 25069 ;; This function calls:
 25070 ;;		_ClearBuffer
 25071 ;;		_ReceiveEvt
 25072 ;; This function is called by:
 25073 ;;		_MyApp_Task
 25074 ;; This function uses a non-reentrant model
 25075 ;;
 25076                           
 25077                           	psect	text118
 25078  00615E                     __ptext118:
 25079                           	opt stack 0
 25080  00615E                     _GetCallerNumber:
 25081                           	opt stack 15
 25082                           
 25083                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 25084                           
 25085                           ; BSR set to: 0
 25086                           ;incstack = 0
 25087  00615E  0EDD               	movlw	low _ClipEvent
 25088  006160  0100               	movlb	0	; () banked
 25089  006162  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25090  006164  0E00               	movlw	high _ClipEvent
 25091  006166  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25092  006168  ECA8  F031         	call	_ReceiveEvt	;wreg free
 25093  00616C  0900               	iorlw	0
 25094  00616E  A4D8               	btfss	status,2,c
 25095  006170  D00B               	goto	l1156
 25096                           
 25097                           ;mdm_gsm_gprs.c: 1040: {
 25098                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 25099  006172  0E35               	movlw	low _callerNumber
 25100  006174  0100               	movlb	0	; () banked
 25101  006176  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25102  006178  0E03               	movlw	high _callerNumber
 25103  00617A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25104  00617C  0E00               	movlw	0
 25105  00617E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25106  006180  0E0D               	movlw	13
 25107  006182  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25108  006184  ECCA  F030         	call	_ClearBuffer	;wreg free
 25109  006188                     l1156:
 25110                           
 25111                           ;mdm_gsm_gprs.c: 1042: }
 25112                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 25113  006188  0E35               	movlw	low _callerNumber
 25114  00618A  0100               	movlb	0	; () banked
 25115  00618C  6F83               	movwf	?_GetCallerNumber& (0+255),b
 25116  00618E  0E03               	movlw	high _callerNumber
 25117  006190  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 25118  006192  0012               	return	
 25119  006194                     __end_of_GetCallerNumber:
 25120                           	opt stack 0
 25121                           tosu	equ	0xFFF
 25122                           tosh	equ	0xFFE
 25123                           tosl	equ	0xFFD
 25124                           pclath	equ	0xFFA
 25125                           tblptru	equ	0xFF8
 25126                           tblptrh	equ	0xFF7
 25127                           tblptrl	equ	0xFF6
 25128                           tablat	equ	0xFF5
 25129                           prodh	equ	0xFF4
 25130                           prodl	equ	0xFF3
 25131                           intcon	equ	0xFF2
 25132                           intcon2	equ	0xFF1
 25133                           intcon3	equ	0xFF0
 25134                           indf0	equ	0xFEF
 25135                           postinc0	equ	0xFEE
 25136                           plusw0	equ	0xFEB
 25137                           fsr0h	equ	0xFEA
 25138                           fsr0l	equ	0xFE9
 25139                           wreg	equ	0xFE8
 25140                           indf1	equ	0xFE7
 25141                           postinc1	equ	0xFE6
 25142                           postdec1	equ	0xFE5
 25143                           fsr1h	equ	0xFE2
 25144                           fsr1l	equ	0xFE1
 25145                           indf2	equ	0xFDF
 25146                           postinc2	equ	0xFDE
 25147                           postdec2	equ	0xFDD
 25148                           plusw2	equ	0xFDB
 25149                           fsr2h	equ	0xFDA
 25150                           fsr2l	equ	0xFD9
 25151                           status	equ	0xFD8
 25152                           
 25153 ;; *************** function _UartSetConfig *****************
 25154 ;; Defined at:
 25155 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25156 ;; Parameters:    Size  Location     Type
 25157 ;;		None
 25158 ;; Auto vars:     Size  Location     Type
 25159 ;;		None
 25160 ;; Return value:  Size  Location     Type
 25161 ;;                  1    wreg      void 
 25162 ;; Registers used:
 25163 ;;		wreg, status,2
 25164 ;; Tracked objects:
 25165 ;;		On entry : 0/0
 25166 ;;		On exit  : 0/0
 25167 ;;		Unchanged: 0/0
 25168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25173 ;;Total ram usage:        0 bytes
 25174 ;; Hardware stack levels used:    1
 25175 ;; Hardware stack levels required when called:   11
 25176 ;; This function calls:
 25177 ;;		Nothing
 25178 ;; This function is called by:
 25179 ;;		_Mdm_MainTask
 25180 ;; This function uses a non-reentrant model
 25181 ;;
 25182                           
 25183                           	psect	text119
 25184  0056F0                     __ptext119:
 25185                           	opt stack 0
 25186  0056F0                     _UartSetConfig:
 25187                           	opt stack 16
 25188                           
 25189                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 25190                           
 25191                           ; BSR set to: 0
 25192                           ;incstack = 0
 25193  0056F0  0E01               	movlw	1
 25194  0056F2  0103               	movlb	3	; () banked
 25195  0056F4  6F20               	movwf	_UartConfig& (0+255),b
 25196                           
 25197                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 25198  0056F6  0E00               	movlw	0
 25199  0056F8  6F21               	movwf	(_UartConfig+1)& (0+255),b
 25200                           
 25201                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 25202  0056FA  0E00               	movlw	0
 25203  0056FC  6F22               	movwf	(_UartConfig+2)& (0+255),b
 25204                           
 25205                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 25206  0056FE  0E00               	movlw	0
 25207  005700  6F23               	movwf	(_UartConfig+3)& (0+255),b
 25208                           
 25209                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 25210  005702  0E00               	movlw	0
 25211  005704  6F24               	movwf	(_UartConfig+4)& (0+255),b
 25212                           
 25213                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 25214  005706  0E00               	movlw	0
 25215  005708  6F25               	movwf	(_UartConfig+5)& (0+255),b
 25216                           
 25217                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 25218  00570A  0E01               	movlw	1
 25219  00570C  6F26               	movwf	(_UartConfig+6)& (0+255),b
 25220                           
 25221                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 25222  00570E  0E01               	movlw	1
 25223  005710  6F27               	movwf	(_UartConfig+7)& (0+255),b
 25224                           
 25225                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 25226  005712  0E00               	movlw	0
 25227  005714  6F28               	movwf	(_UartConfig+8)& (0+255),b
 25228                           
 25229                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 25230  005716  0E00               	movlw	0
 25231  005718  6F29               	movwf	(_UartConfig+9)& (0+255),b
 25232                           
 25233                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 25234  00571A  0E00               	movlw	0
 25235  00571C  6F2A               	movwf	(_UartConfig+10)& (0+255),b
 25236                           
 25237                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25238  00571E  0E00               	movlw	0
 25239  005720  6F2B               	movwf	(_UartConfig+11)& (0+255),b
 25240                           
 25241                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25242  005722  0E01               	movlw	1
 25243  005724  6F2C               	movwf	(_UartConfig+12)& (0+255),b
 25244                           
 25245                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 25246  005726  0E00               	movlw	0
 25247  005728  6F2D               	movwf	(_UartConfig+13)& (0+255),b
 25248  00572A  0E6C               	movlw	108
 25249  00572C  6F2E               	movwf	(_UartConfig+14)& (0+255),b
 25250  00572E  0EDC               	movlw	220
 25251  005730  6F2F               	movwf	(_UartConfig+15)& (0+255),b
 25252  005732  0E02               	movlw	2
 25253  005734  6F30               	movwf	(_UartConfig+16)& (0+255),b
 25254                           
 25255                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25256  005736  0E80               	movlw	128
 25257  005738  6F31               	movwf	(_UartConfig+17)& (0+255),b
 25258  00573A  0E25               	movlw	37
 25259  00573C  6F32               	movwf	(_UartConfig+18)& (0+255),b
 25260  00573E  0E00               	movlw	0
 25261  005740  6F33               	movwf	(_UartConfig+19)& (0+255),b
 25262  005742  0E00               	movlw	0
 25263  005744  6F34               	movwf	(_UartConfig+20)& (0+255),b
 25264                           
 25265                           ; BSR set to: 3
 25266  005746  0012               	return		;funcret
 25267  005748                     __end_of_UartSetConfig:
 25268                           	opt stack 0
 25269                           tosu	equ	0xFFF
 25270                           tosh	equ	0xFFE
 25271                           tosl	equ	0xFFD
 25272                           pclath	equ	0xFFA
 25273                           tblptru	equ	0xFF8
 25274                           tblptrh	equ	0xFF7
 25275                           tblptrl	equ	0xFF6
 25276                           tablat	equ	0xFF5
 25277                           prodh	equ	0xFF4
 25278                           prodl	equ	0xFF3
 25279                           intcon	equ	0xFF2
 25280                           intcon2	equ	0xFF1
 25281                           intcon3	equ	0xFF0
 25282                           indf0	equ	0xFEF
 25283                           postinc0	equ	0xFEE
 25284                           plusw0	equ	0xFEB
 25285                           fsr0h	equ	0xFEA
 25286                           fsr0l	equ	0xFE9
 25287                           wreg	equ	0xFE8
 25288                           indf1	equ	0xFE7
 25289                           postinc1	equ	0xFE6
 25290                           postdec1	equ	0xFE5
 25291                           fsr1h	equ	0xFE2
 25292                           fsr1l	equ	0xFE1
 25293                           indf2	equ	0xFDF
 25294                           postinc2	equ	0xFDE
 25295                           postdec2	equ	0xFDD
 25296                           plusw2	equ	0xFDB
 25297                           fsr2h	equ	0xFDA
 25298                           fsr2l	equ	0xFD9
 25299                           status	equ	0xFD8
 25300                           
 25301 ;; *************** function _TurnOnModem *****************
 25302 ;; Defined at:
 25303 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25304 ;; Parameters:    Size  Location     Type
 25305 ;;		None
 25306 ;; Auto vars:     Size  Location     Type
 25307 ;;		None
 25308 ;; Return value:  Size  Location     Type
 25309 ;;                  1    wreg      void 
 25310 ;; Registers used:
 25311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25312 ;; Tracked objects:
 25313 ;;		On entry : 0/0
 25314 ;;		On exit  : 0/0
 25315 ;;		Unchanged: 0/0
 25316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25321 ;;Total ram usage:        0 bytes
 25322 ;; Hardware stack levels used:    1
 25323 ;; Hardware stack levels required when called:   12
 25324 ;; This function calls:
 25325 ;;		_GenerateEvt
 25326 ;; This function is called by:
 25327 ;;		_Mdm_MainTask
 25328 ;; This function uses a non-reentrant model
 25329 ;;
 25330                           
 25331                           	psect	text120
 25332  005CBE                     __ptext120:
 25333                           	opt stack 0
 25334  005CBE                     _TurnOnModem:
 25335                           	opt stack 15
 25336                           
 25337                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 25338                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 25339                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 25340                           
 25341                           ; BSR set to: 3
 25342                           ;incstack = 0
 25343  005CBE  D01B               	goto	l1009
 25344  005CC0                     
 25345                           ;mdm_gsm_gprs.c: 385: Counter++;
 25346  005CC0  0102               	movlb	2	; () banked
 25347  005CC2  4BD8               	infsnz	TurnOnModem@Counter& (0+255),f,b
 25348  005CC4  2BD9               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 25349                           
 25350                           ; BSR set to: 2
 25351                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 25352  005CC6  0EB8               	movlw	184
 25353  005CC8  5DD8               	subwf	TurnOnModem@Counter& (0+255),w,b
 25354  005CCA  0E0B               	movlw	11
 25355  005CCC  59D9               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 25356  005CCE  A0D8               	btfss	status,0,c
 25357  005CD0  0012               	return	
 25358                           
 25359                           ; BSR set to: 2
 25360                           ;mdm_gsm_gprs.c: 388: {
 25361                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 25362  005CD2  0E01               	movlw	1
 25363  005CD4  0101               	movlb	1	; () banked
 25364  005CD6  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25365                           
 25366                           ; BSR set to: 1
 25367                           ;mdm_gsm_gprs.c: 391: }
 25368                           ;mdm_gsm_gprs.c: 392: break;
 25369  005CD8  0012               	return	
 25370  005CDA                     
 25371                           ; BSR set to: 1
 25372                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 25373                           
 25374                           ; BSR set to: 1
 25375  005CDA  0EE0               	movlw	low _MdmOnOffPulseRequest
 25376  005CDC  0100               	movlb	0	; () banked
 25377  005CDE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25378  005CE0  0E00               	movlw	high _MdmOnOffPulseRequest
 25379  005CE2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25380  005CE4  EC9D  F033         	call	_GenerateEvt	;wreg free
 25381                           
 25382                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 25383  005CE8  0E01               	movlw	1
 25384  005CEA  0100               	movlb	0	; () banked
 25385  005CEC  6FD0               	movwf	_MdmStatus& (0+255),b
 25386                           
 25387                           ; BSR set to: 0
 25388                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 25389  005CEE  0E02               	movlw	2
 25390  005CF0  0101               	movlb	1	; () banked
 25391  005CF2  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 25392                           
 25393                           ; BSR set to: 1
 25394                           ;mdm_gsm_gprs.c: 408: }
 25395                           
 25396                           ; BSR set to: 1
 25397                           ;mdm_gsm_gprs.c: 407: break;
 25398                           
 25399                           ;mdm_gsm_gprs.c: 406: default:
 25400                           
 25401                           ; BSR set to: 1
 25402                           ;mdm_gsm_gprs.c: 404: break;
 25403                           
 25404                           ;mdm_gsm_gprs.c: 403: case Stop:
 25405                           
 25406                           ;mdm_gsm_gprs.c: 401: break;
 25407  005CF4  0012               	return	
 25408  005CF6                     l1009:
 25409                           
 25410                           ; BSR set to: 1
 25411  005CF6  0101               	movlb	1	; () banked
 25412  005CF8  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 25413                           
 25414                           ; Switch size 1, requested type "space"
 25415                           ; Number of cases is 3, Range of values is 0 to 2
 25416                           ; switch strategies available:
 25417                           ; Name         Instructions Cycles
 25418                           ; simple_byte           10     6 (average)
 25419                           ;	Chosen strategy is simple_byte
 25420  005CFA  0A00               	xorlw	0	; case 0
 25421  005CFC  B4D8               	btfsc	status,2,c
 25422  005CFE  D7E0               	goto	l1010
 25423  005D00  0A01               	xorlw	1	; case 1
 25424  005D02  B4D8               	btfsc	status,2,c
 25425  005D04  D7EA               	goto	l1013
 25426  005D06  0A03               	xorlw	3	; case 2
 25427  005D08  0012               	return	
 25428  005D0A                     __end_of_TurnOnModem:
 25429                           	opt stack 0
 25430                           tosu	equ	0xFFF
 25431                           tosh	equ	0xFFE
 25432                           tosl	equ	0xFFD
 25433                           pclath	equ	0xFFA
 25434                           tblptru	equ	0xFF8
 25435                           tblptrh	equ	0xFF7
 25436                           tblptrl	equ	0xFF6
 25437                           tablat	equ	0xFF5
 25438                           prodh	equ	0xFF4
 25439                           prodl	equ	0xFF3
 25440                           intcon	equ	0xFF2
 25441                           intcon2	equ	0xFF1
 25442                           intcon3	equ	0xFF0
 25443                           indf0	equ	0xFEF
 25444                           postinc0	equ	0xFEE
 25445                           plusw0	equ	0xFEB
 25446                           fsr0h	equ	0xFEA
 25447                           fsr0l	equ	0xFE9
 25448                           wreg	equ	0xFE8
 25449                           indf1	equ	0xFE7
 25450                           postinc1	equ	0xFE6
 25451                           postdec1	equ	0xFE5
 25452                           fsr1h	equ	0xFE2
 25453                           fsr1l	equ	0xFE1
 25454                           indf2	equ	0xFDF
 25455                           postinc2	equ	0xFDE
 25456                           postdec2	equ	0xFDD
 25457                           plusw2	equ	0xFDB
 25458                           fsr2h	equ	0xFDA
 25459                           fsr2l	equ	0xFD9
 25460                           status	equ	0xFD8
 25461                           
 25462 ;; *************** function _SendSmsSm *****************
 25463 ;; Defined at:
 25464 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25465 ;; Parameters:    Size  Location     Type
 25466 ;;		None
 25467 ;; Auto vars:     Size  Location     Type
 25468 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 25469 ;; Return value:  Size  Location     Type
 25470 ;;                  1    wreg      void 
 25471 ;; Registers used:
 25472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25473 ;; Tracked objects:
 25474 ;;		On entry : 0/0
 25475 ;;		On exit  : 0/0
 25476 ;;		Unchanged: 0/0
 25477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25479 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25481 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25482 ;;Total ram usage:       52 bytes
 25483 ;; Hardware stack levels used:    1
 25484 ;; Hardware stack levels required when called:   14
 25485 ;; This function calls:
 25486 ;;		_OsTmr_GetTimerStatus
 25487 ;;		_OsTmr_StartTimer
 25488 ;;		_ReceiveEvt
 25489 ;;		_StringCopy
 25490 ;;		_Uart_WriteStringLen
 25491 ;; This function is called by:
 25492 ;;		_Mdm_MainTask
 25493 ;; This function uses a non-reentrant model
 25494 ;;
 25495                           
 25496                           	psect	text121
 25497  001CE0                     __ptext121:
 25498                           	opt stack 0
 25499  001CE0                     _SendSmsSm:
 25500                           	opt stack 13
 25501                           
 25502                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 25503                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 25504                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25505                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 25506                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 25507                           
 25508                           ;incstack = 0
 25509  001CE0  0E03               	movlw	3
 25510  001CE2  0100               	movlb	0	; () banked
 25511  001CE4  19D0               	xorwf	_MdmStatus& (0+255),w,b
 25512  001CE6  A4D8               	btfss	status,2,c
 25513  001CE8  0012               	return	
 25514  001CEA  D0C1               	goto	l1091
 25515  001CEC                     
 25516                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 25517                           
 25518                           ; BSR set to: 0
 25519  001CEC  0EDF               	movlw	low _SendSmsEvent
 25520  001CEE  0100               	movlb	0	; () banked
 25521  001CF0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25522  001CF2  0E00               	movlw	high _SendSmsEvent
 25523  001CF4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25524  001CF6  ECA8  F031         	call	_ReceiveEvt	;wreg free
 25525  001CFA  0900               	iorlw	0
 25526  001CFC  B4D8               	btfsc	status,2,c
 25527  001CFE  0012               	return	
 25528                           
 25529                           ;mdm_gsm_gprs.c: 671: {
 25530                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 25531  001D00  0E01               	movlw	1
 25532  001D02  0101               	movlb	1	; () banked
 25533  001D04  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25534                           
 25535                           ; BSR set to: 1
 25536                           ;mdm_gsm_gprs.c: 674: }
 25537                           ;mdm_gsm_gprs.c: 675: break;
 25538  001D06  0012               	return	
 25539  001D08                     
 25540                           ; BSR set to: 1
 25541                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 25542                           
 25543                           ; BSR set to: 1
 25544  001D08  0ECE               	movlw	low STR_5
 25545  001D0A  0100               	movlb	0	; () banked
 25546  001D0C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25547  001D0E  0EFF               	movlw	high STR_5
 25548  001D10  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25549  001D12  0E00               	movlw	low SendSmsSm@UartMessage
 25550  001D14  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25551  001D16  0E01               	movlw	high SendSmsSm@UartMessage
 25552  001D18  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25553  001D1A  0E00               	movlw	0
 25554  001D1C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 25555  001D1E  0E09               	movlw	9
 25556  001D20  6F89               	movwf	StringCopy@Len& (0+255),b
 25557  001D22  ECBB  F02A         	call	_StringCopy	;wreg free
 25558                           
 25559                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 25560  001D26  0E72               	movlw	low _PhoneNumber
 25561  001D28  0100               	movlb	0	; () banked
 25562  001D2A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25563  001D2C  0E05               	movlw	high _PhoneNumber
 25564  001D2E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25565  001D30  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 25566  001D32  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25567  001D34  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 25568  001D36  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25569  001D38  C0D1  F089         	movff	_PhoneNumbLen,StringCopy@Len
 25570  001D3C  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25571  001D3E  ECBB  F02A         	call	_StringCopy	;wreg free
 25572                           
 25573                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 25574  001D42  0100               	movlb	0	; () banked
 25575  001D44  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25576  001D46  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25577  001D48  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25578  001D4A  0E09               	movlw	9
 25579  001D4C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25580  001D4E  0E00               	movlw	0
 25581  001D50  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25582  001D52  0E00               	movlw	low SendSmsSm@UartMessage
 25583  001D54  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25584  001D56  6ED9               	movwf	fsr2l,c
 25585  001D58  0E01               	movlw	high SendSmsSm@UartMessage
 25586  001D5A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25587  001D5C  6EDA               	movwf	fsr2h,c
 25588  001D5E  0E22               	movlw	34
 25589  001D60  6EDF               	movwf	indf2,c
 25590                           
 25591                           ; BSR set to: 0
 25592                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 25593  001D62  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25594  001D64  6F9B               	movwf	??_SendSmsSm& (0+255),b
 25595  001D66  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 25596  001D68  0E0A               	movlw	10
 25597  001D6A  279B               	addwf	??_SendSmsSm& (0+255),f,b
 25598  001D6C  0E00               	movlw	0
 25599  001D6E  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 25600  001D70  0E00               	movlw	low SendSmsSm@UartMessage
 25601  001D72  259B               	addwf	??_SendSmsSm& (0+255),w,b
 25602  001D74  6ED9               	movwf	fsr2l,c
 25603  001D76  0E01               	movlw	high SendSmsSm@UartMessage
 25604  001D78  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 25605  001D7A  6EDA               	movwf	fsr2h,c
 25606  001D7C  0E0D               	movlw	13
 25607  001D7E  6EDF               	movwf	indf2,c
 25608                           
 25609                           ; BSR set to: 0
 25610                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 25611  001D80  0E00               	movlw	low SendSmsSm@UartMessage
 25612  001D82  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25613  001D84  0E01               	movlw	high SendSmsSm@UartMessage
 25614  001D86  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25615  001D88  51D1               	movf	_PhoneNumbLen& (0+255),w,b
 25616  001D8A  0F0B               	addlw	11
 25617  001D8C  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25618  001D8E  0E01               	movlw	1
 25619  001D90  ECBA  F02F         	call	_Uart_WriteStringLen
 25620                           
 25621                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 25622  001D94  0EE5               	movlw	low SendSmsSm@SwTimer
 25623  001D96  0100               	movlb	0	; () banked
 25624  001D98  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25625  001D9A  0E03               	movlw	high SendSmsSm@SwTimer
 25626  001D9C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25627  001D9E  0EC4               	movlw	196
 25628  001DA0  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25629  001DA2  0E09               	movlw	9
 25630  001DA4  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25631  001DA6  0E00               	movlw	0
 25632  001DA8  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25633  001DAA  0E00               	movlw	0
 25634  001DAC  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25635  001DAE  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 25636                           
 25637                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 25638  001DB2  0E05               	movlw	5
 25639  001DB4  0101               	movlb	1	; () banked
 25640  001DB6  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25641                           
 25642                           ; BSR set to: 1
 25643                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 25644  001DB8  0E02               	movlw	2
 25645  001DBA  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 25646                           
 25647                           ;mdm_gsm_gprs.c: 691: break;
 25648  001DBC  0012               	return	
 25649  001DBE                     
 25650                           ; BSR set to: 1
 25651                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 25652                           
 25653                           ; BSR set to: 1
 25654  001DBE  0E0A               	movlw	10
 25655  001DC0  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 25656                           
 25657                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 25658  001DC2  0E0D               	movlw	13
 25659  001DC4  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 25660                           
 25661                           ; BSR set to: 1
 25662                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 25663  001DC6  0E00               	movlw	low SendSmsSm@UartMessage
 25664  001DC8  0100               	movlb	0	; () banked
 25665  001DCA  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25666  001DCC  0E01               	movlw	high SendSmsSm@UartMessage
 25667  001DCE  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25668  001DD0  0E02               	movlw	2
 25669  001DD2  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25670  001DD4  0E01               	movlw	1
 25671  001DD6  ECBA  F02F         	call	_Uart_WriteStringLen
 25672                           
 25673                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 25674  001DDA  0E03               	movlw	3
 25675  001DDC  0101               	movlb	1	; () banked
 25676  001DDE  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25677                           
 25678                           ;mdm_gsm_gprs.c: 701: break;
 25679  001DE0  0012               	return	
 25680  001DE2                     
 25681                           ; BSR set to: 1
 25682                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 25683                           
 25684                           ; BSR set to: 1
 25685  001DE2  0E3C               	movlw	low _NewStringReceived
 25686  001DE4  0100               	movlb	0	; () banked
 25687  001DE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25688  001DE8  0E00               	movlw	high _NewStringReceived
 25689  001DEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25690  001DEC  ECA8  F031         	call	_ReceiveEvt	;wreg free
 25691  001DF0  0900               	iorlw	0
 25692  001DF2  B4D8               	btfsc	status,2,c
 25693  001DF4  0012               	return	
 25694                           
 25695                           ;mdm_gsm_gprs.c: 706: {
 25696                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 25697  001DF6  CC58  FFE8         	movff	_RxBuffer,wreg
 25698  001DFA  0A3E               	xorlw	62
 25699  001DFC  A4D8               	btfss	status,2,c
 25700  001DFE  0012               	return	
 25701                           
 25702                           ;mdm_gsm_gprs.c: 709: {
 25703                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 25704  001E00  0E04               	movlw	4
 25705  001E02  0101               	movlb	1	; () banked
 25706  001E04  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25707                           
 25708                           ; BSR set to: 1
 25709                           ;mdm_gsm_gprs.c: 712: }
 25710                           ;mdm_gsm_gprs.c: 713: }
 25711                           ;mdm_gsm_gprs.c: 714: break;
 25712                           
 25713                           ; BSR set to: 1
 25714  001E06  0012               	return	
 25715  001E08                     
 25716                           ; BSR set to: 1
 25717                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 25718                           
 25719                           ; BSR set to: 1
 25720  001E08  0EC8               	movlw	low _MessageText
 25721  001E0A  0100               	movlb	0	; () banked
 25722  001E0C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 25723  001E0E  0E08               	movlw	high _MessageText
 25724  001E10  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 25725  001E12  0E00               	movlw	low SendSmsSm@UartMessage
 25726  001E14  6F87               	movwf	StringCopy@DestStr& (0+255),b
 25727  001E16  0E01               	movlw	high SendSmsSm@UartMessage
 25728  001E18  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 25729  001E1A  C0D2  F089         	movff	_SmsLen,StringCopy@Len
 25730  001E1E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 25731  001E20  ECBB  F02A         	call	_StringCopy	;wreg free
 25732                           
 25733                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 25734  001E24  0100               	movlb	0	; () banked
 25735  001E26  51D2               	movf	_SmsLen& (0+255),w,b
 25736  001E28  0D01               	mullw	1
 25737  001E2A  0E00               	movlw	low SendSmsSm@UartMessage
 25738  001E2C  24F3               	addwf	prodl,w,c
 25739  001E2E  6ED9               	movwf	fsr2l,c
 25740  001E30  0E01               	movlw	high SendSmsSm@UartMessage
 25741  001E32  20F4               	addwfc	prodh,w,c
 25742  001E34  6EDA               	movwf	fsr2h,c
 25743  001E36  0E1A               	movlw	26
 25744  001E38  6EDF               	movwf	indf2,c
 25745                           
 25746                           ; BSR set to: 0
 25747                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 25748  001E3A  0E00               	movlw	low SendSmsSm@UartMessage
 25749  001E3C  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 25750  001E3E  0E01               	movlw	high SendSmsSm@UartMessage
 25751  001E40  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 25752  001E42  29D2               	incf	_SmsLen& (0+255),w,b
 25753  001E44  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 25754  001E46  0E01               	movlw	1
 25755  001E48  ECBA  F02F         	call	_Uart_WriteStringLen
 25756                           
 25757                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 25758  001E4C  0E00               	movlw	0
 25759  001E4E  0101               	movlb	1	; () banked
 25760  001E50  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 25761                           
 25762                           ;mdm_gsm_gprs.c: 725: break;
 25763  001E52  0012               	return	
 25764  001E54                     
 25765                           ; BSR set to: 1
 25766                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 25767                           
 25768                           ; BSR set to: 1
 25769  001E54  0EE5               	movlw	low SendSmsSm@SwTimer
 25770  001E56  0100               	movlb	0	; () banked
 25771  001E58  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25772  001E5A  0E03               	movlw	high SendSmsSm@SwTimer
 25773  001E5C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25774  001E5E  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25775  001E62  06E8               	decf	wreg,f,c
 25776  001E64  A4D8               	btfss	status,2,c
 25777  001E66  0012               	return	
 25778                           
 25779                           ;mdm_gsm_gprs.c: 730: {
 25780                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 25781  001E68  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 25782                           
 25783                           ;mdm_gsm_gprs.c: 738: }
 25784                           
 25785                           ;mdm_gsm_gprs.c: 737: break;
 25786                           
 25787                           ;mdm_gsm_gprs.c: 736: default:
 25788                           
 25789                           ;mdm_gsm_gprs.c: 733: }
 25790                           ;mdm_gsm_gprs.c: 734: break;
 25791  001E6C  0012               	return	
 25792  001E6E                     l1091:
 25793  001E6E  0101               	movlb	1	; () banked
 25794  001E70  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 25795                           
 25796                           ; Switch size 1, requested type "space"
 25797                           ; Number of cases is 6, Range of values is 0 to 5
 25798                           ; switch strategies available:
 25799                           ; Name         Instructions Cycles
 25800                           ; simple_byte           19    10 (average)
 25801                           ;	Chosen strategy is simple_byte
 25802  001E72  0A00               	xorlw	0	; case 0
 25803  001E74  B4D8               	btfsc	status,2,c
 25804  001E76  D73A               	goto	l1092
 25805  001E78  0A01               	xorlw	1	; case 1
 25806  001E7A  B4D8               	btfsc	status,2,c
 25807  001E7C  D745               	goto	l1095
 25808  001E7E  0A03               	xorlw	3	; case 2
 25809  001E80  B4D8               	btfsc	status,2,c
 25810  001E82  D79D               	goto	l1096
 25811  001E84  0A01               	xorlw	1	; case 3
 25812  001E86  B4D8               	btfsc	status,2,c
 25813  001E88  D7AC               	goto	l1097
 25814  001E8A  0A07               	xorlw	7	; case 4
 25815  001E8C  B4D8               	btfsc	status,2,c
 25816  001E8E  D7BC               	goto	l1100
 25817  001E90  0A01               	xorlw	1	; case 5
 25818  001E92  A4D8               	btfss	status,2,c
 25819                           
 25820                           ; BSR set to: 1
 25821  001E94  0012               	return	
 25822  001E96  D7DE               	goto	l1101
 25823  001E98                     __end_of_SendSmsSm:
 25824                           	opt stack 0
 25825                           tosu	equ	0xFFF
 25826                           tosh	equ	0xFFE
 25827                           tosl	equ	0xFFD
 25828                           pclath	equ	0xFFA
 25829                           tblptru	equ	0xFF8
 25830                           tblptrh	equ	0xFF7
 25831                           tblptrl	equ	0xFF6
 25832                           tablat	equ	0xFF5
 25833                           prodh	equ	0xFF4
 25834                           prodl	equ	0xFF3
 25835                           intcon	equ	0xFF2
 25836                           intcon2	equ	0xFF1
 25837                           intcon3	equ	0xFF0
 25838                           indf0	equ	0xFEF
 25839                           postinc0	equ	0xFEE
 25840                           plusw0	equ	0xFEB
 25841                           fsr0h	equ	0xFEA
 25842                           fsr0l	equ	0xFE9
 25843                           wreg	equ	0xFE8
 25844                           indf1	equ	0xFE7
 25845                           postinc1	equ	0xFE6
 25846                           postdec1	equ	0xFE5
 25847                           fsr1h	equ	0xFE2
 25848                           fsr1l	equ	0xFE1
 25849                           indf2	equ	0xFDF
 25850                           postinc2	equ	0xFDE
 25851                           postdec2	equ	0xFDD
 25852                           plusw2	equ	0xFDB
 25853                           fsr2h	equ	0xFDA
 25854                           fsr2l	equ	0xFD9
 25855                           status	equ	0xFD8
 25856                           
 25857 ;; *************** function _Uart_WriteStringLen *****************
 25858 ;; Defined at:
 25859 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25860 ;; Parameters:    Size  Location     Type
 25861 ;;  Module          1    wreg     unsigned char 
 25862 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 25863 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 25864 ;;  Len             1   34[BANK0 ] unsigned char 
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;  Module          1   36[BANK0 ] unsigned char 
 25867 ;;  Index           1   35[BANK0 ] unsigned char 
 25868 ;; Return value:  Size  Location     Type
 25869 ;;                  1    wreg      void 
 25870 ;; Registers used:
 25871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25872 ;; Tracked objects:
 25873 ;;		On entry : 0/0
 25874 ;;		On exit  : 0/0
 25875 ;;		Unchanged: 0/0
 25876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25877 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25880 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25881 ;;Total ram usage:        5 bytes
 25882 ;; Hardware stack levels used:    1
 25883 ;; Hardware stack levels required when called:   12
 25884 ;; This function calls:
 25885 ;;		_UartTxBufferStatus
 25886 ;;		_UartWriteByte
 25887 ;; This function is called by:
 25888 ;;		_SendSmsSm
 25889 ;;		_GsmGprsTerminal
 25890 ;; This function uses a non-reentrant model
 25891 ;;
 25892                           
 25893                           	psect	text122
 25894  005F74                     __ptext122:
 25895                           	opt stack 0
 25896  005F74                     _Uart_WriteStringLen:
 25897                           	opt stack 14
 25898                           
 25899                           ;incstack = 0
 25900                           ;Uart_WriteStringLen@Module stored from wreg
 25901  005F74  0100               	movlb	0	; () banked
 25902  005F76  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 25903                           
 25904                           ;uart_drv.c: 544: UINT8 Index;
 25905                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 25906  005F78  0E00               	movlw	0
 25907  005F7A  0100               	movlb	0	; () banked
 25908  005F7C  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 25909  005F7E  D015               	goto	l715
 25910  005F80                     
 25911                           ; BSR set to: 0
 25912                           ;uart_drv.c: 547: {
 25913                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 25914                           
 25915                           ; BSR set to: 0
 25916  005F80  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 25917  005F84  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 25918  005F88  50DF               	movf	indf2,w,c
 25919  005F8A  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 25920  005F8C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25921  005F8E  EC07  F033         	call	_UartWriteByte
 25922                           
 25923                           ;uart_drv.c: 551: StringToWrite++;
 25924  005F92  0100               	movlb	0	; () banked
 25925  005F94  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 25926  005F96  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 25927  005F98                     
 25928                           ; BSR set to: 0
 25929                           
 25930                           ; BSR set to: 0
 25931  005F98  0100               	movlb	0	; () banked
 25932  005F9A  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 25933  005F9C  ECEB  F02D         	call	_UartTxBufferStatus
 25934  005FA0  06E8               	decf	wreg,f,c
 25935  005FA2  B4D8               	btfsc	status,2,c
 25936  005FA4  D7F9               	goto	l718
 25937  005FA6  0100               	movlb	0	; () banked
 25938  005FA8  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 25939  005FAA                     l715:
 25940                           
 25941                           ; BSR set to: 0
 25942                           
 25943                           ; BSR set to: 0
 25944  005FAA  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 25945  005FAC  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 25946  005FAE  B0D8               	btfsc	status,0,c
 25947  005FB0  0012               	return	
 25948  005FB2  D7E6               	goto	l716
 25949  005FB4                     __end_of_Uart_WriteStringLen:
 25950                           	opt stack 0
 25951                           tosu	equ	0xFFF
 25952                           tosh	equ	0xFFE
 25953                           tosl	equ	0xFFD
 25954                           pclath	equ	0xFFA
 25955                           tblptru	equ	0xFF8
 25956                           tblptrh	equ	0xFF7
 25957                           tblptrl	equ	0xFF6
 25958                           tablat	equ	0xFF5
 25959                           prodh	equ	0xFF4
 25960                           prodl	equ	0xFF3
 25961                           intcon	equ	0xFF2
 25962                           intcon2	equ	0xFF1
 25963                           intcon3	equ	0xFF0
 25964                           indf0	equ	0xFEF
 25965                           postinc0	equ	0xFEE
 25966                           plusw0	equ	0xFEB
 25967                           fsr0h	equ	0xFEA
 25968                           fsr0l	equ	0xFE9
 25969                           wreg	equ	0xFE8
 25970                           indf1	equ	0xFE7
 25971                           postinc1	equ	0xFE6
 25972                           postdec1	equ	0xFE5
 25973                           fsr1h	equ	0xFE2
 25974                           fsr1l	equ	0xFE1
 25975                           indf2	equ	0xFDF
 25976                           postinc2	equ	0xFDE
 25977                           postdec2	equ	0xFDD
 25978                           plusw2	equ	0xFDB
 25979                           fsr2h	equ	0xFDA
 25980                           fsr2l	equ	0xFD9
 25981                           status	equ	0xFD8
 25982                           
 25983 ;; *************** function _ModemEvtParser *****************
 25984 ;; Defined at:
 25985 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25986 ;; Parameters:    Size  Location     Type
 25987 ;;		None
 25988 ;; Auto vars:     Size  Location     Type
 25989 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 25990 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 25991 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 25992 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 25993 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 25994 ;;  Match           1   71[BANK0 ] unsigned char 
 25995 ;; Return value:  Size  Location     Type
 25996 ;;                  1    wreg      void 
 25997 ;; Registers used:
 25998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25999 ;; Tracked objects:
 26000 ;;		On entry : 0/0
 26001 ;;		On exit  : 0/0
 26002 ;;		Unchanged: 0/0
 26003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26005 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26007 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26008 ;;Total ram usage:       26 bytes
 26009 ;; Hardware stack levels used:    1
 26010 ;; Hardware stack levels required when called:   12
 26011 ;; This function calls:
 26012 ;;		_GenerateEvt
 26013 ;;		_ReceiveEvt
 26014 ;;		_StringCompare
 26015 ;;		_StringCopy
 26016 ;;		_Uart_ClearRxBuffer
 26017 ;; This function is called by:
 26018 ;;		_Mdm_MainTask
 26019 ;; This function uses a non-reentrant model
 26020 ;;
 26021                           
 26022                           	psect	text123
 26023  002020                     __ptext123:
 26024                           	opt stack 0
 26025  002020                     _ModemEvtParser:
 26026                           	opt stack 15
 26027                           
 26028                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 26029                           
 26030                           ; BSR set to: 0
 26031                           ;incstack = 0
 26032  002020  C3C6  F0A3         	movff	ModemEvtParser@F9108,ModemEvtParser@RingString
 26033  002024  C3C7  F0A4         	movff	ModemEvtParser@F9108+1,ModemEvtParser@RingString+1
 26034  002028  C3C8  F0A5         	movff	ModemEvtParser@F9108+2,ModemEvtParser@RingString+2
 26035  00202C  C3C9  F0A6         	movff	ModemEvtParser@F9108+3,ModemEvtParser@RingString+3
 26036                           
 26037                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 26038  002030  EE23  F0C1         	lfsr	2,ModemEvtParser@F9110
 26039  002034  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 26040  002038  0E04               	movlw	4
 26041  00203A                     u14431:
 26042  00203A  CFDB FFE3          	movff	plusw2,plusw1
 26043  00203E  06E8               	decf	wreg,f,c
 26044  002040  E2FC               	bc	u14431
 26045                           
 26046                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 26047  002042  EE23  F0BC         	lfsr	2,ModemEvtParser@F9112
 26048  002046  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 26049  00204A  0E04               	movlw	4
 26050  00204C                     u14441:
 26051  00204C  CFDB FFE3          	movff	plusw2,plusw1
 26052  002050  06E8               	decf	wreg,f,c
 26053  002052  E2FC               	bc	u14441
 26054                           
 26055                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 26056  002054  EE24  F0D6         	lfsr	2,ModemEvtParser@F9114
 26057  002058  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 26058  00205C  0E09               	movlw	9
 26059  00205E                     u14451:
 26060  00205E  CFDB FFE3          	movff	plusw2,plusw1
 26061  002062  06E8               	decf	wreg,f,c
 26062  002064  E2FC               	bc	u14451
 26063                           
 26064                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 26065  002066  0E00               	movlw	0
 26066  002068  0100               	movlb	0	; () banked
 26067  00206A  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 26068                           
 26069                           ; BSR set to: 0
 26070                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 26071  00206C  0E00               	movlw	0
 26072  00206E  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 26073                           
 26074                           ; BSR set to: 0
 26075                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 26076  002070  0E3B               	movlw	low _NewMdmEvtParserRequest
 26077  002072  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26078  002074  0E00               	movlw	high _NewMdmEvtParserRequest
 26079  002076  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26080  002078  ECA8  F031         	call	_ReceiveEvt	;wreg free
 26081  00207C  0900               	iorlw	0
 26082  00207E  B4D8               	btfsc	status,2,c
 26083  002080  0012               	return	
 26084                           
 26085                           ;mdm_gsm_gprs.c: 510: {
 26086                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 26087  002082  0E00               	movlw	0
 26088  002084  0100               	movlb	0	; () banked
 26089  002086  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 26090  002088                     l14984:
 26091                           
 26092                           ; BSR set to: 0
 26093  002088  0E03               	movlw	3
 26094  00208A  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 26095  00208C  D074               	goto	l1052
 26096  00208E  D083               	goto	u14520
 26097  002090                     
 26098                           ; BSR set to: 0
 26099                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 26100                           
 26101                           ; BSR set to: 0
 26102  002090  0EA3               	movlw	low ModemEvtParser@RingString
 26103  002092  6F7D               	movwf	StringCompare@String1& (0+255),b
 26104  002094  0E00               	movlw	high ModemEvtParser@RingString
 26105  002096  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26106  002098  0E58               	movlw	low _RxBuffer
 26107  00209A  6F7F               	movwf	StringCompare@String2& (0+255),b
 26108  00209C  0E0C               	movlw	high _RxBuffer
 26109  00209E  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26110  0020A0  0E00               	movlw	0
 26111  0020A2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26112  0020A4  0E04               	movlw	4
 26113  0020A6  6F81               	movwf	StringCompare@Len& (0+255),b
 26114  0020A8  EC23  F02D         	call	_StringCompare	;wreg free
 26115  0020AC  0900               	iorlw	0
 26116  0020AE  B4D8               	btfsc	status,2,c
 26117  0020B0  D06F               	goto	l1055
 26118                           
 26119                           ;mdm_gsm_gprs.c: 518: {
 26120                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 26121  0020B2  0EDE               	movlw	low _RingEvent
 26122  0020B4  0100               	movlb	0	; () banked
 26123  0020B6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26124  0020B8  0E00               	movlw	high _RingEvent
 26125  0020BA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26126  0020BC  EC9D  F033         	call	_GenerateEvt	;wreg free
 26127  0020C0  D040               	goto	l15006
 26128  0020C2                     
 26129                           ; BSR set to: 0
 26130                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 26131                           
 26132                           ; BSR set to: 0
 26133  0020C2  0E99               	movlw	low ModemEvtParser@ClipString
 26134  0020C4  6F7D               	movwf	StringCompare@String1& (0+255),b
 26135  0020C6  0E00               	movlw	high ModemEvtParser@ClipString
 26136  0020C8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26137  0020CA  0E58               	movlw	low _RxBuffer
 26138  0020CC  6F7F               	movwf	StringCompare@String2& (0+255),b
 26139  0020CE  0E0C               	movlw	high _RxBuffer
 26140  0020D0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26141  0020D2  0E00               	movlw	0
 26142  0020D4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26143  0020D6  0E05               	movlw	5
 26144  0020D8  6F81               	movwf	StringCompare@Len& (0+255),b
 26145  0020DA  EC23  F02D         	call	_StringCompare	;wreg free
 26146  0020DE  0900               	iorlw	0
 26147  0020E0  B4D8               	btfsc	status,2,c
 26148  0020E2  D056               	goto	l1055
 26149                           
 26150                           ;mdm_gsm_gprs.c: 529: {
 26151                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 26152  0020E4  0E60               	movlw	low (_RxBuffer+8)
 26153  0020E6  0100               	movlb	0	; () banked
 26154  0020E8  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26155  0020EA  0E0C               	movlw	high (_RxBuffer+8)
 26156  0020EC  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26157  0020EE  0E35               	movlw	low _callerNumber
 26158  0020F0  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26159  0020F2  0E03               	movlw	high _callerNumber
 26160  0020F4  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26161  0020F6  0E00               	movlw	0
 26162  0020F8  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26163  0020FA  0E0D               	movlw	13
 26164  0020FC  6F89               	movwf	StringCopy@Len& (0+255),b
 26165  0020FE  ECBB  F02A         	call	_StringCopy	;wreg free
 26166                           
 26167                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 26168  002102  0EDD               	movlw	low _ClipEvent
 26169  002104  0100               	movlb	0	; () banked
 26170  002106  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26171  002108  0E00               	movlw	high _ClipEvent
 26172  00210A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26173  00210C  EC9D  F033         	call	_GenerateEvt	;wreg free
 26174  002110  D018               	goto	l15006
 26175  002112                     
 26176                           ; BSR set to: 0
 26177                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 26178                           
 26179                           ; BSR set to: 0
 26180  002112  0E9E               	movlw	low ModemEvtParser@SmsString
 26181  002114  6F7D               	movwf	StringCompare@String1& (0+255),b
 26182  002116  0E00               	movlw	high ModemEvtParser@SmsString
 26183  002118  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26184  00211A  0E58               	movlw	low _RxBuffer
 26185  00211C  6F7F               	movwf	StringCompare@String2& (0+255),b
 26186  00211E  0E0C               	movlw	high _RxBuffer
 26187  002120  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26188  002122  0E00               	movlw	0
 26189  002124  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26190  002126  0E05               	movlw	5
 26191  002128  6F81               	movwf	StringCompare@Len& (0+255),b
 26192  00212A  EC23  F02D         	call	_StringCompare	;wreg free
 26193  00212E  0900               	iorlw	0
 26194  002130  B4D8               	btfsc	status,2,c
 26195  002132  D02E               	goto	l1055
 26196                           
 26197                           ;mdm_gsm_gprs.c: 541: {
 26198                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 26199  002134  0EDC               	movlw	low _SmsEvent
 26200  002136  0100               	movlb	0	; () banked
 26201  002138  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26202  00213A  0E00               	movlw	high _SmsEvent
 26203  00213C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26204  00213E  EC9D  F033         	call	_GenerateEvt	;wreg free
 26205  002142                     l15006:
 26206                           
 26207                           ;mdm_gsm_gprs.c: 545: Match = 1;
 26208  002142  0E01               	movlw	1
 26209  002144  0100               	movlb	0	; () banked
 26210  002146  D015               	goto	L37
 26211  002148                     
 26212                           ; BSR set to: 0
 26213                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 26214                           
 26215                           ; BSR set to: 0
 26216  002148  0E8F               	movlw	low ModemEvtParser@CallReadyString
 26217  00214A  6F7D               	movwf	StringCompare@String1& (0+255),b
 26218  00214C  0E00               	movlw	high ModemEvtParser@CallReadyString
 26219  00214E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 26220  002150  0E58               	movlw	low _RxBuffer
 26221  002152  6F7F               	movwf	StringCompare@String2& (0+255),b
 26222  002154  0E0C               	movlw	high _RxBuffer
 26223  002156  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 26224  002158  0E00               	movlw	0
 26225  00215A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 26226  00215C  0E0A               	movlw	10
 26227  00215E  6F81               	movwf	StringCompare@Len& (0+255),b
 26228  002160  EC23  F02D         	call	_StringCompare	;wreg free
 26229  002164  0900               	iorlw	0
 26230  002166  B4D8               	btfsc	status,2,c
 26231  002168  D013               	goto	l1055
 26232                           
 26233                           ;mdm_gsm_gprs.c: 552: {
 26234                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 26235  00216A  0E02               	movlw	2
 26236  00216C  0100               	movlb	0	; () banked
 26237  00216E  6FD0               	movwf	_MdmStatus& (0+255),b
 26238                           
 26239                           ;mdm_gsm_gprs.c: 556: Match = 1;
 26240  002170  0E01               	movlw	1
 26241  002172                     L37:
 26242  002172  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 26243                           
 26244                           ; BSR set to: 0
 26245                           ;mdm_gsm_gprs.c: 562: }
 26246                           
 26247                           ; BSR set to: 0
 26248                           ;mdm_gsm_gprs.c: 561: break;
 26249                           
 26250                           ;mdm_gsm_gprs.c: 560: default:
 26251                           
 26252                           ; BSR set to: 0
 26253                           ;mdm_gsm_gprs.c: 557: }
 26254                           ;mdm_gsm_gprs.c: 558: break;
 26255  002174  D00D               	goto	l1055
 26256  002176                     l1052:
 26257                           
 26258                           ; BSR set to: 0
 26259                           
 26260                           ; BSR set to: 0
 26261  002176  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 26262                           
 26263                           ; Switch size 1, requested type "space"
 26264                           ; Number of cases is 4, Range of values is 0 to 3
 26265                           ; switch strategies available:
 26266                           ; Name         Instructions Cycles
 26267                           ; simple_byte           13     7 (average)
 26268                           ;	Chosen strategy is simple_byte
 26269  002178  0A00               	xorlw	0	; case 0
 26270  00217A  B4D8               	btfsc	status,2,c
 26271  00217C  D789               	goto	l1053
 26272  00217E  0A01               	xorlw	1	; case 1
 26273  002180  B4D8               	btfsc	status,2,c
 26274  002182  D7C7               	goto	l1058
 26275  002184  0A03               	xorlw	3	; case 2
 26276  002186  B4D8               	btfsc	status,2,c
 26277  002188  D7DF               	goto	l1060
 26278  00218A  0A01               	xorlw	1	; case 3
 26279  00218C  B4D8               	btfsc	status,2,c
 26280  00218E  D799               	goto	l1056
 26281  002190                     l1055:
 26282                           
 26283                           ; BSR set to: 0
 26284  002190  0100               	movlb	0	; () banked
 26285  002192  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 26286  002194  D779               	goto	l14984
 26287  002196                     u14520:
 26288                           
 26289                           ; BSR set to: 0
 26290                           ;mdm_gsm_gprs.c: 563: }
 26291                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 26292                           
 26293                           ; BSR set to: 0
 26294  002196  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 26295  002198  A4D8               	btfss	status,2,c
 26296  00219A  0012               	return	
 26297                           
 26298                           ; BSR set to: 0
 26299                           ;mdm_gsm_gprs.c: 567: {
 26300                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 26301  00219C  ECE5  F030         	call	_Uart_ClearRxBuffer	;wreg free
 26302  0021A0  0012               	return	
 26303  0021A2                     __end_of_ModemEvtParser:
 26304                           	opt stack 0
 26305                           tosu	equ	0xFFF
 26306                           tosh	equ	0xFFE
 26307                           tosl	equ	0xFFD
 26308                           pclath	equ	0xFFA
 26309                           tblptru	equ	0xFF8
 26310                           tblptrh	equ	0xFF7
 26311                           tblptrl	equ	0xFF6
 26312                           tablat	equ	0xFF5
 26313                           prodh	equ	0xFF4
 26314                           prodl	equ	0xFF3
 26315                           intcon	equ	0xFF2
 26316                           intcon2	equ	0xFF1
 26317                           intcon3	equ	0xFF0
 26318                           indf0	equ	0xFEF
 26319                           postinc0	equ	0xFEE
 26320                           plusw0	equ	0xFEB
 26321                           fsr0h	equ	0xFEA
 26322                           fsr0l	equ	0xFE9
 26323                           wreg	equ	0xFE8
 26324                           indf1	equ	0xFE7
 26325                           postinc1	equ	0xFE6
 26326                           postdec1	equ	0xFE5
 26327                           plusw1	equ	0xFE3
 26328                           fsr1h	equ	0xFE2
 26329                           fsr1l	equ	0xFE1
 26330                           indf2	equ	0xFDF
 26331                           postinc2	equ	0xFDE
 26332                           postdec2	equ	0xFDD
 26333                           plusw2	equ	0xFDB
 26334                           fsr2h	equ	0xFDA
 26335                           fsr2l	equ	0xFD9
 26336                           status	equ	0xFD8
 26337                           
 26338 ;; *************** function _Uart_ClearRxBuffer *****************
 26339 ;; Defined at:
 26340 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26341 ;; Parameters:    Size  Location     Type
 26342 ;;		None
 26343 ;; Auto vars:     Size  Location     Type
 26344 ;;  Index           2   29[BANK0 ] unsigned short 
 26345 ;; Return value:  Size  Location     Type
 26346 ;;                  1    wreg      void 
 26347 ;; Registers used:
 26348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26349 ;; Tracked objects:
 26350 ;;		On entry : 0/0
 26351 ;;		On exit  : 0/0
 26352 ;;		Unchanged: 0/0
 26353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26358 ;;Total ram usage:        2 bytes
 26359 ;; Hardware stack levels used:    1
 26360 ;; Hardware stack levels required when called:   11
 26361 ;; This function calls:
 26362 ;;		Nothing
 26363 ;; This function is called by:
 26364 ;;		_ModemEvtParser
 26365 ;; This function uses a non-reentrant model
 26366 ;;
 26367                           
 26368                           	psect	text124
 26369  0061CA                     __ptext124:
 26370                           	opt stack 0
 26371  0061CA                     _Uart_ClearRxBuffer:
 26372                           	opt stack 15
 26373                           
 26374                           ;uart_drv.c: 567: UINT16 Index = 0;
 26375                           
 26376                           ;incstack = 0
 26377  0061CA  0E00               	movlw	0
 26378  0061CC  0100               	movlb	0	; () banked
 26379  0061CE  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26380  0061D0  0E00               	movlw	0
 26381  0061D2  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26382                           
 26383                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 26384  0061D4  0E00               	movlw	0
 26385  0061D6  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 26386  0061D8  0E00               	movlw	0
 26387  0061DA  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 26388  0061DC                     l14196:
 26389                           
 26390                           ; BSR set to: 0
 26391  0061DC  0E90               	movlw	144
 26392  0061DE  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26393  0061E0  0E01               	movlw	1
 26394  0061E2  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26395  0061E4  B0D8               	btfsc	status,0,c
 26396  0061E6  0012               	return	
 26397                           
 26398                           ; BSR set to: 0
 26399                           ;uart_drv.c: 571: {
 26400                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 26401                           
 26402                           ; BSR set to: 0
 26403                           
 26404                           ; BSR set to: 0
 26405  0061E8  0E58               	movlw	low _RxBuffer
 26406  0061EA  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 26407  0061EC  6ED9               	movwf	fsr2l,c
 26408  0061EE  0E0C               	movlw	high _RxBuffer
 26409  0061F0  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 26410  0061F2  6EDA               	movwf	fsr2h,c
 26411  0061F4  0E00               	movlw	0
 26412  0061F6  6EDF               	movwf	indf2,c
 26413                           
 26414                           ; BSR set to: 0
 26415  0061F8  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 26416  0061FA  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 26417  0061FC  D7EF               	goto	l14196
 26418  0061FE                     __end_of_Uart_ClearRxBuffer:
 26419                           	opt stack 0
 26420                           tosu	equ	0xFFF
 26421                           tosh	equ	0xFFE
 26422                           tosl	equ	0xFFD
 26423                           pclath	equ	0xFFA
 26424                           tblptru	equ	0xFF8
 26425                           tblptrh	equ	0xFF7
 26426                           tblptrl	equ	0xFF6
 26427                           tablat	equ	0xFF5
 26428                           prodh	equ	0xFF4
 26429                           prodl	equ	0xFF3
 26430                           intcon	equ	0xFF2
 26431                           intcon2	equ	0xFF1
 26432                           intcon3	equ	0xFF0
 26433                           indf0	equ	0xFEF
 26434                           postinc0	equ	0xFEE
 26435                           plusw0	equ	0xFEB
 26436                           fsr0h	equ	0xFEA
 26437                           fsr0l	equ	0xFE9
 26438                           wreg	equ	0xFE8
 26439                           indf1	equ	0xFE7
 26440                           postinc1	equ	0xFE6
 26441                           postdec1	equ	0xFE5
 26442                           plusw1	equ	0xFE3
 26443                           fsr1h	equ	0xFE2
 26444                           fsr1l	equ	0xFE1
 26445                           indf2	equ	0xFDF
 26446                           postinc2	equ	0xFDE
 26447                           postdec2	equ	0xFDD
 26448                           plusw2	equ	0xFDB
 26449                           fsr2h	equ	0xFDA
 26450                           fsr2l	equ	0xFD9
 26451                           status	equ	0xFD8
 26452                           
 26453 ;; *************** function _StringCompare *****************
 26454 ;; Defined at:
 26455 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 26456 ;; Parameters:    Size  Location     Type
 26457 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 26458 ;;		 -> MyApp_Task@receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 26459 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 26460 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 26461 ;;		 -> isNumberInMemory@readBuffer(13), MyApp_Task@cmdAddNumber(4), parseCommand@deleteNumberCmd(3), parseCommand@addNu
      +mberCmd(3), 
 26462 ;;		 -> RxBuffer(400), 
 26463 ;;  Len             2   33[BANK0 ] unsigned short 
 26464 ;; Auto vars:     Size  Location     Type
 26465 ;;  Index           2   38[BANK0 ] unsigned short 
 26466 ;;  Result          1   37[BANK0 ] unsigned char 
 26467 ;; Return value:  Size  Location     Type
 26468 ;;                  1    wreg      unsigned char 
 26469 ;; Registers used:
 26470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26471 ;; Tracked objects:
 26472 ;;		On entry : 0/0
 26473 ;;		On exit  : 0/0
 26474 ;;		Unchanged: 0/0
 26475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26476 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26477 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26478 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26479 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26480 ;;Total ram usage:       11 bytes
 26481 ;; Hardware stack levels used:    1
 26482 ;; Hardware stack levels required when called:   11
 26483 ;; This function calls:
 26484 ;;		Nothing
 26485 ;; This function is called by:
 26486 ;;		_ModemEvtParser
 26487 ;;		_parseCommand
 26488 ;;		_MyApp_Task
 26489 ;;		_isNumberInMemory
 26490 ;; This function uses a non-reentrant model
 26491 ;;
 26492                           
 26493                           	psect	text125
 26494  005A46                     __ptext125:
 26495                           	opt stack 0
 26496  005A46                     _StringCompare:
 26497                           	opt stack 15
 26498                           
 26499                           ;sf.c: 77: UINT16 Index = 0;
 26500                           
 26501                           ; BSR set to: 0
 26502                           ;incstack = 0
 26503  005A46  0E00               	movlw	0
 26504  005A48  0100               	movlb	0	; () banked
 26505  005A4A  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26506  005A4C  0E00               	movlw	0
 26507  005A4E  6F86               	movwf	StringCompare@Index& (0+255),b
 26508                           
 26509                           ;sf.c: 78: UINT8 Result = 1;
 26510  005A50  0E01               	movlw	1
 26511  005A52  6F85               	movwf	StringCompare@Result& (0+255),b
 26512                           
 26513                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 26514  005A54  0E00               	movlw	0
 26515  005A56  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 26516  005A58  0E00               	movlw	0
 26517  005A5A  6F86               	movwf	StringCompare@Index& (0+255),b
 26518  005A5C  D015               	goto	l2240
 26519  005A5E                     
 26520                           ; BSR set to: 0
 26521                           ;sf.c: 82: {
 26522                           ;sf.c: 83: if (String1[Index] != String2[Index])
 26523                           
 26524                           ; BSR set to: 0
 26525  005A5E  5186               	movf	StringCompare@Index& (0+255),w,b
 26526  005A60  257F               	addwf	StringCompare@String2& (0+255),w,b
 26527  005A62  6ED9               	movwf	fsr2l,c
 26528  005A64  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26529  005A66  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 26530  005A68  6EDA               	movwf	fsr2h,c
 26531  005A6A  5186               	movf	StringCompare@Index& (0+255),w,b
 26532  005A6C  257D               	addwf	StringCompare@String1& (0+255),w,b
 26533  005A6E  6EE1               	movwf	fsr1l,c
 26534  005A70  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 26535  005A72  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 26536  005A74  6EE2               	movwf	fsr1h,c
 26537  005A76  50DE               	movf	postinc2,w,c
 26538  005A78  18E6               	xorwf	postinc1,w,c
 26539  005A7A  B4D8               	btfsc	status,2,c
 26540  005A7C  D003               	goto	l2242
 26541                           
 26542                           ; BSR set to: 0
 26543                           ;sf.c: 84: {
 26544                           ;sf.c: 85: Result = 0;
 26545  005A7E  0E00               	movlw	0
 26546  005A80  6F85               	movwf	StringCompare@Result& (0+255),b
 26547                           
 26548                           ;sf.c: 86: break;
 26549  005A82  D008               	goto	u13400
 26550  005A84                     l2242:
 26551                           
 26552                           ; BSR set to: 0
 26553                           
 26554                           ; BSR set to: 0
 26555  005A84  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 26556  005A86  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 26557  005A88                     l2240:
 26558                           
 26559                           ; BSR set to: 0
 26560                           
 26561                           ; BSR set to: 0
 26562  005A88  5181               	movf	StringCompare@Len& (0+255),w,b
 26563  005A8A  5D86               	subwf	StringCompare@Index& (0+255),w,b
 26564  005A8C  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 26565  005A8E  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 26566  005A90  A0D8               	btfss	status,0,c
 26567  005A92  D7E5               	goto	l2241
 26568  005A94                     u13400:
 26569                           
 26570                           ; BSR set to: 0
 26571                           ;sf.c: 87: }
 26572                           ;sf.c: 88: }
 26573                           ;sf.c: 91: return Result;
 26574                           
 26575                           ; BSR set to: 0
 26576  005A94  5185               	movf	StringCompare@Result& (0+255),w,b
 26577  005A96  0012               	return	
 26578  005A98                     __end_of_StringCompare:
 26579                           	opt stack 0
 26580                           tosu	equ	0xFFF
 26581                           tosh	equ	0xFFE
 26582                           tosl	equ	0xFFD
 26583                           pclath	equ	0xFFA
 26584                           tblptru	equ	0xFF8
 26585                           tblptrh	equ	0xFF7
 26586                           tblptrl	equ	0xFF6
 26587                           tablat	equ	0xFF5
 26588                           prodh	equ	0xFF4
 26589                           prodl	equ	0xFF3
 26590                           intcon	equ	0xFF2
 26591                           intcon2	equ	0xFF1
 26592                           intcon3	equ	0xFF0
 26593                           indf0	equ	0xFEF
 26594                           postinc0	equ	0xFEE
 26595                           plusw0	equ	0xFEB
 26596                           fsr0h	equ	0xFEA
 26597                           fsr0l	equ	0xFE9
 26598                           wreg	equ	0xFE8
 26599                           indf1	equ	0xFE7
 26600                           postinc1	equ	0xFE6
 26601                           postdec1	equ	0xFE5
 26602                           plusw1	equ	0xFE3
 26603                           fsr1h	equ	0xFE2
 26604                           fsr1l	equ	0xFE1
 26605                           indf2	equ	0xFDF
 26606                           postinc2	equ	0xFDE
 26607                           postdec2	equ	0xFDD
 26608                           plusw2	equ	0xFDB
 26609                           fsr2h	equ	0xFDA
 26610                           fsr2l	equ	0xFD9
 26611                           status	equ	0xFD8
 26612                           
 26613 ;; *************** function _GetSmsSm *****************
 26614 ;; Defined at:
 26615 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26616 ;; Parameters:    Size  Location     Type
 26617 ;;		None
 26618 ;; Auto vars:     Size  Location     Type
 26619 ;;		None
 26620 ;; Return value:  Size  Location     Type
 26621 ;;                  1    wreg      void 
 26622 ;; Registers used:
 26623 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26624 ;; Tracked objects:
 26625 ;;		On entry : 0/0
 26626 ;;		On exit  : 0/0
 26627 ;;		Unchanged: 0/0
 26628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26633 ;;Total ram usage:        0 bytes
 26634 ;; Hardware stack levels used:    1
 26635 ;; Hardware stack levels required when called:   13
 26636 ;; This function calls:
 26637 ;;		_ClearBuffer
 26638 ;;		_GenerateEvt
 26639 ;;		_ReceiveEvt
 26640 ;;		_StringCopy
 26641 ;;		_Uart_WriteConstString
 26642 ;; This function is called by:
 26643 ;;		_Mdm_MainTask
 26644 ;; This function uses a non-reentrant model
 26645 ;;
 26646                           
 26647                           	psect	text126
 26648  002D84                     __ptext126:
 26649                           	opt stack 0
 26650  002D84                     _GetSmsSm:
 26651                           	opt stack 14
 26652                           
 26653                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 26654                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 26655                           
 26656                           ; BSR set to: 0
 26657                           ;incstack = 0
 26658  002D84  0E03               	movlw	3
 26659  002D86  0100               	movlb	0	; () banked
 26660  002D88  19D0               	xorwf	_MdmStatus& (0+255),w,b
 26661  002D8A  A4D8               	btfss	status,2,c
 26662  002D8C  0012               	return	
 26663  002D8E  D084               	goto	l1070
 26664  002D90                     
 26665                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 26666                           
 26667                           ; BSR set to: 0
 26668  002D90  0EDB               	movlw	low _GetSmsText
 26669  002D92  0100               	movlb	0	; () banked
 26670  002D94  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26671  002D96  0E00               	movlw	high _GetSmsText
 26672  002D98  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26673  002D9A  ECA8  F031         	call	_ReceiveEvt	;wreg free
 26674  002D9E  0900               	iorlw	0
 26675  002DA0  B4D8               	btfsc	status,2,c
 26676  002DA2  0012               	return	
 26677                           
 26678                           ;mdm_gsm_gprs.c: 596: {
 26679                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 26680  002DA4  0E01               	movlw	1
 26681  002DA6  0101               	movlb	1	; () banked
 26682  002DA8  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26683                           
 26684                           ; BSR set to: 1
 26685                           ;mdm_gsm_gprs.c: 599: }
 26686                           ;mdm_gsm_gprs.c: 600: break;
 26687  002DAA  0012               	return	
 26688  002DAC                     
 26689                           ; BSR set to: 1
 26690                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 26691                           
 26692                           ; BSR set to: 1
 26693  002DAC  0EC2               	movlw	low STR_4
 26694  002DAE  0100               	movlb	0	; () banked
 26695  002DB0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26696  002DB2  0EFF               	movlw	high STR_4
 26697  002DB4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26698  002DB6  0E01               	movlw	1
 26699  002DB8  EC78  F02F         	call	_Uart_WriteConstString
 26700                           
 26701                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 26702  002DBC  0E02               	movlw	2
 26703  002DBE  0101               	movlb	1	; () banked
 26704  002DC0  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26705                           
 26706                           ;mdm_gsm_gprs.c: 607: break;
 26707  002DC2  0012               	return	
 26708  002DC4                     
 26709                           ; BSR set to: 1
 26710                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 26711                           
 26712                           ; BSR set to: 1
 26713  002DC4  0E3C               	movlw	low _NewStringReceived
 26714  002DC6  0100               	movlb	0	; () banked
 26715  002DC8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26716  002DCA  0E00               	movlw	high _NewStringReceived
 26717  002DCC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26718  002DCE  ECA8  F031         	call	_ReceiveEvt	;wreg free
 26719  002DD2  0900               	iorlw	0
 26720  002DD4  B4D8               	btfsc	status,2,c
 26721  002DD6  0012               	return	
 26722                           
 26723                           ;mdm_gsm_gprs.c: 612: {
 26724                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 26725  002DD8  CC58  FFE8         	movff	_RxBuffer,wreg
 26726  002DDC  0A2B               	xorlw	43
 26727  002DDE  A4D8               	btfss	status,2,c
 26728  002DE0  0012               	return	
 26729  002DE2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26730  002DE6  0A43               	xorlw	67
 26731  002DE8  A4D8               	btfss	status,2,c
 26732  002DEA  0012               	return	
 26733  002DEC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 26734  002DF0  0A4D               	xorlw	77
 26735  002DF2  A4D8               	btfss	status,2,c
 26736  002DF4  0012               	return	
 26737                           
 26738                           ;mdm_gsm_gprs.c: 614: {
 26739                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 26740  002DF6  0E00               	movlw	low _Mdm_SmsRx
 26741  002DF8  0100               	movlb	0	; () banked
 26742  002DFA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26743  002DFC  0E07               	movlw	high _Mdm_SmsRx
 26744  002DFE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26745  002E00  0E00               	movlw	0
 26746  002E02  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26747  002E04  0E50               	movlw	80
 26748  002E06  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26749  002E08  ECCA  F030         	call	_ClearBuffer	;wreg free
 26750                           
 26751                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 26752  002E0C  0E58               	movlw	low _RxBuffer
 26753  002E0E  0100               	movlb	0	; () banked
 26754  002E10  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26755  002E12  0E0C               	movlw	high _RxBuffer
 26756  002E14  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26757  002E16  0E00               	movlw	low _Mdm_SmsRx
 26758  002E18  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26759  002E1A  0E07               	movlw	high _Mdm_SmsRx
 26760  002E1C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26761  002E1E  C0C2  F089         	movff	_RxLen,StringCopy@Len
 26762  002E22  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 26763  002E26  ECBB  F02A         	call	_StringCopy	;wreg free
 26764                           
 26765                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 26766  002E2A  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 26767                           
 26768                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 26769  002E2E  0E03               	movlw	3
 26770  002E30  0101               	movlb	1	; () banked
 26771  002E32  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26772                           
 26773                           ; BSR set to: 1
 26774                           ;mdm_gsm_gprs.c: 622: }
 26775                           ;mdm_gsm_gprs.c: 623: }
 26776                           ;mdm_gsm_gprs.c: 624: break;
 26777                           
 26778                           ; BSR set to: 1
 26779  002E34  0012               	return	
 26780  002E36                     
 26781                           ; BSR set to: 1
 26782                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 26783                           
 26784                           ; BSR set to: 1
 26785  002E36  0E3C               	movlw	low _NewStringReceived
 26786  002E38  0100               	movlb	0	; () banked
 26787  002E3A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26788  002E3C  0E00               	movlw	high _NewStringReceived
 26789  002E3E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26790  002E40  ECA8  F031         	call	_ReceiveEvt	;wreg free
 26791  002E44  0900               	iorlw	0
 26792  002E46  B4D8               	btfsc	status,2,c
 26793  002E48  0012               	return	
 26794                           
 26795                           ;mdm_gsm_gprs.c: 629: {
 26796                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 26797  002E4A  0E50               	movlw	low (_Mdm_SmsRx+80)
 26798  002E4C  0100               	movlb	0	; () banked
 26799  002E4E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26800  002E50  0E07               	movlw	high (_Mdm_SmsRx+80)
 26801  002E52  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26802  002E54  0E00               	movlw	0
 26803  002E56  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26804  002E58  0E14               	movlw	20
 26805  002E5A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26806  002E5C  ECCA  F030         	call	_ClearBuffer	;wreg free
 26807                           
 26808                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 26809  002E60  0E58               	movlw	low _RxBuffer
 26810  002E62  0100               	movlb	0	; () banked
 26811  002E64  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26812  002E66  0E0C               	movlw	high _RxBuffer
 26813  002E68  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26814  002E6A  0E50               	movlw	low (_Mdm_SmsRx+80)
 26815  002E6C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26816  002E6E  0E07               	movlw	high (_Mdm_SmsRx+80)
 26817  002E70  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26818  002E72  C0C2  F089         	movff	_RxLen,StringCopy@Len
 26819  002E76  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 26820  002E7A  ECBB  F02A         	call	_StringCopy	;wreg free
 26821                           
 26822                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 26823  002E7E  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 26824                           
 26825                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 26826  002E82  0E00               	movlw	0
 26827  002E84  0101               	movlb	1	; () banked
 26828  002E86  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 26829                           
 26830                           ; BSR set to: 1
 26831                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 26832  002E88  0EDA               	movlw	low _SmsTxtReady
 26833  002E8A  0100               	movlb	0	; () banked
 26834  002E8C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26835  002E8E  0E00               	movlw	high _SmsTxtReady
 26836  002E90  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26837  002E92  EC9D  F033         	call	_GenerateEvt	;wreg free
 26838                           
 26839                           ;mdm_gsm_gprs.c: 644: }
 26840                           
 26841                           ;mdm_gsm_gprs.c: 643: break;
 26842                           
 26843                           ;mdm_gsm_gprs.c: 642: default:
 26844                           
 26845                           ;mdm_gsm_gprs.c: 639: }
 26846                           ;mdm_gsm_gprs.c: 640: break;
 26847  002E96  0012               	return	
 26848  002E98                     l1070:
 26849  002E98  0101               	movlb	1	; () banked
 26850  002E9A  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 26851                           
 26852                           ; Switch size 1, requested type "space"
 26853                           ; Number of cases is 4, Range of values is 0 to 3
 26854                           ; switch strategies available:
 26855                           ; Name         Instructions Cycles
 26856                           ; simple_byte           13     7 (average)
 26857                           ;	Chosen strategy is simple_byte
 26858  002E9C  0A00               	xorlw	0	; case 0
 26859  002E9E  B4D8               	btfsc	status,2,c
 26860  002EA0  D777               	goto	l1071
 26861  002EA2  0A01               	xorlw	1	; case 1
 26862  002EA4  B4D8               	btfsc	status,2,c
 26863  002EA6  D782               	goto	l1074
 26864  002EA8  0A03               	xorlw	3	; case 2
 26865  002EAA  B4D8               	btfsc	status,2,c
 26866  002EAC  D78B               	goto	l1075
 26867  002EAE  0A01               	xorlw	1	; case 3
 26868  002EB0  A4D8               	btfss	status,2,c
 26869                           
 26870                           ; BSR set to: 1
 26871  002EB2  0012               	return	
 26872  002EB4  D7C0               	goto	l1078
 26873  002EB6                     __end_of_GetSmsSm:
 26874                           	opt stack 0
 26875                           tosu	equ	0xFFF
 26876                           tosh	equ	0xFFE
 26877                           tosl	equ	0xFFD
 26878                           pclath	equ	0xFFA
 26879                           tblptru	equ	0xFF8
 26880                           tblptrh	equ	0xFF7
 26881                           tblptrl	equ	0xFF6
 26882                           tablat	equ	0xFF5
 26883                           prodh	equ	0xFF4
 26884                           prodl	equ	0xFF3
 26885                           intcon	equ	0xFF2
 26886                           intcon2	equ	0xFF1
 26887                           intcon3	equ	0xFF0
 26888                           indf0	equ	0xFEF
 26889                           postinc0	equ	0xFEE
 26890                           plusw0	equ	0xFEB
 26891                           fsr0h	equ	0xFEA
 26892                           fsr0l	equ	0xFE9
 26893                           wreg	equ	0xFE8
 26894                           indf1	equ	0xFE7
 26895                           postinc1	equ	0xFE6
 26896                           postdec1	equ	0xFE5
 26897                           plusw1	equ	0xFE3
 26898                           fsr1h	equ	0xFE2
 26899                           fsr1l	equ	0xFE1
 26900                           indf2	equ	0xFDF
 26901                           postinc2	equ	0xFDE
 26902                           postdec2	equ	0xFDD
 26903                           plusw2	equ	0xFDB
 26904                           fsr2h	equ	0xFDA
 26905                           fsr2l	equ	0xFD9
 26906                           status	equ	0xFD8
 26907                           
 26908 ;; *************** function _ConfigureModem *****************
 26909 ;; Defined at:
 26910 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26911 ;; Parameters:    Size  Location     Type
 26912 ;;		None
 26913 ;; Auto vars:     Size  Location     Type
 26914 ;;		None
 26915 ;; Return value:  Size  Location     Type
 26916 ;;                  1    wreg      void 
 26917 ;; Registers used:
 26918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26919 ;; Tracked objects:
 26920 ;;		On entry : 0/0
 26921 ;;		On exit  : 0/0
 26922 ;;		Unchanged: 0/0
 26923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26928 ;;Total ram usage:        0 bytes
 26929 ;; Hardware stack levels used:    1
 26930 ;; Hardware stack levels required when called:   14
 26931 ;; This function calls:
 26932 ;;		_GenerateEvt
 26933 ;;		_UartSetConfigLow
 26934 ;;		_Uart_InitUartModule
 26935 ;;		_Uart_WriteConstString
 26936 ;; This function is called by:
 26937 ;;		_Mdm_MainTask
 26938 ;; This function uses a non-reentrant model
 26939 ;;
 26940                           
 26941                           	psect	text127
 26942  0037AE                     __ptext127:
 26943                           	opt stack 0
 26944  0037AE                     _ConfigureModem:
 26945                           	opt stack 13
 26946                           
 26947                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 26948                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 26949                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 26950                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 26951                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 26952                           
 26953                           ;incstack = 0
 26954  0037AE  D05A               	goto	l1027
 26955  0037B0                     
 26956                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 26957  0037B0  0E02               	movlw	2
 26958  0037B2  0100               	movlb	0	; () banked
 26959  0037B4  19D0               	xorwf	_MdmStatus& (0+255),w,b
 26960  0037B6  A4D8               	btfss	status,2,c
 26961  0037B8  0012               	return	
 26962                           
 26963                           ; BSR set to: 0
 26964                           ;mdm_gsm_gprs.c: 431: {
 26965                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 26966  0037BA  0E01               	movlw	1
 26967  0037BC  0101               	movlb	1	; () banked
 26968  0037BE  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 26969                           
 26970                           ; BSR set to: 1
 26971                           ;mdm_gsm_gprs.c: 434: }
 26972                           ;mdm_gsm_gprs.c: 435: break;
 26973  0037C0  0012               	return	
 26974  0037C2                     
 26975                           ; BSR set to: 1
 26976                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 26977                           
 26978                           ; BSR set to: 1
 26979  0037C2  0E75               	movlw	low STR_2
 26980  0037C4  0100               	movlb	0	; () banked
 26981  0037C6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26982  0037C8  0EFF               	movlw	high STR_2
 26983  0037CA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26984  0037CC  0E01               	movlw	1
 26985  0037CE  EC78  F02F         	call	_Uart_WriteConstString
 26986                           
 26987                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 26988  0037D2  ECD0  F02B         	call	_UartSetConfigLow	;wreg free
 26989                           
 26990                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 26991  0037D6  0E20               	movlw	low _UartConfig
 26992  0037D8  0100               	movlb	0	; () banked
 26993  0037DA  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 26994  0037DC  0E03               	movlw	high _UartConfig
 26995  0037DE  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 26996  0037E0  0E01               	movlw	1
 26997  0037E2  EC5E  F005         	call	_Uart_InitUartModule
 26998                           
 26999                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 27000  0037E6  0E03               	movlw	3
 27001  0037E8  0102               	movlb	2	; () banked
 27002  0037EA  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 27003  0037EC  0EE8               	movlw	232
 27004  0037EE  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 27005                           
 27006                           ; BSR set to: 2
 27007                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 27008  0037F0  0E02               	movlw	2
 27009  0037F2  0101               	movlb	1	; () banked
 27010  0037F4  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 27011                           
 27012                           ; BSR set to: 1
 27013                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 27014  0037F6  0E04               	movlw	4
 27015  0037F8  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27016                           
 27017                           ;mdm_gsm_gprs.c: 449: break;
 27018  0037FA  0012               	return	
 27019  0037FC                     
 27020                           ; BSR set to: 1
 27021                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 27022                           
 27023                           ; BSR set to: 1
 27024  0037FC  0EDF               	movlw	low STR_3
 27025  0037FE  0100               	movlb	0	; () banked
 27026  003800  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27027  003802  0EFF               	movlw	high STR_3
 27028  003804  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27029  003806  0E01               	movlw	1
 27030  003808  EC78  F02F         	call	_Uart_WriteConstString
 27031                           
 27032                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 27033  00380C  0E03               	movlw	3
 27034  00380E  0102               	movlb	2	; () banked
 27035  003810  6FD7               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 27036  003812  0EE8               	movlw	232
 27037  003814  6FD6               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 27038                           
 27039                           ; BSR set to: 2
 27040                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 27041  003816  0E05               	movlw	5
 27042  003818  0101               	movlb	1	; () banked
 27043  00381A  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 27044                           
 27045                           ; BSR set to: 1
 27046                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 27047  00381C  0E04               	movlw	4
 27048  00381E  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27049                           
 27050                           ;mdm_gsm_gprs.c: 459: break;
 27051  003820  0012               	return	
 27052  003822                     
 27053                           ; BSR set to: 1
 27054                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 27055                           
 27056                           ; BSR set to: 1
 27057  003822  0103               	movlb	3	; () banked
 27058  003824  4B1E               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 27059  003826  2B1F               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 27060                           
 27061                           ; BSR set to: 3
 27062                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 27063  003828  0102               	movlb	2	; () banked
 27064  00382A  51D6               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 27065  00382C  0103               	movlb	3	; () banked
 27066  00382E  5D1E               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 27067  003830  0102               	movlb	2	; () banked
 27068  003832  51D7               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 27069  003834  0103               	movlb	3	; () banked
 27070  003836  591F               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 27071  003838  A0D8               	btfss	status,0,c
 27072  00383A  0012               	return	
 27073                           
 27074                           ; BSR set to: 3
 27075                           ;mdm_gsm_gprs.c: 466: {
 27076                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 27077  00383C  0E00               	movlw	0
 27078  00383E  6F1F               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 27079  003840  0E00               	movlw	0
 27080  003842  6F1E               	movwf	ConfigureModem@DelayCounter& (0+255),b
 27081                           
 27082                           ; BSR set to: 3
 27083                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 27084  003844  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 27085                           
 27086                           ; BSR set to: 3
 27087                           ;mdm_gsm_gprs.c: 471: }
 27088                           ;mdm_gsm_gprs.c: 472: break;
 27089  003848  0012               	return	
 27090  00384A                     
 27091                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 27092                           
 27093                           ; BSR set to: 3
 27094  00384A  0E03               	movlw	3
 27095  00384C  0100               	movlb	0	; () banked
 27096  00384E  6FD0               	movwf	_MdmStatus& (0+255),b
 27097                           
 27098                           ; BSR set to: 0
 27099                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 27100  003850  0E39               	movlw	low _MdmStsReady
 27101  003852  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27102  003854  0E00               	movlw	high _MdmStsReady
 27103  003856  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27104  003858  EC9D  F033         	call	_GenerateEvt	;wreg free
 27105                           
 27106                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 27107  00385C  0E06               	movlw	6
 27108  00385E  0101               	movlb	1	; () banked
 27109  003860  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27110                           
 27111                           ; BSR set to: 1
 27112                           ;mdm_gsm_gprs.c: 488: }
 27113                           
 27114                           ; BSR set to: 1
 27115                           ;mdm_gsm_gprs.c: 487: break;
 27116                           
 27117                           ;mdm_gsm_gprs.c: 486: default:
 27118                           
 27119                           ; BSR set to: 1
 27120                           ;mdm_gsm_gprs.c: 484: break;
 27121                           
 27122                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 27123                           
 27124                           ;mdm_gsm_gprs.c: 481: break;
 27125  003862  0012               	return	
 27126  003864                     l1027:
 27127                           
 27128                           ; BSR set to: 1
 27129  003864  0101               	movlb	1	; () banked
 27130  003866  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 27131                           
 27132                           ; Switch size 1, requested type "space"
 27133                           ; Number of cases is 6, Range of values is 0 to 6
 27134                           ; switch strategies available:
 27135                           ; Name         Instructions Cycles
 27136                           ; simple_byte           19    10 (average)
 27137                           ;	Chosen strategy is simple_byte
 27138  003868  0A00               	xorlw	0	; case 0
 27139  00386A  B4D8               	btfsc	status,2,c
 27140  00386C  D7A1               	goto	l1028
 27141  00386E  0A01               	xorlw	1	; case 1
 27142  003870  B4D8               	btfsc	status,2,c
 27143  003872  D7A7               	goto	l1031
 27144  003874  0A03               	xorlw	3	; case 2
 27145  003876  B4D8               	btfsc	status,2,c
 27146  003878  D7C1               	goto	l1032
 27147  00387A  0A06               	xorlw	6	; case 4
 27148  00387C  B4D8               	btfsc	status,2,c
 27149  00387E  D7D1               	goto	l1033
 27150  003880  0A01               	xorlw	1	; case 5
 27151  003882  B4D8               	btfsc	status,2,c
 27152  003884  D7E2               	goto	l1035
 27153  003886  0A03               	xorlw	3	; case 6
 27154  003888  0012               	return	
 27155  00388A                     __end_of_ConfigureModem:
 27156                           	opt stack 0
 27157                           tosu	equ	0xFFF
 27158                           tosh	equ	0xFFE
 27159                           tosl	equ	0xFFD
 27160                           pclath	equ	0xFFA
 27161                           tblptru	equ	0xFF8
 27162                           tblptrh	equ	0xFF7
 27163                           tblptrl	equ	0xFF6
 27164                           tablat	equ	0xFF5
 27165                           prodh	equ	0xFF4
 27166                           prodl	equ	0xFF3
 27167                           intcon	equ	0xFF2
 27168                           intcon2	equ	0xFF1
 27169                           intcon3	equ	0xFF0
 27170                           indf0	equ	0xFEF
 27171                           postinc0	equ	0xFEE
 27172                           plusw0	equ	0xFEB
 27173                           fsr0h	equ	0xFEA
 27174                           fsr0l	equ	0xFE9
 27175                           wreg	equ	0xFE8
 27176                           indf1	equ	0xFE7
 27177                           postinc1	equ	0xFE6
 27178                           postdec1	equ	0xFE5
 27179                           plusw1	equ	0xFE3
 27180                           fsr1h	equ	0xFE2
 27181                           fsr1l	equ	0xFE1
 27182                           indf2	equ	0xFDF
 27183                           postinc2	equ	0xFDE
 27184                           postdec2	equ	0xFDD
 27185                           plusw2	equ	0xFDB
 27186                           fsr2h	equ	0xFDA
 27187                           fsr2l	equ	0xFD9
 27188                           status	equ	0xFD8
 27189                           
 27190 ;; *************** function _Uart_InitUartModule *****************
 27191 ;; Defined at:
 27192 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27193 ;; Parameters:    Size  Location     Type
 27194 ;;  Module          1    wreg     unsigned char 
 27195 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 27196 ;;		 -> UartConfig(21), 
 27197 ;; Auto vars:     Size  Location     Type
 27198 ;;  Module          1   65[BANK0 ] unsigned char 
 27199 ;; Return value:  Size  Location     Type
 27200 ;;                  1    wreg      void 
 27201 ;; Registers used:
 27202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27203 ;; Tracked objects:
 27204 ;;		On entry : 0/0
 27205 ;;		On exit  : 0/0
 27206 ;;		Unchanged: 0/0
 27207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27211 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27212 ;;Total ram usage:        5 bytes
 27213 ;; Hardware stack levels used:    1
 27214 ;; Hardware stack levels required when called:   13
 27215 ;; This function calls:
 27216 ;;		_SetUartBaudRate
 27217 ;; This function is called by:
 27218 ;;		_ConfigureModem
 27219 ;;		_Mdm_MainTask
 27220 ;; This function uses a non-reentrant model
 27221 ;;
 27222                           
 27223                           	psect	text128
 27224  000ABC                     __ptext128:
 27225                           	opt stack 0
 27226  000ABC                     _Uart_InitUartModule:
 27227                           	opt stack 14
 27228                           
 27229                           ;incstack = 0
 27230                           ;Uart_InitUartModule@Module stored from wreg
 27231  000ABC  0100               	movlb	0	; () banked
 27232  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 27233                           
 27234                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 27235  000AC0  0100               	movlb	0	; () banked
 27236  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 27237  000AC4  A4D8               	btfss	status,2,c
 27238  000AC6  D0BE               	goto	l668
 27239                           
 27240                           ; BSR set to: 0
 27241                           ;uart_drv.c: 291: {
 27242                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 27243  000AC8  9C94               	bcf	3988,6,c	;volatile
 27244                           
 27245                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 27246  000ACA  8E94               	bsf	3988,7,c	;volatile
 27247                           
 27248                           ; BSR set to: 0
 27249                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 27250  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27251  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27252  000AD4  0E01               	movlw	1
 27253  000AD6  EC26  F016         	call	_SetUartBaudRate
 27254                           
 27255                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 27256  000ADA  0E00               	movlw	0
 27257  000ADC  6EAD               	movwf	4013,c	;volatile
 27258                           
 27259                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27260  000ADE  0100               	movlb	0	; () banked
 27261  000AE0  EE20 F004          	lfsr	2,4
 27262  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27263  000AE6  26D9               	addwf	fsr2l,f,c
 27264  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27265  000AEA  22DA               	addwfc	fsr2h,f,c
 27266  000AEC  50DF               	movf	indf2,w,c
 27267  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27268  000AF0  0E06               	movlw	6
 27269  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27270  000AF4                     u13285:
 27271  000AF4  90D8               	bcf	status,0,c
 27272  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27273  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27274  000AFA  D7FC               	goto	u13285
 27275  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27276  000AFE  12AD               	iorwf	4013,f,c	;volatile
 27277                           
 27278                           ; BSR set to: 0
 27279                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27280  000B00  EE20 F006          	lfsr	2,6
 27281  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27282  000B06  26D9               	addwf	fsr2l,f,c
 27283  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27284  000B0A  22DA               	addwfc	fsr2h,f,c
 27285  000B0C  50DF               	movf	indf2,w,c
 27286  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27287  000B10  0E05               	movlw	5
 27288  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27289  000B14                     u13295:
 27290  000B14  90D8               	bcf	status,0,c
 27291  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27292  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27293  000B1A  D7FC               	goto	u13295
 27294  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27295  000B1E  12AD               	iorwf	4013,f,c	;volatile
 27296                           
 27297                           ; BSR set to: 0
 27298                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 27299  000B20  EE20 F001          	lfsr	2,1
 27300  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27301  000B26  26D9               	addwf	fsr2l,f,c
 27302  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27303  000B2A  22DA               	addwfc	fsr2h,f,c
 27304  000B2C  50DF               	movf	indf2,w,c
 27305  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27306  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27307  000B32  0BF0               	andlw	240
 27308  000B34  12AD               	iorwf	4013,f,c	;volatile
 27309                           
 27310                           ; BSR set to: 0
 27311                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27312  000B36  EE20 F008          	lfsr	2,8
 27313  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27314  000B3C  26D9               	addwf	fsr2l,f,c
 27315  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27316  000B40  22DA               	addwfc	fsr2h,f,c
 27317  000B42  50DF               	movf	indf2,w,c
 27318  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27319  000B46  90D8               	bcf	status,0,c
 27320  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27321  000B4A  90D8               	bcf	status,0,c
 27322  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27323  000B4E  90D8               	bcf	status,0,c
 27324  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27325  000B52  12AD               	iorwf	4013,f,c	;volatile
 27326                           
 27327                           ; BSR set to: 0
 27328                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27329  000B54  EE20 F003          	lfsr	2,3
 27330  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27331  000B5A  26D9               	addwf	fsr2l,f,c
 27332  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27333  000B5E  22DA               	addwfc	fsr2h,f,c
 27334  000B60  50DF               	movf	indf2,w,c
 27335  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27336  000B64  90D8               	bcf	status,0,c
 27337  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27338  000B68  90D8               	bcf	status,0,c
 27339  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27340  000B6C  12AD               	iorwf	4013,f,c	;volatile
 27341                           
 27342                           ; BSR set to: 0
 27343                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 27344  000B6E  0E00               	movlw	0
 27345  000B70  6EAC               	movwf	4012,c	;volatile
 27346                           
 27347                           ; BSR set to: 0
 27348                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27349  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27350  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27351  000B7A  50DF               	movf	indf2,w,c
 27352  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27353  000B7E  0E00               	movlw	0
 27354  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27355  000B82  0E80               	movlw	128
 27356  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27357  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27358  000B88  12AC               	iorwf	4012,f,c	;volatile
 27359                           
 27360                           ; BSR set to: 0
 27361                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27362  000B8A  EE20 F005          	lfsr	2,5
 27363  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27364  000B90  26D9               	addwf	fsr2l,f,c
 27365  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27366  000B94  22DA               	addwfc	fsr2h,f,c
 27367  000B96  50DF               	movf	indf2,w,c
 27368  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27369  000B9A  0E06               	movlw	6
 27370  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27371  000B9E                     u13305:
 27372  000B9E  90D8               	bcf	status,0,c
 27373  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27374  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27375  000BA4  D7FC               	goto	u13305
 27376  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27377  000BA8  12AC               	iorwf	4012,f,c	;volatile
 27378                           
 27379                           ; BSR set to: 0
 27380                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27381  000BAA  EE20 F007          	lfsr	2,7
 27382  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27383  000BB0  26D9               	addwf	fsr2l,f,c
 27384  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27385  000BB4  22DA               	addwfc	fsr2h,f,c
 27386  000BB6  50DF               	movf	indf2,w,c
 27387  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27388  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27389  000BBC  0BF0               	andlw	240
 27390  000BBE  12AC               	iorwf	4012,f,c	;volatile
 27391                           
 27392                           ; BSR set to: 0
 27393                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 27394  000BC0  0E00               	movlw	0
 27395  000BC2  6E7E               	movwf	3966,c	;volatile
 27396                           
 27397                           ; BSR set to: 0
 27398                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27399  000BC4  EE20 F002          	lfsr	2,2
 27400  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27401  000BCA  26D9               	addwf	fsr2l,f,c
 27402  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27403  000BCE  22DA               	addwfc	fsr2h,f,c
 27404  000BD0  50DF               	movf	indf2,w,c
 27405  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27406  000BD4  90D8               	bcf	status,0,c
 27407  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27408  000BD8  90D8               	bcf	status,0,c
 27409  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27410  000BDC  90D8               	bcf	status,0,c
 27411  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27412  000BE0  127E               	iorwf	3966,f,c	;volatile
 27413                           
 27414                           ; BSR set to: 0
 27415                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27416  000BE2  EE20 F00A          	lfsr	2,10
 27417  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27418  000BE8  26D9               	addwf	fsr2l,f,c
 27419  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27420  000BEC  22DA               	addwfc	fsr2h,f,c
 27421  000BEE  50DF               	movf	indf2,w,c
 27422  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27423  000BF2  90D8               	bcf	status,0,c
 27424  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27425  000BF6  127E               	iorwf	3966,f,c	;volatile
 27426                           
 27427                           ; BSR set to: 0
 27428                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27429  000BF8  EE20 F009          	lfsr	2,9
 27430  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27431  000BFE  26D9               	addwf	fsr2l,f,c
 27432  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27433  000C02  22DA               	addwfc	fsr2h,f,c
 27434  000C04  50DF               	movf	indf2,w,c
 27435  000C06  127E               	iorwf	3966,f,c	;volatile
 27436                           
 27437                           ; BSR set to: 0
 27438                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 27439  000C08  EE20 F00B          	lfsr	2,11
 27440  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27441  000C0E  26D9               	addwf	fsr2l,f,c
 27442  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27443  000C12  22DA               	addwfc	fsr2h,f,c
 27444  000C14  50DF               	movf	indf2,w,c
 27445  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27446  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27447  000C1A  509D               	movf	3997,w,c	;volatile
 27448  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27449  000C1E  0BEF               	andlw	-17
 27450  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27451  000C22  6E9D               	movwf	3997,c	;volatile
 27452                           
 27453                           ; BSR set to: 0
 27454                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 27455  000C24  EE20 F00C          	lfsr	2,12
 27456  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27457  000C2A  26D9               	addwf	fsr2l,f,c
 27458  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27459  000C2E  22DA               	addwfc	fsr2h,f,c
 27460  000C30  50DF               	movf	indf2,w,c
 27461  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27462  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27463  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27464  000C38  509D               	movf	3997,w,c	;volatile
 27465  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27466  000C3C  0BDF               	andlw	-33
 27467  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27468  000C40  6E9D               	movwf	3997,c	;volatile
 27469                           
 27470                           ;uart_drv.c: 326: }
 27471  000C42  0012               	return	
 27472  000C44                     l668:
 27473                           
 27474                           ; BSR set to: 0
 27475                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 27476                           
 27477                           ; BSR set to: 0
 27478  000C44  0E02               	movlw	2
 27479  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 27480  000C48  A4D8               	btfss	status,2,c
 27481  000C4A  0012               	return	
 27482                           
 27483                           ; BSR set to: 0
 27484                           ;uart_drv.c: 328: {
 27485                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 27486  000C4C  9094               	bcf	3988,0,c	;volatile
 27487                           
 27488                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 27489  000C4E  8294               	bsf	3988,1,c	;volatile
 27490                           
 27491                           ; BSR set to: 0
 27492                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 27493  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 27494  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 27495  000C58  0E02               	movlw	2
 27496  000C5A  EC26  F016         	call	_SetUartBaudRate
 27497                           
 27498                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 27499  000C5E  0E00               	movlw	0
 27500  000C60  6EA8               	movwf	4008,c	;volatile
 27501                           
 27502                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 27503  000C62  0100               	movlb	0	; () banked
 27504  000C64  EE20 F004          	lfsr	2,4
 27505  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27506  000C6A  26D9               	addwf	fsr2l,f,c
 27507  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27508  000C6E  22DA               	addwfc	fsr2h,f,c
 27509  000C70  50DF               	movf	indf2,w,c
 27510  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27511  000C74  0E06               	movlw	6
 27512  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27513  000C78                     u13325:
 27514  000C78  90D8               	bcf	status,0,c
 27515  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27516  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27517  000C7E  D7FC               	goto	u13325
 27518  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27519  000C82  12A8               	iorwf	4008,f,c	;volatile
 27520                           
 27521                           ; BSR set to: 0
 27522                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 27523  000C84  EE20 F006          	lfsr	2,6
 27524  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27525  000C8A  26D9               	addwf	fsr2l,f,c
 27526  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27527  000C8E  22DA               	addwfc	fsr2h,f,c
 27528  000C90  50DF               	movf	indf2,w,c
 27529  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27530  000C94  0E05               	movlw	5
 27531  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27532  000C98                     u13335:
 27533  000C98  90D8               	bcf	status,0,c
 27534  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27535  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27536  000C9E  D7FC               	goto	u13335
 27537  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27538  000CA2  12A8               	iorwf	4008,f,c	;volatile
 27539                           
 27540                           ; BSR set to: 0
 27541                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 27542  000CA4  EE20 F001          	lfsr	2,1
 27543  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27544  000CAA  26D9               	addwf	fsr2l,f,c
 27545  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27546  000CAE  22DA               	addwfc	fsr2h,f,c
 27547  000CB0  50DF               	movf	indf2,w,c
 27548  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27549  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27550  000CB6  0BF0               	andlw	240
 27551  000CB8  12A8               	iorwf	4008,f,c	;volatile
 27552                           
 27553                           ; BSR set to: 0
 27554                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 27555  000CBA  EE20 F008          	lfsr	2,8
 27556  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27557  000CC0  26D9               	addwf	fsr2l,f,c
 27558  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27559  000CC4  22DA               	addwfc	fsr2h,f,c
 27560  000CC6  50DF               	movf	indf2,w,c
 27561  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27562  000CCA  90D8               	bcf	status,0,c
 27563  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27564  000CCE  90D8               	bcf	status,0,c
 27565  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27566  000CD2  90D8               	bcf	status,0,c
 27567  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27568  000CD6  12A8               	iorwf	4008,f,c	;volatile
 27569                           
 27570                           ; BSR set to: 0
 27571                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 27572  000CD8  EE20 F003          	lfsr	2,3
 27573  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27574  000CDE  26D9               	addwf	fsr2l,f,c
 27575  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27576  000CE2  22DA               	addwfc	fsr2h,f,c
 27577  000CE4  50DF               	movf	indf2,w,c
 27578  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27579  000CE8  90D8               	bcf	status,0,c
 27580  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27581  000CEC  90D8               	bcf	status,0,c
 27582  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27583  000CF0  12A8               	iorwf	4008,f,c	;volatile
 27584                           
 27585                           ; BSR set to: 0
 27586                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 27587  000CF2  0E00               	movlw	0
 27588  000CF4  6E9C               	movwf	3996,c	;volatile
 27589                           
 27590                           ; BSR set to: 0
 27591                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 27592  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 27593  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 27594  000CFE  50DF               	movf	indf2,w,c
 27595  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27596  000D02  0E00               	movlw	0
 27597  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 27598  000D06  0E80               	movlw	128
 27599  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27600  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27601  000D0C  129C               	iorwf	3996,f,c	;volatile
 27602                           
 27603                           ; BSR set to: 0
 27604                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 27605  000D0E  EE20 F005          	lfsr	2,5
 27606  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27607  000D14  26D9               	addwf	fsr2l,f,c
 27608  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27609  000D18  22DA               	addwfc	fsr2h,f,c
 27610  000D1A  50DF               	movf	indf2,w,c
 27611  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27612  000D1E  0E06               	movlw	6
 27613  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 27614  000D22                     u13345:
 27615  000D22  90D8               	bcf	status,0,c
 27616  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27617  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 27618  000D28  D7FC               	goto	u13345
 27619  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 27620  000D2C  129C               	iorwf	3996,f,c	;volatile
 27621                           
 27622                           ; BSR set to: 0
 27623                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 27624  000D2E  EE20 F007          	lfsr	2,7
 27625  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27626  000D34  26D9               	addwf	fsr2l,f,c
 27627  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27628  000D38  22DA               	addwfc	fsr2h,f,c
 27629  000D3A  50DF               	movf	indf2,w,c
 27630  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27631  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 27632  000D40  0BF0               	andlw	240
 27633  000D42  129C               	iorwf	3996,f,c	;volatile
 27634                           
 27635                           ; BSR set to: 0
 27636                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 27637  000D44  0E00               	movlw	0
 27638  000D46  6E7C               	movwf	3964,c	;volatile
 27639                           
 27640                           ; BSR set to: 0
 27641                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 27642  000D48  EE20 F002          	lfsr	2,2
 27643  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27644  000D4E  26D9               	addwf	fsr2l,f,c
 27645  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27646  000D52  22DA               	addwfc	fsr2h,f,c
 27647  000D54  50DF               	movf	indf2,w,c
 27648  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27649  000D58  90D8               	bcf	status,0,c
 27650  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27651  000D5C  90D8               	bcf	status,0,c
 27652  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 27653  000D60  90D8               	bcf	status,0,c
 27654  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27655  000D64  127C               	iorwf	3964,f,c	;volatile
 27656                           
 27657                           ; BSR set to: 0
 27658                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 27659  000D66  EE20 F00A          	lfsr	2,10
 27660  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27661  000D6C  26D9               	addwf	fsr2l,f,c
 27662  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27663  000D70  22DA               	addwfc	fsr2h,f,c
 27664  000D72  50DF               	movf	indf2,w,c
 27665  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27666  000D76  90D8               	bcf	status,0,c
 27667  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 27668  000D7A  127C               	iorwf	3964,f,c	;volatile
 27669                           
 27670                           ; BSR set to: 0
 27671                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 27672  000D7C  EE20 F009          	lfsr	2,9
 27673  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27674  000D82  26D9               	addwf	fsr2l,f,c
 27675  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27676  000D86  22DA               	addwfc	fsr2h,f,c
 27677  000D88  50DF               	movf	indf2,w,c
 27678  000D8A  127C               	iorwf	3964,f,c	;volatile
 27679                           
 27680                           ; BSR set to: 0
 27681                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 27682  000D8C  EE20 F00B          	lfsr	2,11
 27683  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27684  000D92  26D9               	addwf	fsr2l,f,c
 27685  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27686  000D96  22DA               	addwfc	fsr2h,f,c
 27687  000D98  50DF               	movf	indf2,w,c
 27688  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27689  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27690  000D9E  50A3               	movf	4003,w,c	;volatile
 27691  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27692  000DA2  0BEF               	andlw	-17
 27693  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27694  000DA6  6EA3               	movwf	4003,c	;volatile
 27695                           
 27696                           ; BSR set to: 0
 27697                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 27698  000DA8  EE20 F00C          	lfsr	2,12
 27699  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 27700  000DAE  26D9               	addwf	fsr2l,f,c
 27701  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 27702  000DB2  22DA               	addwfc	fsr2h,f,c
 27703  000DB4  50DF               	movf	indf2,w,c
 27704  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 27705  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 27706  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 27707  000DBC  50A3               	movf	4003,w,c	;volatile
 27708  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27709  000DC0  0BDF               	andlw	-33
 27710  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 27711  000DC4  6EA3               	movwf	4003,c	;volatile
 27712                           
 27713                           ; BSR set to: 0
 27714  000DC6  0012               	return	
 27715  000DC8                     __end_of_Uart_InitUartModule:
 27716                           	opt stack 0
 27717                           tosu	equ	0xFFF
 27718                           tosh	equ	0xFFE
 27719                           tosl	equ	0xFFD
 27720                           pclath	equ	0xFFA
 27721                           tblptru	equ	0xFF8
 27722                           tblptrh	equ	0xFF7
 27723                           tblptrl	equ	0xFF6
 27724                           tablat	equ	0xFF5
 27725                           prodh	equ	0xFF4
 27726                           prodl	equ	0xFF3
 27727                           intcon	equ	0xFF2
 27728                           intcon2	equ	0xFF1
 27729                           intcon3	equ	0xFF0
 27730                           indf0	equ	0xFEF
 27731                           postinc0	equ	0xFEE
 27732                           plusw0	equ	0xFEB
 27733                           fsr0h	equ	0xFEA
 27734                           fsr0l	equ	0xFE9
 27735                           wreg	equ	0xFE8
 27736                           indf1	equ	0xFE7
 27737                           postinc1	equ	0xFE6
 27738                           postdec1	equ	0xFE5
 27739                           plusw1	equ	0xFE3
 27740                           fsr1h	equ	0xFE2
 27741                           fsr1l	equ	0xFE1
 27742                           indf2	equ	0xFDF
 27743                           postinc2	equ	0xFDE
 27744                           postdec2	equ	0xFDD
 27745                           plusw2	equ	0xFDB
 27746                           fsr2h	equ	0xFDA
 27747                           fsr2l	equ	0xFD9
 27748                           status	equ	0xFD8
 27749                           
 27750 ;; *************** function _SetUartBaudRate *****************
 27751 ;; Defined at:
 27752 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27753 ;; Parameters:    Size  Location     Type
 27754 ;;  Module          1    wreg     unsigned char 
 27755 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 27756 ;;		 -> UartConfig(21), 
 27757 ;; Auto vars:     Size  Location     Type
 27758 ;;  Module          1   57[BANK0 ] unsigned char 
 27759 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 27760 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 27761 ;; Return value:  Size  Location     Type
 27762 ;;                  1    wreg      void 
 27763 ;; Registers used:
 27764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27765 ;; Tracked objects:
 27766 ;;		On entry : 0/0
 27767 ;;		On exit  : 0/0
 27768 ;;		Unchanged: 0/0
 27769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27771 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27773 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27774 ;;Total ram usage:        7 bytes
 27775 ;; Hardware stack levels used:    1
 27776 ;; Hardware stack levels required when called:   12
 27777 ;; This function calls:
 27778 ;;		___lldiv
 27779 ;;		___lmul
 27780 ;; This function is called by:
 27781 ;;		_Uart_InitUartModule
 27782 ;; This function uses a non-reentrant model
 27783 ;;
 27784                           
 27785                           	psect	text129
 27786  002C4C                     __ptext129:
 27787                           	opt stack 0
 27788  002C4C                     _SetUartBaudRate:
 27789                           	opt stack 14
 27790                           
 27791                           ; BSR set to: 0
 27792                           ;incstack = 0
 27793                           ;SetUartBaudRate@Module stored from wreg
 27794  002C4C  0100               	movlb	0	; () banked
 27795  002C4E  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 27796                           
 27797                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 27798  002C50  0E00               	movlw	0
 27799  002C52  0100               	movlb	0	; () banked
 27800  002C54  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27801  002C56  0E00               	movlw	0
 27802  002C58  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27803                           
 27804                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 27805  002C5A  0E00               	movlw	0
 27806  002C5C  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27807                           
 27808                           ; BSR set to: 0
 27809                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 27810  002C5E  EE20 F002          	lfsr	2,2
 27811  002C62  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27812  002C64  26D9               	addwf	fsr2l,f,c
 27813  002C66  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27814  002C68  22DA               	addwfc	fsr2h,f,c
 27815  002C6A  50DF               	movf	indf2,w,c
 27816  002C6C  A4D8               	btfss	status,2,c
 27817  002C6E  D00B               	goto	l625
 27818                           
 27819                           ; BSR set to: 0
 27820  002C70  EE20 F002          	lfsr	2,2
 27821  002C74  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27822  002C76  26D9               	addwf	fsr2l,f,c
 27823  002C78  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27824  002C7A  22DA               	addwfc	fsr2h,f,c
 27825  002C7C  50DF               	movf	indf2,w,c
 27826  002C7E  A4D8               	btfss	status,2,c
 27827  002C80  D002               	goto	l625
 27828                           
 27829                           ; BSR set to: 0
 27830                           ;uart_drv.c: 128: {
 27831                           ;uart_drv.c: 129: DivisionFactor = 64;
 27832  002C82  0E40               	movlw	64
 27833  002C84  D039               	goto	L39
 27834  002C86                     l625:
 27835                           
 27836                           ; BSR set to: 0
 27837                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 27838                           
 27839                           ; BSR set to: 0
 27840  002C86  EE20 F002          	lfsr	2,2
 27841  002C8A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27842  002C8C  26D9               	addwf	fsr2l,f,c
 27843  002C8E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27844  002C90  22DA               	addwfc	fsr2h,f,c
 27845  002C92  04DE               	decf	postinc2,w,c
 27846  002C94  A4D8               	btfss	status,2,c
 27847  002C96  D009               	goto	l627
 27848                           
 27849                           ; BSR set to: 0
 27850  002C98  EE20 F002          	lfsr	2,2
 27851  002C9C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27852  002C9E  26D9               	addwf	fsr2l,f,c
 27853  002CA0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27854  002CA2  22DA               	addwfc	fsr2h,f,c
 27855  002CA4  50DF               	movf	indf2,w,c
 27856  002CA6  B4D8               	btfsc	status,2,c
 27857  002CA8  D012               	goto	u12440
 27858  002CAA                     l627:
 27859                           
 27860                           ; BSR set to: 0
 27861                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27862                           
 27863                           ; BSR set to: 0
 27864  002CAA  EE20 F002          	lfsr	2,2
 27865  002CAE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27866  002CB0  26D9               	addwf	fsr2l,f,c
 27867  002CB2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27868  002CB4  22DA               	addwfc	fsr2h,f,c
 27869  002CB6  50DF               	movf	indf2,w,c
 27870  002CB8  A4D8               	btfss	status,2,c
 27871  002CBA  D00B               	goto	l629
 27872                           
 27873                           ; BSR set to: 0
 27874  002CBC  EE20 F002          	lfsr	2,2
 27875  002CC0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27876  002CC2  26D9               	addwf	fsr2l,f,c
 27877  002CC4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27878  002CC6  22DA               	addwfc	fsr2h,f,c
 27879  002CC8  04DE               	decf	postinc2,w,c
 27880  002CCA  A4D8               	btfss	status,2,c
 27881  002CCC  D002               	goto	l629
 27882  002CCE                     u12440:
 27883                           
 27884                           ; BSR set to: 0
 27885                           ;uart_drv.c: 136: {
 27886                           ;uart_drv.c: 137: DivisionFactor = 16;
 27887  002CCE  0E10               	movlw	16
 27888  002CD0  D013               	goto	L39
 27889  002CD2                     l629:
 27890                           
 27891                           ; BSR set to: 0
 27892                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 27893                           
 27894                           ; BSR set to: 0
 27895  002CD2  EE20 F002          	lfsr	2,2
 27896  002CD6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27897  002CD8  26D9               	addwf	fsr2l,f,c
 27898  002CDA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27899  002CDC  22DA               	addwfc	fsr2h,f,c
 27900  002CDE  04DE               	decf	postinc2,w,c
 27901  002CE0  A4D8               	btfss	status,2,c
 27902  002CE2  D00B               	goto	l631
 27903                           
 27904                           ; BSR set to: 0
 27905  002CE4  EE20 F002          	lfsr	2,2
 27906  002CE8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27907  002CEA  26D9               	addwf	fsr2l,f,c
 27908  002CEC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27909  002CEE  22DA               	addwfc	fsr2h,f,c
 27910  002CF0  04DE               	decf	postinc2,w,c
 27911  002CF2  A4D8               	btfss	status,2,c
 27912  002CF4  D002               	goto	l631
 27913                           
 27914                           ; BSR set to: 0
 27915                           ;uart_drv.c: 140: {
 27916                           ;uart_drv.c: 141: DivisionFactor = 4;
 27917  002CF6  0E04               	movlw	4
 27918  002CF8                     L39:
 27919  002CF8  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 27920  002CFA                     l631:
 27921                           
 27922                           ; BSR set to: 0
 27923                           ;uart_drv.c: 146: }
 27924                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 27925                           
 27926                           ; BSR set to: 0
 27927                           
 27928                           ; BSR set to: 0
 27929                           
 27930                           ; BSR set to: 0
 27931                           
 27932                           ; BSR set to: 0
 27933                           
 27934                           ;uart_drv.c: 143: else
 27935                           ;uart_drv.c: 144: {
 27936                           
 27937                           ; BSR set to: 0
 27938  002CFA  EE20 F00D          	lfsr	2,13
 27939  002CFE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27940  002D00  26D9               	addwf	fsr2l,f,c
 27941  002D02  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27942  002D04  22DA               	addwfc	fsr2h,f,c
 27943  002D06  CFDE F089          	movff	postinc2,___lldiv@dividend
 27944  002D0A  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 27945  002D0E  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 27946  002D12  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 27947  002D16  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 27948  002D18  6F7D               	movwf	___lmul@multiplier& (0+255),b
 27949  002D1A  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 27950  002D1C  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 27951  002D1E  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 27952  002D20  EE20 F011          	lfsr	2,17
 27953  002D24  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 27954  002D26  26D9               	addwf	fsr2l,f,c
 27955  002D28  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 27956  002D2A  22DA               	addwfc	fsr2h,f,c
 27957  002D2C  CFDE F081          	movff	postinc2,___lmul@multiplicand
 27958  002D30  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 27959  002D34  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 27960  002D38  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 27961  002D3C  ECA4  F02B         	call	___lmul	;wreg free
 27962  002D40  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 27963  002D44  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 27964  002D48  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 27965  002D4C  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 27966  002D50  EC21  F028         	call	___lldiv	;wreg free
 27967  002D54  0EFF               	movlw	255
 27968  002D56  0100               	movlb	0	; () banked
 27969  002D58  2589               	addwf	?___lldiv& (0+255),w,b
 27970  002D5A  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 27971  002D5C  0EFF               	movlw	255
 27972  002D5E  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 27973  002D60  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 27974                           
 27975                           ; BSR set to: 0
 27976                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 27977  002D62  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 27978  002D64  A4D8               	btfss	status,2,c
 27979  002D66  D005               	goto	l633
 27980                           
 27981                           ; BSR set to: 0
 27982                           ;uart_drv.c: 152: {
 27983                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 27984  002D68  0E00               	movlw	0
 27985  002D6A  6E7F               	movwf	3967,c	;volatile
 27986                           
 27987                           ; BSR set to: 0
 27988                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 27989  002D6C  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 27990                           
 27991                           ;uart_drv.c: 156: }
 27992  002D70  0012               	return	
 27993  002D72                     l633:
 27994                           
 27995                           ; BSR set to: 0
 27996                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 27997                           
 27998                           ; BSR set to: 0
 27999  002D72  0E02               	movlw	2
 28000  002D74  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 28001  002D76  A4D8               	btfss	status,2,c
 28002  002D78  0012               	return	
 28003                           
 28004                           ; BSR set to: 0
 28005                           ;uart_drv.c: 158: {
 28006                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 28007  002D7A  0E00               	movlw	0
 28008  002D7C  6E7D               	movwf	3965,c	;volatile
 28009                           
 28010                           ; BSR set to: 0
 28011                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 28012  002D7E  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 28013                           
 28014                           ; BSR set to: 0
 28015  002D82  0012               	return	
 28016  002D84                     __end_of_SetUartBaudRate:
 28017                           	opt stack 0
 28018                           tosu	equ	0xFFF
 28019                           tosh	equ	0xFFE
 28020                           tosl	equ	0xFFD
 28021                           pclath	equ	0xFFA
 28022                           tblptru	equ	0xFF8
 28023                           tblptrh	equ	0xFF7
 28024                           tblptrl	equ	0xFF6
 28025                           tablat	equ	0xFF5
 28026                           prodh	equ	0xFF4
 28027                           prodl	equ	0xFF3
 28028                           intcon	equ	0xFF2
 28029                           intcon2	equ	0xFF1
 28030                           intcon3	equ	0xFF0
 28031                           indf0	equ	0xFEF
 28032                           postinc0	equ	0xFEE
 28033                           plusw0	equ	0xFEB
 28034                           fsr0h	equ	0xFEA
 28035                           fsr0l	equ	0xFE9
 28036                           wreg	equ	0xFE8
 28037                           indf1	equ	0xFE7
 28038                           postinc1	equ	0xFE6
 28039                           postdec1	equ	0xFE5
 28040                           plusw1	equ	0xFE3
 28041                           fsr1h	equ	0xFE2
 28042                           fsr1l	equ	0xFE1
 28043                           indf2	equ	0xFDF
 28044                           postinc2	equ	0xFDE
 28045                           postdec2	equ	0xFDD
 28046                           plusw2	equ	0xFDB
 28047                           fsr2h	equ	0xFDA
 28048                           fsr2l	equ	0xFD9
 28049                           status	equ	0xFD8
 28050                           
 28051 ;; *************** function ___lmul *****************
 28052 ;; Defined at:
 28053 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 28054 ;; Parameters:    Size  Location     Type
 28055 ;;  multiplier      4   29[BANK0 ] unsigned long 
 28056 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 28057 ;; Auto vars:     Size  Location     Type
 28058 ;;  product         4   37[BANK0 ] unsigned long 
 28059 ;; Return value:  Size  Location     Type
 28060 ;;                  4   29[BANK0 ] unsigned long 
 28061 ;; Registers used:
 28062 ;;		wreg, status,2, status,0
 28063 ;; Tracked objects:
 28064 ;;		On entry : 0/0
 28065 ;;		On exit  : 0/0
 28066 ;;		Unchanged: 0/0
 28067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28068 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28069 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28071 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28072 ;;Total ram usage:       12 bytes
 28073 ;; Hardware stack levels used:    1
 28074 ;; Hardware stack levels required when called:   11
 28075 ;; This function calls:
 28076 ;;		Nothing
 28077 ;; This function is called by:
 28078 ;;		_Tmr_TmrBPrSet
 28079 ;;		_SetUartBaudRate
 28080 ;;		_strtol
 28081 ;; This function uses a non-reentrant model
 28082 ;;
 28083                           
 28084                           	psect	text130
 28085  005748                     __ptext130:
 28086                           	opt stack 0
 28087  005748                     ___lmul:
 28088                           	opt stack 15
 28089                           
 28090                           ; BSR set to: 0
 28091                           ;incstack = 0
 28092  005748  0E00               	movlw	0
 28093  00574A  0100               	movlb	0	; () banked
 28094  00574C  6F85               	movwf	___lmul@product& (0+255),b
 28095  00574E  0E00               	movlw	0
 28096  005750  6F86               	movwf	(___lmul@product+1)& (0+255),b
 28097  005752  0E00               	movlw	0
 28098  005754  6F87               	movwf	(___lmul@product+2)& (0+255),b
 28099  005756  0E00               	movlw	0
 28100  005758  6F88               	movwf	(___lmul@product+3)& (0+255),b
 28101  00575A                     
 28102                           ; BSR set to: 0
 28103                           
 28104                           ; BSR set to: 0
 28105  00575A  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 28106  00575C  D008               	goto	l2850
 28107                           
 28108                           ; BSR set to: 0
 28109  00575E  5181               	movf	___lmul@multiplicand& (0+255),w,b
 28110  005760  2785               	addwf	___lmul@product& (0+255),f,b
 28111  005762  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 28112  005764  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 28113  005766  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 28114  005768  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 28115  00576A  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28116  00576C  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 28117  00576E                     l2850:
 28118                           
 28119                           ; BSR set to: 0
 28120                           
 28121                           ; BSR set to: 0
 28122  00576E  90D8               	bcf	status,0,c
 28123  005770  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 28124  005772  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 28125  005774  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 28126  005776  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 28127                           
 28128                           ; BSR set to: 0
 28129  005778  90D8               	bcf	status,0,c
 28130  00577A  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 28131  00577C  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 28132  00577E  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 28133  005780  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 28134  005782  517D               	movf	___lmul@multiplier& (0+255),w,b
 28135  005784  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 28136  005786  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 28137  005788  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 28138  00578A  A4D8               	btfss	status,2,c
 28139  00578C  D7E6               	goto	l2849
 28140                           
 28141                           ; BSR set to: 0
 28142  00578E  C085  F07D         	movff	___lmul@product,?___lmul
 28143  005792  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 28144  005796  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 28145  00579A  C088  F080         	movff	___lmul@product+3,?___lmul+3
 28146                           
 28147                           ; BSR set to: 0
 28148  00579E  0012               	return		;funcret
 28149  0057A0                     __end_of___lmul:
 28150                           	opt stack 0
 28151                           tosu	equ	0xFFF
 28152                           tosh	equ	0xFFE
 28153                           tosl	equ	0xFFD
 28154                           pclath	equ	0xFFA
 28155                           tblptru	equ	0xFF8
 28156                           tblptrh	equ	0xFF7
 28157                           tblptrl	equ	0xFF6
 28158                           tablat	equ	0xFF5
 28159                           prodh	equ	0xFF4
 28160                           prodl	equ	0xFF3
 28161                           intcon	equ	0xFF2
 28162                           intcon2	equ	0xFF1
 28163                           intcon3	equ	0xFF0
 28164                           indf0	equ	0xFEF
 28165                           postinc0	equ	0xFEE
 28166                           plusw0	equ	0xFEB
 28167                           fsr0h	equ	0xFEA
 28168                           fsr0l	equ	0xFE9
 28169                           wreg	equ	0xFE8
 28170                           indf1	equ	0xFE7
 28171                           postinc1	equ	0xFE6
 28172                           postdec1	equ	0xFE5
 28173                           plusw1	equ	0xFE3
 28174                           fsr1h	equ	0xFE2
 28175                           fsr1l	equ	0xFE1
 28176                           indf2	equ	0xFDF
 28177                           postinc2	equ	0xFDE
 28178                           postdec2	equ	0xFDD
 28179                           plusw2	equ	0xFDB
 28180                           fsr2h	equ	0xFDA
 28181                           fsr2l	equ	0xFD9
 28182                           status	equ	0xFD8
 28183                           
 28184 ;; *************** function _UartSetConfigLow *****************
 28185 ;; Defined at:
 28186 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28187 ;; Parameters:    Size  Location     Type
 28188 ;;		None
 28189 ;; Auto vars:     Size  Location     Type
 28190 ;;		None
 28191 ;; Return value:  Size  Location     Type
 28192 ;;                  1    wreg      void 
 28193 ;; Registers used:
 28194 ;;		wreg, status,2
 28195 ;; Tracked objects:
 28196 ;;		On entry : 0/0
 28197 ;;		On exit  : 0/0
 28198 ;;		Unchanged: 0/0
 28199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28204 ;;Total ram usage:        0 bytes
 28205 ;; Hardware stack levels used:    1
 28206 ;; Hardware stack levels required when called:   11
 28207 ;; This function calls:
 28208 ;;		Nothing
 28209 ;; This function is called by:
 28210 ;;		_ConfigureModem
 28211 ;; This function uses a non-reentrant model
 28212 ;;
 28213                           
 28214                           	psect	text131
 28215  0057A0                     __ptext131:
 28216                           	opt stack 0
 28217  0057A0                     _UartSetConfigLow:
 28218                           	opt stack 15
 28219                           
 28220                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 28221                           
 28222                           ; BSR set to: 0
 28223                           ;incstack = 0
 28224  0057A0  0E01               	movlw	1
 28225  0057A2  0103               	movlb	3	; () banked
 28226  0057A4  6F20               	movwf	_UartConfig& (0+255),b
 28227                           
 28228                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 28229  0057A6  0E00               	movlw	0
 28230  0057A8  6F21               	movwf	(_UartConfig+1)& (0+255),b
 28231                           
 28232                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 28233  0057AA  0E00               	movlw	0
 28234  0057AC  6F22               	movwf	(_UartConfig+2)& (0+255),b
 28235                           
 28236                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 28237  0057AE  0E00               	movlw	0
 28238  0057B0  6F23               	movwf	(_UartConfig+3)& (0+255),b
 28239                           
 28240                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 28241  0057B2  0E00               	movlw	0
 28242  0057B4  6F24               	movwf	(_UartConfig+4)& (0+255),b
 28243                           
 28244                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 28245  0057B6  0E00               	movlw	0
 28246  0057B8  6F25               	movwf	(_UartConfig+5)& (0+255),b
 28247                           
 28248                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 28249  0057BA  0E01               	movlw	1
 28250  0057BC  6F26               	movwf	(_UartConfig+6)& (0+255),b
 28251                           
 28252                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 28253  0057BE  0E01               	movlw	1
 28254  0057C0  6F27               	movwf	(_UartConfig+7)& (0+255),b
 28255                           
 28256                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 28257  0057C2  0E00               	movlw	0
 28258  0057C4  6F28               	movwf	(_UartConfig+8)& (0+255),b
 28259                           
 28260                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 28261  0057C6  0E00               	movlw	0
 28262  0057C8  6F29               	movwf	(_UartConfig+9)& (0+255),b
 28263                           
 28264                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 28265  0057CA  0E00               	movlw	0
 28266  0057CC  6F2A               	movwf	(_UartConfig+10)& (0+255),b
 28267                           
 28268                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 28269  0057CE  0E00               	movlw	0
 28270  0057D0  6F2B               	movwf	(_UartConfig+11)& (0+255),b
 28271                           
 28272                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 28273  0057D2  0E01               	movlw	1
 28274  0057D4  6F2C               	movwf	(_UartConfig+12)& (0+255),b
 28275                           
 28276                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 28277  0057D6  0E00               	movlw	0
 28278  0057D8  6F2D               	movwf	(_UartConfig+13)& (0+255),b
 28279  0057DA  0E6C               	movlw	108
 28280  0057DC  6F2E               	movwf	(_UartConfig+14)& (0+255),b
 28281  0057DE  0EDC               	movlw	220
 28282  0057E0  6F2F               	movwf	(_UartConfig+15)& (0+255),b
 28283  0057E2  0E02               	movlw	2
 28284  0057E4  6F30               	movwf	(_UartConfig+16)& (0+255),b
 28285                           
 28286                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 28287  0057E6  0E80               	movlw	128
 28288  0057E8  6F31               	movwf	(_UartConfig+17)& (0+255),b
 28289  0057EA  0E25               	movlw	37
 28290  0057EC  6F32               	movwf	(_UartConfig+18)& (0+255),b
 28291  0057EE  0E00               	movlw	0
 28292  0057F0  6F33               	movwf	(_UartConfig+19)& (0+255),b
 28293  0057F2  0E00               	movlw	0
 28294  0057F4  6F34               	movwf	(_UartConfig+20)& (0+255),b
 28295                           
 28296                           ; BSR set to: 3
 28297  0057F6  0012               	return		;funcret
 28298  0057F8                     __end_of_UartSetConfigLow:
 28299                           	opt stack 0
 28300                           tosu	equ	0xFFF
 28301                           tosh	equ	0xFFE
 28302                           tosl	equ	0xFFD
 28303                           pclath	equ	0xFFA
 28304                           tblptru	equ	0xFF8
 28305                           tblptrh	equ	0xFF7
 28306                           tblptrl	equ	0xFF6
 28307                           tablat	equ	0xFF5
 28308                           prodh	equ	0xFF4
 28309                           prodl	equ	0xFF3
 28310                           intcon	equ	0xFF2
 28311                           intcon2	equ	0xFF1
 28312                           intcon3	equ	0xFF0
 28313                           indf0	equ	0xFEF
 28314                           postinc0	equ	0xFEE
 28315                           plusw0	equ	0xFEB
 28316                           fsr0h	equ	0xFEA
 28317                           fsr0l	equ	0xFE9
 28318                           wreg	equ	0xFE8
 28319                           indf1	equ	0xFE7
 28320                           postinc1	equ	0xFE6
 28321                           postdec1	equ	0xFE5
 28322                           plusw1	equ	0xFE3
 28323                           fsr1h	equ	0xFE2
 28324                           fsr1l	equ	0xFE1
 28325                           indf2	equ	0xFDF
 28326                           postinc2	equ	0xFDE
 28327                           postdec2	equ	0xFDD
 28328                           plusw2	equ	0xFDB
 28329                           fsr2h	equ	0xFDA
 28330                           fsr2l	equ	0xFD9
 28331                           status	equ	0xFD8
 28332                           
 28333 ;; *************** function _CheckModem *****************
 28334 ;; Defined at:
 28335 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28336 ;; Parameters:    Size  Location     Type
 28337 ;;		None
 28338 ;; Auto vars:     Size  Location     Type
 28339 ;;		None
 28340 ;; Return value:  Size  Location     Type
 28341 ;;                  1    wreg      void 
 28342 ;; Registers used:
 28343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28344 ;; Tracked objects:
 28345 ;;		On entry : 0/0
 28346 ;;		On exit  : 0/0
 28347 ;;		Unchanged: 0/0
 28348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28353 ;;Total ram usage:        0 bytes
 28354 ;; Hardware stack levels used:    1
 28355 ;; Hardware stack levels required when called:   14
 28356 ;; This function calls:
 28357 ;;		_GenerateEvt
 28358 ;;		_OsTmr_GetTimerStatus
 28359 ;;		_OsTmr_StartTimer
 28360 ;;		_ReceiveEvt
 28361 ;;		_Uart_WriteConstString
 28362 ;; This function is called by:
 28363 ;;		_Mdm_MainTask
 28364 ;; This function uses a non-reentrant model
 28365 ;;
 28366                           
 28367                           	psect	text132
 28368  00286C                     __ptext132:
 28369                           	opt stack 0
 28370  00286C                     _CheckModem:
 28371                           	opt stack 13
 28372                           
 28373                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 28374                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 28375                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 28376                           
 28377                           ; BSR set to: 3
 28378                           ;incstack = 0
 28379  00286C  D096               	goto	l982
 28380  00286E                     
 28381                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 28382  00286E  0EF0               	movlw	low CheckModem@Timeout
 28383  002870  0100               	movlb	0	; () banked
 28384  002872  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28385  002874  0E03               	movlw	high CheckModem@Timeout
 28386  002876  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28387  002878  0ED0               	movlw	208
 28388  00287A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28389  00287C  0E07               	movlw	7
 28390  00287E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28391  002880  0E00               	movlw	0
 28392  002882  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28393  002884  0E00               	movlw	0
 28394  002886  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28395  002888  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 28396                           
 28397                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 28398  00288C  0E01               	movlw	1
 28399  00288E  6E29               	movwf	CheckModem@CheckMdmSts,c
 28400                           
 28401                           ;mdm_gsm_gprs.c: 295: break;
 28402  002890  0012               	return	
 28403  002892                     
 28404                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28405  002892  0EF0               	movlw	low CheckModem@Timeout
 28406  002894  0100               	movlb	0	; () banked
 28407  002896  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28408  002898  0E03               	movlw	high CheckModem@Timeout
 28409  00289A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28410  00289C  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28411  0028A0  06E8               	decf	wreg,f,c
 28412  0028A2  A4D8               	btfss	status,2,c
 28413  0028A4  0012               	return	
 28414                           
 28415                           ;mdm_gsm_gprs.c: 300: {
 28416                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 28417  0028A6  0E02               	movlw	2
 28418  0028A8  6E29               	movwf	CheckModem@CheckMdmSts,c
 28419                           
 28420                           ;mdm_gsm_gprs.c: 303: }
 28421                           ;mdm_gsm_gprs.c: 304: break;
 28422  0028AA  0012               	return	
 28423  0028AC                     
 28424                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 28425  0028AC  0EE6               	movlw	low STR_1
 28426  0028AE  0100               	movlb	0	; () banked
 28427  0028B0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28428  0028B2  0EFF               	movlw	high STR_1
 28429  0028B4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28430  0028B6  0E01               	movlw	1
 28431  0028B8  EC78  F02F         	call	_Uart_WriteConstString
 28432                           
 28433                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 28434  0028BC  0EF0               	movlw	low CheckModem@Timeout
 28435  0028BE  0100               	movlb	0	; () banked
 28436  0028C0  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28437  0028C2  0E03               	movlw	high CheckModem@Timeout
 28438  0028C4  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28439  0028C6  0ED0               	movlw	208
 28440  0028C8  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28441  0028CA  0E07               	movlw	7
 28442  0028CC  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28443  0028CE  0E00               	movlw	0
 28444  0028D0  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28445  0028D2  0E00               	movlw	0
 28446  0028D4  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28447  0028D6  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 28448                           
 28449                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 28450  0028DA  0E03               	movlw	3
 28451  0028DC  6E29               	movwf	CheckModem@CheckMdmSts,c
 28452                           
 28453                           ;mdm_gsm_gprs.c: 313: break;
 28454  0028DE  0012               	return	
 28455  0028E0                     
 28456                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 28457  0028E0  0E3C               	movlw	low _NewStringReceived
 28458  0028E2  0100               	movlb	0	; () banked
 28459  0028E4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28460  0028E6  0E00               	movlw	high _NewStringReceived
 28461  0028E8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28462  0028EA  ECA8  F031         	call	_ReceiveEvt	;wreg free
 28463  0028EE  0900               	iorlw	0
 28464  0028F0  B4D8               	btfsc	status,2,c
 28465  0028F2  D02F               	goto	l989
 28466                           
 28467                           ;mdm_gsm_gprs.c: 318: {
 28468                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 28469  0028F4  CC58  FFE8         	movff	_RxBuffer,wreg
 28470  0028F8  0A4F               	xorlw	79
 28471  0028FA  A4D8               	btfss	status,2,c
 28472  0028FC  D005               	goto	u14350
 28473  0028FE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28474  002902  0A4B               	xorlw	75
 28475  002904  B4D8               	btfsc	status,2,c
 28476  002906  D00A               	goto	u14370
 28477  002908                     u14350:
 28478  002908  CC59  FFE8         	movff	_RxBuffer+1,wreg
 28479  00290C  0A4F               	xorlw	79
 28480  00290E  A4D8               	btfss	status,2,c
 28481  002910  0012               	return	
 28482  002912  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 28483  002916  0A4B               	xorlw	75
 28484  002918  A4D8               	btfss	status,2,c
 28485  00291A  0012               	return	
 28486  00291C                     u14370:
 28487                           
 28488                           ;mdm_gsm_gprs.c: 321: {
 28489                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 28490  00291C  0E02               	movlw	2
 28491  00291E  0100               	movlb	0	; () banked
 28492  002920  6FD0               	movwf	_MdmStatus& (0+255),b
 28493                           
 28494                           ; BSR set to: 0
 28495                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 28496  002922  0EE0               	movlw	low _MdmOnOffPulseRequest
 28497  002924  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28498  002926  0E00               	movlw	high _MdmOnOffPulseRequest
 28499  002928  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28500  00292A  EC9D  F033         	call	_GenerateEvt	;wreg free
 28501                           
 28502                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 28503  00292E  0EF0               	movlw	low CheckModem@Timeout
 28504  002930  0100               	movlb	0	; () banked
 28505  002932  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 28506  002934  0E03               	movlw	high CheckModem@Timeout
 28507  002936  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 28508  002938  0EE8               	movlw	232
 28509  00293A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 28510  00293C  0E03               	movlw	3
 28511  00293E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 28512  002940  0E00               	movlw	0
 28513  002942  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 28514  002944  0E00               	movlw	0
 28515  002946  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 28516  002948  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 28517                           
 28518                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 28519  00294C  0E04               	movlw	4
 28520  00294E  6E29               	movwf	CheckModem@CheckMdmSts,c
 28521                           
 28522                           ;mdm_gsm_gprs.c: 329: }
 28523                           ;mdm_gsm_gprs.c: 330: }
 28524  002950  0012               	return	
 28525  002952                     l989:
 28526                           
 28527                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28528  002952  0EF0               	movlw	low CheckModem@Timeout
 28529  002954  0100               	movlb	0	; () banked
 28530  002956  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28531  002958  0E03               	movlw	high CheckModem@Timeout
 28532  00295A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28533  00295C  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28534  002960  06E8               	decf	wreg,f,c
 28535  002962  A4D8               	btfss	status,2,c
 28536  002964  0012               	return	
 28537                           
 28538                           ;mdm_gsm_gprs.c: 332: {
 28539                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 28540  002966  0E00               	movlw	0
 28541  002968  0100               	movlb	0	; () banked
 28542  00296A  6FD0               	movwf	_MdmStatus& (0+255),b
 28543                           
 28544                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 28545  00296C  0E01               	movlw	1
 28546  00296E  6E2A               	movwf	_ComChecCompleted,c
 28547                           
 28548                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 28549  002970  0E05               	movlw	5
 28550  002972  6E29               	movwf	CheckModem@CheckMdmSts,c
 28551                           
 28552                           ; BSR set to: 0
 28553                           ;mdm_gsm_gprs.c: 343: }
 28554                           ;mdm_gsm_gprs.c: 344: break;
 28555                           
 28556                           ; BSR set to: 0
 28557                           
 28558                           ;mdm_gsm_gprs.c: 340: else
 28559                           ;mdm_gsm_gprs.c: 341: {
 28560                           
 28561                           ; BSR set to: 0
 28562                           
 28563                           ;mdm_gsm_gprs.c: 339: }
 28564  002974  0012               	return	
 28565  002976                     
 28566                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 28567                           
 28568                           ; BSR set to: 0
 28569  002976  0EF0               	movlw	low CheckModem@Timeout
 28570  002978  0100               	movlb	0	; () banked
 28571  00297A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 28572  00297C  0E03               	movlw	high CheckModem@Timeout
 28573  00297E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 28574  002980  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 28575  002984  06E8               	decf	wreg,f,c
 28576  002986  A4D8               	btfss	status,2,c
 28577  002988  0012               	return	
 28578                           
 28579                           ;mdm_gsm_gprs.c: 349: {
 28580                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 28581  00298A  0E00               	movlw	0
 28582  00298C  0100               	movlb	0	; () banked
 28583  00298E  6FD0               	movwf	_MdmStatus& (0+255),b
 28584                           
 28585                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 28586  002990  0E01               	movlw	1
 28587  002992  6E2A               	movwf	_ComChecCompleted,c
 28588                           
 28589                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 28590  002994  0E05               	movlw	5
 28591  002996  6E29               	movwf	CheckModem@CheckMdmSts,c
 28592                           
 28593                           ; BSR set to: 0
 28594                           ;mdm_gsm_gprs.c: 365: }
 28595                           
 28596                           ; BSR set to: 0
 28597                           ;mdm_gsm_gprs.c: 364: break;
 28598                           
 28599                           ;mdm_gsm_gprs.c: 363: default:
 28600                           
 28601                           ; BSR set to: 0
 28602                           ;mdm_gsm_gprs.c: 361: break;
 28603                           
 28604                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 28605                           
 28606                           ; BSR set to: 0
 28607                           ;mdm_gsm_gprs.c: 356: }
 28608                           ;mdm_gsm_gprs.c: 357: break;
 28609  002998  0012               	return	
 28610  00299A                     l982:
 28611                           
 28612                           ; BSR set to: 0
 28613  00299A  5029               	movf	CheckModem@CheckMdmSts,w,c
 28614                           
 28615                           ; Switch size 1, requested type "space"
 28616                           ; Number of cases is 6, Range of values is 0 to 5
 28617                           ; switch strategies available:
 28618                           ; Name         Instructions Cycles
 28619                           ; simple_byte           19    10 (average)
 28620                           ;	Chosen strategy is simple_byte
 28621  00299C  0A00               	xorlw	0	; case 0
 28622  00299E  B4D8               	btfsc	status,2,c
 28623  0029A0  D766               	goto	l983
 28624  0029A2  0A01               	xorlw	1	; case 1
 28625  0029A4  B4D8               	btfsc	status,2,c
 28626  0029A6  D775               	goto	l985
 28627  0029A8  0A03               	xorlw	3	; case 2
 28628  0029AA  B4D8               	btfsc	status,2,c
 28629  0029AC  D77F               	goto	l987
 28630  0029AE  0A01               	xorlw	1	; case 3
 28631  0029B0  B4D8               	btfsc	status,2,c
 28632  0029B2  D796               	goto	l988
 28633  0029B4  0A07               	xorlw	7	; case 4
 28634  0029B6  B4D8               	btfsc	status,2,c
 28635  0029B8  D7DE               	goto	l998
 28636  0029BA  0A01               	xorlw	1	; case 5
 28637  0029BC  0012               	return	
 28638  0029BE                     __end_of_CheckModem:
 28639                           	opt stack 0
 28640                           tosu	equ	0xFFF
 28641                           tosh	equ	0xFFE
 28642                           tosl	equ	0xFFD
 28643                           pclath	equ	0xFFA
 28644                           tblptru	equ	0xFF8
 28645                           tblptrh	equ	0xFF7
 28646                           tblptrl	equ	0xFF6
 28647                           tablat	equ	0xFF5
 28648                           prodh	equ	0xFF4
 28649                           prodl	equ	0xFF3
 28650                           intcon	equ	0xFF2
 28651                           intcon2	equ	0xFF1
 28652                           intcon3	equ	0xFF0
 28653                           indf0	equ	0xFEF
 28654                           postinc0	equ	0xFEE
 28655                           plusw0	equ	0xFEB
 28656                           fsr0h	equ	0xFEA
 28657                           fsr0l	equ	0xFE9
 28658                           wreg	equ	0xFE8
 28659                           indf1	equ	0xFE7
 28660                           postinc1	equ	0xFE6
 28661                           postdec1	equ	0xFE5
 28662                           plusw1	equ	0xFE3
 28663                           fsr1h	equ	0xFE2
 28664                           fsr1l	equ	0xFE1
 28665                           indf2	equ	0xFDF
 28666                           postinc2	equ	0xFDE
 28667                           postdec2	equ	0xFDD
 28668                           plusw2	equ	0xFDB
 28669                           fsr2h	equ	0xFDA
 28670                           fsr2l	equ	0xFD9
 28671                           status	equ	0xFD8
 28672                           
 28673 ;; *************** function _MdmCntSm *****************
 28674 ;; Defined at:
 28675 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28676 ;; Parameters:    Size  Location     Type
 28677 ;;		None
 28678 ;; Auto vars:     Size  Location     Type
 28679 ;;		None
 28680 ;; Return value:  Size  Location     Type
 28681 ;;                  1    wreg      void 
 28682 ;; Registers used:
 28683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28684 ;; Tracked objects:
 28685 ;;		On entry : 0/0
 28686 ;;		On exit  : 0/0
 28687 ;;		Unchanged: 0/0
 28688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28693 ;;Total ram usage:        0 bytes
 28694 ;; Hardware stack levels used:    1
 28695 ;; Hardware stack levels required when called:   12
 28696 ;; This function calls:
 28697 ;;		_InitModemInterface
 28698 ;;		_ReceiveEvt
 28699 ;; This function is called by:
 28700 ;;		_Mdm_DrvMainFn
 28701 ;; This function uses a non-reentrant model
 28702 ;;
 28703                           
 28704                           	psect	text133
 28705  00463E                     __ptext133:
 28706                           	opt stack 0
 28707  00463E                     _MdmCntSm:
 28708                           	opt stack 15
 28709                           
 28710                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 28711                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 28712                           ;mdm_drv.c: 204: switch (MdmCntState)
 28713                           
 28714                           ;incstack = 0
 28715  00463E  D045               	goto	l315
 28716  004640                     
 28717                           ;mdm_drv.c: 208: InitModemInterface();
 28718  004640  EC61  F034         	call	_InitModemInterface	;wreg free
 28719                           
 28720                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 28721  004644  0E01               	movlw	1
 28722  004646  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28723                           
 28724                           ;mdm_drv.c: 211: break;
 28725  004648  0012               	return	
 28726  00464A                     
 28727                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 28728  00464A  0EE0               	movlw	low _MdmOnOffPulseRequest
 28729  00464C  0100               	movlb	0	; () banked
 28730  00464E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28731  004650  0E00               	movlw	high _MdmOnOffPulseRequest
 28732  004652  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28733  004654  ECA8  F031         	call	_ReceiveEvt	;wreg free
 28734  004658  0900               	iorlw	0
 28735  00465A  B4D8               	btfsc	status,2,c
 28736  00465C  D009               	goto	l319
 28737                           
 28738                           ;mdm_drv.c: 216: {
 28739                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 28740  00465E  0E02               	movlw	2
 28741  004660  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28742                           
 28743                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 28744  004662  8284               	bsf	3972,1,c	;volatile
 28745                           
 28746                           ;mdm_drv.c: 222: Counter = 0;
 28747  004664  0E00               	movlw	0
 28748  004666  0102               	movlb	2	; () banked
 28749  004668  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28750  00466A  0E00               	movlw	0
 28751  00466C  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28752                           
 28753                           ;mdm_drv.c: 223: }
 28754  00466E  0012               	return	
 28755  004670                     l319:
 28756                           
 28757                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 28758                           
 28759                           ; BSR set to: 2
 28760  004670  0E3D               	movlw	low _MdmResetRequest
 28761  004672  0100               	movlb	0	; () banked
 28762  004674  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 28763  004676  0E00               	movlw	high _MdmResetRequest
 28764  004678  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 28765  00467A  ECA8  F031         	call	_ReceiveEvt	;wreg free
 28766  00467E  0900               	iorlw	0
 28767  004680  B4D8               	btfsc	status,2,c
 28768  004682  0012               	return	
 28769                           
 28770                           ;mdm_drv.c: 225: {
 28771                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 28772  004684  0E03               	movlw	3
 28773  004686  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28774                           
 28775                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 28776  004688  8084               	bsf	3972,0,c	;volatile
 28777                           
 28778                           ;mdm_drv.c: 231: Counter = 0;
 28779  00468A  0E00               	movlw	0
 28780  00468C  0102               	movlb	2	; () banked
 28781  00468E  6FDD               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 28782  004690  0E00               	movlw	0
 28783  004692  6FDC               	movwf	MdmCntSm@Counter& (0+255),b
 28784                           
 28785                           ; BSR set to: 2
 28786                           ;mdm_drv.c: 236: }
 28787                           ;mdm_drv.c: 237: break;
 28788                           
 28789                           ; BSR set to: 2
 28790                           
 28791                           ;mdm_drv.c: 233: else
 28792                           ;mdm_drv.c: 234: {
 28793                           
 28794                           ; BSR set to: 2
 28795                           
 28796                           ;mdm_drv.c: 232: }
 28797  004694  0012               	return	
 28798  004696                     
 28799                           ;mdm_drv.c: 241: Counter++;
 28800                           
 28801                           ; BSR set to: 2
 28802  004696  0102               	movlb	2	; () banked
 28803  004698  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28804  00469A  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28805                           
 28806                           ; BSR set to: 2
 28807                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 28808  00469C  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28809  00469E  E104               	bnz	u14270
 28810  0046A0  0E96               	movlw	150
 28811  0046A2  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28812  0046A4  A0D8               	btfss	status,0,c
 28813  0046A6  0012               	return	
 28814  0046A8                     u14270:
 28815                           
 28816                           ; BSR set to: 2
 28817                           ;mdm_drv.c: 244: {
 28818                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 28819  0046A8  9284               	bcf	3972,1,c	;volatile
 28820                           
 28821                           ; BSR set to: 2
 28822                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 28823  0046AA  0E01               	movlw	1
 28824  0046AC  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28825                           
 28826                           ; BSR set to: 2
 28827                           ;mdm_drv.c: 249: }
 28828                           ;mdm_drv.c: 250: break;
 28829  0046AE  0012               	return	
 28830  0046B0                     
 28831                           ;mdm_drv.c: 254: Counter++;
 28832                           
 28833                           ; BSR set to: 2
 28834  0046B0  0102               	movlb	2	; () banked
 28835  0046B2  4BDC               	infsnz	MdmCntSm@Counter& (0+255),f,b
 28836  0046B4  2BDD               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 28837                           
 28838                           ; BSR set to: 2
 28839                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 28840  0046B6  51DD               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 28841  0046B8  E104               	bnz	u14280
 28842  0046BA  0E0A               	movlw	10
 28843  0046BC  5DDC               	subwf	MdmCntSm@Counter& (0+255),w,b
 28844  0046BE  A0D8               	btfss	status,0,c
 28845  0046C0  0012               	return	
 28846  0046C2                     u14280:
 28847                           
 28848                           ; BSR set to: 2
 28849                           ;mdm_drv.c: 257: {
 28850                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 28851  0046C2  9084               	bcf	3972,0,c	;volatile
 28852                           
 28853                           ; BSR set to: 2
 28854                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 28855  0046C4  0E01               	movlw	1
 28856  0046C6  6E2D               	movwf	MdmCntSm@MdmCntState,c
 28857                           
 28858                           ; BSR set to: 2
 28859                           ;mdm_drv.c: 267: }
 28860                           
 28861                           ; BSR set to: 2
 28862                           ;mdm_drv.c: 266: break;
 28863                           
 28864                           ;mdm_drv.c: 265: default:
 28865                           
 28866                           ; BSR set to: 2
 28867                           ;mdm_drv.c: 262: }
 28868                           ;mdm_drv.c: 263: break;
 28869  0046C8  0012               	return	
 28870  0046CA                     l315:
 28871                           
 28872                           ; BSR set to: 2
 28873  0046CA  502D               	movf	MdmCntSm@MdmCntState,w,c
 28874                           
 28875                           ; Switch size 1, requested type "space"
 28876                           ; Number of cases is 4, Range of values is 0 to 3
 28877                           ; switch strategies available:
 28878                           ; Name         Instructions Cycles
 28879                           ; simple_byte           13     7 (average)
 28880                           ;	Chosen strategy is simple_byte
 28881  0046CC  0A00               	xorlw	0	; case 0
 28882  0046CE  B4D8               	btfsc	status,2,c
 28883  0046D0  D7B7               	goto	l316
 28884  0046D2  0A01               	xorlw	1	; case 1
 28885  0046D4  B4D8               	btfsc	status,2,c
 28886  0046D6  D7B9               	goto	l318
 28887  0046D8  0A03               	xorlw	3	; case 2
 28888  0046DA  B4D8               	btfsc	status,2,c
 28889  0046DC  D7DC               	goto	l323
 28890  0046DE  0A01               	xorlw	1	; case 3
 28891  0046E0  A4D8               	btfss	status,2,c
 28892  0046E2  0012               	return	
 28893  0046E4  D7E5               	goto	l325
 28894  0046E6                     __end_of_MdmCntSm:
 28895                           	opt stack 0
 28896                           tosu	equ	0xFFF
 28897                           tosh	equ	0xFFE
 28898                           tosl	equ	0xFFD
 28899                           pclath	equ	0xFFA
 28900                           tblptru	equ	0xFF8
 28901                           tblptrh	equ	0xFF7
 28902                           tblptrl	equ	0xFF6
 28903                           tablat	equ	0xFF5
 28904                           prodh	equ	0xFF4
 28905                           prodl	equ	0xFF3
 28906                           intcon	equ	0xFF2
 28907                           intcon2	equ	0xFF1
 28908                           intcon3	equ	0xFF0
 28909                           indf0	equ	0xFEF
 28910                           postinc0	equ	0xFEE
 28911                           plusw0	equ	0xFEB
 28912                           fsr0h	equ	0xFEA
 28913                           fsr0l	equ	0xFE9
 28914                           wreg	equ	0xFE8
 28915                           indf1	equ	0xFE7
 28916                           postinc1	equ	0xFE6
 28917                           postdec1	equ	0xFE5
 28918                           plusw1	equ	0xFE3
 28919                           fsr1h	equ	0xFE2
 28920                           fsr1l	equ	0xFE1
 28921                           indf2	equ	0xFDF
 28922                           postinc2	equ	0xFDE
 28923                           postdec2	equ	0xFDD
 28924                           plusw2	equ	0xFDB
 28925                           fsr2h	equ	0xFDA
 28926                           fsr2l	equ	0xFD9
 28927                           status	equ	0xFD8
 28928                           
 28929 ;; *************** function _InitModemInterface *****************
 28930 ;; Defined at:
 28931 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 28932 ;; Parameters:    Size  Location     Type
 28933 ;;		None
 28934 ;; Auto vars:     Size  Location     Type
 28935 ;;		None
 28936 ;; Return value:  Size  Location     Type
 28937 ;;                  1    wreg      void 
 28938 ;; Registers used:
 28939 ;;		None
 28940 ;; Tracked objects:
 28941 ;;		On entry : 0/0
 28942 ;;		On exit  : 0/0
 28943 ;;		Unchanged: 0/0
 28944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28949 ;;Total ram usage:        0 bytes
 28950 ;; Hardware stack levels used:    1
 28951 ;; Hardware stack levels required when called:   11
 28952 ;; This function calls:
 28953 ;;		Nothing
 28954 ;; This function is called by:
 28955 ;;		_MdmCntSm
 28956 ;; This function uses a non-reentrant model
 28957 ;;
 28958                           
 28959                           	psect	text134
 28960  0068C2                     __ptext134:
 28961                           	opt stack 0
 28962  0068C2                     _InitModemInterface:
 28963                           	opt stack 15
 28964                           
 28965                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 28966                           
 28967                           ;incstack = 0
 28968  0068C2  9096               	bcf	3990,0,c	;volatile
 28969                           
 28970                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 28971  0068C4  9296               	bcf	3990,1,c	;volatile
 28972                           
 28973                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 28974  0068C6  8496               	bsf	3990,2,c	;volatile
 28975  0068C8  0012               	return		;funcret
 28976  0068CA                     __end_of_InitModemInterface:
 28977                           	opt stack 0
 28978                           tosu	equ	0xFFF
 28979                           tosh	equ	0xFFE
 28980                           tosl	equ	0xFFD
 28981                           pclath	equ	0xFFA
 28982                           tblptru	equ	0xFF8
 28983                           tblptrh	equ	0xFF7
 28984                           tblptrl	equ	0xFF6
 28985                           tablat	equ	0xFF5
 28986                           prodh	equ	0xFF4
 28987                           prodl	equ	0xFF3
 28988                           intcon	equ	0xFF2
 28989                           intcon2	equ	0xFF1
 28990                           intcon3	equ	0xFF0
 28991                           indf0	equ	0xFEF
 28992                           postinc0	equ	0xFEE
 28993                           plusw0	equ	0xFEB
 28994                           fsr0h	equ	0xFEA
 28995                           fsr0l	equ	0xFE9
 28996                           wreg	equ	0xFE8
 28997                           indf1	equ	0xFE7
 28998                           postinc1	equ	0xFE6
 28999                           postdec1	equ	0xFE5
 29000                           plusw1	equ	0xFE3
 29001                           fsr1h	equ	0xFE2
 29002                           fsr1l	equ	0xFE1
 29003                           indf2	equ	0xFDF
 29004                           postinc2	equ	0xFDE
 29005                           postdec2	equ	0xFDD
 29006                           plusw2	equ	0xFDB
 29007                           fsr2h	equ	0xFDA
 29008                           fsr2l	equ	0xFD9
 29009                           status	equ	0xFD8
 29010                           
 29011 ;; *************** function _InitGprsNetwork *****************
 29012 ;; Defined at:
 29013 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29014 ;; Parameters:    Size  Location     Type
 29015 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 29016 ;;		 -> NULL(0), 
 29017 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 29018 ;; Auto vars:     Size  Location     Type
 29019 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 29020 ;;  Index           1   50[BANK1 ] unsigned char 
 29021 ;; Return value:  Size  Location     Type
 29022 ;;                  1    wreg      enum E8923
 29023 ;; Registers used:
 29024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29025 ;; Tracked objects:
 29026 ;;		On entry : 0/0
 29027 ;;		On exit  : 0/0
 29028 ;;		Unchanged: 0/0
 29029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29030 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29031 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29033 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29034 ;;Total ram usage:       56 bytes
 29035 ;; Hardware stack levels used:    1
 29036 ;; Hardware stack levels required when called:   14
 29037 ;; This function calls:
 29038 ;;		_ClearBuffer
 29039 ;;		_OsTmr_GetTimerStatus
 29040 ;;		_OsTmr_StartTimer
 29041 ;;		_ReceiveEvt
 29042 ;;		_StringCopy
 29043 ;;		_Uart_WriteConstString
 29044 ;;		_Uart_WriteString
 29045 ;; This function is called by:
 29046 ;;		_MdmHttp_MainTask
 29047 ;; This function uses a non-reentrant model
 29048 ;;
 29049                           
 29050                           	psect	text135
 29051  0010B6                     __ptext135:
 29052                           	opt stack 0
 29053  0010B6                     _InitGprsNetwork:
 29054                           	opt stack 13
 29055                           
 29056                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 29057                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 29058                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 29059                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 29060                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 29061                           
 29062                           ;incstack = 0
 29063  0010B6  0E00               	movlw	0
 29064  0010B8  0101               	movlb	1	; () banked
 29065  0010BA  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 29066                           
 29067                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 29068  0010BC  D154               	goto	l1219
 29069  0010BE                     
 29070                           ; BSR set to: 1
 29071                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 29072                           
 29073                           ; BSR set to: 1
 29074  0010BE  0ED9               	movlw	low _InitNetwork
 29075  0010C0  0100               	movlb	0	; () banked
 29076  0010C2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29077  0010C4  0E00               	movlw	high _InitNetwork
 29078  0010C6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29079  0010C8  ECA8  F031         	call	_ReceiveEvt	;wreg free
 29080  0010CC  0900               	iorlw	0
 29081  0010CE  B4D8               	btfsc	status,2,c
 29082  0010D0  D166               	goto	l1222
 29083                           
 29084                           ;mdm_gsm_gprs_http.c: 137: {
 29085                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 29086  0010D2  0E01               	movlw	1
 29087  0010D4  D141               	goto	L79
 29088  0010D6                     
 29089                           ; BSR set to: 1
 29090                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 29091                           
 29092                           ; BSR set to: 1
 29093  0010D6  0E89               	movlw	low STR_8
 29094  0010D8  0100               	movlb	0	; () banked
 29095  0010DA  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29096  0010DC  0EFE               	movlw	high STR_8
 29097  0010DE  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29098  0010E0  0E01               	movlw	1
 29099  0010E2  EC78  F02F         	call	_Uart_WriteConstString
 29100                           
 29101                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 29102  0010E6  0E07               	movlw	7
 29103  0010E8  0101               	movlb	1	; () banked
 29104  0010EA  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29105                           
 29106                           ; BSR set to: 1
 29107                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 29108  0010EC  0E02               	movlw	2
 29109  0010EE  0100               	movlb	0	; () banked
 29110  0010F0  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29111                           
 29112                           ; BSR set to: 0
 29113                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 29114  0010F2  0EF5               	movlw	low _ConnTimeout
 29115  0010F4  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29116  0010F6  0E02               	movlw	high _ConnTimeout
 29117  0010F8  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29118  0010FA  0E20               	movlw	32
 29119  0010FC  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29120  0010FE  0E4E               	movlw	78
 29121  001100  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29122  001102  0E00               	movlw	0
 29123  001104  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29124  001106  0E00               	movlw	0
 29125  001108  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29126  00110A  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 29127  00110E  D0C7               	goto	l15210
 29128  001110                     
 29129                           ; BSR set to: 1
 29130                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 29131                           
 29132                           ; BSR set to: 1
 29133  001110  0E00               	movlw	low InitGprsNetwork@UartMessage
 29134  001112  0100               	movlb	0	; () banked
 29135  001114  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29136  001116  0E01               	movlw	high InitGprsNetwork@UartMessage
 29137  001118  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29138  00111A  0E00               	movlw	0
 29139  00111C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29140  00111E  0E32               	movlw	50
 29141  001120  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29142  001122  ECCA  F030         	call	_ClearBuffer	;wreg free
 29143                           
 29144                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 29145  001126  0EBD               	movlw	low STR_9
 29146  001128  0100               	movlb	0	; () banked
 29147  00112A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 29148  00112C  0EFE               	movlw	high STR_9
 29149  00112E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29150  001130  0E00               	movlw	low InitGprsNetwork@UartMessage
 29151  001132  6F87               	movwf	StringCopy@DestStr& (0+255),b
 29152  001134  0E01               	movlw	high InitGprsNetwork@UartMessage
 29153  001136  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29154  001138  0E00               	movlw	0
 29155  00113A  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 29156  00113C  0E14               	movlw	20
 29157  00113E  6F89               	movwf	StringCopy@Len& (0+255),b
 29158  001140  ECBB  F02A         	call	_StringCopy	;wreg free
 29159                           
 29160                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 29161  001144  0E00               	movlw	0
 29162  001146  0101               	movlb	1	; () banked
 29163  001148  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 29164  00114A  D01C               	goto	l1225
 29165  00114C                     
 29166                           ; BSR set to: 1
 29167                           ;mdm_gsm_gprs_http.c: 161: {
 29168                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 29169                           
 29170                           ; BSR set to: 1
 29171  00114C  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29172  00114E  0D01               	mullw	1
 29173  001150  50F3               	movf	prodl,w,c
 29174  001152  0100               	movlb	0	; () banked
 29175  001154  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 29176  001156  6ED9               	movwf	fsr2l,c
 29177  001158  50F4               	movf	prodh,w,c
 29178  00115A  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 29179  00115C  6EDA               	movwf	fsr2h,c
 29180  00115E  0101               	movlb	1	; () banked
 29181  001160  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29182  001162  0100               	movlb	0	; () banked
 29183  001164  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29184  001166  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29185  001168  0E14               	movlw	20
 29186  00116A  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29187  00116C  0E00               	movlw	0
 29188  00116E  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29189  001170  0E00               	movlw	low InitGprsNetwork@UartMessage
 29190  001172  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29191  001174  6EE1               	movwf	fsr1l,c
 29192  001176  0E01               	movlw	high InitGprsNetwork@UartMessage
 29193  001178  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29194  00117A  6EE2               	movwf	fsr1h,c
 29195  00117C  CFDF FFE7          	movff	indf2,indf1
 29196                           
 29197                           ; BSR set to: 0
 29198  001180  0101               	movlb	1	; () banked
 29199  001182  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 29200  001184                     l1225:
 29201                           
 29202                           ; BSR set to: 1
 29203                           
 29204                           ; BSR set to: 1
 29205  001184  0100               	movlb	0	; () banked
 29206  001186  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 29207  001188  0101               	movlb	1	; () banked
 29208  00118A  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 29209  00118C  A0D8               	btfss	status,0,c
 29210  00118E  D7DE               	goto	l1226
 29211                           
 29212                           ; BSR set to: 1
 29213                           ;mdm_gsm_gprs_http.c: 163: }
 29214                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 29215                           
 29216                           ; BSR set to: 1
 29217  001190  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29218  001192  0100               	movlb	0	; () banked
 29219  001194  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29220  001196  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29221  001198  0E14               	movlw	20
 29222  00119A  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29223  00119C  0E00               	movlw	0
 29224  00119E  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29225  0011A0  0E00               	movlw	low InitGprsNetwork@UartMessage
 29226  0011A2  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29227  0011A4  6ED9               	movwf	fsr2l,c
 29228  0011A6  0E01               	movlw	high InitGprsNetwork@UartMessage
 29229  0011A8  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29230  0011AA  6EDA               	movwf	fsr2h,c
 29231  0011AC  0E22               	movlw	34
 29232  0011AE  6EDF               	movwf	indf2,c
 29233                           
 29234                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 29235  0011B0  0101               	movlb	1	; () banked
 29236  0011B2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29237  0011B4  0100               	movlb	0	; () banked
 29238  0011B6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29239  0011B8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29240  0011BA  0E15               	movlw	21
 29241  0011BC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29242  0011BE  0E00               	movlw	0
 29243  0011C0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29244  0011C2  0E00               	movlw	low InitGprsNetwork@UartMessage
 29245  0011C4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29246  0011C6  6ED9               	movwf	fsr2l,c
 29247  0011C8  0E01               	movlw	high InitGprsNetwork@UartMessage
 29248  0011CA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29249  0011CC  6EDA               	movwf	fsr2h,c
 29250  0011CE  0E0D               	movlw	13
 29251  0011D0  6EDF               	movwf	indf2,c
 29252                           
 29253                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 29254  0011D2  0101               	movlb	1	; () banked
 29255  0011D4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 29256  0011D6  0100               	movlb	0	; () banked
 29257  0011D8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 29258  0011DA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 29259  0011DC  0E16               	movlw	22
 29260  0011DE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 29261  0011E0  0E00               	movlw	0
 29262  0011E2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 29263  0011E4  0E00               	movlw	low InitGprsNetwork@UartMessage
 29264  0011E6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 29265  0011E8  6ED9               	movwf	fsr2l,c
 29266  0011EA  0E01               	movlw	high InitGprsNetwork@UartMessage
 29267  0011EC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 29268  0011EE  6EDA               	movwf	fsr2h,c
 29269  0011F0  0E00               	movlw	0
 29270  0011F2  6EDF               	movwf	indf2,c
 29271                           
 29272                           ; BSR set to: 0
 29273                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 29274  0011F4  0E00               	movlw	low InitGprsNetwork@UartMessage
 29275  0011F6  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29276  0011F8  0E01               	movlw	high InitGprsNetwork@UartMessage
 29277  0011FA  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29278  0011FC  0E01               	movlw	1
 29279  0011FE  EC38  F030         	call	_Uart_WriteString
 29280                           
 29281                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 29282  001202  0E07               	movlw	7
 29283  001204  0101               	movlb	1	; () banked
 29284  001206  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29285                           
 29286                           ; BSR set to: 1
 29287                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 29288  001208  0E03               	movlw	3
 29289  00120A  0100               	movlb	0	; () banked
 29290  00120C  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29291                           
 29292                           ; BSR set to: 0
 29293                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 29294  00120E  0EF5               	movlw	low _ConnTimeout
 29295  001210  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29296  001212  0E02               	movlw	high _ConnTimeout
 29297  001214  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29298  001216  0E20               	movlw	32
 29299  001218  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29300  00121A  0E4E               	movlw	78
 29301  00121C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29302  00121E  0E00               	movlw	0
 29303  001220  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29304  001222  0E00               	movlw	0
 29305  001224  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29306  001226  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 29307  00122A  D039               	goto	l15210
 29308  00122C                     
 29309                           ; BSR set to: 1
 29310                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 29311                           
 29312                           ; BSR set to: 1
 29313  00122C  0E4B               	movlw	low STR_10
 29314  00122E  0100               	movlb	0	; () banked
 29315  001230  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29316  001232  0EFF               	movlw	high STR_10
 29317  001234  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29318  001236  0E01               	movlw	1
 29319  001238  EC78  F02F         	call	_Uart_WriteConstString
 29320                           
 29321                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 29322  00123C  0E07               	movlw	7
 29323  00123E  0101               	movlb	1	; () banked
 29324  001240  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29325                           
 29326                           ; BSR set to: 1
 29327                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 29328  001242  0E05               	movlw	5
 29329  001244  0100               	movlb	0	; () banked
 29330  001246  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29331                           
 29332                           ; BSR set to: 0
 29333                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 29334  001248  0EF5               	movlw	low _ConnTimeout
 29335  00124A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29336  00124C  0E02               	movlw	high _ConnTimeout
 29337  00124E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29338  001250  0E20               	movlw	32
 29339  001252  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29340  001254  0E4E               	movlw	78
 29341  001256  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29342  001258  0E00               	movlw	0
 29343  00125A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29344  00125C  0E00               	movlw	0
 29345  00125E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29346  001260  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 29347  001264  D01C               	goto	l15210
 29348  001266                     
 29349                           ; BSR set to: 1
 29350                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 29351                           
 29352                           ; BSR set to: 1
 29353  001266  0E59               	movlw	low STR_11
 29354  001268  0100               	movlb	0	; () banked
 29355  00126A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29356  00126C  0EFF               	movlw	high STR_11
 29357  00126E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29358  001270  0E01               	movlw	1
 29359  001272  EC78  F02F         	call	_Uart_WriteConstString
 29360                           
 29361                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 29362  001276  0E08               	movlw	8
 29363  001278  0101               	movlb	1	; () banked
 29364  00127A  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29365                           
 29366                           ; BSR set to: 1
 29367                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 29368  00127C  0E05               	movlw	5
 29369  00127E  0100               	movlb	0	; () banked
 29370  001280  6FCF               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 29371                           
 29372                           ; BSR set to: 0
 29373                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 29374  001282  0EF5               	movlw	low _ConnTimeout
 29375  001284  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29376  001286  0E02               	movlw	high _ConnTimeout
 29377  001288  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29378  00128A  0E20               	movlw	32
 29379  00128C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29380  00128E  0E4E               	movlw	78
 29381  001290  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29382  001292  0E00               	movlw	0
 29383  001294  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29384  001296  0E00               	movlw	0
 29385  001298  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29386  00129A  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 29387  00129E                     l15210:
 29388                           
 29389                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 29390  00129E  0E01               	movlw	1
 29391  0012A0  0101               	movlb	1	; () banked
 29392  0012A2  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29393                           
 29394                           ;mdm_gsm_gprs_http.c: 201: break;
 29395  0012A4  D07C               	goto	l1222
 29396  0012A6                     
 29397                           ; BSR set to: 1
 29398                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 29399                           
 29400                           ; BSR set to: 1
 29401  0012A6  0E02               	movlw	2
 29402  0012A8  D05A               	goto	L78
 29403  0012AA                     
 29404                           ; BSR set to: 1
 29405                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 29406                           
 29407                           ; BSR set to: 1
 29408  0012AA  0E3C               	movlw	low _NewStringReceived
 29409  0012AC  0100               	movlb	0	; () banked
 29410  0012AE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29411  0012B0  0E00               	movlw	high _NewStringReceived
 29412  0012B2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29413  0012B4  ECA8  F031         	call	_ReceiveEvt	;wreg free
 29414  0012B8  0900               	iorlw	0
 29415  0012BA  B4D8               	btfsc	status,2,c
 29416  0012BC  D018               	goto	l1232
 29417                           
 29418                           ;mdm_gsm_gprs_http.c: 212: {
 29419                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 29420  0012BE  CC58  FFE8         	movff	_RxBuffer,wreg
 29421  0012C2  0A4F               	xorlw	79
 29422  0012C4  A4D8               	btfss	status,2,c
 29423  0012C6  D06B               	goto	l1222
 29424  0012C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29425  0012CC  0A4B               	xorlw	75
 29426  0012CE  A4D8               	btfss	status,2,c
 29427  0012D0  D066               	goto	l1222
 29428                           
 29429                           ;mdm_gsm_gprs_http.c: 215: {
 29430                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 29431  0012D2  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29432                           
 29433                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 29434  0012D6  0E58               	movlw	low _RxBuffer
 29435  0012D8  0100               	movlb	0	; () banked
 29436  0012DA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29437  0012DC  0E0C               	movlw	high _RxBuffer
 29438  0012DE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29439  0012E0  0E01               	movlw	1
 29440  0012E2  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29441  0012E4  0E90               	movlw	144
 29442  0012E6  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29443  0012E8  ECCA  F030         	call	_ClearBuffer	;wreg free
 29444                           
 29445                           ;mdm_gsm_gprs_http.c: 220: }
 29446                           ;mdm_gsm_gprs_http.c: 221: }
 29447  0012EC  D058               	goto	l1222
 29448  0012EE                     l1232:
 29449                           
 29450                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29451  0012EE  0EF5               	movlw	low _ConnTimeout
 29452  0012F0  0100               	movlb	0	; () banked
 29453  0012F2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29454  0012F4  0E02               	movlw	high _ConnTimeout
 29455  0012F6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29456  0012F8  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29457  0012FC  D029               	goto	L43
 29458  0012FE                     
 29459                           ; BSR set to: 1
 29460                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 29461                           
 29462                           ; BSR set to: 1
 29463  0012FE  0E3C               	movlw	low _NewStringReceived
 29464  001300  0100               	movlb	0	; () banked
 29465  001302  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29466  001304  0E00               	movlw	high _NewStringReceived
 29467  001306  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29468  001308  ECA8  F031         	call	_ReceiveEvt	;wreg free
 29469  00130C  0900               	iorlw	0
 29470  00130E  B4D8               	btfsc	status,2,c
 29471  001310  D018               	goto	l1237
 29472                           
 29473                           ;mdm_gsm_gprs_http.c: 232: {
 29474                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 29475  001312  CC58  FFE8         	movff	_RxBuffer,wreg
 29476  001316  0A2B               	xorlw	43
 29477  001318  A4D8               	btfss	status,2,c
 29478  00131A  D041               	goto	l1222
 29479  00131C  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29480  001320  0A53               	xorlw	83
 29481  001322  A4D8               	btfss	status,2,c
 29482  001324  D03C               	goto	l1222
 29483                           
 29484                           ;mdm_gsm_gprs_http.c: 235: {
 29485                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 29486  001326  C0CF  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 29487                           
 29488                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 29489  00132A  0E58               	movlw	low _RxBuffer
 29490  00132C  0100               	movlb	0	; () banked
 29491  00132E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29492  001330  0E0C               	movlw	high _RxBuffer
 29493  001332  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29494  001334  0E01               	movlw	1
 29495  001336  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29496  001338  0E90               	movlw	144
 29497  00133A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29498  00133C  ECCA  F030         	call	_ClearBuffer	;wreg free
 29499                           
 29500                           ;mdm_gsm_gprs_http.c: 240: }
 29501                           ;mdm_gsm_gprs_http.c: 241: }
 29502  001340  D02E               	goto	l1222
 29503  001342                     l1237:
 29504                           
 29505                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 29506  001342  0EF5               	movlw	low _ConnTimeout
 29507  001344  0100               	movlb	0	; () banked
 29508  001346  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29509  001348  0E02               	movlw	high _ConnTimeout
 29510  00134A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29511  00134C  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29512  001350                     L43:
 29513  001350  06E8               	decf	wreg,f,c
 29514  001352  A4D8               	btfss	status,2,c
 29515  001354  D024               	goto	l1222
 29516                           
 29517                           ;mdm_gsm_gprs_http.c: 243: {
 29518                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 29519  001356  0E06               	movlw	6
 29520  001358                     L79:
 29521  001358  0101               	movlb	1	; () banked
 29522  00135A  D003               	goto	L42
 29523  00135C                     
 29524                           ; BSR set to: 1
 29525                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 29526                           
 29527                           ; BSR set to: 1
 29528  00135C  0E03               	movlw	3
 29529  00135E                     L78:
 29530  00135E  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 29531                           
 29532                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 29533  001360  0E00               	movlw	0
 29534  001362                     L42:
 29535  001362  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 29536                           
 29537                           ; BSR set to: 1
 29538                           ;mdm_gsm_gprs_http.c: 257: }
 29539                           
 29540                           ; BSR set to: 1
 29541                           ;mdm_gsm_gprs_http.c: 256: break;
 29542                           
 29543                           ;mdm_gsm_gprs_http.c: 255: default:
 29544                           
 29545                           ;mdm_gsm_gprs_http.c: 253: break;
 29546  001364  D01C               	goto	l1222
 29547  001366                     l1219:
 29548                           
 29549                           ; BSR set to: 1
 29550                           
 29551                           ; BSR set to: 1
 29552  001366  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 29553                           
 29554                           ; Switch size 1, requested type "space"
 29555                           ; Number of cases is 9, Range of values is 0 to 8
 29556                           ; switch strategies available:
 29557                           ; Name         Instructions Cycles
 29558                           ; simple_byte           28    15 (average)
 29559                           ;	Chosen strategy is simple_byte
 29560  001368  0A00               	xorlw	0	; case 0
 29561  00136A  B4D8               	btfsc	status,2,c
 29562  00136C  D6A8               	goto	l1220
 29563  00136E  0A01               	xorlw	1	; case 1
 29564  001370  B4D8               	btfsc	status,2,c
 29565  001372  D6B1               	goto	l1223
 29566  001374  0A03               	xorlw	3	; case 2
 29567  001376  B4D8               	btfsc	status,2,c
 29568  001378  D6CB               	goto	l1224
 29569  00137A  0A01               	xorlw	1	; case 3
 29570  00137C  B4D8               	btfsc	status,2,c
 29571  00137E  D756               	goto	l1228
 29572  001380  0A07               	xorlw	7	; case 4
 29573  001382  B4D8               	btfsc	status,2,c
 29574  001384  D770               	goto	l1229
 29575  001386  0A01               	xorlw	1	; case 5
 29576  001388  B4D8               	btfsc	status,2,c
 29577  00138A  D78D               	goto	l1230
 29578  00138C  0A03               	xorlw	3	; case 6
 29579  00138E  B4D8               	btfsc	status,2,c
 29580  001390  D7E5               	goto	l1241
 29581  001392  0A01               	xorlw	1	; case 7
 29582  001394  B4D8               	btfsc	status,2,c
 29583  001396  D789               	goto	l1231
 29584  001398  0A0F               	xorlw	15	; case 8
 29585  00139A  B4D8               	btfsc	status,2,c
 29586  00139C  D7B0               	goto	l1236
 29587  00139E                     l1222:
 29588                           
 29589                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 29590                           
 29591                           ; BSR set to: 1
 29592  00139E  0101               	movlb	1	; () banked
 29593  0013A0  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 29594  0013A2  0012               	return	
 29595  0013A4                     __end_of_InitGprsNetwork:
 29596                           	opt stack 0
 29597                           tosu	equ	0xFFF
 29598                           tosh	equ	0xFFE
 29599                           tosl	equ	0xFFD
 29600                           pclath	equ	0xFFA
 29601                           tblptru	equ	0xFF8
 29602                           tblptrh	equ	0xFF7
 29603                           tblptrl	equ	0xFF6
 29604                           tablat	equ	0xFF5
 29605                           prodh	equ	0xFF4
 29606                           prodl	equ	0xFF3
 29607                           intcon	equ	0xFF2
 29608                           intcon2	equ	0xFF1
 29609                           intcon3	equ	0xFF0
 29610                           indf0	equ	0xFEF
 29611                           postinc0	equ	0xFEE
 29612                           plusw0	equ	0xFEB
 29613                           fsr0h	equ	0xFEA
 29614                           fsr0l	equ	0xFE9
 29615                           wreg	equ	0xFE8
 29616                           indf1	equ	0xFE7
 29617                           postinc1	equ	0xFE6
 29618                           postdec1	equ	0xFE5
 29619                           plusw1	equ	0xFE3
 29620                           fsr1h	equ	0xFE2
 29621                           fsr1l	equ	0xFE1
 29622                           indf2	equ	0xFDF
 29623                           postinc2	equ	0xFDE
 29624                           postdec2	equ	0xFDD
 29625                           plusw2	equ	0xFDB
 29626                           fsr2h	equ	0xFDA
 29627                           fsr2l	equ	0xFD9
 29628                           status	equ	0xFD8
 29629                           
 29630 ;; *************** function _HttpGetMethod *****************
 29631 ;; Defined at:
 29632 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29633 ;; Parameters:    Size  Location     Type
 29634 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 29635 ;;		 -> HttpGetDataLocal(5), 
 29636 ;; Auto vars:     Size  Location     Type
 29637 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 29638 ;;  Index           1  200[BANK1 ] unsigned char 
 29639 ;; Return value:  Size  Location     Type
 29640 ;;                  1    wreg      enum E8923
 29641 ;; Registers used:
 29642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29643 ;; Tracked objects:
 29644 ;;		On entry : 0/0
 29645 ;;		On exit  : 0/0
 29646 ;;		Unchanged: 0/0
 29647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29649 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29650 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29651 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29652 ;;Total ram usage:      207 bytes
 29653 ;; Hardware stack levels used:    1
 29654 ;; Hardware stack levels required when called:   14
 29655 ;; This function calls:
 29656 ;;		_ClearBuffer
 29657 ;;		_OsTmr_GetTimerStatus
 29658 ;;		_OsTmr_StartTimer
 29659 ;;		_ReceiveEvt
 29660 ;;		_StringCopy
 29661 ;;		_Uart_WriteConstString
 29662 ;;		_Uart_WriteString
 29663 ;; This function is called by:
 29664 ;;		_MdmHttp_MainTask
 29665 ;; This function uses a non-reentrant model
 29666 ;;
 29667                           
 29668                           	psect	text136
 29669  0005EC                     __ptext136:
 29670                           	opt stack 0
 29671  0005EC                     _HttpGetMethod:
 29672                           	opt stack 13
 29673                           
 29674                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 29675                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 29676                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 29677                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 29678                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 29679                           
 29680                           ; BSR set to: 1
 29681                           ;incstack = 0
 29682  0005EC  0E00               	movlw	0
 29683  0005EE  0101               	movlb	1	; () banked
 29684  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29685                           
 29686                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 29687  0005F2  D230               	goto	l1252
 29688  0005F4                     
 29689                           ; BSR set to: 1
 29690                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 29691                           
 29692                           ; BSR set to: 1
 29693  0005F4  0ED8               	movlw	low _GetMethod
 29694  0005F6  0100               	movlb	0	; () banked
 29695  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29696  0005FA  0E00               	movlw	high _GetMethod
 29697  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29698  0005FE  ECA8  F031         	call	_ReceiveEvt	;wreg free
 29699  000602  0900               	iorlw	0
 29700  000604  B4D8               	btfsc	status,2,c
 29701  000606  D257               	goto	l1255
 29702                           
 29703                           ;mdm_gsm_gprs_http.c: 284: {
 29704                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 29705  000608  0E01               	movlw	1
 29706  00060A  D18C               	goto	L45
 29707  00060C                     
 29708                           ; BSR set to: 1
 29709                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 29710                           
 29711                           ; BSR set to: 1
 29712  00060C  0E9D               	movlw	low STR_12
 29713  00060E  0100               	movlb	0	; () banked
 29714  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29715  000612  0EFF               	movlw	high STR_12
 29716  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29717  000616  0E01               	movlw	1
 29718  000618  EC78  F02F         	call	_Uart_WriteConstString
 29719                           
 29720                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 29721  00061C  0E0A               	movlw	10
 29722  00061E  0101               	movlb	1	; () banked
 29723  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29724                           
 29725                           ; BSR set to: 1
 29726                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 29727  000622  0E02               	movlw	2
 29728  000624  0100               	movlb	0	; () banked
 29729  000626  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29730                           
 29731                           ; BSR set to: 0
 29732                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 29733  000628  0EF5               	movlw	low _ConnTimeout
 29734  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29735  00062C  0E02               	movlw	high _ConnTimeout
 29736  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29737  000630  0E20               	movlw	32
 29738  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29739  000634  0E4E               	movlw	78
 29740  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29741  000638  0E00               	movlw	0
 29742  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29743  00063C  0E00               	movlw	0
 29744  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29745  000640  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 29746  000644  D1AF               	goto	l15376
 29747  000646                     
 29748                           ; BSR set to: 1
 29749                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 29750                           
 29751                           ; BSR set to: 1
 29752  000646  0E67               	movlw	low STR_13
 29753  000648  0100               	movlb	0	; () banked
 29754  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29755  00064C  0EFF               	movlw	high STR_13
 29756  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29757  000650  0E01               	movlw	1
 29758  000652  EC78  F02F         	call	_Uart_WriteConstString
 29759                           
 29760                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 29761  000656  0E0A               	movlw	10
 29762  000658  0101               	movlb	1	; () banked
 29763  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29764                           
 29765                           ; BSR set to: 1
 29766                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 29767  00065C  0E03               	movlw	3
 29768  00065E  0100               	movlb	0	; () banked
 29769  000660  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29770                           
 29771                           ; BSR set to: 0
 29772                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 29773  000662  0EF5               	movlw	low _ConnTimeout
 29774  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29775  000666  0E02               	movlw	high _ConnTimeout
 29776  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29777  00066A  0E20               	movlw	32
 29778  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29779  00066E  0E4E               	movlw	78
 29780  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29781  000672  0E00               	movlw	0
 29782  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29783  000676  0E00               	movlw	0
 29784  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29785  00067A  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 29786  00067E  D192               	goto	l15376
 29787  000680                     
 29788                           ; BSR set to: 1
 29789                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 29790                           
 29791                           ; BSR set to: 1
 29792  000680  0EA8               	movlw	low STR_14
 29793  000682  0100               	movlb	0	; () banked
 29794  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29795  000686  0EFE               	movlw	high STR_14
 29796  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29797  00068A  0E01               	movlw	1
 29798  00068C  EC78  F02F         	call	_Uart_WriteConstString
 29799                           
 29800                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 29801  000690  0E0A               	movlw	10
 29802  000692  0101               	movlb	1	; () banked
 29803  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29804                           
 29805                           ; BSR set to: 1
 29806                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 29807  000696  0E04               	movlw	4
 29808  000698  0100               	movlb	0	; () banked
 29809  00069A  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29810                           
 29811                           ; BSR set to: 0
 29812                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 29813  00069C  0EF5               	movlw	low _ConnTimeout
 29814  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29815  0006A0  0E02               	movlw	high _ConnTimeout
 29816  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29817  0006A4  0E20               	movlw	32
 29818  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29819  0006A8  0E4E               	movlw	78
 29820  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29821  0006AC  0E00               	movlw	0
 29822  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29823  0006B0  0E00               	movlw	0
 29824  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29825  0006B4  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 29826  0006B8  D175               	goto	l15376
 29827  0006BA                     
 29828                           ; BSR set to: 1
 29829                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 29830                           
 29831                           ; BSR set to: 1
 29832  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29833  0006BC  0100               	movlb	0	; () banked
 29834  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 29835  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 29836  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 29837  0006C4  0E00               	movlw	0
 29838  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 29839  0006C8  0EC8               	movlw	200
 29840  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 29841  0006CC  ECCA  F030         	call	_ClearBuffer	;wreg free
 29842                           
 29843                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 29844  0006D0  0EE6               	movlw	low STR_15
 29845  0006D2  0100               	movlb	0	; () banked
 29846  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 29847  0006D6  0EFE               	movlw	high STR_15
 29848  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 29849  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 29850  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 29851  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 29852  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 29853  0006E2  0E00               	movlw	0
 29854  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 29855  0006E6  0E13               	movlw	19
 29856  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 29857  0006EA  ECBB  F02A         	call	_StringCopy	;wreg free
 29858                           
 29859                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 29860  0006EE  0E00               	movlw	0
 29861  0006F0  0101               	movlb	1	; () banked
 29862  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 29863  0006F4  D024               	goto	l1260
 29864  0006F6                     
 29865                           ; BSR set to: 1
 29866                           ;mdm_gsm_gprs_http.c: 332: {
 29867                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 29868                           
 29869                           ; BSR set to: 1
 29870  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29871  0006F8  0D01               	mullw	1
 29872  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 29873  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 29874  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 29875  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 29876  00070A  50F3               	movf	prodl,w,c
 29877  00070C  0100               	movlb	0	; () banked
 29878  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29879  000710  6ED9               	movwf	fsr2l,c
 29880  000712  50F4               	movf	prodh,w,c
 29881  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29882  000716  6EDA               	movwf	fsr2h,c
 29883  000718  0101               	movlb	1	; () banked
 29884  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29885  00071C  0100               	movlb	0	; () banked
 29886  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 29887  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 29888  000722  0E13               	movlw	19
 29889  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 29890  000726  0E00               	movlw	0
 29891  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 29892  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 29893  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 29894  00072E  6EE1               	movwf	fsr1l,c
 29895  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 29896  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 29897  000734  6EE2               	movwf	fsr1h,c
 29898  000736  CFDF FFE7          	movff	indf2,indf1
 29899                           
 29900                           ; BSR set to: 0
 29901  00073A  0101               	movlb	1	; () banked
 29902  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 29903  00073E                     l1260:
 29904                           
 29905                           ; BSR set to: 1
 29906                           
 29907                           ; BSR set to: 1
 29908  00073E  0100               	movlb	0	; () banked
 29909  000740  EE20 F002          	lfsr	2,2
 29910  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 29911  000746  26D9               	addwf	fsr2l,f,c
 29912  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 29913  00074A  22DA               	addwfc	fsr2h,f,c
 29914  00074C  50DE               	movf	postinc2,w,c
 29915  00074E  0101               	movlb	1	; () banked
 29916  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 29917  000752  A0D8               	btfss	status,0,c
 29918  000754  D7D0               	goto	l1261
 29919                           
 29920                           ; BSR set to: 1
 29921                           ;mdm_gsm_gprs_http.c: 334: }
 29922                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 29923                           
 29924                           ; BSR set to: 1
 29925  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29926  000758  0100               	movlb	0	; () banked
 29927  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29928  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29929  00075E  0E13               	movlw	19
 29930  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29931  000762  0E00               	movlw	0
 29932  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29933  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 29934  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29935  00076A  6ED9               	movwf	fsr2l,c
 29936  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 29937  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29938  000770  6EDA               	movwf	fsr2h,c
 29939  000772  0E22               	movlw	34
 29940  000774  6EDF               	movwf	indf2,c
 29941                           
 29942                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 29943  000776  0101               	movlb	1	; () banked
 29944  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29945  00077A  0100               	movlb	0	; () banked
 29946  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29947  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29948  000780  0E14               	movlw	20
 29949  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29950  000784  0E00               	movlw	0
 29951  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29952  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 29953  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29954  00078C  6ED9               	movwf	fsr2l,c
 29955  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 29956  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29957  000792  6EDA               	movwf	fsr2h,c
 29958  000794  0E0D               	movlw	13
 29959  000796  6EDF               	movwf	indf2,c
 29960                           
 29961                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 29962  000798  0101               	movlb	1	; () banked
 29963  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 29964  00079C  0100               	movlb	0	; () banked
 29965  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 29966  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 29967  0007A2  0E15               	movlw	21
 29968  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 29969  0007A6  0E00               	movlw	0
 29970  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 29971  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 29972  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 29973  0007AE  6ED9               	movwf	fsr2l,c
 29974  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 29975  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 29976  0007B4  6EDA               	movwf	fsr2h,c
 29977  0007B6  0E00               	movlw	0
 29978  0007B8  6EDF               	movwf	indf2,c
 29979                           
 29980                           ; BSR set to: 0
 29981                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 29982  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 29983  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 29984  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 29985  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 29986  0007C2  0E01               	movlw	1
 29987  0007C4  EC38  F030         	call	_Uart_WriteString
 29988                           
 29989                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 29990  0007C8  0E0A               	movlw	10
 29991  0007CA  0101               	movlb	1	; () banked
 29992  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 29993                           
 29994                           ; BSR set to: 1
 29995                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 29996  0007CE  0E05               	movlw	5
 29997  0007D0  0100               	movlb	0	; () banked
 29998  0007D2  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 29999                           
 30000                           ; BSR set to: 0
 30001                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 30002  0007D4  0EF5               	movlw	low _ConnTimeout
 30003  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30004  0007D8  0E02               	movlw	high _ConnTimeout
 30005  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30006  0007DC  0E20               	movlw	32
 30007  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30008  0007E0  0E4E               	movlw	78
 30009  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30010  0007E4  0E00               	movlw	0
 30011  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30012  0007E8  0E00               	movlw	0
 30013  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30014  0007EC  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 30015  0007F0  D0D9               	goto	l15376
 30016  0007F2                     
 30017                           ; BSR set to: 1
 30018                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 30019                           
 30020                           ; BSR set to: 1
 30021  0007F2  0E1E               	movlw	low STR_16
 30022  0007F4  0100               	movlb	0	; () banked
 30023  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30024  0007F8  0EFF               	movlw	high STR_16
 30025  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30026  0007FC  0E01               	movlw	1
 30027  0007FE  EC78  F02F         	call	_Uart_WriteConstString
 30028                           
 30029                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 30030  000802  0E0A               	movlw	10
 30031  000804  0101               	movlb	1	; () banked
 30032  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30033                           
 30034                           ; BSR set to: 1
 30035                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 30036  000808  0E06               	movlw	6
 30037  00080A  0100               	movlb	0	; () banked
 30038  00080C  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30039                           
 30040                           ; BSR set to: 0
 30041                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 30042  00080E  0EF5               	movlw	low _ConnTimeout
 30043  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30044  000812  0E02               	movlw	high _ConnTimeout
 30045  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30046  000816  0E20               	movlw	32
 30047  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30048  00081A  0E4E               	movlw	78
 30049  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30050  00081E  0E00               	movlw	0
 30051  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30052  000822  0E00               	movlw	0
 30053  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30054  000826  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 30055                           
 30056                           ;mdm_gsm_gprs_http.c: 358: break;
 30057  00082A  D145               	goto	l1255
 30058  00082C                     
 30059                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 30060  00082C  0E07               	movlw	7
 30061  00082E  0101               	movlb	1	; () banked
 30062  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30063                           
 30064                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 30065  000832  0E09               	movlw	9
 30066  000834  0100               	movlb	0	; () banked
 30067  000836  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30068                           
 30069                           ; BSR set to: 0
 30070                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 30071  000838  0EF5               	movlw	low _ConnTimeout
 30072  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30073  00083C  0E02               	movlw	high _ConnTimeout
 30074  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30075  000840  0E20               	movlw	32
 30076  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30077  000844  0E4E               	movlw	78
 30078  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30079  000848  0E00               	movlw	0
 30080  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30081  00084C  0E00               	movlw	0
 30082  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30083  000850  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 30084                           
 30085                           ;mdm_gsm_gprs_http.c: 371: break;
 30086  000854  D130               	goto	l1255
 30087  000856                     
 30088                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 30089  000856  0E83               	movlw	low STR_17
 30090  000858  0100               	movlb	0	; () banked
 30091  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30092  00085C  0EFF               	movlw	high STR_17
 30093  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30094  000860  0E01               	movlw	1
 30095  000862  EC78  F02F         	call	_Uart_WriteConstString
 30096                           
 30097                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 30098  000866  0E0D               	movlw	13
 30099  000868  0101               	movlb	1	; () banked
 30100  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30101                           
 30102                           ; BSR set to: 1
 30103                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 30104  00086C  0E09               	movlw	9
 30105  00086E  0100               	movlb	0	; () banked
 30106  000870  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30107                           
 30108                           ; BSR set to: 0
 30109                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 30110  000872  0EF5               	movlw	low _ConnTimeout
 30111  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30112  000876  0E02               	movlw	high _ConnTimeout
 30113  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30114  00087A  0E20               	movlw	32
 30115  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30116  00087E  0E4E               	movlw	78
 30117  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30118  000882  0E00               	movlw	0
 30119  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30120  000886  0E00               	movlw	0
 30121  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30122  00088A  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 30123  00088E  D08A               	goto	l15376
 30124  000890                     
 30125                           ; BSR set to: 1
 30126                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 30127                           
 30128                           ; BSR set to: 1
 30129  000890  0E90               	movlw	low STR_18
 30130  000892  0100               	movlb	0	; () banked
 30131  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30132  000896  0EFF               	movlw	high STR_18
 30133  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30134  00089A  0E01               	movlw	1
 30135  00089C  EC78  F02F         	call	_Uart_WriteConstString
 30136                           
 30137                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 30138  0008A0  0E0A               	movlw	10
 30139  0008A2  0101               	movlb	1	; () banked
 30140  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30141                           
 30142                           ; BSR set to: 1
 30143                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 30144  0008A6  0E0E               	movlw	14
 30145  0008A8  0100               	movlb	0	; () banked
 30146  0008AA  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30147                           
 30148                           ; BSR set to: 0
 30149                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 30150  0008AC  0EF5               	movlw	low _ConnTimeout
 30151  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30152  0008B0  0E02               	movlw	high _ConnTimeout
 30153  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30154  0008B4  0E20               	movlw	32
 30155  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30156  0008B8  0E4E               	movlw	78
 30157  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30158  0008BC  0E00               	movlw	0
 30159  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30160  0008C0  0E00               	movlw	0
 30161  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30162  0008C4  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 30163  0008C8  D06D               	goto	l15376
 30164  0008CA                     
 30165                           ; BSR set to: 1
 30166                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 30167                           
 30168                           ; BSR set to: 1
 30169  0008CA  0E3C               	movlw	low _NewStringReceived
 30170  0008CC  0100               	movlb	0	; () banked
 30171  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30172  0008D0  0E00               	movlw	high _NewStringReceived
 30173  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30174  0008D4  ECA8  F031         	call	_ReceiveEvt	;wreg free
 30175  0008D8  0900               	iorlw	0
 30176  0008DA  B4D8               	btfsc	status,2,c
 30177  0008DC  D018               	goto	l1268
 30178                           
 30179                           ;mdm_gsm_gprs_http.c: 400: {
 30180                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30181  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 30182  0008E2  0A4F               	xorlw	79
 30183  0008E4  A4D8               	btfss	status,2,c
 30184  0008E6  D0E7               	goto	l1255
 30185  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30186  0008EC  0A4B               	xorlw	75
 30187  0008EE  A4D8               	btfss	status,2,c
 30188  0008F0  D0E2               	goto	l1255
 30189                           
 30190                           ;mdm_gsm_gprs_http.c: 403: {
 30191                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 30192  0008F2  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30193                           
 30194                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 30195  0008F6  0E58               	movlw	low _RxBuffer
 30196  0008F8  0100               	movlb	0	; () banked
 30197  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30198  0008FC  0E0C               	movlw	high _RxBuffer
 30199  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30200  000900  0E01               	movlw	1
 30201  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30202  000904  0E90               	movlw	144
 30203  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30204  000908  ECCA  F030         	call	_ClearBuffer	;wreg free
 30205                           
 30206                           ;mdm_gsm_gprs_http.c: 408: }
 30207                           ;mdm_gsm_gprs_http.c: 409: }
 30208  00090C  D0D4               	goto	l1255
 30209  00090E                     l1268:
 30210                           
 30211                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30212  00090E  0EF5               	movlw	low _ConnTimeout
 30213  000910  0100               	movlb	0	; () banked
 30214  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30215  000914  0E02               	movlw	high _ConnTimeout
 30216  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30217  000918  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30218  00091C                     L46:
 30219  00091C  06E8               	decf	wreg,f,c
 30220  00091E  A4D8               	btfss	status,2,c
 30221  000920  D0CA               	goto	l1255
 30222                           
 30223                           ;mdm_gsm_gprs_http.c: 411: {
 30224                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 30225  000922  0E0F               	movlw	15
 30226  000924                     L45:
 30227  000924  0101               	movlb	1	; () banked
 30228  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30229                           
 30230                           ; BSR set to: 1
 30231                           ;mdm_gsm_gprs_http.c: 414: }
 30232                           ;mdm_gsm_gprs_http.c: 415: break;
 30233                           
 30234                           ; BSR set to: 1
 30235  000928  D0C6               	goto	l1255
 30236  00092A                     
 30237                           ; BSR set to: 1
 30238                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 30239                           
 30240                           ; BSR set to: 1
 30241  00092A  0E3C               	movlw	low _NewStringReceived
 30242  00092C  0100               	movlb	0	; () banked
 30243  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30244  000930  0E00               	movlw	high _NewStringReceived
 30245  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30246  000934  ECA8  F031         	call	_ReceiveEvt	;wreg free
 30247  000938  0900               	iorlw	0
 30248  00093A  B4D8               	btfsc	status,2,c
 30249  00093C  D018               	goto	l1273
 30250                           
 30251                           ;mdm_gsm_gprs_http.c: 420: {
 30252                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30253  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 30254  000942  0A2B               	xorlw	43
 30255  000944  A4D8               	btfss	status,2,c
 30256  000946  D0B7               	goto	l1255
 30257  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30258  00094C  0A48               	xorlw	72
 30259  00094E  A4D8               	btfss	status,2,c
 30260  000950  D0B2               	goto	l1255
 30261                           
 30262                           ;mdm_gsm_gprs_http.c: 423: {
 30263                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 30264  000952  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30265                           
 30266                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 30267  000956  0E58               	movlw	low _RxBuffer
 30268  000958  0100               	movlb	0	; () banked
 30269  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30270  00095C  0E0C               	movlw	high _RxBuffer
 30271  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30272  000960  0E01               	movlw	1
 30273  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30274  000964  0E90               	movlw	144
 30275  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30276  000968  ECCA  F030         	call	_ClearBuffer	;wreg free
 30277                           
 30278                           ;mdm_gsm_gprs_http.c: 428: }
 30279                           ;mdm_gsm_gprs_http.c: 429: }
 30280  00096C  D0A4               	goto	l1255
 30281  00096E                     l1273:
 30282                           
 30283                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30284  00096E  0EF5               	movlw	low _ConnTimeout
 30285  000970  0100               	movlb	0	; () banked
 30286  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30287  000974  0E02               	movlw	high _ConnTimeout
 30288  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30289  000978  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30290  00097C  D7CF               	goto	L46
 30291  00097E                     
 30292                           ; BSR set to: 1
 30293                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 30294                           
 30295                           ; BSR set to: 1
 30296  00097E  0E0C               	movlw	12
 30297  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30298                           
 30299                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 30300  000982  0E05               	movlw	5
 30301  000984  0100               	movlb	0	; () banked
 30302  000986  6FCE               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30303                           
 30304                           ; BSR set to: 0
 30305                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 30306  000988  0EDA               	movlw	low _ConnWait
 30307  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30308  00098C  0E03               	movlw	high _ConnWait
 30309  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30310  000990  0EE8               	movlw	232
 30311  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30312  000994  0E03               	movlw	3
 30313  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30314  000998  0E00               	movlw	0
 30315  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30316  00099C  0E00               	movlw	0
 30317  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30318  0009A0  EC1B  F02B         	call	_OsTmr_StartTimer	;wreg free
 30319  0009A4                     l15376:
 30320                           
 30321                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 30322  0009A4  0E01               	movlw	1
 30323  0009A6  0101               	movlb	1	; () banked
 30324  0009A8  D053               	goto	L48
 30325  0009AA                     
 30326                           ; BSR set to: 1
 30327                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 30328                           
 30329                           ; BSR set to: 1
 30330  0009AA  0EDA               	movlw	low _ConnWait
 30331  0009AC  0100               	movlb	0	; () banked
 30332  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30333  0009B0  0E03               	movlw	high _ConnWait
 30334  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30335  0009B4  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30336  0009B8  06E8               	decf	wreg,f,c
 30337  0009BA  A4D8               	btfss	status,2,c
 30338  0009BC  D07C               	goto	l1255
 30339                           
 30340                           ;mdm_gsm_gprs_http.c: 450: {
 30341                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 30342  0009BE  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30343                           
 30344                           ;mdm_gsm_gprs_http.c: 453: }
 30345                           ;mdm_gsm_gprs_http.c: 454: break;
 30346  0009C2  D079               	goto	l1255
 30347  0009C4                     
 30348                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 30349  0009C4  0E3C               	movlw	low _NewStringReceived
 30350  0009C6  0100               	movlb	0	; () banked
 30351  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30352  0009CA  0E00               	movlw	high _NewStringReceived
 30353  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30354  0009CE  ECA8  F031         	call	_ReceiveEvt	;wreg free
 30355  0009D2  0900               	iorlw	0
 30356  0009D4  B4D8               	btfsc	status,2,c
 30357  0009D6  D02D               	goto	l1281
 30358                           
 30359                           ;mdm_gsm_gprs_http.c: 459: {
 30360                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 30361  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 30362  0009DC  0A2B               	xorlw	43
 30363  0009DE  A4D8               	btfss	status,2,c
 30364  0009E0  D06A               	goto	l1255
 30365  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30366  0009E6  0A48               	xorlw	72
 30367  0009E8  A4D8               	btfss	status,2,c
 30368  0009EA  D065               	goto	l1255
 30369                           
 30370                           ;mdm_gsm_gprs_http.c: 462: {
 30371                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 30372  0009EC  C0CE  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 30373                           
 30374                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 30375  0009F0  0E58               	movlw	low _RxBuffer
 30376  0009F2  0100               	movlb	0	; () banked
 30377  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30378  0009F6  0E0C               	movlw	high _RxBuffer
 30379  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30380  0009FA  EE20 F003          	lfsr	2,3
 30381  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 30382  000A00  26D9               	addwf	fsr2l,f,c
 30383  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 30384  000A04  22DA               	addwfc	fsr2h,f,c
 30385  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 30386  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 30387  000A0E  0E01               	movlw	1
 30388  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30389  000A12  0E90               	movlw	144
 30390  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 30391  000A16  ECBB  F02A         	call	_StringCopy	;wreg free
 30392                           
 30393                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 30394  000A1A  0E58               	movlw	low _RxBuffer
 30395  000A1C  0100               	movlb	0	; () banked
 30396  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30397  000A20  0E0C               	movlw	high _RxBuffer
 30398  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30399  000A24  0E01               	movlw	1
 30400  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30401  000A28  0E90               	movlw	144
 30402  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30403  000A2C  ECCA  F030         	call	_ClearBuffer	;wreg free
 30404                           
 30405                           ;mdm_gsm_gprs_http.c: 469: }
 30406                           ;mdm_gsm_gprs_http.c: 470: }
 30407  000A30  D042               	goto	l1255
 30408  000A32                     l1281:
 30409                           
 30410                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30411  000A32  0EF5               	movlw	low _ConnTimeout
 30412  000A34  0100               	movlb	0	; () banked
 30413  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30414  000A38  0E02               	movlw	high _ConnTimeout
 30415  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30416  000A3C  ECC4  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30417  000A40  D76D               	goto	L46
 30418  000A42                     
 30419                           ; BSR set to: 1
 30420                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 30421                           
 30422                           ; BSR set to: 1
 30423  000A42  0E00               	movlw	0
 30424  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30425                           
 30426                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 30427  000A46  0E02               	movlw	2
 30428  000A48  D003               	goto	L48
 30429  000A4A                     
 30430                           ; BSR set to: 1
 30431                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 30432                           
 30433                           ; BSR set to: 1
 30434  000A4A  0E00               	movlw	0
 30435  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30436                           
 30437                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 30438  000A4E  0E03               	movlw	3
 30439  000A50                     L48:
 30440  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 30441                           
 30442                           ; BSR set to: 1
 30443                           ;mdm_gsm_gprs_http.c: 494: }
 30444                           
 30445                           ; BSR set to: 1
 30446                           ;mdm_gsm_gprs_http.c: 493: break;
 30447                           
 30448                           ;mdm_gsm_gprs_http.c: 492: default:
 30449                           
 30450                           ;mdm_gsm_gprs_http.c: 490: break;
 30451  000A52  D031               	goto	l1255
 30452  000A54                     l1252:
 30453                           
 30454                           ; BSR set to: 1
 30455                           
 30456                           ; BSR set to: 1
 30457  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 30458                           
 30459                           ; Switch size 1, requested type "space"
 30460                           ; Number of cases is 16, Range of values is 0 to 15
 30461                           ; switch strategies available:
 30462                           ; Name         Instructions Cycles
 30463                           ; simple_byte           49    25 (average)
 30464                           ;	Chosen strategy is simple_byte
 30465  000A56  0A00               	xorlw	0	; case 0
 30466  000A58  B4D8               	btfsc	status,2,c
 30467  000A5A  D5CC               	goto	l1253
 30468  000A5C  0A01               	xorlw	1	; case 1
 30469  000A5E  B4D8               	btfsc	status,2,c
 30470  000A60  D5D5               	goto	l1256
 30471  000A62  0A03               	xorlw	3	; case 2
 30472  000A64  B4D8               	btfsc	status,2,c
 30473  000A66  D5EF               	goto	l1257
 30474  000A68  0A01               	xorlw	1	; case 3
 30475  000A6A  B4D8               	btfsc	status,2,c
 30476  000A6C  D609               	goto	l1258
 30477  000A6E  0A07               	xorlw	7	; case 4
 30478  000A70  B4D8               	btfsc	status,2,c
 30479  000A72  D623               	goto	l1259
 30480  000A74  0A01               	xorlw	1	; case 5
 30481  000A76  B4D8               	btfsc	status,2,c
 30482  000A78  D6BC               	goto	l1263
 30483  000A7A  0A03               	xorlw	3	; case 6
 30484  000A7C  B4D8               	btfsc	status,2,c
 30485  000A7E  D6D6               	goto	l1264
 30486  000A80  0A01               	xorlw	1	; case 7
 30487  000A82  B4D8               	btfsc	status,2,c
 30488  000A84  D752               	goto	l1272
 30489  000A86  0A0F               	xorlw	15	; case 8
 30490  000A88  B4D8               	btfsc	status,2,c
 30491  000A8A  D6E5               	goto	l1265
 30492  000A8C  0A01               	xorlw	1	; case 9
 30493  000A8E  B4D8               	btfsc	status,2,c
 30494  000A90  D6FF               	goto	l1266
 30495  000A92  0A03               	xorlw	3	; case 10
 30496  000A94  B4D8               	btfsc	status,2,c
 30497  000A96  D719               	goto	l1267
 30498  000A98  0A01               	xorlw	1	; case 11
 30499  000A9A  B4D8               	btfsc	status,2,c
 30500  000A9C  D770               	goto	l1277
 30501  000A9E  0A07               	xorlw	7	; case 12
 30502  000AA0  B4D8               	btfsc	status,2,c
 30503  000AA2  D783               	goto	l1278
 30504  000AA4  0A01               	xorlw	1	; case 13
 30505  000AA6  B4D8               	btfsc	status,2,c
 30506  000AA8  D78D               	goto	l1280
 30507  000AAA  0A03               	xorlw	3	; case 14
 30508  000AAC  B4D8               	btfsc	status,2,c
 30509  000AAE  D7C9               	goto	l1285
 30510  000AB0  0A01               	xorlw	1	; case 15
 30511  000AB2  B4D8               	btfsc	status,2,c
 30512  000AB4  D7CA               	goto	l1286
 30513  000AB6                     l1255:
 30514                           
 30515                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 30516                           
 30517                           ; BSR set to: 1
 30518  000AB6  0101               	movlb	1	; () banked
 30519  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 30520  000ABA  0012               	return	
 30521  000ABC                     __end_of_HttpGetMethod:
 30522                           	opt stack 0
 30523                           tosu	equ	0xFFF
 30524                           tosh	equ	0xFFE
 30525                           tosl	equ	0xFFD
 30526                           pclath	equ	0xFFA
 30527                           tblptru	equ	0xFF8
 30528                           tblptrh	equ	0xFF7
 30529                           tblptrl	equ	0xFF6
 30530                           tablat	equ	0xFF5
 30531                           prodh	equ	0xFF4
 30532                           prodl	equ	0xFF3
 30533                           intcon	equ	0xFF2
 30534                           intcon2	equ	0xFF1
 30535                           intcon3	equ	0xFF0
 30536                           indf0	equ	0xFEF
 30537                           postinc0	equ	0xFEE
 30538                           plusw0	equ	0xFEB
 30539                           fsr0h	equ	0xFEA
 30540                           fsr0l	equ	0xFE9
 30541                           wreg	equ	0xFE8
 30542                           indf1	equ	0xFE7
 30543                           postinc1	equ	0xFE6
 30544                           postdec1	equ	0xFE5
 30545                           plusw1	equ	0xFE3
 30546                           fsr1h	equ	0xFE2
 30547                           fsr1l	equ	0xFE1
 30548                           indf2	equ	0xFDF
 30549                           postinc2	equ	0xFDE
 30550                           postdec2	equ	0xFDD
 30551                           plusw2	equ	0xFDB
 30552                           fsr2h	equ	0xFDA
 30553                           fsr2l	equ	0xFD9
 30554                           status	equ	0xFD8
 30555                           
 30556 ;; *************** function _Uart_WriteString *****************
 30557 ;; Defined at:
 30558 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30559 ;; Parameters:    Size  Location     Type
 30560 ;;  Module          1    wreg     unsigned char 
 30561 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 30562 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 30563 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 30564 ;; Auto vars:     Size  Location     Type
 30565 ;;  Module          1   34[BANK0 ] unsigned char 
 30566 ;; Return value:  Size  Location     Type
 30567 ;;                  1    wreg      void 
 30568 ;; Registers used:
 30569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30570 ;; Tracked objects:
 30571 ;;		On entry : 0/0
 30572 ;;		On exit  : 0/0
 30573 ;;		Unchanged: 0/0
 30574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30578 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30579 ;;Total ram usage:        3 bytes
 30580 ;; Hardware stack levels used:    1
 30581 ;; Hardware stack levels required when called:   12
 30582 ;; This function calls:
 30583 ;;		_UartTxBufferStatus
 30584 ;;		_UartWriteByte
 30585 ;; This function is called by:
 30586 ;;		_Mdm_SetSmsFormat
 30587 ;;		_InitGprsNetwork
 30588 ;;		_HttpGetMethod
 30589 ;;		_Mdm_PinUnlock
 30590 ;;		_Mdm_MakePhoneCall
 30591 ;; This function uses a non-reentrant model
 30592 ;;
 30593                           
 30594                           	psect	text137
 30595  006070                     __ptext137:
 30596                           	opt stack 0
 30597  006070                     _Uart_WriteString:
 30598                           	opt stack 12
 30599                           
 30600                           ; BSR set to: 1
 30601                           ;incstack = 0
 30602                           ;Uart_WriteString@Module stored from wreg
 30603  006070  0100               	movlb	0	; () banked
 30604  006072  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 30605                           
 30606                           ;uart_drv.c: 521: while (*StringToWrite)
 30607  006074  D014               	goto	u11970
 30608  006076                     
 30609                           ;uart_drv.c: 522: {
 30610                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 30611  006076  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30612  00607A  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30613  00607E  50DF               	movf	indf2,w,c
 30614  006080  0100               	movlb	0	; () banked
 30615  006082  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 30616  006084  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30617  006086  EC07  F033         	call	_UartWriteByte
 30618                           
 30619                           ;uart_drv.c: 526: StringToWrite++;
 30620  00608A  0100               	movlb	0	; () banked
 30621  00608C  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 30622  00608E  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 30623  006090                     
 30624                           ; BSR set to: 0
 30625                           
 30626                           ; BSR set to: 0
 30627  006090  0100               	movlb	0	; () banked
 30628  006092  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 30629  006094  ECEB  F02D         	call	_UartTxBufferStatus
 30630  006098  06E8               	decf	wreg,f,c
 30631  00609A  B4D8               	btfsc	status,2,c
 30632  00609C  D7F9               	goto	l709
 30633  00609E                     u11970:
 30634  00609E  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 30635  0060A2  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 30636  0060A6  50DF               	movf	indf2,w,c
 30637  0060A8  B4D8               	btfsc	status,2,c
 30638  0060AA  0012               	return	
 30639  0060AC  D7E4               	goto	l707
 30640  0060AE                     __end_of_Uart_WriteString:
 30641                           	opt stack 0
 30642                           tosu	equ	0xFFF
 30643                           tosh	equ	0xFFE
 30644                           tosl	equ	0xFFD
 30645                           pclath	equ	0xFFA
 30646                           tblptru	equ	0xFF8
 30647                           tblptrh	equ	0xFF7
 30648                           tblptrl	equ	0xFF6
 30649                           tablat	equ	0xFF5
 30650                           prodh	equ	0xFF4
 30651                           prodl	equ	0xFF3
 30652                           intcon	equ	0xFF2
 30653                           intcon2	equ	0xFF1
 30654                           intcon3	equ	0xFF0
 30655                           indf0	equ	0xFEF
 30656                           postinc0	equ	0xFEE
 30657                           plusw0	equ	0xFEB
 30658                           fsr0h	equ	0xFEA
 30659                           fsr0l	equ	0xFE9
 30660                           wreg	equ	0xFE8
 30661                           indf1	equ	0xFE7
 30662                           postinc1	equ	0xFE6
 30663                           postdec1	equ	0xFE5
 30664                           plusw1	equ	0xFE3
 30665                           fsr1h	equ	0xFE2
 30666                           fsr1l	equ	0xFE1
 30667                           indf2	equ	0xFDF
 30668                           postinc2	equ	0xFDE
 30669                           postdec2	equ	0xFDD
 30670                           plusw2	equ	0xFDB
 30671                           fsr2h	equ	0xFDA
 30672                           fsr2l	equ	0xFD9
 30673                           status	equ	0xFD8
 30674                           
 30675 ;; *************** function _Uart_WriteConstString *****************
 30676 ;; Defined at:
 30677 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30678 ;; Parameters:    Size  Location     Type
 30679 ;;  Module          1    wreg     unsigned char 
 30680 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 30681 ;;		 -> STR_32(12), STR_31(19), STR_30(14), STR_29(14), 
 30682 ;;		 -> STR_20(14), STR_19(14), STR_18(13), STR_17(13), 
 30683 ;;		 -> STR_16(17), STR_14(21), STR_13(14), STR_12(13), 
 30684 ;;		 -> STR_11(14), STR_10(14), STR_8(31), STR_7(5), 
 30685 ;;		 -> STR_6(5), STR_4(12), STR_3(7), STR_2(14), 
 30686 ;;		 -> STR_1(5), 
 30687 ;; Auto vars:     Size  Location     Type
 30688 ;;  Module          1   34[BANK0 ] unsigned char 
 30689 ;; Return value:  Size  Location     Type
 30690 ;;                  1    wreg      void 
 30691 ;; Registers used:
 30692 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30693 ;; Tracked objects:
 30694 ;;		On entry : 0/0
 30695 ;;		On exit  : 0/0
 30696 ;;		Unchanged: 0/0
 30697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30701 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30702 ;;Total ram usage:        3 bytes
 30703 ;; Hardware stack levels used:    1
 30704 ;; Hardware stack levels required when called:   12
 30705 ;; This function calls:
 30706 ;;		_UartTxBufferStatus
 30707 ;;		_UartWriteByte
 30708 ;; This function is called by:
 30709 ;;		_CheckModem
 30710 ;;		_ConfigureModem
 30711 ;;		_GetSmsSm
 30712 ;;		_Mdm_HangPhoneCall
 30713 ;;		_InitGprsNetwork
 30714 ;;		_HttpGetMethod
 30715 ;;		_MyApp_Task
 30716 ;;		_initGprsModem
 30717 ;;		_Mdm_GetPhoneCall
 30718 ;;		_MdmHttp_SetSsl
 30719 ;; This function uses a non-reentrant model
 30720 ;;
 30721                           
 30722                           	psect	text138
 30723  005EF0                     __ptext138:
 30724                           	opt stack 0
 30725  005EF0                     _Uart_WriteConstString:
 30726                           	opt stack 12
 30727                           
 30728                           ;incstack = 0
 30729                           ;Uart_WriteConstString@Module stored from wreg
 30730  005EF0  0100               	movlb	0	; () banked
 30731  005EF2  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 30732                           
 30733                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 30734  005EF4  D015               	goto	u11950
 30735  005EF6                     
 30736                           ;uart_drv.c: 500: {
 30737                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 30738  005EF6  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30739  005EFA  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30740  005EFE                     	if	0	;tblptru may be non-zero
 30741  005EFE                     	endif
 30742  005EFE                     	if	0	;tblptru may be non-zero
 30743  005EFE                     	endif
 30744  005EFE  0008               	tblrd		*
 30745  005F00  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 30746  005F04  0100               	movlb	0	; () banked
 30747  005F06  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30748  005F08  EC07  F033         	call	_UartWriteByte
 30749                           
 30750                           ;uart_drv.c: 504: ConstStringToWrite++;
 30751  005F0C  0100               	movlb	0	; () banked
 30752  005F0E  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 30753  005F10  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 30754  005F12                     
 30755                           ; BSR set to: 0
 30756                           
 30757                           ; BSR set to: 0
 30758  005F12  0100               	movlb	0	; () banked
 30759  005F14  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 30760  005F16  ECEB  F02D         	call	_UartTxBufferStatus
 30761  005F1A  06E8               	decf	wreg,f,c
 30762  005F1C  B4D8               	btfsc	status,2,c
 30763  005F1E  D7F9               	goto	l700
 30764  005F20                     u11950:
 30765  005F20  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 30766  005F24  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 30767  005F28                     	if	0	;tblptru may be non-zero
 30768  005F28                     	endif
 30769  005F28                     	if	0	;tblptru may be non-zero
 30770  005F28                     	endif
 30771  005F28  0008               	tblrd		*
 30772  005F2A  50F5               	movf	tablat,w,c
 30773  005F2C  0900               	iorlw	0
 30774  005F2E  B4D8               	btfsc	status,2,c
 30775  005F30  0012               	return	
 30776  005F32  D7E1               	goto	l698
 30777  005F34                     __end_of_Uart_WriteConstString:
 30778                           	opt stack 0
 30779                           tosu	equ	0xFFF
 30780                           tosh	equ	0xFFE
 30781                           tosl	equ	0xFFD
 30782                           pclath	equ	0xFFA
 30783                           tblptru	equ	0xFF8
 30784                           tblptrh	equ	0xFF7
 30785                           tblptrl	equ	0xFF6
 30786                           tablat	equ	0xFF5
 30787                           prodh	equ	0xFF4
 30788                           prodl	equ	0xFF3
 30789                           intcon	equ	0xFF2
 30790                           intcon2	equ	0xFF1
 30791                           intcon3	equ	0xFF0
 30792                           indf0	equ	0xFEF
 30793                           postinc0	equ	0xFEE
 30794                           plusw0	equ	0xFEB
 30795                           fsr0h	equ	0xFEA
 30796                           fsr0l	equ	0xFE9
 30797                           wreg	equ	0xFE8
 30798                           indf1	equ	0xFE7
 30799                           postinc1	equ	0xFE6
 30800                           postdec1	equ	0xFE5
 30801                           plusw1	equ	0xFE3
 30802                           fsr1h	equ	0xFE2
 30803                           fsr1l	equ	0xFE1
 30804                           indf2	equ	0xFDF
 30805                           postinc2	equ	0xFDE
 30806                           postdec2	equ	0xFDD
 30807                           plusw2	equ	0xFDB
 30808                           fsr2h	equ	0xFDA
 30809                           fsr2l	equ	0xFD9
 30810                           status	equ	0xFD8
 30811                           
 30812 ;; *************** function _UartWriteByte *****************
 30813 ;; Defined at:
 30814 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30815 ;; Parameters:    Size  Location     Type
 30816 ;;  Module          1    wreg     unsigned char 
 30817 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 30818 ;; Auto vars:     Size  Location     Type
 30819 ;;  Module          1   30[BANK0 ] unsigned char 
 30820 ;; Return value:  Size  Location     Type
 30821 ;;                  1    wreg      void 
 30822 ;; Registers used:
 30823 ;;		wreg, status,2, status,0
 30824 ;; Tracked objects:
 30825 ;;		On entry : 0/0
 30826 ;;		On exit  : 0/0
 30827 ;;		Unchanged: 0/0
 30828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30829 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30833 ;;Total ram usage:        2 bytes
 30834 ;; Hardware stack levels used:    1
 30835 ;; Hardware stack levels required when called:   11
 30836 ;; This function calls:
 30837 ;;		Nothing
 30838 ;; This function is called by:
 30839 ;;		_Uart_WriteConstString
 30840 ;;		_Uart_WriteString
 30841 ;;		_Uart_WriteStringLen
 30842 ;; This function uses a non-reentrant model
 30843 ;;
 30844                           
 30845                           	psect	text139
 30846  00660E                     __ptext139:
 30847                           	opt stack 0
 30848  00660E                     _UartWriteByte:
 30849                           	opt stack 12
 30850                           
 30851                           ;incstack = 0
 30852                           ;UartWriteByte@Module stored from wreg
 30853  00660E  0100               	movlb	0	; () banked
 30854  006610  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 30855                           
 30856                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 30857  006612  0100               	movlb	0	; () banked
 30858  006614  057E               	decf	UartWriteByte@Module& (0+255),w,b
 30859  006616  A4D8               	btfss	status,2,c
 30860  006618  D003               	goto	l639
 30861                           
 30862                           ; BSR set to: 0
 30863                           ;uart_drv.c: 176: {
 30864                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 30865  00661A  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 30866                           
 30867                           ;uart_drv.c: 179: }
 30868  00661E  0012               	return	
 30869  006620                     l639:
 30870                           
 30871                           ; BSR set to: 0
 30872                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 30873                           
 30874                           ; BSR set to: 0
 30875  006620  0E02               	movlw	2
 30876  006622  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 30877  006624  A4D8               	btfss	status,2,c
 30878  006626  0012               	return	
 30879                           
 30880                           ; BSR set to: 0
 30881                           ;uart_drv.c: 181: {
 30882                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 30883  006628  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 30884                           
 30885                           ; BSR set to: 0
 30886  00662C  0012               	return	
 30887  00662E                     __end_of_UartWriteByte:
 30888                           	opt stack 0
 30889                           tosu	equ	0xFFF
 30890                           tosh	equ	0xFFE
 30891                           tosl	equ	0xFFD
 30892                           pclath	equ	0xFFA
 30893                           tblptru	equ	0xFF8
 30894                           tblptrh	equ	0xFF7
 30895                           tblptrl	equ	0xFF6
 30896                           tablat	equ	0xFF5
 30897                           prodh	equ	0xFF4
 30898                           prodl	equ	0xFF3
 30899                           intcon	equ	0xFF2
 30900                           intcon2	equ	0xFF1
 30901                           intcon3	equ	0xFF0
 30902                           indf0	equ	0xFEF
 30903                           postinc0	equ	0xFEE
 30904                           plusw0	equ	0xFEB
 30905                           fsr0h	equ	0xFEA
 30906                           fsr0l	equ	0xFE9
 30907                           wreg	equ	0xFE8
 30908                           indf1	equ	0xFE7
 30909                           postinc1	equ	0xFE6
 30910                           postdec1	equ	0xFE5
 30911                           plusw1	equ	0xFE3
 30912                           fsr1h	equ	0xFE2
 30913                           fsr1l	equ	0xFE1
 30914                           indf2	equ	0xFDF
 30915                           postinc2	equ	0xFDE
 30916                           postdec2	equ	0xFDD
 30917                           plusw2	equ	0xFDB
 30918                           fsr2h	equ	0xFDA
 30919                           fsr2l	equ	0xFD9
 30920                           status	equ	0xFD8
 30921                           
 30922 ;; *************** function _UartTxBufferStatus *****************
 30923 ;; Defined at:
 30924 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 30925 ;; Parameters:    Size  Location     Type
 30926 ;;  Module          1    wreg     unsigned char 
 30927 ;; Auto vars:     Size  Location     Type
 30928 ;;  Module          1   30[BANK0 ] unsigned char 
 30929 ;;  TxBufferStat    1   31[BANK0 ] enum E9035
 30930 ;; Return value:  Size  Location     Type
 30931 ;;                  1    wreg      enum E9035
 30932 ;; Registers used:
 30933 ;;		wreg, status,2, status,0
 30934 ;; Tracked objects:
 30935 ;;		On entry : 0/0
 30936 ;;		On exit  : 0/0
 30937 ;;		Unchanged: 0/0
 30938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30942 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30943 ;;Total ram usage:        3 bytes
 30944 ;; Hardware stack levels used:    1
 30945 ;; Hardware stack levels required when called:   11
 30946 ;; This function calls:
 30947 ;;		Nothing
 30948 ;; This function is called by:
 30949 ;;		_Uart_WriteConstString
 30950 ;;		_Uart_WriteString
 30951 ;;		_Uart_WriteStringLen
 30952 ;; This function uses a non-reentrant model
 30953 ;;
 30954                           
 30955                           	psect	text140
 30956  005BD6                     __ptext140:
 30957                           	opt stack 0
 30958  005BD6                     _UartTxBufferStatus:
 30959                           	opt stack 12
 30960                           
 30961                           ; BSR set to: 0
 30962                           ;incstack = 0
 30963                           ;UartTxBufferStatus@Module stored from wreg
 30964  005BD6  0100               	movlb	0	; () banked
 30965  005BD8  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 30966                           
 30967                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 30968  005BDA  0E00               	movlw	0
 30969  005BDC  0100               	movlb	0	; () banked
 30970  005BDE  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 30971                           
 30972                           ; BSR set to: 0
 30973                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 30974  005BE0  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 30975  005BE2  A4D8               	btfss	status,2,c
 30976  005BE4  D00B               	goto	l651
 30977                           
 30978                           ; BSR set to: 0
 30979                           ;uart_drv.c: 228: {
 30980                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 30981  005BE6  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 30982  005BEA  90D8               	bcf	status,0,c
 30983  005BEC  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 30984  005BEE  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 30985  005BF0  D002               	goto	l652
 30986  005BF2                     u11380:
 30987                           
 30988                           ; BSR set to: 0
 30989                           ;uart_drv.c: 231: {
 30990                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 30991  005BF2  0E01               	movlw	1
 30992  005BF4  D014               	goto	L51
 30993  005BF6                     l652:
 30994                           
 30995                           ; BSR set to: 0
 30996                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 30997                           
 30998                           ; BSR set to: 0
 30999  005BF6  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 31000  005BFA  D00C               	goto	L80
 31001  005BFC                     l651:
 31002                           
 31003                           ; BSR set to: 0
 31004                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 31005                           
 31006                           ; BSR set to: 0
 31007  005BFC  0E02               	movlw	2
 31008  005BFE  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 31009  005C00  A4D8               	btfss	status,2,c
 31010  005C02  D00E               	goto	l660
 31011                           
 31012                           ; BSR set to: 0
 31013                           ;uart_drv.c: 244: {
 31014                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 31015  005C04  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 31016  005C08  90D8               	bcf	status,0,c
 31017  005C0A  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31018  005C0C  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 31019  005C0E  D7F1               	goto	u11380
 31020                           
 31021                           ; BSR set to: 0
 31022                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 31023                           
 31024                           ; BSR set to: 0
 31025                           
 31026                           ;uart_drv.c: 249: }
 31027                           
 31028                           ; BSR set to: 0
 31029                           ;uart_drv.c: 247: {
 31030                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 31031  005C10  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 31032  005C14                     L80:
 31033  005C14  90D8               	bcf	status,0,c
 31034  005C16  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31035  005C18  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 31036  005C1A  D002               	goto	l660
 31037                           
 31038                           ; BSR set to: 0
 31039                           ;uart_drv.c: 251: {
 31040                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 31041  005C1C  0E02               	movlw	2
 31042  005C1E                     L51:
 31043  005C1E  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 31044  005C20                     l660:
 31045                           
 31046                           ; BSR set to: 0
 31047                           ;uart_drv.c: 257: }
 31048                           ;uart_drv.c: 258: }
 31049                           ;uart_drv.c: 260: return TxBufferStatus;
 31050                           
 31051                           ; BSR set to: 0
 31052                           
 31053                           ; BSR set to: 0
 31054                           
 31055                           ; BSR set to: 0
 31056                           
 31057                           ; BSR set to: 0
 31058                           
 31059                           ;uart_drv.c: 254: else
 31060                           ;uart_drv.c: 255: {
 31061                           
 31062                           ; BSR set to: 0
 31063  005C20  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 31064  005C22  0012               	return	
 31065  005C24                     __end_of_UartTxBufferStatus:
 31066                           	opt stack 0
 31067                           tosu	equ	0xFFF
 31068                           tosh	equ	0xFFE
 31069                           tosl	equ	0xFFD
 31070                           pclath	equ	0xFFA
 31071                           tblptru	equ	0xFF8
 31072                           tblptrh	equ	0xFF7
 31073                           tblptrl	equ	0xFF6
 31074                           tablat	equ	0xFF5
 31075                           prodh	equ	0xFF4
 31076                           prodl	equ	0xFF3
 31077                           intcon	equ	0xFF2
 31078                           intcon2	equ	0xFF1
 31079                           intcon3	equ	0xFF0
 31080                           indf0	equ	0xFEF
 31081                           postinc0	equ	0xFEE
 31082                           plusw0	equ	0xFEB
 31083                           fsr0h	equ	0xFEA
 31084                           fsr0l	equ	0xFE9
 31085                           wreg	equ	0xFE8
 31086                           indf1	equ	0xFE7
 31087                           postinc1	equ	0xFE6
 31088                           postdec1	equ	0xFE5
 31089                           plusw1	equ	0xFE3
 31090                           fsr1h	equ	0xFE2
 31091                           fsr1l	equ	0xFE1
 31092                           indf2	equ	0xFDF
 31093                           postinc2	equ	0xFDE
 31094                           postdec2	equ	0xFDD
 31095                           plusw2	equ	0xFDB
 31096                           fsr2h	equ	0xFDA
 31097                           fsr2l	equ	0xFD9
 31098                           status	equ	0xFD8
 31099                           
 31100 ;; *************** function _StringCopy *****************
 31101 ;; Defined at:
 31102 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31103 ;; Parameters:    Size  Location     Type
 31104 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 31105 ;;		 -> memorizedNumbersCount(1), memoryPreamble(5), smsText(20), MyApp_Task@emptyNumber(13), 
 31106 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 31107 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), 
 31108 ;;		 -> RxBuffer(400), 
 31109 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 31110 ;;		 -> MyApp_Task@receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 31111 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 31112 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 31113 ;;  Len             2   41[BANK0 ] unsigned short 
 31114 ;; Auto vars:     Size  Location     Type
 31115 ;;  Index           2   45[BANK0 ] unsigned short 
 31116 ;; Return value:  Size  Location     Type
 31117 ;;                  1    wreg      void 
 31118 ;; Registers used:
 31119 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31120 ;; Tracked objects:
 31121 ;;		On entry : 0/0
 31122 ;;		On exit  : 0/0
 31123 ;;		Unchanged: 0/0
 31124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31125 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31127 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31128 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31129 ;;Total ram usage:       10 bytes
 31130 ;; Hardware stack levels used:    1
 31131 ;; Hardware stack levels required when called:   11
 31132 ;; This function calls:
 31133 ;;		Nothing
 31134 ;; This function is called by:
 31135 ;;		_ModemEvtParser
 31136 ;;		_GetSmsSm
 31137 ;;		_SendSmsSm
 31138 ;;		_Mdm_GetSmsData
 31139 ;;		_InitGprsNetwork
 31140 ;;		_HttpGetMethod
 31141 ;;		_Eeprom_Write
 31142 ;;		_MyApp_Task
 31143 ;;		_Mdm_SendSmsData
 31144 ;; This function uses a non-reentrant model
 31145 ;;
 31146                           
 31147                           	psect	text141
 31148  005576                     __ptext141:
 31149                           	opt stack 0
 31150  005576                     _StringCopy:
 31151                           	opt stack 14
 31152                           
 31153                           ;sf.c: 106: UINT16 Index = 0;
 31154                           
 31155                           ; BSR set to: 0
 31156                           ;incstack = 0
 31157  005576  0E00               	movlw	0
 31158  005578  0100               	movlb	0	; () banked
 31159  00557A  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 31160  00557C  0E00               	movlw	0
 31161  00557E  6F8D               	movwf	StringCopy@Index& (0+255),b
 31162                           
 31163                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 31164  005580  0E00               	movlw	0
 31165  005582  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 31166  005584  0E00               	movlw	0
 31167  005586  6F8D               	movwf	StringCopy@Index& (0+255),b
 31168  005588  D020               	goto	l2247
 31169  00558A                     
 31170                           ; BSR set to: 0
 31171                           ;sf.c: 110: {
 31172                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 31173                           
 31174                           ; BSR set to: 0
 31175  00558A  518D               	movf	StringCopy@Index& (0+255),w,b
 31176  00558C  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 31177  00558E  6F8B               	movwf	??_StringCopy& (0+255),b
 31178  005590  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 31179  005592  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 31180  005594  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 31181  005596  C08B  FFF6         	movff	??_StringCopy,tblptrl
 31182  00559A  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 31183  00559E  6AF8               	clrf	tblptru,c
 31184  0055A0  518D               	movf	StringCopy@Index& (0+255),w,b
 31185  0055A2  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 31186  0055A4  6ED9               	movwf	fsr2l,c
 31187  0055A6  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 31188  0055A8  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 31189  0055AA  6EDA               	movwf	fsr2h,c
 31190  0055AC  0E0E               	movlw	(high __ramtop+-1)
 31191  0055AE  64F7               	cpfsgt	tblptrh,c
 31192  0055B0  D003               	bra	u12497
 31193  0055B2  0008               	tblrd		*
 31194  0055B4  50F5               	movf	tablat,w,c
 31195  0055B6  D005               	bra	u12490
 31196  0055B8                     u12497:
 31197  0055B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 31198  0055BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 31199  0055C0  50EF               	movf	indf0,w,c
 31200  0055C2                     u12490:
 31201  0055C2  6EDF               	movwf	indf2,c
 31202  0055C4  0100               	movlb	0	; () banked
 31203  0055C6  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 31204  0055C8  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 31205  0055CA                     l2247:
 31206                           
 31207                           ; BSR set to: 0
 31208                           
 31209                           ; BSR set to: 0
 31210  0055CA  5189               	movf	StringCopy@Len& (0+255),w,b
 31211  0055CC  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 31212  0055CE  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 31213  0055D0  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 31214  0055D2  B0D8               	btfsc	status,0,c
 31215  0055D4  0012               	return	
 31216  0055D6  D7D9               	goto	l2248
 31217  0055D8                     __end_of_StringCopy:
 31218                           	opt stack 0
 31219                           tosu	equ	0xFFF
 31220                           tosh	equ	0xFFE
 31221                           tosl	equ	0xFFD
 31222                           pclath	equ	0xFFA
 31223                           tblptru	equ	0xFF8
 31224                           tblptrh	equ	0xFF7
 31225                           tblptrl	equ	0xFF6
 31226                           tablat	equ	0xFF5
 31227                           prodh	equ	0xFF4
 31228                           prodl	equ	0xFF3
 31229                           intcon	equ	0xFF2
 31230                           intcon2	equ	0xFF1
 31231                           intcon3	equ	0xFF0
 31232                           indf0	equ	0xFEF
 31233                           postinc0	equ	0xFEE
 31234                           plusw0	equ	0xFEB
 31235                           fsr0h	equ	0xFEA
 31236                           fsr0l	equ	0xFE9
 31237                           wreg	equ	0xFE8
 31238                           indf1	equ	0xFE7
 31239                           postinc1	equ	0xFE6
 31240                           postdec1	equ	0xFE5
 31241                           plusw1	equ	0xFE3
 31242                           fsr1h	equ	0xFE2
 31243                           fsr1l	equ	0xFE1
 31244                           indf2	equ	0xFDF
 31245                           postinc2	equ	0xFDE
 31246                           postdec2	equ	0xFDD
 31247                           plusw2	equ	0xFDB
 31248                           fsr2h	equ	0xFDA
 31249                           fsr2l	equ	0xFD9
 31250                           status	equ	0xFD8
 31251                           
 31252 ;; *************** function _OsTmr_StartTimer *****************
 31253 ;; Defined at:
 31254 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31255 ;; Parameters:    Size  Location     Type
 31256 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 31257 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31258 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31259 ;;  Timeout         4   35[BANK0 ] unsigned long 
 31260 ;; Auto vars:     Size  Location     Type
 31261 ;;		None
 31262 ;; Return value:  Size  Location     Type
 31263 ;;                  1    wreg      void 
 31264 ;; Registers used:
 31265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31266 ;; Tracked objects:
 31267 ;;		On entry : 0/0
 31268 ;;		On exit  : 0/0
 31269 ;;		Unchanged: 0/0
 31270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31274 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31275 ;;Total ram usage:        6 bytes
 31276 ;; Hardware stack levels used:    1
 31277 ;; Hardware stack levels required when called:   12
 31278 ;; This function calls:
 31279 ;;		_GetOsTickCounter
 31280 ;; This function is called by:
 31281 ;;		_OsTmr_Wait
 31282 ;;		_CheckModem
 31283 ;;		_SendSmsSm
 31284 ;;		_InitGprsNetwork
 31285 ;;		_HttpGetMethod
 31286 ;;		_I2cSlv_QueryI2cData
 31287 ;;		_Term_MainSm
 31288 ;; This function uses a non-reentrant model
 31289 ;;
 31290                           
 31291                           	psect	text142
 31292  005636                     __ptext142:
 31293                           	opt stack 0
 31294  005636                     _OsTmr_StartTimer:
 31295                           	opt stack 12
 31296                           
 31297                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 31298                           
 31299                           ; BSR set to: 0
 31300                           ;incstack = 0
 31301  005636  0100               	movlb	0	; () banked
 31302  005638  EE20 F001          	lfsr	2,1
 31303  00563C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31304  00563E  26D9               	addwf	fsr2l,f,c
 31305  005640  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31306  005642  22DA               	addwfc	fsr2h,f,c
 31307  005644  0E00               	movlw	0
 31308  005646  6EDF               	movwf	indf2,c
 31309                           
 31310                           ; BSR set to: 0
 31311                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 31312  005648  ECFD  F033         	call	_GetOsTickCounter	;wreg free
 31313  00564C  0100               	movlb	0	; () banked
 31314  00564E  EE20 F002          	lfsr	2,2
 31315  005652  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31316  005654  26D9               	addwf	fsr2l,f,c
 31317  005656  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31318  005658  22DA               	addwfc	fsr2h,f,c
 31319  00565A  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 31320  00565E  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 31321  005662  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 31322  005666  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 31323                           
 31324                           ; BSR set to: 0
 31325                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 31326  00566A  EE20 F006          	lfsr	2,6
 31327  00566E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 31328  005670  26D9               	addwf	fsr2l,f,c
 31329  005672  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 31330  005674  22DA               	addwfc	fsr2h,f,c
 31331  005676  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 31332  00567A  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 31333  00567E  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 31334  005682  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 31335                           
 31336                           ; BSR set to: 0
 31337                           ;os_timers.c: 127: Timer->Enabled = 1u;
 31338  005686  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 31339  00568A  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 31340  00568E  0E01               	movlw	1
 31341  005690  6EDF               	movwf	indf2,c
 31342                           
 31343                           ; BSR set to: 0
 31344  005692  0012               	return		;funcret
 31345  005694                     __end_of_OsTmr_StartTimer:
 31346                           	opt stack 0
 31347                           tosu	equ	0xFFF
 31348                           tosh	equ	0xFFE
 31349                           tosl	equ	0xFFD
 31350                           pclath	equ	0xFFA
 31351                           tblptru	equ	0xFF8
 31352                           tblptrh	equ	0xFF7
 31353                           tblptrl	equ	0xFF6
 31354                           tablat	equ	0xFF5
 31355                           prodh	equ	0xFF4
 31356                           prodl	equ	0xFF3
 31357                           intcon	equ	0xFF2
 31358                           intcon2	equ	0xFF1
 31359                           intcon3	equ	0xFF0
 31360                           indf0	equ	0xFEF
 31361                           postinc0	equ	0xFEE
 31362                           plusw0	equ	0xFEB
 31363                           fsr0h	equ	0xFEA
 31364                           fsr0l	equ	0xFE9
 31365                           wreg	equ	0xFE8
 31366                           indf1	equ	0xFE7
 31367                           postinc1	equ	0xFE6
 31368                           postdec1	equ	0xFE5
 31369                           plusw1	equ	0xFE3
 31370                           fsr1h	equ	0xFE2
 31371                           fsr1l	equ	0xFE1
 31372                           indf2	equ	0xFDF
 31373                           postinc2	equ	0xFDE
 31374                           postdec2	equ	0xFDD
 31375                           plusw2	equ	0xFDB
 31376                           fsr2h	equ	0xFDA
 31377                           fsr2l	equ	0xFD9
 31378                           status	equ	0xFD8
 31379                           
 31380 ;; *************** function _OsTmr_GetTimerStatus *****************
 31381 ;; Defined at:
 31382 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31383 ;; Parameters:    Size  Location     Type
 31384 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 31385 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 31386 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 31387 ;; Auto vars:     Size  Location     Type
 31388 ;;		None
 31389 ;; Return value:  Size  Location     Type
 31390 ;;                  1    wreg      enum E7740
 31391 ;; Registers used:
 31392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31393 ;; Tracked objects:
 31394 ;;		On entry : 0/0
 31395 ;;		On exit  : 0/0
 31396 ;;		Unchanged: 0/0
 31397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31400 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31401 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31402 ;;Total ram usage:        6 bytes
 31403 ;; Hardware stack levels used:    1
 31404 ;; Hardware stack levels required when called:   13
 31405 ;; This function calls:
 31406 ;;		_GetElapsedTime
 31407 ;; This function is called by:
 31408 ;;		_OsTmr_Wait
 31409 ;;		_CheckModem
 31410 ;;		_SendSmsSm
 31411 ;;		_InitGprsNetwork
 31412 ;;		_HttpGetMethod
 31413 ;;		_I2cSlv_QueryI2cData
 31414 ;;		_Term_MainSm
 31415 ;; This function uses a non-reentrant model
 31416 ;;
 31417                           
 31418                           	psect	text143
 31419  004D88                     __ptext143:
 31420                           	opt stack 0
 31421  004D88                     _OsTmr_GetTimerStatus:
 31422                           	opt stack 11
 31423                           
 31424                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 31425                           
 31426                           ; BSR set to: 0
 31427                           ;incstack = 0
 31428  004D88  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31429  004D8C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31430  004D90  04DE               	decf	postinc2,w,c
 31431  004D92  A4D8               	btfss	status,2,c
 31432  004D94  D030               	goto	l864
 31433                           
 31434                           ;os_timers.c: 197: {
 31435                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 31436  004D96  0100               	movlb	0	; () banked
 31437  004D98  EE20 F006          	lfsr	2,6
 31438  004D9C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31439  004D9E  26D9               	addwf	fsr2l,f,c
 31440  004DA0  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31441  004DA2  22DA               	addwfc	fsr2h,f,c
 31442  004DA4  EE10 F002          	lfsr	1,2
 31443  004DA8  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31444  004DAA  26E1               	addwf	fsr1l,f,c
 31445  004DAC  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31446  004DAE  22E2               	addwfc	fsr1h,f,c
 31447  004DB0  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 31448  004DB4  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 31449  004DB8  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 31450  004DBC  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 31451  004DC0  EC82  F01F         	call	_GetElapsedTime	;wreg free
 31452  004DC4  50DE               	movf	postinc2,w,c
 31453  004DC6  0100               	movlb	0	; () banked
 31454  004DC8  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 31455  004DCA  50DE               	movf	postinc2,w,c
 31456  004DCC  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 31457  004DCE  50DE               	movf	postinc2,w,c
 31458  004DD0  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 31459  004DD2  50DE               	movf	postinc2,w,c
 31460  004DD4  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 31461  004DD6  A0D8               	btfss	status,0,c
 31462  004DD8  D017               	goto	l867
 31463                           
 31464                           ; BSR set to: 0
 31465                           ;os_timers.c: 200: {
 31466                           ;os_timers.c: 202: Timer->Enabled = 0u;
 31467  004DDA  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 31468  004DDE  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 31469  004DE2  0E00               	movlw	0
 31470  004DE4  6EDF               	movwf	indf2,c
 31471                           
 31472                           ; BSR set to: 0
 31473                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 31474  004DE6  EE20 F001          	lfsr	2,1
 31475  004DEA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31476  004DEC  26D9               	addwf	fsr2l,f,c
 31477  004DEE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31478  004DF0  22DA               	addwfc	fsr2h,f,c
 31479  004DF2  0E01               	movlw	1
 31480  004DF4  D008               	goto	L81
 31481  004DF6                     l864:
 31482                           
 31483                           ;os_timers.c: 211: else
 31484                           ;os_timers.c: 212: {
 31485                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 31486                           
 31487                           ; BSR set to: 0
 31488  004DF6  0100               	movlb	0	; () banked
 31489  004DF8  EE20 F001          	lfsr	2,1
 31490  004DFC  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31491  004DFE  26D9               	addwf	fsr2l,f,c
 31492  004E00  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31493  004E02  22DA               	addwfc	fsr2h,f,c
 31494  004E04  0E02               	movlw	2
 31495  004E06                     L81:
 31496  004E06  6EDF               	movwf	indf2,c
 31497  004E08                     l867:
 31498                           
 31499                           ; BSR set to: 0
 31500                           ;os_timers.c: 215: }
 31501                           ;os_timers.c: 218: return Timer->Status;
 31502  004E08  EE20 F001          	lfsr	2,1
 31503  004E0C  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 31504  004E0E  26D9               	addwf	fsr2l,f,c
 31505  004E10  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 31506  004E12  22DA               	addwfc	fsr2h,f,c
 31507  004E14  50DF               	movf	indf2,w,c
 31508  004E16  0012               	return	
 31509  004E18                     __end_of_OsTmr_GetTimerStatus:
 31510                           	opt stack 0
 31511                           tosu	equ	0xFFF
 31512                           tosh	equ	0xFFE
 31513                           tosl	equ	0xFFD
 31514                           pclath	equ	0xFFA
 31515                           tblptru	equ	0xFF8
 31516                           tblptrh	equ	0xFF7
 31517                           tblptrl	equ	0xFF6
 31518                           tablat	equ	0xFF5
 31519                           prodh	equ	0xFF4
 31520                           prodl	equ	0xFF3
 31521                           intcon	equ	0xFF2
 31522                           intcon2	equ	0xFF1
 31523                           intcon3	equ	0xFF0
 31524                           indf0	equ	0xFEF
 31525                           postinc0	equ	0xFEE
 31526                           plusw0	equ	0xFEB
 31527                           fsr0h	equ	0xFEA
 31528                           fsr0l	equ	0xFE9
 31529                           wreg	equ	0xFE8
 31530                           indf1	equ	0xFE7
 31531                           postinc1	equ	0xFE6
 31532                           postdec1	equ	0xFE5
 31533                           plusw1	equ	0xFE3
 31534                           fsr1h	equ	0xFE2
 31535                           fsr1l	equ	0xFE1
 31536                           indf2	equ	0xFDF
 31537                           postinc2	equ	0xFDE
 31538                           postdec2	equ	0xFDD
 31539                           plusw2	equ	0xFDB
 31540                           fsr2h	equ	0xFDA
 31541                           fsr2l	equ	0xFD9
 31542                           status	equ	0xFD8
 31543                           
 31544 ;; *************** function _GetElapsedTime *****************
 31545 ;; Defined at:
 31546 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31547 ;; Parameters:    Size  Location     Type
 31548 ;;  StartTime       4   33[BANK0 ] unsigned long 
 31549 ;; Auto vars:     Size  Location     Type
 31550 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 31551 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 31552 ;; Return value:  Size  Location     Type
 31553 ;;                  4   33[BANK0 ] unsigned long 
 31554 ;; Registers used:
 31555 ;;		wreg, status,2, status,0, cstack
 31556 ;; Tracked objects:
 31557 ;;		On entry : 0/0
 31558 ;;		On exit  : 0/0
 31559 ;;		Unchanged: 0/0
 31560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31561 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31562 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31563 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31564 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31565 ;;Total ram usage:       20 bytes
 31566 ;; Hardware stack levels used:    1
 31567 ;; Hardware stack levels required when called:   12
 31568 ;; This function calls:
 31569 ;;		_GetOsTickCounter
 31570 ;; This function is called by:
 31571 ;;		_OsTmr_GetTimerStatus
 31572 ;;		_OsTmr_GetRemainingTime
 31573 ;; This function uses a non-reentrant model
 31574 ;;
 31575                           
 31576                           	psect	text144
 31577  003F04                     __ptext144:
 31578                           	opt stack 0
 31579  003F04                     _GetElapsedTime:
 31580                           	opt stack 11
 31581                           
 31582                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 31583                           ;os_timers.c: 87: UINT32 TimeValue;
 31584                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 31585                           
 31586                           ; BSR set to: 0
 31587                           ;incstack = 0
 31588  003F04  ECFD  F033         	call	_GetOsTickCounter	;wreg free
 31589  003F08  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 31590  003F0C  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 31591  003F10  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 31592  003F14  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 31593                           
 31594                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 31595  003F18  0100               	movlb	0	; () banked
 31596  003F1A  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 31597  003F1C  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31598  003F1E  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 31599  003F20  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31600  003F22  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 31601  003F24  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31602  003F26  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 31603  003F28  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31604  003F2A  A0D8               	btfss	status,0,c
 31605  003F2C  D01D               	goto	l844
 31606                           
 31607                           ; BSR set to: 0
 31608                           ;os_timers.c: 94: {
 31609                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 31610  003F2E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31611  003F32  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31612  003F36  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31613  003F3A  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31614  003F3E  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31615  003F40  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31616  003F42  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31617  003F44  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31618  003F46  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31619  003F48  0E00               	movlw	0
 31620  003F4A  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31621  003F4C  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31622  003F4E  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31623  003F50  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31624  003F52  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31625  003F54  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31626  003F56  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31627  003F58  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31628  003F5A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31629  003F5C  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31630  003F5E  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31631  003F60  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31632  003F62  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31633  003F64  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31634  003F66  D028               	goto	L52
 31635  003F68                     l844:
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;os_timers.c: 97: else
 31639                           ;os_timers.c: 98: {
 31640                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 31641                           
 31642                           ; BSR set to: 0
 31643  003F68  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 31644  003F6C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 31645  003F70  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 31646  003F74  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 31647  003F78  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 31648  003F7A  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 31649  003F7C  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 31650  003F7E  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 31651  003F80  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 31652  003F82  0E00               	movlw	0
 31653  003F84  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 31654  003F86  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 31655  003F88  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 31656  003F8A  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 31657  003F8C  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 31658  003F8E  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 31659  003F90  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 31660  003F92  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 31661  003F94  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 31662  003F96  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 31663  003F98  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 31664  003F9A  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 31665  003F9C  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 31666  003F9E  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 31667  003FA0  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 31668  003FA2  0EFF               	movlw	255
 31669  003FA4  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 31670  003FA6  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 31671  003FA8  0EFF               	movlw	255
 31672  003FAA  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 31673  003FAC  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 31674  003FAE  0EFF               	movlw	255
 31675  003FB0  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 31676  003FB2  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 31677  003FB4  0EFF               	movlw	255
 31678  003FB6  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 31679  003FB8                     L52:
 31680  003FB8  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 31681                           
 31682                           ; BSR set to: 0
 31683                           ;os_timers.c: 100: }
 31684                           ;os_timers.c: 102: return TimeValue;
 31685                           
 31686                           ; BSR set to: 0
 31687  003FBA  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 31688  003FBE  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 31689  003FC2  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 31690  003FC6  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 31691  003FCA  0012               	return	
 31692  003FCC                     __end_of_GetElapsedTime:
 31693                           	opt stack 0
 31694                           tosu	equ	0xFFF
 31695                           tosh	equ	0xFFE
 31696                           tosl	equ	0xFFD
 31697                           pclath	equ	0xFFA
 31698                           tblptru	equ	0xFF8
 31699                           tblptrh	equ	0xFF7
 31700                           tblptrl	equ	0xFF6
 31701                           tablat	equ	0xFF5
 31702                           prodh	equ	0xFF4
 31703                           prodl	equ	0xFF3
 31704                           intcon	equ	0xFF2
 31705                           intcon2	equ	0xFF1
 31706                           intcon3	equ	0xFF0
 31707                           indf0	equ	0xFEF
 31708                           postinc0	equ	0xFEE
 31709                           plusw0	equ	0xFEB
 31710                           fsr0h	equ	0xFEA
 31711                           fsr0l	equ	0xFE9
 31712                           wreg	equ	0xFE8
 31713                           indf1	equ	0xFE7
 31714                           postinc1	equ	0xFE6
 31715                           postdec1	equ	0xFE5
 31716                           plusw1	equ	0xFE3
 31717                           fsr1h	equ	0xFE2
 31718                           fsr1l	equ	0xFE1
 31719                           indf2	equ	0xFDF
 31720                           postinc2	equ	0xFDE
 31721                           postdec2	equ	0xFDD
 31722                           plusw2	equ	0xFDB
 31723                           fsr2h	equ	0xFDA
 31724                           fsr2l	equ	0xFD9
 31725                           status	equ	0xFD8
 31726                           
 31727 ;; *************** function _GetOsTickCounter *****************
 31728 ;; Defined at:
 31729 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 31730 ;; Parameters:    Size  Location     Type
 31731 ;;		None
 31732 ;; Auto vars:     Size  Location     Type
 31733 ;;		None
 31734 ;; Return value:  Size  Location     Type
 31735 ;;                  4   29[BANK0 ] unsigned long 
 31736 ;; Registers used:
 31737 ;;		None
 31738 ;; Tracked objects:
 31739 ;;		On entry : 0/0
 31740 ;;		On exit  : 0/0
 31741 ;;		Unchanged: 0/0
 31742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31746 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31747 ;;Total ram usage:        4 bytes
 31748 ;; Hardware stack levels used:    1
 31749 ;; Hardware stack levels required when called:   11
 31750 ;; This function calls:
 31751 ;;		Nothing
 31752 ;; This function is called by:
 31753 ;;		_GetElapsedTime
 31754 ;;		_OsTmr_StartTimer
 31755 ;;		_OsTmr_GetElapsedTime
 31756 ;; This function uses a non-reentrant model
 31757 ;;
 31758                           
 31759                           	psect	text145
 31760  0067FA                     __ptext145:
 31761                           	opt stack 0
 31762  0067FA                     _GetOsTickCounter:
 31763                           	opt stack 12
 31764                           
 31765                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 31766                           
 31767                           ; BSR set to: 0
 31768                           ;incstack = 0
 31769  0067FA  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 31770  0067FE  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 31771  006802  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 31772  006806  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 31773  00680A  0012               	return		;funcret
 31774  00680C                     __end_of_GetOsTickCounter:
 31775                           	opt stack 0
 31776                           tosu	equ	0xFFF
 31777                           tosh	equ	0xFFE
 31778                           tosl	equ	0xFFD
 31779                           pclath	equ	0xFFA
 31780                           tblptru	equ	0xFF8
 31781                           tblptrh	equ	0xFF7
 31782                           tblptrl	equ	0xFF6
 31783                           tablat	equ	0xFF5
 31784                           prodh	equ	0xFF4
 31785                           prodl	equ	0xFF3
 31786                           intcon	equ	0xFF2
 31787                           intcon2	equ	0xFF1
 31788                           intcon3	equ	0xFF0
 31789                           indf0	equ	0xFEF
 31790                           postinc0	equ	0xFEE
 31791                           plusw0	equ	0xFEB
 31792                           fsr0h	equ	0xFEA
 31793                           fsr0l	equ	0xFE9
 31794                           wreg	equ	0xFE8
 31795                           indf1	equ	0xFE7
 31796                           postinc1	equ	0xFE6
 31797                           postdec1	equ	0xFE5
 31798                           plusw1	equ	0xFE3
 31799                           fsr1h	equ	0xFE2
 31800                           fsr1l	equ	0xFE1
 31801                           indf2	equ	0xFDF
 31802                           postinc2	equ	0xFDE
 31803                           postdec2	equ	0xFDD
 31804                           plusw2	equ	0xFDB
 31805                           fsr2h	equ	0xFDA
 31806                           fsr2l	equ	0xFD9
 31807                           status	equ	0xFD8
 31808                           
 31809 ;; *************** function _ClearBuffer *****************
 31810 ;; Defined at:
 31811 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 31812 ;; Parameters:    Size  Location     Type
 31813 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 31814 ;;		 -> GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_SmsRx(102)
      +, 
 31815 ;;		 -> callerNumber(13), RxBuffer(400), 
 31816 ;;  Len             2   31[BANK0 ] unsigned short 
 31817 ;; Auto vars:     Size  Location     Type
 31818 ;;  Index           2   33[BANK0 ] unsigned short 
 31819 ;; Return value:  Size  Location     Type
 31820 ;;                  1    wreg      void 
 31821 ;; Registers used:
 31822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31823 ;; Tracked objects:
 31824 ;;		On entry : 0/0
 31825 ;;		On exit  : 0/0
 31826 ;;		Unchanged: 0/0
 31827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31828 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31829 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31831 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31832 ;;Total ram usage:        6 bytes
 31833 ;; Hardware stack levels used:    1
 31834 ;; Hardware stack levels required when called:   11
 31835 ;; This function calls:
 31836 ;;		Nothing
 31837 ;; This function is called by:
 31838 ;;		_GetSmsSm
 31839 ;;		_GetCallerNumber
 31840 ;;		_InitGprsNetwork
 31841 ;;		_HttpGetMethod
 31842 ;;		_GsmGprsTerminal
 31843 ;; This function uses a non-reentrant model
 31844 ;;
 31845                           
 31846                           	psect	text146
 31847  006194                     __ptext146:
 31848                           	opt stack 0
 31849  006194                     _ClearBuffer:
 31850                           	opt stack 15
 31851                           
 31852                           ;sf.c: 126: UINT16 Index = 0;
 31853                           
 31854                           ;incstack = 0
 31855  006194  0E00               	movlw	0
 31856  006196  0100               	movlb	0	; () banked
 31857  006198  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31858  00619A  0E00               	movlw	0
 31859  00619C  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31860                           
 31861                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 31862  00619E  0E00               	movlw	0
 31863  0061A0  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 31864  0061A2  0E00               	movlw	0
 31865  0061A4  6F81               	movwf	ClearBuffer@Index& (0+255),b
 31866  0061A6  D00A               	goto	l2253
 31867  0061A8                     
 31868                           ; BSR set to: 0
 31869                           ;sf.c: 130: {
 31870                           ;sf.c: 131: *(Buffer + Index) = 0;
 31871                           
 31872                           ; BSR set to: 0
 31873  0061A8  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31874  0061AA  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 31875  0061AC  6ED9               	movwf	fsr2l,c
 31876  0061AE  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31877  0061B0  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 31878  0061B2  6EDA               	movwf	fsr2h,c
 31879  0061B4  0E00               	movlw	0
 31880  0061B6  6EDF               	movwf	indf2,c
 31881                           
 31882                           ; BSR set to: 0
 31883  0061B8  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 31884  0061BA  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 31885  0061BC                     l2253:
 31886                           
 31887                           ; BSR set to: 0
 31888                           
 31889                           ; BSR set to: 0
 31890  0061BC  5181               	movf	ClearBuffer@Index& (0+255),w,b
 31891  0061BE  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 31892  0061C0  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 31893  0061C2  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 31894  0061C4  A0D8               	btfss	status,0,c
 31895  0061C6  0012               	return	
 31896  0061C8  D7EF               	goto	l2254
 31897  0061CA                     __end_of_ClearBuffer:
 31898                           	opt stack 0
 31899                           tosu	equ	0xFFF
 31900                           tosh	equ	0xFFE
 31901                           tosl	equ	0xFFD
 31902                           pclath	equ	0xFFA
 31903                           tblptru	equ	0xFF8
 31904                           tblptrh	equ	0xFF7
 31905                           tblptrl	equ	0xFF6
 31906                           tablat	equ	0xFF5
 31907                           prodh	equ	0xFF4
 31908                           prodl	equ	0xFF3
 31909                           intcon	equ	0xFF2
 31910                           intcon2	equ	0xFF1
 31911                           intcon3	equ	0xFF0
 31912                           indf0	equ	0xFEF
 31913                           postinc0	equ	0xFEE
 31914                           plusw0	equ	0xFEB
 31915                           fsr0h	equ	0xFEA
 31916                           fsr0l	equ	0xFE9
 31917                           wreg	equ	0xFE8
 31918                           indf1	equ	0xFE7
 31919                           postinc1	equ	0xFE6
 31920                           postdec1	equ	0xFE5
 31921                           plusw1	equ	0xFE3
 31922                           fsr1h	equ	0xFE2
 31923                           fsr1l	equ	0xFE1
 31924                           indf2	equ	0xFDF
 31925                           postinc2	equ	0xFDE
 31926                           postdec2	equ	0xFDD
 31927                           plusw2	equ	0xFDB
 31928                           fsr2h	equ	0xFDA
 31929                           fsr2l	equ	0xFD9
 31930                           status	equ	0xFD8
 31931                           
 31932 ;; *************** function _LedStateMachine *****************
 31933 ;; Defined at:
 31934 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 31935 ;; Parameters:    Size  Location     Type
 31936 ;;  Led             1    wreg     unsigned char 
 31937 ;;  LedSts          2   47[BANK0 ] PTR enum E8952
 31938 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 31939 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 31940 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 31941 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 31942 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 31943 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 31944 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 31945 ;; Auto vars:     Size  Location     Type
 31946 ;;  Led             1   57[BANK0 ] unsigned char 
 31947 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 31948 ;; Return value:  Size  Location     Type
 31949 ;;                  1    wreg      unsigned char 
 31950 ;; Registers used:
 31951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 31952 ;; Tracked objects:
 31953 ;;		On entry : 0/0
 31954 ;;		On exit  : 0/0
 31955 ;;		Unchanged: 0/0
 31956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31958 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31960 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31961 ;;Total ram usage:       11 bytes
 31962 ;; Hardware stack levels used:    1
 31963 ;; Hardware stack levels required when called:   13
 31964 ;; This function calls:
 31965 ;;		_LedBlinkStateMachine
 31966 ;;		_LedPulseStateMachine
 31967 ;;		_Led_SetLedStatus
 31968 ;; This function is called by:
 31969 ;;		_Led_MainTask
 31970 ;; This function uses a non-reentrant model
 31971 ;;
 31972                           
 31973                           	psect	text147
 31974  0046E6                     __ptext147:
 31975                           	opt stack 0
 31976  0046E6                     _LedStateMachine:
 31977                           	opt stack 14
 31978                           
 31979                           ; BSR set to: 0
 31980                           ;incstack = 0
 31981                           ;LedStateMachine@Led stored from wreg
 31982  0046E6  0100               	movlb	0	; () banked
 31983  0046E8  6F99               	movwf	LedStateMachine@Led& (0+255),b
 31984                           
 31985                           ;led.c: 238: UINT8 LedOutSts = 0u;
 31986  0046EA  0E00               	movlw	0
 31987  0046EC  0100               	movlb	0	; () banked
 31988  0046EE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31989                           
 31990                           ;led.c: 241: switch (*LedSts)
 31991  0046F0  D037               	goto	l2112
 31992  0046F2                     
 31993                           ; BSR set to: 0
 31994                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 31995                           
 31996                           ; BSR set to: 0
 31997  0046F2  0E00               	movlw	0
 31998  0046F4  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 31999                           
 32000                           ; BSR set to: 0
 32001                           ;led.c: 246: *LedOut = ((UINT8)(0));
 32002  0046F6  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32003  0046FA  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32004  0046FE  0E00               	movlw	0
 32005  004700  D007               	goto	L53
 32006  004702                     
 32007                           ; BSR set to: 0
 32008                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 32009                           
 32010                           ; BSR set to: 0
 32011  004702  0E01               	movlw	1
 32012  004704  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32013                           
 32014                           ; BSR set to: 0
 32015                           ;led.c: 252: *LedOut = ((UINT8)(1));
 32016  004706  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32017  00470A  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32018  00470E  0E01               	movlw	1
 32019  004710                     L53:
 32020  004710  6EDF               	movwf	indf2,c
 32021                           
 32022                           ;led.c: 253: break;
 32023  004712  D03A               	goto	l2114
 32024  004714                     
 32025                           ; BSR set to: 0
 32026                           ;led.c: 257: if (*LedOut == 1)
 32027                           
 32028                           ; BSR set to: 0
 32029  004714  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32030  004718  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32031  00471C  04DE               	decf	postinc2,w,c
 32032  00471E  A4D8               	btfss	status,2,c
 32033  004720  D006               	goto	l2117
 32034                           
 32035                           ; BSR set to: 0
 32036                           ;led.c: 258: {
 32037                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 32038  004722  0E00               	movlw	0
 32039  004724  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32040  004726  5199               	movf	LedStateMachine@Led& (0+255),w,b
 32041  004728  EC79  F031         	call	_Led_SetLedStatus
 32042                           
 32043                           ;led.c: 261: }
 32044  00472C  D02D               	goto	l2114
 32045  00472E                     l2117:
 32046                           
 32047                           ;led.c: 262: else
 32048                           ;led.c: 263: {
 32049                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 32050  00472E  0E01               	movlw	1
 32051  004730  0100               	movlb	0	; () banked
 32052  004732  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32053  004734  5199               	movf	LedStateMachine@Led& (0+255),w,b
 32054  004736  EC79  F031         	call	_Led_SetLedStatus
 32055                           
 32056                           ;led.c: 266: }
 32057                           ;led.c: 267: break;
 32058  00473A  D026               	goto	l2114
 32059  00473C                     
 32060                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 32061  00473C  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 32062  004740  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 32063  004744  ECDF  F014         	call	_LedBlinkStateMachine	;wreg free
 32064  004748  D008               	goto	L54
 32065  00474A                     
 32066                           ; BSR set to: 0
 32067                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 32068                           
 32069                           ; BSR set to: 0
 32070  00474A  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 32071  00474E  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 32072  004752  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 32073  004756  EC0B  F01A         	call	_LedPulseStateMachine	;wreg free
 32074  00475A                     L54:
 32075  00475A  0100               	movlb	0	; () banked
 32076  00475C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32077                           
 32078                           ; BSR set to: 0
 32079                           ;led.c: 281: }
 32080                           
 32081                           ; BSR set to: 0
 32082                           ;led.c: 280: break;
 32083                           
 32084                           ;led.c: 279: default:
 32085                           
 32086                           ;led.c: 277: break;
 32087  00475E  D014               	goto	l2114
 32088  004760                     l2112:
 32089                           
 32090                           ; BSR set to: 0
 32091                           
 32092                           ; BSR set to: 0
 32093  004760  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 32094  004764  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 32095  004768  50DF               	movf	indf2,w,c
 32096                           
 32097                           ; Switch size 1, requested type "space"
 32098                           ; Number of cases is 5, Range of values is 0 to 4
 32099                           ; switch strategies available:
 32100                           ; Name         Instructions Cycles
 32101                           ; simple_byte           16     9 (average)
 32102                           ;	Chosen strategy is simple_byte
 32103  00476A  0A00               	xorlw	0	; case 0
 32104  00476C  B4D8               	btfsc	status,2,c
 32105  00476E  D7C1               	goto	l2113
 32106  004770  0A01               	xorlw	1	; case 1
 32107  004772  B4D8               	btfsc	status,2,c
 32108  004774  D7C6               	goto	l2115
 32109  004776  0A03               	xorlw	3	; case 2
 32110  004778  B4D8               	btfsc	status,2,c
 32111  00477A  D7CC               	goto	l2116
 32112  00477C  0A01               	xorlw	1	; case 3
 32113  00477E  B4D8               	btfsc	status,2,c
 32114  004780  D7DD               	goto	l2119
 32115  004782  0A07               	xorlw	7	; case 4
 32116  004784  B4D8               	btfsc	status,2,c
 32117  004786  D7E1               	goto	l2120
 32118  004788                     l2114:
 32119                           
 32120                           ;led.c: 283: return LedOutSts;
 32121                           
 32122                           ; BSR set to: 0
 32123  004788  0100               	movlb	0	; () banked
 32124  00478A  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 32125  00478C  0012               	return	
 32126  00478E                     __end_of_LedStateMachine:
 32127                           	opt stack 0
 32128                           tosu	equ	0xFFF
 32129                           tosh	equ	0xFFE
 32130                           tosl	equ	0xFFD
 32131                           pclath	equ	0xFFA
 32132                           tblptru	equ	0xFF8
 32133                           tblptrh	equ	0xFF7
 32134                           tblptrl	equ	0xFF6
 32135                           tablat	equ	0xFF5
 32136                           prodh	equ	0xFF4
 32137                           prodl	equ	0xFF3
 32138                           intcon	equ	0xFF2
 32139                           intcon2	equ	0xFF1
 32140                           intcon3	equ	0xFF0
 32141                           indf0	equ	0xFEF
 32142                           postinc0	equ	0xFEE
 32143                           plusw0	equ	0xFEB
 32144                           fsr0h	equ	0xFEA
 32145                           fsr0l	equ	0xFE9
 32146                           wreg	equ	0xFE8
 32147                           indf1	equ	0xFE7
 32148                           postinc1	equ	0xFE6
 32149                           postdec1	equ	0xFE5
 32150                           plusw1	equ	0xFE3
 32151                           fsr1h	equ	0xFE2
 32152                           fsr1l	equ	0xFE1
 32153                           indf2	equ	0xFDF
 32154                           postinc2	equ	0xFDE
 32155                           postdec2	equ	0xFDD
 32156                           plusw2	equ	0xFDB
 32157                           fsr2h	equ	0xFDA
 32158                           fsr2l	equ	0xFD9
 32159                           status	equ	0xFD8
 32160                           
 32161 ;; *************** function _LedPulseStateMachine *****************
 32162 ;; Defined at:
 32163 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32164 ;; Parameters:    Size  Location     Type
 32165 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 32166 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 32167 ;;  Led             1   44[BANK0 ] unsigned char 
 32168 ;; Auto vars:     Size  Location     Type
 32169 ;;		None
 32170 ;; Return value:  Size  Location     Type
 32171 ;;                  1    wreg      unsigned char 
 32172 ;; Registers used:
 32173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32174 ;; Tracked objects:
 32175 ;;		On entry : 0/0
 32176 ;;		On exit  : 0/0
 32177 ;;		Unchanged: 0/0
 32178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32179 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32182 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32183 ;;Total ram usage:        5 bytes
 32184 ;; Hardware stack levels used:    1
 32185 ;; Hardware stack levels required when called:   12
 32186 ;; This function calls:
 32187 ;;		_Led_SetLedStatus
 32188 ;;		___lwdiv
 32189 ;; This function is called by:
 32190 ;;		_LedStateMachine
 32191 ;; This function uses a non-reentrant model
 32192 ;;
 32193                           
 32194                           	psect	text148
 32195  003416                     __ptext148:
 32196                           	opt stack 0
 32197  003416                     _LedPulseStateMachine:
 32198                           	opt stack 14
 32199                           
 32200                           ;led.c: 185: switch (LedPulse->LedPulseState)
 32201                           
 32202                           ; BSR set to: 0
 32203                           ;incstack = 0
 32204  003416  D05C               	goto	l2102
 32205  003418                     
 32206                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 32207  003418  0100               	movlb	0	; () banked
 32208  00341A  EE20 F001          	lfsr	2,1
 32209  00341E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32210  003420  26D9               	addwf	fsr2l,f,c
 32211  003422  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32212  003424  22DA               	addwfc	fsr2h,f,c
 32213  003426  0E01               	movlw	1
 32214  003428  6EDF               	movwf	indf2,c
 32215                           
 32216                           ; BSR set to: 0
 32217                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 32218  00342A  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32219  00342E  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32220  003432  0E01               	movlw	1
 32221  003434  D036               	goto	L55
 32222  003436                     
 32223                           ;led.c: 196: LedPulse->LedPulseCounter++;
 32224                           
 32225                           ; BSR set to: 0
 32226  003436  0100               	movlb	0	; () banked
 32227  003438  EE20 F002          	lfsr	2,2
 32228  00343C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32229  00343E  26D9               	addwf	fsr2l,f,c
 32230  003440  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32231  003442  22DA               	addwfc	fsr2h,f,c
 32232  003444  2ADE               	incf	postinc2,f,c
 32233  003446  0E00               	movlw	0
 32234  003448  22DD               	addwfc	postdec2,f,c
 32235                           
 32236                           ; BSR set to: 0
 32237                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 32238  00344A  EE20 F004          	lfsr	2,4
 32239  00344E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32240  003450  26D9               	addwf	fsr2l,f,c
 32241  003452  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32242  003454  22DA               	addwfc	fsr2h,f,c
 32243  003456  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32244  00345A  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32245  00345E  0E00               	movlw	0
 32246  003460  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32247  003462  0E32               	movlw	50
 32248  003464  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32249  003466  ECD0  F02C         	call	___lwdiv	;wreg free
 32250  00346A  0100               	movlb	0	; () banked
 32251  00346C  EE20 F002          	lfsr	2,2
 32252  003470  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32253  003472  26D9               	addwf	fsr2l,f,c
 32254  003474  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32255  003476  22DA               	addwfc	fsr2h,f,c
 32256  003478  5183               	movf	?___lwdiv& (0+255),w,b
 32257  00347A  5CDE               	subwf	postinc2,w,c
 32258  00347C  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32259  00347E  58DE               	subwfb	postinc2,w,c
 32260  003480  A0D8               	btfss	status,0,c
 32261  003482  D034               	goto	l2104
 32262                           
 32263                           ; BSR set to: 0
 32264                           ;led.c: 199: {
 32265                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 32266  003484  EE20 F002          	lfsr	2,2
 32267  003488  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32268  00348A  26D9               	addwf	fsr2l,f,c
 32269  00348C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32270  00348E  22DA               	addwfc	fsr2h,f,c
 32271  003490  0E00               	movlw	0
 32272  003492  6EDE               	movwf	postinc2,c
 32273  003494  0E00               	movlw	0
 32274  003496  6EDD               	movwf	postdec2,c
 32275                           
 32276                           ; BSR set to: 0
 32277                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 32278  003498  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32279  00349C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32280  0034A0  0E02               	movlw	2
 32281  0034A2                     L55:
 32282  0034A2  6EDF               	movwf	indf2,c
 32283                           
 32284                           ; BSR set to: 0
 32285                           ;led.c: 204: }
 32286                           ;led.c: 205: break;
 32287  0034A4  D023               	goto	l2104
 32288  0034A6                     
 32289                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 32290                           
 32291                           ; BSR set to: 0
 32292  0034A6  0100               	movlb	0	; () banked
 32293  0034A8  EE20 F001          	lfsr	2,1
 32294  0034AC  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32295  0034AE  26D9               	addwf	fsr2l,f,c
 32296  0034B0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32297  0034B2  22DA               	addwfc	fsr2h,f,c
 32298  0034B4  0E00               	movlw	0
 32299  0034B6  6EDF               	movwf	indf2,c
 32300                           
 32301                           ; BSR set to: 0
 32302                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 32303  0034B8  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32304  0034BC  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32305  0034C0  0E00               	movlw	0
 32306  0034C2  6EDF               	movwf	indf2,c
 32307                           
 32308                           ; BSR set to: 0
 32309                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 32310  0034C4  0E00               	movlw	0
 32311  0034C6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 32312  0034C8  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 32313  0034CA  EC79  F031         	call	_Led_SetLedStatus
 32314                           
 32315                           ;led.c: 218: }
 32316                           
 32317                           ;led.c: 217: break;
 32318                           
 32319                           ;led.c: 216: default:
 32320                           
 32321                           ;led.c: 214: break;
 32322  0034CE  D00E               	goto	l2104
 32323  0034D0                     l2102:
 32324  0034D0  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 32325  0034D4  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 32326  0034D8  50DF               	movf	indf2,w,c
 32327                           
 32328                           ; Switch size 1, requested type "space"
 32329                           ; Number of cases is 3, Range of values is 0 to 2
 32330                           ; switch strategies available:
 32331                           ; Name         Instructions Cycles
 32332                           ; simple_byte           10     6 (average)
 32333                           ;	Chosen strategy is simple_byte
 32334  0034DA  0A00               	xorlw	0	; case 0
 32335  0034DC  B4D8               	btfsc	status,2,c
 32336  0034DE  D79C               	goto	l2103
 32337  0034E0  0A01               	xorlw	1	; case 1
 32338  0034E2  B4D8               	btfsc	status,2,c
 32339  0034E4  D7A8               	goto	l2105
 32340  0034E6  0A03               	xorlw	3	; case 2
 32341  0034E8  B4D8               	btfsc	status,2,c
 32342  0034EA  D7DD               	goto	l2107
 32343  0034EC                     l2104:
 32344                           
 32345                           ;led.c: 221: return (LedPulse->LedOutState);
 32346  0034EC  0100               	movlb	0	; () banked
 32347  0034EE  EE20 F001          	lfsr	2,1
 32348  0034F2  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 32349  0034F4  26D9               	addwf	fsr2l,f,c
 32350  0034F6  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 32351  0034F8  22DA               	addwfc	fsr2h,f,c
 32352  0034FA  50DF               	movf	indf2,w,c
 32353  0034FC  0012               	return	
 32354  0034FE                     __end_of_LedPulseStateMachine:
 32355                           	opt stack 0
 32356                           tosu	equ	0xFFF
 32357                           tosh	equ	0xFFE
 32358                           tosl	equ	0xFFD
 32359                           pclath	equ	0xFFA
 32360                           tblptru	equ	0xFF8
 32361                           tblptrh	equ	0xFF7
 32362                           tblptrl	equ	0xFF6
 32363                           tablat	equ	0xFF5
 32364                           prodh	equ	0xFF4
 32365                           prodl	equ	0xFF3
 32366                           intcon	equ	0xFF2
 32367                           intcon2	equ	0xFF1
 32368                           intcon3	equ	0xFF0
 32369                           indf0	equ	0xFEF
 32370                           postinc0	equ	0xFEE
 32371                           plusw0	equ	0xFEB
 32372                           fsr0h	equ	0xFEA
 32373                           fsr0l	equ	0xFE9
 32374                           wreg	equ	0xFE8
 32375                           indf1	equ	0xFE7
 32376                           postinc1	equ	0xFE6
 32377                           postdec1	equ	0xFE5
 32378                           plusw1	equ	0xFE3
 32379                           fsr1h	equ	0xFE2
 32380                           fsr1l	equ	0xFE1
 32381                           indf2	equ	0xFDF
 32382                           postinc2	equ	0xFDE
 32383                           postdec2	equ	0xFDD
 32384                           plusw2	equ	0xFDB
 32385                           fsr2h	equ	0xFDA
 32386                           fsr2l	equ	0xFD9
 32387                           status	equ	0xFD8
 32388                           
 32389 ;; *************** function _Led_SetLedStatus *****************
 32390 ;; Defined at:
 32391 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32392 ;; Parameters:    Size  Location     Type
 32393 ;;  Led             1    wreg     unsigned char 
 32394 ;;  LedSts          1   29[BANK0 ] enum E8952
 32395 ;; Auto vars:     Size  Location     Type
 32396 ;;  Led             1   30[BANK0 ] unsigned char 
 32397 ;; Return value:  Size  Location     Type
 32398 ;;                  1    wreg      void 
 32399 ;; Registers used:
 32400 ;;		wreg, status,2, status,0
 32401 ;; Tracked objects:
 32402 ;;		On entry : 0/0
 32403 ;;		On exit  : 0/0
 32404 ;;		Unchanged: 0/0
 32405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32406 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32410 ;;Total ram usage:        2 bytes
 32411 ;; Hardware stack levels used:    1
 32412 ;; Hardware stack levels required when called:   11
 32413 ;; This function calls:
 32414 ;;		Nothing
 32415 ;; This function is called by:
 32416 ;;		_LedPulseStateMachine
 32417 ;;		_LedStateMachine
 32418 ;;		_MyApp_Task
 32419 ;;		_waitSetupCall
 32420 ;;		_blinkForSeconds
 32421 ;; This function uses a non-reentrant model
 32422 ;;
 32423                           
 32424                           	psect	text149
 32425  0062F2                     __ptext149:
 32426                           	opt stack 0
 32427  0062F2                     _Led_SetLedStatus:
 32428                           	opt stack 15
 32429                           
 32430                           ; BSR set to: 0
 32431                           ;incstack = 0
 32432                           ;Led_SetLedStatus@Led stored from wreg
 32433  0062F2  0100               	movlb	0	; () banked
 32434  0062F4  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 32435                           
 32436                           ;led.c: 341: switch (Led)
 32437  0062F6  D009               	goto	l2133
 32438  0062F8                     l2134:
 32439                           
 32440                           ; BSR set to: 0
 32441                           ;led.c: 344: Led1Sts = LedSts;
 32442  0062F8  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 32443                           
 32444                           ;led.c: 345: break;
 32445  0062FC  0012               	return	
 32446  0062FE                     l2136:
 32447                           
 32448                           ; BSR set to: 0
 32449                           ;led.c: 348: Led2Sts = LedSts;
 32450  0062FE  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 32451                           
 32452                           ;led.c: 349: break;
 32453  006302  0012               	return	
 32454  006304                     l2137:
 32455                           
 32456                           ; BSR set to: 0
 32457                           ;led.c: 352: Led3Sts = LedSts;
 32458  006304  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 32459                           
 32460                           ; BSR set to: 0
 32461                           ;led.c: 357: }
 32462                           
 32463                           ; BSR set to: 0
 32464                           ;led.c: 356: break;
 32465                           
 32466                           ;led.c: 355: default:
 32467                           
 32468                           ;led.c: 353: break;
 32469  006308  0012               	return	
 32470  00630A                     l2133:
 32471                           
 32472                           ; BSR set to: 0
 32473  00630A  0100               	movlb	0	; () banked
 32474  00630C  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 32475                           
 32476                           ; Switch size 1, requested type "space"
 32477                           ; Number of cases is 3, Range of values is 1 to 3
 32478                           ; switch strategies available:
 32479                           ; Name         Instructions Cycles
 32480                           ; simple_byte           10     6 (average)
 32481                           ;	Chosen strategy is simple_byte
 32482  00630E  0A01               	xorlw	1	; case 1
 32483  006310  B4D8               	btfsc	status,2,c
 32484  006312  D7F2               	goto	l2134
 32485  006314  0A03               	xorlw	3	; case 2
 32486  006316  B4D8               	btfsc	status,2,c
 32487  006318  D7F2               	goto	l2136
 32488  00631A  0A01               	xorlw	1	; case 3
 32489  00631C  A4D8               	btfss	status,2,c
 32490  00631E  0012               	return	
 32491  006320  D7F1               	goto	l2137
 32492  006322                     __end_of_Led_SetLedStatus:
 32493                           	opt stack 0
 32494                           tosu	equ	0xFFF
 32495                           tosh	equ	0xFFE
 32496                           tosl	equ	0xFFD
 32497                           pclath	equ	0xFFA
 32498                           tblptru	equ	0xFF8
 32499                           tblptrh	equ	0xFF7
 32500                           tblptrl	equ	0xFF6
 32501                           tablat	equ	0xFF5
 32502                           prodh	equ	0xFF4
 32503                           prodl	equ	0xFF3
 32504                           intcon	equ	0xFF2
 32505                           intcon2	equ	0xFF1
 32506                           intcon3	equ	0xFF0
 32507                           indf0	equ	0xFEF
 32508                           postinc0	equ	0xFEE
 32509                           plusw0	equ	0xFEB
 32510                           fsr0h	equ	0xFEA
 32511                           fsr0l	equ	0xFE9
 32512                           wreg	equ	0xFE8
 32513                           indf1	equ	0xFE7
 32514                           postinc1	equ	0xFE6
 32515                           postdec1	equ	0xFE5
 32516                           plusw1	equ	0xFE3
 32517                           fsr1h	equ	0xFE2
 32518                           fsr1l	equ	0xFE1
 32519                           indf2	equ	0xFDF
 32520                           postinc2	equ	0xFDE
 32521                           postdec2	equ	0xFDD
 32522                           plusw2	equ	0xFDB
 32523                           fsr2h	equ	0xFDA
 32524                           fsr2l	equ	0xFD9
 32525                           status	equ	0xFD8
 32526                           
 32527 ;; *************** function _LedBlinkStateMachine *****************
 32528 ;; Defined at:
 32529 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32530 ;; Parameters:    Size  Location     Type
 32531 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 32532 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32533 ;; Auto vars:     Size  Location     Type
 32534 ;;		None
 32535 ;; Return value:  Size  Location     Type
 32536 ;;                  1    wreg      unsigned char 
 32537 ;; Registers used:
 32538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32539 ;; Tracked objects:
 32540 ;;		On entry : 0/0
 32541 ;;		On exit  : 0/0
 32542 ;;		Unchanged: 0/0
 32543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32544 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32547 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32548 ;;Total ram usage:        4 bytes
 32549 ;; Hardware stack levels used:    1
 32550 ;; Hardware stack levels required when called:   12
 32551 ;; This function calls:
 32552 ;;		___lwdiv
 32553 ;; This function is called by:
 32554 ;;		_LedStateMachine
 32555 ;; This function uses a non-reentrant model
 32556 ;;
 32557                           
 32558                           	psect	text150
 32559  0029BE                     __ptext150:
 32560                           	opt stack 0
 32561  0029BE                     _LedBlinkStateMachine:
 32562                           	opt stack 14
 32563                           
 32564                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 32565                           
 32566                           ; BSR set to: 0
 32567                           ;incstack = 0
 32568  0029BE  D08F               	goto	l2089
 32569  0029C0                     
 32570                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 32571  0029C0  0100               	movlb	0	; () banked
 32572  0029C2  EE20 F008          	lfsr	2,8
 32573  0029C6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32574  0029C8  26D9               	addwf	fsr2l,f,c
 32575  0029CA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32576  0029CC  22DA               	addwfc	fsr2h,f,c
 32577  0029CE  EE10 F001          	lfsr	1,1
 32578  0029D2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32579  0029D4  26E1               	addwf	fsr1l,f,c
 32580  0029D6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32581  0029D8  22E2               	addwfc	fsr1h,f,c
 32582  0029DA  CFDF FFE7          	movff	indf2,indf1
 32583                           
 32584                           ; BSR set to: 0
 32585                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 32586  0029DE  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32587  0029E2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32588  0029E6  D040               	goto	L56
 32589  0029E8                     
 32590                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 32591                           
 32592                           ; BSR set to: 0
 32593  0029E8  0100               	movlb	0	; () banked
 32594  0029EA  EE20 F002          	lfsr	2,2
 32595  0029EE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32596  0029F0  26D9               	addwf	fsr2l,f,c
 32597  0029F2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32598  0029F4  22DA               	addwfc	fsr2h,f,c
 32599  0029F6  2ADE               	incf	postinc2,f,c
 32600  0029F8  0E00               	movlw	0
 32601  0029FA  22DD               	addwfc	postdec2,f,c
 32602                           
 32603                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 32604  0029FC  EE20 F001          	lfsr	2,1
 32605  002A00  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32606  002A02  26D9               	addwf	fsr2l,f,c
 32607  002A04  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32608  002A06  22DA               	addwfc	fsr2h,f,c
 32609  002A08  50DF               	movf	indf2,w,c
 32610  002A0A  A4D8               	btfss	status,2,c
 32611  002A0C  D02F               	goto	l2093
 32612                           
 32613                           ; BSR set to: 0
 32614                           ;led.c: 142: {
 32615                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 32616  002A0E  EE20 F006          	lfsr	2,6
 32617  002A12  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32618  002A14  26D9               	addwf	fsr2l,f,c
 32619  002A16  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32620  002A18  22DA               	addwfc	fsr2h,f,c
 32621  002A1A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32622  002A1E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32623  002A22  0E00               	movlw	0
 32624  002A24  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32625  002A26  0E32               	movlw	50
 32626  002A28  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32627  002A2A  ECD0  F02C         	call	___lwdiv	;wreg free
 32628  002A2E  0100               	movlb	0	; () banked
 32629  002A30  EE20 F002          	lfsr	2,2
 32630  002A34  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32631  002A36  26D9               	addwf	fsr2l,f,c
 32632  002A38  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32633  002A3A  22DA               	addwfc	fsr2h,f,c
 32634  002A3C  5183               	movf	?___lwdiv& (0+255),w,b
 32635  002A3E  5CDE               	subwf	postinc2,w,c
 32636  002A40  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32637  002A42  58DE               	subwfb	postinc2,w,c
 32638  002A44  A0D8               	btfss	status,0,c
 32639  002A46  D056               	goto	l2091
 32640                           
 32641                           ; BSR set to: 0
 32642                           ;led.c: 145: {
 32643                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 32644  002A48  EE20 F002          	lfsr	2,2
 32645  002A4C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32646  002A4E  26D9               	addwf	fsr2l,f,c
 32647  002A50  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32648  002A52  22DA               	addwfc	fsr2h,f,c
 32649  002A54  0E00               	movlw	0
 32650  002A56  6EDE               	movwf	postinc2,c
 32651  002A58  0E00               	movlw	0
 32652  002A5A  6EDD               	movwf	postdec2,c
 32653                           
 32654                           ;led.c: 149: LedBlink->LedOutState = OnState;
 32655  002A5C  EE20 F001          	lfsr	2,1
 32656  002A60  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32657  002A62  26D9               	addwf	fsr2l,f,c
 32658  002A64  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32659  002A66  22DA               	addwfc	fsr2h,f,c
 32660  002A68                     L56:
 32661  002A68  0E01               	movlw	1
 32662  002A6A  D037               	goto	L57
 32663  002A6C                     l2093:
 32664                           
 32665                           ; BSR set to: 0
 32666                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 32667                           
 32668                           ; BSR set to: 0
 32669  002A6C  EE20 F001          	lfsr	2,1
 32670  002A70  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32671  002A72  26D9               	addwf	fsr2l,f,c
 32672  002A74  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32673  002A76  22DA               	addwfc	fsr2h,f,c
 32674  002A78  04DE               	decf	postinc2,w,c
 32675  002A7A  A4D8               	btfss	status,2,c
 32676  002A7C  D03B               	goto	l2091
 32677                           
 32678                           ; BSR set to: 0
 32679                           ;led.c: 153: {
 32680                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 32681  002A7E  EE20 F004          	lfsr	2,4
 32682  002A82  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32683  002A84  26D9               	addwf	fsr2l,f,c
 32684  002A86  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32685  002A88  22DA               	addwfc	fsr2h,f,c
 32686  002A8A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 32687  002A8E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 32688  002A92  0E00               	movlw	0
 32689  002A94  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 32690  002A96  0E32               	movlw	50
 32691  002A98  6F85               	movwf	___lwdiv@divisor& (0+255),b
 32692  002A9A  ECD0  F02C         	call	___lwdiv	;wreg free
 32693  002A9E  0100               	movlb	0	; () banked
 32694  002AA0  EE20 F002          	lfsr	2,2
 32695  002AA4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32696  002AA6  26D9               	addwf	fsr2l,f,c
 32697  002AA8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32698  002AAA  22DA               	addwfc	fsr2h,f,c
 32699  002AAC  5183               	movf	?___lwdiv& (0+255),w,b
 32700  002AAE  5CDE               	subwf	postinc2,w,c
 32701  002AB0  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 32702  002AB2  58DE               	subwfb	postinc2,w,c
 32703  002AB4  A0D8               	btfss	status,0,c
 32704  002AB6  D01E               	goto	l2091
 32705                           
 32706                           ; BSR set to: 0
 32707                           ;led.c: 156: {
 32708                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 32709  002AB8  EE20 F002          	lfsr	2,2
 32710  002ABC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32711  002ABE  26D9               	addwf	fsr2l,f,c
 32712  002AC0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32713  002AC2  22DA               	addwfc	fsr2h,f,c
 32714  002AC4  0E00               	movlw	0
 32715  002AC6  6EDE               	movwf	postinc2,c
 32716  002AC8  0E00               	movlw	0
 32717  002ACA  6EDD               	movwf	postdec2,c
 32718                           
 32719                           ;led.c: 160: LedBlink->LedOutState = OffState;
 32720  002ACC  EE20 F001          	lfsr	2,1
 32721  002AD0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32722  002AD2  26D9               	addwf	fsr2l,f,c
 32723  002AD4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32724  002AD6  22DA               	addwfc	fsr2h,f,c
 32725  002AD8  0E00               	movlw	0
 32726  002ADA                     L57:
 32727  002ADA  6EDF               	movwf	indf2,c
 32728                           
 32729                           ; BSR set to: 0
 32730                           ;led.c: 167: }
 32731                           
 32732                           ; BSR set to: 0
 32733                           ;led.c: 166: break;
 32734                           
 32735                           ;led.c: 165: default:
 32736                           
 32737                           ; BSR set to: 0
 32738                           ;led.c: 161: }
 32739                           ;led.c: 162: }
 32740                           ;led.c: 163: break;
 32741                           
 32742                           ; BSR set to: 0
 32743                           
 32744                           ; BSR set to: 0
 32745  002ADC  D00B               	goto	l2091
 32746  002ADE                     l2089:
 32747                           
 32748                           ; BSR set to: 0
 32749  002ADE  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 32750  002AE2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 32751  002AE6  50DF               	movf	indf2,w,c
 32752                           
 32753                           ; Switch size 1, requested type "space"
 32754                           ; Number of cases is 2, Range of values is 0 to 1
 32755                           ; switch strategies available:
 32756                           ; Name         Instructions Cycles
 32757                           ; simple_byte            7     4 (average)
 32758                           ;	Chosen strategy is simple_byte
 32759  002AE8  0A00               	xorlw	0	; case 0
 32760  002AEA  B4D8               	btfsc	status,2,c
 32761  002AEC  D769               	goto	l2090
 32762  002AEE  0A01               	xorlw	1	; case 1
 32763  002AF0  B4D8               	btfsc	status,2,c
 32764  002AF2  D77A               	goto	l2092
 32765  002AF4                     l2091:
 32766                           
 32767                           ;led.c: 170: return (LedBlink->LedOutState);
 32768  002AF4  0100               	movlb	0	; () banked
 32769  002AF6  EE20 F001          	lfsr	2,1
 32770  002AFA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 32771  002AFC  26D9               	addwf	fsr2l,f,c
 32772  002AFE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 32773  002B00  22DA               	addwfc	fsr2h,f,c
 32774  002B02  50DF               	movf	indf2,w,c
 32775  002B04  0012               	return	
 32776  002B06                     __end_of_LedBlinkStateMachine:
 32777                           	opt stack 0
 32778                           tosu	equ	0xFFF
 32779                           tosh	equ	0xFFE
 32780                           tosl	equ	0xFFD
 32781                           pclath	equ	0xFFA
 32782                           tblptru	equ	0xFF8
 32783                           tblptrh	equ	0xFF7
 32784                           tblptrl	equ	0xFF6
 32785                           tablat	equ	0xFF5
 32786                           prodh	equ	0xFF4
 32787                           prodl	equ	0xFF3
 32788                           intcon	equ	0xFF2
 32789                           intcon2	equ	0xFF1
 32790                           intcon3	equ	0xFF0
 32791                           indf0	equ	0xFEF
 32792                           postinc0	equ	0xFEE
 32793                           plusw0	equ	0xFEB
 32794                           fsr0h	equ	0xFEA
 32795                           fsr0l	equ	0xFE9
 32796                           wreg	equ	0xFE8
 32797                           indf1	equ	0xFE7
 32798                           postinc1	equ	0xFE6
 32799                           postdec1	equ	0xFE5
 32800                           plusw1	equ	0xFE3
 32801                           fsr1h	equ	0xFE2
 32802                           fsr1l	equ	0xFE1
 32803                           indf2	equ	0xFDF
 32804                           postinc2	equ	0xFDE
 32805                           postdec2	equ	0xFDD
 32806                           plusw2	equ	0xFDB
 32807                           fsr2h	equ	0xFDA
 32808                           fsr2l	equ	0xFD9
 32809                           status	equ	0xFD8
 32810                           
 32811 ;; *************** function ___lwdiv *****************
 32812 ;; Defined at:
 32813 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 32814 ;; Parameters:    Size  Location     Type
 32815 ;;  dividend        2   35[BANK0 ] unsigned int 
 32816 ;;  divisor         2   37[BANK0 ] unsigned int 
 32817 ;; Auto vars:     Size  Location     Type
 32818 ;;  quotient        2   40[BANK0 ] unsigned int 
 32819 ;;  counter         1   39[BANK0 ] unsigned char 
 32820 ;; Return value:  Size  Location     Type
 32821 ;;                  2   35[BANK0 ] unsigned int 
 32822 ;; Registers used:
 32823 ;;		wreg, status,2, status,0
 32824 ;; Tracked objects:
 32825 ;;		On entry : 0/0
 32826 ;;		On exit  : 0/0
 32827 ;;		Unchanged: 0/0
 32828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32830 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32832 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32833 ;;Total ram usage:        7 bytes
 32834 ;; Hardware stack levels used:    1
 32835 ;; Hardware stack levels required when called:   11
 32836 ;; This function calls:
 32837 ;;		Nothing
 32838 ;; This function is called by:
 32839 ;;		_LedBlinkStateMachine
 32840 ;;		_LedPulseStateMachine
 32841 ;;		_secondsAppTimer
 32842 ;;		_utoa
 32843 ;; This function uses a non-reentrant model
 32844 ;;
 32845                           
 32846                           	psect	text151
 32847  0059A0                     __ptext151:
 32848                           	opt stack 0
 32849  0059A0                     ___lwdiv:
 32850                           	opt stack 14
 32851                           
 32852                           ; BSR set to: 0
 32853                           ;incstack = 0
 32854  0059A0  0E00               	movlw	0
 32855  0059A2  0100               	movlb	0	; () banked
 32856  0059A4  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 32857  0059A6  0E00               	movlw	0
 32858  0059A8  6F88               	movwf	___lwdiv@quotient& (0+255),b
 32859                           
 32860                           ; BSR set to: 0
 32861  0059AA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32862  0059AC  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 32863  0059AE  B4D8               	btfsc	status,2,c
 32864  0059B0  D01C               	goto	l3280
 32865                           
 32866                           ; BSR set to: 0
 32867  0059B2  0E01               	movlw	1
 32868  0059B4  6F87               	movwf	___lwdiv@counter& (0+255),b
 32869  0059B6  D004               	goto	l3275
 32870  0059B8                     
 32871                           ; BSR set to: 0
 32872                           
 32873                           ; BSR set to: 0
 32874  0059B8  90D8               	bcf	status,0,c
 32875  0059BA  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 32876  0059BC  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 32877  0059BE  2B87               	incf	___lwdiv@counter& (0+255),f,b
 32878  0059C0                     l3275:
 32879                           
 32880                           ; BSR set to: 0
 32881                           
 32882                           ; BSR set to: 0
 32883  0059C0  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 32884  0059C2  D7FA               	goto	l3276
 32885  0059C4                     u11880:
 32886                           
 32887                           ; BSR set to: 0
 32888                           
 32889                           ; BSR set to: 0
 32890                           
 32891                           ; BSR set to: 0
 32892  0059C4  90D8               	bcf	status,0,c
 32893  0059C6  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 32894  0059C8  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 32895                           
 32896                           ; BSR set to: 0
 32897  0059CA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32898  0059CC  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 32899  0059CE  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32900  0059D0  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 32901  0059D2  A0D8               	btfss	status,0,c
 32902  0059D4  D005               	goto	l3279
 32903                           
 32904                           ; BSR set to: 0
 32905  0059D6  5185               	movf	___lwdiv@divisor& (0+255),w,b
 32906  0059D8  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 32907  0059DA  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 32908  0059DC  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 32909                           
 32910                           ; BSR set to: 0
 32911  0059DE  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 32912  0059E0                     l3279:
 32913                           
 32914                           ; BSR set to: 0
 32915                           
 32916                           ; BSR set to: 0
 32917  0059E0  90D8               	bcf	status,0,c
 32918  0059E2  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 32919  0059E4  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 32920                           
 32921                           ; BSR set to: 0
 32922  0059E6  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 32923  0059E8  D7ED               	goto	u11880
 32924  0059EA                     l3280:
 32925                           
 32926                           ; BSR set to: 0
 32927                           
 32928                           ; BSR set to: 0
 32929  0059EA  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 32930  0059EE  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32931                           
 32932                           ; BSR set to: 0
 32933  0059F2  0012               	return		;funcret
 32934  0059F4                     __end_of___lwdiv:
 32935                           	opt stack 0
 32936                           tosu	equ	0xFFF
 32937                           tosh	equ	0xFFE
 32938                           tosl	equ	0xFFD
 32939                           pclath	equ	0xFFA
 32940                           tblptru	equ	0xFF8
 32941                           tblptrh	equ	0xFF7
 32942                           tblptrl	equ	0xFF6
 32943                           tablat	equ	0xFF5
 32944                           prodh	equ	0xFF4
 32945                           prodl	equ	0xFF3
 32946                           intcon	equ	0xFF2
 32947                           intcon2	equ	0xFF1
 32948                           intcon3	equ	0xFF0
 32949                           indf0	equ	0xFEF
 32950                           postinc0	equ	0xFEE
 32951                           plusw0	equ	0xFEB
 32952                           fsr0h	equ	0xFEA
 32953                           fsr0l	equ	0xFE9
 32954                           wreg	equ	0xFE8
 32955                           indf1	equ	0xFE7
 32956                           postinc1	equ	0xFE6
 32957                           postdec1	equ	0xFE5
 32958                           plusw1	equ	0xFE3
 32959                           fsr1h	equ	0xFE2
 32960                           fsr1l	equ	0xFE1
 32961                           indf2	equ	0xFDF
 32962                           postinc2	equ	0xFDE
 32963                           postdec2	equ	0xFDD
 32964                           plusw2	equ	0xFDB
 32965                           fsr2h	equ	0xFDA
 32966                           fsr2l	equ	0xFD9
 32967                           status	equ	0xFD8
 32968                           
 32969 ;; *************** function _OsAlrm_SetOsAlarm *****************
 32970 ;; Defined at:
 32971 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 32972 ;; Parameters:    Size  Location     Type
 32973 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 32974 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 32975 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 32976 ;;		 -> I2cDummyTx(1), 
 32977 ;; Auto vars:     Size  Location     Type
 32978 ;;		None
 32979 ;; Return value:  Size  Location     Type
 32980 ;;                  1    wreg      void 
 32981 ;; Registers used:
 32982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32983 ;; Tracked objects:
 32984 ;;		On entry : 0/0
 32985 ;;		On exit  : 0/0
 32986 ;;		Unchanged: 0/0
 32987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32991 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32992 ;;Total ram usage:        8 bytes
 32993 ;; Hardware stack levels used:    1
 32994 ;; Hardware stack levels required when called:   12
 32995 ;; This function calls:
 32996 ;;		___wmul
 32997 ;; This function is called by:
 32998 ;;		_I2cSlv_MainTask
 32999 ;; This function uses a non-reentrant model
 33000 ;;
 33001                           
 33002                           	psect	text152
 33003  003FCC                     __ptext152:
 33004                           	opt stack 0
 33005  003FCC                     _OsAlrm_SetOsAlarm:
 33006                           	opt stack 15
 33007                           
 33008                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 33009                           
 33010                           ; BSR set to: 0
 33011                           ;incstack = 0
 33012  003FCC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33013  003FD0  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33014  003FD4  0E00               	movlw	0
 33015  003FD6  0100               	movlb	0	; () banked
 33016  003FD8  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33017  003FDA  0E0B               	movlw	11
 33018  003FDC  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33019  003FDE  ECFF  F031         	call	___wmul	;wreg free
 33020  003FE2  0E00               	movlw	low _OsAlarms
 33021  003FE4  0100               	movlb	0	; () banked
 33022  003FE6  257D               	addwf	?___wmul& (0+255),w,b
 33023  003FE8  6ED9               	movwf	fsr2l,c
 33024  003FEA  0E06               	movlw	high _OsAlarms
 33025  003FEC  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33026  003FEE  6EDA               	movwf	fsr2h,c
 33027  003FF0  0E01               	movlw	1
 33028  003FF2  6EDF               	movwf	indf2,c
 33029                           
 33030                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 33031  003FF4  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33032  003FF8  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33033  003FFC  0E00               	movlw	0
 33034  003FFE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33035  004000  0E0B               	movlw	11
 33036  004002  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33037  004004  ECFF  F031         	call	___wmul	;wreg free
 33038  004008  0E01               	movlw	1
 33039  00400A  0100               	movlb	0	; () banked
 33040  00400C  277D               	addwf	?___wmul& (0+255),f,b
 33041  00400E  0E00               	movlw	0
 33042  004010  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33043  004012  0E00               	movlw	low _OsAlarms
 33044  004014  257D               	addwf	?___wmul& (0+255),w,b
 33045  004016  6ED9               	movwf	fsr2l,c
 33046  004018  0E06               	movlw	high _OsAlarms
 33047  00401A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33048  00401C  6EDA               	movwf	fsr2h,c
 33049  00401E  6ADE               	clrf	postinc2,c
 33050  004020  6ADE               	clrf	postinc2,c
 33051  004022  6ADE               	clrf	postinc2,c
 33052  004024  6ADD               	clrf	postdec2,c
 33053                           
 33054                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 33055  004026  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33056  00402A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33057  00402E  0E00               	movlw	0
 33058  004030  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33059  004032  0E0B               	movlw	11
 33060  004034  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33061  004036  ECFF  F031         	call	___wmul	;wreg free
 33062  00403A  0E05               	movlw	5
 33063  00403C  0100               	movlb	0	; () banked
 33064  00403E  277D               	addwf	?___wmul& (0+255),f,b
 33065  004040  0E00               	movlw	0
 33066  004042  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33067  004044  0E00               	movlw	low _OsAlarms
 33068  004046  257D               	addwf	?___wmul& (0+255),w,b
 33069  004048  6ED9               	movwf	fsr2l,c
 33070  00404A  0E06               	movlw	high _OsAlarms
 33071  00404C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33072  00404E  6EDA               	movwf	fsr2h,c
 33073  004050  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 33074  004054  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 33075  004058  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 33076  00405C  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 33077                           
 33078                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 33079  004060  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33080  004064  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33081  004068  0E00               	movlw	0
 33082  00406A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33083  00406C  0E0B               	movlw	11
 33084  00406E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33085  004070  ECFF  F031         	call	___wmul	;wreg free
 33086  004074  0E09               	movlw	9
 33087  004076  0100               	movlb	0	; () banked
 33088  004078  277D               	addwf	?___wmul& (0+255),f,b
 33089  00407A  0E00               	movlw	0
 33090  00407C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 33091  00407E  0E00               	movlw	low _OsAlarms
 33092  004080  257D               	addwf	?___wmul& (0+255),w,b
 33093  004082  6ED9               	movwf	fsr2l,c
 33094  004084  0E06               	movlw	high _OsAlarms
 33095  004086  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33096  004088  6EDA               	movwf	fsr2h,c
 33097  00408A  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 33098  00408E  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 33099                           
 33100                           ; BSR set to: 0
 33101  004092  0012               	return		;funcret
 33102  004094                     __end_of_OsAlrm_SetOsAlarm:
 33103                           	opt stack 0
 33104                           tosu	equ	0xFFF
 33105                           tosh	equ	0xFFE
 33106                           tosl	equ	0xFFD
 33107                           pclath	equ	0xFFA
 33108                           tblptru	equ	0xFF8
 33109                           tblptrh	equ	0xFF7
 33110                           tblptrl	equ	0xFF6
 33111                           tablat	equ	0xFF5
 33112                           prodh	equ	0xFF4
 33113                           prodl	equ	0xFF3
 33114                           intcon	equ	0xFF2
 33115                           intcon2	equ	0xFF1
 33116                           intcon3	equ	0xFF0
 33117                           indf0	equ	0xFEF
 33118                           postinc0	equ	0xFEE
 33119                           plusw0	equ	0xFEB
 33120                           fsr0h	equ	0xFEA
 33121                           fsr0l	equ	0xFE9
 33122                           wreg	equ	0xFE8
 33123                           indf1	equ	0xFE7
 33124                           postinc1	equ	0xFE6
 33125                           postdec1	equ	0xFE5
 33126                           plusw1	equ	0xFE3
 33127                           fsr1h	equ	0xFE2
 33128                           fsr1l	equ	0xFE1
 33129                           indf2	equ	0xFDF
 33130                           postinc2	equ	0xFDE
 33131                           postdec2	equ	0xFDD
 33132                           plusw2	equ	0xFDB
 33133                           fsr2h	equ	0xFDA
 33134                           fsr2l	equ	0xFD9
 33135                           status	equ	0xFD8
 33136                           
 33137 ;; *************** function ___wmul *****************
 33138 ;; Defined at:
 33139 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33140 ;; Parameters:    Size  Location     Type
 33141 ;;  multiplier      2   29[BANK0 ] unsigned int 
 33142 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 33143 ;; Auto vars:     Size  Location     Type
 33144 ;;  product         2   33[BANK0 ] unsigned int 
 33145 ;; Return value:  Size  Location     Type
 33146 ;;                  2   29[BANK0 ] unsigned int 
 33147 ;; Registers used:
 33148 ;;		wreg, status,2, status,0, prodl, prodh
 33149 ;; Tracked objects:
 33150 ;;		On entry : 0/0
 33151 ;;		On exit  : 0/0
 33152 ;;		Unchanged: 0/0
 33153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33158 ;;Total ram usage:        6 bytes
 33159 ;; Hardware stack levels used:    1
 33160 ;; Hardware stack levels required when called:   11
 33161 ;; This function calls:
 33162 ;;		Nothing
 33163 ;; This function is called by:
 33164 ;;		_OsAlrm_SetOsAlarm
 33165 ;;		_secondsAppTimer
 33166 ;;		_atoi
 33167 ;; This function uses a non-reentrant model
 33168 ;;
 33169                           
 33170                           	psect	text153
 33171  0063FE                     __ptext153:
 33172                           	opt stack 0
 33173  0063FE                     ___wmul:
 33174                           	opt stack 13
 33175                           
 33176                           ; BSR set to: 0
 33177                           ;incstack = 0
 33178  0063FE  0100               	movlb	0	; () banked
 33179  006400  517D               	movf	___wmul@multiplier& (0+255),w,b
 33180  006402  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33181  006404  CFF3 F081          	movff	prodl,___wmul@product
 33182  006408  CFF4 F082          	movff	prodh,___wmul@product+1
 33183  00640C  517D               	movf	___wmul@multiplier& (0+255),w,b
 33184  00640E  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 33185  006410  50F3               	movf	prodl,w,c
 33186  006412  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33187  006414  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 33188  006416  037F               	mulwf	___wmul@multiplicand& (0+255),b
 33189  006418  50F3               	movf	prodl,w,c
 33190  00641A  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 33191                           
 33192                           ; BSR set to: 0
 33193  00641C  C081  F07D         	movff	___wmul@product,?___wmul
 33194  006420  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 33195  006424  0012               	return	
 33196  006426                     __end_of___wmul:
 33197                           	opt stack 0
 33198                           tosu	equ	0xFFF
 33199                           tosh	equ	0xFFE
 33200                           tosl	equ	0xFFD
 33201                           pclath	equ	0xFFA
 33202                           tblptru	equ	0xFF8
 33203                           tblptrh	equ	0xFF7
 33204                           tblptrl	equ	0xFF6
 33205                           tablat	equ	0xFF5
 33206                           prodh	equ	0xFF4
 33207                           prodl	equ	0xFF3
 33208                           intcon	equ	0xFF2
 33209                           intcon2	equ	0xFF1
 33210                           intcon3	equ	0xFF0
 33211                           indf0	equ	0xFEF
 33212                           postinc0	equ	0xFEE
 33213                           plusw0	equ	0xFEB
 33214                           fsr0h	equ	0xFEA
 33215                           fsr0l	equ	0xFE9
 33216                           wreg	equ	0xFE8
 33217                           indf1	equ	0xFE7
 33218                           postinc1	equ	0xFE6
 33219                           postdec1	equ	0xFE5
 33220                           plusw1	equ	0xFE3
 33221                           fsr1h	equ	0xFE2
 33222                           fsr1l	equ	0xFE1
 33223                           indf2	equ	0xFDF
 33224                           postinc2	equ	0xFDE
 33225                           postdec2	equ	0xFDD
 33226                           plusw2	equ	0xFDB
 33227                           fsr2h	equ	0xFDA
 33228                           fsr2l	equ	0xFD9
 33229                           status	equ	0xFD8
 33230                           
 33231 ;; *************** function _I2c_InitI2cModule *****************
 33232 ;; Defined at:
 33233 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33234 ;; Parameters:    Size  Location     Type
 33235 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 33236 ;;		 -> I2cConfig(10), 
 33237 ;; Auto vars:     Size  Location     Type
 33238 ;;		None
 33239 ;; Return value:  Size  Location     Type
 33240 ;;                  1    wreg      void 
 33241 ;; Registers used:
 33242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33243 ;; Tracked objects:
 33244 ;;		On entry : 0/0
 33245 ;;		On exit  : 0/0
 33246 ;;		Unchanged: 0/0
 33247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33250 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33251 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33252 ;;Total ram usage:        4 bytes
 33253 ;; Hardware stack levels used:    1
 33254 ;; Hardware stack levels required when called:   13
 33255 ;; This function calls:
 33256 ;;		_SetBaudRate
 33257 ;; This function is called by:
 33258 ;;		_I2cSlv_MainTask
 33259 ;; This function uses a non-reentrant model
 33260 ;;
 33261                           
 33262                           	psect	text154
 33263  0051BA                     __ptext154:
 33264                           	opt stack 0
 33265  0051BA                     _I2c_InitI2cModule:
 33266                           	opt stack 14
 33267                           
 33268                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 33269                           
 33270                           ; BSR set to: 0
 33271                           ;incstack = 0
 33272  0051BA  8295               	bsf	3989,1,c	;volatile
 33273                           
 33274                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 33275  0051BC  8095               	bsf	3989,0,c	;volatile
 33276                           
 33277                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 33278  0051BE  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 33279  0051C2  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 33280  0051C6  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 33281  0051CA  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 33282  0051CE  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 33283  0051D2  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 33284  0051D6  0100               	movlb	0	; () banked
 33285  0051D8  EE20 F004          	lfsr	2,4
 33286  0051DC  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33287  0051DE  26D9               	addwf	fsr2l,f,c
 33288  0051E0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33289  0051E2  22DA               	addwfc	fsr2h,f,c
 33290  0051E4  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 33291  0051E8  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 33292  0051EC  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 33293  0051F0  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 33294  0051F4  EC12  F02E         	call	_SetBaudRate	;wreg free
 33295                           
 33296                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 33297  0051F8  0100               	movlb	0	; () banked
 33298  0051FA  EE20 F008          	lfsr	2,8
 33299  0051FE  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33300  005200  26D9               	addwf	fsr2l,f,c
 33301  005202  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33302  005204  22DA               	addwfc	fsr2h,f,c
 33303  005206  50DF               	movf	indf2,w,c
 33304  005208  1272               	iorwf	3954,f,c	;volatile
 33305                           
 33306                           ; BSR set to: 0
 33307                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 33308  00520A  EE20 F009          	lfsr	2,9
 33309  00520E  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 33310  005210  26D9               	addwf	fsr2l,f,c
 33311  005212  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 33312  005214  22DA               	addwfc	fsr2h,f,c
 33313  005216  50DF               	movf	indf2,w,c
 33314  005218  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 33315  00521A  0E05               	movlw	5
 33316  00521C  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 33317  00521E                     u14235:
 33318  00521E  90D8               	bcf	status,0,c
 33319  005220  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 33320  005222  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 33321  005224  D7FC               	goto	u14235
 33322  005226  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 33323  005228  1272               	iorwf	3954,f,c	;volatile
 33324                           
 33325                           ; BSR set to: 0
 33326  00522A  0012               	return		;funcret
 33327  00522C                     __end_of_I2c_InitI2cModule:
 33328                           	opt stack 0
 33329                           tosu	equ	0xFFF
 33330                           tosh	equ	0xFFE
 33331                           tosl	equ	0xFFD
 33332                           pclath	equ	0xFFA
 33333                           tblptru	equ	0xFF8
 33334                           tblptrh	equ	0xFF7
 33335                           tblptrl	equ	0xFF6
 33336                           tablat	equ	0xFF5
 33337                           prodh	equ	0xFF4
 33338                           prodl	equ	0xFF3
 33339                           intcon	equ	0xFF2
 33340                           intcon2	equ	0xFF1
 33341                           intcon3	equ	0xFF0
 33342                           indf0	equ	0xFEF
 33343                           postinc0	equ	0xFEE
 33344                           plusw0	equ	0xFEB
 33345                           fsr0h	equ	0xFEA
 33346                           fsr0l	equ	0xFE9
 33347                           wreg	equ	0xFE8
 33348                           indf1	equ	0xFE7
 33349                           postinc1	equ	0xFE6
 33350                           postdec1	equ	0xFE5
 33351                           plusw1	equ	0xFE3
 33352                           fsr1h	equ	0xFE2
 33353                           fsr1l	equ	0xFE1
 33354                           indf2	equ	0xFDF
 33355                           postinc2	equ	0xFDE
 33356                           postdec2	equ	0xFDD
 33357                           plusw2	equ	0xFDB
 33358                           fsr2h	equ	0xFDA
 33359                           fsr2l	equ	0xFD9
 33360                           status	equ	0xFD8
 33361                           
 33362 ;; *************** function _SetBaudRate *****************
 33363 ;; Defined at:
 33364 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 33365 ;; Parameters:    Size  Location     Type
 33366 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 33367 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 33368 ;; Auto vars:     Size  Location     Type
 33369 ;;		None
 33370 ;; Return value:  Size  Location     Type
 33371 ;;                  1    wreg      void 
 33372 ;; Registers used:
 33373 ;;		wreg, status,2, status,0, cstack
 33374 ;; Tracked objects:
 33375 ;;		On entry : 0/0
 33376 ;;		On exit  : 0/0
 33377 ;;		Unchanged: 0/0
 33378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33379 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33381 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33382 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33383 ;;Total ram usage:       12 bytes
 33384 ;; Hardware stack levels used:    1
 33385 ;; Hardware stack levels required when called:   12
 33386 ;; This function calls:
 33387 ;;		___lldiv
 33388 ;; This function is called by:
 33389 ;;		_I2c_InitI2cModule
 33390 ;; This function uses a non-reentrant model
 33391 ;;
 33392                           
 33393                           	psect	text155
 33394  005C24                     __ptext155:
 33395                           	opt stack 0
 33396  005C24                     _SetBaudRate:
 33397                           	opt stack 14
 33398                           
 33399                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 33400                           
 33401                           ; BSR set to: 0
 33402                           ;incstack = 0
 33403  005C24  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 33404  005C28  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 33405  005C2C  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 33406  005C30  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 33407  005C34  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 33408  005C38  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 33409  005C3C  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 33410  005C40  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 33411  005C44  0E02               	movlw	2
 33412  005C46                     u13145:
 33413  005C46  90D8               	bcf	status,0,c
 33414  005C48  0100               	movlb	0	; () banked
 33415  005C4A  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 33416  005C4C  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 33417  005C4E  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 33418  005C50  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 33419  005C52  2EE8               	decfsz	wreg,f,c
 33420  005C54  D7F8               	goto	u13145
 33421  005C56  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 33422  005C5A  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 33423  005C5E  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 33424  005C62  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 33425  005C66  EC21  F028         	call	___lldiv	;wreg free
 33426  005C6A  0100               	movlb	0	; () banked
 33427  005C6C  0589               	decf	?___lldiv& (0+255),w,b
 33428  005C6E  6E74               	movwf	3956,c	;volatile
 33429                           
 33430                           ; BSR set to: 0
 33431  005C70  0012               	return		;funcret
 33432  005C72                     __end_of_SetBaudRate:
 33433                           	opt stack 0
 33434                           tosu	equ	0xFFF
 33435                           tosh	equ	0xFFE
 33436                           tosl	equ	0xFFD
 33437                           pclath	equ	0xFFA
 33438                           tblptru	equ	0xFF8
 33439                           tblptrh	equ	0xFF7
 33440                           tblptrl	equ	0xFF6
 33441                           tablat	equ	0xFF5
 33442                           prodh	equ	0xFF4
 33443                           prodl	equ	0xFF3
 33444                           intcon	equ	0xFF2
 33445                           intcon2	equ	0xFF1
 33446                           intcon3	equ	0xFF0
 33447                           indf0	equ	0xFEF
 33448                           postinc0	equ	0xFEE
 33449                           plusw0	equ	0xFEB
 33450                           fsr0h	equ	0xFEA
 33451                           fsr0l	equ	0xFE9
 33452                           wreg	equ	0xFE8
 33453                           indf1	equ	0xFE7
 33454                           postinc1	equ	0xFE6
 33455                           postdec1	equ	0xFE5
 33456                           plusw1	equ	0xFE3
 33457                           fsr1h	equ	0xFE2
 33458                           fsr1l	equ	0xFE1
 33459                           indf2	equ	0xFDF
 33460                           postinc2	equ	0xFDE
 33461                           postdec2	equ	0xFDD
 33462                           plusw2	equ	0xFDB
 33463                           fsr2h	equ	0xFDA
 33464                           fsr2l	equ	0xFD9
 33465                           status	equ	0xFD8
 33466                           
 33467 ;; *************** function ___lldiv *****************
 33468 ;; Defined at:
 33469 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 33470 ;; Parameters:    Size  Location     Type
 33471 ;;  dividend        4   41[BANK0 ] unsigned long 
 33472 ;;  divisor         4   45[BANK0 ] unsigned long 
 33473 ;; Auto vars:     Size  Location     Type
 33474 ;;  quotient        4   49[BANK0 ] unsigned long 
 33475 ;;  counter         1   53[BANK0 ] unsigned char 
 33476 ;; Return value:  Size  Location     Type
 33477 ;;                  4   41[BANK0 ] unsigned long 
 33478 ;; Registers used:
 33479 ;;		wreg, status,2, status,0
 33480 ;; Tracked objects:
 33481 ;;		On entry : 0/0
 33482 ;;		On exit  : 0/0
 33483 ;;		Unchanged: 0/0
 33484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33485 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33486 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33488 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33489 ;;Total ram usage:       13 bytes
 33490 ;; Hardware stack levels used:    1
 33491 ;; Hardware stack levels required when called:   11
 33492 ;; This function calls:
 33493 ;;		Nothing
 33494 ;; This function is called by:
 33495 ;;		_SetBaudRate
 33496 ;;		_Tmr_TmrBPrSet
 33497 ;;		_SetUartBaudRate
 33498 ;; This function uses a non-reentrant model
 33499 ;;
 33500                           
 33501                           	psect	text156
 33502  005042                     __ptext156:
 33503                           	opt stack 0
 33504  005042                     ___lldiv:
 33505                           	opt stack 15
 33506                           
 33507                           ; BSR set to: 0
 33508                           ;incstack = 0
 33509  005042  0E00               	movlw	0
 33510  005044  0100               	movlb	0	; () banked
 33511  005046  6F91               	movwf	___lldiv@quotient& (0+255),b
 33512  005048  0E00               	movlw	0
 33513  00504A  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 33514  00504C  0E00               	movlw	0
 33515  00504E  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 33516  005050  0E00               	movlw	0
 33517  005052  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 33518                           
 33519                           ; BSR set to: 0
 33520  005054  518D               	movf	___lldiv@divisor& (0+255),w,b
 33521  005056  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 33522  005058  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 33523  00505A  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 33524  00505C  B4D8               	btfsc	status,2,c
 33525  00505E  D02A               	goto	l3227
 33526                           
 33527                           ; BSR set to: 0
 33528  005060  0E01               	movlw	1
 33529  005062  6F95               	movwf	___lldiv@counter& (0+255),b
 33530  005064  D006               	goto	l3222
 33531  005066                     
 33532                           ; BSR set to: 0
 33533                           
 33534                           ; BSR set to: 0
 33535  005066  90D8               	bcf	status,0,c
 33536  005068  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 33537  00506A  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 33538  00506C  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 33539  00506E  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 33540  005070  2B95               	incf	___lldiv@counter& (0+255),f,b
 33541  005072                     l3222:
 33542                           
 33543                           ; BSR set to: 0
 33544                           
 33545                           ; BSR set to: 0
 33546  005072  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 33547  005074  D7F8               	goto	l3223
 33548  005076                     u12210:
 33549                           
 33550                           ; BSR set to: 0
 33551                           
 33552                           ; BSR set to: 0
 33553                           
 33554                           ; BSR set to: 0
 33555  005076  90D8               	bcf	status,0,c
 33556  005078  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 33557  00507A  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 33558  00507C  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 33559  00507E  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 33560                           
 33561                           ; BSR set to: 0
 33562  005080  518D               	movf	___lldiv@divisor& (0+255),w,b
 33563  005082  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 33564  005084  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33565  005086  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 33566  005088  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33567  00508A  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 33568  00508C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33569  00508E  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 33570  005090  A0D8               	btfss	status,0,c
 33571  005092  D009               	goto	l3226
 33572                           
 33573                           ; BSR set to: 0
 33574  005094  518D               	movf	___lldiv@divisor& (0+255),w,b
 33575  005096  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 33576  005098  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 33577  00509A  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 33578  00509C  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 33579  00509E  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 33580  0050A0  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 33581  0050A2  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 33582                           
 33583                           ; BSR set to: 0
 33584  0050A4  8191               	bsf	___lldiv@quotient& (0+255),0,b
 33585  0050A6                     l3226:
 33586                           
 33587                           ; BSR set to: 0
 33588                           
 33589                           ; BSR set to: 0
 33590  0050A6  90D8               	bcf	status,0,c
 33591  0050A8  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 33592  0050AA  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 33593  0050AC  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 33594  0050AE  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 33595                           
 33596                           ; BSR set to: 0
 33597  0050B0  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 33598  0050B2  D7E1               	goto	u12210
 33599  0050B4                     l3227:
 33600                           
 33601                           ; BSR set to: 0
 33602                           
 33603                           ; BSR set to: 0
 33604  0050B4  C091  F089         	movff	___lldiv@quotient,?___lldiv
 33605  0050B8  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 33606  0050BC  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 33607  0050C0  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 33608                           
 33609                           ; BSR set to: 0
 33610  0050C4  0012               	return		;funcret
 33611  0050C6                     __end_of___lldiv:
 33612                           	opt stack 0
 33613                           tosu	equ	0xFFF
 33614                           tosh	equ	0xFFE
 33615                           tosl	equ	0xFFD
 33616                           pclath	equ	0xFFA
 33617                           tblptru	equ	0xFF8
 33618                           tblptrh	equ	0xFF7
 33619                           tblptrl	equ	0xFF6
 33620                           tablat	equ	0xFF5
 33621                           prodh	equ	0xFF4
 33622                           prodl	equ	0xFF3
 33623                           intcon	equ	0xFF2
 33624                           intcon2	equ	0xFF1
 33625                           intcon3	equ	0xFF0
 33626                           indf0	equ	0xFEF
 33627                           postinc0	equ	0xFEE
 33628                           plusw0	equ	0xFEB
 33629                           fsr0h	equ	0xFEA
 33630                           fsr0l	equ	0xFE9
 33631                           wreg	equ	0xFE8
 33632                           indf1	equ	0xFE7
 33633                           postinc1	equ	0xFE6
 33634                           postdec1	equ	0xFE5
 33635                           plusw1	equ	0xFE3
 33636                           fsr1h	equ	0xFE2
 33637                           fsr1l	equ	0xFE1
 33638                           indf2	equ	0xFDF
 33639                           postinc2	equ	0xFDE
 33640                           postdec2	equ	0xFDD
 33641                           plusw2	equ	0xFDB
 33642                           fsr2h	equ	0xFDA
 33643                           fsr2l	equ	0xFD9
 33644                           status	equ	0xFD8
 33645                           
 33646 ;; *************** function _I2cSetConfig *****************
 33647 ;; Defined at:
 33648 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33649 ;; Parameters:    Size  Location     Type
 33650 ;;		None
 33651 ;; Auto vars:     Size  Location     Type
 33652 ;;		None
 33653 ;; Return value:  Size  Location     Type
 33654 ;;                  1    wreg      void 
 33655 ;; Registers used:
 33656 ;;		wreg, status,2
 33657 ;; Tracked objects:
 33658 ;;		On entry : 0/0
 33659 ;;		On exit  : 0/0
 33660 ;;		Unchanged: 0/0
 33661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33666 ;;Total ram usage:        0 bytes
 33667 ;; Hardware stack levels used:    1
 33668 ;; Hardware stack levels required when called:   11
 33669 ;; This function calls:
 33670 ;;		Nothing
 33671 ;; This function is called by:
 33672 ;;		_I2cSlv_MainTask
 33673 ;; This function uses a non-reentrant model
 33674 ;;
 33675                           
 33676                           	psect	text157
 33677  00637E                     __ptext157:
 33678                           	opt stack 0
 33679  00637E                     _I2cSetConfig:
 33680                           	opt stack 16
 33681                           
 33682                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 33683                           
 33684                           ; BSR set to: 0
 33685                           ;incstack = 0
 33686  00637E  0E80               	movlw	128
 33687  006380  0103               	movlb	3	; () banked
 33688  006382  6F4D               	movwf	_I2cConfig& (0+255),b
 33689  006384  0E1A               	movlw	26
 33690  006386  6F4E               	movwf	(_I2cConfig+1)& (0+255),b
 33691  006388  0E06               	movlw	6
 33692  00638A  6F4F               	movwf	(_I2cConfig+2)& (0+255),b
 33693  00638C  0E00               	movlw	0
 33694  00638E  6F50               	movwf	(_I2cConfig+3)& (0+255),b
 33695                           
 33696                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 33697  006390  0E00               	movlw	0
 33698  006392  6F51               	movwf	(_I2cConfig+4)& (0+255),b
 33699  006394  0E6C               	movlw	108
 33700  006396  6F52               	movwf	(_I2cConfig+5)& (0+255),b
 33701  006398  0EDC               	movlw	220
 33702  00639A  6F53               	movwf	(_I2cConfig+6)& (0+255),b
 33703  00639C  0E02               	movlw	2
 33704  00639E  6F54               	movwf	(_I2cConfig+7)& (0+255),b
 33705                           
 33706                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 33707  0063A0  0E08               	movlw	8
 33708  0063A2  6F55               	movwf	(_I2cConfig+8)& (0+255),b
 33709                           
 33710                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 33711  0063A4  0E01               	movlw	1
 33712  0063A6  6F56               	movwf	(_I2cConfig+9)& (0+255),b
 33713                           
 33714                           ; BSR set to: 3
 33715  0063A8  0012               	return		;funcret
 33716  0063AA                     __end_of_I2cSetConfig:
 33717                           	opt stack 0
 33718                           tosu	equ	0xFFF
 33719                           tosh	equ	0xFFE
 33720                           tosl	equ	0xFFD
 33721                           pclath	equ	0xFFA
 33722                           tblptru	equ	0xFF8
 33723                           tblptrh	equ	0xFF7
 33724                           tblptrl	equ	0xFF6
 33725                           tablat	equ	0xFF5
 33726                           prodh	equ	0xFF4
 33727                           prodl	equ	0xFF3
 33728                           intcon	equ	0xFF2
 33729                           intcon2	equ	0xFF1
 33730                           intcon3	equ	0xFF0
 33731                           indf0	equ	0xFEF
 33732                           postinc0	equ	0xFEE
 33733                           plusw0	equ	0xFEB
 33734                           fsr0h	equ	0xFEA
 33735                           fsr0l	equ	0xFE9
 33736                           wreg	equ	0xFE8
 33737                           indf1	equ	0xFE7
 33738                           postinc1	equ	0xFE6
 33739                           postdec1	equ	0xFE5
 33740                           plusw1	equ	0xFE3
 33741                           fsr1h	equ	0xFE2
 33742                           fsr1l	equ	0xFE1
 33743                           indf2	equ	0xFDF
 33744                           postinc2	equ	0xFDE
 33745                           postdec2	equ	0xFDD
 33746                           plusw2	equ	0xFDB
 33747                           fsr2h	equ	0xFDA
 33748                           fsr2l	equ	0xFD9
 33749                           status	equ	0xFD8
 33750                           
 33751 ;; *************** function _I2cSendMsgSm *****************
 33752 ;; Defined at:
 33753 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33754 ;; Parameters:    Size  Location     Type
 33755 ;;		None
 33756 ;; Auto vars:     Size  Location     Type
 33757 ;;		None
 33758 ;; Return value:  Size  Location     Type
 33759 ;;                  1    wreg      void 
 33760 ;; Registers used:
 33761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33762 ;; Tracked objects:
 33763 ;;		On entry : 0/0
 33764 ;;		On exit  : 0/0
 33765 ;;		Unchanged: 0/0
 33766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33771 ;;Total ram usage:        0 bytes
 33772 ;; Hardware stack levels used:    1
 33773 ;; Hardware stack levels required when called:   13
 33774 ;; This function calls:
 33775 ;;		_I2c_ReadData
 33776 ;;		_I2c_WriteData
 33777 ;;		_ReceiveEvt
 33778 ;; This function is called by:
 33779 ;;		_I2cSlv_MainTask
 33780 ;; This function uses a non-reentrant model
 33781 ;;
 33782                           
 33783                           	psect	text158
 33784  004094                     __ptext158:
 33785                           	opt stack 0
 33786  004094                     _I2cSendMsgSm:
 33787                           	opt stack 14
 33788                           
 33789                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 33790                           ;i2c_slv.c: 122: switch(I2cComState)
 33791                           
 33792                           ; BSR set to: 3
 33793                           ;incstack = 0
 33794  004094  D04F               	goto	l1382
 33795  004096                     
 33796                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 33797  004096  0ED7               	movlw	low _I2cWriteDataEvt
 33798  004098  0100               	movlb	0	; () banked
 33799  00409A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33800  00409C  0E00               	movlw	high _I2cWriteDataEvt
 33801  00409E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33802  0040A0  ECA8  F031         	call	_ReceiveEvt	;wreg free
 33803  0040A4  0900               	iorlw	0
 33804  0040A6  B4D8               	btfsc	status,2,c
 33805  0040A8  D007               	goto	l1384
 33806                           
 33807                           ;i2c_slv.c: 127: {
 33808                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 33809  0040AA  0E01               	movlw	1
 33810  0040AC  0101               	movlb	1	; () banked
 33811  0040AE  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33812                           
 33813                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 33814  0040B0  0E01               	movlw	1
 33815  0040B2  0100               	movlb	0	; () banked
 33816  0040B4  6FCD               	movwf	_I2cComSts& (0+255),b
 33817                           
 33818                           ;i2c_slv.c: 132: }
 33819  0040B6  0012               	return	
 33820  0040B8                     l1384:
 33821                           
 33822                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 33823                           
 33824                           ; BSR set to: 0
 33825  0040B8  0ED6               	movlw	low _I2cReadDataEvt
 33826  0040BA  0100               	movlb	0	; () banked
 33827  0040BC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 33828  0040BE  0E00               	movlw	high _I2cReadDataEvt
 33829  0040C0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 33830  0040C2  ECA8  F031         	call	_ReceiveEvt	;wreg free
 33831  0040C6  0900               	iorlw	0
 33832  0040C8  B4D8               	btfsc	status,2,c
 33833  0040CA  D007               	goto	l1386
 33834                           
 33835                           ;i2c_slv.c: 134: {
 33836                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 33837  0040CC  0E02               	movlw	2
 33838  0040CE  0101               	movlb	1	; () banked
 33839  0040D0  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33840                           
 33841                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 33842  0040D2  0E02               	movlw	2
 33843  0040D4  0100               	movlb	0	; () banked
 33844  0040D6  6FCD               	movwf	_I2cComSts& (0+255),b
 33845                           
 33846                           ;i2c_slv.c: 139: }
 33847  0040D8  0012               	return	
 33848  0040DA                     l1386:
 33849                           
 33850                           ;i2c_slv.c: 140: else
 33851                           ;i2c_slv.c: 141: {
 33852                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 33853                           
 33854                           ; BSR set to: 0
 33855  0040DA  0E00               	movlw	0
 33856  0040DC  0100               	movlb	0	; () banked
 33857  0040DE  6FCD               	movwf	_I2cComSts& (0+255),b
 33858                           
 33859                           ; BSR set to: 0
 33860                           ;i2c_slv.c: 144: }
 33861                           ;i2c_slv.c: 145: break;
 33862                           
 33863                           ; BSR set to: 0
 33864  0040E0  0012               	return	
 33865  0040E2                     
 33866                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 33867                           
 33868                           ; BSR set to: 0
 33869  0040E2  0E9E               	movlw	low _I2cTxPacket
 33870  0040E4  0100               	movlb	0	; () banked
 33871  0040E6  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 33872  0040E8  0E03               	movlw	high _I2cTxPacket
 33873  0040EA  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 33874  0040EC  ECD1  F010         	call	_I2c_WriteData	;wreg free
 33875  0040F0  0900               	iorlw	0
 33876  0040F2  B4D8               	btfsc	status,2,c
 33877  0040F4  0012               	return	
 33878                           
 33879                           ;i2c_slv.c: 150: {
 33880                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 33881  0040F6  0E03               	movlw	3
 33882  0040F8  0101               	movlb	1	; () banked
 33883  0040FA  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33884                           
 33885                           ; BSR set to: 1
 33886                           ;i2c_slv.c: 153: }
 33887                           ;i2c_slv.c: 154: break;
 33888  0040FC  0012               	return	
 33889  0040FE                     
 33890                           ; BSR set to: 1
 33891                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 33892                           
 33893                           ; BSR set to: 1
 33894  0040FE  0E93               	movlw	low _I2cRxPacket
 33895  004100  0100               	movlb	0	; () banked
 33896  004102  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 33897  004104  0E03               	movlw	high _I2cRxPacket
 33898  004106  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 33899  004108  EC88  F011         	call	_I2c_ReadData	;wreg free
 33900  00410C  0900               	iorlw	0
 33901  00410E  B4D8               	btfsc	status,2,c
 33902  004110  0012               	return	
 33903                           
 33904                           ;i2c_slv.c: 159: {
 33905                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 33906  004112  0E04               	movlw	4
 33907  004114  0101               	movlb	1	; () banked
 33908  004116  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33909                           
 33910                           ; BSR set to: 1
 33911                           ;i2c_slv.c: 162: }
 33912                           ;i2c_slv.c: 164: break;
 33913  004118  0012               	return	
 33914  00411A                     
 33915                           ; BSR set to: 1
 33916                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 33917                           
 33918                           ; BSR set to: 1
 33919  00411A  0E00               	movlw	0
 33920  00411C  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33921                           
 33922                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 33923  00411E  0E00               	movlw	0
 33924  004120  0100               	movlb	0	; () banked
 33925  004122  6FCD               	movwf	_I2cComSts& (0+255),b
 33926                           
 33927                           ;i2c_slv.c: 171: break;
 33928  004124  0012               	return	
 33929  004126                     
 33930                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 33931                           
 33932                           ; BSR set to: 0
 33933  004126  0E00               	movlw	0
 33934  004128  0101               	movlb	1	; () banked
 33935  00412A  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 33936                           
 33937                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 33938  00412C  0E00               	movlw	0
 33939  00412E  0100               	movlb	0	; () banked
 33940  004130  6FCD               	movwf	_I2cComSts& (0+255),b
 33941                           
 33942                           ; BSR set to: 0
 33943                           ;i2c_slv.c: 182: }
 33944                           
 33945                           ; BSR set to: 0
 33946                           ;i2c_slv.c: 181: break;
 33947                           
 33948                           ;i2c_slv.c: 180: default:
 33949                           
 33950                           ;i2c_slv.c: 178: break;
 33951  004132  0012               	return	
 33952  004134                     l1382:
 33953                           
 33954                           ; BSR set to: 0
 33955  004134  0101               	movlb	1	; () banked
 33956  004136  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 33957                           
 33958                           ; Switch size 1, requested type "space"
 33959                           ; Number of cases is 5, Range of values is 0 to 4
 33960                           ; switch strategies available:
 33961                           ; Name         Instructions Cycles
 33962                           ; simple_byte           16     9 (average)
 33963                           ;	Chosen strategy is simple_byte
 33964  004138  0A00               	xorlw	0	; case 0
 33965  00413A  B4D8               	btfsc	status,2,c
 33966  00413C  D7AC               	goto	l1383
 33967  00413E  0A01               	xorlw	1	; case 1
 33968  004140  B4D8               	btfsc	status,2,c
 33969  004142  D7CF               	goto	l1389
 33970  004144  0A03               	xorlw	3	; case 2
 33971  004146  B4D8               	btfsc	status,2,c
 33972  004148  D7DA               	goto	l1391
 33973  00414A  0A01               	xorlw	1	; case 3
 33974  00414C  B4D8               	btfsc	status,2,c
 33975  00414E  D7E5               	goto	l1393
 33976  004150  0A07               	xorlw	7	; case 4
 33977  004152  A4D8               	btfss	status,2,c
 33978  004154  0012               	return	
 33979  004156  D7E7               	goto	l1394
 33980  004158                     __end_of_I2cSendMsgSm:
 33981                           	opt stack 0
 33982                           tosu	equ	0xFFF
 33983                           tosh	equ	0xFFE
 33984                           tosl	equ	0xFFD
 33985                           pclath	equ	0xFFA
 33986                           tblptru	equ	0xFF8
 33987                           tblptrh	equ	0xFF7
 33988                           tblptrl	equ	0xFF6
 33989                           tablat	equ	0xFF5
 33990                           prodh	equ	0xFF4
 33991                           prodl	equ	0xFF3
 33992                           intcon	equ	0xFF2
 33993                           intcon2	equ	0xFF1
 33994                           intcon3	equ	0xFF0
 33995                           indf0	equ	0xFEF
 33996                           postinc0	equ	0xFEE
 33997                           plusw0	equ	0xFEB
 33998                           fsr0h	equ	0xFEA
 33999                           fsr0l	equ	0xFE9
 34000                           wreg	equ	0xFE8
 34001                           indf1	equ	0xFE7
 34002                           postinc1	equ	0xFE6
 34003                           postdec1	equ	0xFE5
 34004                           plusw1	equ	0xFE3
 34005                           fsr1h	equ	0xFE2
 34006                           fsr1l	equ	0xFE1
 34007                           indf2	equ	0xFDF
 34008                           postinc2	equ	0xFDE
 34009                           postdec2	equ	0xFDD
 34010                           plusw2	equ	0xFDB
 34011                           fsr2h	equ	0xFDA
 34012                           fsr2l	equ	0xFD9
 34013                           status	equ	0xFD8
 34014                           
 34015 ;; *************** function _ReceiveEvt *****************
 34016 ;; Defined at:
 34017 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34018 ;; Parameters:    Size  Location     Type
 34019 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 34020 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 34021 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 34022 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 34023 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 34024 ;;		 -> ActivateRiDetection(1), 
 34025 ;; Auto vars:     Size  Location     Type
 34026 ;;  EventStatus     1   32[BANK0 ] enum E7727
 34027 ;; Return value:  Size  Location     Type
 34028 ;;                  1    wreg      enum E7699
 34029 ;; Registers used:
 34030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34031 ;; Tracked objects:
 34032 ;;		On entry : 0/0
 34033 ;;		On exit  : 0/0
 34034 ;;		Unchanged: 0/0
 34035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34036 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34038 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34039 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34040 ;;Total ram usage:        4 bytes
 34041 ;; Hardware stack levels used:    1
 34042 ;; Hardware stack levels required when called:   11
 34043 ;; This function calls:
 34044 ;;		Nothing
 34045 ;; This function is called by:
 34046 ;;		_MdmCntSm
 34047 ;;		_CheckModem
 34048 ;;		_ModemEvtParser
 34049 ;;		_GetSmsSm
 34050 ;;		_SendSmsSm
 34051 ;;		_Mdm_GetSmsData
 34052 ;;		_Mdm_IsSmsReceived
 34053 ;;		_Mdm_IsRinging
 34054 ;;		_GetCallerNumber
 34055 ;;		_InitGprsNetwork
 34056 ;;		_HttpGetMethod
 34057 ;;		_I2cSendMsgSm
 34058 ;;		_I2cSlv_I2cReadMsgSts
 34059 ;;		_RiSm
 34060 ;;		_GsmGprsTerminal
 34061 ;; This function uses a non-reentrant model
 34062 ;;
 34063                           
 34064                           	psect	text159
 34065  006350                     __ptext159:
 34066                           	opt stack 0
 34067  006350                     _ReceiveEvt:
 34068                           	opt stack 13
 34069                           
 34070                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 34071                           
 34072                           ;incstack = 0
 34073  006350  0E00               	movlw	0
 34074  006352  0100               	movlb	0	; () banked
 34075  006354  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 34076                           
 34077                           ; BSR set to: 0
 34078                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 34079  006356  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 34080  00635A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 34081  00635E  0E02               	movlw	2
 34082  006360  18DE               	xorwf	postinc2,w,c
 34083  006362  A4D8               	btfss	status,2,c
 34084  006364  D008               	goto	l832
 34085                           
 34086                           ; BSR set to: 0
 34087                           ;os_ser.c: 106: {
 34088                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 34089  006366  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 34090  00636A  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 34091  00636E  0E01               	movlw	1
 34092  006370  6EDF               	movwf	indf2,c
 34093                           
 34094                           ; BSR set to: 0
 34095                           ;os_ser.c: 110: EventStatus = EventReceived;
 34096  006372  0E01               	movlw	1
 34097  006374  D001               	goto	L58
 34098  006376                     l832:
 34099                           
 34100                           ; BSR set to: 0
 34101                           ;os_ser.c: 112: else
 34102                           ;os_ser.c: 113: {
 34103                           ;os_ser.c: 115: EventStatus = EventIdle;
 34104                           
 34105                           ; BSR set to: 0
 34106  006376  0E00               	movlw	0
 34107  006378                     L58:
 34108  006378  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 34109                           
 34110                           ; BSR set to: 0
 34111                           ;os_ser.c: 116: }
 34112                           ;os_ser.c: 119: return(EventStatus);
 34113  00637A  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 34114  00637C  0012               	return	
 34115  00637E                     __end_of_ReceiveEvt:
 34116                           	opt stack 0
 34117                           tosu	equ	0xFFF
 34118                           tosh	equ	0xFFE
 34119                           tosl	equ	0xFFD
 34120                           pclath	equ	0xFFA
 34121                           tblptru	equ	0xFF8
 34122                           tblptrh	equ	0xFF7
 34123                           tblptrl	equ	0xFF6
 34124                           tablat	equ	0xFF5
 34125                           prodh	equ	0xFF4
 34126                           prodl	equ	0xFF3
 34127                           intcon	equ	0xFF2
 34128                           intcon2	equ	0xFF1
 34129                           intcon3	equ	0xFF0
 34130                           indf0	equ	0xFEF
 34131                           postinc0	equ	0xFEE
 34132                           plusw0	equ	0xFEB
 34133                           fsr0h	equ	0xFEA
 34134                           fsr0l	equ	0xFE9
 34135                           wreg	equ	0xFE8
 34136                           indf1	equ	0xFE7
 34137                           postinc1	equ	0xFE6
 34138                           postdec1	equ	0xFE5
 34139                           plusw1	equ	0xFE3
 34140                           fsr1h	equ	0xFE2
 34141                           fsr1l	equ	0xFE1
 34142                           indf2	equ	0xFDF
 34143                           postinc2	equ	0xFDE
 34144                           postdec2	equ	0xFDD
 34145                           plusw2	equ	0xFDB
 34146                           fsr2h	equ	0xFDA
 34147                           fsr2l	equ	0xFD9
 34148                           status	equ	0xFD8
 34149                           
 34150 ;; *************** function _I2c_WriteData *****************
 34151 ;; Defined at:
 34152 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34153 ;; Parameters:    Size  Location     Type
 34154 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 34155 ;;		 -> I2cTxPacket(5), 
 34156 ;; Auto vars:     Size  Location     Type
 34157 ;;		None
 34158 ;; Return value:  Size  Location     Type
 34159 ;;                  1    wreg      enum E7740
 34160 ;; Registers used:
 34161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34162 ;; Tracked objects:
 34163 ;;		On entry : 0/0
 34164 ;;		On exit  : 0/0
 34165 ;;		Unchanged: 0/0
 34166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34169 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34170 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34171 ;;Total ram usage:        4 bytes
 34172 ;; Hardware stack levels used:    1
 34173 ;; Hardware stack levels required when called:   12
 34174 ;; This function calls:
 34175 ;;		_CheckAckStatus
 34176 ;;		_CheckTxStatus
 34177 ;;		_StartCondition
 34178 ;;		_StopCondition
 34179 ;;		_WriteByte
 34180 ;; This function is called by:
 34181 ;;		_I2cSendMsgSm
 34182 ;; This function uses a non-reentrant model
 34183 ;;
 34184                           
 34185                           	psect	text160
 34186  0021A2                     __ptext160:
 34187                           	opt stack 0
 34188  0021A2                     _I2c_WriteData:
 34189                           	opt stack 14
 34190                           
 34191                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 34192                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 34193                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 34194                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 34195                           ;i2c_drv.c: 260: switch (I2cWriteState)
 34196                           
 34197                           ; BSR set to: 0
 34198                           ;incstack = 0
 34199  0021A2  D095               	goto	l160
 34200  0021A4                     
 34201                           ;i2c_drv.c: 264: StartCondition();
 34202  0021A4  EC6F  F034         	call	_StartCondition	;wreg free
 34203                           
 34204                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 34205  0021A8  0E00               	movlw	0
 34206  0021AA  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34207                           
 34208                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 34209  0021AC  0E01               	movlw	1
 34210  0021AE  D084               	goto	L65
 34211  0021B0                     
 34212                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 34213  0021B0  0100               	movlb	0	; () banked
 34214  0021B2  EE20 F001          	lfsr	2,1
 34215  0021B6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34216  0021B8  26D9               	addwf	fsr2l,f,c
 34217  0021BA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34218  0021BC  22DA               	addwfc	fsr2h,f,c
 34219  0021BE  50DF               	movf	indf2,w,c
 34220  0021C0  6F80               	movwf	??_I2c_WriteData& (0+255),b
 34221  0021C2  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34222  0021C6  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34223  0021CA  50DF               	movf	indf2,w,c
 34224  0021CC  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 34225  0021CE  90D8               	bcf	status,0,c
 34226  0021D0  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 34227  0021D2  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 34228  0021D4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34229  0021D8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34230  0021DC  6EDF               	movwf	indf2,c
 34231                           
 34232                           ; BSR set to: 0
 34233                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 34234  0021DE  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 34235  0021E2  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 34236  0021E6  50DF               	movf	indf2,w,c
 34237  0021E8  EC4D  F034         	call	_WriteByte
 34238                           
 34239                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 34240  0021EC  0E02               	movlw	2
 34241  0021EE  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34242  0021F0                     
 34243                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 34244  0021F0  EC57  F034         	call	_CheckTxStatus	;wreg free
 34245  0021F4  0900               	iorlw	0
 34246  0021F6  A4D8               	btfss	status,2,c
 34247  0021F8  D089               	goto	l162
 34248                           
 34249                           ;i2c_drv.c: 282: {
 34250                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 34251  0021FA  0E03               	movlw	3
 34252  0021FC  D01A               	goto	L67
 34253  0021FE                     
 34254                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 34255  0021FE  0100               	movlb	0	; () banked
 34256  002200  EE20 F002          	lfsr	2,2
 34257  002204  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34258  002206  26D9               	addwf	fsr2l,f,c
 34259  002208  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34260  00220A  22DA               	addwfc	fsr2h,f,c
 34261  00220C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 34262  002210  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 34263  002214  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 34264  002218  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 34265  00221C  50DF               	movf	indf2,w,c
 34266  00221E  EC4D  F034         	call	_WriteByte
 34267                           
 34268                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 34269  002222  0E04               	movlw	4
 34270  002224  D049               	goto	L65
 34271  002226                     
 34272                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 34273  002226  EC57  F034         	call	_CheckTxStatus	;wreg free
 34274  00222A  0900               	iorlw	0
 34275  00222C  A4D8               	btfss	status,2,c
 34276  00222E  D06E               	goto	l162
 34277                           
 34278                           ;i2c_drv.c: 300: {
 34279                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 34280  002230  0E05               	movlw	5
 34281  002232                     L67:
 34282  002232  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34283                           
 34284                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 34285  002234  0E08               	movlw	8
 34286  002236  D040               	goto	L65
 34287  002238                     
 34288                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 34289  002238  0100               	movlb	0	; () banked
 34290  00223A  EE20 F004          	lfsr	2,4
 34291  00223E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34292  002240  26D9               	addwf	fsr2l,f,c
 34293  002242  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34294  002244  22DA               	addwfc	fsr2h,f,c
 34295  002246  50DF               	movf	indf2,w,c
 34296  002248  B4D8               	btfsc	status,2,c
 34297  00224A  D010               	goto	l170
 34298                           
 34299                           ; BSR set to: 0
 34300                           ;i2c_drv.c: 310: {
 34301                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 34302  00224C  EE20 F004          	lfsr	2,4
 34303  002250  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34304  002252  26D9               	addwf	fsr2l,f,c
 34305  002254  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34306  002256  22DA               	addwfc	fsr2h,f,c
 34307  002258  06DF               	decf	indf2,f,c
 34308                           
 34309                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 34310  00225A  EE20 F002          	lfsr	2,2
 34311  00225E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34312  002260  26D9               	addwf	fsr2l,f,c
 34313  002262  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34314  002264  22DA               	addwfc	fsr2h,f,c
 34315  002266  2ADE               	incf	postinc2,f,c
 34316  002268  0E00               	movlw	0
 34317  00226A  22DD               	addwfc	postdec2,f,c
 34318  00226C                     l170:
 34319                           
 34320                           ; BSR set to: 0
 34321                           ;i2c_drv.c: 315: }
 34322                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 34323  00226C  EE20 F004          	lfsr	2,4
 34324  002270  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 34325  002272  26D9               	addwf	fsr2l,f,c
 34326  002274  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 34327  002276  22DA               	addwfc	fsr2h,f,c
 34328  002278  50DF               	movf	indf2,w,c
 34329  00227A  A4D8               	btfss	status,2,c
 34330  00227C  D002               	goto	l171
 34331                           
 34332                           ; BSR set to: 0
 34333                           ;i2c_drv.c: 319: {
 34334                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 34335  00227E  0E06               	movlw	6
 34336  002280  D01B               	goto	L65
 34337  002282                     l171:
 34338                           
 34339                           ; BSR set to: 0
 34340                           ;i2c_drv.c: 323: else
 34341                           ;i2c_drv.c: 324: {
 34342                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 34343                           
 34344                           ; BSR set to: 0
 34345  002282  0E03               	movlw	3
 34346  002284  D019               	goto	L65
 34347  002286                     
 34348                           ;i2c_drv.c: 332: StopCondition();
 34349                           
 34350                           ; BSR set to: 0
 34351  002286  EC6D  F034         	call	_StopCondition	;wreg free
 34352                           
 34353                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 34354  00228A  0E07               	movlw	7
 34355  00228C  D015               	goto	L65
 34356  00228E                     
 34357                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 34358  00228E  0E00               	movlw	0
 34359  002290  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34360                           
 34361                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 34362  002292  0E00               	movlw	0
 34363  002294  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34364                           
 34365                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 34366  002296  0E02               	movlw	2
 34367  002298  D018               	goto	L66
 34368  00229A                     
 34369                           ;i2c_drv.c: 347: TentativeCounter++;
 34370  00229A  2A35               	incf	I2c_WriteData@TentativeCounter,f,c
 34371                           
 34372                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 34373  00229C  EC5C  F034         	call	_CheckAckStatus	;wreg free
 34374  0022A0  0900               	iorlw	0
 34375  0022A2  A4D8               	btfss	status,2,c
 34376  0022A4  D005               	goto	l176
 34377                           
 34378                           ;i2c_drv.c: 350: {
 34379                           ;i2c_drv.c: 352: TentativeCounter = 0;
 34380  0022A6  0E00               	movlw	0
 34381  0022A8  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34382                           
 34383                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 34384  0022AA  C036  F037         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 34385                           
 34386                           ;i2c_drv.c: 355: }
 34387  0022AE  D02E               	goto	l162
 34388  0022B0                     l176:
 34389                           
 34390                           ;i2c_drv.c: 356: else
 34391                           ;i2c_drv.c: 357: {
 34392                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 34393  0022B0  0E02               	movlw	2
 34394  0022B2  6435               	cpfsgt	I2c_WriteData@TentativeCounter,c
 34395  0022B4  D02B               	goto	l162
 34396                           
 34397                           ;i2c_drv.c: 360: {
 34398                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 34399  0022B6  0E09               	movlw	9
 34400  0022B8                     L65:
 34401  0022B8  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34402                           
 34403                           ;i2c_drv.c: 363: }
 34404                           ;i2c_drv.c: 364: }
 34405                           ;i2c_drv.c: 365: break;
 34406  0022BA  D028               	goto	l162
 34407  0022BC                     
 34408                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 34409  0022BC  0E00               	movlw	0
 34410  0022BE  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 34411                           
 34412                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 34413  0022C0  0E00               	movlw	0
 34414  0022C2  6E36               	movwf	I2c_WriteData@I2cNextState,c
 34415                           
 34416                           ;i2c_drv.c: 372: TentativeCounter = 0;
 34417  0022C4  0E00               	movlw	0
 34418  0022C6  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 34419                           
 34420                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 34421  0022C8  0E01               	movlw	1
 34422  0022CA                     L66:
 34423  0022CA  6E34               	movwf	I2c_WriteData@WriteStatus,c
 34424                           
 34425                           ;i2c_drv.c: 379: }
 34426                           
 34427                           ;i2c_drv.c: 378: break;
 34428                           
 34429                           ;i2c_drv.c: 377: default:
 34430                           
 34431                           ;i2c_drv.c: 375: break;
 34432  0022CC  D01F               	goto	l162
 34433  0022CE                     l160:
 34434  0022CE  5037               	movf	I2c_WriteData@I2cWriteState,w,c
 34435                           
 34436                           ; Switch size 1, requested type "space"
 34437                           ; Number of cases is 10, Range of values is 0 to 9
 34438                           ; switch strategies available:
 34439                           ; Name         Instructions Cycles
 34440                           ; simple_byte           31    16 (average)
 34441                           ;	Chosen strategy is simple_byte
 34442  0022D0  0A00               	xorlw	0	; case 0
 34443  0022D2  B4D8               	btfsc	status,2,c
 34444  0022D4  D767               	goto	l161
 34445  0022D6  0A01               	xorlw	1	; case 1
 34446  0022D8  B4D8               	btfsc	status,2,c
 34447  0022DA  D76A               	goto	l163
 34448  0022DC  0A03               	xorlw	3	; case 2
 34449  0022DE  B4D8               	btfsc	status,2,c
 34450  0022E0  D787               	goto	l164
 34451  0022E2  0A01               	xorlw	1	; case 3
 34452  0022E4  B4D8               	btfsc	status,2,c
 34453  0022E6  D78B               	goto	l166
 34454  0022E8  0A07               	xorlw	7	; case 4
 34455  0022EA  B4D8               	btfsc	status,2,c
 34456  0022EC  D79C               	goto	l167
 34457  0022EE  0A01               	xorlw	1	; case 5
 34458  0022F0  B4D8               	btfsc	status,2,c
 34459  0022F2  D7A2               	goto	l169
 34460  0022F4  0A03               	xorlw	3	; case 6
 34461  0022F6  B4D8               	btfsc	status,2,c
 34462  0022F8  D7C6               	goto	l173
 34463  0022FA  0A01               	xorlw	1	; case 7
 34464  0022FC  B4D8               	btfsc	status,2,c
 34465  0022FE  D7C7               	goto	l174
 34466  002300  0A0F               	xorlw	15	; case 8
 34467  002302  B4D8               	btfsc	status,2,c
 34468  002304  D7CA               	goto	l175
 34469  002306  0A01               	xorlw	1	; case 9
 34470  002308  B4D8               	btfsc	status,2,c
 34471  00230A  D7D8               	goto	l179
 34472  00230C                     l162:
 34473                           
 34474                           ;i2c_drv.c: 382: return WriteStatus;
 34475  00230C  5034               	movf	I2c_WriteData@WriteStatus,w,c
 34476  00230E  0012               	return	
 34477  002310                     __end_of_I2c_WriteData:
 34478                           	opt stack 0
 34479                           tosu	equ	0xFFF
 34480                           tosh	equ	0xFFE
 34481                           tosl	equ	0xFFD
 34482                           pclath	equ	0xFFA
 34483                           tblptru	equ	0xFF8
 34484                           tblptrh	equ	0xFF7
 34485                           tblptrl	equ	0xFF6
 34486                           tablat	equ	0xFF5
 34487                           prodh	equ	0xFF4
 34488                           prodl	equ	0xFF3
 34489                           intcon	equ	0xFF2
 34490                           intcon2	equ	0xFF1
 34491                           intcon3	equ	0xFF0
 34492                           indf0	equ	0xFEF
 34493                           postinc0	equ	0xFEE
 34494                           plusw0	equ	0xFEB
 34495                           fsr0h	equ	0xFEA
 34496                           fsr0l	equ	0xFE9
 34497                           wreg	equ	0xFE8
 34498                           indf1	equ	0xFE7
 34499                           postinc1	equ	0xFE6
 34500                           postdec1	equ	0xFE5
 34501                           plusw1	equ	0xFE3
 34502                           fsr1h	equ	0xFE2
 34503                           fsr1l	equ	0xFE1
 34504                           indf2	equ	0xFDF
 34505                           postinc2	equ	0xFDE
 34506                           postdec2	equ	0xFDD
 34507                           plusw2	equ	0xFDB
 34508                           fsr2h	equ	0xFDA
 34509                           fsr2l	equ	0xFD9
 34510                           status	equ	0xFD8
 34511                           
 34512 ;; *************** function _I2c_ReadData *****************
 34513 ;; Defined at:
 34514 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34515 ;; Parameters:    Size  Location     Type
 34516 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 34517 ;;		 -> I2cRxPacket(6), 
 34518 ;; Auto vars:     Size  Location     Type
 34519 ;;		None
 34520 ;; Return value:  Size  Location     Type
 34521 ;;                  1    wreg      enum E7787
 34522 ;; Registers used:
 34523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34524 ;; Tracked objects:
 34525 ;;		On entry : 0/0
 34526 ;;		On exit  : 0/0
 34527 ;;		Unchanged: 0/0
 34528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34531 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34533 ;;Total ram usage:        4 bytes
 34534 ;; Hardware stack levels used:    1
 34535 ;; Hardware stack levels required when called:   12
 34536 ;; This function calls:
 34537 ;;		_CheckAckStatus
 34538 ;;		_CheckTxStatus
 34539 ;;		_EnableReceiver
 34540 ;;		_GenerateEvt
 34541 ;;		_ReadByte
 34542 ;;		_SetAckStatus
 34543 ;;		_StartCondition
 34544 ;;		_StopCondition
 34545 ;;		_WriteByte
 34546 ;; This function is called by:
 34547 ;;		_I2cSendMsgSm
 34548 ;; This function uses a non-reentrant model
 34549 ;;
 34550                           
 34551                           	psect	text161
 34552  002310                     __ptext161:
 34553                           	opt stack 0
 34554  002310                     _I2c_ReadData:
 34555                           	opt stack 14
 34556                           
 34557                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 34558                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 34559                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 34560                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 34561                           ;i2c_drv.c: 402: switch (I2cReadState)
 34562                           
 34563                           ;incstack = 0
 34564  002310  D090               	goto	l192
 34565  002312                     
 34566                           ;i2c_drv.c: 406: StartCondition();
 34567  002312  EC6F  F034         	call	_StartCondition	;wreg free
 34568                           
 34569                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 34570  002316  0E00               	movlw	0
 34571  002318  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34572                           
 34573                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 34574  00231A  0E01               	movlw	1
 34575  00231C  D083               	goto	L75
 34576  00231E                     
 34577                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 34578  00231E  0100               	movlb	0	; () banked
 34579  002320  EE20 F001          	lfsr	2,1
 34580  002324  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34581  002326  26D9               	addwf	fsr2l,f,c
 34582  002328  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34583  00232A  22DA               	addwfc	fsr2h,f,c
 34584  00232C  50DF               	movf	indf2,w,c
 34585  00232E  6F82               	movwf	??_I2c_ReadData& (0+255),b
 34586  002330  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34587  002334  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34588  002338  50DF               	movf	indf2,w,c
 34589  00233A  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 34590  00233C  90D8               	bcf	status,0,c
 34591  00233E  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 34592  002340  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 34593  002342  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34594  002346  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34595  00234A  6EDF               	movwf	indf2,c
 34596                           
 34597                           ; BSR set to: 0
 34598                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 34599  00234C  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 34600  002350  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 34601  002354  50DF               	movf	indf2,w,c
 34602  002356  EC4D  F034         	call	_WriteByte
 34603                           
 34604                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 34605  00235A  0E02               	movlw	2
 34606  00235C  D063               	goto	L75
 34607  00235E                     
 34608                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 34609  00235E  EC57  F034         	call	_CheckTxStatus	;wreg free
 34610  002362  0900               	iorlw	0
 34611  002364  A4D8               	btfss	status,2,c
 34612  002366  D081               	goto	l194
 34613                           
 34614                           ;i2c_drv.c: 425: {
 34615                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 34616  002368  0E03               	movlw	3
 34617  00236A  D05C               	goto	L75
 34618  00236C                     
 34619                           ;i2c_drv.c: 433: TentativeCounter++;
 34620  00236C  2A31               	incf	I2c_ReadData@TentativeCounter,f,c
 34621                           
 34622                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 34623  00236E  EC5C  F034         	call	_CheckAckStatus	;wreg free
 34624  002372  0900               	iorlw	0
 34625  002374  A4D8               	btfss	status,2,c
 34626  002376  D004               	goto	l199
 34627                           
 34628                           ;i2c_drv.c: 436: {
 34629                           ;i2c_drv.c: 438: TentativeCounter = 0;
 34630  002378  0E00               	movlw	0
 34631  00237A  6E31               	movwf	I2c_ReadData@TentativeCounter,c
 34632  00237C                     
 34633                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 34634  00237C  0E04               	movlw	4
 34635  00237E  D052               	goto	L75
 34636  002380                     l199:
 34637                           
 34638                           ;i2c_drv.c: 442: else
 34639                           ;i2c_drv.c: 443: {
 34640                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 34641  002380  0E02               	movlw	2
 34642  002382  6431               	cpfsgt	I2c_ReadData@TentativeCounter,c
 34643  002384  D072               	goto	l194
 34644                           
 34645                           ;i2c_drv.c: 446: {
 34646                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 34647  002386  0E08               	movlw	8
 34648  002388  D04D               	goto	L75
 34649  00238A                     
 34650                           ;i2c_drv.c: 455: EnableReceiver();
 34651  00238A  EC71  F034         	call	_EnableReceiver	;wreg free
 34652                           
 34653                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 34654  00238E  0E05               	movlw	5
 34655  002390  D049               	goto	L75
 34656  002392                     
 34657                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 34658  002392  EC57  F034         	call	_CheckTxStatus	;wreg free
 34659  002396  0900               	iorlw	0
 34660  002398  A4D8               	btfss	status,2,c
 34661  00239A  D067               	goto	l194
 34662                           
 34663                           ;i2c_drv.c: 463: {
 34664                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 34665  00239C  0100               	movlb	0	; () banked
 34666  00239E  EE20 F002          	lfsr	2,2
 34667  0023A2  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34668  0023A4  26D9               	addwf	fsr2l,f,c
 34669  0023A6  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34670  0023A8  22DA               	addwfc	fsr2h,f,c
 34671  0023AA  CFDE F082          	movff	postinc2,??_I2c_ReadData
 34672  0023AE  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 34673  0023B2  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 34674  0023B6  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 34675  0023BA  EC52  F034         	call	_ReadByte	;wreg free
 34676  0023BE  6EDF               	movwf	indf2,c
 34677                           
 34678                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 34679  0023C0  0100               	movlb	0	; () banked
 34680  0023C2  EE20 F002          	lfsr	2,2
 34681  0023C6  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34682  0023C8  26D9               	addwf	fsr2l,f,c
 34683  0023CA  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34684  0023CC  22DA               	addwfc	fsr2h,f,c
 34685  0023CE  2ADE               	incf	postinc2,f,c
 34686  0023D0  0E00               	movlw	0
 34687  0023D2  22DD               	addwfc	postdec2,f,c
 34688                           
 34689                           ; BSR set to: 0
 34690                           ;i2c_drv.c: 469: DataCounter++;
 34691  0023D4  2A32               	incf	I2c_ReadData@DataCounter,f,c
 34692                           
 34693                           ; BSR set to: 0
 34694                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 34695  0023D6  0E06               	movlw	6
 34696  0023D8  D025               	goto	L75
 34697  0023DA                     
 34698                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 34699                           
 34700                           ; BSR set to: 0
 34701  0023DA  0100               	movlb	0	; () banked
 34702  0023DC  EE20 F004          	lfsr	2,4
 34703  0023E0  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 34704  0023E2  26D9               	addwf	fsr2l,f,c
 34705  0023E4  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34706  0023E6  22DA               	addwfc	fsr2h,f,c
 34707  0023E8  50DE               	movf	postinc2,w,c
 34708  0023EA  5C32               	subwf	I2c_ReadData@DataCounter,w,c
 34709  0023EC  A0D8               	btfss	status,0,c
 34710  0023EE  D008               	goto	l206
 34711                           
 34712                           ; BSR set to: 0
 34713                           ;i2c_drv.c: 478: {
 34714                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 34715  0023F0  0E01               	movlw	1
 34716  0023F2  ECE1  F033         	call	_SetAckStatus
 34717                           
 34718                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 34719  0023F6  0E07               	movlw	7
 34720  0023F8  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34721                           
 34722                           ;i2c_drv.c: 484: DataCounter = 0;
 34723  0023FA  0E00               	movlw	0
 34724  0023FC  6E32               	movwf	I2c_ReadData@DataCounter,c
 34725                           
 34726                           ;i2c_drv.c: 485: }
 34727  0023FE  D035               	goto	l194
 34728  002400                     l206:
 34729                           
 34730                           ;i2c_drv.c: 486: else
 34731                           ;i2c_drv.c: 487: {
 34732                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 34733  002400  0E00               	movlw	0
 34734  002402  ECE1  F033         	call	_SetAckStatus
 34735  002406  D7BA               	goto	L76
 34736  002408                     
 34737                           ;i2c_drv.c: 497: StopCondition();
 34738  002408  EC6D  F034         	call	_StopCondition	;wreg free
 34739                           
 34740                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 34741  00240C  0E02               	movlw	2
 34742  00240E  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34743                           
 34744                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 34745  002410  0E05               	movlw	5
 34746  002412  0100               	movlb	0	; () banked
 34747  002414  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 34748  002416  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 34749  002418  0E00               	movlw	0
 34750  00241A  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 34751  00241C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 34752  00241E  EC9D  F033         	call	_GenerateEvt	;wreg free
 34753                           
 34754                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 34755  002422  0E00               	movlw	0
 34756  002424                     L75:
 34757  002424  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34758                           
 34759                           ;i2c_drv.c: 504: break;
 34760  002426  D021               	goto	l194
 34761  002428                     
 34762                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 34763  002428  0E00               	movlw	0
 34764  00242A  6E33               	movwf	I2c_ReadData@I2cReadState,c
 34765                           
 34766                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 34767  00242C  0E01               	movlw	1
 34768  00242E  6E30               	movwf	I2c_ReadData@ReadStatus,c
 34769                           
 34770                           ;i2c_drv.c: 515: }
 34771                           
 34772                           ;i2c_drv.c: 514: break;
 34773                           
 34774                           ;i2c_drv.c: 513: default:
 34775                           
 34776                           ;i2c_drv.c: 511: break;
 34777  002430  D01C               	goto	l194
 34778  002432                     l192:
 34779  002432  5033               	movf	I2c_ReadData@I2cReadState,w,c
 34780                           
 34781                           ; Switch size 1, requested type "space"
 34782                           ; Number of cases is 9, Range of values is 0 to 8
 34783                           ; switch strategies available:
 34784                           ; Name         Instructions Cycles
 34785                           ; simple_byte           28    15 (average)
 34786                           ;	Chosen strategy is simple_byte
 34787  002434  0A00               	xorlw	0	; case 0
 34788  002436  B4D8               	btfsc	status,2,c
 34789  002438  D76C               	goto	l193
 34790  00243A  0A01               	xorlw	1	; case 1
 34791  00243C  B4D8               	btfsc	status,2,c
 34792  00243E  D76F               	goto	l195
 34793  002440  0A03               	xorlw	3	; case 2
 34794  002442  B4D8               	btfsc	status,2,c
 34795  002444  D78C               	goto	l196
 34796  002446  0A01               	xorlw	1	; case 3
 34797  002448  B4D8               	btfsc	status,2,c
 34798  00244A  D790               	goto	l198
 34799  00244C  0A07               	xorlw	7	; case 4
 34800  00244E  B4D8               	btfsc	status,2,c
 34801  002450  D79C               	goto	l202
 34802  002452  0A01               	xorlw	1	; case 5
 34803  002454  B4D8               	btfsc	status,2,c
 34804  002456  D79D               	goto	l203
 34805  002458  0A03               	xorlw	3	; case 6
 34806  00245A  B4D8               	btfsc	status,2,c
 34807  00245C  D7BE               	goto	l205
 34808  00245E  0A01               	xorlw	1	; case 7
 34809  002460  B4D8               	btfsc	status,2,c
 34810  002462  D7D2               	goto	l208
 34811  002464  0A0F               	xorlw	15	; case 8
 34812  002466  B4D8               	btfsc	status,2,c
 34813  002468  D7DF               	goto	l209
 34814  00246A                     l194:
 34815                           
 34816                           ;i2c_drv.c: 518: return ReadStatus;
 34817  00246A  5030               	movf	I2c_ReadData@ReadStatus,w,c
 34818  00246C  0012               	return	
 34819  00246E                     __end_of_I2c_ReadData:
 34820                           	opt stack 0
 34821                           tosu	equ	0xFFF
 34822                           tosh	equ	0xFFE
 34823                           tosl	equ	0xFFD
 34824                           pclath	equ	0xFFA
 34825                           tblptru	equ	0xFF8
 34826                           tblptrh	equ	0xFF7
 34827                           tblptrl	equ	0xFF6
 34828                           tablat	equ	0xFF5
 34829                           prodh	equ	0xFF4
 34830                           prodl	equ	0xFF3
 34831                           intcon	equ	0xFF2
 34832                           intcon2	equ	0xFF1
 34833                           intcon3	equ	0xFF0
 34834                           indf0	equ	0xFEF
 34835                           postinc0	equ	0xFEE
 34836                           plusw0	equ	0xFEB
 34837                           fsr0h	equ	0xFEA
 34838                           fsr0l	equ	0xFE9
 34839                           wreg	equ	0xFE8
 34840                           indf1	equ	0xFE7
 34841                           postinc1	equ	0xFE6
 34842                           postdec1	equ	0xFE5
 34843                           plusw1	equ	0xFE3
 34844                           fsr1h	equ	0xFE2
 34845                           fsr1l	equ	0xFE1
 34846                           indf2	equ	0xFDF
 34847                           postinc2	equ	0xFDE
 34848                           postdec2	equ	0xFDD
 34849                           plusw2	equ	0xFDB
 34850                           fsr2h	equ	0xFDA
 34851                           fsr2l	equ	0xFD9
 34852                           status	equ	0xFD8
 34853                           
 34854 ;; *************** function _WriteByte *****************
 34855 ;; Defined at:
 34856 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34857 ;; Parameters:    Size  Location     Type
 34858 ;;  Byte            1    wreg     unsigned char 
 34859 ;; Auto vars:     Size  Location     Type
 34860 ;;  Byte            1   29[BANK0 ] unsigned char 
 34861 ;; Return value:  Size  Location     Type
 34862 ;;                  1    wreg      void 
 34863 ;; Registers used:
 34864 ;;		wreg
 34865 ;; Tracked objects:
 34866 ;;		On entry : 0/0
 34867 ;;		On exit  : 0/0
 34868 ;;		Unchanged: 0/0
 34869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34874 ;;Total ram usage:        1 bytes
 34875 ;; Hardware stack levels used:    1
 34876 ;; Hardware stack levels required when called:   11
 34877 ;; This function calls:
 34878 ;;		Nothing
 34879 ;; This function is called by:
 34880 ;;		_I2c_WriteData
 34881 ;;		_I2c_ReadData
 34882 ;; This function uses a non-reentrant model
 34883 ;;
 34884                           
 34885                           	psect	text162
 34886  00689A                     __ptext162:
 34887                           	opt stack 0
 34888  00689A                     _WriteByte:
 34889                           	opt stack 14
 34890                           
 34891                           ;incstack = 0
 34892                           ;WriteByte@Byte stored from wreg
 34893  00689A  0100               	movlb	0	; () banked
 34894  00689C  6F7D               	movwf	WriteByte@Byte& (0+255),b
 34895                           
 34896                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 34897  00689E  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 34898  0068A2  0012               	return		;funcret
 34899  0068A4                     __end_of_WriteByte:
 34900                           	opt stack 0
 34901                           tosu	equ	0xFFF
 34902                           tosh	equ	0xFFE
 34903                           tosl	equ	0xFFD
 34904                           pclath	equ	0xFFA
 34905                           tblptru	equ	0xFF8
 34906                           tblptrh	equ	0xFF7
 34907                           tblptrl	equ	0xFF6
 34908                           tablat	equ	0xFF5
 34909                           prodh	equ	0xFF4
 34910                           prodl	equ	0xFF3
 34911                           intcon	equ	0xFF2
 34912                           intcon2	equ	0xFF1
 34913                           intcon3	equ	0xFF0
 34914                           indf0	equ	0xFEF
 34915                           postinc0	equ	0xFEE
 34916                           plusw0	equ	0xFEB
 34917                           fsr0h	equ	0xFEA
 34918                           fsr0l	equ	0xFE9
 34919                           wreg	equ	0xFE8
 34920                           indf1	equ	0xFE7
 34921                           postinc1	equ	0xFE6
 34922                           postdec1	equ	0xFE5
 34923                           plusw1	equ	0xFE3
 34924                           fsr1h	equ	0xFE2
 34925                           fsr1l	equ	0xFE1
 34926                           indf2	equ	0xFDF
 34927                           postinc2	equ	0xFDE
 34928                           postdec2	equ	0xFDD
 34929                           plusw2	equ	0xFDB
 34930                           fsr2h	equ	0xFDA
 34931                           fsr2l	equ	0xFD9
 34932                           status	equ	0xFD8
 34933                           
 34934 ;; *************** function _StopCondition *****************
 34935 ;; Defined at:
 34936 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34937 ;; Parameters:    Size  Location     Type
 34938 ;;		None
 34939 ;; Auto vars:     Size  Location     Type
 34940 ;;		None
 34941 ;; Return value:  Size  Location     Type
 34942 ;;                  1    wreg      void 
 34943 ;; Registers used:
 34944 ;;		status,2, status,0
 34945 ;; Tracked objects:
 34946 ;;		On entry : 0/0
 34947 ;;		On exit  : 0/0
 34948 ;;		Unchanged: 0/0
 34949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34954 ;;Total ram usage:        0 bytes
 34955 ;; Hardware stack levels used:    1
 34956 ;; Hardware stack levels required when called:   11
 34957 ;; This function calls:
 34958 ;;		Nothing
 34959 ;; This function is called by:
 34960 ;;		_I2c_WriteData
 34961 ;;		_I2c_ReadData
 34962 ;; This function uses a non-reentrant model
 34963 ;;
 34964                           
 34965                           	psect	text163
 34966  0068DA                     __ptext163:
 34967                           	opt stack 0
 34968  0068DA                     _StopCondition:
 34969                           	opt stack 14
 34970                           
 34971                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 34972                           
 34973                           ;incstack = 0
 34974  0068DA  8471               	bsf	3953,2,c	;volatile
 34975  0068DC  0012               	return		;funcret
 34976  0068DE                     __end_of_StopCondition:
 34977                           	opt stack 0
 34978                           tosu	equ	0xFFF
 34979                           tosh	equ	0xFFE
 34980                           tosl	equ	0xFFD
 34981                           pclath	equ	0xFFA
 34982                           tblptru	equ	0xFF8
 34983                           tblptrh	equ	0xFF7
 34984                           tblptrl	equ	0xFF6
 34985                           tablat	equ	0xFF5
 34986                           prodh	equ	0xFF4
 34987                           prodl	equ	0xFF3
 34988                           intcon	equ	0xFF2
 34989                           intcon2	equ	0xFF1
 34990                           intcon3	equ	0xFF0
 34991                           indf0	equ	0xFEF
 34992                           postinc0	equ	0xFEE
 34993                           plusw0	equ	0xFEB
 34994                           fsr0h	equ	0xFEA
 34995                           fsr0l	equ	0xFE9
 34996                           wreg	equ	0xFE8
 34997                           indf1	equ	0xFE7
 34998                           postinc1	equ	0xFE6
 34999                           postdec1	equ	0xFE5
 35000                           plusw1	equ	0xFE3
 35001                           fsr1h	equ	0xFE2
 35002                           fsr1l	equ	0xFE1
 35003                           indf2	equ	0xFDF
 35004                           postinc2	equ	0xFDE
 35005                           postdec2	equ	0xFDD
 35006                           plusw2	equ	0xFDB
 35007                           fsr2h	equ	0xFDA
 35008                           fsr2l	equ	0xFD9
 35009                           status	equ	0xFD8
 35010                           
 35011 ;; *************** function _StartCondition *****************
 35012 ;; Defined at:
 35013 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35014 ;; Parameters:    Size  Location     Type
 35015 ;;		None
 35016 ;; Auto vars:     Size  Location     Type
 35017 ;;		None
 35018 ;; Return value:  Size  Location     Type
 35019 ;;                  1    wreg      void 
 35020 ;; Registers used:
 35021 ;;		status,2, status,0
 35022 ;; Tracked objects:
 35023 ;;		On entry : 0/0
 35024 ;;		On exit  : 0/0
 35025 ;;		Unchanged: 0/0
 35026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35031 ;;Total ram usage:        0 bytes
 35032 ;; Hardware stack levels used:    1
 35033 ;; Hardware stack levels required when called:   11
 35034 ;; This function calls:
 35035 ;;		Nothing
 35036 ;; This function is called by:
 35037 ;;		_I2c_WriteData
 35038 ;;		_I2c_ReadData
 35039 ;; This function uses a non-reentrant model
 35040 ;;
 35041                           
 35042                           	psect	text164
 35043  0068DE                     __ptext164:
 35044                           	opt stack 0
 35045  0068DE                     _StartCondition:
 35046                           	opt stack 14
 35047                           
 35048                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 35049                           
 35050                           ;incstack = 0
 35051  0068DE  8071               	bsf	3953,0,c	;volatile
 35052  0068E0  0012               	return		;funcret
 35053  0068E2                     __end_of_StartCondition:
 35054                           	opt stack 0
 35055                           tosu	equ	0xFFF
 35056                           tosh	equ	0xFFE
 35057                           tosl	equ	0xFFD
 35058                           pclath	equ	0xFFA
 35059                           tblptru	equ	0xFF8
 35060                           tblptrh	equ	0xFF7
 35061                           tblptrl	equ	0xFF6
 35062                           tablat	equ	0xFF5
 35063                           prodh	equ	0xFF4
 35064                           prodl	equ	0xFF3
 35065                           intcon	equ	0xFF2
 35066                           intcon2	equ	0xFF1
 35067                           intcon3	equ	0xFF0
 35068                           indf0	equ	0xFEF
 35069                           postinc0	equ	0xFEE
 35070                           plusw0	equ	0xFEB
 35071                           fsr0h	equ	0xFEA
 35072                           fsr0l	equ	0xFE9
 35073                           wreg	equ	0xFE8
 35074                           indf1	equ	0xFE7
 35075                           postinc1	equ	0xFE6
 35076                           postdec1	equ	0xFE5
 35077                           plusw1	equ	0xFE3
 35078                           fsr1h	equ	0xFE2
 35079                           fsr1l	equ	0xFE1
 35080                           indf2	equ	0xFDF
 35081                           postinc2	equ	0xFDE
 35082                           postdec2	equ	0xFDD
 35083                           plusw2	equ	0xFDB
 35084                           fsr2h	equ	0xFDA
 35085                           fsr2l	equ	0xFD9
 35086                           status	equ	0xFD8
 35087                           
 35088 ;; *************** function _SetAckStatus *****************
 35089 ;; Defined at:
 35090 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35091 ;; Parameters:    Size  Location     Type
 35092 ;;  AckSts          1    wreg     unsigned char 
 35093 ;; Auto vars:     Size  Location     Type
 35094 ;;  AckSts          1   29[BANK0 ] unsigned char 
 35095 ;; Return value:  Size  Location     Type
 35096 ;;                  1    wreg      void 
 35097 ;; Registers used:
 35098 ;;		wreg
 35099 ;; Tracked objects:
 35100 ;;		On entry : 0/0
 35101 ;;		On exit  : 0/0
 35102 ;;		Unchanged: 0/0
 35103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35108 ;;Total ram usage:        1 bytes
 35109 ;; Hardware stack levels used:    1
 35110 ;; Hardware stack levels required when called:   11
 35111 ;; This function calls:
 35112 ;;		Nothing
 35113 ;; This function is called by:
 35114 ;;		_I2c_ReadData
 35115 ;; This function uses a non-reentrant model
 35116 ;;
 35117                           
 35118                           	psect	text165
 35119  0067C2                     __ptext165:
 35120                           	opt stack 0
 35121  0067C2                     _SetAckStatus:
 35122                           	opt stack 14
 35123                           
 35124                           ;incstack = 0
 35125                           ;SetAckStatus@AckSts stored from wreg
 35126  0067C2  0100               	movlb	0	; () banked
 35127  0067C4  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 35128                           
 35129                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 35130  0067C6  0100               	movlb	0	; () banked
 35131  0067C8  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 35132  0067CA  D002               	bra	u12385
 35133  0067CC  9A71               	bcf	3953,5,c	;volatile
 35134  0067CE  D001               	bra	u12386
 35135  0067D0                     u12385:
 35136  0067D0  8A71               	bsf	3953,5,c	;volatile
 35137  0067D2                     u12386:
 35138                           
 35139                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 35140  0067D2  8871               	bsf	3953,4,c	;volatile
 35141  0067D4  0012               	return		;funcret
 35142  0067D6                     __end_of_SetAckStatus:
 35143                           	opt stack 0
 35144                           tosu	equ	0xFFF
 35145                           tosh	equ	0xFFE
 35146                           tosl	equ	0xFFD
 35147                           pclath	equ	0xFFA
 35148                           tblptru	equ	0xFF8
 35149                           tblptrh	equ	0xFF7
 35150                           tblptrl	equ	0xFF6
 35151                           tablat	equ	0xFF5
 35152                           prodh	equ	0xFF4
 35153                           prodl	equ	0xFF3
 35154                           intcon	equ	0xFF2
 35155                           intcon2	equ	0xFF1
 35156                           intcon3	equ	0xFF0
 35157                           indf0	equ	0xFEF
 35158                           postinc0	equ	0xFEE
 35159                           plusw0	equ	0xFEB
 35160                           fsr0h	equ	0xFEA
 35161                           fsr0l	equ	0xFE9
 35162                           wreg	equ	0xFE8
 35163                           indf1	equ	0xFE7
 35164                           postinc1	equ	0xFE6
 35165                           postdec1	equ	0xFE5
 35166                           plusw1	equ	0xFE3
 35167                           fsr1h	equ	0xFE2
 35168                           fsr1l	equ	0xFE1
 35169                           indf2	equ	0xFDF
 35170                           postinc2	equ	0xFDE
 35171                           postdec2	equ	0xFDD
 35172                           plusw2	equ	0xFDB
 35173                           fsr2h	equ	0xFDA
 35174                           fsr2l	equ	0xFD9
 35175                           status	equ	0xFD8
 35176                           
 35177 ;; *************** function _ReadByte *****************
 35178 ;; Defined at:
 35179 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35180 ;; Parameters:    Size  Location     Type
 35181 ;;		None
 35182 ;; Auto vars:     Size  Location     Type
 35183 ;;  Byte            1   29[BANK0 ] unsigned char 
 35184 ;; Return value:  Size  Location     Type
 35185 ;;                  1    wreg      unsigned char 
 35186 ;; Registers used:
 35187 ;;		wreg, status,2
 35188 ;; Tracked objects:
 35189 ;;		On entry : 0/0
 35190 ;;		On exit  : 0/0
 35191 ;;		Unchanged: 0/0
 35192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35196 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35197 ;;Total ram usage:        1 bytes
 35198 ;; Hardware stack levels used:    1
 35199 ;; Hardware stack levels required when called:   11
 35200 ;; This function calls:
 35201 ;;		Nothing
 35202 ;; This function is called by:
 35203 ;;		_I2c_ReadData
 35204 ;; This function uses a non-reentrant model
 35205 ;;
 35206                           
 35207                           	psect	text166
 35208  0068A4                     __ptext166:
 35209                           	opt stack 0
 35210  0068A4                     _ReadByte:
 35211                           	opt stack 14
 35212                           
 35213                           ;i2c_drv.c: 207: UINT8 Byte;
 35214                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 35215                           
 35216                           ;incstack = 0
 35217  0068A4  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 35218                           
 35219                           ;i2c_drv.c: 213: return Byte;
 35220  0068A8  0100               	movlb	0	; () banked
 35221  0068AA  517D               	movf	ReadByte@Byte& (0+255),w,b
 35222  0068AC  0012               	return	
 35223  0068AE                     __end_of_ReadByte:
 35224                           	opt stack 0
 35225                           tosu	equ	0xFFF
 35226                           tosh	equ	0xFFE
 35227                           tosl	equ	0xFFD
 35228                           pclath	equ	0xFFA
 35229                           tblptru	equ	0xFF8
 35230                           tblptrh	equ	0xFF7
 35231                           tblptrl	equ	0xFF6
 35232                           tablat	equ	0xFF5
 35233                           prodh	equ	0xFF4
 35234                           prodl	equ	0xFF3
 35235                           intcon	equ	0xFF2
 35236                           intcon2	equ	0xFF1
 35237                           intcon3	equ	0xFF0
 35238                           indf0	equ	0xFEF
 35239                           postinc0	equ	0xFEE
 35240                           plusw0	equ	0xFEB
 35241                           fsr0h	equ	0xFEA
 35242                           fsr0l	equ	0xFE9
 35243                           wreg	equ	0xFE8
 35244                           indf1	equ	0xFE7
 35245                           postinc1	equ	0xFE6
 35246                           postdec1	equ	0xFE5
 35247                           plusw1	equ	0xFE3
 35248                           fsr1h	equ	0xFE2
 35249                           fsr1l	equ	0xFE1
 35250                           indf2	equ	0xFDF
 35251                           postinc2	equ	0xFDE
 35252                           postdec2	equ	0xFDD
 35253                           plusw2	equ	0xFDB
 35254                           fsr2h	equ	0xFDA
 35255                           fsr2l	equ	0xFD9
 35256                           status	equ	0xFD8
 35257                           
 35258 ;; *************** function _GenerateEvt *****************
 35259 ;; Defined at:
 35260 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35261 ;; Parameters:    Size  Location     Type
 35262 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35263 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 35264 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 35265 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 35266 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 35267 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 35268 ;; Auto vars:     Size  Location     Type
 35269 ;;  EventStatus     1   31[BANK0 ] enum E7727
 35270 ;; Return value:  Size  Location     Type
 35271 ;;                  1    wreg      enum E7699
 35272 ;; Registers used:
 35273 ;;		wreg, fsr2l, fsr2h, status,2
 35274 ;; Tracked objects:
 35275 ;;		On entry : 0/0
 35276 ;;		On exit  : 0/0
 35277 ;;		Unchanged: 0/0
 35278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35282 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35283 ;;Total ram usage:        3 bytes
 35284 ;; Hardware stack levels used:    1
 35285 ;; Hardware stack levels required when called:   11
 35286 ;; This function calls:
 35287 ;;		Nothing
 35288 ;; This function is called by:
 35289 ;;		_I2c_ReadData
 35290 ;;		_CheckModem
 35291 ;;		_TurnOnModem
 35292 ;;		_ConfigureModem
 35293 ;;		_ModemEvtParser
 35294 ;;		_GetSmsSm
 35295 ;;		_Mdm_RequestSmsData
 35296 ;;		_I2cSlv_SendI2cMsg
 35297 ;;		_I2cSlv_ReceiveI2cMsg
 35298 ;;		_RiSm
 35299 ;;		_Mdm_SendSmsData
 35300 ;;		_MdmHttp_InitGprsNetwork
 35301 ;;		_MdmHttp_GetMethod
 35302 ;;		_Alarm
 35303 ;; This function uses a non-reentrant model
 35304 ;;
 35305                           
 35306                           	psect	text167
 35307  00673A                     __ptext167:
 35308                           	opt stack 0
 35309  00673A                     _GenerateEvt:
 35310                           	opt stack 13
 35311                           
 35312                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 35313                           
 35314                           ; BSR set to: 0
 35315                           ;incstack = 0
 35316  00673A  0E00               	movlw	0
 35317  00673C  0100               	movlb	0	; () banked
 35318  00673E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35319                           
 35320                           ; BSR set to: 0
 35321                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 35322  006740  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 35323  006744  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 35324  006748  0E02               	movlw	2
 35325  00674A  6EDF               	movwf	indf2,c
 35326                           
 35327                           ; BSR set to: 0
 35328                           ;os_ser.c: 83: EventStatus = EventSent;
 35329  00674C  0E02               	movlw	2
 35330  00674E  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 35331  006750  0012               	return	
 35332  006752                     __end_of_GenerateEvt:
 35333                           	opt stack 0
 35334                           tosu	equ	0xFFF
 35335                           tosh	equ	0xFFE
 35336                           tosl	equ	0xFFD
 35337                           pclath	equ	0xFFA
 35338                           tblptru	equ	0xFF8
 35339                           tblptrh	equ	0xFF7
 35340                           tblptrl	equ	0xFF6
 35341                           tablat	equ	0xFF5
 35342                           prodh	equ	0xFF4
 35343                           prodl	equ	0xFF3
 35344                           intcon	equ	0xFF2
 35345                           intcon2	equ	0xFF1
 35346                           intcon3	equ	0xFF0
 35347                           indf0	equ	0xFEF
 35348                           postinc0	equ	0xFEE
 35349                           plusw0	equ	0xFEB
 35350                           fsr0h	equ	0xFEA
 35351                           fsr0l	equ	0xFE9
 35352                           wreg	equ	0xFE8
 35353                           indf1	equ	0xFE7
 35354                           postinc1	equ	0xFE6
 35355                           postdec1	equ	0xFE5
 35356                           plusw1	equ	0xFE3
 35357                           fsr1h	equ	0xFE2
 35358                           fsr1l	equ	0xFE1
 35359                           indf2	equ	0xFDF
 35360                           postinc2	equ	0xFDE
 35361                           postdec2	equ	0xFDD
 35362                           plusw2	equ	0xFDB
 35363                           fsr2h	equ	0xFDA
 35364                           fsr2l	equ	0xFD9
 35365                           status	equ	0xFD8
 35366                           
 35367 ;; *************** function _EnableReceiver *****************
 35368 ;; Defined at:
 35369 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35370 ;; Parameters:    Size  Location     Type
 35371 ;;		None
 35372 ;; Auto vars:     Size  Location     Type
 35373 ;;		None
 35374 ;; Return value:  Size  Location     Type
 35375 ;;                  1    wreg      void 
 35376 ;; Registers used:
 35377 ;;		status,2, status,0
 35378 ;; Tracked objects:
 35379 ;;		On entry : 0/0
 35380 ;;		On exit  : 0/0
 35381 ;;		Unchanged: 0/0
 35382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35387 ;;Total ram usage:        0 bytes
 35388 ;; Hardware stack levels used:    1
 35389 ;; Hardware stack levels required when called:   11
 35390 ;; This function calls:
 35391 ;;		Nothing
 35392 ;; This function is called by:
 35393 ;;		_I2c_ReadData
 35394 ;; This function uses a non-reentrant model
 35395 ;;
 35396                           
 35397                           	psect	text168
 35398  0068E2                     __ptext168:
 35399                           	opt stack 0
 35400  0068E2                     _EnableReceiver:
 35401                           	opt stack 14
 35402                           
 35403                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 35404                           
 35405                           ; BSR set to: 0
 35406                           ;incstack = 0
 35407  0068E2  8671               	bsf	3953,3,c	;volatile
 35408  0068E4  0012               	return		;funcret
 35409  0068E6                     __end_of_EnableReceiver:
 35410                           	opt stack 0
 35411                           tosu	equ	0xFFF
 35412                           tosh	equ	0xFFE
 35413                           tosl	equ	0xFFD
 35414                           pclath	equ	0xFFA
 35415                           tblptru	equ	0xFF8
 35416                           tblptrh	equ	0xFF7
 35417                           tblptrl	equ	0xFF6
 35418                           tablat	equ	0xFF5
 35419                           prodh	equ	0xFF4
 35420                           prodl	equ	0xFF3
 35421                           intcon	equ	0xFF2
 35422                           intcon2	equ	0xFF1
 35423                           intcon3	equ	0xFF0
 35424                           indf0	equ	0xFEF
 35425                           postinc0	equ	0xFEE
 35426                           plusw0	equ	0xFEB
 35427                           fsr0h	equ	0xFEA
 35428                           fsr0l	equ	0xFE9
 35429                           wreg	equ	0xFE8
 35430                           indf1	equ	0xFE7
 35431                           postinc1	equ	0xFE6
 35432                           postdec1	equ	0xFE5
 35433                           plusw1	equ	0xFE3
 35434                           fsr1h	equ	0xFE2
 35435                           fsr1l	equ	0xFE1
 35436                           indf2	equ	0xFDF
 35437                           postinc2	equ	0xFDE
 35438                           postdec2	equ	0xFDD
 35439                           plusw2	equ	0xFDB
 35440                           fsr2h	equ	0xFDA
 35441                           fsr2l	equ	0xFD9
 35442                           status	equ	0xFD8
 35443                           
 35444 ;; *************** function _CheckTxStatus *****************
 35445 ;; Defined at:
 35446 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35447 ;; Parameters:    Size  Location     Type
 35448 ;;		None
 35449 ;; Auto vars:     Size  Location     Type
 35450 ;;		None
 35451 ;; Return value:  Size  Location     Type
 35452 ;;                  1    wreg      unsigned char 
 35453 ;; Registers used:
 35454 ;;		wreg, status,2, status,0
 35455 ;; Tracked objects:
 35456 ;;		On entry : 0/0
 35457 ;;		On exit  : 0/0
 35458 ;;		Unchanged: 0/0
 35459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35464 ;;Total ram usage:        0 bytes
 35465 ;; Hardware stack levels used:    1
 35466 ;; Hardware stack levels required when called:   11
 35467 ;; This function calls:
 35468 ;;		Nothing
 35469 ;; This function is called by:
 35470 ;;		_I2c_WriteData
 35471 ;;		_I2c_ReadData
 35472 ;; This function uses a non-reentrant model
 35473 ;;
 35474                           
 35475                           	psect	text169
 35476  0068AE                     __ptext169:
 35477                           	opt stack 0
 35478  0068AE                     _CheckTxStatus:
 35479                           	opt stack 14
 35480                           
 35481                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 35482                           
 35483                           ;incstack = 0
 35484  0068AE  4073               	rrncf	3955,w,c	;volatile
 35485  0068B0  42E8               	rrncf	wreg,f,c
 35486  0068B2  0B3F               	andlw	63
 35487  0068B4  0B01               	andlw	1
 35488  0068B6  0012               	return	
 35489  0068B8                     __end_of_CheckTxStatus:
 35490                           	opt stack 0
 35491                           tosu	equ	0xFFF
 35492                           tosh	equ	0xFFE
 35493                           tosl	equ	0xFFD
 35494                           pclath	equ	0xFFA
 35495                           tblptru	equ	0xFF8
 35496                           tblptrh	equ	0xFF7
 35497                           tblptrl	equ	0xFF6
 35498                           tablat	equ	0xFF5
 35499                           prodh	equ	0xFF4
 35500                           prodl	equ	0xFF3
 35501                           intcon	equ	0xFF2
 35502                           intcon2	equ	0xFF1
 35503                           intcon3	equ	0xFF0
 35504                           indf0	equ	0xFEF
 35505                           postinc0	equ	0xFEE
 35506                           plusw0	equ	0xFEB
 35507                           fsr0h	equ	0xFEA
 35508                           fsr0l	equ	0xFE9
 35509                           wreg	equ	0xFE8
 35510                           indf1	equ	0xFE7
 35511                           postinc1	equ	0xFE6
 35512                           postdec1	equ	0xFE5
 35513                           plusw1	equ	0xFE3
 35514                           fsr1h	equ	0xFE2
 35515                           fsr1l	equ	0xFE1
 35516                           indf2	equ	0xFDF
 35517                           postinc2	equ	0xFDE
 35518                           postdec2	equ	0xFDD
 35519                           plusw2	equ	0xFDB
 35520                           fsr2h	equ	0xFDA
 35521                           fsr2l	equ	0xFD9
 35522                           status	equ	0xFD8
 35523                           
 35524 ;; *************** function _CheckAckStatus *****************
 35525 ;; Defined at:
 35526 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35527 ;; Parameters:    Size  Location     Type
 35528 ;;		None
 35529 ;; Auto vars:     Size  Location     Type
 35530 ;;		None
 35531 ;; Return value:  Size  Location     Type
 35532 ;;                  1    wreg      unsigned char 
 35533 ;; Registers used:
 35534 ;;		wreg, status,2, status,0
 35535 ;; Tracked objects:
 35536 ;;		On entry : 0/0
 35537 ;;		On exit  : 0/0
 35538 ;;		Unchanged: 0/0
 35539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35544 ;;Total ram usage:        0 bytes
 35545 ;; Hardware stack levels used:    1
 35546 ;; Hardware stack levels required when called:   11
 35547 ;; This function calls:
 35548 ;;		Nothing
 35549 ;; This function is called by:
 35550 ;;		_I2c_WriteData
 35551 ;;		_I2c_ReadData
 35552 ;; This function uses a non-reentrant model
 35553 ;;
 35554                           
 35555                           	psect	text170
 35556  0068B8                     __ptext170:
 35557                           	opt stack 0
 35558  0068B8                     _CheckAckStatus:
 35559                           	opt stack 14
 35560                           
 35561                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 35562                           
 35563                           ;incstack = 0
 35564  0068B8  4471               	rlncf	3953,w,c	;volatile
 35565  0068BA  46E8               	rlncf	wreg,f,c
 35566  0068BC  0B03               	andlw	3
 35567  0068BE  0B01               	andlw	1
 35568  0068C0  0012               	return	
 35569  0068C2                     __end_of_CheckAckStatus:
 35570                           	opt stack 0
 35571                           tosu	equ	0xFFF
 35572                           tosh	equ	0xFFE
 35573                           tosl	equ	0xFFD
 35574                           pclath	equ	0xFFA
 35575                           tblptru	equ	0xFF8
 35576                           tblptrh	equ	0xFF7
 35577                           tblptrl	equ	0xFF6
 35578                           tablat	equ	0xFF5
 35579                           prodh	equ	0xFF4
 35580                           prodl	equ	0xFF3
 35581                           intcon	equ	0xFF2
 35582                           intcon2	equ	0xFF1
 35583                           intcon3	equ	0xFF0
 35584                           indf0	equ	0xFEF
 35585                           postinc0	equ	0xFEE
 35586                           plusw0	equ	0xFEB
 35587                           fsr0h	equ	0xFEA
 35588                           fsr0l	equ	0xFE9
 35589                           wreg	equ	0xFE8
 35590                           indf1	equ	0xFE7
 35591                           postinc1	equ	0xFE6
 35592                           postdec1	equ	0xFE5
 35593                           plusw1	equ	0xFE3
 35594                           fsr1h	equ	0xFE2
 35595                           fsr1l	equ	0xFE1
 35596                           indf2	equ	0xFDF
 35597                           postinc2	equ	0xFDE
 35598                           postdec2	equ	0xFDD
 35599                           plusw2	equ	0xFDB
 35600                           fsr2h	equ	0xFDA
 35601                           fsr2l	equ	0xFD9
 35602                           status	equ	0xFD8
 35603                           
 35604 ;; *************** function _LowPriorityIsr *****************
 35605 ;; Defined at:
 35606 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 35607 ;; Parameters:    Size  Location     Type
 35608 ;;		None
 35609 ;; Auto vars:     Size  Location     Type
 35610 ;;		None
 35611 ;; Return value:  Size  Location     Type
 35612 ;;                  1    wreg      void 
 35613 ;; Registers used:
 35614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35615 ;; Tracked objects:
 35616 ;;		On entry : 0/0
 35617 ;;		On exit  : 0/0
 35618 ;;		Unchanged: 0/0
 35619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35622 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35623 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35624 ;;Total ram usage:       21 bytes
 35625 ;; Hardware stack levels used:    1
 35626 ;; Hardware stack levels required when called:   10
 35627 ;; This function calls:
 35628 ;;		_Tmr_Tmr2Isr
 35629 ;; This function is called by:
 35630 ;;		Interrupt level 1
 35631 ;; This function uses a non-reentrant model
 35632 ;;
 35633                           
 35634                           	psect	intcodelo
 35635  000018                     __pintcodelo:
 35636                           	opt stack 0
 35637  000018                     _LowPriorityIsr:
 35638                           	opt stack 8
 35639                           
 35640                           ;incstack = 0
 35641  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 35642  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 35643  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 35644  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 35645  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 35646  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 35647  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 35648  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 35649  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 35650  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 35651  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 35652  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 35653  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 35654  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 35655  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 35656  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 35657  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 35658  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 35659  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 35660  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 35661  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 35662  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 35663                           
 35664                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 35665  00006E  B29E               	btfsc	3998,1,c	;volatile
 35666                           
 35667                           ;irq.c: 259: {
 35668                           ;irq.c: 261: Tmr_Tmr2Isr();
 35669  000070  EC6F  F032         	call	_Tmr_Tmr2Isr	;wreg free
 35670  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 35671  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 35672  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 35673  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 35674  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 35675  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 35676  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 35677  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 35678  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 35679  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 35680  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 35681  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 35682  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 35683  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 35684  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 35685  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 35686  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 35687  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 35688  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 35689  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 35690  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 35691  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 35692  0000CA  0010               	retfie	
 35693  0000CC                     __end_of_LowPriorityIsr:
 35694                           	opt stack 0
 35695                           tosu	equ	0xFFF
 35696                           tosh	equ	0xFFE
 35697                           tosl	equ	0xFFD
 35698                           pclatu	equ	0xFFB
 35699                           pclath	equ	0xFFA
 35700                           tblptru	equ	0xFF8
 35701                           tblptrh	equ	0xFF7
 35702                           tblptrl	equ	0xFF6
 35703                           tablat	equ	0xFF5
 35704                           prodh	equ	0xFF4
 35705                           prodl	equ	0xFF3
 35706                           intcon	equ	0xFF2
 35707                           intcon2	equ	0xFF1
 35708                           intcon3	equ	0xFF0
 35709                           indf0	equ	0xFEF
 35710                           postinc0	equ	0xFEE
 35711                           plusw0	equ	0xFEB
 35712                           fsr0h	equ	0xFEA
 35713                           fsr0l	equ	0xFE9
 35714                           wreg	equ	0xFE8
 35715                           indf1	equ	0xFE7
 35716                           postinc1	equ	0xFE6
 35717                           postdec1	equ	0xFE5
 35718                           plusw1	equ	0xFE3
 35719                           fsr1h	equ	0xFE2
 35720                           fsr1l	equ	0xFE1
 35721                           bsr	equ	0xFE0
 35722                           indf2	equ	0xFDF
 35723                           postinc2	equ	0xFDE
 35724                           postdec2	equ	0xFDD
 35725                           plusw2	equ	0xFDB
 35726                           fsr2h	equ	0xFDA
 35727                           fsr2l	equ	0xFD9
 35728                           status	equ	0xFD8
 35729                           
 35730 ;; *************** function _Tmr_Tmr2Isr *****************
 35731 ;; Defined at:
 35732 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 35733 ;; Parameters:    Size  Location     Type
 35734 ;;		None
 35735 ;; Auto vars:     Size  Location     Type
 35736 ;;		None
 35737 ;; Return value:  Size  Location     Type
 35738 ;;                  1    wreg      void 
 35739 ;; Registers used:
 35740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35741 ;; Tracked objects:
 35742 ;;		On entry : 0/0
 35743 ;;		On exit  : 0/0
 35744 ;;		Unchanged: 0/0
 35745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35750 ;;Total ram usage:        0 bytes
 35751 ;; Hardware stack levels used:    1
 35752 ;; Hardware stack levels required when called:    9
 35753 ;; This function calls:
 35754 ;;		Absolute function
 35755 ;;		_Sch_SchmIntService
 35756 ;; This function is called by:
 35757 ;;		_LowPriorityIsr
 35758 ;; This function uses a non-reentrant model
 35759 ;;
 35760                           
 35761                           	psect	text172
 35762  0064DE                     __ptext172:
 35763                           	opt stack 0
 35764  0064DE                     _Tmr_Tmr2Isr:
 35765                           	opt stack 8
 35766                           
 35767                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 35768                           
 35769                           ;incstack = 0
 35770  0064DE  929E               	bcf	3998,1,c	;volatile
 35771                           
 35772                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 35773  0064E0  0102               	movlb	2	; () banked
 35774  0064E2  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35775  0064E4  11E9               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35776  0064E6  B4D8               	btfsc	status,2,c
 35777  0064E8  0012               	return	
 35778                           
 35779                           ; BSR set to: 2
 35780                           ;tmr_drv.c: 315: {
 35781                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 35782  0064EA  D801               	call	i1u1608_28
 35783  0064EC  0012               	return	
 35784  0064EE                     i1u1608_28:
 35785  0064EE  0005               	push	
 35786  0064F0  6EFA               	movwf	pclath,c
 35787  0064F2  51E8               	movf	_Tmr2IsrCallback& (0+255),w,b
 35788  0064F4  6EFD               	movwf	tosl,c
 35789  0064F6  51E9               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 35790  0064F8  6EFE               	movwf	tosh,c
 35791  0064FA  50F8               	movf	tblptru,w,c
 35792  0064FC  6EFF               	movwf	tosu,c
 35793  0064FE  50FA               	movf	pclath,w,c
 35794  006500  0012               	return		;indir
 35795  006502                     __end_of_Tmr_Tmr2Isr:
 35796                           	opt stack 0
 35797                           tosu	equ	0xFFF
 35798                           tosh	equ	0xFFE
 35799                           tosl	equ	0xFFD
 35800                           pclatu	equ	0xFFB
 35801                           pclath	equ	0xFFA
 35802                           tblptru	equ	0xFF8
 35803                           tblptrh	equ	0xFF7
 35804                           tblptrl	equ	0xFF6
 35805                           tablat	equ	0xFF5
 35806                           prodh	equ	0xFF4
 35807                           prodl	equ	0xFF3
 35808                           intcon	equ	0xFF2
 35809                           intcon2	equ	0xFF1
 35810                           intcon3	equ	0xFF0
 35811                           indf0	equ	0xFEF
 35812                           postinc0	equ	0xFEE
 35813                           plusw0	equ	0xFEB
 35814                           fsr0h	equ	0xFEA
 35815                           fsr0l	equ	0xFE9
 35816                           wreg	equ	0xFE8
 35817                           indf1	equ	0xFE7
 35818                           postinc1	equ	0xFE6
 35819                           postdec1	equ	0xFE5
 35820                           plusw1	equ	0xFE3
 35821                           fsr1h	equ	0xFE2
 35822                           fsr1l	equ	0xFE1
 35823                           bsr	equ	0xFE0
 35824                           indf2	equ	0xFDF
 35825                           postinc2	equ	0xFDE
 35826                           postdec2	equ	0xFDD
 35827                           plusw2	equ	0xFDB
 35828                           fsr2h	equ	0xFDA
 35829                           fsr2l	equ	0xFD9
 35830                           status	equ	0xFD8
 35831                           
 35832 ;; *************** function _Sch_SchmIntService *****************
 35833 ;; Defined at:
 35834 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35835 ;; Parameters:    Size  Location     Type
 35836 ;;		None
 35837 ;; Auto vars:     Size  Location     Type
 35838 ;;		None
 35839 ;; Return value:  Size  Location     Type
 35840 ;;                  1    wreg      void 
 35841 ;; Registers used:
 35842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35843 ;; Tracked objects:
 35844 ;;		On entry : 0/0
 35845 ;;		On exit  : 0/0
 35846 ;;		Unchanged: 0/0
 35847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35852 ;;Total ram usage:        0 bytes
 35853 ;; Hardware stack levels used:    1
 35854 ;; Hardware stack levels required when called:    8
 35855 ;; This function calls:
 35856 ;;		_OsAlrm_ProcessOsAlarms
 35857 ;;		_UpdateOsCounters
 35858 ;;		_UpdateSchFlag
 35859 ;; This function is called by:
 35860 ;;		_SystemInit
 35861 ;;		_Tmr_Tmr2Isr
 35862 ;; This function uses a non-reentrant model
 35863 ;;
 35864                           
 35865                           	psect	text173
 35866  00685C                     __ptext173:
 35867                           	opt stack 0
 35868  00685C                     _Sch_SchmIntService:
 35869                           	opt stack 8
 35870                           
 35871                           ;os_sched.c: 217: UpdateSchFlag();
 35872                           
 35873                           ;incstack = 0
 35874  00685C  EC35  F033         	call	_UpdateSchFlag	;wreg free
 35875                           
 35876                           ;os_sched.c: 219: UpdateOsCounters();
 35877  006860  EC1E  F034         	call	_UpdateOsCounters	;wreg free
 35878                           
 35879                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 35880  006864  ECE2  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 35881  006868  0012               	return		;funcret
 35882  00686A                     __end_of_Sch_SchmIntService:
 35883                           	opt stack 0
 35884                           tosu	equ	0xFFF
 35885                           tosh	equ	0xFFE
 35886                           tosl	equ	0xFFD
 35887                           pclatu	equ	0xFFB
 35888                           pclath	equ	0xFFA
 35889                           tblptru	equ	0xFF8
 35890                           tblptrh	equ	0xFF7
 35891                           tblptrl	equ	0xFF6
 35892                           tablat	equ	0xFF5
 35893                           prodh	equ	0xFF4
 35894                           prodl	equ	0xFF3
 35895                           intcon	equ	0xFF2
 35896                           intcon2	equ	0xFF1
 35897                           intcon3	equ	0xFF0
 35898                           indf0	equ	0xFEF
 35899                           postinc0	equ	0xFEE
 35900                           plusw0	equ	0xFEB
 35901                           fsr0h	equ	0xFEA
 35902                           fsr0l	equ	0xFE9
 35903                           wreg	equ	0xFE8
 35904                           indf1	equ	0xFE7
 35905                           postinc1	equ	0xFE6
 35906                           postdec1	equ	0xFE5
 35907                           plusw1	equ	0xFE3
 35908                           fsr1h	equ	0xFE2
 35909                           fsr1l	equ	0xFE1
 35910                           bsr	equ	0xFE0
 35911                           indf2	equ	0xFDF
 35912                           postinc2	equ	0xFDE
 35913                           postdec2	equ	0xFDD
 35914                           plusw2	equ	0xFDB
 35915                           fsr2h	equ	0xFDA
 35916                           fsr2l	equ	0xFD9
 35917                           status	equ	0xFD8
 35918                           
 35919 ;; *************** function _UpdateSchFlag *****************
 35920 ;; Defined at:
 35921 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 35922 ;; Parameters:    Size  Location     Type
 35923 ;;		None
 35924 ;; Auto vars:     Size  Location     Type
 35925 ;;		None
 35926 ;; Return value:  Size  Location     Type
 35927 ;;                  1    wreg      void 
 35928 ;; Registers used:
 35929 ;;		wreg, status,2, status,0
 35930 ;; Tracked objects:
 35931 ;;		On entry : 0/0
 35932 ;;		On exit  : 0/0
 35933 ;;		Unchanged: 0/0
 35934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35939 ;;Total ram usage:        0 bytes
 35940 ;; Hardware stack levels used:    1
 35941 ;; Hardware stack levels required when called:    4
 35942 ;; This function calls:
 35943 ;;		Nothing
 35944 ;; This function is called by:
 35945 ;;		_Sch_SchmIntService
 35946 ;; This function uses a non-reentrant model
 35947 ;;
 35948                           
 35949                           	psect	text174
 35950  00666A                     __ptext174:
 35951                           	opt stack 0
 35952  00666A                     _UpdateSchFlag:
 35953                           	opt stack 11
 35954                           
 35955                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 35956                           ;os_sched.c: 138: InterruptCounter++;
 35957                           
 35958                           ;incstack = 0
 35959  00666A  0102               	movlb	2	; () banked
 35960  00666C  4BDA               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 35961  00666E  2BDB               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 35962                           
 35963                           ; BSR set to: 2
 35964                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 35965  006670  51DA               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 35966  006672  11DB               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 35967  006674  B4D8               	btfsc	status,2,c
 35968  006676  0012               	return	
 35969                           
 35970                           ; BSR set to: 2
 35971                           ;os_sched.c: 141: {
 35972                           ;os_sched.c: 143: InterruptCounter = 0;
 35973  006678  0E00               	movlw	0
 35974  00667A  6FDB               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 35975  00667C  0E00               	movlw	0
 35976  00667E  6FDA               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 35977                           
 35978                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 35979  006680  0E00               	movlw	0
 35980  006682  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 35981  006684  0012               	return	
 35982  006686                     __end_of_UpdateSchFlag:
 35983                           	opt stack 0
 35984                           tosu	equ	0xFFF
 35985                           tosh	equ	0xFFE
 35986                           tosl	equ	0xFFD
 35987                           pclatu	equ	0xFFB
 35988                           pclath	equ	0xFFA
 35989                           tblptru	equ	0xFF8
 35990                           tblptrh	equ	0xFF7
 35991                           tblptrl	equ	0xFF6
 35992                           tablat	equ	0xFF5
 35993                           prodh	equ	0xFF4
 35994                           prodl	equ	0xFF3
 35995                           intcon	equ	0xFF2
 35996                           intcon2	equ	0xFF1
 35997                           intcon3	equ	0xFF0
 35998                           indf0	equ	0xFEF
 35999                           postinc0	equ	0xFEE
 36000                           plusw0	equ	0xFEB
 36001                           fsr0h	equ	0xFEA
 36002                           fsr0l	equ	0xFE9
 36003                           wreg	equ	0xFE8
 36004                           indf1	equ	0xFE7
 36005                           postinc1	equ	0xFE6
 36006                           postdec1	equ	0xFE5
 36007                           plusw1	equ	0xFE3
 36008                           fsr1h	equ	0xFE2
 36009                           fsr1l	equ	0xFE1
 36010                           bsr	equ	0xFE0
 36011                           indf2	equ	0xFDF
 36012                           postinc2	equ	0xFDE
 36013                           postdec2	equ	0xFDD
 36014                           plusw2	equ	0xFDB
 36015                           fsr2h	equ	0xFDA
 36016                           fsr2l	equ	0xFD9
 36017                           status	equ	0xFD8
 36018                           
 36019 ;; *************** function _UpdateOsCounters *****************
 36020 ;; Defined at:
 36021 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36022 ;; Parameters:    Size  Location     Type
 36023 ;;		None
 36024 ;; Auto vars:     Size  Location     Type
 36025 ;;		None
 36026 ;; Return value:  Size  Location     Type
 36027 ;;                  1    wreg      void 
 36028 ;; Registers used:
 36029 ;;		wreg, status,2, status,0
 36030 ;; Tracked objects:
 36031 ;;		On entry : 0/0
 36032 ;;		On exit  : 0/0
 36033 ;;		Unchanged: 0/0
 36034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36039 ;;Total ram usage:        0 bytes
 36040 ;; Hardware stack levels used:    1
 36041 ;; Hardware stack levels required when called:    4
 36042 ;; This function calls:
 36043 ;;		Nothing
 36044 ;; This function is called by:
 36045 ;;		_Sch_SchmIntService
 36046 ;; This function uses a non-reentrant model
 36047 ;;
 36048                           
 36049                           	psect	text175
 36050  00683C                     __ptext175:
 36051                           	opt stack 0
 36052  00683C                     _UpdateOsCounters:
 36053                           	opt stack 11
 36054                           
 36055                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 36056                           
 36057                           ; BSR set to: 2
 36058                           ;incstack = 0
 36059  00683C  0E01               	movlw	1
 36060  00683E  0103               	movlb	3	; () banked
 36061  006840  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 36062  006842  0E00               	movlw	0
 36063  006844  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 36064  006846  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 36065  006848  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 36066                           
 36067                           ; BSR set to: 3
 36068  00684A  0012               	return		;funcret
 36069  00684C                     __end_of_UpdateOsCounters:
 36070                           	opt stack 0
 36071                           tosu	equ	0xFFF
 36072                           tosh	equ	0xFFE
 36073                           tosl	equ	0xFFD
 36074                           pclatu	equ	0xFFB
 36075                           pclath	equ	0xFFA
 36076                           tblptru	equ	0xFF8
 36077                           tblptrh	equ	0xFF7
 36078                           tblptrl	equ	0xFF6
 36079                           tablat	equ	0xFF5
 36080                           prodh	equ	0xFF4
 36081                           prodl	equ	0xFF3
 36082                           intcon	equ	0xFF2
 36083                           intcon2	equ	0xFF1
 36084                           intcon3	equ	0xFF0
 36085                           indf0	equ	0xFEF
 36086                           postinc0	equ	0xFEE
 36087                           plusw0	equ	0xFEB
 36088                           fsr0h	equ	0xFEA
 36089                           fsr0l	equ	0xFE9
 36090                           wreg	equ	0xFE8
 36091                           indf1	equ	0xFE7
 36092                           postinc1	equ	0xFE6
 36093                           postdec1	equ	0xFE5
 36094                           plusw1	equ	0xFE3
 36095                           fsr1h	equ	0xFE2
 36096                           fsr1l	equ	0xFE1
 36097                           bsr	equ	0xFE0
 36098                           indf2	equ	0xFDF
 36099                           postinc2	equ	0xFDE
 36100                           postdec2	equ	0xFDD
 36101                           plusw2	equ	0xFDB
 36102                           fsr2h	equ	0xFDA
 36103                           fsr2l	equ	0xFD9
 36104                           status	equ	0xFD8
 36105                           
 36106 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 36107 ;; Defined at:
 36108 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36109 ;; Parameters:    Size  Location     Type
 36110 ;;		None
 36111 ;; Auto vars:     Size  Location     Type
 36112 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 36113 ;; Return value:  Size  Location     Type
 36114 ;;                  1    wreg      void 
 36115 ;; Registers used:
 36116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36117 ;; Tracked objects:
 36118 ;;		On entry : 0/0
 36119 ;;		On exit  : 0/0
 36120 ;;		Unchanged: 0/0
 36121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36124 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36125 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36126 ;;Total ram usage:       10 bytes
 36127 ;; Hardware stack levels used:    1
 36128 ;; Hardware stack levels required when called:    7
 36129 ;; This function calls:
 36130 ;;		_I2cDummyTx
 36131 ;;		_OsAlrm_ClearOsAlarm
 36132 ;;		i1___wmul
 36133 ;; This function is called by:
 36134 ;;		_Sch_SchmIntService
 36135 ;; This function uses a non-reentrant model
 36136 ;;
 36137                           
 36138                           	psect	text176
 36139  0025C4                     __ptext176:
 36140                           	opt stack 0
 36141  0025C4                     _OsAlrm_ProcessOsAlarms:
 36142                           	opt stack 8
 36143                           
 36144                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 36145                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 36146                           
 36147                           ; BSR set to: 3
 36148                           ;incstack = 0
 36149  0025C4  0E00               	movlw	0
 36150  0025C6  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 36151  0025C8  0E00               	movlw	0
 36152  0025CA  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 36153  0025CC  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36154  0025CE  E105               	bnz	i1u1566_20
 36155  0025D0  0E14               	movlw	20
 36156  0025D2  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36157  0025D4  B0D8               	btfsc	status,0,c
 36158  0025D6  0012               	return	
 36159  0025D8  D001               	goto	i1l742
 36160  0025DA                     i1u1566_20:
 36161  0025DA  0012               	return	
 36162  0025DC                     i1l742:
 36163                           
 36164                           ;os_alarms.c: 121: {
 36165                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 36166  0025DC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36167  0025E0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36168  0025E4  0E00               	movlw	0
 36169  0025E6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36170  0025E8  0E0B               	movlw	11
 36171  0025EA  6E1B               	movwf	i1___wmul@multiplicand,c
 36172  0025EC  EC26  F032         	call	i1___wmul	;wreg free
 36173  0025F0  0E00               	movlw	low _OsAlarms
 36174  0025F2  2419               	addwf	?i1___wmul,w,c
 36175  0025F4  6ED9               	movwf	fsr2l,c
 36176  0025F6  0E06               	movlw	high _OsAlarms
 36177  0025F8  201A               	addwfc	?i1___wmul+1,w,c
 36178  0025FA  6EDA               	movwf	fsr2h,c
 36179  0025FC  04DE               	decf	postinc2,w,c
 36180  0025FE  A4D8               	btfss	status,2,c
 36181  002600  D086               	goto	i1u1570_29
 36182                           
 36183                           ;os_alarms.c: 124: {
 36184                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 36185  002602  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36186  002606  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36187  00260A  0E00               	movlw	0
 36188  00260C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36189  00260E  0E0B               	movlw	11
 36190  002610  6E1B               	movwf	i1___wmul@multiplicand,c
 36191  002612  EC26  F032         	call	i1___wmul	;wreg free
 36192  002616  0E01               	movlw	1
 36193  002618  2619               	addwf	?i1___wmul,f,c
 36194  00261A  0E00               	movlw	0
 36195  00261C  221A               	addwfc	?i1___wmul+1,f,c
 36196  00261E  0E00               	movlw	low _OsAlarms
 36197  002620  2419               	addwf	?i1___wmul,w,c
 36198  002622  6ED9               	movwf	fsr2l,c
 36199  002624  0E06               	movlw	high _OsAlarms
 36200  002626  201A               	addwfc	?i1___wmul+1,w,c
 36201  002628  6EDA               	movwf	fsr2h,c
 36202  00262A  2ADE               	incf	postinc2,f,c
 36203  00262C  0E00               	movlw	0
 36204  00262E  22DE               	addwfc	postinc2,f,c
 36205  002630  22DE               	addwfc	postinc2,f,c
 36206  002632  22DE               	addwfc	postinc2,f,c
 36207                           
 36208                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 36209  002634  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36210  002638  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36211  00263C  0E00               	movlw	0
 36212  00263E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36213  002640  0E0B               	movlw	11
 36214  002642  6E1B               	movwf	i1___wmul@multiplicand,c
 36215  002644  EC26  F032         	call	i1___wmul	;wreg free
 36216  002648  0E05               	movlw	5
 36217  00264A  2619               	addwf	?i1___wmul,f,c
 36218  00264C  0E00               	movlw	0
 36219  00264E  221A               	addwfc	?i1___wmul+1,f,c
 36220  002650  0E00               	movlw	low _OsAlarms
 36221  002652  2419               	addwf	?i1___wmul,w,c
 36222  002654  6ED9               	movwf	fsr2l,c
 36223  002656  0E06               	movlw	high _OsAlarms
 36224  002658  201A               	addwfc	?i1___wmul+1,w,c
 36225  00265A  6EDA               	movwf	fsr2h,c
 36226  00265C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36227  002660  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36228  002664  0E00               	movlw	0
 36229  002666  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36230  002668  0E0B               	movlw	11
 36231  00266A  6E1B               	movwf	i1___wmul@multiplicand,c
 36232  00266C  EC26  F032         	call	i1___wmul	;wreg free
 36233  002670  0E01               	movlw	1
 36234  002672  2619               	addwf	?i1___wmul,f,c
 36235  002674  0E00               	movlw	0
 36236  002676  221A               	addwfc	?i1___wmul+1,f,c
 36237  002678  0E00               	movlw	low _OsAlarms
 36238  00267A  2419               	addwf	?i1___wmul,w,c
 36239  00267C  6EE1               	movwf	fsr1l,c
 36240  00267E  0E06               	movlw	high _OsAlarms
 36241  002680  201A               	addwfc	?i1___wmul+1,w,c
 36242  002682  6EE2               	movwf	fsr1h,c
 36243  002684  50DE               	movf	postinc2,w,c
 36244  002686  5CE6               	subwf	postinc1,w,c
 36245  002688  50DE               	movf	postinc2,w,c
 36246  00268A  58E6               	subwfb	postinc1,w,c
 36247  00268C  50DE               	movf	postinc2,w,c
 36248  00268E  58E6               	subwfb	postinc1,w,c
 36249  002690  50DE               	movf	postinc2,w,c
 36250  002692  58E6               	subwfb	postinc1,w,c
 36251  002694  A0D8               	btfss	status,0,c
 36252  002696  D03B               	goto	i1u1570_29
 36253                           
 36254                           ;os_alarms.c: 129: {
 36255                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 36256  002698  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 36257  00269A  ECFC  F02B         	call	_OsAlrm_ClearOsAlarm
 36258                           
 36259                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 36260  00269E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36261  0026A2  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36262  0026A6  0E00               	movlw	0
 36263  0026A8  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36264  0026AA  0E0B               	movlw	11
 36265  0026AC  6E1B               	movwf	i1___wmul@multiplicand,c
 36266  0026AE  EC26  F032         	call	i1___wmul	;wreg free
 36267  0026B2  0E09               	movlw	9
 36268  0026B4  2619               	addwf	?i1___wmul,f,c
 36269  0026B6  0E00               	movlw	0
 36270  0026B8  221A               	addwfc	?i1___wmul+1,f,c
 36271  0026BA  0E00               	movlw	low _OsAlarms
 36272  0026BC  2419               	addwf	?i1___wmul,w,c
 36273  0026BE  6ED9               	movwf	fsr2l,c
 36274  0026C0  0E06               	movlw	high _OsAlarms
 36275  0026C2  201A               	addwfc	?i1___wmul+1,w,c
 36276  0026C4  6EDA               	movwf	fsr2h,c
 36277  0026C6  50DE               	movf	postinc2,w,c
 36278  0026C8  10DE               	iorwf	postinc2,w,c
 36279  0026CA  B4D8               	btfsc	status,2,c
 36280  0026CC  D020               	goto	i1u1570_29
 36281                           
 36282                           ;os_alarms.c: 134: {
 36283                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 36284  0026CE  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 36285  0026D2  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 36286  0026D6  0E00               	movlw	0
 36287  0026D8  6E1C               	movwf	i1___wmul@multiplicand+1,c
 36288  0026DA  0E0B               	movlw	11
 36289  0026DC  6E1B               	movwf	i1___wmul@multiplicand,c
 36290  0026DE  EC26  F032         	call	i1___wmul	;wreg free
 36291  0026E2  0E09               	movlw	9
 36292  0026E4  2619               	addwf	?i1___wmul,f,c
 36293  0026E6  0E00               	movlw	0
 36294  0026E8  221A               	addwfc	?i1___wmul+1,f,c
 36295  0026EA  0E00               	movlw	low _OsAlarms
 36296  0026EC  2419               	addwf	?i1___wmul,w,c
 36297  0026EE  6ED9               	movwf	fsr2l,c
 36298  0026F0  0E06               	movlw	high _OsAlarms
 36299  0026F2  201A               	addwfc	?i1___wmul+1,w,c
 36300  0026F4  6EDA               	movwf	fsr2h,c
 36301  0026F6  D801               	call	i1u1570_28
 36302  0026F8  D00A               	goto	i1u1570_29
 36303  0026FA                     i1u1570_28:
 36304  0026FA  0005               	push	
 36305  0026FC  6EFA               	movwf	pclath,c
 36306  0026FE  50DE               	movf	postinc2,w,c
 36307  002700  6EFD               	movwf	tosl,c
 36308  002702  50DE               	movf	postinc2,w,c
 36309  002704  6EFE               	movwf	tosh,c
 36310  002706  50F8               	movf	tblptru,w,c
 36311  002708  6EFF               	movwf	tosu,c
 36312  00270A  50FA               	movf	pclath,w,c
 36313  00270C  0012               	return		;indir
 36314  00270E                     i1u1570_29:
 36315  00270E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 36316  002710  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 36317  002712  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 36318  002714  E101               	bnz	i1l747
 36319  002716  D75C               	goto	L77
 36320  002718                     i1l747:
 36321  002718  0012               	return		;funcret
 36322  00271A                     __end_of_OsAlrm_ProcessOsAlarms:
 36323                           	opt stack 0
 36324                           tosu	equ	0xFFF
 36325                           tosh	equ	0xFFE
 36326                           tosl	equ	0xFFD
 36327                           pclatu	equ	0xFFB
 36328                           pclath	equ	0xFFA
 36329                           tblptru	equ	0xFF8
 36330                           tblptrh	equ	0xFF7
 36331                           tblptrl	equ	0xFF6
 36332                           tablat	equ	0xFF5
 36333                           prodh	equ	0xFF4
 36334                           prodl	equ	0xFF3
 36335                           intcon	equ	0xFF2
 36336                           intcon2	equ	0xFF1
 36337                           intcon3	equ	0xFF0
 36338                           indf0	equ	0xFEF
 36339                           postinc0	equ	0xFEE
 36340                           plusw0	equ	0xFEB
 36341                           fsr0h	equ	0xFEA
 36342                           fsr0l	equ	0xFE9
 36343                           wreg	equ	0xFE8
 36344                           indf1	equ	0xFE7
 36345                           postinc1	equ	0xFE6
 36346                           postdec1	equ	0xFE5
 36347                           plusw1	equ	0xFE3
 36348                           fsr1h	equ	0xFE2
 36349                           fsr1l	equ	0xFE1
 36350                           bsr	equ	0xFE0
 36351                           indf2	equ	0xFDF
 36352                           postinc2	equ	0xFDE
 36353                           postdec2	equ	0xFDD
 36354                           plusw2	equ	0xFDB
 36355                           fsr2h	equ	0xFDA
 36356                           fsr2l	equ	0xFD9
 36357                           status	equ	0xFD8
 36358                           
 36359 ;; *************** function i1___wmul *****************
 36360 ;; Defined at:
 36361 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 36362 ;; Parameters:    Size  Location     Type
 36363 ;;  multiplier      2   24[COMRAM] unsigned int 
 36364 ;;  multiplicand    2   26[COMRAM] unsigned int 
 36365 ;; Auto vars:     Size  Location     Type
 36366 ;;  __wmul          2   28[COMRAM] unsigned int 
 36367 ;; Return value:  Size  Location     Type
 36368 ;;                  2   24[COMRAM] unsigned int 
 36369 ;; Registers used:
 36370 ;;		wreg, status,2, status,0, prodl, prodh
 36371 ;; Tracked objects:
 36372 ;;		On entry : 0/0
 36373 ;;		On exit  : 0/0
 36374 ;;		Unchanged: 0/0
 36375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36379 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36380 ;;Total ram usage:        6 bytes
 36381 ;; Hardware stack levels used:    1
 36382 ;; Hardware stack levels required when called:    4
 36383 ;; This function calls:
 36384 ;;		Nothing
 36385 ;; This function is called by:
 36386 ;;		_OsAlrm_ProcessOsAlarms
 36387 ;; This function uses a non-reentrant model
 36388 ;;
 36389                           
 36390                           	psect	text177
 36391  00644C                     __ptext177:
 36392                           	opt stack 0
 36393  00644C                     i1___wmul:
 36394                           	opt stack 10
 36395                           
 36396                           ;incstack = 0
 36397  00644C  5019               	movf	i1___wmul@multiplier,w,c
 36398  00644E  021B               	mulwf	i1___wmul@multiplicand,c
 36399  006450  CFF3 F01D          	movff	prodl,i1___wmul@product
 36400  006454  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 36401  006458  5019               	movf	i1___wmul@multiplier,w,c
 36402  00645A  021C               	mulwf	i1___wmul@multiplicand+1,c
 36403  00645C  50F3               	movf	prodl,w,c
 36404  00645E  261E               	addwf	i1___wmul@product+1,f,c
 36405  006460  501A               	movf	i1___wmul@multiplier+1,w,c
 36406  006462  021B               	mulwf	i1___wmul@multiplicand,c
 36407  006464  50F3               	movf	prodl,w,c
 36408  006466  261E               	addwf	i1___wmul@product+1,f,c
 36409  006468  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 36410  00646C  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 36411  006470  0012               	return	
 36412  006472                     __end_ofi1___wmul:
 36413                           	opt stack 0
 36414                           tosu	equ	0xFFF
 36415                           tosh	equ	0xFFE
 36416                           tosl	equ	0xFFD
 36417                           pclatu	equ	0xFFB
 36418                           pclath	equ	0xFFA
 36419                           tblptru	equ	0xFF8
 36420                           tblptrh	equ	0xFF7
 36421                           tblptrl	equ	0xFF6
 36422                           tablat	equ	0xFF5
 36423                           prodh	equ	0xFF4
 36424                           prodl	equ	0xFF3
 36425                           intcon	equ	0xFF2
 36426                           intcon2	equ	0xFF1
 36427                           intcon3	equ	0xFF0
 36428                           indf0	equ	0xFEF
 36429                           postinc0	equ	0xFEE
 36430                           plusw0	equ	0xFEB
 36431                           fsr0h	equ	0xFEA
 36432                           fsr0l	equ	0xFE9
 36433                           wreg	equ	0xFE8
 36434                           indf1	equ	0xFE7
 36435                           postinc1	equ	0xFE6
 36436                           postdec1	equ	0xFE5
 36437                           plusw1	equ	0xFE3
 36438                           fsr1h	equ	0xFE2
 36439                           fsr1l	equ	0xFE1
 36440                           bsr	equ	0xFE0
 36441                           indf2	equ	0xFDF
 36442                           postinc2	equ	0xFDE
 36443                           postdec2	equ	0xFDD
 36444                           plusw2	equ	0xFDB
 36445                           fsr2h	equ	0xFDA
 36446                           fsr2l	equ	0xFD9
 36447                           status	equ	0xFD8
 36448                           
 36449 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 36450 ;; Defined at:
 36451 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 36452 ;; Parameters:    Size  Location     Type
 36453 ;;  OsAlarmId       1    wreg     unsigned char 
 36454 ;; Auto vars:     Size  Location     Type
 36455 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 36456 ;; Return value:  Size  Location     Type
 36457 ;;                  1    wreg      void 
 36458 ;; Registers used:
 36459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36460 ;; Tracked objects:
 36461 ;;		On entry : 0/0
 36462 ;;		On exit  : 0/0
 36463 ;;		Unchanged: 0/0
 36464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36469 ;;Total ram usage:        1 bytes
 36470 ;; Hardware stack levels used:    1
 36471 ;; Hardware stack levels required when called:    4
 36472 ;; This function calls:
 36473 ;;		Nothing
 36474 ;; This function is called by:
 36475 ;;		_OsAlrm_ProcessOsAlarms
 36476 ;; This function uses a non-reentrant model
 36477 ;;
 36478                           
 36479                           	psect	text178
 36480  0057F8                     __ptext178:
 36481                           	opt stack 0
 36482  0057F8                     _OsAlrm_ClearOsAlarm:
 36483                           	opt stack 10
 36484                           
 36485                           ;incstack = 0
 36486                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 36487  0057F8  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 36488                           
 36489                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 36490  0057FA  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36491  0057FC  0D0B               	mullw	11
 36492  0057FE  0E00               	movlw	low _OsAlarms
 36493  005800  24F3               	addwf	prodl,w,c
 36494  005802  6ED9               	movwf	fsr2l,c
 36495  005804  0E06               	movlw	high _OsAlarms
 36496  005806  20F4               	addwfc	prodh,w,c
 36497  005808  6EDA               	movwf	fsr2h,c
 36498  00580A  0E00               	movlw	0
 36499  00580C  6EDF               	movwf	indf2,c
 36500                           
 36501                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 36502  00580E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36503  005810  0D0B               	mullw	11
 36504  005812  0E01               	movlw	1
 36505  005814  26F3               	addwf	prodl,f,c
 36506  005816  0E00               	movlw	0
 36507  005818  22F4               	addwfc	prodh,f,c
 36508  00581A  0E00               	movlw	low _OsAlarms
 36509  00581C  24F3               	addwf	prodl,w,c
 36510  00581E  6ED9               	movwf	fsr2l,c
 36511  005820  0E06               	movlw	high _OsAlarms
 36512  005822  20F4               	addwfc	prodh,w,c
 36513  005824  6EDA               	movwf	fsr2h,c
 36514  005826  6ADE               	clrf	postinc2,c
 36515  005828  6ADE               	clrf	postinc2,c
 36516  00582A  6ADE               	clrf	postinc2,c
 36517  00582C  6ADD               	clrf	postdec2,c
 36518                           
 36519                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 36520  00582E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 36521  005830  0D0B               	mullw	11
 36522  005832  0E05               	movlw	5
 36523  005834  26F3               	addwf	prodl,f,c
 36524  005836  0E00               	movlw	0
 36525  005838  22F4               	addwfc	prodh,f,c
 36526  00583A  0E00               	movlw	low _OsAlarms
 36527  00583C  24F3               	addwf	prodl,w,c
 36528  00583E  6ED9               	movwf	fsr2l,c
 36529  005840  0E06               	movlw	high _OsAlarms
 36530  005842  20F4               	addwfc	prodh,w,c
 36531  005844  6EDA               	movwf	fsr2h,c
 36532  005846  6ADE               	clrf	postinc2,c
 36533  005848  6ADE               	clrf	postinc2,c
 36534  00584A  6ADE               	clrf	postinc2,c
 36535  00584C  6ADD               	clrf	postdec2,c
 36536  00584E  0012               	return		;funcret
 36537  005850                     __end_of_OsAlrm_ClearOsAlarm:
 36538                           	opt stack 0
 36539                           tosu	equ	0xFFF
 36540                           tosh	equ	0xFFE
 36541                           tosl	equ	0xFFD
 36542                           pclatu	equ	0xFFB
 36543                           pclath	equ	0xFFA
 36544                           tblptru	equ	0xFF8
 36545                           tblptrh	equ	0xFF7
 36546                           tblptrl	equ	0xFF6
 36547                           tablat	equ	0xFF5
 36548                           prodh	equ	0xFF4
 36549                           prodl	equ	0xFF3
 36550                           intcon	equ	0xFF2
 36551                           intcon2	equ	0xFF1
 36552                           intcon3	equ	0xFF0
 36553                           indf0	equ	0xFEF
 36554                           postinc0	equ	0xFEE
 36555                           plusw0	equ	0xFEB
 36556                           fsr0h	equ	0xFEA
 36557                           fsr0l	equ	0xFE9
 36558                           wreg	equ	0xFE8
 36559                           indf1	equ	0xFE7
 36560                           postinc1	equ	0xFE6
 36561                           postdec1	equ	0xFE5
 36562                           plusw1	equ	0xFE3
 36563                           fsr1h	equ	0xFE2
 36564                           fsr1l	equ	0xFE1
 36565                           bsr	equ	0xFE0
 36566                           indf2	equ	0xFDF
 36567                           postinc2	equ	0xFDE
 36568                           postdec2	equ	0xFDD
 36569                           plusw2	equ	0xFDB
 36570                           fsr2h	equ	0xFDA
 36571                           fsr2l	equ	0xFD9
 36572                           status	equ	0xFD8
 36573                           
 36574 ;; *************** function _I2cDummyTx *****************
 36575 ;; Defined at:
 36576 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36577 ;; Parameters:    Size  Location     Type
 36578 ;;		None
 36579 ;; Auto vars:     Size  Location     Type
 36580 ;;		None
 36581 ;; Return value:  Size  Location     Type
 36582 ;;                  1    wreg      void 
 36583 ;; Registers used:
 36584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36585 ;; Tracked objects:
 36586 ;;		On entry : 0/0
 36587 ;;		On exit  : 0/0
 36588 ;;		Unchanged: 0/0
 36589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36594 ;;Total ram usage:        0 bytes
 36595 ;; Hardware stack levels used:    1
 36596 ;; Hardware stack levels required when called:    6
 36597 ;; This function calls:
 36598 ;;		i1_I2cSlv_SendI2cMsg
 36599 ;; This function is called by:
 36600 ;;		_I2cSlv_MainTask
 36601 ;;		_OsAlrm_ProcessOsAlarms
 36602 ;; This function uses a non-reentrant model
 36603 ;;
 36604                           
 36605                           	psect	text179
 36606  006686                     __ptext179:
 36607                           	opt stack 0
 36608  006686                     _I2cDummyTx:
 36609                           	opt stack 8
 36610                           
 36611                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 36612                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 36613                           
 36614                           ;incstack = 0
 36615  006686  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 36616  006688  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 36617  00668A  0E01               	movlw	high I2cDummyTx@DummyBuffer
 36618  00668C  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 36619  00668E  0E00               	movlw	0
 36620  006690  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 36621  006692  0E01               	movlw	1
 36622  006694  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 36623  006696  EC92  F030         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 36624                           
 36625                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 36626  00669A  0E01               	movlw	1
 36627  00669C  0101               	movlb	1	; () banked
 36628  00669E  6FE7               	movwf	_I2cBusStatus& (0+255),b
 36629                           
 36630                           ; BSR set to: 1
 36631  0066A0  0012               	return		;funcret
 36632  0066A2                     __end_of_I2cDummyTx:
 36633                           	opt stack 0
 36634                           tosu	equ	0xFFF
 36635                           tosh	equ	0xFFE
 36636                           tosl	equ	0xFFD
 36637                           pclatu	equ	0xFFB
 36638                           pclath	equ	0xFFA
 36639                           tblptru	equ	0xFF8
 36640                           tblptrh	equ	0xFF7
 36641                           tblptrl	equ	0xFF6
 36642                           tablat	equ	0xFF5
 36643                           prodh	equ	0xFF4
 36644                           prodl	equ	0xFF3
 36645                           intcon	equ	0xFF2
 36646                           intcon2	equ	0xFF1
 36647                           intcon3	equ	0xFF0
 36648                           indf0	equ	0xFEF
 36649                           postinc0	equ	0xFEE
 36650                           plusw0	equ	0xFEB
 36651                           fsr0h	equ	0xFEA
 36652                           fsr0l	equ	0xFE9
 36653                           wreg	equ	0xFE8
 36654                           indf1	equ	0xFE7
 36655                           postinc1	equ	0xFE6
 36656                           postdec1	equ	0xFE5
 36657                           plusw1	equ	0xFE3
 36658                           fsr1h	equ	0xFE2
 36659                           fsr1l	equ	0xFE1
 36660                           bsr	equ	0xFE0
 36661                           indf2	equ	0xFDF
 36662                           postinc2	equ	0xFDE
 36663                           postdec2	equ	0xFDD
 36664                           plusw2	equ	0xFDB
 36665                           fsr2h	equ	0xFDA
 36666                           fsr2l	equ	0xFD9
 36667                           status	equ	0xFD8
 36668                           
 36669 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 36670 ;; Defined at:
 36671 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 36672 ;; Parameters:    Size  Location     Type
 36673 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 36674 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 36675 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 36676 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 36677 ;;  DataLenght      1   30[COMRAM] unsigned char 
 36678 ;; Auto vars:     Size  Location     Type
 36679 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 36680 ;; Return value:  Size  Location     Type
 36681 ;;                  1    wreg      unsigned char 
 36682 ;; Registers used:
 36683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36684 ;; Tracked objects:
 36685 ;;		On entry : 0/0
 36686 ;;		On exit  : 0/0
 36687 ;;		Unchanged: 0/0
 36688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36692 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36693 ;;Total ram usage:        5 bytes
 36694 ;; Hardware stack levels used:    1
 36695 ;; Hardware stack levels required when called:    5
 36696 ;; This function calls:
 36697 ;;		i1_GenerateEvt
 36698 ;; This function is called by:
 36699 ;;		_I2cDummyTx
 36700 ;; This function uses a non-reentrant model
 36701 ;;
 36702                           
 36703                           	psect	text180
 36704  006124                     __ptext180:
 36705                           	opt stack 0
 36706  006124                     i1_I2cSlv_SendI2cMsg:
 36707                           	opt stack 8
 36708                           
 36709                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 36710                           
 36711                           ; BSR set to: 1
 36712                           ;incstack = 0
 36713  006124  0E00               	movlw	0
 36714  006126  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36715                           
 36716                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 36717  006128  0100               	movlb	0	; () banked
 36718  00612A  05CD               	decf	_I2cComSts& (0+255),w,b
 36719  00612C  B4D8               	btfsc	status,2,c
 36720  00612E  D014               	goto	i1l1412
 36721                           
 36722                           ; BSR set to: 0
 36723                           ;i2c_slv.c: 257: {
 36724                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 36725  006130  C01E  F39E         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 36726                           
 36727                           ; BSR set to: 0
 36728                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 36729  006134  0E00               	movlw	0
 36730  006136  0103               	movlb	3	; () banked
 36731  006138  6F9F               	movwf	(_I2cTxPacket+1)& (0+255),b
 36732                           
 36733                           ; BSR set to: 3
 36734                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 36735  00613A  C01F  F3A2         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 36736                           
 36737                           ; BSR set to: 3
 36738                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 36739  00613E  C01C  F3A0         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 36740  006142  C01D  F3A1         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 36741                           
 36742                           ; BSR set to: 3
 36743                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 36744  006146  0ED7               	movlw	low _I2cWriteDataEvt
 36745  006148  6E19               	movwf	i1GenerateEvt@Event,c
 36746  00614A  0E00               	movlw	high _I2cWriteDataEvt
 36747  00614C  6E1A               	movwf	i1GenerateEvt@Event+1,c
 36748  00614E  ECCB  F033         	call	i1_GenerateEvt	;wreg free
 36749                           
 36750                           ;i2c_slv.c: 267: TxSts = 1u;
 36751  006152  0E01               	movlw	1
 36752  006154  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36753                           
 36754                           ;i2c_slv.c: 268: }
 36755  006156  0012               	return	
 36756  006158                     i1l1412:
 36757                           
 36758                           ;i2c_slv.c: 269: else
 36759                           ;i2c_slv.c: 270: {
 36760                           ;i2c_slv.c: 272: TxSts = 0u;
 36761  006158  0E00               	movlw	0
 36762  00615A  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 36763  00615C  0012               	return	
 36764  00615E                     __end_ofi1_I2cSlv_SendI2cMsg:
 36765                           	opt stack 0
 36766                           tosu	equ	0xFFF
 36767                           tosh	equ	0xFFE
 36768                           tosl	equ	0xFFD
 36769                           pclatu	equ	0xFFB
 36770                           pclath	equ	0xFFA
 36771                           tblptru	equ	0xFF8
 36772                           tblptrh	equ	0xFF7
 36773                           tblptrl	equ	0xFF6
 36774                           tablat	equ	0xFF5
 36775                           prodh	equ	0xFF4
 36776                           prodl	equ	0xFF3
 36777                           intcon	equ	0xFF2
 36778                           intcon2	equ	0xFF1
 36779                           intcon3	equ	0xFF0
 36780                           indf0	equ	0xFEF
 36781                           postinc0	equ	0xFEE
 36782                           plusw0	equ	0xFEB
 36783                           fsr0h	equ	0xFEA
 36784                           fsr0l	equ	0xFE9
 36785                           wreg	equ	0xFE8
 36786                           indf1	equ	0xFE7
 36787                           postinc1	equ	0xFE6
 36788                           postdec1	equ	0xFE5
 36789                           plusw1	equ	0xFE3
 36790                           fsr1h	equ	0xFE2
 36791                           fsr1l	equ	0xFE1
 36792                           bsr	equ	0xFE0
 36793                           indf2	equ	0xFDF
 36794                           postinc2	equ	0xFDE
 36795                           postdec2	equ	0xFDD
 36796                           plusw2	equ	0xFDB
 36797                           fsr2h	equ	0xFDA
 36798                           fsr2l	equ	0xFD9
 36799                           status	equ	0xFD8
 36800                           
 36801 ;; *************** function i1_GenerateEvt *****************
 36802 ;; Defined at:
 36803 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36804 ;; Parameters:    Size  Location     Type
 36805 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 36806 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36807 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36808 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36809 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36810 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36811 ;; Auto vars:     Size  Location     Type
 36812 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 36813 ;; Return value:  Size  Location     Type
 36814 ;;                  1    wreg      enum E7699
 36815 ;; Registers used:
 36816 ;;		wreg, fsr2l, fsr2h, status,2
 36817 ;; Tracked objects:
 36818 ;;		On entry : 0/0
 36819 ;;		On exit  : 0/0
 36820 ;;		Unchanged: 0/0
 36821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36826 ;;Total ram usage:        3 bytes
 36827 ;; Hardware stack levels used:    1
 36828 ;; Hardware stack levels required when called:    4
 36829 ;; This function calls:
 36830 ;;		Nothing
 36831 ;; This function is called by:
 36832 ;;		i1_I2cSlv_SendI2cMsg
 36833 ;; This function uses a non-reentrant model
 36834 ;;
 36835                           
 36836                           	psect	text181
 36837  006796                     __ptext181:
 36838                           	opt stack 0
 36839  006796                     i1_GenerateEvt:
 36840                           	opt stack 8
 36841                           
 36842                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36843                           
 36844                           ;incstack = 0
 36845  006796  0E00               	movlw	0
 36846  006798  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36847                           
 36848                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36849  00679A  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 36850  00679E  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 36851  0067A2  0E02               	movlw	2
 36852  0067A4  6EDF               	movwf	indf2,c
 36853                           
 36854                           ;os_ser.c: 83: EventStatus = EventSent;
 36855  0067A6  0E02               	movlw	2
 36856  0067A8  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 36857  0067AA  0012               	return	
 36858  0067AC                     __end_ofi1_GenerateEvt:
 36859                           	opt stack 0
 36860                           tosu	equ	0xFFF
 36861                           tosh	equ	0xFFE
 36862                           tosl	equ	0xFFD
 36863                           pclatu	equ	0xFFB
 36864                           pclath	equ	0xFFA
 36865                           tblptru	equ	0xFF8
 36866                           tblptrh	equ	0xFF7
 36867                           tblptrl	equ	0xFF6
 36868                           tablat	equ	0xFF5
 36869                           prodh	equ	0xFF4
 36870                           prodl	equ	0xFF3
 36871                           intcon	equ	0xFF2
 36872                           intcon2	equ	0xFF1
 36873                           intcon3	equ	0xFF0
 36874                           indf0	equ	0xFEF
 36875                           postinc0	equ	0xFEE
 36876                           plusw0	equ	0xFEB
 36877                           fsr0h	equ	0xFEA
 36878                           fsr0l	equ	0xFE9
 36879                           wreg	equ	0xFE8
 36880                           indf1	equ	0xFE7
 36881                           postinc1	equ	0xFE6
 36882                           postdec1	equ	0xFE5
 36883                           plusw1	equ	0xFE3
 36884                           fsr1h	equ	0xFE2
 36885                           fsr1l	equ	0xFE1
 36886                           bsr	equ	0xFE0
 36887                           indf2	equ	0xFDF
 36888                           postinc2	equ	0xFDE
 36889                           postdec2	equ	0xFDD
 36890                           plusw2	equ	0xFDB
 36891                           fsr2h	equ	0xFDA
 36892                           fsr2l	equ	0xFD9
 36893                           status	equ	0xFD8
 36894                           
 36895 ;; *************** function _HighPriorityIsr *****************
 36896 ;; Defined at:
 36897 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36898 ;; Parameters:    Size  Location     Type
 36899 ;;		None
 36900 ;; Auto vars:     Size  Location     Type
 36901 ;;		None
 36902 ;; Return value:  Size  Location     Type
 36903 ;;                  1    wreg      void 
 36904 ;; Registers used:
 36905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 36906 ;; Tracked objects:
 36907 ;;		On entry : 0/0
 36908 ;;		On exit  : 0/0
 36909 ;;		Unchanged: 0/0
 36910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36913 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36914 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36915 ;;Total ram usage:       18 bytes
 36916 ;; Hardware stack levels used:    1
 36917 ;; Hardware stack levels required when called:    3
 36918 ;; This function calls:
 36919 ;;		_Mcu_Int0Isr
 36920 ;;		_Mcu_Int1Isr
 36921 ;;		_Rtcc_RtcIsr
 36922 ;;		_Uart_Uart1RxIsr
 36923 ;; This function is called by:
 36924 ;;		Interrupt level 2
 36925 ;; This function uses a non-reentrant model
 36926 ;;
 36927                           
 36928                           	psect	intcode
 36929  000008                     __pintcode:
 36930                           	opt stack 0
 36931  000008                     _HighPriorityIsr:
 36932                           	opt stack 8
 36933                           
 36934                           ;incstack = 0
 36935  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 36936  00000A  EF74  F022         	goto	int_func
 36937                           tosu	equ	0xFFF
 36938                           tosh	equ	0xFFE
 36939                           tosl	equ	0xFFD
 36940                           pclatu	equ	0xFFB
 36941                           pclath	equ	0xFFA
 36942                           tblptru	equ	0xFF8
 36943                           tblptrh	equ	0xFF7
 36944                           tblptrl	equ	0xFF6
 36945                           tablat	equ	0xFF5
 36946                           prodh	equ	0xFF4
 36947                           prodl	equ	0xFF3
 36948                           intcon	equ	0xFF2
 36949                           intcon2	equ	0xFF1
 36950                           intcon3	equ	0xFF0
 36951                           indf0	equ	0xFEF
 36952                           postinc0	equ	0xFEE
 36953                           plusw0	equ	0xFEB
 36954                           fsr0h	equ	0xFEA
 36955                           fsr0l	equ	0xFE9
 36956                           wreg	equ	0xFE8
 36957                           indf1	equ	0xFE7
 36958                           postinc1	equ	0xFE6
 36959                           postdec1	equ	0xFE5
 36960                           plusw1	equ	0xFE3
 36961                           fsr1h	equ	0xFE2
 36962                           fsr1l	equ	0xFE1
 36963                           bsr	equ	0xFE0
 36964                           indf2	equ	0xFDF
 36965                           postinc2	equ	0xFDE
 36966                           postdec2	equ	0xFDD
 36967                           plusw2	equ	0xFDB
 36968                           fsr2h	equ	0xFDA
 36969                           fsr2l	equ	0xFD9
 36970                           status	equ	0xFD8
 36971                           
 36972                           	psect	intcode_body
 36973  0044E8                     __pintcode_body:
 36974                           	opt stack 8
 36975  0044E8                     int_func:
 36976                           	opt stack 8
 36977  0044E8  CFFA F007          	movff	pclath,??_HighPriorityIsr
 36978  0044EC  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 36979  0044F0  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 36980  0044F4  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 36981  0044F8  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 36982  0044FC  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 36983  004500  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 36984  004504  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 36985  004508  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 36986  00450C  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 36987  004510  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 36988  004514  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 36989  004518  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 36990  00451C  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 36991  004520  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 36992  004524  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 36993  004528  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 36994  00452C  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 36995                           
 36996                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 36997  004530  B2F2               	btfsc	intcon,1,c	;volatile
 36998                           
 36999                           ;irq.c: 158: {
 37000                           ;irq.c: 160: Mcu_Int0Isr();
 37001  004532  EC77  F034         	call	_Mcu_Int0Isr	;wreg free
 37002                           
 37003                           ;irq.c: 161: }
 37004                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 37005  004536  B0F0               	btfsc	intcon3,0,c	;volatile
 37006                           
 37007                           ;irq.c: 167: {
 37008                           ;irq.c: 169: Mcu_Int1Isr();
 37009  004538  EC75  F034         	call	_Mcu_Int1Isr	;wreg free
 37010                           
 37011                           ;irq.c: 170: }
 37012                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 37013  00453C  B0A4               	btfsc	4004,0,c	;volatile
 37014                           
 37015                           ;irq.c: 203: {
 37016                           ;irq.c: 205: Rtcc_RtcIsr();
 37017  00453E  EC73  F034         	call	_Rtcc_RtcIsr	;wreg free
 37018                           
 37019                           ;irq.c: 206: }
 37020                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 37021  004542  BA9E               	btfsc	3998,5,c	;volatile
 37022                           
 37023                           ;irq.c: 212: {
 37024                           ;irq.c: 214: Uart_Uart1RxIsr();
 37025  004544  EC26  F034         	call	_Uart_Uart1RxIsr	;wreg free
 37026  004548  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 37027  00454C  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 37028  004550  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 37029  004554  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 37030  004558  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 37031  00455C  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 37032  004560  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 37033  004564  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 37034  004568  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 37035  00456C  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 37036  004570  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 37037  004574  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 37038  004578  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 37039  00457C  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 37040  004580  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 37041  004584  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 37042  004588  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 37043  00458C  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 37044  004590  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 37045  004592  0011               	retfie		f
 37046  004594                     __end_of_HighPriorityIsr:
 37047                           	opt stack 0
 37048                           tosu	equ	0xFFF
 37049                           tosh	equ	0xFFE
 37050                           tosl	equ	0xFFD
 37051                           pclatu	equ	0xFFB
 37052                           pclath	equ	0xFFA
 37053                           tblptru	equ	0xFF8
 37054                           tblptrh	equ	0xFF7
 37055                           tblptrl	equ	0xFF6
 37056                           tablat	equ	0xFF5
 37057                           prodh	equ	0xFF4
 37058                           prodl	equ	0xFF3
 37059                           intcon	equ	0xFF2
 37060                           intcon2	equ	0xFF1
 37061                           intcon3	equ	0xFF0
 37062                           indf0	equ	0xFEF
 37063                           postinc0	equ	0xFEE
 37064                           plusw0	equ	0xFEB
 37065                           fsr0h	equ	0xFEA
 37066                           fsr0l	equ	0xFE9
 37067                           wreg	equ	0xFE8
 37068                           indf1	equ	0xFE7
 37069                           postinc1	equ	0xFE6
 37070                           postdec1	equ	0xFE5
 37071                           plusw1	equ	0xFE3
 37072                           fsr1h	equ	0xFE2
 37073                           fsr1l	equ	0xFE1
 37074                           bsr	equ	0xFE0
 37075                           indf2	equ	0xFDF
 37076                           postinc2	equ	0xFDE
 37077                           postdec2	equ	0xFDD
 37078                           plusw2	equ	0xFDB
 37079                           fsr2h	equ	0xFDA
 37080                           fsr2l	equ	0xFD9
 37081                           status	equ	0xFD8
 37082                           
 37083 ;; *************** function _Uart_Uart1RxIsr *****************
 37084 ;; Defined at:
 37085 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 37086 ;; Parameters:    Size  Location     Type
 37087 ;;		None
 37088 ;; Auto vars:     Size  Location     Type
 37089 ;;		None
 37090 ;; Return value:  Size  Location     Type
 37091 ;;                  1    wreg      void 
 37092 ;; Registers used:
 37093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37094 ;; Tracked objects:
 37095 ;;		On entry : 0/0
 37096 ;;		On exit  : 0/0
 37097 ;;		Unchanged: 0/0
 37098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37103 ;;Total ram usage:        0 bytes
 37104 ;; Hardware stack levels used:    1
 37105 ;; Hardware stack levels required when called:    2
 37106 ;; This function calls:
 37107 ;;		_Uart_MdmGsmGprsReadService
 37108 ;; This function is called by:
 37109 ;;		_HighPriorityIsr
 37110 ;; This function uses a non-reentrant model
 37111 ;;
 37112                           
 37113                           	psect	text183
 37114  00684C                     __ptext183:
 37115                           	opt stack 0
 37116  00684C                     _Uart_Uart1RxIsr:
 37117                           	opt stack 8
 37118                           
 37119                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 37120                           ;uart_drv.c: 590: UartRxData = RCREG1;
 37121                           
 37122                           ;incstack = 0
 37123  00684C  CFAF F02B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 37124                           
 37125                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 37126  006850  C02B  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 37127  006854  0E01               	movlw	1
 37128  006856  ECB9  F01E         	call	_Uart_MdmGsmGprsReadService
 37129  00685A  0012               	return		;funcret
 37130  00685C                     __end_of_Uart_Uart1RxIsr:
 37131                           	opt stack 0
 37132                           tosu	equ	0xFFF
 37133                           tosh	equ	0xFFE
 37134                           tosl	equ	0xFFD
 37135                           pclatu	equ	0xFFB
 37136                           pclath	equ	0xFFA
 37137                           tblptru	equ	0xFF8
 37138                           tblptrh	equ	0xFF7
 37139                           tblptrl	equ	0xFF6
 37140                           tablat	equ	0xFF5
 37141                           prodh	equ	0xFF4
 37142                           prodl	equ	0xFF3
 37143                           intcon	equ	0xFF2
 37144                           intcon2	equ	0xFF1
 37145                           intcon3	equ	0xFF0
 37146                           indf0	equ	0xFEF
 37147                           postinc0	equ	0xFEE
 37148                           plusw0	equ	0xFEB
 37149                           fsr0h	equ	0xFEA
 37150                           fsr0l	equ	0xFE9
 37151                           wreg	equ	0xFE8
 37152                           indf1	equ	0xFE7
 37153                           postinc1	equ	0xFE6
 37154                           postdec1	equ	0xFE5
 37155                           plusw1	equ	0xFE3
 37156                           fsr1h	equ	0xFE2
 37157                           fsr1l	equ	0xFE1
 37158                           bsr	equ	0xFE0
 37159                           indf2	equ	0xFDF
 37160                           postinc2	equ	0xFDE
 37161                           postdec2	equ	0xFDD
 37162                           plusw2	equ	0xFDB
 37163                           fsr2h	equ	0xFDA
 37164                           fsr2l	equ	0xFD9
 37165                           status	equ	0xFD8
 37166                           
 37167 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 37168 ;; Defined at:
 37169 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 37170 ;; Parameters:    Size  Location     Type
 37171 ;;  Module          1    wreg     unsigned char 
 37172 ;;  UartData        1    3[COMRAM] unsigned char 
 37173 ;; Auto vars:     Size  Location     Type
 37174 ;;  Module          1    0[COMRAM] unsigned char 
 37175 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 37176 ;; Return value:  Size  Location     Type
 37177 ;;                  1    wreg      void 
 37178 ;; Registers used:
 37179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37180 ;; Tracked objects:
 37181 ;;		On entry : 0/0
 37182 ;;		On exit  : 0/0
 37183 ;;		Unchanged: 0/0
 37184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37185 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37188 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37189 ;;Total ram usage:        3 bytes
 37190 ;; Hardware stack levels used:    1
 37191 ;; Hardware stack levels required when called:    1
 37192 ;; This function calls:
 37193 ;;		i2_GenerateEvt
 37194 ;; This function is called by:
 37195 ;;		_Uart_Uart1RxIsr
 37196 ;; This function uses a non-reentrant model
 37197 ;;
 37198                           
 37199                           	psect	text184
 37200  003D72                     __ptext184:
 37201                           	opt stack 0
 37202  003D72                     _Uart_MdmGsmGprsReadService:
 37203                           	opt stack 8
 37204                           
 37205                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 37206                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 37207                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 37208                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 37209                           
 37210                           ;incstack = 0
 37211  003D72  0E00               	movlw	0
 37212  003D74  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37213  003D76  0E00               	movlw	0
 37214  003D78  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37215                           
 37216                           ;uart_drv.c: 383: switch (RxState)
 37217  003D7A  D058               	goto	i2l680
 37218  003D7C                     
 37219                           ;uart_drv.c: 387: if (UartData == '\r')
 37220  003D7C  0E0D               	movlw	13
 37221  003D7E  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37222  003D80  A4D8               	btfss	status,2,c
 37223  003D82  D003               	goto	i2l682
 37224                           
 37225                           ;uart_drv.c: 388: {
 37226                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 37227  003D84  0E01               	movlw	1
 37228  003D86  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37229                           
 37230                           ;uart_drv.c: 391: }
 37231  003D88  0012               	return	
 37232  003D8A                     i2l682:
 37233                           
 37234                           ;uart_drv.c: 392: else
 37235                           ;uart_drv.c: 393: {
 37236                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 37237  003D8A  0E90               	movlw	144
 37238  003D8C  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37239  003D8E  0E01               	movlw	1
 37240  003D90  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37241  003D92  B0D8               	btfsc	status,0,c
 37242  003D94  0012               	return	
 37243                           
 37244                           ;uart_drv.c: 395: {
 37245                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 37246  003D96  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37247  003D98  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37248  003D9A  6ED9               	movwf	fsr2l,c
 37249  003D9C  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37250  003D9E  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37251  003DA0  6EDA               	movwf	fsr2h,c
 37252  003DA2  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 37253                           
 37254                           ;uart_drv.c: 399: RxCounter++;
 37255  003DA6  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 37256  003DA8  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 37257                           
 37258                           ;uart_drv.c: 400: }
 37259                           ;uart_drv.c: 401: }
 37260                           ;uart_drv.c: 402: break;
 37261  003DAA  0012               	return	
 37262  003DAC                     
 37263                           ;uart_drv.c: 406: if (UartData == '\n')
 37264  003DAC  0E0A               	movlw	10
 37265  003DAE  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 37266  003DB0  A4D8               	btfss	status,2,c
 37267  003DB2  D035               	goto	i2l688
 37268                           
 37269                           ;uart_drv.c: 407: {
 37270                           ;uart_drv.c: 409: if (RxCounter > 0)
 37271  003DB4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37272  003DB6  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37273  003DB8  B4D8               	btfsc	status,2,c
 37274  003DBA  D031               	goto	i2l688
 37275                           
 37276                           ;uart_drv.c: 410: {
 37277                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 37278  003DBC  0E00               	movlw	0
 37279  003DBE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 37280  003DC0  0E00               	movlw	0
 37281  003DC2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 37282  003DC4  D010               	goto	i2l689
 37283  003DC6                     
 37284                           ;uart_drv.c: 413: {
 37285                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 37286  003DC6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 37287  003DC8  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37288  003DCA  6ED9               	movwf	fsr2l,c
 37289  003DCC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 37290  003DCE  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37291  003DD0  6EDA               	movwf	fsr2h,c
 37292  003DD2  0E58               	movlw	low _RxBuffer
 37293  003DD4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37294  003DD6  6EE1               	movwf	fsr1l,c
 37295  003DD8  0E0C               	movlw	high _RxBuffer
 37296  003DDA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37297  003DDC  6EE2               	movwf	fsr1h,c
 37298  003DDE  CFDF FFE7          	movff	indf2,indf1
 37299  003DE2  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 37300  003DE4  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 37301  003DE6                     i2l689:
 37302  003DE6  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 37303  003DE8  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 37304  003DEA  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 37305  003DEC  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 37306  003DEE  A0D8               	btfss	status,0,c
 37307  003DF0  D7EA               	goto	i2l690
 37308                           
 37309                           ;uart_drv.c: 415: }
 37310                           ;uart_drv.c: 417: RxLen = RxCounter;
 37311  003DF2  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 37312  003DF6  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 37313                           
 37314                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 37315  003DFA  0E3C               	movlw	low _NewStringReceived
 37316  003DFC  6E01               	movwf	i2GenerateEvt@Event,c
 37317  003DFE  0E00               	movlw	high _NewStringReceived
 37318  003E00  6E02               	movwf	i2GenerateEvt@Event+1,c
 37319  003E02  ECD6  F033         	call	i2_GenerateEvt	;wreg free
 37320                           
 37321                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 37322  003E06  0E3B               	movlw	low _NewMdmEvtParserRequest
 37323  003E08  6E01               	movwf	i2GenerateEvt@Event,c
 37324  003E0A  0E00               	movlw	high _NewMdmEvtParserRequest
 37325  003E0C  6E02               	movwf	i2GenerateEvt@Event+1,c
 37326  003E0E  ECD6  F033         	call	i2_GenerateEvt	;wreg free
 37327                           
 37328                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 37329  003E12  0E3A               	movlw	low _NewStringMdmTerminal
 37330  003E14  6E01               	movwf	i2GenerateEvt@Event,c
 37331  003E16  0E00               	movlw	high _NewStringMdmTerminal
 37332  003E18  6E02               	movwf	i2GenerateEvt@Event+1,c
 37333  003E1A  ECD6  F033         	call	i2_GenerateEvt	;wreg free
 37334  003E1E                     i2l688:
 37335                           
 37336                           ;uart_drv.c: 427: }
 37337                           ;uart_drv.c: 429: RxState = ReadData;
 37338                           
 37339                           ;uart_drv.c: 424: else
 37340                           ;uart_drv.c: 425: {
 37341                           
 37342                           ;uart_drv.c: 422: }
 37343                           ;uart_drv.c: 423: }
 37344  003E1E  0E00               	movlw	0
 37345  003E20  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 37346                           
 37347                           ;uart_drv.c: 431: RxCounter = 0;
 37348  003E22  0E00               	movlw	0
 37349  003E24  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 37350  003E26  0E00               	movlw	0
 37351  003E28  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 37352                           
 37353                           ;uart_drv.c: 436: }
 37354                           
 37355                           ;uart_drv.c: 435: break;
 37356                           
 37357                           ;uart_drv.c: 434: default:
 37358                           
 37359                           ;uart_drv.c: 432: break;
 37360  003E2A  0012               	return	
 37361  003E2C                     i2l680:
 37362  003E2C  502C               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 37363                           
 37364                           ; Switch size 1, requested type "space"
 37365                           ; Number of cases is 2, Range of values is 0 to 1
 37366                           ; switch strategies available:
 37367                           ; Name         Instructions Cycles
 37368                           ; simple_byte            7     4 (average)
 37369                           ;	Chosen strategy is simple_byte
 37370  003E2E  0A00               	xorlw	0	; case 0
 37371  003E30  B4D8               	btfsc	status,2,c
 37372  003E32  D7A4               	goto	i2l681
 37373  003E34  0A01               	xorlw	1	; case 1
 37374  003E36  A4D8               	btfss	status,2,c
 37375  003E38  0012               	return	
 37376  003E3A  D7B8               	goto	i2l686
 37377  003E3C                     __end_of_Uart_MdmGsmGprsReadService:
 37378                           	opt stack 0
 37379                           tosu	equ	0xFFF
 37380                           tosh	equ	0xFFE
 37381                           tosl	equ	0xFFD
 37382                           pclatu	equ	0xFFB
 37383                           pclath	equ	0xFFA
 37384                           tblptru	equ	0xFF8
 37385                           tblptrh	equ	0xFF7
 37386                           tblptrl	equ	0xFF6
 37387                           tablat	equ	0xFF5
 37388                           prodh	equ	0xFF4
 37389                           prodl	equ	0xFF3
 37390                           intcon	equ	0xFF2
 37391                           intcon2	equ	0xFF1
 37392                           intcon3	equ	0xFF0
 37393                           indf0	equ	0xFEF
 37394                           postinc0	equ	0xFEE
 37395                           plusw0	equ	0xFEB
 37396                           fsr0h	equ	0xFEA
 37397                           fsr0l	equ	0xFE9
 37398                           wreg	equ	0xFE8
 37399                           indf1	equ	0xFE7
 37400                           postinc1	equ	0xFE6
 37401                           postdec1	equ	0xFE5
 37402                           plusw1	equ	0xFE3
 37403                           fsr1h	equ	0xFE2
 37404                           fsr1l	equ	0xFE1
 37405                           bsr	equ	0xFE0
 37406                           indf2	equ	0xFDF
 37407                           postinc2	equ	0xFDE
 37408                           postdec2	equ	0xFDD
 37409                           plusw2	equ	0xFDB
 37410                           fsr2h	equ	0xFDA
 37411                           fsr2l	equ	0xFD9
 37412                           status	equ	0xFD8
 37413                           
 37414 ;; *************** function i2_GenerateEvt *****************
 37415 ;; Defined at:
 37416 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37417 ;; Parameters:    Size  Location     Type
 37418 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 37419 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37420 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37421 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37422 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37423 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37424 ;; Auto vars:     Size  Location     Type
 37425 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 37426 ;; Return value:  Size  Location     Type
 37427 ;;                  1    wreg      enum E7699
 37428 ;; Registers used:
 37429 ;;		wreg, fsr2l, fsr2h, status,2
 37430 ;; Tracked objects:
 37431 ;;		On entry : 0/0
 37432 ;;		On exit  : 0/0
 37433 ;;		Unchanged: 0/0
 37434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37439 ;;Total ram usage:        3 bytes
 37440 ;; Hardware stack levels used:    1
 37441 ;; This function calls:
 37442 ;;		Nothing
 37443 ;; This function is called by:
 37444 ;;		_Uart_MdmGsmGprsReadService
 37445 ;; This function uses a non-reentrant model
 37446 ;;
 37447                           
 37448                           	psect	text185
 37449  0067AC                     __ptext185:
 37450                           	opt stack 0
 37451  0067AC                     i2_GenerateEvt:
 37452                           	opt stack 8
 37453                           
 37454                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37455                           
 37456                           ;incstack = 0
 37457  0067AC  0E00               	movlw	0
 37458  0067AE  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37459                           
 37460                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37461  0067B0  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 37462  0067B4  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 37463  0067B8  0E02               	movlw	2
 37464  0067BA  6EDF               	movwf	indf2,c
 37465                           
 37466                           ;os_ser.c: 83: EventStatus = EventSent;
 37467  0067BC  0E02               	movlw	2
 37468  0067BE  6E03               	movwf	i2GenerateEvt@EventStatus,c
 37469  0067C0  0012               	return	
 37470  0067C2                     __end_ofi2_GenerateEvt:
 37471                           	opt stack 0
 37472                           tosu	equ	0xFFF
 37473                           tosh	equ	0xFFE
 37474                           tosl	equ	0xFFD
 37475                           pclatu	equ	0xFFB
 37476                           pclath	equ	0xFFA
 37477                           tblptru	equ	0xFF8
 37478                           tblptrh	equ	0xFF7
 37479                           tblptrl	equ	0xFF6
 37480                           tablat	equ	0xFF5
 37481                           prodh	equ	0xFF4
 37482                           prodl	equ	0xFF3
 37483                           intcon	equ	0xFF2
 37484                           intcon2	equ	0xFF1
 37485                           intcon3	equ	0xFF0
 37486                           indf0	equ	0xFEF
 37487                           postinc0	equ	0xFEE
 37488                           plusw0	equ	0xFEB
 37489                           fsr0h	equ	0xFEA
 37490                           fsr0l	equ	0xFE9
 37491                           wreg	equ	0xFE8
 37492                           indf1	equ	0xFE7
 37493                           postinc1	equ	0xFE6
 37494                           postdec1	equ	0xFE5
 37495                           plusw1	equ	0xFE3
 37496                           fsr1h	equ	0xFE2
 37497                           fsr1l	equ	0xFE1
 37498                           bsr	equ	0xFE0
 37499                           indf2	equ	0xFDF
 37500                           postinc2	equ	0xFDE
 37501                           postdec2	equ	0xFDD
 37502                           plusw2	equ	0xFDB
 37503                           fsr2h	equ	0xFDA
 37504                           fsr2l	equ	0xFD9
 37505                           status	equ	0xFD8
 37506                           
 37507 ;; *************** function _Rtcc_RtcIsr *****************
 37508 ;; Defined at:
 37509 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 37510 ;; Parameters:    Size  Location     Type
 37511 ;;		None
 37512 ;; Auto vars:     Size  Location     Type
 37513 ;;		None
 37514 ;; Return value:  Size  Location     Type
 37515 ;;                  1    wreg      void 
 37516 ;; Registers used:
 37517 ;;		wreg, status,2, status,0
 37518 ;; Tracked objects:
 37519 ;;		On entry : 0/0
 37520 ;;		On exit  : 0/0
 37521 ;;		Unchanged: 0/0
 37522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37527 ;;Total ram usage:        0 bytes
 37528 ;; Hardware stack levels used:    1
 37529 ;; This function calls:
 37530 ;;		Nothing
 37531 ;; This function is called by:
 37532 ;;		_HighPriorityIsr
 37533 ;; This function uses a non-reentrant model
 37534 ;;
 37535                           
 37536                           	psect	text186
 37537  0068E6                     __ptext186:
 37538                           	opt stack 0
 37539  0068E6                     _Rtcc_RtcIsr:
 37540                           	opt stack 10
 37541                           
 37542                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 37543                           
 37544                           ;incstack = 0
 37545  0068E6  90A4               	bcf	4004,0,c	;volatile
 37546  0068E8  0012               	return	
 37547  0068EA                     __end_of_Rtcc_RtcIsr:
 37548                           	opt stack 0
 37549                           tosu	equ	0xFFF
 37550                           tosh	equ	0xFFE
 37551                           tosl	equ	0xFFD
 37552                           pclatu	equ	0xFFB
 37553                           pclath	equ	0xFFA
 37554                           tblptru	equ	0xFF8
 37555                           tblptrh	equ	0xFF7
 37556                           tblptrl	equ	0xFF6
 37557                           tablat	equ	0xFF5
 37558                           prodh	equ	0xFF4
 37559                           prodl	equ	0xFF3
 37560                           intcon	equ	0xFF2
 37561                           intcon2	equ	0xFF1
 37562                           intcon3	equ	0xFF0
 37563                           indf0	equ	0xFEF
 37564                           postinc0	equ	0xFEE
 37565                           plusw0	equ	0xFEB
 37566                           fsr0h	equ	0xFEA
 37567                           fsr0l	equ	0xFE9
 37568                           wreg	equ	0xFE8
 37569                           indf1	equ	0xFE7
 37570                           postinc1	equ	0xFE6
 37571                           postdec1	equ	0xFE5
 37572                           plusw1	equ	0xFE3
 37573                           fsr1h	equ	0xFE2
 37574                           fsr1l	equ	0xFE1
 37575                           bsr	equ	0xFE0
 37576                           indf2	equ	0xFDF
 37577                           postinc2	equ	0xFDE
 37578                           postdec2	equ	0xFDD
 37579                           plusw2	equ	0xFDB
 37580                           fsr2h	equ	0xFDA
 37581                           fsr2l	equ	0xFD9
 37582                           status	equ	0xFD8
 37583                           
 37584 ;; *************** function _Mcu_Int1Isr *****************
 37585 ;; Defined at:
 37586 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37587 ;; Parameters:    Size  Location     Type
 37588 ;;		None
 37589 ;; Auto vars:     Size  Location     Type
 37590 ;;		None
 37591 ;; Return value:  Size  Location     Type
 37592 ;;                  1    wreg      void 
 37593 ;; Registers used:
 37594 ;;		wreg, status,2, status,0
 37595 ;; Tracked objects:
 37596 ;;		On entry : 0/0
 37597 ;;		On exit  : 0/0
 37598 ;;		Unchanged: 0/0
 37599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37604 ;;Total ram usage:        0 bytes
 37605 ;; Hardware stack levels used:    1
 37606 ;; This function calls:
 37607 ;;		Nothing
 37608 ;; This function is called by:
 37609 ;;		_HighPriorityIsr
 37610 ;; This function uses a non-reentrant model
 37611 ;;
 37612                           
 37613                           	psect	text187
 37614  0068EA                     __ptext187:
 37615                           	opt stack 0
 37616  0068EA                     _Mcu_Int1Isr:
 37617                           	opt stack 10
 37618                           
 37619                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 37620                           
 37621                           ;incstack = 0
 37622  0068EA  90F0               	bcf	intcon3,0,c	;volatile
 37623  0068EC  0012               	return	
 37624  0068EE                     __end_of_Mcu_Int1Isr:
 37625                           	opt stack 0
 37626                           tosu	equ	0xFFF
 37627                           tosh	equ	0xFFE
 37628                           tosl	equ	0xFFD
 37629                           pclatu	equ	0xFFB
 37630                           pclath	equ	0xFFA
 37631                           tblptru	equ	0xFF8
 37632                           tblptrh	equ	0xFF7
 37633                           tblptrl	equ	0xFF6
 37634                           tablat	equ	0xFF5
 37635                           prodh	equ	0xFF4
 37636                           prodl	equ	0xFF3
 37637                           intcon	equ	0xFF2
 37638                           intcon2	equ	0xFF1
 37639                           intcon3	equ	0xFF0
 37640                           indf0	equ	0xFEF
 37641                           postinc0	equ	0xFEE
 37642                           plusw0	equ	0xFEB
 37643                           fsr0h	equ	0xFEA
 37644                           fsr0l	equ	0xFE9
 37645                           wreg	equ	0xFE8
 37646                           indf1	equ	0xFE7
 37647                           postinc1	equ	0xFE6
 37648                           postdec1	equ	0xFE5
 37649                           plusw1	equ	0xFE3
 37650                           fsr1h	equ	0xFE2
 37651                           fsr1l	equ	0xFE1
 37652                           bsr	equ	0xFE0
 37653                           indf2	equ	0xFDF
 37654                           postinc2	equ	0xFDE
 37655                           postdec2	equ	0xFDD
 37656                           plusw2	equ	0xFDB
 37657                           fsr2h	equ	0xFDA
 37658                           fsr2l	equ	0xFD9
 37659                           status	equ	0xFD8
 37660                           
 37661 ;; *************** function _Mcu_Int0Isr *****************
 37662 ;; Defined at:
 37663 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 37664 ;; Parameters:    Size  Location     Type
 37665 ;;		None
 37666 ;; Auto vars:     Size  Location     Type
 37667 ;;		None
 37668 ;; Return value:  Size  Location     Type
 37669 ;;                  1    wreg      void 
 37670 ;; Registers used:
 37671 ;;		wreg, status,2, status,0
 37672 ;; Tracked objects:
 37673 ;;		On entry : 0/0
 37674 ;;		On exit  : 0/0
 37675 ;;		Unchanged: 0/0
 37676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37681 ;;Total ram usage:        0 bytes
 37682 ;; Hardware stack levels used:    1
 37683 ;; This function calls:
 37684 ;;		Nothing
 37685 ;; This function is called by:
 37686 ;;		_HighPriorityIsr
 37687 ;; This function uses a non-reentrant model
 37688 ;;
 37689                           
 37690                           	psect	text188
 37691  0068EE                     __ptext188:
 37692                           	opt stack 0
 37693  0068EE                     _Mcu_Int0Isr:
 37694                           	opt stack 10
 37695                           
 37696                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 37697                           
 37698                           ;incstack = 0
 37699  0068EE  92F2               	bcf	intcon,1,c	;volatile
 37700  0068F0  0012               	return	
 37701  0068F2                     __end_of_Mcu_Int0Isr:
 37702                           	opt stack 0
 37703                           tosu	equ	0xFFF
 37704                           tosh	equ	0xFFE
 37705                           tosl	equ	0xFFD
 37706                           pclatu	equ	0xFFB
 37707                           pclath	equ	0xFFA
 37708                           tblptru	equ	0xFF8
 37709                           tblptrh	equ	0xFF7
 37710                           tblptrl	equ	0xFF6
 37711                           tablat	equ	0xFF5
 37712                           prodh	equ	0xFF4
 37713                           prodl	equ	0xFF3
 37714                           intcon	equ	0xFF2
 37715                           intcon2	equ	0xFF1
 37716                           intcon3	equ	0xFF0
 37717                           indf0	equ	0xFEF
 37718                           postinc0	equ	0xFEE
 37719                           plusw0	equ	0xFEB
 37720                           fsr0h	equ	0xFEA
 37721                           fsr0l	equ	0xFE9
 37722                           wreg	equ	0xFE8
 37723                           indf1	equ	0xFE7
 37724                           postinc1	equ	0xFE6
 37725                           postdec1	equ	0xFE5
 37726                           plusw1	equ	0xFE3
 37727                           fsr1h	equ	0xFE2
 37728                           fsr1l	equ	0xFE1
 37729                           bsr	equ	0xFE0
 37730                           indf2	equ	0xFDF
 37731                           postinc2	equ	0xFDE
 37732                           postdec2	equ	0xFDD
 37733                           plusw2	equ	0xFDB
 37734                           fsr2h	equ	0xFDA
 37735                           fsr2l	equ	0xFD9
 37736                           status	equ	0xFD8
 37737                           tosu	equ	0xFFF
 37738                           tosh	equ	0xFFE
 37739                           tosl	equ	0xFFD
 37740                           pclatu	equ	0xFFB
 37741                           pclath	equ	0xFFA
 37742                           tblptru	equ	0xFF8
 37743                           tblptrh	equ	0xFF7
 37744                           tblptrl	equ	0xFF6
 37745                           tablat	equ	0xFF5
 37746                           prodh	equ	0xFF4
 37747                           prodl	equ	0xFF3
 37748                           intcon	equ	0xFF2
 37749                           intcon2	equ	0xFF1
 37750                           intcon3	equ	0xFF0
 37751                           indf0	equ	0xFEF
 37752                           postinc0	equ	0xFEE
 37753                           plusw0	equ	0xFEB
 37754                           fsr0h	equ	0xFEA
 37755                           fsr0l	equ	0xFE9
 37756                           wreg	equ	0xFE8
 37757                           indf1	equ	0xFE7
 37758                           postinc1	equ	0xFE6
 37759                           postdec1	equ	0xFE5
 37760                           plusw1	equ	0xFE3
 37761                           fsr1h	equ	0xFE2
 37762                           fsr1l	equ	0xFE1
 37763                           bsr	equ	0xFE0
 37764                           indf2	equ	0xFDF
 37765                           postinc2	equ	0xFDE
 37766                           postdec2	equ	0xFDD
 37767                           plusw2	equ	0xFDB
 37768                           fsr2h	equ	0xFDA
 37769                           fsr2l	equ	0xFD9
 37770                           status	equ	0xFD8
 37771                           
 37772                           	psect	text189
 37773  000000                     __ptext189:
 37774                           	opt stack 0
 37775                           tosu	equ	0xFFF
 37776                           tosh	equ	0xFFE
 37777                           tosl	equ	0xFFD
 37778                           pclatu	equ	0xFFB
 37779                           pclath	equ	0xFFA
 37780                           tblptru	equ	0xFF8
 37781                           tblptrh	equ	0xFF7
 37782                           tblptrl	equ	0xFF6
 37783                           tablat	equ	0xFF5
 37784                           prodh	equ	0xFF4
 37785                           prodl	equ	0xFF3
 37786                           intcon	equ	0xFF2
 37787                           intcon2	equ	0xFF1
 37788                           intcon3	equ	0xFF0
 37789                           indf0	equ	0xFEF
 37790                           postinc0	equ	0xFEE
 37791                           plusw0	equ	0xFEB
 37792                           fsr0h	equ	0xFEA
 37793                           fsr0l	equ	0xFE9
 37794                           wreg	equ	0xFE8
 37795                           indf1	equ	0xFE7
 37796                           postinc1	equ	0xFE6
 37797                           postdec1	equ	0xFE5
 37798                           plusw1	equ	0xFE3
 37799                           fsr1h	equ	0xFE2
 37800                           fsr1l	equ	0xFE1
 37801                           bsr	equ	0xFE0
 37802                           indf2	equ	0xFDF
 37803                           postinc2	equ	0xFDE
 37804                           postdec2	equ	0xFDD
 37805                           plusw2	equ	0xFDB
 37806                           fsr2h	equ	0xFDA
 37807                           fsr2l	equ	0xFD9
 37808                           status	equ	0xFD8
 37809                           
 37810                           	psect	rparam
 37811  0000                     tosu	equ	0xFFF
 37812                           tosh	equ	0xFFE
 37813                           tosl	equ	0xFFD
 37814                           pclatu	equ	0xFFB
 37815                           pclath	equ	0xFFA
 37816                           tblptru	equ	0xFF8
 37817                           tblptrh	equ	0xFF7
 37818                           tblptrl	equ	0xFF6
 37819                           tablat	equ	0xFF5
 37820                           prodh	equ	0xFF4
 37821                           prodl	equ	0xFF3
 37822                           intcon	equ	0xFF2
 37823                           intcon2	equ	0xFF1
 37824                           intcon3	equ	0xFF0
 37825                           indf0	equ	0xFEF
 37826                           postinc0	equ	0xFEE
 37827                           plusw0	equ	0xFEB
 37828                           fsr0h	equ	0xFEA
 37829                           fsr0l	equ	0xFE9
 37830                           wreg	equ	0xFE8
 37831                           indf1	equ	0xFE7
 37832                           postinc1	equ	0xFE6
 37833                           postdec1	equ	0xFE5
 37834                           plusw1	equ	0xFE3
 37835                           fsr1h	equ	0xFE2
 37836                           fsr1l	equ	0xFE1
 37837                           bsr	equ	0xFE0
 37838                           indf2	equ	0xFDF
 37839                           postinc2	equ	0xFDE
 37840                           postdec2	equ	0xFDD
 37841                           plusw2	equ	0xFDB
 37842                           fsr2h	equ	0xFDA
 37843                           fsr2l	equ	0xFD9
 37844                           status	equ	0xFD8
 37845                           
 37846                           	psect	temp
 37847  000042                     btemp:
 37848                           	opt stack 0
 37849  000042                     	ds	1
 37850  0000                     int$flags	set	btemp
 37851  0000                     wtemp6	set	btemp+1
 37852                           tosu	equ	0xFFF
 37853                           tosh	equ	0xFFE
 37854                           tosl	equ	0xFFD
 37855                           pclatu	equ	0xFFB
 37856                           pclath	equ	0xFFA
 37857                           tblptru	equ	0xFF8
 37858                           tblptrh	equ	0xFF7
 37859                           tblptrl	equ	0xFF6
 37860                           tablat	equ	0xFF5
 37861                           prodh	equ	0xFF4
 37862                           prodl	equ	0xFF3
 37863                           intcon	equ	0xFF2
 37864                           intcon2	equ	0xFF1
 37865                           intcon3	equ	0xFF0
 37866                           indf0	equ	0xFEF
 37867                           postinc0	equ	0xFEE
 37868                           plusw0	equ	0xFEB
 37869                           fsr0h	equ	0xFEA
 37870                           fsr0l	equ	0xFE9
 37871                           wreg	equ	0xFE8
 37872                           indf1	equ	0xFE7
 37873                           postinc1	equ	0xFE6
 37874                           postdec1	equ	0xFE5
 37875                           plusw1	equ	0xFE3
 37876                           fsr1h	equ	0xFE2
 37877                           fsr1l	equ	0xFE1
 37878                           bsr	equ	0xFE0
 37879                           indf2	equ	0xFDF
 37880                           postinc2	equ	0xFDE
 37881                           postdec2	equ	0xFDD
 37882                           plusw2	equ	0xFDB
 37883                           fsr2h	equ	0xFDA
 37884                           fsr2l	equ	0xFD9
 37885                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    590
    Data        183
    BSS         2364
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      5     256
    BANK4           192      0     173
    BANK5           256      0     214
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     250
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_33(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> MyApp_Task@receivedNumber(BANK4[13]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), MyApp_Task@emptyNumber(BANK1[13]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 5
		 -> memoryPreamble(BANK3[5]), 

    parseCommand@text	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), 
		 -> callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), smsText(BANK4[20]), MyApp_Task@emptyNumber(BANK1[13]), 
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> MyApp_Task@receivedNumber(BANK4[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK8[50]), PhoneNumber(BANK5[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isNumberInMemory@readBuffer(BANK1[13]), MyApp_Task@cmdAddNumber(BANK1[4]), parseCommand@deleteNumberCmd(BANK0[3]), parseCommand@addNumberCmd(BANK0[3]), 
		 -> RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> MyApp_Task@receivedNumber(BANK4[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8952 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> memorizedNumbersCount(COMRAM[1]), memoryPreamble(BANK3[5]), smsText(BANK4[20]), MyApp_Task@emptyNumber(BANK1[13]), 
		 -> callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_32(CODE[12]), STR_31(CODE[19]), STR_30(CODE[14]), STR_29(CODE[14]), 
		 -> STR_20(CODE[14]), STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), 
		 -> STR_16(CODE[17]), STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), 
		 -> STR_11(CODE[14]), STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), 
		 -> STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[5]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _waitSetupCall->_secondsAppTimer
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _saveNumberInMemory->_Eeprom_Write
    _parseCommand->_StringCompare
    _isNumberInMemory->_Eeprom_Read
    _initMemorizedNumbersCount->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_isNumberInMemory
    _initFsm->_initEeprom
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  879071
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  874440
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  437313
                                              0 BANK3      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  437127
                                              0 BANK3      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          23    23      0  171863
                                             19 BANK1     22    22      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                         _StringCopy
              _Uart_WriteConstString
                      _findEmptySpot
                            _initFsm
          _initMemorizedNumbersCount
                   _isNumberInMemory
                       _parseCommand
                 _saveNumberInMemory
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (4) _waitSetupCall                                        1     1      0   17846
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _getSetupCall                                         1     1      0    5631
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (6) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (6) _Mdm_HangPhoneCall                                    0     0      0    2855
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _saveNumberInMemory                                   3     1      2   10340
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _parseCommand                                         9     7      2    3620
                                             40 BANK0      9     7      2
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _isNumberInMemory                                    19    17      2   28290
                                              0 BANK1     19    17      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (4) _initMemorizedNumbersCount                            0     0      0    9966
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (5) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Write                                         7     4      3    9966
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   40153
                                              3 BANK1      1     1      0
                         _initEeprom
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15682
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24434
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _findEmptySpot                                       17    17      0   25120
                                              0 BANK1     17    17      0
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isNumberValid                                        5     3      2     578
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _Eeprom_Read                                          7     4      3   24354
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_GetSmsData                                       3     1      2    8165
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5123
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73572
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13138
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _StringCompare                                       11     5      6    2728
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15288
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8851
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   14102
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   42931
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21502
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21429
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteConstString                                3     1      2    2855
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (8) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2421
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7347
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7347
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2877
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1    1060
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _GetLastInteractionNumber
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _StringCopy
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber (ARG)
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _StringCompare
           _isNumberValid
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _GetLastInteractionNumber
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
         _Mdm_GetSmsData
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
         _StringCopy
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber (ARG)
         _Uart_WriteConstString
           _UartTxBufferStatus
           _UartWriteByte
         _findEmptySpot
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _isNumberValid
         _initFsm
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _initMemorizedNumbersCount
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _initPreamble
         _isNumberInMemory
           _Eeprom_Read
             _I2cSlv_QueryI2cData
               _I2cSlv_I2cReadMsgSts
                 _ReceiveEvt
               _I2cSlv_ReceiveI2cMsg
                 _GenerateEvt
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
               _OsTmr_Wait
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
           _StringCompare
           _isNumberValid
         _parseCommand
           _StringCompare
           _isNumberValid
         _saveNumberInMemory
           _Eeprom_Write
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
             _initPreamble (ARG)
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _waitSetupCall
           _Led_SetLedStatus
           _getSetupCall
             _Mdm_HangPhoneCall
               _Uart_WriteConstString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Mdm_IsRinging
               _ReceiveEvt
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      FA      22       97.7%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      D6      16       83.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      5     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      AD      14       90.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     9A3       8        0.0%
DATA                 0      0     CC3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 27 12:29:10 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 57F8  
                              _USB_SD_Ptr FC1E                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                      __size_of_TurnOnModem 004C  
                         ??_UpdateSchFlag 0019                        _Mcu_StartSystemPll 662E  
             Mdm_SetSmsFormat@UartMessage 0084                     ?_LedPulseStateMachine 008A  
                            ___awdiv@sign 0082                    I2c_ReadData@ReadPacket 0080  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 008C  
                           _USBDeviceInit 271A                       ___wmul@multiplicand 007F  
                        i1___wmul@product 001D                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 00A4  
                            __CFG_CP0$OFF 000000                OsAlrm_SetOsAlarm@OsAlarmId 0083  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0089      USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B  
                  I2c_ReadData@ReadStatus 0030                                       l202 238A  
                                     l203 2392                                       l205 23DA  
                                     l206 2400                                       l208 2408  
                                     l160 22CE                                       l209 2428  
                                     l161 21A4                                       l162 230C  
                                     l170 226C                                       l171 2282  
                                     l163 21B0                                       l315 46CA  
                                     l323 4696                                       l164 21F0  
                                     l316 4640                                       l420 4C78  
                                     l500 4B28                                       l173 2286  
                                     l325 46B0                                       l421 4C98  
                                     l237 663A                                       l174 228E  
                                     l166 21FE                                       l318 464A  
                                     l422 4CA4               __end_of_USBStdGetDscHandler 2FE4  
                                     l510 4AFA                                       l502 4ABA  
                                     l175 229A                                       l167 2226  
                                     l319 4670                                       l423 4CB0  
                                     l511 4AEA                                       l503 4AAA  
                                     l192 2432                                       l176 22B0  
                                     l416 4CC4                                       l424 4CBC  
                                     l512 4B0E                                       l504 4AD0  
                                     l520 5CAC                                       l193 2312  
                                     l169 2238                                       l417 4C6A  
                                     l441 1ADA                                       l513 4AEE  
                                     l505 4AAE                                       l521 5C78  
                                     l194 246A                                       l418 4CF2  
                                     l442 18E2                                       l514 4AF4  
                                     l506 4AB4                                       l530 33A4  
                                     l195 231E                                       l179 22BC  
                                     l419 4C72                                       l523 5C92  
                                     l531 340A                                       l196 235E  
                                     l700 5F12                                       l444 192A  
                                     l532 33D0                                       l445 1972  
                                     l541 65D8                                       l198 236C  
                                     l446 19BA                                       l199 2380  
                                     l631 2CFA                                       l447 1A02  
                                     l448 1A4A                                       l528 3410  
                                     l633 2D72                                       l625 2C86  
                                     l449 1A92                                       l529 33FC  
                                     l538 65DC                                       l546 3E94  
                                     l651 5BFC                                       l707 6076  
                                     l627 2CAA                                       l715 5FAA  
                                     l539 65D4                                       l547 3EB0  
                                     l660 5C20                                       l652 5BF6  
                                     l716 5F80                                       l709 6090  
                                     l629 2CD2                                       l718 5F98  
                                     l639 6620                                       l832 6376  
                                     l844 3F68                                       l668 0C44  
                                     _BDT 000400                                       l790 6656  
                                     l855 5128                                       l775 3226  
                                     l864 4DF6                                       l856 50CE  
                                     l857 5142                                       l698 5EF6  
                                     l858 50FE                                       l867 4E08  
                                     l982 299A                                       l983 286E  
                                     l985 2892                                       l987 28AC  
                                     l988 28E0                                       l989 2952  
                                     l998 2976                   secondsAppTimer@isCyclic 008C  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 0003                   __end_of_HighPriorityIsr 4594  
                          ??_Mdm_MainTask 00A9                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 61FE                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1E98  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CC  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 5F74  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 286C  
           findEmptySpot@positionInMemory 010F             ??_Tmr_RegisterTmr2IsrCallback 007F  
                                    l1010 5CC0           InitGprsNetwork@GprsNetInitState 01EA  
                                    l1100 1E08                                      l1101 1E54  
                                    l1013 5CDA                                      l1110 5B00  
                             RiSm@Counter 02DE                                      l1031 37C2  
                                    l1111 5B14                                      l1032 37FC  
                                    l2000 55E6                                      l1033 3822  
                                    l1009 5CF6                                      l1121 5B6C  
                                    l1027 3864                                      l1035 384A  
                                    l1107 5B26                                      l1220 10BE  
                                    l1028 37B0                                      l1052 2176  
                                    l1060 2148                                      l1108 5AEA  
                                    l1053 2090                                      l2102 34D0  
                                    l1222 139E                                      l1230 12A6  
                                    l1070 2E98                                      l2006 55DA  
                                    l2103 3418                                      l1231 12AA  
                                    l1223 10D6                                      l1071 2D90  
                                    l1055 2190                                      l2104 34EC  
                                    l2112 4760                                      l2120 474A  
                                    l1232 12EE                                      l1224 1110  
                                    l1056 20C2                                      l1136 64D8  
                                    l1152 64B4                                      l2008 55E0  
                                    l2105 3436                                      l2113 46F2  
                                    l1241 135C                                      l1225 1184  
                                    l1129 543E                                      l3001 396A  
                                    l2114 4788                                      l1226 114C  
                                    l1074 2DAC                                      l1058 2112  
                                    l3010 3A30                                      l3002 3964  
                                    l2107 34A6                                      l2115 4702  
                                    l1219 1366                                      l1075 2DC4  
                                    l1091 1E6E                                      l2035 593C  
                                    l2211 4E94                                      l2116 4714  
                                    l1252 0A54                                      l1260 073E  
                                    l1236 12FE                                      l1228 122C  
                                    l1092 1CEC                                      l1156 6188  
                                    l1412 6068                                      l3020 4FD2  
                                    l3004 39AC                                      l1404 5892  
                                    l2212 4E1A                                      l2133 630A  
                                    l2117 472E                                      l1261 06F6  
                                    l1253 05F4                                      l1237 1342  
                                    l1229 1266                                      l2037 5948  
                                    l3021 4FE2                                      l1405 5852  
                                    l2125 3C94                                      l2134 62F8  
                                    l1078 2E36                                      l2142 5988  
                                    l1422 65C4                                      l2126 3BDC  
                                    l2214 4E80                                      l2119 473C  
                                    l1255 0AB6                                      l1263 07F2  
                                    l1095 1D08                                      l2143 5952  
                                    l3023 5000                                      l3007 39FC  
                                    l1407 588C                                      l2136 62FE  
                                    l1280 09C4                                      l1272 092A  
                                    l1264 082C                                      l1256 060C  
                                    l2240 5A88                                      l1096 1DBE  
                                    l1440 3AF2                                      l3024 4FF8  
                                    l3040 5198                                      l3008 39BE  
                                    l2400 0152                                      l2128 3BEA  
                                    l2137 6304                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l2241 5A5E  
                                    l1097 1DE2                                      l2145 5964  
                                    l1417 5F6E                                      l1441 3A3C  
                                    l3041 51A2                                      l3033 515E  
                                    l2401 01E2                                      l2090 29C0  
                                    l1266 0890                                      l1258 0680  
                                    l2242 5A84                                      l2146 5976  
                                    l1442 3B08                                      l3042 51B0  
                                    l3034 516A                                      l2091 2AF4  
                                    l1267 08CA                                      l1259 06BA  
                                    l1443 3A5A                                      l3027 5020  
                                    l2403 01AE                                      l1291 5DCE  
                                    l2092 29E8                                      l1268 090E  
                                    l3028 502A                                      l3036 5180  
                                    l2420 02C6                                      l2404 019C  
                                    l1700 38B4                                      l3300 5D1C  
                                    l1604 2764                                      l1620 1EE0  
                                    l2093 2A6C                                      l2253 61BC  
                                    l1285 0A42                                      l1277 097E  
                                    l1445 3AB8                                      l3029 5038  
                                    l3037 5178                                      l1621 1EF0  
                                    l2501 6512                                      l1382 4134  
                                    l3222 5072                                      l2254 61A8  
                                    l1286 0A4A                                      l1278 09AA  
                                    l1446 3ACC                                      l2414 0392  
                                    l1702 3918                                      l1606 278C  
                                    l1630 1F8E                                      l1622 1EF8  
                                    l2502 6504                                      l1294 5D9C  
                                    l1391 40FE                                      l1383 4096  
                                    l3223 5066                                      l2247 55CA  
                                    l2415 0326                                      l1703 38DE  
                                    l1631 1F9A                                      l1623 1F0E  
                                    l1615 1EC4                                      l1384 40B8  
                                    l2248 558A                                      l1448 3AEA  
                                    l2432 041E                                      l2416 02B4  
                                    l1608 27C8                                      l1640 2016  
                                    l1624 1F1A                                      l1616 1EBA  
                                    l2504 650C                                      l1393 411A  
                                    l2089 2ADE                                      l2441 0524  
                                    l2417 0250                                      l2409 01D0  
                                    l3305 62AE                                      l1713 3040  
                                    l1633 1FAE                                      l1617 1EB8  
                                    l1394 4126                                      l1386 40DA  
                                    l3226 50A6                                      l1650 425E  
                                    l2442 0570                                      l2434 045E  
                                    l2426 0402                                      l3306 629C  
                                    l1706 395A                                      l1714 301A  
                                    l1626 1F42                                      l3227 50B4  
                                    l2435 0578                                      l2427 03D2  
                                    l2419 0304                                      l1707 3920  
                                    l1643 5E38                                      l1811 36E4  
                                    l2611 106C                                      l1652 42BA  
                                    l3500 35FA                                      l1716 30B8  
                                    l1644 5E48                                      l1740 2FBC  
                                    l1812 36EA                                      l1636 1FD4  
                                    l1628 1F58                                      l2612 0E32  
              USBConfigureEndpoint@handle 0083                                      l1389 40E2  
                                    l3501 35F4                                      l2437 04B4  
                                    l2461 13E8                                      l1717 309E  
                                    l1733 2FCC                                      l1725 354C  
                                    l1813 36F0                                      l1629 1F64  
                                    l2621 0EC4                                      l3182 65A4  
                                    l2438 0478                                      l2470 143C  
                                    l1902 4416                                      l1830 172C  
                                    l1742 2FC4                                      l1734 2EC8  
                                    l1750 4374                                      l1814 3704  
                                    l1638 1FF8                                      l2622 0EDE  
                                    l2614 0EB0                                      l2711 5D7A  
                                    l3503 3622                                      l3431 56A4  
                                    l1903 43B0                                      l1831 172E  
                                    l1751 42F6                                      l1727 35C0  
                                    l1815 370A                                      l2607 10A4  
                                    l2631 0FC2                                      l2623 0EF6  
                                    l2615 0E54                                      l3280 59EA  
                                    l1648 4234                                      l3192 459C  
                                    l3440 6244                                      l3512 36C0  
                                    l3432 569E                                      l2456 160C  
                                    l2472 157C                                      l1840 182C  
                                    l1832 174A                                      l1736 2EDC  
                                    l1752 42FC                                      l1808 376A  
                                    l1760 5E20                                      l2640 105A  
                                    l2632 0FD6                                      l2608 0E18  
                                    l2705 5D80                                      l2801 498C  
                                    l3441 623A                                      l2457 13A6  
                                    l1905 43C8                                      l1841 18A8  
                                    l1825 166C                                      l1737 2F64  
                                    l1753 431C                                      l1817 3710  
                                    l1809 36DA                                      l1673 4920  
                                    l1761 5E1E                                      l2481 66C4  
                                    l2625 0F5A                                      l2730 482C  
                                    l2706 5D5A                                      l2802 49F2  
                                    l3290 5EE6                                      l3194 45D8  
                                    l3506 3682                                      l3434 56BE  
                                    l2474 15E6                                      l2466 13FC  
                                    l1906 43D6                                      l1834 17D8  
                                    l1826 1672                                      l1746 435E  
                                    l1818 372E                                      l3275 59C0  
                                    l3195 461A                                      l3507 363A  
                                    l3435 56B4                                      l2459 13CC  
                                    l1667 3CEE                                      l1907 43F4  
                                    l1739 2F6C                                      l1747 42E4  
                                    l1819 374A                                      l1675 493A  
                                    l2635 0FFC                                      l2627 0F92  
                                    l3276 59B8                                      l2812 5392  
                                    l2708 5D94                                      l2804 49EC  
                                    l1924 4BCA                                      l3188 5E8E  
                                    l3508 3652                                      l2396 05D2  
                                    l2476 1606                                      l2468 141C  
                                    l1908 440C                                      l1844 185E  
                                    l1836 17A0                                      l1828 16E4  
                                    l1684 32A8                                      l2484 66BE  
                                    l2636 1018                                      l2628 0FB0  
                                    l2709 5D68                                      l3285 5EC4  
                                    l3509 3662                                      l2397 00E2  
                                    l1837 17BE                                      l1685 3250  
                                    l2814 53CC                                      l2806 4A06  
                                    l3286 5EBC                                      l3462 1B4A  
                                    l3446 6004                                      l1846 18B4  
                                    l1774 4C52                                      l3279 59E0  
                                    l2815 53D6                                      l2727 47F0  
                                    l2583 449A                                      l1927 4B78  
                                    l3543 63F6                                      l2831 3B80  
                                    l3447 5FFE                                      l1679 4A72  
                                    l1839 1820                                      l1775 4C4C  
                                    l2639 103E                                      l1928 4BA4  
                                    l3472 1BC6                                      l3464 1B62  
                                    l2832 3B62                                      l2824 3B18  
                                    l1960 2B74                                      l1952 2B1C  
                                    l1768 6118                                      l2729 481C  
                                    l2681 4D82                                      l2585 44C4  
                                    l1929 4B7E                                      l3289 5EDC  
                                    l3481 1C94                                      l3473 1BD6  
                                    l2825 3B32                                      l1793 418A  
                                    l1785 5454                                      l1689 32D2  
                                    l1769 6116                                      l2850 576E  
                                    l2682 4D32                                      l3538 62E8  
                                    l3482 1CCE                                      l3466 1BB6  
                                    l2826 3B94                                      l1970 2C28  
                                    l1962 2BCC                                      l1954 2B2A  
                                    l1698 38AA                                      l1794 4190  
                                    l2691 4FA4                                      l2675 4D66  
                                    l2683 4D46                                      l2587 44E2  
                                    l2771 5BD0                                      l3475 1BF0  
                                    l3555 60E0                                      l2835 3BB4  
                                    l1971 2C2C                                      l1963 2B94  
                                    l1795 420C                                      l1787 54A2  
                                    l3299 5D3E                                      l2692 4F42  
                                    l2684 4D5E                                      l2676 4D00  
                                    l3548 6560                                      l1956 2B5E  
                                    l1796 41D2                                      l2765 6608  
                                    l2829 3B38                                      l2694 4F88  
                                    l3486 6736                                      l3478 1C02  
                                    l1966 2C0E                                      l1798 41F2  
                                    l3479 1C6E                                      l3559 671E  
                                    l1967 2BD6                                      l1959 2B70  
              __size_of_Mdm_IsSmsReceived 0024                                      l2792 5536  
                                    l2696 4FB8                                      l1992 6484  
                              _Led1OutSts 01FA                                      l2849 575A  
                                    l2697 4F94                                      l2769 5BC4  
                                    l1993 6474                                      l2794 5568  
                                    l2698 4F9A                                      l2795 556E  
                                    l1995 647A                                      STR_1 FFE6  
                                    STR_2 FF75                                      STR_3 FFDF  
                                    STR_4 FFC2                                      STR_5 FFCE  
                                    STR_6 FFF0                                      STR_7 FFEB  
                                    STR_8 FE89                                      STR_9 FEBD  
                              _Led2OutSts 01F8                                _Led3OutSts 01F6  
                   ??_USBCtrlTrfTxService 007D                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      u8805 5C9C  
                __size_of_Uart_Uart1RxIsr 0010                                      u8806 5C9E  
                                    u8815 5CA8                                      u8816 5CAA  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u8785 5C82                                      u8786 5C84  
                                    u8795 5C8E                                      u8796 5C90  
                              _AlarmEvent 01F5                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 0314  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 68C2  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0031               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 00E1    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 003A  
                                    _atoi 3962                                      _main 6878  
                         ??_Mdm_IsRinging 0081                                      _itoa 5E68  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 6194  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 4594  
                                    _xtoi 35E4                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 68CA               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4C64               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 5FB4  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 594C  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 6752                             _isNumberValid 5510  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
        isNumberInMemory@positionInMemory 0112                __end_of_USBCheckStdRequest 37AE  
                         _Rtcm_SystemDate 0463                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 680C         __size_of_GetLastInteractionNumber 000C  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                 ?_GetLastInteractionNumber 007D  
                          _GetElapsedTime 3F04             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 0085               __end_of_OsAlrm_ClearOsAlarm 5850  
                Eeprom_Write@SlaveAddress 0094                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
              waitSetupCall@isCallArrived 0093                       __size_of_I2cDummyTx 001C  
                        ??_Mdm_GetSmsData 0091                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 6070  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDAB  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DB                                     l15006 2142  
                                   l14070 4C7E                                     l12630 629C  
                                   l15210 129E                                     l13516 5D1C  
                                   l14244 275C                                     l14272 27C0  
                                   l14196 61DC                                     l12668 38B4  
                                   l16134 5236                                     l13832 482C  
                                   l12864 3544                                     l13682 39F8  
                                   l16146 3112                                     l11898 663A  
                                   l16500 5600                                     l16502 5630  
                                   l15376 09A4                                     l15528 1FA6  
                                   l14684 552E                                     l14858 3410  
                                   l14984 2088                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 5042                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FF2F  
                                   STR_14 FEA8                                     STR_31 FEFA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFAA  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_33 FFD8                                     STR_17 FF83  
                                   STR_26 FE86                                     STR_18 FF90  
                                   STR_27 FF0D                                     STR_28 FFB6  
                         __end_of___awmod 51BA                                     STR_29 FF2F  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 50C6  
                                   ?_utoa 008A                                     u11310 3906  
                                   u12210 5076                                     u11330 3948  
                                   u10515 63B8                                     u10516 63BA  
                         ___awdiv@divisor 007F                                     u11317 38FC  
                                   u10525 63C4                                     u13110 5184  
                                   u10526 63C6                                     u10535 63D0  
                                   u10536 63D2                                     u11337 393E  
                                   u13050 5004                                     u12250 63F2  
                                   u11610 2FB0                    __end_of_USBDeviceTasks 2020  
                                   u11380 5BF2                                     u12340 60C4  
                                   u14020 56E6                                     u11540 3578  
                                   u12270 62D8                                     ?_xtoi 0083  
                                   u12440 2CCE                                     u13400 5A94  
                                   u12360 60D0                                     u13145 5C46  
                                   u13305 0B9E                                     u11617 2FA6  
                                   u14130 5572                                     u14027 56DC  
                                   u11580 2F2E                                     u13325 0C78  
                                   u14150 4D10                                     u12630 4B54  
                                   u11910 5EC8                                     u11830 1842  
                                   u11590 2F5E                                     u13430 2780  
                                   u13335 0C98                                     u14080 3BCC  
                                   u12385 67D0                                     u13345 0D22  
                                   u13265 6790                                     u14305 677A  
                                   u12386 67D2                                     u12490 55C2  
                                   u13266 6792                                     u14306 677E  
                                   u14235 521E                                     u11587 2F24  
                                   u13460 2824                                     u13285 0AF4  
                                   u11597 2F54                                     u14245 67E4  
                                   u11950 5F20                                     u14270 46A8  
                                   u14350 2908                                     u15230 201C  
                                   u14246 67E6                                     u13295 0B14  
                                   u14431 203A                                     u11880 59C4  
                                   u14280 46C2                                     u14520 2196  
                                   u12840 1B52                                     u15320 2BBC  
                                   u16008 5268                                     u12497 55B8  
                                   u14441 204C                                     u16009 5296  
                                   u11970 609E                                     u14370 291C  
               ?_USBCtrlEPServiceComplete 0001                                     u14451 205E  
                                   u15340 2BFE                                     u12870 1B8C  
                                   u15350 2C16                                     u15327 2BB2  
                                   u16048 31DA                                     u16049 3208  
                                   u12890 1B9C                                     u15347 2BF4  
                                   u15391 5506                                     u13960 04BE  
                                   u15751 4E72                                     u15761 4E8A  
                                   u15770 0DD6                           __end_of___lwdiv 59F4  
                         __end_of___lwmod 5EF0                 TurnOnModem@TurnOnMdmState 01F4  
                      ??_UpdateOsCounters 0019                                     i1l742 25DC  
                                   i1l747 2718                                     i2l680 3E2C  
                                   i2l681 3D7C                                     i2l690 3DC6  
                                   i2l682 3D8A                                     i2l686 3DAC  
                                   i2l688 3E1E                                     i2l689 3DE6  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03B0              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E6                                     _USTAT 000F64  
                 __end_of_LedStateMachine 478E        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C2           __end_of_USBCtrlEPAllowDataStage 496E  
                           _StringCompare 5A46                                     _sd000 FE5B  
                                   _sd001 FE14                                     _sd002 FDEE  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3CA6                               _ApnLenLocal 01EE  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_initFsm 5D9A                           __end_of_isalpha 62F2  
                         __end_of_isdigit 65AC                 saveNumberInMemory@address 0098  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0091                               _ClearBuffer 6194  
                         __end_of_isspace 63FE               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0037                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 6568  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 6472                 __end_of_Rtcc_GetRtccValue 4CF8  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 5308                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5850  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                        parseCommand@text 0088                                     wtemp6 0043  
                         __end_of_sprintf 3BDA                           __end_of_tolower 6722  
                     __end_of_Mcu_Int0Isr 68F2                       __end_of_Mcu_Int1Isr 68EE  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 673A                    __end_of_GetElapsedTime 3FCC  
                   __end_of_UartSetConfig 5748                      __end_of_Eeprom_Write 5A46  
                  __size_of_initGprsModem 0090                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 66D6                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2EB6                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 63AA  
                          _InitSchedTimer 6322                           __initialization 246E  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 46E6  
                    __end_of_I2c_ReadData 246E                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 4158                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 0DC8                              __end_of_atoi 3A3A  
                            __end_of_main 6884                       StringCompare@Result 0085  
                            __end_of_itoa 5EAC                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DE                              __end_of_utoa 463E  
                            __end_of_xtoi 36CA                  __end_of_Rtcm_SetRtccDate 58F8  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 68AE              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03CF                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4B3A                             ?_initPreamble 007D  
                              _ReceiveEvt 6350          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 682C  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103              isNumberInMemory@searchFailed 0110  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 50C6                              _cdc_mem_type 01DF  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03F0  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC        __size_of_initMemorizedNumbersCount 001A  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3E3C  
              _Uart_MdmGsmGprsReadService 3D72                __end_of_UsbDevice_MainTask 6496  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 660E  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 662E  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 58F8  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1412 6158                               _GenerateEvt 673A  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002B  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 5374                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6350                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 68E2  
                              _UartConfig 0320                      __end_of_Mdm_MainTask 5B38  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CB  
                           ??_Term_MainSm 00A7                                    _Relay1 01D9  
                                  _Relay2 01D8                                    _Relay3 01D7  
                                  _Relay4 02EB                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5DE0  
                                  _SmsLen 00D2                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5C72                                    ___lmul 5748  
                    _I2cSlv_ReceiveI2cMsg 5F34                        TurnOnModem@Counter 02D8  
                            ?_putUSBUSART 0083                                    ___wmul 63FE  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5B38  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 594C  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4BD0  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 5E24           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5D0A                    __size_of_HttpGetMethod 04D0  
                                  _memset 6292                                    clear_0 2526  
                                  clear_1 2538                                    clear_2 2544  
                                  clear_3 2550                                    clear_4 255C  
                                  clear_5 2568                         parseCommand@F9021 FC28  
                                  clear_6 2574                                    clear_7 2580  
                                  clear_8 258C                                    clear_9 2598  
                       parseCommand@F9019 FC2B                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E2                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EB                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F1  
                      ?_USBEnableEndpoint 0085                            ??_initPreamble 007F  
                                  _strcat 5694                                    _strcpy 6230  
                                  _strlen 5FF4                                    _strtol 1B0A  
                        ClearBuffer@Index 0081             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 60EA                  HttpGetMethod@UartMessage 0100  
                               ??_initFsm 00B0                             _initGprsModem 4CF8  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03C1  
                     ModemEvtParser@F9112 03BC                       ModemEvtParser@F9114 04D6  
                     ModemEvtParser@F9108 03C6                              _CDCTxService 2B06  
                     MdmCntSm@MdmCntState 002D                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC10  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 0335                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 68DA  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 58A4                           _InitGprsNetwork 10B6  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 68EE  
                             _Mcu_Int1Isr 68EA                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                       parseCommand@state 0090                    __size_of_ScheduleTasks 0122  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                      _controlTransferState 00CA  
       __end_of_initMemorizedNumbersCount 670A                     __end_ofi1_GenerateEvt 67AC  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4EA6  
              __size_of_Rtcc_GetRtccValue 0094                             ?_parseCommand 0088  
                      _ExtInt1IsrCallback 02E0                                __accesstop 0060  
                           ?_Wdg_MainTask 0001                   __end_of__initialization 25B6  
                      Eeprom_Read@ReadSts 00AE                    Tmr_TmrBPrSet@Prescaler 0098  
           findEmptySpot@searchInProgress 010E                              __pbssBIGRAMl 0AC8  
                         ??_isNumberValid 007F                    __end_of_EnableReceiver 68E6  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01FC  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 5C24           I2cSlv_QueryI2cData@TimeoutTimer 0342  
                    Terminal@FormatOption 02ED                           __CFG_IOL1WAY$ON 000000  
                              _StringCopy 5576                            __pcstackBANK10 0A00  
                   I2cDummyTx@DummyBuffer 01FD                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                       initFsm@currentState 01D3  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02DC  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5E68                               _InitNetwork 00D9  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE5F                             __end_of_sd001 FE32  
                           __end_of_sd002 FE14                              __pidataBANK0 68F2  
                            __pidataBANK1 68F4                              __pidataBANK2 686A  
                            __pidataBANK3 5FB4                              __pidataBANK4 6752  
                            __pidataBANK5 5A98                 __end_ofparseCommand@F9021 FC2B  
               __end_ofparseCommand@F9019 FC2E                         ?_UartSetConfigLow 0001  
        __size_of_USBCtrlEPAllowDataStage 009E                     _Uart_WriteConstString 5EF0  
        isNumberInMemory@searchInProgress 010F                       __size_of_CheckModem 0152  
              __end_of_Uart_ClearRxBuffer 61FE             __size_of_USBConfigureEndpoint 0098  
             parseCommand@deleteNumberCmd 008D                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 66A2               __end_of_USBCtrlTrfInHandler 421A  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
               __size_of_isNumberInMemory 009E                       __end_of_Term_MainSm 1648  
               initGprsModem@currentState 01D5                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 6796                     __size_of_Led_MainTask 00CC  
                         ??_StringCompare 0083             I2cSlv_QueryI2cData@I2cOpState 01E5  
                             ?_ReceiveEvt 007D                               _NewSmsEvent 0040  
                              _SystemInit 6262                                _cdc_notice 0459  
                   __end_of_Tmr_TmrBPrSet 3416                     __end_of_waitSetupCall 5BD6  
                     __end_of_Rtcc_RtcIsr 68EA                                _cdc_rx_len 00C6  
                       __end_of_MsgFormat FD22                                _cdc_tx_len 00C4  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                   _memorizedNumbersCount 0038                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 615E                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E0                            ClearBuffer@Len 007F  
                         _secondsAppTimer 478E          __end_of_GetLastInteractionNumber 6890  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 63AA  
                  _USBStdGetStatusHandler 42D8                         __end_of_SendSmsSm 1E98  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01ED  
                          _Rtcc_RtcConfig 4830                     __size_of_Eeprom_Write 0052  
                              __pbssBANK0 00B0                                __pbssBANK1 01C9  
                          ??_parseCommand 008A                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 08C8  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 67C2  
             isNumberInMemory@phoneNumber 0100                  __end_of_Uart_WriteString 60AE  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 6502  
                             _SetBaudRate 5C24                     __end_of_findEmptySpot 53DC  
               initGprsModem@modemCounter 03BA               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EF                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 3328  
                               ?_TmrBInit 007D                             _CheckTxStatus 68AE  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                       MyApp_Task@cmpString 0120  
                               ?_Terminal 0001                      Eeprom_Write@WriteSts 0092  
                                 ?___lmul 007D                              _Led_MainTask 3BDA  
                          _Rtcc_UnlockRtc 680C                              _I2cBusStatus 01E7  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 3108                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2310                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4BD0  
                   __end_of_UpdateSchFlag 6686                              _EepromBuffer 04B1  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D7  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 13A4                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 3108  
                       __end_of_WriteByte 68A4                        _USBCheckStdRequest 36CA  
                       _configDescriptor1 FDAB                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0572                              _Eeprom_Write 59F4  
                   __size_of_getSetupCall 0020               __end_of_USBCtrlTrfTxService 3962  
                       triggerRelay@F9027 03CD                       _USBStdSetCfgHandler 34FE  
                 __size_of_ConfigureModem 00DC                    I2cSlv_QueryI2cData@Ret 01E4  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 637E                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 48D0  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2310  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4094                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DC            __end_of_Pm_DsReleasePinControl 68D0  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 02EE                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E0                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 0029                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                       _I2cSlv_QueryI2cData 3A3A  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 686A                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C5  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 68D6                      __end_of_initPreamble 644C  
                  initEeprom@currentState 01D4                          _ComChecCompleted 002A  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 64BA  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01DB  
                                 _RelayB2 01DA                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D6  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 529C                    __end_of_Rtcc_UnlockRtc 681C  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 67D6                                _initEeprom 4F32  
                             _Term_MainSm 13A4   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 664C                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6780             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 4FBC                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 5148                                   ___lldiv 5042  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                                 ___lwdiv 59A0                         ??_USBStallHandler 007D  
                                 ___lwmod 5EAC                         ?_Rtcm_SetRtccDate 0089  
            __size_of_Uart_WriteStringLen 0040                        ?_Sch_MainScheduler 0001  
                            _getSetupCall 65EE                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 68E6  
                    __size_of_putUSBUSART 0022                                   __pcinit 246E  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CD                       __end_of_TurnOnModem 5D0A  
                         __size_of_memset 0030                   initEeprom@isInitialized 0102  
                               _I2cConfig 034D                            ??_Rtcc_LockRtc 007D  
               __end_of_configDescriptor1 FDEE                                   __ramtop 0F00  
              Mdm_GetSmsData@GetSmsStatus 0091                               Terminal@Len 03AC  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6878  
                                 __ptext1 6262                                   __ptext2 6890  
                                 __ptext3 68CA                                   __ptext4 662E  
                                 __ptext5 66A2                                   __ptext6 63AA  
                                 __ptext7 6322                                   __ptext8 3E3C  
                                 __ptext9 3328                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 4830                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                                   _initFsm 5D52  
                            ??_USBSuspend 0091                                 _T2CONbits 000FCA  
                                 _isalpha 62C2                                   _isdigit 658A  
          isNumberInMemory@memoryOpResult 0111                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 25A4                                   clear_11 25B0  
                        ___awmod@dividend 007D                         ??_InitializeTasks 03FB  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 02E8  
     __end_of_Tmr_RegisterTmr2IsrCallback 689A               _Tmr_RegisterTmr2IsrCallback 6890  
               findEmptySpot@searchFailed 010D                                   _isspace 63D4  
                            _Mdm_MainTask 5AE8                                   _isupper 6546  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                   MyApp_Task@emptyNumber 0113                    ?_Irq_InitIntController 007D  
                                 _smsText 049D                    Term_MainSm@FwkBuildStr 013A  
                         ?_Rtcc_RtcConfig 007E                    _OsAlrm_ProcessOsAlarms 25C4  
                            ??_CheckModem 009B                        __end_of_USB_CD_Ptr FC30  
                     Mcu_SetWdgSts@WdgSts 007D                               _Tmr_Tmr2Isr 64DE  
                                 _sprintf 3B0C                                   _tolower 670A  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 684C  
                        _HttpGetDataLocal 03A3                  __end_of_Mdm_SetSmsFormat 5B88  
                  Term_MainSm@FwkMajorStr 0132                            __pintcode_body 44E8  
                                 _toupper 6722           secondsAppTimer@destinationTicks 0091  
                       ClearBuffer@Buffer 007D                      end_of_initialization 25B6  
                            _getsUSBUSART 4B3A                              ?_Eeprom_Read 00A9  
                        ??_GetElapsedTime 0085                               _SmsTxtReady 00DA  
             ?_Uart_MdmGsmGprsReadService 0004                    MyApp_Task@cmdAddNumber 0123  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC24       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC10                            _ModemEvtParser 2020  
                                 int_func 44E8                           _USB1msTickCount 0310  
         _dummy_encapsulated_cmd_response 0372                  _GetLastInteractionNumber 6884  
                               i1u1608_28 64EE                                 i1u1570_28 26FA  
                               i1u1570_29 270E                                 i1u1566_20 25DA  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 001A  
              __end_of_saveNumberInMemory 66F0                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 666A                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 18DC  
                       _Rtcc_SetRtcStatus 676A                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 6230                             StringCopy@Len 0089  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 48D0                        _UsbDevice_MainTask 6472  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 68D6  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 322A                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E8                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 29BE                           _RtccIsrCallback 02E4  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
                        _isNumberInMemory 496E                      __end_of_parseCommand 44E8  
              _USBStatusStageEnabledFlag1 0028                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 6524  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0300                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 67E8  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 65CE  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E6  
                        _HttpGetMethodSts 01EC                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01E1                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0036                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 21A2  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D4                     __end_of_StopCondition 68DE  
                __size_of_HighPriorityIsr 458C                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0369  
                               _Led2Blink 0360                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0357              __end_of_USBTransferOnePacket 42D8  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 038D  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 1B0A                 __end_of_Rtcc_SetRtcStatus 6780  
                               _Led2Pulse 0387                                 _Led3Pulse 0381  
                       _I2cSlv_SendI2cMsg 6032           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 03FB  
                          _Tmr_TmrBConfig 3E3C                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 67E8                         _OsAlrm_SetOsAlarm 3FCC  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5C72  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5CBE                                 _ClipEvent 00DD  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 00D8  
                  _USBCtrlTrfSetupHandler 4EA6                        ?_OsAlrm_SetOsAlarm 0083  
                __size_of_GetCallerNumber 0036                     __end_of_USBDeviceInit 286C  
   __end_of_USBIncrement1msInternalTimers 6546    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 6524               __size_of_Mdm_RequestSmsData 0010  
                          __end_of___lmul 57A0                            _CheckAckStatus 68B8  
                          __end_of___wmul 6426                       ??_I2cSlv_SendI2cMsg 0084  
               __end_of_Mdm_HangPhoneCall 67FA                    __size_of_UartWriteByte 0020  
                          __end_of_memcpy 5D52                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002C                            __end_of_memset 62C2  
                      _UartTxBufferStatus 5BD6                       ??_OsAlrm_SetOsAlarm 008B  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 007F  
                       _USBBusIsSuspended 01E2                                 _Mdm_SmsRx 0700  
                        ?_secondsAppTimer 008A                         ??_SetUartBaudRate 0098  
                 __end_of_Uart_Uart1RxIsr 685C                                 _MdmStatus 00D0  
                          __end_of_strcat 56F0                            __end_of_strcpy 6262  
                          __end_of_strlen 6032                            __end_of_strtol 1CE0  
                     start_initialization 246E           isNumberInMemory@currentPosition 00E2  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 37AE                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 61CA                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0500  
                             _cdc_data_tx 07B6              __end_of_USBConfigureEndpoint 4AA4  
                   __size_of_initPreamble 0026           __end_of_USBStdFeatureReqHandler 18DC  
                               _MsgFormat FC32                        __end_of_MyApp_Task 10B6  
                        _UpdateOsCounters 683C                           ?_ModemEvtParser 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3D72                 __end_of_I2cSlv_SendI2cMsg 6070  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4C64                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
              ?_initMemorizedNumbersCount 0001                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 682C                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3F04  
                               _SendSmsSm 1CE0                 __end_of_OsAlrm_SetOsAlarm 4094  
                  __end_of_Tmr_TmrBIrqSet 5CBE                                 _TaskTable 0586  
                               _RingEvent 00DE                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D3  
                   __end_of_isNumberValid 5576                         __size_of_ReadByte 000A  
                               _RtcConfig 03B4                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 56F0  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 637E  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 66BC  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 68C2  
                                ??___lmul 0085                             _isxdigit$6642 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2EB6                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 5148                        HttpGetMethod@Index 01C8  
                             __pdataBANK0 00E1                               __pdataBANK1 01FE  
                             __pdataBANK2 02F3                               __pdataBANK3 03BC  
              isNumberInMemory@readBuffer 0102                               __pdataBANK4 04D6  
                             __pdataBANK5 0586                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 051C                                  ??_memcpy 0083  
                                ??_memset 0083                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 007D                      ??_Uart_ClearRxBuffer 007D  
     __size_of_Uart_MdmGsmGprsReadService 00CA                                  ??_strcat 0081  
                                ??_strcpy 0081                                  ??_strlen 007F  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 59A0                    __end_of_ConfigureModem 388A  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D5  
          __end_of_USBStdGetStatusHandler 438A                              _initPreamble 6426  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5A98                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03FB  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002E  
                            _SetAckStatus 67C2                              _isalpha$6632 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 689A  
                     __size_of_initEeprom 008A                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6366 007E             UpdateSchFlag@InterruptCounter 02DA  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 5F74  
     InitGprsNetwork@GprsNetInitNextState 00CF                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 660E                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 6124              __end_of_LedBlinkStateMachine 2B06  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 5DE0                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 66A2  
              __end_of_USBCheckCDCRequest 443A              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 57F8                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 65EE                              ??_StringCopy 008B  
                        _Led_SetLedStatus 62F2                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 65AC  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 00AE                    __size_of_waitSetupCall 004E  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
             findEmptySpot@memoryOpResult 0110             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC10                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 5D52                                 __ptext101 4CF8  
                               __ptext110 6032                                 __ptext102 478E  
                               __ptext111 5F34                                 __ptext103 5B38  
                               __ptext120 5CBE                                 __ptext112 65AC  
                               __ptext104 4F32                                 __ptext121 1CE0  
                               __ptext113 682C                                 __ptext105 5374  
                               __ptext130 5748                                 __ptext122 5F74  
                               __ptext114 64BA                                 __ptext106 5510  
                           Terminal@Index 00A6                                 __ptext131 57A0  
                               __ptext123 2020                                 __ptext115 53DC  
                               __ptext107 58F8                                 __ptext140 5BD6  
                               __ptext132 286C                                 __ptext124 61CA  
                               __ptext116 594C                                 __ptext108 3A3A  
                               __ptext141 5576                                 __ptext133 463E  
                               __ptext125 5A46                                 __ptext117 6884  
                               __ptext109 50C6                                 __ptext150 29BE  
                               __ptext142 5636                                 __ptext134 68C2  
                               __ptext126 2D84                                 __ptext118 615E  
                               __ptext151 59A0                                 __ptext143 4D88  
                               __ptext135 10B6                                 __ptext127 37AE  
                               __ptext119 56F0                                 __ptext160 21A2  
                               __ptext152 3FCC                                 __ptext144 3F04  
                               __ptext136 05EC                                 __ptext128 0ABC  
                               __ptext161 2310                                 __ptext153 63FE  
                               __ptext145 67FA                                 __ptext137 6070  
                               __ptext129 2C4C                                 __ptext170 68B8  
                               __ptext162 689A                                 __ptext154 51BA  
                               __ptext146 6194                                 __ptext138 5EF0  
                               __ptext163 68DA                                 __ptext155 5C24  
                               __ptext147 46E6                                 __ptext139 660E  
                               __ptext180 6124                                 __ptext172 64DE  
                               __ptext164 68DE                                 __ptext156 5042  
                               __ptext148 3416                                 __ptext181 6796  
                               __ptext173 685C                                 __ptext165 67C2  
                               __ptext157 637E                                 __ptext149 62F2  
                               __ptext174 666A                                 __ptext166 68A4  
                               __ptext158 4094                                 __ptext183 684C  
                               __ptext175 683C                                 __ptext167 673A  
                               __ptext159 6350                                 __ptext184 3D72  
                               __ptext176 25C4                                 __ptext168 68E2  
                               __ptext185 67AC                                 __ptext177 644C  
                               __ptext169 68AE                                 __ptext186 68E6  
                               __ptext178 57F8                                 __ptext187 68EA  
                               __ptext179 6686                                  ?___awmod 007D  
                      _Sch_SchmIntService 685C                                 __ptext188 68EE  
                               __ptext189 0000                           _InitializeTasks 522C  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                 findEmptySpot@readBuffer 0100                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                   isNumberValid@isNumberOk 0080  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04CB  
                 Eeprom_Write@WriteBuffer 008F                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0393  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 421A                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 044F                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 039E            InitializeTasks@ActiveTaskIndex 03FD  
                  __size_of_findEmptySpot 0068                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 53DC  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 54AA                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 54AA  
              ConfigureModem@DelayCounter 031E                        __end_of_StringCopy 55D8  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00DF  
                         Terminal@SwTimer 04C0                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03B8  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 02EA  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                MyApp_Task@numberInMemory 0128                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D6                          _OsTmr_StartTimer 5636  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                __end_of_isNumberInMemory 4A0C              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6796  
              __end_of_Mcu_StartSystemPll 664C                              _parseCommand 443A  
                            _PhoneNumbLen 00D1                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 6502                             _Rtcm_MainTask 4E18  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0099  
                        SendSmsSm@SwTimer 03E5                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F3           HttpGetMethod@GetMethodNextState 00CE  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 51BA  
                       _IncomingCallEvent 003F                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 6292  
                                _RCONbits 000FD0                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4E18  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A8                      _USBConfigureEndpoint 4A0C  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 66D6                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 271A                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 644C                     __end_of_initGprsModem 4D88  
                     ??_I2c_InitI2cModule 00A4                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 68CA                    __end_of_Mdm_GetSmsData 5444  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E3  
                                _ApnLocal 031C                            _StartCondition 68DE  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E9                             _Tmr_TmrBPrSet 3328  
                           _waitSetupCall 5B88                       ?_saveNumberInMemory 0096  
                       _NewStringReceived 003C                              _isspace$6635 007E  
                        _UartSetConfigLow 57A0                                  _GetSmsSm 2D84  
                 __end_of_USBStallHandler 5E24                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 0399                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DA                                  _MdmCntSm 463E  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 2482                                 copy_data1 24A2  
                               copy_data2 24C2                                 copy_data3 24FA  
            __end_of_LedPulseStateMachine 34FE                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 35E4  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 68A4                             i2_GenerateEvt 67AC  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE5B                 __end_of_I2c_InitI2cModule 522C  
                                _MsgReady FE32                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 529C                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 5374               __end_of_I2cSlv_QueryI2cData 3B0C  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4AA4                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                                  _TxBuffer 0318  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DC                           _SetUartBaudRate 2C4C  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 21A2  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                         MyApp_Task@F9033 FC11                           MyApp_Task@F9036 FC24  
                         MyApp_Task@F9038 03CA                  __end_of_UpdateOsCounters 684C  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 666A                       __end_of_putUSBUSART 658A  
                             _line_coding 037A                              _Rtcc_LockRtc 681C  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 29BE  
                  __end_of_StartCondition 68E2                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F0  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 008A  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0034  
                            _isupper$6638 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0032                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 0048                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 67FA  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03A8                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5C72  
                                __ptext11 65CE                                  __ptext20 6472  
                                __ptext12 4AA4                                  __ptext21 5D9A  
                                __ptext13 664C                           ??_UartWriteByte 007E  
                                __ptext30 61FE                                  __ptext22 5AE8  
                                __ptext14 3108                                  __ptext31 5DE0  
                                __ptext23 5850                                  __ptext15 522C  
                                __ptext40 34FE                                  __ptext32 6524  
                                __ptext24 68D0                                  __ptext16 0DC8  
                                __ptext41 42D8                                  __ptext33 271A  
                                __ptext25 6502                                  __ptext17 66BC  
                                __ptext50 2FE4                                  __ptext42 2EB6  
                                __ptext34 4BD0                                  __ptext26 67D6  
                                __ptext18 4E18                                  __ptext51 3CA6  
                                __ptext43 1648                                  __ptext35 5D0A  
                                __ptext27 68D6                                  __ptext19 3BDA  
                                __ptext60 00D0                                  __ptext52 4158  
                                __ptext44 55D8                                  __ptext36 4EA6  
                                __ptext28 1E98                                  __ptext61 35E4  
                                __ptext53 388A                                  __ptext45 438A  
                                __ptext37 322A                                  __ptext29 60EA  
                                __ptext70 6568                                  __ptext62 670A  
                                __ptext54 2B06                                  __ptext46 529C  
                                __ptext38 48D0                                  __ptext71 5E68  
                                __ptext63 60AE                                  __ptext55 13A4  
                                __ptext47 5E24                                  __ptext39 36CA  
                                __ptext80 18DC                                  __ptext72 4594  
                                __ptext64 1B0A                                  __ptext56 5FF4  
                                __ptext48 4A0C                                  __ptext81 5148  
                                __ptext73 5EAC                                  __ptext65 6722  
                                __ptext57 5694                                  __ptext49 5444  
                                __ptext90 5B88                                  __ptext82 4FBC  
                                __ptext74 4B3A                                  __ptext66 63D4  
                                __ptext58 3B0C                                  __ptext91 65EE  
                                __ptext83 681C                                  __ptext75 421A  
                                __ptext67 62C2                                  __ptext59 6292  
                                __ptext92 6496                                  __ptext84 54AA  
                                __ptext76 3962                                  __ptext68 6546  
                                __ptext93 67E8                                  __ptext85 4C64  
                                __ptext77 658A                                  __ptext69 6230  
                                __ptext94 66D6                                  __ptext86 676A  
                                __ptext78 58A4                                  __ptext95 443A  
                                __ptext87 4830                                  __ptext79 680C  
                                __ptext96 496E                                  __ptext88 6780  
                                __ptext97 66F0                                  __ptext89 5308  
                                __ptext98 6426                                  __ptext99 59F4  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 6686                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 4FBC                     __end_of_HttpGetMethod 0ABC  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 002F                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 64BA  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 4F32  
                           __size_of_main 000C               ??_initMemorizedNumbersCount 0096  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 008F                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                            ?_findEmptySpot 0001  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 68B8  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 68D0  
                      ??_USBCtrlEPService 0097                                  _isxdigit 60AE  
                           _Mdm_IsRinging 6496                       _USBCtrlTrfInHandler 4158  
                I2c_ReadData@I2cReadState 0033                __end_of_Mdm_RequestSmsData 683C  
                   __end_of_ScheduleTasks 322A                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5444                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3CA6                       ??_Mdm_IsSmsReceived 0081  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 03FF  
                              strtol@sign 0093                           Term_MainSm@Data 046B  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 6124  
                __end_of_Mcu_ConfigExtInt 66BC                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C7                  CDCTxService@byte_to_send 0085  
                           ?_Eeprom_Write 008F             I2c_WriteData@TentativeCounter 0035  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 65CE  
                __end_of_Led_SetLedStatus 6322                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 58A4                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 64DE                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 4D88  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0152  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5636  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 55D8                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2D84  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                   __end_ofMyApp_Task@F9033 FC1E  
                 __end_ofMyApp_Task@F9036 FC28                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01D6  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009E  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 5F34  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 615E                  __end_of_Rtcm_GetRtccDate 5510  
                             _putUSBUSART 6568                 Eeprom_Write@CommandLength 0095  
                     _USBCtrlTrfRxService 2FE4                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 60EA  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 1648  
                __end_of_OsTmr_StartTimer 5694                      _LedPulseStateMachine 3416  
                      _USBCheckCDCRequest 438A                       _USBCtrlTrfTxService 388A  
                     RtccIrqInit@Priority 007D                 _initMemorizedNumbersCount 66F0  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 0092                          _Rtcc_AlarmConfig 5308  
                         ??_Tmr_TmrBPrSet 009A                           ??_waitSetupCall 0093  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01DD                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 5D9A                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 63D4                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00C9                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 0127                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 46E6  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                           ??_findEmptySpot 00B0  
                           _StopCondition 68DA                  MyApp_Task@receivedNumber 04E0  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00C8  
                        Mdm_IsRinging@Ret 0081                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 61CA                      __end_of_CDCTxService 2C4C  
                      ??_isNumberInMemory 00B0                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2E  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F2                   _UsbMasterPhoneNumberLen 031A  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 67D6  
